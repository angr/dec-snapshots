{"4198400:_init": "extern struct_0 *g_405a64;\n
\n
int _init()\n
{\n
    if (g_405a64)\n
    {\n
        g_405a64();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4198480:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198496:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198512:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4198528:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198576:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198608:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198624:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4198640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198656:sub_401100": "int sub_401100()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198662:sub_401106": null, "4198672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198715:sub_40113b": null, "4198716:sub_40113c": "int sub_40113c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198724:sub_401144": null, "4198736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18715;\n
    v6 = v5 + 17;\n
    v7 = v5 + 17;\n
    if (v7 == v6)\n
        return v5 + 17;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198787:sub_401183": "int sub_401183()\n
{\n
}\n
", "4198793:sub_401189": "int sub_401189()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18651;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 17;\n
    v9 = (v6 + 17 - (v6 + 17) >> 31) + (17 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198871:sub_4011d7": "int sub_4011d7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405a60;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405a60)\n
    {\n
        v0 = __dso_handle;\n
        sub_401100();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198955:sub_40122b": "int sub_40122b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198973:sub_40123d": null, "4198976:cgc_promptc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptc(unsigned int v4, unsigned short a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v1 = \"TY\";\n
    v2 = a1;\n
    v0 = cgc_strlen();\n
    if (cgc_sendall(1, v2) < 0)\n
        cgc__terminate();\n
    v0 = a0;\n
    v6 = cgc_recvline(0, v4);\n
    if (v6 >= 0)\n
        return v6;\n
    v0 = 30;\n
    if (cgc_sendline(1, v1 - 6760) < 0)\n
        cgc__terminate();\n
    v6 = cgc__terminate();\n
    return v6;\n
}\n
", "4199194:sub_40131a": null, "4199200:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"TY\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(v5, a0, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a0 = v3 + a0;\n
            v2 = v3 + v2;\n
            a1 -= v3;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199411:sub_4013f3": null, "4199424:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4199476:sub_401434": null, "4199488:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = \"TY\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 10)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 10)\n
        {\n
            v4 = -2;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4199751:sub_401547": null, "4199760:cgc_sendline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendline(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"TY\";\n
    v2 = cgc_sendall(v5, a0, a1);\n
    if (v2 < 0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = &a1;\n
    if (cgc_transmit(v5, v1 - 6729, 1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 += 1;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4199921:sub_4015f1": null, "4199936:cgc_recv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // ecx\n
\n
    v1 = \"TY\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4200143:sub_4016cf": null, "4200144:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); a0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - v1 - 1;\n
}\n
", "4200235:sub_40172b": null, "4200240:cgc_strncpy": "int cgc_strncpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - v2 < a1)\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    v3 = v1;\n
    v1 = v3 + 1;\n
    *(v3) = 0;\n
    return -1 + v1 - v2;\n
}\n
", "4200377:sub_4017b9": null, "4200384:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"TY\";\n
    for (v1 = v2; *(v1); v1 += 1);\n
    cgc_strcpy(v1, a0);\n
    return v2;\n
}\n
", "4200474:sub_40181a": null, "4200480:cgc_streq": "int cgc_streq(char *v3, char *a0)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(a0);\n
    v2 = v0 & 1;\n
    return v2;\n
}\n
", "4200652:sub_4018cc": null, "4200656:cgc_startswith": "int cgc_startswith(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
        {\n
            v1 = !*(a0);\n
            return v1;\n
        }\n
        if (*(v2) != *(a0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
}\n
", "4200802:sub_401962": null, "4200816:cgc_uint2str": "int cgc_uint2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // ecx\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v1 = (0 CONCAT v1) /m 10;\n
    } while (v1 > 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v5 = v2;\n
    v2 = v5 + 1;\n
    v5[v4] = 0;\n
    do\n
    {\n
        v0 = (0 CONCAT a1) /m 10 >> 32;\n
        v6 = v2;\n
        v2 = v6 - 1;\n
        *((v4 + v6)) = v0 + 48;\n
        a1 = (0 CONCAT a1) /m 10;\n
    } while (a1 > 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4201024:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4201297:sub_401b51": null, "4201312:cgc_str2uint": "int cgc_str2uint(unsigned int v5)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    if (!v5)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (*((v5 + v0)) != 48 && *((v5 + v0)) != 49 && *((v5 + v0)) != 50 && *((v5 + v0)) != 51 && *((v5 + v0)) != 52 && *((v5 + v0)) != 53 && *((v5 + v0)) != 54 && *((v5 + v0)) != 55 && *((v5 + v0)) != 56 && *((v5 + v0)) != 57)\n
            break;\n
        v3 *= 10;\n
        v2 = v0[v5] - 48;\n
        v3 = v2 + v3;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4201652:sub_401cb4": null, "4201664:cgc_memset": "int cgc_memset(unsigned int v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v1;\n
}\n
", "4201730:sub_401d02": null, "4201744:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v1;\n
}\n
", "4201816:sub_401d58": null, "4201824:cgc_b2hex": "int cgc_b2hex(char v0, char a0[3])\n
{\n
    if (v0 >> 4 < 10)\n
        a0[0] = (v0 >> 4) + 48;\n
    else\n
        a0[0] = (v0 >> 4) - -55;\n
    if ((v0 & 15) < 10)\n
        a0[1] = (v0 & 15) + 48;\n
    else\n
        a0[1] = (v0 & 15) - -55;\n
    a0[2] = 0;\n
    return a0;\n
}\n
", "4201963:sub_401deb": null, "4201968:cgc_strchr": "int cgc_strchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4202056:sub_401e48": null, "4202064:cgc___umoddi3": "int cgc___umoddi3(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    return v0 - a0 * (v1 >> 31 CONCAT v1) /m a0;\n
}\n
", "4202103:sub_401e77": null, "4202112:cgc_sleep": "int cgc_sleep(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
\n
    v1 = v3;\n
    v2 = 0;\n
    v0 = 0;\n
    return cgc_fdwait(0, 0, 0, &v1);\n
}\n
", "4202198:sub_401ed6": null, "4202208:cgc_memcmp": "int cgc_memcmp(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[v2] != v0[a0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4202316:sub_401f4c": null, "4202320:cgc_additive": "int cgc_additive(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned long long v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // eax\n
\n
    v1 = 14593470;\n
    v0 = 4022403054;\n
    if ((a0 & 7))\n
    {\n
        v3 = *(&v0);\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < a0; v2 += 8)\n
    {\n
        v5 = v4;\n
        v6 = v2;\n
        v7 = *((v5 + v6));\n
        v9 = v0;\n
        tmp_8 = v9;\n
        v11 = v1 + *((4 + v5 + v6)) + (tmp_8 + v7 < tmp_8);\n
        v0 = v9 + v7;\n
        v1 = v11;\n
    }\n
    v3 = *(&v0);\n
    return v3;\n
}\n
", "4202461:sub_401fdd": null, "4202464:cgc_addxoradd": "int cgc_addxoradd(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_8;  // tmp #8\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned long long v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int *v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int *v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // esi\n
    unsigned int v18;  // ecx\n
    unsigned int v20;  // eax\n
\n
    v1 = 3224433;\n
    v0 = 1472266222;\n
    if ((a0 & 7))\n
    {\n
        v3 = *(&v0);\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < a0; v2 += 2)\n
    {\n
        v5 = v4;\n
        v6 = v2;\n
        v7 = *((v5 + v6));\n
        v9 = v0;\n
        tmp_8 = v9;\n
        v11 = v1 + *((4 + v5 + v6)) + (tmp_8 + v7 < tmp_8);\n
        v0 = v9 + v7;\n
        v1 = v11;\n
        v12 = v4;\n
        v13 = v2;\n
        v1 ^= *((4 + v12 + v13));\n
        v0 ^= *((v12 + v13));\n
        v14 = v4;\n
        v15 = v2;\n
        v16 = *((v14 + v15));\n
        v18 = v0;\n
        tmp_38 = v18;\n
        v20 = v1 + *((4 + v14 + v15)) + (tmp_38 + v16 < tmp_38);\n
        v0 = v18 + v16;\n
        v1 = v20;\n
    }\n
    v3 = *(&v0);\n
    return v3;\n
}\n
", "4202663:sub_4020a7": null, "4202672:cgc_updatecrc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_calcd;\n
\n
int cgc_updatecrc(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
\n
    v0 = \"TY\";\n
    v1 = a1;\n
    if (!cgc_calcd)\n
        cgc_compute_me_crc(v3, a0);\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v1 = *((v0 + (v1 ^ v3[v2]) * 4 + 72)) ^ v1 >> 8;\n
    }\n
    return v1;\n
}\n
", "4202816:cgc_crc32": "int cgc_crc32(char *v0, unsigned int a0)\n
{\n
    return cgc_updatecrc(v0, a0, 2940141585) ^ -1;\n
}\n
", "4202876:sub_40217c": null, "4202880:cgc_fpadditive": "int cgc_fpadditive(unsigned int v4, unsigned long long *a0)\n
{\n
    unsigned long v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x1c], Other Possible Types: unsigned long long\n
    unsigned long long *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned long v3;  // [bp-0xc]\n
    unsigned long long *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 4614256655080292474;\n
    v5 = a0 & 3;\n
    if (v5)\n
    {\n
        *(&v3) = v1;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v5 = v2;\n
            if (v5 >= a0)\n
                break;\n
            s_1c =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+4, size=4, endness=Iend_LE) + Load(addr=stack_base-16, size=4, endness=Iend_LE)), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-28, size=8, endness=Iend_LE))))<8>\n
            v2 += 1;\n
        }\n
        *(&v3) = *(&v1);\n
    }\n
    *(&v0) = *(&v3);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v5;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v5;\n
}\n
", "4203029:sub_402215": null, "4203040:cgc_calc_me_md5": null, "4203268:sub_402304": null, "4203280:cgc_md5": "typedef struct struct_0 {\n
    unsigned int field_-1a28;\n
    unsigned int field_-1a24;\n
    unsigned int field_-1a20;\n
    unsigned int field_-1a1c;\n
    char padding_-1a18[6380];\n
    unsigned int field_-12c;\n
    unsigned int field_-128;\n
    unsigned int field_-124;\n
    unsigned int field_-120;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_md5(unsigned int v31, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xe4]\n
    unsigned int v1;  // [bp-0xe0]\n
    unsigned int v2;  // [bp-0xdc]\n
    unsigned int v3;  // [bp-0xd8]\n
    struct_0 *v4;  // [bp-0xd4]\n
    char v5;  // [bp-0xd0]\n
    char v6;  // [bp-0xb0]\n
    char v7;  // [bp-0xa8]\n
    unsigned int v8;  // [bp-0xa0]\n
    unsigned int v9;  // [bp-0x9c]\n
    unsigned int v10;  // [bp-0x98]\n
    unsigned int v11;  // [bp-0x94]\n
    unsigned int v12;  // [bp-0x90]\n
    unsigned int v13;  // [bp-0x8c]\n
    unsigned int v14;  // [bp-0x88]\n
    unsigned int v15;  // [bp-0x84]\n
    unsigned int v16;  // [bp-0x80]\n
    unsigned int v17;  // [bp-0x7c]\n
    unsigned int v18;  // [bp-0x78]\n
    unsigned int v19;  // [bp-0x74]\n
    char v20;  // [bp-0x70]\n
    char v21;  // [bp-0x30]\n
    unsigned short v22;  // [bp-0x2a]\n
    unsigned short v23;  // [bp-0x28]\n
    unsigned short v24;  // [bp-0x26]\n
    void* v25;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v26;  // [bp-0x20]\n
    unsigned short *v27;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct struct_1 **v28;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v29;  // [bp-0x14]\n
    unsigned int v30;  // [bp-0x8]\n
    unsigned int v32;  // ebx\n
    struct_0 *v33;  // ebx\n
    unsigned int v34;  // eax\n
\n
    v30 = v32;\n
    v4 = &\"TY\";\n
    memset(&v20, 0, 64);\n
    v33 = v4;\n
    v16 = *(&v33[1].padding_-1a18[268]);\n
    v17 = *(&v33[1].padding_-1a18[264]);\n
    v18 = *(&v33[1].padding_-1a18[260]);\n
    v19 = *(&v33[1].padding_-1a18[0x100]);\n
    v12 = *(&v33[1].padding_-1a18[268]);\n
    v13 = *(&v33[1].padding_-1a18[264]);\n
    v14 = *(&v33[1].padding_-1a18[260]);\n
    v15 = *(&v33[1].padding_-1a18[0x100]);\n
    v8 = *(&v33->padding_-1a18[284]);\n
    v9 = *(&v33->padding_-1a18[280]);\n
    v10 = *(&v33->padding_-1a18[276]);\n
    v11 = *(&v33->padding_-1a18[272]);\n
    memcpy(&v5, &v33[1].padding_-1a18[252], 48);\n
    cgc_calc_me_md5();\n
    v29 = ((a0 + 2 >> 6) + 1) * 64;\n
    if (cgc_allocate(v29, 0))\n
    {\n
        if (cgc_sendline(1, &v4[1].padding_-1a18[204], 12) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memset(*(&v21), 0, v29);\n
    cgc_memcpy(*(&v21), v31, a0);\n
    *(*(&v21) + a0) = 128;\n
    v28 = a0 * 8;\n
    cgc_memcpy(*(&v21) + v29 - 8, &v28, 4);\n
    for (v25 = 0; v25 < v29 >> 6; v25 += 1)\n
    {\n
        cgc_memcpy(&v20, *(&v21) + v25 * 64, 64);\n
        for (v28 = 0; v28 < 4; v28 += 1)\n
        {\n
            v24 = *(&(&v6)[2 * v28]);\n
            v23 = *(&(&v7)[2 * v28]);\n
            for (v27 = 0; v27 < 16; v27 += 1)\n
            {\n
                v22 = v27 * v24 + v23 & 15;\n
                v2 = v17;\n
                v0 = v16;\n
                v3 = v0 + (&v8)[v28](v17, v18) + *(&v4->padding_-1a18[1080 + 64 * v28 + 4 * v27]) + *(&(&v20)[4 * v22]) << (*(&(&v5)[8 * v28 + 2 * (v27 & 3)]) & 31);\n
                v1 = v16;\n
                v26 = v2 + (v3 | v1 + (&v8)[v28](v17, v18) + *(&v4->padding_-1a18[1080 + 64 * v28 + 4 * v27]) + *(&(&v20)[4 * v22]) >> (32 - *(&(&v5)[8 * v28 + 2 * (v27 & 3)]) & 31));\n
                v16 = v19;\n
                v19 = v18;\n
                v18 = v17;\n
                v17 = v26;\n
            }\n
        }\n
        for (v28 = 0; v28 < 4; v28 += 1)\n
        {\n
            v34 = v28;\n
            (&v12)[v34] = (&v16)[v28] + (&v12)[v34];\n
            (&v16)[v28] = (&v12)[v28];\n
        }\n
    }\n
    return cgc_memcpy(a1, &v12, 16);\n
}\n
", "4204400:cgc_F": "int cgc_F(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 & a0 | (v0 ^ -1) & a1;\n
}\n
", "4204431:sub_40278f": null, "4204432:cgc_G": "int cgc_G(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 & a1 | a0 & (a1 ^ -1);\n
}\n
", "4204465:sub_4027b1": null, "4204480:cgc_H": "int cgc_H(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 ^ a0 ^ a1;\n
}\n
", "4204503:sub_4027d7": null, "4204512:cgc_I": "int cgc_I(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return a0 ^ (v0 | a1 ^ -1);\n
}\n
", "4204542:sub_4027fe": null, "4204544:cgc_compute_me_crc": "typedef struct struct_0 {\n
    char padding_0[1352];\n
    char field_548;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compute_me_crc()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &\"TY\";\n
    for (v3 = 0; v3 < 0x100; v3 += 1)\n
    {\n
        v1 = v3;\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if ((v1 & 1))\n
                v1 = v1 >> 1 ^ 3988292384;\n
            else\n
                v1 >>= 1;\n
        }\n
        *((72 + &v0->padding_0[0] + 0x4 * v3)) = v1;\n
    }\n
    v0->field_548 = 1;\n
    return v0;\n
}\n
", "4204715:sub_4028ab": null, "4204720:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xd0]\n
    unsigned int v1;  // [bp-0xcc]\n
    char *v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xc4]\n
    void* v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"TY\";\n
    v5 = 0;\n
    v4 = 0;\n
    memset(&v3, 0, 176);\n
    if (cgc_random(v1 + 1364, 4))\n
    {\n
        if (cgc_sendline(1, v1 - 6576, 21) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (cgc_recv(0, &v3, 176) < 0)\n
    {\n
        if (cgc_sendline(1, v1 - 6760, 30) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = cgc_process_pkt();\n
    v0 = v2;\n
    if (cgc_sendline(1, v0, cgc_strlen(v2)) < 0)\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4205184:cgc_process_pkt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xd0]\n
    unsigned int v1;  // [bp-0xcc]\n
    char *v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xc4]\n
    void* v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"TY\";\n
    v5 = 0;\n
    v4 = 0;\n
    memset(&v3, 0, 176);\n
    if (cgc_random(v1 + 1364, 4))\n
    {\n
        if (cgc_sendline(1, v1 - 6576, 21) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (cgc_recv(0, &v3, 176) < 0)\n
    {\n
        if (cgc_sendline(1, v1 - 6760, 30) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = cgc_process_pkt();\n
    v0 = v2;\n
    if (cgc_sendline(1, v0, cgc_strlen(v2)) < 0)\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4206096:cgc_admin_add_login": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_admin_add_login(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x94]\n
    char v1;  // [bp-0x8d]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"TY\";\n
    v2 = v5->field_4;\n
    memset(&v1, 0, 128);\n
    if (v2 > 127)\n
    {\n
        v3 = v0 - 6500;\n
        return v3;\n
    }\n
    cgc_memcpy(&v1, &v5->field_4, v2);\n
    v3 = v0 - 6500;\n
    return v3;\n
}\n
", "4206266:sub_402eba": null, "4206272:cgc_admin_addxoradd_login": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_admin_addxoradd_login(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"TY\";\n
    memset(&v1, 0, 5);\n
    if (cgc_startswith(v3 + 4, v0 - 6455))\n
    {\n
        cgc_strcpy(&v1, v3 + 4);\n
        return v0 - 6500;\n
    }\n
    return v0 - 6500;\n
}\n
", "4206401:sub_402f41": null, "4206416:cgc_admin_crc_login": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_admin_crc_login(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    char v1;  // [bp-0x4e]\n
    char v2;  // [bp-0x4d]\n
    char v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = \"TY\";\n
    memset(&v3, 0, 64);\n
    v2 = v6->field_4;\n
    if (v2 > 64)\n
    {\n
        v4 = v0 - 6500;\n
        return v4;\n
    }\n
    v2 -= 4;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&v3)[v1] = (&v6->field_4)[v1];\n
    }\n
    v4 = v0 - 6500;\n
    return v4;\n
}\n
", "4206592:cgc_admin_fp_login": "typedef struct struct_0 {\n
    unsigned long long field_-19c8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned long long field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_admin_fp_login(struct_1 *v6)\n
{\n
    struct_0 *v0;  // [bp-0x78]\n
    unsigned long v1;  // [bp-0x74]\n
    unsigned long v2;  // [bp-0x6c], Other Possible Types: unsigned long long\n
    unsigned long long *v3;  // [bp-0x60], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x5c]\n
    unsigned int v5;  // [bp-0x8]\n
\n
    v0 = &\"TY\";\n
    v3 = 0;\n
    *(&v1) = *(&(&v6->padding_0)[1]);\n
    if (((CmpF(*(&v1), 4607632823798750731) & 69 | ((CmpF(*(&v1), 4607632823798750731) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = &v0[812].field_-19c8 + 4;\n
        return v5;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (((CmpF(*(&v1), *(&v2)) & 69 | ((CmpF(*(&v1), *(&v2)) & 69) >> 6)) & 1) == 1)\n
            break;\n
        *((&v4 + 0x8 * v3)) = *((4 + &v6->padding_0[0] + 0x8 * v3));\n
        s_6c =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base-120, size=4, endness=Iend_LE) - 0x19c8<32>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-108, size=8, endness=Iend_LE))))<8>\n
        v3 = v3 + 1;\n
    }\n
    v5 = &v0[812].field_-19c8 + 4;\n
    return v5;\n
}\n
", "4206780:sub_4030bc": null, "4206784:cgc_admin_md5_login": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_admin_md5_login(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x8c]\n
    char v1;  // [bp-0x88]\n
    char v2;  // [bp-0x5]\n
\n
    v0 = \"TY\";\n
    for (v2 = 0; v2 < v3->field_9; v2 += 1)\n
    {\n
        *(&(&v1)[4 * v2]) = *(&v3[1].padding_0[4 * v2]);\n
    }\n
    return v0 - 6500;\n
}\n
", "4206892:sub_40312c": null, "4206896:cgc_getv": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_resp;\n
extern unsigned int valvepos;\n
\n
int cgc_getv(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"TY\";\n
    cgc_uint2str(&cgc_resp, 11, valvepos);\n
    v4 = v1;\n
    return v0 + 1353;\n
}\n
", "4206968:sub_403178": null, "4206976:cgc_setv": "typedef struct struct_0 {\n
    char padding_0[1364];\n
    unsigned int field_554;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_setv(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &\"TY\";\n
    v4 = v0;\n
    v4->field_554 = cgc_str2uint(v2 + 4);\n
    v6 = v1;\n
    return &v4[4].padding_0[971];\n
}\n
", "4207038:sub_4031be": null, "4207040:cgc_gett": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gett(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"TY\";\n
    v1 = 0;\n
    if (cgc_random(&v1, 4, 0, \"TY\", 0, v4))\n
    {\n
        if (cgc_sendline(1, v0 - 6576, 21) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_uint2str(v0 + 1353, 11, v1);\n
    return v0 + 1353;\n
}\n
", "4207229:sub_40327d": null, "4207232:cgc_redacted": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int valvepos;\n
\n
int cgc_redacted(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"TY\";\n
    cgc_memcpy(&valvepos, v2 + 1, v2->field_4);\n
    v4 = v1;\n
    return v0 - 6500;\n
}\n
", "4207312:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_fabs": null, "5242884:cgc_pow": null, "5242888:__libc_start_main": null, "5242892:memcpy": null, "5242896:cgc_fdwait": null, "5242900:cgc__terminate": null, "5242904:cgc_transmit": null, "5242908:cgc_random": null, "5242912:cgc_allocate": null, "5242916:memset": null, "5242920:cgc_sin": null, "5242924:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}