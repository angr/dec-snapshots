{"4198400:sub_401000": "int sub_401000(char *v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(v0); v0 += 1);\n
    return v0 - v3;\n
}\n
", "4198455:sub_401037": null, "4198464:sub_401040": "int sub_401040(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    v0 = &v1;\n
    for (v3 = v2; a0 > 0; a0 = v3)\n
    {\n
        v4 = v2;\n
        v2 = v4 + 1;\n
        *(v4) = 0;\n
        v3 = a0 + 1;\n
    }\n
    return v3;\n
}\n
", "4198513:sub_401071": null, "4198528:sub_401080": "int sub_401080(char *v2, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_24;  // tmp #24\n
    char v1;  // [bp+0x0]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v0 = &v1;\n
    for (v3 = v2; a1 > 0; a1 = v3)\n
    {\n
        v4 = a0;\n
        a0 = v4 + 1;\n
        tmp_24 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        *(v5) = tmp_24;\n
        v3 = a1 + 1;\n
    }\n
    return v3;\n
}\n
", "4198592:sub_4010c0": "int sub_4010c0(char *v6)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45 && !v1)\n
        {\n
            v2 = 1;\n
            continue;\n
        }\n
        if (*(v6) < 48)\n
        {\n
LABEL_40114f:\n
            v3 = v0;\n
            return v3;\n
        }\n
        if (!(*(v6) <= 57))\n
            goto LABEL_40114f;\n
        v0 = v0 * 10 + *(v6) - 48;\n
        v1 += 1;\n
        v6 += 1;\n
        if (v1 > 10)\n
        {\n
            v3 = v0;\n
            return v3;\n
        }\n
    }\n
    if (v2)\n
    {\n
        v3 = v0 * -1;\n
        return v3;\n
    }\n
    v3 = v0;\n
    return v3;\n
}\n
", "4198847:sub_4011bf": null, "4198848:sub_4011c0": "int sub_4011c0(char v4[2])\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (!*(v4))\n
            v0 = *((v4 + 1));\n
        if (!(v0 & 1))\n
            break;\n
        if (!v4[1])\n
            v1 += 1;\n
        v4 = &v4[1];\n
    }\n
    return v1;\n
}\n
", "4198963:sub_401233": null, "4198976:sub_401240": "int sub_401240(char *v4)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    for (v0 = v4; *(v0); v0 += 1);\n
    v0 += 1;\n
    if (!*(v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199072:sub_4012a0": "int sub_4012a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    sub_4012d0(\"+s\\n
\", v0);\n
    cgc__terminate(-1, v0);\n
    return sub_4012d0();\n
}\n
", "4199120:sub_4012d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4012d0(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char v4;  // [bp+0x8]\n
\n
    v1 = &v2;\n
    v0 = &v4;\n
    return sub_4015a0(v3, v0, &v4);\n
}\n
", "4199158:sub_4012f6": null, "4199168:sub_401300": "int sub_401300(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    for (v6 = v5; a0 > 0; v5 = v6)\n
    {\n
        v0 = &v2;\n
        v1 = cgc_receive(0, v5, a0);\n
        if (v1)\n
            sub_4012a0(\"failed during receive\");\n
        if (!*(&v2))\n
            sub_4012a0(\"zero bytes received\");\n
        a0 -= *(&v2);\n
        v6 = *(&v2) + v5;\n
    }\n
    return v6;\n
}\n
", "4199306:sub_40138a": null, "4199312:sub_401390": "int sub_401390(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (a0 == 1)\n
        v4 >>= 4;\n
    v0 = (v4 & 15) - 10;\n
    switch (v0)\n
    {\n
    case 0:\n
        v1 = 65;\n
        return v1;\n
    case 1:\n
        v1 = 66;\n
        return v1;\n
    case 2:\n
        v1 = 67;\n
        return v1;\n
    case 3:\n
        v1 = 68;\n
        return v1;\n
    case 4:\n
        v1 = 69;\n
        return v1;\n
    case 5:\n
        v1 = 70;\n
        return v1;\n
    default:\n
        v1 = (v4 & 15) + 48;\n
        return v1;\n
    }\n
}\n
", "4199454:sub_40141e": null, "4199456:sub_401420": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401420(char *v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x44], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    int tmp_17;  // tmp #17\n
    void* v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x36]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = &v5;\n
    for (v2 = 0; v2 < a0; v2 += v1)\n
    {\n
        sub_401040(&v3, 0x32);\n
        v0 = 0;\n
        for (v1 = 0; v1 < 16; v1 += 1)\n
        {\n
            if (v2 + v1 >= a0)\n
                break;\n
            tmp_19 = sub_401390(*(v6 + v2 + v1), 1);\n
            v7 = v0;\n
            v0 = v7 + 1;\n
            (&v3)[v7] = tmp_19;\n
            tmp_17 = sub_401390(*(v6 + v2 + v1), 0);\n
            v8 = v0;\n
            v0 = v8 + 1;\n
            (&v3)[v8] = tmp_17;\n
            v9 = v0;\n
            v0 = v9 + 1;\n
            (&v3)[v9] = 32;\n
        }\n
        (&v3)[v0] = 10;\n
        sub_401000(&v3);\n
        sub_401530(&v3);\n
    }\n
    return v2;\n
}\n
", "4199727:sub_40152f": null, "4199728:sub_401530": "int sub_401530(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    for (v6 = v5; a0 > 0; a0 = v6)\n
    {\n
        v0 = &v2;\n
        v1 = cgc_transmit(1, v5, a0);\n
        if (v1)\n
            cgc__terminate();\n
        v5 = *(&v2) + v5;\n
        v6 = a0 - *(&v2);\n
    }\n
    return v6;\n
}\n
", "4199838:sub_40159e": null, "4199840:sub_4015a0": "typedef struct struct_0 {\n
    char field_0;\n
    struct struct_1 *field_1;\n
    unsigned int field_5;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_4015a0(struct_0 *v22, unsigned int *a0)\n
{\n
    int tmp_3;  // tmp #3\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    char v6;  // [bp-0x4b]\n
    char v7;  // [bp-0x4a]\n
    char v8;  // [bp-0x41]\n
    unsigned int v9;  // [bp-0x40]\n
    char *v10;  // [bp-0x3c]\n
    struct_2 *v11;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    char v14;  // [bp-0x2b]\n
    struct_2 *v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x18]\n
    char v18;  // [bp-0x13]\n
    struct_0 *v19;  // [bp-0x8]\n
    unsigned int v20;  // [bp-0x4]\n
    char v21;  // [bp+0x0]\n
    unsigned int v23;  // eax\n
    unsigned int *v24;  // eax\n
    unsigned int *v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int *v27;  // eax\n
    unsigned int *v28;  // eax\n
    struct_2 *v29;  // eax\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // eax\n
    struct_2 *v32;  // eax\n
    unsigned int v33;  // eax\n
    unsigned int v34;  // eax\n
\n
    v20 = &v21;\n
    if (!v22)\n
        return v22;\n
    while (true)\n
    {\n
        v23 = v22->field_0;\n
        if (!v23)\n
            return v22->field_0;\n
        v19 = v22;\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (*(v22) != 43)\n
                v2 = *(v22);\n
            if (!(v2 & 1))\n
                break;\n
            v22 += 1;\n
        }\n
        sub_401530(v19, v22 - v19);\n
        if (*(v22) == 43)\n
        {\n
            v22 += 1;\n
            v1 = v22->field_0;\n
            if (v1 == 33)\n
            {\n
                v4 = *(&(&v22->field_0)[1]);\n
                v3 = *((&v22->field_1 + 1));\n
                *(v4) = v3;\n
            }\n
            else if (v1 == 43)\n
            {\n
                sub_401530(\"+\", 1);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v24 = a0;\n
                a0 = v24 + 1;\n
                v17 = *(v24);\n
                if (v17 < 0)\n
                {\n
                    sub_401530(\"-\", 1);\n
                    v17 = -(v17);\n
                }\n
                v16 = v17;\n
                if (!v17)\n
                {\n
                    v15 = 1;\n
                }\n
                else\n
                {\n
                    for (v15 = 0; v16; v16 = (v30 >> 31 CONCAT v30) /m 10)\n
                    {\n
                        v15 += 1;\n
                        v30 = v16;\n
                    }\n
                }\n
                v16 = v17;\n
                v32 = v15;\n
                v15 = v32 + 1;\n
                for (*((&v18 + v32)) = 0; v15 >= 0; v16 = (v34 >> 31 CONCAT v34) /m 10)\n
                {\n
                    v33 = v15;\n
                    v15 = v33 - 1;\n
                    (&v18)[v33] = ((v16 >> 31 CONCAT v16) /m 10 >> 32) + 48;\n
                    v34 = v16;\n
                }\n
                sub_401530(&v18, sub_401000(&v18));\n
            }\n
            else if (v1 == 115)\n
            {\n
                v25 = a0;\n
                a0 = v25 + 1;\n
                v10 = *(v25);\n
                sub_401530(v10, sub_401000(v10));\n
            }\n
            else if (v1 == 117)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v13 = *(v27);\n
                v12 = v13;\n
                if (!v13)\n
                {\n
                    v11 = 1;\n
                }\n
                else\n
                {\n
                    for (v11 = 0; v12; v12 = (0 CONCAT v12) /m 10)\n
                    {\n
                        v11 += 1;\n
                    }\n
                }\n
                v12 = v13;\n
                v29 = v11;\n
                v11 = v29 + 1;\n
                for (*((&v14 + v29)) = 0; v11 >= 0; v12 = (0 CONCAT v12) /m 10)\n
                {\n
                    v31 = v11;\n
                    v11 = v31 - 1;\n
                    (&v14)[v31] = ((0 CONCAT v12) /m 10 >> 32) + 48;\n
                }\n
                sub_401530(&v14, sub_401000(&v14));\n
            }\n
            else\n
            {\n
                v26 = v1;\n
                tmp_3 = v26;\n
                v23 = v26 - 120;\n
                if (tmp_3 != 120)\n
                    return v23;\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v9 = *(v28);\n
                v6 = 48;\n
                v7 = 120;\n
                v8 = 0;\n
                for (v5 = 9; v5 > 1; v5 -= 1)\n
                {\n
                    v0 = (v9 & 15) - 10;\n
                    switch (v0)\n
                    {\n
                    case 0:\n
                        (&v6)[v5] = 65;\n
                        break;\n
                    case 1:\n
                        (&v6)[v5] = 66;\n
                        break;\n
                    case 2:\n
                        (&v6)[v5] = 67;\n
                        break;\n
                    case 3:\n
                        (&v6)[v5] = 68;\n
                        break;\n
                    case 4:\n
                        (&v6)[v5] = 69;\n
                        break;\n
                    case 5:\n
                        (&v6)[v5] = 70;\n
                        break;\n
                    default:\n
                        (&v6)[v5] = (v9 & 15) + 48;\n
                        break;\n
                    }\n
                    v9 >>= 4;\n
                }\n
                sub_401530(&v6, 10);\n
            }\n
            v22 += 1;\n
        }\n
    }\n
}\n
", "4200928:sub_4019e0": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
int sub_4019e0(struct_0 *v3, unsigned int a0, void* a1)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char v4;  // [bp+0x10]\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v5 = v3->field_2 & a0;\n
    if (v5)\n
    {\n
        v0 = &v4;\n
        v5 = sub_4015a0(a1, v0);\n
    }\n
    return v5;\n
}\n
", "4200991:sub_401a1f": null, "4200992:sub_401a20": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    char field_8[2];\n
} struct_0;\n
\n
int sub_401a20(struct_0 *v7)\n
{\n
    int tmp_12;  // tmp #12\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v5 = &v6;\n
    v8 = v7->field_0 - 1;\n
    v1 = v8;\n
    tmp_12 = v8;\n
    v9 = v8 - 6;\n
    switch (tmp_12)\n
    {\n
    case 0:\n
        sub_401530(v7->field_8, sub_401000(v7->field_8));\n
        v9 = sub_401530(\"\\n
\", 1);\n
        return v9;\n
    case 1:\n
        if (sub_4011c0(v7->field_8) != 2)\n
        {\n
            v9 = sub_4012d0(\"Address: +s\\n
\");\n
        }\n
        else\n
        {\n
            v0 = sub_401240(v7->field_8);\n
            v9 = sub_4012d0(\"GPS Coordinates: +s Latitude, +s Longitude\\n
\");\n
            break;\n
        }\n
        return v9;\n
    case 2:\n
        v4 = sub_4010c0(v7->field_8);\n
        if (v4 < 5 && v4 >= 0)\n
        {\n
            v9 = sub_4012d0(\"Capturing Authority: +s\\n
\");\n
            goto LABEL_401b3a;\n
        }\n
        v9 = sub_4012d0(\"Capturing Authority Unknown\\n
\");\n
LABEL_401b3a:\n
        return v9;\n
    case 3:\n
        v9 = sub_4012d0(\"Capture Date: +s\\n
\");\n
        return v9;\n
    case 4:\n
        v3 = sub_4010c0(v7->field_8);\n
        if (v3 != 1)\n
            v9 = sub_4012d0(\"Sharing Allowed: False\\n
\");\n
        else\n
            v9 = sub_4012d0(\"Sharing Allowed: True\\n
\");\n
        return v9;\n
    case 5:\n
        v2 = sub_4010c0(v7->field_8);\n
        if (v2 != 1)\n
            v9 = sub_4012d0(\"This content has not been modified from the original\\n
\");\n
        else\n
            v9 = sub_4012d0(\"This content has been modified\\n
\");\n
        return v9;\n
    case 6:\n
        v9 = sub_4012d0(\"Capturing Device: +s\\n
\");\n
        return v9;\n
    default:\n
        return v9;\n
    }\n
}\n
", "4201477:sub_401c05": null, "4201488:sub_401c10": "typedef struct struct_2 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
int sub_401c10(struct_2 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4012d0(\"Final Statistics:\\n
\");\n
    sub_4012d0(\"\\tTotal Packets: +d\\n
\");\n
    sub_4012d0(\"\\tStart Time: +x\\n
\");\n
    sub_4012d0(\"\\tEnd Time: +x\\n
\");\n
    sub_4012d0(\"\\tLargest Packet: +d\\n
\");\n
    sub_4012d0(\"\\tSmallest Packet: +d\\n
\");\n
    sub_4012d0(\"\\tNumber of malformed packets: +d\\n
\");\n
    sub_4012d0(\"\\tNumber of packets shown +d\\n
\");\n
    sub_4012d0(\"Option Headers:\\n
\");\n
    for (v0 = v3->field_48->field_28; v0; v0 = v0->field_4)\n
    {\n
        sub_401a20(v0);\n
    }\n
    return sub_401530(\"\\n
\", 1);\n
}\n
", "4201787:sub_401d3b": null, "4201792:sub_401d40": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_401d40(struct_1 *v4, struct_0 *a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4->field_0 > a0->field_4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0->field_8)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= v4->field_0)\n
            {\n
                v1 = 1;\n
                return v1;\n
            }\n
            else if ((v0[a0->field_8] & v0[v4->field_4]) == (v0[v4->field_8] & v0[v4->field_4]))\n
            {\n
                v0 += 1;\n
            }\n
            else\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4201998:sub_401e0e": null, "4202000:sub_401e10": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
} struct_0;\n
\n
int sub_401e10(void* v6, struct_1 *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 0; v1 < a0->field_4; v1 += 1)\n
    {\n
        v0 = *((8 + &a0->padding_0[0] + 0x4 * v1));\n
        if (sub_401d40(v0, v6) == 1)\n
        {\n
            if (v0->field_2 != 1)\n
                v2 += 1;\n
            else\n
                v3 += 1;\n
        }\n
    }\n
    *(a1) = v2;\n
    *(a2) = v3;\n
    return a2;\n
}\n
", "4202181:sub_401ec5": null, "4202192:sub_401ed0": "int sub_401ed0(unsigned int v4, unsigned short a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v1 = *((v4 + v0)) + v1;\n
    }\n
    return v1;\n
}\n
", "4202272:sub_401f20": "extern char g_408014;\n
extern char g_408020;\n
\n
int sub_401f20(unsigned int v9, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned short v3;  // [bp-0x14]\n
    unsigned short v4;  // [bp-0x12]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
\n
    v7 = &v8;\n
    v5 = *((*((a0 + 8)) + 8));\n
    if (v5 > *((a0 + 4)))\n
    {\n
        v0 = v5;\n
        v1 = *((a0 + 4));\n
        sub_4019e0(v9, 1, \"Invalid Packet Length: +x (+x)\\n
\");\n
        v6 = -1;\n
        return v6;\n
    }\n
    else if (v5 >= 14)\n
    {\n
        v0 = v5;\n
        sub_4019e0(v9, 1, \"Physical Length:+d\\n
\");\n
        v4 = *((*((a0 + 8)) + 12)) - 1;\n
        if (v4 >= 3)\n
        {\n
            sub_4019e0(v9, 1, \"Invalid Physical Type\\n
\");\n
            v6 = -1;\n
            return v6;\n
        }\n
        v0 = (&g_408014)[v4];\n
        sub_4019e0(v9, 1, \"Physical Type: +s\\n
\");\n
        if (v4)\n
        {\n
            if (v4 != 1)\n
            {\n
                if (v4 == 2)\n
                {\n
                    if ((*((v9 + 2)) & 1))\n
                        sub_401420(*((a0 + 8)) + 14, *((a0 + 4)) - 14);\n
                    v6 = -1;\n
                    return v6;\n
                }\n
                else\n
                {\n
                    v0 = v4;\n
                    sub_4019e0(v9, 1, \"Invalid Physical Type\\n
\");\n
                    v6 = -1;\n
                    return v6;\n
                }\n
            }\n
            if (v5 < 42)\n
            {\n
                v0 = v5;\n
                sub_4019e0(v9, 1, \"Packet too short: +d\\n
\");\n
                v6 = -1;\n
                return v6;\n
            }\n
            v0 = *((*((a0 + 8)) + 14));\n
            sub_4019e0(v9, 1, \"Source Address: +x\\n
\");\n
            v0 = *((*((a0 + 8)) + 18));\n
            sub_4019e0(v9, 1, \"Destination Address: +x\\n
\");\n
            v0 = *((*((a0 + 8)) + 22));\n
            sub_4019e0(v9, 1, \"Transmit strength: +u\\n
\");\n
            v0 = *((*((a0 + 8)) + 26));\n
            sub_4019e0(v9, 1, \"Receive strength: +u\\n
\");\n
            v0 = *((*((a0 + 8)) + 30));\n
            sub_4019e0(v9, 1, \"Frequency: +d\\n
\");\n
            v0 = *((*((a0 + 8)) + 34));\n
            sub_4019e0(v9, 1, \"SNR: +u\\n
\");\n
            v16 = a0;\n
            *((v16 + 8)) = *((v16 + 8)) + 42;\n
            v17 = a0;\n
            *((v17 + 4)) = *((v17 + 4)) - 42;\n
        }\n
        else if (v5 < 20)\n
        {\n
            v0 = v5;\n
            sub_4019e0(v9, 1, \"Packet too short: +d\\n
\");\n
            v6 = -1;\n
            return v6;\n
        }\n
        else\n
        {\n
            v3 = *((*((a0 + 8)) + 14)) - 1;\n
            if (v3 >= 4)\n
            {\n
                sub_4019e0(v9, 1, \"Invalid Wire speed\\n
\");\n
                v6 = -1;\n
                return v6;\n
            }\n
            v0 = (&g_408020)[v3];\n
            sub_4019e0(v9, 1, \"Wire Speed: +s\\n
\");\n
            v2 = *((*((a0 + 8)) + 16));\n
            v10 = a0;\n
            *((v10 + 8)) = *((v10 + 8)) + 20;\n
            v11 = a0;\n
            *((v11 + 4)) = *((v11 + 4)) - 20;\n
            v12 = a0;\n
            *(&v12) = *((v12 + 4));\n
            v13 = sub_401ed0(*((a0 + 8)), v12);\n
            if (v13 != v2)\n
            {\n
                v14 = a0;\n
                *(&v14) = *((v14 + 4));\n
                v15 = sub_401ed0(*((a0 + 8)), v14);\n
                v0 = v2;\n
                v1 = v15;\n
                sub_4019e0(v9, 1, \"Invalid Physical Layer Checksum: got +x, expected +x\\n
\");\n
                v6 = -1;\n
                return v6;\n
            }\n
        }\n
        v6 = 0;\n
        return v6;\n
    }\n
    else\n
    {\n
        v0 = v5;\n
        sub_4019e0(v9, 1, \"Packet too short: +d\\n
\");\n
        v6 = -1;\n
        return v6;\n
    }\n
}\n
", "4203427:sub_4023a3": null, "4203440:sub_4023b0": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned short field_c;\n
    unsigned int field_e;\n
    unsigned int field_12;\n
} struct_0;\n
\n
int sub_4023b0(void* v5, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_1 *v6;  // eax\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // eax\n
\n
    v3 = &v4;\n
    if (a0->field_4 < 4)\n
    {\n
        sub_4019e0(v5, 2, \"Transport Layer too short\\n
\");\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = a0->field_8->field_0;\n
    if (v1 != 1)\n
    {\n
        if (v1 != 2)\n
        {\n
            sub_4019e0(v5, 2, \"Invalid Transport Type\\n
\");\n
            v2 = -1;\n
            return v2;\n
        }\n
        if (a0->field_4 < 8)\n
        {\n
            sub_4019e0(v5, 2, \"Transport Layer too short\\n
\");\n
            v2 = -1;\n
            return v2;\n
        }\n
        sub_4019e0(v5, 2, \"Transport Type: MESSAGE\\n
\");\n
        v0 = a0->field_8->field_4;\n
        sub_4019e0(v5, 2, \"Length: +d\\n
\");\n
        v6 = a0;\n
        v6->field_8 = &v6->field_8->field_8;\n
        v7 = a0;\n
        v7->field_4 = v7->field_4 - 8;\n
    }\n
    else if (a0->field_4 >= 22)\n
    {\n
        sub_4019e0(v5, 2, \"Transport Type: STREAM\\n
\");\n
        v0 = a0->field_8->field_4;\n
        sub_4019e0(v5, 2, \"Stream number: +u\\n
\");\n
        v0 = a0->field_8->field_8;\n
        sub_4019e0(v5, 2, \"Sequence number: +u\\n
\");\n
        v0 = a0->field_8->field_c;\n
        sub_4019e0(v5, 2, \"Window: +d\\n
\");\n
        v0 = *(&(&a0->field_8->field_c)[1]);\n
        sub_4019e0(v5, 2, \"Acknowledgment: +x\\n
\");\n
        v0 = *((&a0->field_8->field_e + 2));\n
        sub_4019e0(v5, 2, \"Length: +d\\n
\");\n
        v8 = a0;\n
        v8->field_8 = &v8->field_8->field_12 + 2;\n
        v9 = a0;\n
        v9->field_4 = v9->field_4 - 22;\n
    }\n
    else\n
    {\n
        sub_4019e0(v5, 2, \"Transport Layer too short\\n
\");\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4204088:sub_402638": null, "4204096:sub_402640": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned int field_8;\n
    unsigned int field_a;\n
    char padding_e[2];\n
    unsigned short field_10;\n
    unsigned int field_12;\n
} struct_0;\n
\n
extern char g_408030;\n
\n
int sub_402640(void* v6, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xc]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // eax\n
    struct_1 *v10;  // eax\n
    struct_1 *v11;  // eax\n
    struct_1 *v12;  // eax\n
\n
    v4 = &v5;\n
    if (a0->field_4 < 6)\n
    {\n
        sub_4019e0(v6, 4, \"Network layer too short\\n
\");\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = a0->field_8->field_4;\n
    if (v2 == 1)\n
    {\n
        sub_4019e0(v6, 4, \"Network type: Endpoint\\n
\");\n
        if (a0->field_4 < 14)\n
        {\n
            sub_4019e0(v6, 4, \"Network layer too short\\n
\");\n
            v3 = -1;\n
            return v3;\n
        }\n
        v0 = *(&a0->field_8->field_6);\n
        sub_4019e0(v6, 4, \"Source Address: +x\\n
\");\n
        v0 = *((&a0->field_8->field_8 + 2));\n
        sub_4019e0(v6, 4, \"Destination Address: +x\\n
\");\n
        v7 = a0;\n
        v7->field_8 = &v7->field_8->field_a + 2;\n
        v8 = a0;\n
        v8->field_4 = v8->field_4 - 14;\n
    }\n
    else if (v2 != 2)\n
    {\n
        if (v2 != 3)\n
        {\n
            sub_4019e0(v6, 4, \"Invalid network type\\n
\");\n
            v3 = -1;\n
            return v3;\n
        }\n
        sub_4019e0(v6, 4, \"Network type: Debug\\n
\");\n
        if (a0->field_4 < 22)\n
        {\n
            sub_4019e0(v6, 4, \"Network layer too short\\n
\");\n
            v3 = -1;\n
            return v3;\n
        }\n
        v1 = a0->field_8->field_6 - 1;\n
        if (v1 >= 6)\n
        {\n
            sub_4019e0(v6, 4, \"Invalid network debug type\\n
\");\n
            v3 = -1;\n
            return v3;\n
        }\n
        v0 = *(&(&g_408030)[4 * v1]);\n
        sub_4019e0(v6, 4, \"Network debug type: +s\\n
\");\n
        v0 = a0->field_8->field_8;\n
        sub_4019e0(v6, 4, \"Source Address: +x\\n
\");\n
        v0 = a0->field_8->field_a;\n
        sub_4019e0(v6, 4, \"Destination Address: +x\\n
\");\n
        v0 = a0->field_8->padding_e;\n
        sub_4019e0(v6, 4, \"Hop Count: +u\\n
\");\n
        v0 = *(&a0->field_8->field_10);\n
        sub_4019e0(v6, 4, \"Timestamp: +u\\n
\");\n
        v11 = a0;\n
        v11->field_8 = &v11->field_8->field_12 + 2;\n
        v12 = a0;\n
        v12->field_4 = v12->field_4 - 22;\n
    }\n
    else\n
    {\n
        sub_4019e0(v6, 4, \"Network type: Broadcast\\n
\");\n
        if (a0->field_4 < 10)\n
        {\n
            sub_4019e0(v6, 4, \"Network layer too short\\n
\");\n
            v3 = -1;\n
            return v3;\n
        }\n
        v0 = *(&a0->field_8->field_6);\n
        sub_4019e0(v6, 4, \"Source Address: +x\\n
\");\n
        v9 = a0;\n
        v9->field_8 = &v9->field_8->field_8 + 2;\n
        v10 = a0;\n
        v10->field_4 = v10->field_4 - 10;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205045:sub_4029f5": null, "4205056:sub_402a00": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned short field_c;\n
} struct_0;\n
\n
int sub_402a00(void* v18, struct_1 *a0)\n
{\n
    struct_2 *v0;  // [bp-0x24c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x247]\n
    unsigned short v2;  // [bp-0x246]\n
    char v3;  // [bp-0x244]\n
    unsigned short v4;  // [bp-0x23e]\n
    char v5;  // [bp-0x23c]\n
    unsigned short v6;  // [bp-0x236]\n
    char v7;  // [bp-0x233]\n
    char v8;  // [bp-0x133]\n
    char v9;  // [bp-0x132]\n
    char v10;  // [bp-0x111]\n
    char v11;  // [bp-0x110]\n
    unsigned short v12;  // [bp-0x10]\n
    unsigned short v13;  // [bp-0xe]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_1 *v19;  // eax\n
    struct_1 *v20;  // eax\n
    struct_1 *v21;  // eax\n
    struct_1 *v22;  // eax\n
    struct_1 *v23;  // eax\n
    struct_1 *v24;  // eax\n
    struct_1 *v25;  // eax\n
    struct_1 *v26;  // eax\n
    struct_1 *v27;  // eax\n
    struct_1 *v28;  // eax\n
    struct_1 *v29;  // eax\n
    struct_1 *v30;  // eax\n
    struct_1 *v31;  // eax\n
    struct_1 *v32;  // eax\n
    struct_1 *v33;  // eax\n
    struct_1 *v34;  // eax\n
    struct_1 *v35;  // eax\n
    struct_1 *v36;  // eax\n
    struct_1 *v37;  // eax\n
    struct_1 *v38;  // eax\n
    struct_1 *v39;  // eax\n
    struct_1 *v40;  // eax\n
    struct_1 *v41;  // eax\n
    struct_1 *v42;  // eax\n
    struct_1 *v43;  // eax\n
    struct_1 *v44;  // eax\n
    struct_1 *v45;  // eax\n
    struct_1 *v46;  // eax\n
    struct_1 *v47;  // eax\n
    struct_1 *v48;  // eax\n
    struct_1 *v49;  // eax\n
    struct_1 *v50;  // eax\n
    struct_1 *v51;  // eax\n
    struct_1 *v52;  // eax\n
    struct_1 *v53;  // eax\n
    struct_1 *v54;  // eax\n
\n
    v16 = &v17;\n
    if (a0->field_4 < 6)\n
    {\n
        sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
        v15 = -1;\n
        return v15;\n
    }\n
    v14 = *(&a0->field_8->field_0);\n
    v13 = a0->field_8->field_4;\n
    if (v13 == 1)\n
    {\n
        sub_4019e0(v18, 8, \"Application type: Audio Stream\\n
\");\n
        if (a0->field_4 < 12)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v0 = a0->field_8->field_6;\n
        sub_4019e0(v18, 8, \"Encoding type: +u\\n
\");\n
        v0 = *(&a0->field_8->field_8);\n
        sub_4019e0(v18, 8, \"Bit rate: +u\\n
\");\n
        v19 = a0;\n
        v19->field_8 = &v19->field_8->field_c;\n
        v20 = a0;\n
        v20->field_4 = v20->field_4 - 12;\n
    }\n
    else if (v13 == 2)\n
    {\n
        sub_4019e0(v18, 8, \"Application type: Video Stream\\n
\");\n
        if (a0->field_4 < 14)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v0 = a0->field_8->field_8;\n
        sub_4019e0(v18, 8, \"X Resolution: +u\\n
\");\n
        v0 = a0->field_8->padding_a;\n
        sub_4019e0(v18, 8, \"Y Resolution: +u\\n
\");\n
        sub_4019e0(v18, 8, \"Video Option Headers: \\n
\");\n
        v12 = a0->field_8->field_c;\n
        v25 = a0;\n
        v25->field_8 = v25->field_8 + 1;\n
        v26 = a0;\n
        v26->field_4 = v26->field_4 - 14;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v12 > 0)\n
                v1 = a0->field_4;\n
            if (!(v1 & 1))\n
                break;\n
            sub_401040(&v11, 0x100);\n
            v10 = a0->field_8->field_0;\n
            v31 = a0;\n
            v31->field_8 = &v31->field_8->padding_1;\n
            v32 = a0;\n
            v32->field_4 = v32->field_4 - 1;\n
            if (v10 > a0->field_4)\n
            {\n
                sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            sub_401080(&v11, a0->field_8, v10);\n
            v0 = &v11;\n
            sub_4019e0(v18, 8, \"\\t+s\\n
\");\n
            v33 = a0;\n
            v33->field_8 = &(&v33->field_8->field_0)[v10];\n
            v34 = a0;\n
            v34->field_4 = v34->field_4 - v10;\n
            v12 -= 1;\n
        }\n
    }\n
    else if (v13 == 3)\n
    {\n
        sub_4019e0(v18, 8, \"Application type: File\\n
\");\n
        if (a0->field_4 < 70)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        sub_401040(&v9, 0x21);\n
        sub_401080(&v9, &a0->field_8->field_6, 0x20);\n
        v0 = &v9;\n
        sub_4019e0(v18, 8, \"Filename: +s\\n
\");\n
        sub_401080(&v9, &a0->field_8[2].padding_a, 0x20);\n
        v0 = &v9;\n
        sub_4019e0(v18, 8, \"File type: +s\\n
\");\n
        v35 = a0;\n
        v35->field_8 = v35->field_8 + 5;\n
        v36 = a0;\n
        v36->field_4 = v36->field_4 - 70;\n
    }\n
    else if (v13 == 4)\n
    {\n
        sub_4019e0(v18, 8, \"Application type: Email\\n
\");\n
        v21 = a0;\n
        v21->field_8 = &v21->field_8->field_6;\n
        v22 = a0;\n
        v22->field_4 = v22->field_4 - 6;\n
        if (!a0->field_4)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v8 = a0->field_8->field_0;\n
        v23 = a0;\n
        v23->field_8 = &v23->field_8->padding_1;\n
        v24 = a0;\n
        v24->field_4 = v24->field_4 - 1;\n
        if (a0->field_4 < v8)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        sub_401040(&v7, 0x100);\n
        sub_401080(&v7, a0->field_8, v8);\n
        v0 = &v7;\n
        sub_4019e0(v18, 8, \"From: +s\\n
\");\n
        v37 = a0;\n
        v37->field_8 = &(&v37->field_8->field_0)[v8];\n
        v38 = a0;\n
        v38->field_4 = v38->field_4 - v8;\n
        if (!a0->field_4)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v8 = a0->field_8->field_0;\n
        v39 = a0;\n
        v39->field_8 = &v39->field_8->padding_1;\n
        v40 = a0;\n
        v40->field_4 = v40->field_4 - 1;\n
        if (a0->field_4 < v8)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        sub_401040(&v7, 0x100);\n
        sub_401080(&v7, a0->field_8, v8);\n
        v0 = &v7;\n
        sub_4019e0(v18, 8, \"To: +s\\n
\");\n
        v41 = a0;\n
        v41->field_8 = &(&v41->field_8->field_0)[v8];\n
        v42 = a0;\n
        v42->field_4 = v42->field_4 - v8;\n
        if (!a0->field_4)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v8 = a0->field_8->field_0;\n
        v45 = a0;\n
        v45->field_8 = &v45->field_8->padding_1;\n
        v46 = a0;\n
        v46->field_4 = v46->field_4 - 1;\n
        if (a0->field_4 < v8)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        sub_401040(&v7, 0x100);\n
        sub_401080(&v7, a0->field_8, v8);\n
        v0 = &v7;\n
        sub_4019e0(v18, 8, \"Subject: +s\\n
\");\n
        v49 = a0;\n
        v49->field_8 = &(&v49->field_8->field_0)[v8];\n
        v50 = a0;\n
        v50->field_4 = v50->field_4 - v8;\n
    }\n
    else if (v13 != 5)\n
    {\n
        sub_4019e0(v18, 8, \"Unsupported application type\\n
\");\n
        v15 = -1;\n
        return v15;\n
    }\n
    else\n
    {\n
        sub_4019e0(v18, 8, \"Application type: Webpage\\n
\");\n
        if (a0->field_4 < 8)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v27 = a0;\n
        v27->field_8 = &v27->field_8->field_6;\n
        v28 = a0;\n
        v28->field_4 = v28->field_4 - 6;\n
        v6 = *(&a0->field_8->field_0);\n
        v29 = a0;\n
        v29->field_8 = &v29->field_8->padding_1[1];\n
        v30 = a0;\n
        v30->field_4 = v30->field_4 - 2;\n
        if (v6 > 0x400)\n
        {\n
            sub_4019e0(v18, 8, \"Invalid url\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        else if (v6 > a0->field_4)\n
        {\n
            sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        else\n
        {\n
            if (cgc_allocate(v6 + 1, 0))\n
                cgc__terminate();\n
            sub_401040(*(&v5), v6 + 1);\n
            sub_401080(*(&v5), a0->field_8, v6);\n
            v0 = *(&v5);\n
            sub_4019e0(v18, 8, \"URL: +s\\n
\");\n
            v43 = a0;\n
            v43->field_8 = &(&v43->field_8->field_0)[v6];\n
            v44 = a0;\n
            v44->field_4 = v44->field_4 - v6;\n
            cgc_deallocate(*(&v5));\n
            if (a0->field_4 < 2)\n
            {\n
                sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            v4 = *(&a0->field_8->field_0);\n
            v47 = a0;\n
            v47->field_8 = &v47->field_8->padding_1[1];\n
            v48 = a0;\n
            v48->field_4 = v48->field_4 - 2;\n
            if (v4 > 0x400)\n
            {\n
                sub_4019e0(v18, 8, \"Invalid header length\\n
\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            else if (v4 > a0->field_4)\n
            {\n
                sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            else\n
            {\n
                if (cgc_allocate(v4 + 1, 0))\n
                    cgc__terminate();\n
                sub_401040(*(&v3), v4 + 1);\n
                sub_401080(*(&v3), a0->field_8, v4);\n
                v0 = *(&v3);\n
                sub_4019e0(v18, 8, \"Headers: +s\\n
\");\n
                v51 = a0;\n
                v51->field_8 = &(&v51->field_8->field_0)[v4];\n
                v52 = a0;\n
                v52->field_4 = v52->field_4 - v4;\n
                cgc_deallocate(*(&v3));\n
                if (a0->field_4 < 2)\n
                {\n
                    sub_4019e0(v18, 8, \"Application layer too short\\n
\");\n
                    v15 = -1;\n
                    return v15;\n
                }\n
                v2 = *(&a0->field_8->field_0);\n
                v53 = a0;\n
                v53->field_8 = &v53->field_8->padding_1[1];\n
                v54 = a0;\n
                v54->field_4 = v54->field_4 - 2;\n
                if (v2 != a0->field_4)\n
                {\n
                    sub_4019e0(v18, 8, \"Invalid webpage length\\n
\");\n
                    v15 = -1;\n
                    return v15;\n
                }\n
            }\n
        }\n
    }\n
    v15 = 0;\n
    return v15;\n
}\n
", "4208400:sub_403710": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    char padding_4[68];\n
    struct struct_2 *field_48;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
} struct_2;\n
\n
int sub_403710(struct_1 *v6, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // esi\n
    unsigned int v8[8];  // eax\n
\n
    v4 = &v5;\n
    v3 = v7;\n
    v1 = 0;\n
    v0 = 0;\n
    sub_401e10(a0, v6, &v1, &v0);\n
    if (v1 > 0)\n
    {\n
        sub_401530(\"skip\\n
\", 5);\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (v6->field_48->field_14 > 0 && !v0)\n
    {\n
        sub_401530(\"skip\\n
\", 5);\n
        v2 = -1;\n
        return v2;\n
    }\n
    v8 = v6->field_48;\n
    v8[7] = v8[7] + 1;\n
    if (!sub_401f20(v6, a0) && !sub_4023b0(v6, a0) && !sub_402640(v6, a0) && !sub_402a00(v6, a0))\n
    {\n
        if ((v6->field_2 & 32))\n
        {\n
            sub_401420(a0->field_8, a0->field_4);\n
            sub_401530(\"\\n
\", 1);\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = -2;\n
    return v2;\n
}\n
", "4208800:sub_4038a0": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    char field_4;\n
    char padding_5[67];\n
    char *field_48;\n
} struct_0;\n
\n
int sub_4038a0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_401300(&v1, 4);\n
    if (*(&v1) != 2774181210)\n
        sub_4012a0(\"improper initialization format\");\n
    sub_401300(v4, 1);\n
    if (v4->field_0 > 2)\n
        sub_4012a0(\"unsupported mode\");\n
    sub_401300(&v4->padding_1[1], 2);\n
    sub_401300(&v4->field_4, 1);\n
    if (v4->field_4 > 16)\n
        sub_4012a0(\"too many filters\");\n
    v0 = &v4->field_48;\n
    if (cgc_allocate(44, 1))\n
        sub_4012a0(\"Failed to allocate statistics\");\n
    sub_401040(v4->field_48, 0x2c);\n
    return 0;\n
}\n
", "4209059:sub_4039a3": null, "4209072:sub_4039b0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[67];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
int sub_4039b0(struct_0 *v5)\n
{\n
    struct_2 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[7];  // eax\n
    unsigned int v7[7];  // eax\n
\n
    v3 = &v4;\n
    for (v2 = 0; v2 < v5->field_4; v2 += 1)\n
    {\n
        v0 = &v1;\n
        if (cgc_allocate(12, 1))\n
            sub_4012a0(\"failed to allocate packet filter\");\n
        *((8 + &v5->padding_0[0] + 0x4 * v2)) = *(&v1);\n
        sub_401300(*(&v1), 2);\n
        if (*(*(&v1)) > 0x1000)\n
            sub_4012a0(\"filter too large\");\n
        sub_401300(*(&v1) + 2, 1);\n
        if (*((*(&v1) + 2)) > 2)\n
            sub_4012a0(\"invalid filter type\");\n
        v0 = *(&v1) + 4;\n
        if (cgc_allocate(*(*(&v1)), 1))\n
            sub_4012a0(\"failed allocating filter mask\");\n
        sub_401040(*((*(&v1) + 4)), *(*(&v1)));\n
        v0 = *(&v1) + 8;\n
        if (cgc_allocate(*(*(&v1)), 1))\n
            sub_4012a0(\"failed allocating filter content\");\n
        sub_401040(*((*(&v1) + 8)), *(*(&v1)));\n
        sub_401300(*((*(&v1) + 4)), *(*(&v1)));\n
        sub_401300(*((*(&v1) + 8)), *(*(&v1)));\n
        if (*((*(&v1) + 2)) == 1)\n
        {\n
            v6 = v5->field_48;\n
            v6[5] = v6[5] + 1;\n
        }\n
        else\n
        {\n
            v7 = v5->field_48;\n
            v7[6] = v7[6] + 1;\n
        }\n
    }\n
    return 0;\n
}\n
", "4209554:sub_403b92": null, "4209568:sub_403ba0": "typedef struct struct_3 {\n
    char padding_0[72];\n
    struct struct_2 *field_48;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    struct struct_4 *field_4;\n
    char *field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[32];\n
    char field_24;\n
    char padding_25[3];\n
    struct struct_1 *field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
int sub_403ba0(struct_3 *v12)\n
{\n
    struct_0 *v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x24]\n
    char v3;  // [bp-0x20]\n
    unsigned short v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_4 *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    sub_401300(&v9, 4);\n
    if (*(&v9) != 3702512809)\n
        sub_4012a0(\"invalid DCAP file\");\n
    sub_401300(&v12->field_48->padding_4, 4);\n
    sub_401300(&v12->field_48->padding_4[4], 4);\n
    sub_401300(v12->field_48, 4);\n
    if (v12->field_48->field_0 > 0x800)\n
        sub_4012a0(\"too many packets\");\n
    sub_401300(&v12->field_48->field_24, 1);\n
    if (v12->field_48->field_24 > 50)\n
        sub_4012a0(\"too many option headers\");\n
    v8 = 0;\n
    for (v7 = 0; v7 < v12->field_48->field_24; v7 += 1)\n
    {\n
        if (!v8)\n
        {\n
            v0 = &v12->field_48->field_28;\n
            if (cgc_allocate(12, 1))\n
                sub_4012a0(\"error allocating first option header\");\n
            v8 = v12->field_48->field_28;\n
        }\n
        else\n
        {\n
            v0 = v8 + 4;\n
            if (cgc_allocate(12, 1))\n
                sub_4012a0(\"error allocating option header\");\n
            v8 = *((v8 + 4));\n
        }\n
        sub_401040(v8, 0xc);\n
        sub_401300(v8, 1);\n
        sub_401300(v8 + 1, 1);\n
        v0 = v8 + 8;\n
        if (cgc_allocate(*((v8 + 1)) + 1, 1))\n
            sub_4012a0(\"failed to allocate option header value\");\n
        sub_401040(*((v8 + 8)), *((v8 + 1)) + 1);\n
        sub_401300(*((v8 + 8)), *((v8 + 1)));\n
    }\n
    for (v6 = 0; v6 < v12->field_48->field_0; v6 += 1)\n
    {\n
        sub_401300(&v1, 4);\n
        sub_401300(&v2, 2);\n
        if (*(&v2) > 0x1000)\n
            sub_4012a0(\"packet too large\");\n
        v0 = &v3;\n
        if (cgc_allocate(*(&v2), 1))\n
            sub_4012a0(\"Failed allocating packet data\");\n
        sub_401300(*(&v3), *(&v2));\n
        v4 = *(&v2);\n
        v5 = *(&v3);\n
        sub_403710(v12, &v1);\n
        cgc_deallocate(v5);\n
    }\n
    return 0;\n
}\n
", "4210389:sub_403ed5": null, "4210400:sub_403ee0": "typedef struct struct_0 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_403ee0(struct_0 *v9)\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned short v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int v11;  // eax\n
\n
    v7 = &v8;\n
    v1 = 1;\n
    while (true)\n
    {\n
        sub_401300(&v3, 2);\n
        if (!*(&v3))\n
            break;\n
        if (*(&v3) > 0x1000)\n
            sub_4012a0(\"packet too large\");\n
        v10 = v9->field_48;\n
        *(v10) = *(v10) + 1;\n
        v0 = &v4;\n
        if (cgc_allocate(*(&v3), 1))\n
            sub_4012a0(\"Failed allocating packet data\");\n
        sub_401300(*(&v4), *(&v3));\n
        v11 = v1;\n
        v1 = v11 + 1;\n
        v2 = v11;\n
        v5 = *(&v3);\n
        v6 = *(&v4);\n
        sub_403710(v9, &v2);\n
        cgc_deallocate(*(&v4));\n
    }\n
    return 0;\n
}\n
", "4210672:sub_403ff0": "int sub_403ff0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    char v1;  // [bp-0x54]\n
    char v2;  // [bp-0x52]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    if (sub_4038a0(&v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!sub_4039b0(&v1))\n
    {\n
        v0 = v1;\n
        if (v0 == 1)\n
        {\n
            sub_403ba0(&v1);\n
        }\n
        else if (v0 == 2)\n
        {\n
            sub_403ee0(&v1);\n
        }\n
        if ((*(&v2) & 16))\n
            sub_401c10(&v1);\n
        sub_4012d0(\"Goodbye.\\n
\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4210896:sub_4040d0": "int sub_4040d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4041f0();\n
    sub_404200();\n
    sub_404220();\n
    v0 = 1;\n
    if (!sub_4047f0())\n
    {\n
        v0 = 7;\n
        sub_404ed0();\n
    }\n
    sub_4050a0();\n
    v1 = sub_4050d0;\n
    sub_4044c0();\n
    if (sub_4041c0())\n
    {\n
        v1 = 7;\n
        sub_404ed0();\n
    }\n
    sub_404c60();\n
    if (sub_404d60())\n
    {\n
        v1 = sub_404c00;\n
        __setusermatherr();\n
    }\n
    sub_404ce0();\n
    sub_404cf0();\n
    sub_404cb0();\n
    v1 = sub_404c50();\n
    _configthreadlocale();\n
    if (sub_404ca0())\n
        sub_4041e0();\n
    sub_404e90();\n
    if (sub_404ea0())\n
    {\n
        v1 = 7;\n
        sub_404ed0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4211088:sub_404190": "int sub_404190()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404d00();\n
    return 0;\n
}\n
", "4211104:sub_4041a0": "int sub_4041a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404eb0();\n
    v0 = sub_404c40();\n
    return _set_new_mode();\n
}\n
", "4211136:sub_4041c0": "int sub_4041c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_404c10());\n
}\n
", "4211168:sub_4041e0": "int sub_4041e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4211184:sub_4041f0": "int sub_4041f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4211200:sub_404200": "int sub_404200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_404c30());\n
}\n
", "4211232:sub_404220": "int sub_404220()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_404c20(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4211264:sub_404240": "int sub_404240()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_403ff0(v1, v2);\n
}\n
", "4211328:sub_404280": "extern char g_406b00;\n
extern char g_406b08;\n
extern char g_406b0c;\n
extern struct_0 *g_406b18;\n
extern char g_407180;\n
extern unsigned int g_408080;\n
extern unsigned int g_4080d8;\n
\n
int sub_404280()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_407180;\n
    v13 = sub_405100;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_408080;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_404760(1, g_408080 ^ &v16, v22, v23))\n
        sub_404ed0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_4046e0();\n
    if (g_4080d8 == 1)\n
    {\n
        v16 = 7;\n
        sub_404ed0();\n
    }\n
    else if (g_4080d8)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4080d8 = 1;\n
        v16 = &g_406b18;\n
        v15 = &g_406b0c;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_404489;\n
        }\n
        else\n
        {\n
            v16 = &g_406b08;\n
            v15 = &g_406b00;\n
            _initterm(*(&v17));\n
            g_4080d8 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_404730();\n
    v8 = sub_404d90();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_4045b0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_405140(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_404da0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_4045b0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_404240();\n
    if (!sub_404e00())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_4047b0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_404489:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4211743:sub_40441f": "int sub_40441f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4211752:sub_404428": "int sub_404428()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4211779:sub_404443": "extern char g_404451;\n
\n
int sub_404443()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_404451;\n
    if (!sub_404e00())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4211842:sub_404482": "int sub_404482()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4211872:sub_4044a0": "int sub_4044a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404b10();\n
    return sub_404280();\n
}\n
", "4211888:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4044a0();\n
}\n
", "4211904:sub_4044c0": "int sub_4044c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4044f0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4211952:sub_4044f0": "extern unsigned int g_4080e4;\n
\n
int sub_4044f0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4080e4;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4080e4))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4212008:sub_404528": "int sub_404528()\n
{\n
}\n
", "4212064:sub_404560": "extern unsigned int g_4080f0;\n
\n
int sub_404560(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4080f0;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4080f0);\n
    return v6;\n
}\n
", "4212098:sub_404582": "int sub_404582()\n
{\n
}\n
", "4212128:sub_4045a0": "int sub_4045a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4212144:sub_4045b0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_4071a0;\n
extern unsigned int g_408080;\n
\n
int sub_4045b0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_4071a0;\n
    v13 = sub_405100;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_408080;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_404a10(v6, g_408080 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_404a80(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4212349:sub_40467d": "int sub_40467d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4212358:sub_404686": "int sub_404686()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4212397:sub_4046ad": "int sub_4046ad()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4212416:sub_4046c0": "int sub_4046c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4212448:sub_4046e0": "extern unsigned int g_4080dc;\n
\n
int sub_4046e0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_405920();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_4045a0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4080dc = v6;\n
        if (!g_4080dc)\n
        {\n
            tmp_0 = 0;\n
            g_4080dc = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4080dc = v6;\n
            v5 = g_4080dc;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4212528:sub_404730": "extern void* g_4080dc;\n
\n
int sub_404730(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405920();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4080dc;\n
        g_4080dc = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40474f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4212576:sub_404760": "extern char g_4080e0;\n
\n
int sub_404760(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4080e0 = 1;\n
    sub_405490();\n
    v4 = sub_405cc0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_405cc0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_405cd0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4212656:sub_4047b0": "extern char g_4080e0;\n
\n
int sub_4047b0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4080e0 && a0)\n
        return 1;\n
    sub_405cd0(v2);\n
    v3 = sub_405cd0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4212720:sub_4047f0": "extern char g_4080e1;\n
extern unsigned int g_4080e4;\n
extern unsigned int g_4080e8;\n
extern unsigned int g_4080ec;\n
extern unsigned int g_4080f0;\n
extern unsigned int g_4080f4;\n
extern unsigned int g_4080f8;\n
\n
int sub_4047f0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4080e1)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_404ed0();\n
    }\n
    if (sub_405920() && !v10)\n
    {\n
        v8 = &g_4080e4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4080f0;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_4048b6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4080e4 = v4;\n
    g_4080e8 = v5;\n
    g_4080ec = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4080f0 = v1;\n
    g_4080f4 = v2;\n
    v11 = v3;\n
    g_4080f8 = v11;\n
LABEL_4048b6:\n
    g_4080e1 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4212944:sub_4048d0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4048d0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_405920() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_405140(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4213024:sub_404920": "int sub_404920()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4047f0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4213056:sub_404940": "int sub_404940()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_405920())\n
    {\n
        v3 = sub_405490();\n
    }\n
    else\n
    {\n
        v3 = sub_4041c0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_4041e0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4213104:sub_404970": "extern char g_4080e4;\n
\n
int sub_404970()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_405920())\n
    {\n
        v0 = &g_4080e4;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_405d10();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4213152:sub_4049a0": "int sub_4049a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405ce0(0);\n
    return sub_405ce0();\n
}\n
", "4213184:sub_4049c0": "int sub_4049c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_405cf0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_405cf0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_405d00();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4213232:sub_4049f0": "char sub_4049f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405d00();\n
    sub_405d00();\n
    return 1;\n
}\n
", "4213264:sub_404a10": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_404a10(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4213376:sub_404a80": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_404a80(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4213520:sub_404b10": "extern unsigned int g_408080;\n
extern unsigned int g_4080c0;\n
\n
int sub_404b10()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_408080 != 3141592654)\n
    {\n
        v4 = g_408080 & -0x10000;\n
        if (v4)\n
        {\n
            g_4080c0 = ~(g_408080);\n
            return g_408080 & -0x10000;\n
        }\n
    }\n
    v4 = sub_404b90(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_408080 = v0;\n
    g_4080c0 = ~(v0);\n
    return v4;\n
}\n
", "4213648:sub_404b90": "int sub_404b90()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4213760:sub_404c00": "int sub_404c00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213776:sub_404c10": "int sub_404c10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4213792:sub_404c20": "int sub_404c20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213808:sub_404c30": "int sub_404c30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4213824:sub_404c40": "int sub_404c40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213840:sub_404c50": "int sub_404c50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213856:sub_404c60": "extern void g_408100;\n
\n
int sub_404c60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_408100);\n
}\n
", "4213888:sub_404c80": "extern unsigned int g_408100;\n
\n
int sub_404c80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_408100);\n
}\n
", "4213920:sub_404ca0": "char sub_404ca0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4213936:sub_404cb0": "int sub_404cb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_404ed0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4213984:sub_404ce0": "int sub_404ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4214000:sub_404cf0": "int sub_404cf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4214016:sub_404d00": "int sub_404d00()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_404d40();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_404d50(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4214080:sub_404d40": "extern char g_408108;\n
\n
int sub_404d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_408108;\n
}\n
", "4214096:sub_404d50": "extern char g_408110;\n
\n
int sub_404d50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_408110;\n
}\n
", "4214112:sub_404d60": "extern unsigned int g_40804c;\n
\n
int sub_404d60()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40804c)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214160:sub_404d90": "extern char g_40811c;\n
\n
int sub_404d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40811c;\n
}\n
", "4214176:sub_404da0": "extern char g_408120;\n
\n
int sub_404da0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_408120;\n
}\n
", "4214192:sub_404db0": "extern void* g_408124;\n
\n
int sub_404db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_408124 = 0;\n
    return v3;\n
}\n
", "4214208:sub_404dc0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_404dc0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4214272:sub_404e00": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_404e00()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4214416:sub_404e90": "int sub_404e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4214432:sub_404ea0": "int sub_404ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405010();\n
}\n
", "4214448:sub_404eb0": "int sub_404eb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_405020);\n
}\n
", "4214480:sub_404ed0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404ed0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_404db0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_404db0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4214505:sub_404ee9": "int sub_404ee9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4214505\n
}\n
", "4214800:sub_405010": "int sub_405010()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4214816:sub_405020": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_405020(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4214944:sub_4050a0": "extern struct_0 *g_407174;\n
\n
int sub_4050a0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_407174;\n
    v3 = &g_407174;\n
    return &g_407174;\n
}\n
", "4214992:sub_4050d0": "extern struct_0 *g_40717c;\n
\n
int sub_4050d0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40717c;\n
    v3 = &g_40717c;\n
    return &g_40717c;\n
}\n
", "4215040:sub_405100": "extern unsigned int g_408080;\n
\n
int sub_405100(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_405d20(*(v2));\n
    return _except_handler4_common(&g_408080, sub_405950, v2, a0, a1);\n
}\n
", "4215104:sub_405140": "int sub_405140()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4215120:sub_405150": "int sub_405150(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x405159;\n
    return tmp_4;\n
}\n
", "4215136:sub_405160": "int sub_405160(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4215168:sub_405180": "int sub_405180(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405160(v2);\n
}\n
", "4215200:sub_4051a0": "extern unsigned int g_408128;\n
\n
int sub_4051a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_405150(&g_408128, v3);\n
    return v0;\n
}\n
", "4215232:sub_4051c0": "extern char g_405140;\n
extern unsigned int g_409000;\n
\n
int sub_4051c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_405180(&g_409000) != sub_405140)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215280:sub_4051f0": "extern char g_406a40;\n
\n
int sub_4051f0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_406a40;\n
    v1 = &g_406a40;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215344:sub_405230": "extern unsigned int g_409008;\n
\n
int sub_405230(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_405180(&g_409008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4215392:sub_405260": "extern unsigned int g_408128;\n
\n
int sub_405260(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_405180(&g_408128);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_405140();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4215456:sub_4052a0": "int sub_4052a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215472:sub_4052b0": "int sub_4052b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4051f0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4215491\n
}\n
", "4215504:sub_4052d0": "int sub_4052d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4051f0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4215529:sub_4052e9": "int sub_4052e9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4215529\n
}\n
", "4215536:sub_4052f0": "int sub_4052f0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4051f0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405230(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215584:sub_405320": "int sub_405320(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4051f0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405260(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215632:sub_405350": "extern char g_406a40;\n
\n
int sub_405350(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_406a40;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215696:sub_405390": "int sub_405390(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405350(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4051f0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4215739\n
}\n
", "4215744:sub_4053c0": "int sub_4053c0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405350(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4051f0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4215793:sub_4053f1": "int sub_4053f1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4215793\n
}\n
", "4215808:sub_405400": "int sub_405400()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215824:sub_405410": "int sub_405410(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405350(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4051f0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405230(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215888:sub_405450": "int sub_405450(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405350(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4051f0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405260(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215952:sub_405490": "extern unsigned int g_408080;\n
extern unsigned int g_4080c8;\n
extern unsigned int g_4080cc;\n
extern unsigned int g_4080d0;\n
extern unsigned int g_40812c;\n
extern unsigned int g_408130;\n
extern unsigned int g_408134;\n
\n
int sub_405490()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_408080 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_408130 = 0;\n
    g_4080d0 = g_4080d0 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_405950();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_4055db;\n
        g_408134 = g_408134 | 1;\n
    }\n
LABEL_4055db:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_408134 = g_408134 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_408130 = 1;\n
    g_4080d0 = g_4080d0 | 2;\n
    g_4080c8 = g_4080c8 & -2;\n
    g_4080cc = g_4080cc;\n
    if ((v18 & 0x100000))\n
    {\n
        g_408130 = 2;\n
        g_4080d0 = g_4080d0 | 4;\n
        g_4080c8 = g_4080c8 & -17;\n
        g_4080cc = g_4080cc;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_408130 = 3;\n
                g_4080d0 = g_4080d0 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_408130 = 5;\n
                    g_4080d0 = g_4080d0 | 32;\n
                    g_4080c8 = g_4080c8 & -3;\n
                    g_4080cc = g_4080cc;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_408130 = 6;\n
                            g_4080d0 = g_4080d0 | 64;\n
                            g_4080c8 = g_4080c8 & -37;\n
                            g_4080cc = g_4080cc;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_4080c8 = g_4080c8 & -16777217;\n
                    g_4080cc = g_4080cc;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40812c = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_4080c8 = ~(v2 | 16777256) & g_4080c8;\n
                        g_4080cc = ~(v3) & g_4080cc;\n
                        if (g_40812c > 1)\n
                        {\n
                            g_4080c8 = g_4080c8 & -65;\n
                            g_4080cc = g_4080cc;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4217120:sub_405920": "extern unsigned int g_4080d4;\n
\n
int sub_405920()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_4080d4)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4217168:sub_405950": "extern unsigned int g_408080;\n
extern unsigned int g_4080c0;\n
extern unsigned int g_408140;\n
extern unsigned int g_408144;\n
extern unsigned int g_40814c;\n
extern unsigned int g_408150;\n
extern unsigned int g_408154;\n
extern unsigned int g_408190;\n
extern unsigned short g_40821c;\n
extern unsigned short g_408220;\n
extern unsigned short g_408224;\n
extern unsigned short g_408228;\n
extern unsigned int g_40822c;\n
extern unsigned int g_408230;\n
extern unsigned int g_408234;\n
extern unsigned int g_408238;\n
extern unsigned int g_40823c;\n
extern unsigned int g_408240;\n
extern unsigned int g_408244;\n
extern unsigned int g_408248;\n
extern unsigned short g_40824c;\n
extern unsigned int g_408250;\n
extern unsigned int g_408254;\n
extern unsigned short g_408258;\n
\n
int sub_405950()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_408080)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408240 = v7;\n
        g_40823c = v6;\n
        g_408238 = v8;\n
        g_408234 = v9;\n
        g_408230 = v10;\n
        g_40822c = v11;\n
        g_408258 = v12;\n
        g_40824c = v13;\n
        g_408228 = v14;\n
        g_408224 = v15;\n
        g_408220 = v16;\n
        g_40821c = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_408250 = v0;\n
        g_408244 = v3;\n
        g_408248 = *(&v4);\n
        g_408254 = &v5;\n
        g_408190 = 65537;\n
        g_40814c = g_408248;\n
        g_408140 = 3221226505;\n
        g_408144 = 1;\n
        g_408150 = 1;\n
        g_408154 = 2;\n
        v1 = g_408080;\n
        v2 = g_4080c0;\n
        sub_405c90();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4217184:sub_405960": "extern unsigned int g_408140;\n
extern unsigned int g_408144;\n
extern unsigned int g_40814c;\n
extern unsigned int g_408150;\n
extern unsigned int g_408154;\n
extern unsigned short g_40821c;\n
extern unsigned short g_408220;\n
extern unsigned short g_408224;\n
extern unsigned short g_408228;\n
extern unsigned int g_40822c;\n
extern unsigned int g_408230;\n
extern unsigned int g_408234;\n
extern unsigned int g_408238;\n
extern unsigned int g_40823c;\n
extern unsigned int g_408240;\n
extern unsigned int g_408244;\n
extern unsigned int g_408248;\n
extern unsigned short g_40824c;\n
extern unsigned int g_408250;\n
extern unsigned int g_408254;\n
extern unsigned short g_408258;\n
\n
int sub_405960()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_408240 = v4;\n
        g_40823c = v5;\n
        g_408238 = v6;\n
        g_408234 = v7;\n
        g_408230 = v8;\n
        g_40822c = v9;\n
        g_408258 = v10;\n
        g_40824c = v11;\n
        g_408228 = v12;\n
        g_408224 = v13;\n
        g_408220 = v14;\n
        g_40821c = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_408250 = v0;\n
        g_408244 = v1;\n
        g_408248 = *(&v2);\n
        g_408254 = &v3;\n
        g_40814c = g_408248;\n
        g_408140 = 3221226505;\n
        g_408144 = 1;\n
        g_408150 = 1;\n
        g_408154 = v3;\n
        sub_405c90();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4217209:sub_405979": "int sub_405979()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217209\n
}\n
", "4217408:sub_405a40": "extern unsigned int g_408140;\n
extern unsigned int g_408144;\n
extern unsigned int g_40814c;\n
extern unsigned int g_408150;\n
extern unsigned int g_408154;\n
extern char g_408158;\n
extern unsigned short g_40821c;\n
extern unsigned short g_408220;\n
extern unsigned short g_408224;\n
extern unsigned short g_408228;\n
extern unsigned int g_40822c;\n
extern unsigned int g_408230;\n
extern unsigned int g_408234;\n
extern unsigned int g_408238;\n
extern unsigned int g_40823c;\n
extern unsigned int g_408240;\n
extern unsigned int g_408244;\n
extern unsigned int g_408248;\n
extern unsigned short g_40824c;\n
extern unsigned int g_408250;\n
extern unsigned int g_408254;\n
extern unsigned short g_408258;\n
\n
int sub_405a40()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1056855];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408240 = v7;\n
        g_40823c = v8;\n
        g_408238 = v9;\n
        g_408234 = v10;\n
        g_408230 = v11;\n
        g_40822c = v12;\n
        g_408258 = v13;\n
        g_40824c = v14;\n
        g_408228 = v15;\n
        g_408224 = v16;\n
        g_408220 = v17;\n
        g_40821c = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_408250 = v0;\n
        g_408244 = v2;\n
        g_408248 = *(&v3);\n
        g_408254 = &v4;\n
        g_40814c = g_408248;\n
        g_408140 = 3221226505;\n
        g_408144 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_408150 = v5 + 1;\n
        g_408154 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_408158)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_405c90();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4217433:sub_405a59": "int sub_405a59()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217433\n
}\n
", "4217712:sub_405b70": "int sub_405b70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405960(8);\n
}\n
", "4217755:sub_405b9b": "int sub_405b9b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217755\n
}\n
", "4218000:sub_405c90": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_405c90(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4218048:sub_405cc0": "char sub_405cc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218064:sub_405cd0": "char sub_405cd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218080:sub_405ce0": "char sub_405ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218096:sub_405cf0": "char sub_405cf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218112:sub_405d00": "char sub_405d00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218128:sub_405d10": "int sub_405d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218144:sub_405d20": "extern unsigned int g_408130;\n
\n
int sub_405d20(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_408130 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4218452:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4218458:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4218464:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4218470:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4218476:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4218482:sub_405e72": "int sub_405e72(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4218488:sub_405e78": "int sub_405e78()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4218494:sub_405e7e": "int sub_405e7e()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4218500:sub_405e84": "int sub_405e84(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4218506:sub_405e8a": "int sub_405e8a(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4218512:sub_405e90": "int sub_405e90()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4218518:sub_405e96": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_405e96(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4218524:sub_405e9c": "int sub_405e9c(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4218530:sub_405ea2": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_405ea2(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4218536:sub_405ea8": "int sub_405ea8(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4218542:sub_405eae": "int sub_405eae(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4218548:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4218554:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4218560:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4218566:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4218572:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4218578:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4218584:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4218590:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4218596:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4218602:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4218608:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4218614:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4218620:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4218626:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4218632:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4218638:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4218644:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4218650:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4218656:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4218662:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4218668:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4218674:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4218680:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4218686:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4218692:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4218698:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4218704:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4218710:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4218716:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4218722:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4218728:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4218734:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4218740:sub_405f74": "int sub_405f74()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4218746:sub_405f7a": "int sub_405f7a(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_receive": null, "5242896:cgc_transmit": null, "5242900:GetCurrentProcess": null, "5242904:GetCurrentProcessId": null, "5242908:GetCurrentThreadId": null, "5242912:GetModuleHandleW": null, "5242916:GetStartupInfoW": null, "5242920:GetSystemTimeAsFileTime": null, "5242924:InitializeSListHead": null, "5242928:IsDebuggerPresent": null, "5242932:IsProcessorFeaturePresent": null, "5242936:QueryPerformanceCounter": null, "5242940:SetUnhandledExceptionFilter": null, "5242944:TerminateProcess": null, "5242948:UnhandledExceptionFilter": null, "5242952:__current_exception": null, "5242956:__current_exception_context": null, "5242960:__std_type_info_destroy_list": null, "5242964:_except_handler4_common": null, "5242968:memset": null, "5242972:__p___argc": null, "5242976:__p___argv": null, "5242980:__p__commode": null, "5242984:__setusermatherr": null, "5242988:_c_exit": null, "5242992:_cexit": null, "5242996:_configthreadlocale": null, "5243000:_configure_narrow_argv": null, "5243004:_controlfp_s": null, "5243008:_crt_at_quick_exit": null, "5243012:_crt_atexit": null, "5243016:_execute_onexit_table": null, "5243020:_exit": null, "5243024:_get_initial_narrow_environment": null, "5243028:_initialize_narrow_environment": null, "5243032:_initialize_onexit_table": null, "5243036:_initterm": null, "5243040:_initterm_e": null, "5243044:_register_onexit_function": null, "5243048:_register_thread_local_exe_atexit_callback": null, "5243052:_seh_filter_dll": null, "5243056:_seh_filter_exe": null, "5243060:_set_app_type": null, "5243064:_set_fmode": null, "5243068:_set_new_mode": null, "5243072:exit": null, "5243076:terminate": null, "6295596:UnresolvableCallTarget": null}