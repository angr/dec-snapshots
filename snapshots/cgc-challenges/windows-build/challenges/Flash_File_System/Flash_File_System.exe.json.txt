{"4198400:sub_401000": "int sub_401000(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198454:sub_401036": null, "4198464:sub_401040": "int sub_401040(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198518:sub_401076": null, "4198528:sub_401080": "int sub_401080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198582:sub_4010b6": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3) && !sub_401080(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198668:sub_40110c": null, "4198672:sub_401110": "int sub_401110(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3) && !sub_401000(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198748:sub_40115c": null, "4198752:sub_401160": "int sub_401160(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 32 && v3 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198806:sub_401196": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401080(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + -32;\n
    return v0;\n
}\n
", "4198876:sub_4011dc": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + 32;\n
    return v0;\n
}\n
", "4198940:sub_40121c": null, "4198944:sub_401220": "int sub_401220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4199040:sub_401280": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_401280()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3->field_0 = sub_40bb70(1, v3, v3);\n
    v3->field_0->field_0 = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4199091:sub_4012b3": null, "4199104:sub_4012c0": "int sub_4012c0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3[2];  // ecx\n
\n
    v0 = &v1;\n
    v3[0] = 0;\n
    v3[1] = 0;\n
    sub_401300(v2, v3, v3);\n
    return v3;\n
}\n
", "4199159:sub_4012f7": null, "4199168:sub_401300": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_401300(unsigned int v6[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // ecx\n
    struct_0 *v8;  // edx\n
    struct_0 *v9;  // ecx\n
    char *v10;  // eax\n
\n
    v4 = &v5;\n
    v3 = v7;\n
    v2 = v3;\n
    if (v2->field_0)\n
    {\n
        v1 = v2->field_0;\n
        if (v1)\n
            sub_40bb90();\n
    }\n
    v2->field_4 = v6[1];\n
    v8 = v2;\n
    v8->field_0 = sub_40bb70();\n
    v0 = v8->field_4;\n
    sub_407620(v8->field_0, v6[0]);\n
    v9 = v2;\n
    v10 = v9->field_0;\n
    v10[v9->field_4] = 0;\n
    return v10;\n
}\n
", "4199304:sub_401388": null, "4199312:sub_401390": "int sub_401390(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3[2];  // ecx\n
\n
    v0 = &v1;\n
    v3[0] = 0;\n
    v3[1] = 0;\n
    sub_4013d0(v2, v3, v3);\n
    return v3;\n
}\n
", "4199367:sub_4013c7": null, "4199376:sub_4013d0": "int sub_4013d0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
\n
    v4 = &v5;\n
    v3 = v7;\n
    v2 = v3;\n
    if (*(v2))\n
    {\n
        v1 = *(v2);\n
        if (v1)\n
            sub_40bb90();\n
    }\n
    if (!v6)\n
    {\n
        v8 = v2;\n
        *(v8) = sub_40bb70();\n
        *(*(v8)) = 0;\n
        *((v8 + 4)) = 0;\n
        return v2;\n
    }\n
    *((v2 + 4)) = sub_4079a0();\n
    v10 = v2;\n
    *(v10) = sub_40bb70();\n
    v0 = *((v10 + 4));\n
    sub_407620(*(v10), v6);\n
    v11 = v2;\n
    v8 = *(v11);\n
    *((v8 + *((v11 + 4)))) = 0;\n
    return *(v11);\n
}\n
", "4199563:sub_40148b": null, "4199568:sub_401490": "int sub_401490()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // ecx\n
\n
    v2 = &v3;\n
    if (v5[0])\n
    {\n
        v1 = v5[0];\n
        if (v1)\n
        {\n
            v0 = v1;\n
            sub_40bb90();\n
        }\n
    }\n
    v5[1] = 0;\n
    return v5;\n
}\n
", "4199640:sub_4014d8": null, "4199648:sub_4014e0": "int sub_4014e0(unsigned int v4[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // ecx\n
\n
    v2 = &v3;\n
    if (v5[1] != v4[1])\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v0 = v5[1];\n
    v1 = !sub_407f30(v5[0], v4[0]);\n
    return v1 & 1;\n
}\n
", "4199745:sub_401541": null, "4199760:sub_401550": "int sub_401550(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    return (sub_4014e0(v3) ^ 255) & 1;\n
}\n
", "4199803:sub_40157b": null, "4199808:sub_401580": "int sub_401580(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    return sub_401300(v3);\n
}\n
", "4199841:sub_4015a1": null, "4199856:sub_4015b0": "int sub_4015b0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    return sub_4013d0(v3);\n
}\n
", "4199889:sub_4015d1": null, "4199904:sub_4015e0": "int sub_4015e0(unsigned int v14)\n
{\n
    char v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // ebx\n
\n
    v12 = &v13;\n
    v11 = v15;\n
    v10 = v16;\n
    v9 = v17;\n
    v5 = &v0;\n
    v8 = -1;\n
    v7 = sub_401bb0;\n
    v6 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v6;\n
    v1 = v14;\n
    v2 = &v4;\n
    sub_4012c0(v18);\n
    v8 = 0;\n
    v3 = sub_401690(v1, v18, v1);\n
    sub_401490();\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v6;\n
    v19 = v7;\n
    v20 = v8;\n
    v21 = v9;\n
    return v3;\n
}\n
", "4200048:sub_401670": "int sub_401670()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    return sub_401490();\n
}\n
", "4200066:sub_401682": null, "4200080:sub_401690": "int sub_401690(unsigned int v7[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // esi\n
    unsigned int v9[2];  // ecx\n
\n
    v5 = &v6;\n
    v4 = v8;\n
    v3 = v9[1] + v7[1];\n
    v2 = sub_40bb70();\n
    v0 = v9[1];\n
    sub_407620(v2, v9[0]);\n
    v0 = v7[1];\n
    sub_407620(&v2[v9[1]], v7[0]);\n
    v2[v7[1] + v9[1]] = 0;\n
    if (v9[0])\n
    {\n
        v1 = v9[0];\n
        if (v1)\n
            sub_40bb90();\n
    }\n
    v9[0] = v2;\n
    v9[1] = v3;\n
    return v9;\n
}\n
", "4200268:sub_40174c": null, "4200272:sub_401750": "int sub_401750()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return *(v0);\n
}\n
", "4200289:sub_401761": null, "4200304:sub_401770": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401770(unsigned int *v6)\n
{\n
    unsigned int *v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // ecx\n
\n
    v4 = &v5;\n
    v0 = v6;\n
    v1 = v0;\n
    v3 = 0;\n
    sub_4012c0(v7);\n
    for (v2 = 0; v2 < v7->field_4; v2 += 1)\n
    {\n
        if (sub_401080(*((*(v0) + v2))))\n
            *((*(v0) + v2)) = sub_4011a0(*((*(v0) + v2)));\n
    }\n
    v3 = 1;\n
    if (!(v3 & 1))\n
        sub_401490();\n
    return v1;\n
}\n
", "4200484:sub_401824": null, "4200496:sub_401830": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401830(unsigned int *v6)\n
{\n
    unsigned int *v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // ecx\n
\n
    v4 = &v5;\n
    v0 = v6;\n
    v1 = v0;\n
    v3 = 0;\n
    sub_4012c0(v7);\n
    for (v2 = 0; v2 < v7->field_4; v2 += 1)\n
    {\n
        if (sub_401040(*((*(v0) + v2))))\n
            *((*(v0) + v2)) = sub_4011e0(*((*(v0) + v2)));\n
    }\n
    v3 = 1;\n
    if (!(v3 & 1))\n
        sub_401490();\n
    return v1;\n
}\n
", "4200676:sub_4018e4": null, "4200688:sub_4018f0": "int sub_4018f0(unsigned int *v3)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[2];  // ecx\n
\n
    v1 = &v2;\n
    if ((sub_401960(v4) & 1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (*(v3) < v4[1])\n
    {\n
        v0 = *((v4[0] + *(v3)));\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4200786:sub_401952": null, "4200800:sub_401960": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401960()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return !v0->field_4;\n
}\n
", "4200827:sub_40197b": null, "4200832:sub_401980": "int sub_401980(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    v0 = a0;\n
    sub_4019c0(v1, 0, v0, v1, v5, v6);\n
    v7 = v0;\n
    return v1;\n
}\n
", "4200895:sub_4019bf": null, "4200896:sub_4019c0": "extern unsigned int g_40e000;\n
\n
int sub_4019c0(unsigned int v11, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    char *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7[2];  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // esi\n
    unsigned int v13[2];  // ecx\n
    unsigned int v14;  // ecx\n
\n
    v9 = &v10;\n
    v8 = v12;\n
    v0 = v11;\n
    v1 = v0;\n
    v7[0] = v13;\n
    v2[0] = v7;\n
    if (a1 > v2[1])\n
        a1 = v2[1];\n
    if (a0 < v2[1] && a0 < a1)\n
    {\n
        v6 = a1 - a0;\n
        v5 = sub_40bb70();\n
        v4 = 0;\n
        for (v3 = a0; v3 < a1; v3 += 1)\n
        {\n
            v14 = v4;\n
            v4 = v14 + 1;\n
            v5[v14] = v3[v2[0]];\n
        }\n
        v5[v4] = 0;\n
        sub_401390(v5);\n
        return v1;\n
    }\n
    sub_401390(&g_40e000);\n
    return v1;\n
}\n
", "4201131:sub_401aab": null, "4201136:sub_401ab0": "int sub_401ab0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[2];  // ecx\n
\n
    v3 = &v4;\n
    v0 = v5;\n
    v1 = v0;\n
    for (v2 = 0; v2 < v6[1]; v2 += 1)\n
    {\n
        if (*((v6[0] + v2)) != 32)\n
            break;\n
    }\n
    sub_4019c0(v0, v2, -1);\n
    return v1;\n
}\n
", "4201269:sub_401b35": null, "4201280:sub_401b40": "int sub_401b40(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // ecx\n
\n
    v2 = &v3;\n
    if ((sub_401960() & 1))\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v0 = *(v5);\n
    *(v4) = sub_407330();\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4201359:sub_401b8f": null, "4201360:sub_401b90": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401b90()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_4;\n
}\n
", "4201378:sub_401ba2": null, "4201392:sub_401bb0": "int sub_401bb0(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    return __CxxFrameHandler3();\n
}\n
", "4201424:sub_401bd0": "extern char g_410118;\n
\n
int sub_401bd0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = g_410118;\n
    if (!g_410118)\n
    {\n
        v0 = 63;\n
        v4 = sub_407590(&g_410118, v3);\n
    }\n
    return v4;\n
}\n
", "4201483:sub_401c0b": null, "4201488:sub_401c10": "extern char g_410118;\n
\n
int sub_401c10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_410118 = 0;\n
    return v3;\n
}\n
", "4201500:sub_401c1c": null, "4201504:sub_401c20": "extern char g_410118;\n
\n
int sub_401c20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410118;\n
}\n
", "4201515:sub_401c2b": null, "4201520:sub_401c30": "extern struct_0 *g_410110;\n
\n
int sub_401c30()\n
{\n
    struct struct_1 **v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!g_410110)\n
    {\n
        sub_401bd0(\"Filesystem does not exist\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < g_410110->field_4; v0 += 1)\n
    {\n
        if (*((g_410110->field_8 + (v0 << 2))))\n
        {\n
            if (*(*((g_410110->field_8 + (v0 << 2)))))\n
            {\n
                sub_404d00();\n
                *(*((g_410110->field_8 + v0 * 4))) = 0;\n
            }\n
            if (*((*((g_410110->field_8 + (v0 << 2))) + 4)))\n
            {\n
                sub_404d00();\n
                *((*((g_410110->field_8 + v0 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((g_410110->field_8 + (v0 << 2))) + 16)))\n
            {\n
                sub_404d00();\n
                *((*((g_410110->field_8 + v0 * 4)) + 16)) = 0;\n
            }\n
            sub_404d00();\n
            *((g_410110->field_8 + v0 * 4)) = 0;\n
        }\n
    }\n
    sub_404d00();\n
    g_410110 = 0;\n
    sub_401c10();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4201915:sub_401dbb": null, "4201920:sub_401dc0": "extern struct_0 *g_410110;\n
extern unsigned int g_410118;\n
extern unsigned int g_410158;\n
\n
int sub_401dc0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 64;\n
    sub_4079e0(&g_410118);\n
    if (!v4)\n
    {\n
        sub_401bd0(\"MaxFiles should be > 0\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (g_410110)\n
        sub_401c30();\n
    g_410110 = sub_404f60();\n
    if (!g_410110)\n
    {\n
        sub_401bd0(\"calloc failed\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v5 = sub_404f60();\n
    g_410110->field_8 = v5;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"calloc failed\");\n
        sub_404d00();\n
        v1 = 0;\n
        return v1;\n
    }\n
    g_410110->field_4 = v4;\n
    if (!sub_401f60())\n
    {\n
        sub_401bd0(\"Login failed\");\n
        sub_404d00();\n
        sub_404d00();\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!sub_402020())\n
    {\n
        sub_402100();\n
        sub_401bd0(\"Failed to init the passwd file\");\n
        sub_404d00();\n
        sub_404d00();\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        sub_4079e0(&g_410158);\n
        sub_401c10();\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4202321:sub_401f51": null, "4202336:sub_401f60": "extern void* g_410114;\n
\n
int sub_401f60(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_4079a0();\n
    v1 = sub_404f60();\n
    if (!v1)\n
    {\n
        sub_401bd0(\"calloc failed\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v5;\n
    sub_407540(v1);\n
    if (g_410114)\n
    {\n
        sub_404d00();\n
        g_410114 = 0;\n
    }\n
    g_410114 = v1;\n
    sub_401c10();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4202515:sub_402013": null, "4202528:sub_402020": "int sub_402020(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401bd0(\"Invalid root password\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = sub_402510(\"passwd\");\n
    if (!v2)\n
    {\n
        sub_401bd0(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    sub_402b90(\"root:\", 5, 1);\n
    v1 = v2;\n
    v7 = sub_4079a0(v6, 5, 1);\n
    v0 = v1;\n
    sub_402b90(v6, v7, 1);\n
    sub_4029c0(v2, v7, 1);\n
    sub_401c10();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4202744:sub_4020f8": null, "4202752:sub_402100": "extern void* g_410114;\n
\n
int sub_402100()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (g_410114)\n
        sub_404d00(g_410114);\n
    g_410114 = 0;\n
    sub_401c10();\n
    return 1;\n
}\n
", "4202807:sub_402137": null, "4202816:sub_402140": "extern struct_0 *g_410110;\n
\n
int sub_402140(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < g_410110->field_4)\n
        {\n
            if (*((g_410110->field_8 + (v1 << 2))) && *(*((g_410110->field_8 + (v1 << 2)))))\n
            {\n
                v0 = v5;\n
                if (!sub_407d30(*(*((g_410110->field_8 + (v1 << 2))))))\n
                {\n
                    v2 = *((g_410110->field_8 + v1 * 4));\n
                    return v2;\n
                }\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4202996:sub_4021f4": null, "4203008:sub_402200": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_0 *g_410110;\n
extern unsigned int g_410114;\n
\n
int sub_402200(unsigned int v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_1 **v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"Invalid filename\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!g_410114)\n
    {\n
        sub_401bd0(\"Must login first\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if ((a0 & 153))\n
    {\n
        sub_401bd0(\"Invalid mode\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (sub_402140(v5))\n
    {\n
        sub_401bd0(\"File already exists\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= g_410110->field_4)\n
        {\n
LABEL_4024bd:\n
            if (v1 == g_410110->field_4)\n
            {\n
                sub_401bd0(\"No free inodes\");\n
                v2 = 0;\n
                return v2;\n
            }\n
            sub_401c10();\n
            v2 = *((g_410110->field_8 + v1 * 4));\n
            return v2;\n
        }\n
        if (*((g_410110->field_8 + (v1 << 2))))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v6 = sub_404f60();\n
            *((g_410110->field_8 + v1 * 4)) = v6;\n
            if (!v6)\n
            {\n
                sub_401bd0(\"calloc failed\");\n
                v2 = 0;\n
                return v2;\n
            }\n
            sub_4079a0();\n
            v7 = sub_404f60();\n
            *(*((g_410110->field_8 + v1 * 4))) = v7;\n
            if (!v7)\n
            {\n
                sub_401bd0(\"calloc failed\");\n
                sub_404d00();\n
                *((g_410110->field_8 + v1 * 4)) = 0;\n
                v2 = 0;\n
                return v2;\n
            }\n
            v0 = v5;\n
            sub_407540(*(*((g_410110->field_8 + v1 * 4))));\n
            v8 = sub_404f60(5);\n
            *((*((g_410110->field_8 + v1 * 4)) + 4)) = v8;\n
            if (!v8)\n
            {\n
                sub_401bd0(\"calloc failed\");\n
                sub_404d00();\n
                *(*((g_410110->field_8 + v1 * 4))) = 0;\n
                sub_404d00();\n
                *((g_410110->field_8 + v1 * 4)) = 0;\n
                v2 = 0;\n
                return v2;\n
            }\n
            v0 = g_410114;\n
            sub_407540(*((*((g_410110->field_8 + v1 * 4)) + 4)));\n
            *((*((g_410110->field_8 + v1 * 4)) + 8)) = a0;\n
            *((*((g_410110->field_8 + v1 * 4)) + 12)) = 0;\n
            *((*((g_410110->field_8 + v1 * 4)) + 16)) = 0;\n
            goto LABEL_4024bd;\n
            goto LABEL_4024bd;\n
        }\n
    }\n
}\n
", "4203783:sub_402507": null, "4203792:sub_402510": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_2 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4260184];\n
    unsigned int field_410158;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
extern unsigned int g_410110;\n
extern unsigned int g_410114;\n
extern unsigned int g_410158[4];\n
\n
int sub_402510(unsigned int v6, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_3 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = 0;\n
    if (!g_410110)\n
    {\n
        sub_401bd0(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v6 && a0)\n
    {\n
        if (sub_4079a0() > 1)\n
        {\n
            sub_401bd0(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            sub_401bd0(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!g_410114)\n
        {\n
            sub_401bd0(\"Must login first\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = sub_402140(v6);\n
        if (!v1 && *(a0) == 114)\n
        {\n
            sub_401bd0(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1)\n
        {\n
            for (v2 = 0; v2 < 8; v2 = &v2->padding_0[1])\n
            {\n
                if (g_410158[v2] && *(g_410158[v2]) == v1)\n
                {\n
                    sub_401bd0(\"File is already open\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (v1 && sub_407d30(g_410114))\n
        {\n
            if (sub_407d30(v1->field_4))\n
            {\n
                if (*(a0) == 114 && !(v1->field_8 & 64))\n
                {\n
                    sub_401bd0(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a0) == 119 && !(v1->field_8 & 96))\n
                {\n
                    sub_401bd0(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v1->field_8 & 4))\n
                {\n
                    sub_401bd0(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a0) == 119 && !(v1->field_8 & 6))\n
                {\n
                    sub_401bd0(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        v0 = sub_404f60();\n
        if (!v0)\n
        {\n
            sub_401bd0(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 = &v2->padding_0[1])\n
        {\n
            if (!g_410158[v2])\n
            {\n
                g_410158[v2] = v0;\n
                break;\n
            }\n
        }\n
        if (v2 == 8)\n
        {\n
            sub_401bd0(\"No free file descriptors\");\n
            sub_404d00();\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_4 = 4;\n
            v0->field_8 = 0;\n
        }\n
        else if (v1)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_4 = 6;\n
            v0->field_8 = 0;\n
            v0->field_0->field_c = 0;\n
            if (v0->field_0->field_10)\n
            {\n
                sub_404d00();\n
                v0->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v1 = sub_402200(v6, 6);\n
            if (!v1)\n
            {\n
                sub_401bd0(\"Failed to create file\");\n
                g_410158[v2] = 0;\n
                sub_404d00();\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0->field_0 = &v1;\n
            v0->field_4 = 6;\n
            v0->field_8 = 0;\n
        }\n
        sub_401c10();\n
        v3 = v0;\n
        return v3;\n
    }\n
    sub_401bd0(\"Invalid filename or mode\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4204991:sub_4029bf": null, "4204992:sub_4029c0": "extern unsigned int g_410158[4];\n
\n
int sub_4029c0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x6]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        sub_401bd0(\"Invalid file pointer\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < 8; v0 += 1)\n
    {\n
        if (g_410158[v0] == v4)\n
            g_410158[v0] = 0;\n
    }\n
    sub_401c10();\n
    sub_404d00();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4205133:sub_402a4d": null, "4205136:sub_402a50": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_402a50(unsigned int v4, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v2 = &v3;\n
    if (v4 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            sub_401bd0(\"End of file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            sub_407620(v4, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a2->field_0->field_c - a2->field_8 + v5->field_8;\n
            sub_401c10();\n
            v1 = a2->field_0->field_c - a2->field_8;\n
            return v1;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            sub_407620(v4, a2->field_0->field_10 + a2->field_8);\n
            v6 = a2;\n
            v6->field_8 = a1 * a0 + v6->field_8;\n
            sub_401c10();\n
            v1 = a1 * a0;\n
            return v1;\n
        }\n
    }\n
    sub_401bd0(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4205446:sub_402b86": null, "4205456:sub_402b90": "int sub_402b90(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[5];  // eax\n
\n
    v3 = &v4;\n
    if (v5 && a2)\n
    {\n
        v1 = sub_404f60();\n
        if (!v1)\n
        {\n
            sub_401bd0(\"calloc failed\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            sub_407620(v1, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        sub_407620(v1 + *(a2)->field_c, v5);\n
        v6 = *(a2);\n
        v6[3] = a1 * a0 + v6[3];\n
        if (*(a2)->field_10)\n
            sub_404d00();\n
        *(a2)->field_10 = v1;\n
        sub_401c10();\n
        v2 = a1 * a0;\n
        return v2;\n
    }\n
    sub_401bd0(\"Invalid buffer or file pointer\");\n
    v2 = 0;\n
    return v2;\n
}\n
", "4205755:sub_402cbb": null, "4205760:sub_402cc0": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_402cc0(unsigned int v5, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_50;  // tmp #50\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    struct_2 *v7;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"Invalid buffer\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_401bd0(\"Invalid file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        sub_401bd0(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v1 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v6 = a1->field_0->field_10;\n
            v7 = a1;\n
            v8 = v7->field_8;\n
            v7->field_8 = v8 + 1;\n
            tmp_50 = v6[v8];\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            *((v5 + v9)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v5 + v1)) = 0;\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401bd0(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4206112:sub_402e20": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_402cc0(unsigned int v5, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_50;  // tmp #50\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    struct_2 *v7;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"Invalid buffer\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_401bd0(\"Invalid file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        sub_401bd0(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v1 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v6 = a1->field_0->field_10;\n
            v7 = a1;\n
            v8 = v7->field_8;\n
            v7->field_8 = v8 + 1;\n
            tmp_50 = v6[v8];\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            *((v5 + v9)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v5 + v1)) = 0;\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401bd0(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4207299:sub_4032c3": null, "4207312:sub_4032d0": "extern struct_0 *g_410110;\n
extern unsigned int g_410114;\n
extern unsigned int g_410158[4];\n
\n
int sub_4032d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[5];  // [bp-0x14]\n
    struct struct_1 **v2;  // [bp-0x10]\n
    struct struct_1 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x5]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!g_410110)\n
    {\n
        sub_401bd0(\"Filesystem does not exist\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!v7)\n
    {\n
        sub_401bd0(\"Invalid filename\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!g_410114)\n
    {\n
        sub_401bd0(\"Must login first\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        for (v3 = 0; v3 < g_410110->field_4; v3 = v3 + 1)\n
        {\n
            if (*((g_410110->field_8 + (v3 << 2))))\n
            {\n
                v0 = v7;\n
                if (!sub_407d30(*(*((g_410110->field_8 + (v3 << 2))))))\n
                {\n
                    v1[0] = *((g_410110->field_8 + v3 * 4));\n
                    v2 = v3;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v3 == g_410110->field_4)\n
        {\n
            sub_401bd0(\"Unable to locate file\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 = v3 + 1)\n
        {\n
            if (g_410158[v3] && *(g_410158[v3]) == v1)\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        v0 = \"root\";\n
        if (sub_407d30(g_410114))\n
        {\n
            v0 = v1[1];\n
            if (sub_407d30(g_410114))\n
            {\n
                sub_401bd0(\"Permission denied\");\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        sub_404d00();\n
        if (v1[1])\n
            sub_404d00();\n
        if (v1[4])\n
            sub_404d00();\n
        sub_404d00();\n
        *((g_410110->field_8 + v2 * 4)) = 0;\n
        sub_401c10();\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4207897:sub_403519": null, "4207904:sub_403520": "extern struct_1 *g_410110;\n
extern unsigned int g_410114;\n
\n
int sub_403520(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x5]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2[0] = 0;\n
    if (v7 && a0)\n
    {\n
        for (v3 = 0; v3 < g_410110->field_4; v3 = v3 + 1)\n
        {\n
            if (*((g_410110->field_8 + (v3 << 2))) && *(*((g_410110->field_8 + (v3 << 2)))))\n
            {\n
                v0 = v7;\n
                if (!sub_407d30(*(*((g_410110->field_8 + (v3 << 2))))))\n
                    v2[0] = *((g_410110->field_8 + v3 * 4));\n
                v0 = a0;\n
                if (!sub_407d30(*(*((g_410110->field_8 + (v3 << 2))))))\n
                {\n
                    sub_401bd0(\"Destination file already exists\");\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (!v2)\n
        {\n
            sub_401bd0(\"Source file not found\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = \"root\";\n
        if (sub_407d30(g_410114))\n
        {\n
            v0 = *((v2 + 4));\n
            if (sub_407d30(g_410114))\n
            {\n
                sub_401bd0(\"Permission denied\");\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        sub_4079a0();\n
        v1 = sub_404f60();\n
        if (!v1)\n
        {\n
            sub_401bd0(\"calloc failed\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = a0;\n
        sub_407540(v1);\n
        sub_404d00(*(v2));\n
        *(v2) = v1;\n
        sub_401c10();\n
        v4 = 1;\n
        return v4;\n
    }\n
    sub_401bd0(\"Invalid filename\");\n
    v4 = 0;\n
    return v4;\n
}\n
", "4208417:sub_403721": null, "4208432:sub_403730": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
extern unsigned int g_410114;\n
\n
int sub_403730(unsigned int v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401bd0(\"Invalid user\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v1 = sub_402140(v5);\n
        if (!v1)\n
        {\n
            sub_401bd0(\"Unable to find file\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = \"root\";\n
        if (sub_407d30(g_410114))\n
        {\n
            v0 = v1->field_4;\n
            if (sub_407d30(g_410114))\n
            {\n
                sub_401bd0(\"Permission denied\");\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        v1->field_8 = a0;\n
        sub_401c10();\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401bd0(\"Invalid mode\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4208680:sub_403828": null, "4208688:sub_403830": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_410114;\n
\n
int sub_403830(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401bd0(\"Invalid filename\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v0 = \"root\";\n
        if (sub_407d30(g_410114))\n
        {\n
            sub_401bd0(\"Must be root\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 = sub_402140(v6);\n
        if (!v2)\n
        {\n
            sub_401bd0(\"Unable to find file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (sub_403990())\n
        {\n
            sub_4079a0();\n
            v1 = sub_404f60();\n
            if (!v1)\n
            {\n
                sub_401bd0(\"calloc failed\");\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = a0;\n
            sub_407540(v1);\n
            if (v2->field_4)\n
                sub_404d00();\n
            v2->field_4 = v1;\n
            sub_401c10();\n
            v3 = 1;\n
            return v3;\n
        }\n
        else\n
        {\n
            sub_401bd0(\"Invalid user\");\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    else\n
    {\n
        sub_401bd0(\"Invalid owner\");\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209039:sub_40398f": null, "4209040:sub_403990": "int sub_403990(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x90]\n
    char v1;  // [bp-0x8c]\n
    void* v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = sub_402510(\"passwd\", \"r\");\n
    if (!v2)\n
    {\n
        sub_401bd0(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!sub_402cc0(&v1, 127, v2))\n
        {\n
            sub_4029c0(v2);\n
            sub_401c10();\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = sub_407b50(&v1);\n
        if (!v0)\n
        {\n
            sub_401bd0(\"Failed to parse passwd file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!sub_407d30(v0))\n
        {\n
            sub_4029c0(v2);\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4209336:sub_403ab8": null, "4209344:sub_403ac0": "extern unsigned int g_410114;\n
\n
int sub_403ac0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4056f0(g_410114);\n
}\n
", "4209379:sub_403ae3": null, "4209392:sub_403af0": "extern unsigned int g_410114;\n
\n
int sub_403af0(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0xa8]\n
    struct struct_0 **v2;  // [bp-0xa0]\n
    struct struct_0 **v3;  // [bp-0x9c]\n
    unsigned int v4;  // [bp-0x98]\n
    char v5;  // [bp-0x94]\n
    struct struct_0 **v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10]\n
    char v8;  // [bp-0x9]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    if (!v11)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407d30(g_410114))\n
    {\n
        sub_401bd0(\"Must be root\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_4079a0() > 32)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_4079a0() > 32)\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!sub_403990(v11))\n
    {\n
        v7 = sub_402510(\"passwd\", \"r\");\n
        if (!v7)\n
        {\n
            sub_401bd0(\"Unable to open passwd file\");\n
            v8 = 0;\n
            return v8;\n
        }\n
        v6 = sub_402510(\"~passwd\", \"w\");\n
        if (!v6)\n
        {\n
            sub_401bd0(\"Unable to open tmp passwd file\");\n
            sub_4029c0(v7);\n
            v8 = 0;\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            if (sub_402cc0(&v5, 127, v7))\n
            {\n
                v3 = v6;\n
                v0 = sub_4079a0();\n
                v4 = sub_402b90(&v5, v0, 1, v3);\n
                if (v4 != sub_4079a0(&v5, v0, 1))\n
                {\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    sub_401bd0(\"Unable to write tmp passwd file\");\n
                    sub_4032d0(\"~passwd\");\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                else if (*(&v4 + sub_4079a0()) != 10 && sub_402b90(\"\\n
\", 1, 1, v6) != 1)\n
                {\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    sub_401bd0(\"Unable to write tmp passwd file\");\n
                    sub_4032d0(\"~passwd\");\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v11;\n
                sub_405e40(&v5, \"$s:$s\", v1);\n
                v2 = v6;\n
                sub_402b90(&v5, sub_4079a0(&v5, \"$s:$s\", v1), 1, v2);\n
                sub_4029c0(v7);\n
                sub_4029c0(v6);\n
                sub_4032d0(\"passwd\");\n
                sub_403520(\"~passwd\", \"passwd\");\n
                sub_401c10();\n
                v8 = 1;\n
                return v8;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        sub_401bd0(\"User already exists\");\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4210316:sub_403e8c": null, "4210320:sub_403e90": "extern unsigned int g_410114;\n
\n
int sub_403e90(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    struct struct_0 **v1;  // [bp-0xa0]\n
    unsigned int v2;  // [bp-0x9c]\n
    unsigned int v3;  // [bp-0x98]\n
    void* v4;  // [bp-0x94]\n
    char v5;  // [bp-0x8d]\n
    unsigned int v6;  // [bp-0x8c]\n
    char v7;  // [bp-0x85]\n
    char v8;  // [bp-0x5]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v5 = 0;\n
    if (!v11)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407d30(g_410114))\n
    {\n
        sub_401bd0(\"Must be root\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407d30(v11))\n
    {\n
        v4 = sub_402510(\"passwd\", \"r\");\n
        if (!v4)\n
        {\n
            sub_401bd0(\"Unable to open passwd file\");\n
            v8 = 0;\n
            return v8;\n
        }\n
        v3 = sub_402510(\"~passwd\", \"w\");\n
        if (!v3)\n
        {\n
            sub_401bd0(\"Unable to open tmp passwd file\");\n
            sub_4029c0(v4);\n
            v8 = 0;\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!sub_402cc0(&v7, 127, v4))\n
                {\n
                    sub_4029c0(v4);\n
                    sub_4029c0(v3);\n
                    if (!v5)\n
                    {\n
                        sub_401bd0(\"User not found\");\n
                        sub_4029c0(v4);\n
                        sub_4029c0(v3);\n
                        sub_4032d0(\"~passwd\");\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                    sub_4032d0(\"passwd\");\n
                    sub_403520(\"~passwd\", \"passwd\");\n
                    sub_401c10();\n
                    v8 = 1;\n
                    return v8;\n
                }\n
            } while (!sub_4079a0());\n
            v6 = sub_407b50(&v7);\n
            if (!v6)\n
            {\n
                sub_401bd0(\"Failed to parse passwd file\");\n
                sub_4029c0(v4);\n
                sub_4029c0(v3);\n
                sub_4032d0(\"~passwd\");\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (sub_407d30(v6))\n
            {\n
                (&v7)[sub_4079a0()] = 58;\n
                v1 = v3;\n
                v0 = sub_4079a0();\n
                v2 = sub_402b90(&v7, v0, 1, v1);\n
                if (v2 != sub_4079a0(&v7, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v5 = 1;\n
            }\n
        }\n
        sub_4029c0(v4);\n
        sub_4029c0(v3);\n
        sub_401bd0(\"Unable to write tmp passwd file\");\n
        sub_4032d0(\"~passwd\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        sub_401bd0(\"Can't delete root user\");\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4211196:sub_4041fc": null, "4211200:sub_404200": "extern unsigned int g_410114;\n
\n
int sub_404200(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct struct_0 **v2;  // [bp-0xac]\n
    unsigned int v3;  // [bp-0xa8]\n
    struct struct_0 **v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    void* v7;  // [bp-0x98]\n
    char v8;  // [bp-0x91]\n
    unsigned int v9;  // [bp-0x90]\n
    char v10;  // [bp-0x89]\n
    char v11;  // [bp-0x9]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v8 = 0;\n
    if (!v14)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (sub_4079a0() <= 32)\n
    {\n
        if (sub_407d30(g_410114) && sub_407d30(g_410114))\n
        {\n
            sub_401bd0(\"Must be root or the user being changed\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        v7 = sub_402510(\"passwd\", \"r\");\n
        if (!v7)\n
        {\n
            sub_401bd0(\"Unable to open passwd file\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        v6 = sub_402510(\"~passwd\", \"w\");\n
        if (!v6)\n
        {\n
            sub_401bd0(\"Unable to open tmp passwd file\");\n
            sub_4029c0(v7);\n
            v11 = 0;\n
            return v11;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!sub_402cc0(&v10, 127, v7))\n
                {\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    if (v8)\n
                    {\n
                        sub_4032d0(\"passwd\");\n
                        sub_403520(\"~passwd\", \"passwd\");\n
                        sub_401c10();\n
                        v11 = 1;\n
                        return v11;\n
                    }\n
                    sub_401bd0(\"User not found\");\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    sub_4032d0(\"~passwd\");\n
                    v11 = 0;\n
                    return v11;\n
                }\n
            } while (!sub_4079a0());\n
            v9 = sub_407b50(&v10);\n
            if (!v9)\n
            {\n
                sub_401bd0(\"Failed to parse passwd file\");\n
                sub_4029c0(v7);\n
                sub_4029c0(v6);\n
                sub_4032d0(\"~passwd\");\n
                v11 = 0;\n
                return v11;\n
            }\n
            else if (sub_407d30(v9))\n
            {\n
                (&v10)[sub_4079a0()] = 58;\n
                v2 = v6;\n
                v0 = sub_4079a0();\n
                v3 = sub_402b90(&v10, v0, 1, v2);\n
                if (v3 != sub_4079a0(&v10, v0, 1))\n
                {\n
                    sub_401bd0(\"Unable to write tmp passwd file\");\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    sub_4032d0(\"~passwd\");\n
                    v11 = 0;\n
                    return v11;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v14;\n
                sub_405e40(&v10, \"$s:$s\\n
\", v1);\n
                v4 = v6;\n
                v0 = sub_4079a0(&v10, \"$s:$s\\n
\", v1);\n
                v5 = sub_402b90(&v10, v0, 1, v4);\n
                if (v5 != sub_4079a0(&v10, v0, 1))\n
                {\n
                    sub_4029c0(v7);\n
                    sub_4029c0(v6);\n
                    sub_401bd0(\"Unable to write tmp passwd file\");\n
                    sub_4032d0(\"~passwd\");\n
                    v11 = 0;\n
                    return v11;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v11 = 0;\n
        return v11;\n
    }\n
}\n
", "4212330:sub_40466a": null, "4212336:sub_404670": "extern unsigned int g_410114;\n
\n
int sub_404670(unsigned int v10, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9d]\n
    void* v1;  // [bp-0x9c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x98]\n
    char v3;  // [bp-0x91]\n
    unsigned int v4;  // [bp-0x90]\n
    unsigned int v5;  // [bp-0x8c]\n
    char v6;  // [bp-0x85]\n
    char v7;  // [bp-0x5]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v3 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v10)\n
    {\n
        sub_401bd0(\"Invalid username\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (sub_4079a0() > 32)\n
    {\n
        sub_401bd0(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        if (!g_410114)\n
        {\n
            sub_401f60(\"root\");\n
            v0 = 1;\n
        }\n
        else if (sub_407d30(g_410114))\n
        {\n
            sub_4079a0();\n
            v1 = sub_404f60();\n
            if (!v1)\n
            {\n
                sub_401bd0(\"calloc failed\");\n
                v7 = 0;\n
                return v7;\n
            }\n
            sub_407540(v1);\n
            sub_402100();\n
            sub_401f60(\"root\");\n
        }\n
        v2 = sub_402510(\"passwd\", \"r\");\n
        if (!v2)\n
        {\n
            sub_401bd0(\"Unable to open passwd file\");\n
            if (v1)\n
            {\n
                sub_402100();\n
                sub_401f60(v1);\n
                sub_404d00();\n
            }\n
            if (v0)\n
                sub_402100();\n
            v7 = 0;\n
            return v7;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!sub_402cc0(&v6, 127, v2))\n
                        {\n
                            sub_4029c0(v2);\n
                            if (!v3)\n
                            {\n
                                sub_401bd0(\"User not found\");\n
                                if (v1)\n
                                {\n
                                    sub_402100();\n
                                    sub_401f60(v1);\n
                                    sub_404d00();\n
                                }\n
                                if (v0)\n
                                    sub_402100();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                            else\n
                            {\n
                                sub_401c10();\n
                                if (v1)\n
                                {\n
                                    sub_402100();\n
                                    sub_401f60(v1);\n
                                    sub_404d00();\n
                                }\n
                                if (v0)\n
                                    sub_402100();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                        }\n
                    } while (!sub_4079a0());\n
                    v5 = sub_407b50(&v6);\n
                    if (!v5)\n
                    {\n
                        sub_401bd0(\"Failed to parse passwd file\");\n
                        sub_4029c0(v2);\n
                        if (v1)\n
                        {\n
                            sub_402100();\n
                            sub_401f60(v1);\n
                            sub_404d00();\n
                        }\n
                        if (v0)\n
                            sub_402100();\n
                        v7 = 0;\n
                        return v7;\n
                    }\n
                } while (sub_407d30(v5));\n
                v4 = sub_407b50(0);\n
                if (!v4)\n
                {\n
                    sub_401bd0(\"Failed to parse passwd file\");\n
                    sub_4029c0(v2);\n
                    if (v1)\n
                    {\n
                        sub_402100();\n
                        sub_401f60(v1);\n
                        sub_404d00();\n
                    }\n
                    if (v0)\n
                        sub_402100();\n
                    v7 = 0;\n
                    return v7;\n
                }\n
            } while (sub_407d30(v4));\n
            sub_401c10();\n
            sub_4029c0(v2);\n
            if (v1)\n
            {\n
                sub_402100();\n
                sub_401f60(v1);\n
                sub_404d00();\n
            }\n
            if (v0)\n
                sub_402100();\n
            v7 = 1;\n
            return v7;\n
        }\n
    }\n
}\n
", "4213504:sub_404b00": "extern char g_410178;\n
\n
int sub_404b00(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = g_410178;\n
    if (!v6)\n
        return g_410178;\n
    v7 = v6;\n
    if (*(v7) <= 1016)\n
    {\n
        if (*(v6) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v6) >> 3;\n
        *((v6 + 4)) = (&g_410178)[v2];\n
        v1 = v6;\n
        if (*(v6) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v6) >> 3;\n
        v7 = v0;\n
        (&g_410178)[v7] = v1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v7;\n
        if (!*((v3 + 4)))\n
        {\n
            *((v3 + 4)) = v6;\n
            *((v6 + 8)) = v3;\n
            v7 = v6;\n
            *((v7 + 4)) = 0;\n
            return v6;\n
        }\n
        else if (*(v6) >= *(*((v3 + 4))))\n
        {\n
            v7 = *((v3 + 4));\n
            v3 = v7;\n
        }\n
        else\n
        {\n
            *((v6 + 4)) = *((v3 + 4));\n
            *((v6 + 8)) = v3;\n
            *((*((v3 + 4)) + 8)) = v6;\n
            v7 = v3;\n
            *((v7 + 4)) = v6;\n
            return v3;\n
        }\n
    }\n
}\n
", "4213819:sub_404c3b": null, "4213824:sub_404c40": "extern struct_0 *g_410178;\n
\n
int sub_404c40(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v3 += 4;\n
    v3 = v3 + 4095 & -0x1000;\n
    if (cgc_allocate(v3, 0, &v0, 0, 0))\n
    {\n
        sub_405e10(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
        cgc__terminate(-1);\n
    }\n
    sub_4079e0(v0);\n
    *(v0) = v3 - 4;\n
    if (!g_410178)\n
    {\n
        v4 = v0;\n
        g_410178 = v4;\n
        return v0;\n
    }\n
    v4 = sub_404b00(v0);\n
    return v4;\n
}\n
", "4214013:sub_404cfd": null, "4214016:sub_404d00": "int sub_404d00(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = v3;\n
    v0 = 0;\n
    if (v3)\n
    {\n
        v0 = v3 - 4;\n
        v4 = sub_404b00(v0);\n
    }\n
    return v4;\n
}\n
", "4214067:sub_404d33": null, "4214080:sub_404d40": "extern struct_0 *g_410178;\n
\n
int sub_404d40()\n
{\n
    unsigned int v0[3];  // [bp-0xc]\n
    unsigned int v1[3];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (cgc_allocate(0x1000, 0, &g_410178, 0, 0))\n
    {\n
        sub_405e10();\n
        cgc__terminate();\n
    }\n
    sub_4079e0(g_410178);\n
    v1[0] = g_410178;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4080;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4214266:sub_404dfa": null, "4214272:sub_404e00": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_404e00(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_2 *v3;  // eax, Other Possible Types: struct_0 *, unsigned int\n
\n
    v0 = &v1;\n
    if (!v2)\n
        return v2;\n
    if (v2->field_8)\n
        v2->field_8->field_4 = v2->field_4;\n
    v3 = v2;\n
    if (!v3->field_4)\n
        return v3;\n
    v3 = v2->field_4;\n
    v3->field_8 = v2->field_8;\n
}\n
", "4214356:sub_404e54": null, "4214368:sub_404e60": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_0 *g_410178;\n
\n
int sub_404e60(unsigned int v5)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!g_410178)\n
        sub_404d40();\n
    for (v1 = g_410178; v1; v1 = *((v1 + 4)))\n
    {\n
        if (*(v1) >= v5)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        sub_404c40(v5);\n
        v2 = sub_404e60(v5);\n
        return v2;\n
    }\n
    sub_404e00(v1);\n
    if (*(v1) - v5 < 12)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + v5;\n
    *(v0) = *(v1) - (v5 + 4);\n
    *(v1) = v5;\n
    sub_404b00(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4214613:sub_404f55": null, "4214624:sub_404f60": "int sub_404f60(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_404fc0();\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    sub_4079e0(v1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4214712:sub_404fb8": null, "4214720:sub_404fc0": "typedef struct struct_1 {\n
    char padding_0[4260216];\n
    struct struct_0 *field_410178;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_410178[4];\n
\n
int sub_404fc0(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_404e60(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_410178[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_410178[v2];\n
        g_410178[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_404e60(v6);\n
    return v3;\n
}\n
", "4214976:sub_4050c0": "typedef struct struct_1 {\n
    char padding_0[4260216];\n
    struct struct_0 *field_410178;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_410178[4];\n
\n
int sub_404fc0(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_404e60(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_410178[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_410178[v2];\n
        g_410178[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_404e60(v6);\n
    return v3;\n
}\n
", "4215156:sub_405174": null, "4215168:sub_405180": null, "4215376:sub_405250": "extern unsigned int g_410378;\n
extern void* g_4103f8;\n
\n
int sub_405250(unsigned int v5, unsigned int a0[1065183])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2[1065183];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[1065183];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 128;\n
    sub_4079e0(&g_410378);\n
    g_4103f8 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2[0] = 0; v2 < a0; v2 += 1)\n
    {\n
        (&g_410378)[v2] = *((v5 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2[0] = v6;\n
        if (v2 >= 32)\n
            break;\n
        v1 = (&g_410378)[&v2[0] + 1 & 31];\n
        (&g_410378)[v2] = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4215573:sub_405315": null, "4215584:sub_405320": "int sub_405320(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405250(&v2, 0x1);\n
}\n
", "4215617:sub_405341": null, "4215632:sub_405350": "extern char g_410378;\n
extern struct_0 *g_4103f8;\n
\n
int sub_405350()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = *((0x4 * g_4103f8 + &g_410378));\n
    v7 = *(&(&g_410378)[4 * (&g_4103f8->padding_0[3] & 31)]);\n
    v6 = *(&(&g_410378)[4 * (&g_4103f8->padding_0[24] & 31)]);\n
    v5 = *(&(&g_410378)[4 * (&g_4103f8->padding_0[10] & 31)]);\n
    v4 = *(&(&g_410378)[4 * (&g_4103f8->padding_0[31] & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *((0x4 * g_4103f8 + &g_410378)) = v1;\n
    *(&(&g_410378)[4 * (&g_4103f8->padding_0[31] & 31)]) = v0;\n
    g_4103f8 = &g_4103f8->padding_0[31] & 31;\n
    return v0;\n
}\n
", "4215892:sub_405454": null, "4215904:sub_405460": "int sub_405460(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 > a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v7 != a0)\n
    {\n
        v2 = a0 - v7 + 1;\n
        if (!v2)\n
        {\n
            v4 = sub_405350();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = sub_405350();\n
        } while (v3 >= v2 * v1);\n
        v0 = v7;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v7;\n
        return v4;\n
    }\n
}\n
", "4216080:sub_405510": "int sub_405510(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4216167:sub_405567": null, "4216176:sub_405570": "int sub_405570(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4216210:sub_405592": null, "4216224:sub_4055a0": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
int sub_4055a0(struct_0 *v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // ecx\n
    struct_0 *v10;  // esi\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    if (v3->field_100 >= 0x100)\n
    {\n
        for (v2 = v3; v3->field_100 > 0; v2 = *(&v1) + v2)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(1, v2, v3->field_100))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v1))\n
            {\n
                v8 = v3;\n
                v9 = v8->field_100 - *(&v1);\n
                *(&v8->field_100) = v9;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v10 = v3;\n
    *(&v9) = v10->field_100;\n
    *(&v10->field_100) = v9 + 1;\n
    (&v3->field_0)[v9] = a0;\n
    v4 = a1 + 1;\n
    return v4;\n
}\n
", "4216474:sub_40569a": null, "4216480:sub_4056a0": "int sub_4056a0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v5, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4216558:sub_4056ee": null, "4216560:sub_4056f0": "int sub_4056f0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    v2 = sub_4079a0();\n
    while (true)\n
    {\n
        if (v1 != v2)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v7 + v1, v2 - v1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v3))\n
            {\n
                v1 = *(&v3) + v1;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            sub_4056a0(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4216725:sub_405795": null, "4216736:sub_4057a0": "int sub_4057a0(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x130]\n
    char v1;  // [bp-0x12c]\n
    unsigned int v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x124]\n
    void* v4;  // [bp-0x120]\n
    unsigned int v5;  // [bp-0x11c]\n
    char v6;  // [bp-0x116]\n
    unsigned short v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v12 = &v13;\n
    v11 = v15;\n
    v10 = v16;\n
    v8 = sub_4055a0;\n
    v7 = 0;\n
    v5 = &v6;\n
    v4 = 0;\n
    v0 = a0;\n
    v3 = sub_4058c0(v5, v8, v4, v14);\n
    v2 = &v6;\n
    while (true)\n
    {\n
        if (v7 <= 0)\n
        {\n
            v9 = v3;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v2, v7))\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
        else if (*(&v1))\n
        {\n
            v7 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
    }\n
    return v9;\n
}\n
", "4217013:sub_4058b5": null, "4217024:sub_4058c0": "int sub_4058c0(struct struct_0 **v6, struct struct_0 **a0, struct struct_0 **a1, struct struct_0 **a2, struct struct_0 **a3)\n
{\n
    struct struct_0 **<0x4058c0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    struct struct_0 **v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x1c]\n
    struct struct_0 **v9;  // [bp+0x20]\n
    struct struct_0 **v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28]\n
    struct struct_0 **v12;  // [bp+0x2c]\n
    struct struct_0 **v13;  // [bp+0x30]\n
    unsigned int v14;  // [bp+0x34]\n
    char v15;  // [bp+0x39]\n
    char v16;  // [bp+0x3a]\n
    char v17;  // [bp+0x3b]\n
    struct struct_0 **v18;  // [bp+0x3c]\n
    struct struct_0 **v19;  // [bp+0x40]\n
    struct struct_0 **v20;  // [bp+0x48]\n
    struct struct_0 **v21;  // [bp+0x50]\n
    struct struct_0 **v22;  // [bp+0x54]\n
    struct struct_0 **v23;  // [bp+0x58]\n
    struct struct_0 **v24;  // [bp+0x5c]\n
    struct struct_0 **v25;  // [bp+0x60]\n
    struct struct_0 **v26;  // [bp+0x64]\n
    char v27;  // [bp+0x6b]\n
    struct struct_0 **v28;  // [bp+0x6c], Other Possible Types: unsigned int\n
    void* v29;  // [bp+0x70]\n
    struct struct_0 **v30;  // [bp+0x74], Other Possible Types: unsigned int\n
    struct struct_0 **v31;  // [bp+0x78], Other Possible Types: unsigned int\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    struct struct_0 **v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    struct struct_0 **v41;  // eax\n
\n
    v4 = &<0x4058c0[is_2]|Stack bp, 1 B>;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(a2))\n
            return a1;\n
        v27 = *(a2);\n
        a2 = a2 + 1;\n
        if (v27 != 36)\n
        {\n
            v32 = a0;\n
            v5 = v6;\n
            v6 = v27;\n
            a0 = a1;\n
            a1 = v32(v6, a0);\n
        }\n
        else\n
        {\n
            v28 = 0;\n
            v29 = 0;\n
            v30 = 0;\n
            v31 = 0;\n
            if (!*(a2))\n
                return a1;\n
            if (*(a2) != 36)\n
            {\n
                if (*(a2) == 45)\n
                {\n
                    v31 |= 1;\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v5 = *(a2);\n
                if (sub_401000(*(a2)))\n
                {\n
                    if (*(a2) == 48)\n
                        v31 |= 4;\n
                    v26 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v26;\n
                    v30 = sub_407330();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                if (*(a2) == 46)\n
                {\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                    v25 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v25;\n
                    v28 = sub_407330();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v14 = *(a2) - 88;\n
                switch (v14)\n
                {\n
                case 0:\n
                    v31 |= 8;\n
                    v37 = a3;\n
                    a3 = v37 + 1;\n
                    v21 = &*(v37)->field_0;\n
                    v10 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v21;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v10;\n
                    a1 = sub_406010(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 11:\n
                    v41 = a3;\n
                    a3 = v41 + 1;\n
                    v17 = *(v41);\n
                    v15 = v17;\n
                    v16 = 0;\n
                    v9 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = &v15;\n
                    a2 = v30;\n
                    a3 = 0;\n
                    v7 = v9;\n
                    a1 = sub_4070e0(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 12:\n
                    v35 = a3;\n
                    a3 = v35 + 1;\n
                    v23 = &*(v35)->field_0;\n
                    v12 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v23;\n
                    a2 = 10;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v12;\n
                    a1 = sub_406010(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 13:\n
                    v31 |= 16;\n
                    v39 = a3;\n
                    a3 = v39 + 2;\n
                    *(&v19) = *(&v39);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v19);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_406e30(v6, a0, a1);\n
                    break;\n
                case 14:\n
                    v38 = a3;\n
                    a3 = v38 + 2;\n
                    *(&v20) = *(&v38);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v20);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_406e30(v6, a0, a1);\n
                    break;\n
                case 22:\n
                    v40 = a3;\n
                    a3 = v40 + 1;\n
                    v18 = &*(v40)->field_0;\n
                    *(v18) = a1;\n
                    break;\n
                case 27:\n
                    v34 = a3;\n
                    a3 = v34 + 1;\n
                    v24 = &*(v34)->field_0;\n
                    v13 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v24;\n
                    a2 = v30;\n
                    a3 = v28;\n
                    v7 = v13;\n
                    a1 = sub_4070e0(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 32:\n
                    v36 = a3;\n
                    a3 = v36 + 1;\n
                    v22 = &*(v36)->field_0;\n
                    v11 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v22;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v11;\n
                    a1 = sub_406010(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                a2 = a2 + 1;\n
            }\n
            else\n
            {\n
                v33 = a0;\n
                v5 = v6;\n
                v6 = 36;\n
                a0 = a1;\n
                a1 = v33(v6, a0);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4218379:sub_405e0b": null, "4218384:sub_405e10": "int sub_405e10(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_4057a0(v4, v1);\n
    return v0;\n
}\n
", "4218428:sub_405e3c": null, "4218432:sub_405e40": "int sub_405e40(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
\n
    v4 = &v5;\n
    v3 = v8;\n
    v2 = &v7;\n
    v0 = v2;\n
    v1 = sub_405e80(v6, a0);\n
    v9 = v3;\n
    return v1;\n
}\n
", "4218487:sub_405e77": null, "4218496:sub_405e80": "int sub_405e80(unsigned int v8, void* **a0, void* **a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* **v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
\n
    v6 = &v7;\n
    v5 = v9;\n
    v4 = v10;\n
    v3 = &sub_405570;\n
    v2 = v8;\n
    v1 = 0;\n
    v0 = sub_4058c0(v2, v3, v1, a0, a1);\n
    v3(v2, 0);\n
    v11 = v4;\n
    v12 = v5;\n
    return v0;\n
}\n
", "4218615:sub_405ef7": null, "4218624:sub_405f00": "int sub_405f00(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m a0 >> 32;\n
        v5 = (0 CONCAT v5) /m a0;\n
        if (a0 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a1[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a1[v9] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4218896:sub_406010": "int sub_406010(unsigned int v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    struct struct_0 **v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v3 = 1;\n
        a2 = -(a2);\n
        v5 += 1;\n
    }\n
    v2 = sub_405f00(a2, a3, &v1, a6);\n
    v5 = v2 + v5;\n
    if (a4 > 0 && v5 < a4)\n
        v4 = a4 - v5;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < a5)\n
            v4 = a5 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v8, 45);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v8, 48);\n
            else\n
                a1 = a0(v8, 32);\n
        }\n
    }\n
    if (v3)\n
    {\n
        a1 = a0(v8, 45);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        a1 = a0(v8, *(&v0 + v0));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v10 = v4;\n
        v4 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        a1 = a0(v8, 32);\n
    }\n
    return a1;\n
}\n
", "4219514:sub_40627a": null, "4219520:sub_406280": null, "4222503:sub_406e27": null, "4222512:sub_406e30": "int sub_406e30()\n
{\n
    int <0x406e30[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xc]\n
    char v10;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x14]\n
    char v12;  // [bp+0x18]\n
    char v13;  // [bp+0x1c]\n
    char v14;  // [bp+0x20]\n
    unsigned int v15;  // [bp+0x38]\n
    char v16;  // [bp+0x3f]\n
    unsigned int v17;  // [bp+0x40]\n
    unsigned int v18;  // [bp+0x44], Other Possible Types: char\n
    char v19;  // [bp+0x48], Other Possible Types: unsigned long\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ebp\n
\n
    v5 = &<0x406e30[is_2]|Stack bp, 1 B>;\n
    *(&v4) = *(&v10);\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (((CmpF(0, *(&v4)) & 69 | ((CmpF(0, *(&v4)) & 69) >> 6)) & 1) != 1)\n
    {\n
        *(&v19) = (0 CONCAT *(&v19)) ^ 0x80000000000000008000000000000000;\n
        v16 = 1;\n
        v18 = *(&v18) + 1;\n
    }\n
    if (!*(&v13))\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = 6;\n
    }\n
    else\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = *(&v13);\n
    }\n
    v9 = &v12;\n
    v10 = *(&v14);\n
    v15 = sub_406280();\n
    v18 = v15 + v18;\n
    if (*(&v12) > 0 && v18 < *(&v12))\n
        v17 = *(&v12) - v18;\n
    if (!(*(&v14) & 1))\n
    {\n
        if (v16 && v17 > 0 && (*(&v14) & 4))\n
        {\n
            v20 = v8;\n
            v6 = (&v6)[1];\n
            v7 = 45;\n
            v8 = v9;\n
            v9 = v20(v7, v8);\n
            v16 = 0;\n
        }\n
        while (true)\n
        {\n
            v21 = v17;\n
            v17 = v21 - 1;\n
            if (v21 <= 0)\n
                break;\n
            if ((*(&v14) & 4))\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 48;\n
            }\n
            else\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 32;\n
            }\n
            v8 = v9;\n
            v9 = v22(v7, v8);\n
        }\n
    }\n
    if (v16)\n
    {\n
        v23 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 45;\n
        v8 = v9;\n
        v9 = v23(v7, v8);\n
        v16 = 0;\n
    }\n
    for (v11 = 0; v11 < v15; v11 += 1)\n
    {\n
        v24 = v8;\n
        v6 = (&v6)[1];\n
        v7 = (&v12)[v11];\n
        v8 = v9;\n
        v9 = v24(v7, v8);\n
    }\n
    if (!(*(&v14) & 1))\n
    {\n
        v27 = v5;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v25 = v17;\n
        v17 = v25 - 1;\n
        if (v25 <= 0)\n
            break;\n
        v26 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 32;\n
        v8 = v9;\n
        v9 = v26(v7, v8);\n
    }\n
    v27 = v5;\n
    return;\n
}\n
", "4223199:sub_4070df": null, "4223200:sub_4070e0": "int sub_4070e0(unsigned int v6, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // edx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v4 = &v5; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v6, *(a2));\n
        }\n
        v3 = a1;\n
        return v3;\n
    }\n
    v2 = sub_4079a0();\n
    v1 = 0;\n
    if (a4 > 0 && v2 > a4)\n
        v2 = a4;\n
    if (a3 > 0 && v2 < a3)\n
        v1 = a3 - v2;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v7 = v1;\n
            v1 = v7 - 1;\n
            if (v7 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v9 = a2;\n
        a2 = v9 + 1;\n
        v10 = *(v9);\n
        v0 = a1;\n
        a1 = a0(v6, v10);\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v1;\n
            v1 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v6, 32);\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4223712:sub_4072e0": "int sub_4072e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405460(0, 2147483646);\n
}\n
", "4223745:sub_407301": null, "4223760:sub_407310": "int sub_407310(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405320(v2);\n
}\n
", "4223783:sub_407327": null, "4223792:sub_407330": "int sub_407330(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    for (v0 = 0; sub_401220(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = 1;\n
        v5 += 1;\n
    }\n
    for (; sub_401000(*(v5)); v1 = v1 * 10 + *(v6) - 48)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
    }\n
    if (v0)\n
    {\n
        v2 = -(v1);\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4224006:sub_407406": null, "4224016:sub_407410": "int sub_407410(char *v5)\n
{\n
    int <0x407410[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x1c]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x18]\n
    unsigned long long v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    char *v4;  // [bp+0x0]\n
    char *v6;  // [bp+0x7], Other Possible Types: char\n
    unsigned long v7;  // [bp+0x8]\n
    char *v8;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char v9;  // [bp+0x14]\n
    unsigned long v10;  // [bp+0x18]\n
    unsigned long v11;  // [bp+0x20]\n
    char *v12;  // eax, Other Possible Types: unsigned int, void*\n
\n
    v3 = &<0x407410[is_2]|Stack bp, 1 B>;\n
    v2 = 0;\n
    v1 = v5;\n
    for (v0 = v5; *(*(&v8)); v8 = *(&v8) + 1)\n
    {\n
        if (*(*(&v8)) == 46)\n
        {\n
            *(v8) = 0;\n
            v8 = *(&v8) + 1;\n
            break;\n
        }\n
    }\n
    v4 = *(&v9);\n
    *(&v11) = sub_407330(*(&v9));\n
    v12 = *(v8);\n
    if (v12)\n
    {\n
        v4 = v8;\n
        *(&v10) = sub_407330(v8);\n
        while (true)\n
        {\n
            v12 = 0;\n
            *(&v6) = 0;\n
            if (v8)\n
            {\n
                v4 = *(v8);\n
                v12 = sub_401000(*(v8));\n
                v6 = v12;\n
            }\n
            *(&v12) = v6;\n
            if (!(v6 & 1))\n
                break;\n
            tmp_12 = DivV(tmp_14, tmp_13);\n
            *(&v10) = tmp_12;\n
            v8 = *(&v8) + 1;\n
        }\n
    }\n
    *(&v7) = (0 CONCAT *(&v11)) + (0 CONCAT *(&v10));\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v12;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v12;\n
}\n
", "4224316:sub_40753c": null, "4224320:sub_407540": "int sub_407540(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); *(v6) = tmp_19)\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    *(v3) = 0;\n
    return v0;\n
}\n
", "4224396:sub_40758c": null, "4224400:sub_407590": "int sub_407590(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = 0;\n
    }\n
    return v3;\n
}\n
", "4224537:sub_407619": null, "4224544:sub_407620": "int sub_407620(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = *(&a0);\n
        v3 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4224680:sub_4076a8": null, "4224688:sub_4076b0": "int sub_4076b0(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; sub_401220(*(v8)); v8 += 1);\n
    if (*(v8) == 45)\n
    {\n
        v3 = 1;\n
        *(&v8) = v8 + 1;\n
    }\n
    else if (*(v8) == 43)\n
    {\n
        *(&v8) = v8 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_4077b7;\n
    if (*(v8) != 48)\n
    {\n
LABEL_4077b7:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_40780a;\n
        if (*(v8) == 48)\n
        {\n
            if (*((v8 + 1)) != 98 && !(*((v8 + 1)) == 66))\n
                goto LABEL_40780a;\n
            *(&v8) = v8 + 2;\n
            a1 = 2;\n
        }\n
LABEL_40780a:\n
    }\n
    else\n
    {\n
        if (*((v8 + 1)) != 120 && !(*((v8 + 1)) == 88))\n
            goto LABEL_4077b7;\n
        *(&v8) = v8 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v8) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = 0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m a1 >> 32;\n
    v2 = (0 CONCAT v2) /m a1;\n
    while (*(v8))\n
    {\n
        v0 = *(v8);\n
        if (sub_401000(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!sub_4010c0(v0))\n
                break;\n
            if (!sub_401040(v0))\n
                v0 -= 87;\n
            else\n
                v0 -= 55;\n
        }\n
        if (v0 >= a1)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_407939:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_40793e:\n
            v4 *= a1;\n
            v4 = v0 + v4;\n
            v8 += 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_40793e;\n
            goto LABEL_407939;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v8;\n
    if (v3)\n
    {\n
        v5 = -(v4);\n
        return v5;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4225440:sub_4079a0": "int sub_4079a0(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4225499:sub_4079db": null, "4225504:sub_4079e0": "int sub_4079e0(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ecx\n
\n
    for (v0 = &v1; a0; v3[1 + v2] = 0)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
    }\n
    *((v2 + a0)) = 0;\n
    return v2;\n
}\n
", "4225559:sub_407a17": null, "4225568:sub_407a20": "int sub_407a20(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v5) = v0;\n
        v5 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(v6) = v1;\n
    }\n
    return v2;\n
}\n
", "4225723:sub_407abb": null, "4225728:sub_407ac0": "int sub_407ac0(char *v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_4079a0(v5))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v5[v1] == a0)\n
        {\n
            v2 = &v5[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4225866:sub_407b4a": null, "4225872:sub_407b50": "extern struct_0 *g_410500;\n
\n
int sub_407b50(char *v7, char *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v7)\n
    {\n
        if (g_410500)\n
        {\n
            v7 = g_410500;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (sub_407ac0(a0, *(v7)))\n
            v0 = *(v7);\n
        if (!(v0 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (!*(v7))\n
    {\n
        g_410500 = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = sub_4079a0(v7);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            g_410500 = 0;\n
            v4 = v7;\n
            return v4;\n
        }\n
        if (sub_407ac0(a0, *((v7 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v7 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (sub_407ac0(a0, *((v7 + v2))))\n
        {\n
            *((v7 + v2)) = 0;\n
        }\n
        else\n
        {\n
            g_410500 = v7 + v2;\n
            v4 = v7;\n
            return v4;\n
        }\n
    }\n
    if (v2 == v1)\n
        g_410500 = 0;\n
    v4 = v7;\n
    return v4;\n
}\n
", "4226342:sub_407d26": null, "4226352:sub_407d30": "int sub_407d30(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v4 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v4 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v4))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v4) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v4) >= *(a0))\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v4) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v4) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4226702:sub_407e8e": null, "4226704:sub_407e90": "int sub_407e90(char *v6, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = sub_4079a0(v6);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= sub_4079a0(a0))\n
                break;\n
            v6[v2] = a0[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v6[v2] = 0;\n
        v3 = v6;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4226864:sub_407f30": "int sub_407f30(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = *((v6 + v2));\n
            v0 = *((a0 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4227024:sub_407fd0": "int sub_407fd0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a1)\n
    {\n
        for (v3 = 0; v3 < a1; v3 = *(&v2) + v3)\n
        {\n
            v1 = a1 - v3;\n
            v0 = &v2;\n
            if (cgc_receive(v7, a0 + v3, v1))\n
                cgc__terminate();\n
            if (!*(&v2))\n
                cgc__terminate();\n
        }\n
        v4 = v3;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4227219:sub_408093": null, "4227232:sub_4080a0": "int sub_4080a0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a1)\n
    {\n
        for (v3 = 0; v3 < a1; v3 = *(&v2) + v3)\n
        {\n
            v1 = a1 - v3;\n
            v0 = &v2;\n
            if (cgc_transmit(v7, a0 + v3, v1))\n
                cgc__terminate();\n
            if (!*(&v2))\n
                cgc__terminate();\n
        }\n
        v4 = v3;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4227440:sub_408170": "int sub_408170()\n
{\n
    unsigned int v0[164];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[164];  // eax\n
    unsigned int v5[164];  // ecx\n
    unsigned int v6[164];  // eax\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v5;\n
    v6 = v0;\n
    v6[128] = 0;\n
    v6[163] = 0;\n
    return v0;\n
}\n
", "4227475:sub_408193": null, "4227488:sub_4081a0": "int sub_4081a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v4;\n
}\n
", "4227500:sub_4081ac": null, "4227504:sub_4081b0": "typedef struct struct_1 {\n
    char padding_0[512];\n
    unsigned int field_200;\n
    char padding_204[128];\n
    unsigned short field_284;\n
    char padding_286[6];\n
    struct struct_0 *field_28c;\n
    char padding_290[512];\n
    unsigned short field_490;\n
    unsigned short field_492;\n
    unsigned short field_494;\n
    unsigned short field_496;\n
    unsigned short field_498;\n
    unsigned short field_49a;\n
    unsigned short field_49c;\n
    unsigned short field_49e;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4081b0(struct_0 *v23)\n
{\n
    char <0x4081b0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44]\n
    unsigned int v4;  // [bp-0x40]\n
    unsigned int v5;  // [bp-0x3c]\n
    struct_1 *v6;  // [bp-0x38]\n
    char v7;  // [bp-0x31]\n
    struct struct_0 **v8;  // [bp-0x30]\n
    unsigned short v9;  // [bp-0x2a]\n
    char v10;  // [bp-0x27]\n
    char v11;  // [bp-0x26]\n
    struct_0 *v12;  // [bp-0x24]\n
    void* v13;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v14;  // [bp-0x19]\n
    unsigned short v15;  // [bp-0x18]\n
    unsigned short v16;  // [bp-0x16]\n
    void* v17;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v18;  // [bp-0xd]\n
    struct_1 *v19;  // [bp-0xc]\n
    char v20;  // [bp-0x5]\n
    struct struct_0 **v21;  // [bp-0x4]\n
    struct_0 *v22;  // [bp+0x0]\n
    unsigned int v24;  // [bp+0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    struct_1 *v26;  // ecx\n
    struct_1 *v27;  // eax\n
    struct_1 *v28;  // eax\n
    struct_1 *v30;  // eax\n
    struct_1 *v31;  // eax\n
    struct_1 *v32;  // ecx\n
    struct_1 *v34;  // eax\n
    struct_1 *v35;  // eax\n
\n
    v21 = &<0x4081b0[is_2]|Stack bp, 1 B>;\n
    v19 = v26;\n
    v6 = v19;\n
    v18 = 0;\n
    if (!v23)\n
    {\n
        v20 = 0;\n
        return v20 & 1;\n
    }\n
    else if (sub_40a9f0() >= 16)\n
    {\n
        v6->field_200 = v23;\n
        for (v17 = 0; v17 < 16; v17 += 1)\n
        {\n
            v27 = v6;\n
            *(&v27->padding_204[4 + 8 * v17]) = 0;\n
            *(&v27->padding_204[8 * v17]) = 65535;\n
        }\n
        v6->field_284 = 0;\n
        v1 = 5;\n
        if (sub_40acb0(0, &v14) != 5)\n
        {\n
            v20 = 0;\n
            return v20 & 1;\n
        }\n
        if (v14 == 255)\n
        {\n
            v14 = 193;\n
            v15 = 0;\n
            v16 = 5;\n
            v0 = 5;\n
            if (sub_40abf0(0, &v14) != 5)\n
            {\n
                v20 = 0;\n
                return v20 & 1;\n
            }\n
            v18 = 1;\n
        }\n
        v22 = &v6->padding_286[0];\n
        v23 = &v14;\n
        v24 = 5;\n
        sub_407620(v23, v24, v25);\n
        v2 = v15;\n
        v6->field_28c = sub_40aa10(v23, v24) * v2 + v16;\n
        v3 = sub_40aa10();\n
        v6->field_494 = (0 CONCAT sub_40aa30() * v3 - v6->field_28c) /m 3;\n
        v4 = sub_40aa10();\n
        v6->field_496 = sub_40aa30() * v4 * 3 >> 3;\n
        v6->field_49a = sub_40a9f0() - 4;\n
        v5 = sub_40aa30();\n
        v28 = v6;\n
        v28->field_49e = (sub_40a9f0() - 4) * v5;\n
        v22 = v28->field_49a;\n
        sub_40ada0();\n
        v30 = v6;\n
        v30->field_490 = 0;\n
        v30->field_492 = 0;\n
        v30->field_498 = 0;\n
        for (v13 = 0; v13 < 128; v13 += 1)\n
        {\n
            v31 = v6;\n
            *((656 + &v31->padding_0[0] + 0x4 * v13)) = 65535;\n
            *((658 + &v31->padding_0[0] + 0x4 * v13)) = 65535;\n
        }\n
        v12 = v6->field_28c;\n
        while (true)\n
        {\n
            v22 = v12;\n
            v23 = &v10;\n
            v24 = 3;\n
            if (sub_40acb0(v23, v24) != 3)\n
            {\n
                v20 = 0;\n
                return v20 & 1;\n
            }\n
            if (v10 == 255)\n
                break;\n
            if (v10 != 1)\n
            {\n
                if (v10 != 2)\n
                {\n
                    v20 = 0;\n
                    return v20 & 1;\n
                }\n
                v32 = v6;\n
                *(&v32->padding_290[2 + 4 * v32->field_490]) = *(&v11);\n
                *(&v32->padding_290[4 * v32->field_490]) = v32->field_492;\n
                v32->field_490 = v32->field_490 + 1;\n
                if (*(&v11) > v32->field_498)\n
                    v6->field_498 = *(&v11);\n
                if (v6->field_490 >= 128)\n
                {\n
                    v20 = 0;\n
                    return v20 & 1;\n
                }\n
            }\n
            v34 = v6;\n
            v34->field_492 = v34->field_492 + 1;\n
        }\n
        if ((v18 & 1))\n
        {\n
            v6->field_49c = 0;\n
        }\n
        else\n
        {\n
            v9 = 0;\n
            while (true)\n
            {\n
                if (v9 >= v6->field_49e)\n
                {\n
                    v20 = 0;\n
                    return v20 & 1;\n
                }\n
                v22 = v9;\n
                v8 = sub_408680();\n
                v21 = v8;\n
                v22 = &v7;\n
                v23 = 1;\n
                if (sub_40acb0(&v7) != 1)\n
                {\n
                    v20 = 0;\n
                    return v20 & 1;\n
                }\n
                if (v7 == 255)\n
                    break;\n
                v9 += 1;\n
                if (false)\n
                    break;\n
            }\n
            v6->field_49c = v9;\n
        }\n
        v35 = v6;\n
        v35->field_498 = v35->field_498 + 1;\n
        v20 = 1;\n
        return v20 & 1;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        return v20 & 1;\n
    }\n
}\n
", "4228731:sub_40867b": null, "4228736:sub_408680": "int sub_408680(unsigned short v4)\n
{\n
    char v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = sub_40a8a0(4);\n
    return v1 + v4 * sub_40aa10(*(&v0), 4, v5, v1, v5);\n
}\n
", "4228810:sub_4086ca": null, "4228816:sub_4086d0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4086d0(struct struct_0 **v66, unsigned int a0, struct struct_0 **a1)\n
{\n
    struct struct_0 **<0x4086d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_0 **v0;  // [bp-0xec], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xe8]\n
    unsigned int v2;  // [bp-0xe0]\n
    unsigned int v3;  // [bp-0xd8]\n
    unsigned int v4;  // [bp-0xd0]\n
    char v5;  // [bp-0xc9]\n
    unsigned int v6;  // [bp-0xc8]\n
    unsigned short v7;  // [bp-0xc2]\n
    void* v8;  // [bp-0xc0], Other Possible Types: unsigned int\n
    unsigned short v9;  // [bp-0xba]\n
    char v10;  // [bp-0xb8]\n
    unsigned short v11;  // [bp-0xb7]\n
    unsigned int v12;  // [bp-0xb5]\n
    char v13;  // [bp-0xb1]\n
    unsigned int v14;  // [bp-0xb0]\n
    char v15;  // [bp-0xa9]\n
    char v16;  // [bp-0xa6]\n
    struct struct_0 **v17;  // [bp-0xa4]\n
    struct struct_0 **v18;  // [bp-0xa0]\n
    char v19;  // [bp-0x99]\n
    char v20;  // [bp-0x96], Other Possible Types: unsigned short\n
    struct struct_0 **v21;  // [bp-0x94]\n
    char v22;  // [bp-0x8d]\n
    unsigned short v23;  // [bp-0x8c]\n
    unsigned short v24;  // [bp-0x8a]\n
    struct struct_0 **v25;  // [bp-0x88]\n
    char v26;  // [bp-0x82]\n
    unsigned short v27;  // [bp-0x81]\n
    unsigned short v28;  // [bp-0x7f]\n
    char v29;  // [bp-0x7d]\n
    char v30;  // [bp-0x7c]\n
    char v31;  // [bp-0x7a]\n
    struct struct_0 **v32;  // [bp-0x78]\n
    unsigned int v33;  // [bp-0x74]\n
    unsigned short v34;  // [bp-0x6e]\n
    struct struct_0 **v35;  // [bp-0x6c], Other Possible Types: unsigned int\n
    void* v36;  // [bp-0x68]\n
    void* v37;  // [bp-0x64], Other Possible Types: unsigned int\n
    struct struct_0 **v38;  // [bp-0x60], Other Possible Types: unsigned int\n
    struct struct_0 **v39;  // [bp-0x5c]\n
    char v40;  // [bp-0x55]\n
    char v41;  // [bp-0x52]\n
    void* v42;  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned int v43;  // [bp-0x4c]\n
    unsigned short v44;  // [bp-0x48]\n
    unsigned short v45;  // [bp-0x46]\n
    unsigned short v46;  // [bp-0x44]\n
    unsigned short v47;  // [bp-0x42]\n
    unsigned int v48;  // [bp-0x40]\n
    void* v49;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v50;  // [bp-0x38]\n
    unsigned int v51;  // [bp-0x34]\n
    unsigned short v52;  // [bp-0x2e]\n
    struct struct_0 **v53;  // [bp-0x2c]\n
    char v54;  // [bp-0x26]\n
    char v55;  // [bp-0x25]\n
    char v56;  // [bp-0x23]\n
    char v57;  // [bp-0x1f]\n
    unsigned short v58;  // [bp-0x1e]\n
    char v59;  // [bp-0x1c]\n
    char v60;  // [bp-0x18]\n
    unsigned int v61;  // [bp-0x10]\n
    unsigned int v62;  // [bp-0xc]\n
    unsigned int v63;  // [bp-0x8]\n
    struct struct_0 **v64;  // [bp-0x4], Other Possible Types: unsigned int\n
    struct struct_0 **v65;  // [bp+0x0], Other Possible Types: struct_1 *\n
    unsigned int v69;  // edi\n
    unsigned int v70;  // esi\n
    struct struct_0 **v71;  // ecx\n
\n
    v64 = &<0x4086d0[is_2]|Stack bp, 1 B>;\n
    v63 = v69;\n
    v62 = v70;\n
    v2 = &v59;\n
    if (!(sub_4090e0(v66) & 1))\n
    {\n
        v61 = -1;\n
    }\n
    else\n
    {\n
        v58 = *(&v59);\n
        v0 = v58;\n
        v53 = sub_409180();\n
        v0 = &v54;\n
        v1 = 8;\n
        if (sub_40acb0(v53) != 8)\n
        {\n
            v61 = -1;\n
        }\n
        else\n
        {\n
            v52 = *(&v55);\n
            v51 = *(&v60);\n
            if (v51 > *(&v56))\n
                v51 = *(&v56);\n
            v50 = *(&v56);\n
            v49 = 0;\n
            v48 = sub_40aa10() - 5;\n
            v47 = 65535;\n
            v46 = v52;\n
            v45 = v52;\n
            v44 = 0;\n
            while (true)\n
            {\n
                if (v49 >= v51)\n
                {\n
LABEL_4088e3:\n
                    if (!v51)\n
                        v44 = v57 + 5;\n
                    v38 = a1;\n
                    v37 = 0;\n
                    while (true)\n
                    {\n
                        if (v38 <= 0)\n
                        {\n
                            if (v51 > v50)\n
                            {\n
                                v10 = 2;\n
                                v11 = *(&v55);\n
                                v12 = v51;\n
                                v13 = v57;\n
                                v54 = 1;\n
                                v65 = v53;\n
                                v66 = &v54;\n
                                a0 = 8;\n
                                if (sub_40abf0(v66, a0) == 8)\n
                                {\n
                                    v9 = sub_409240();\n
                                    v8 = 0;\n
                                    while (true)\n
                                    {\n
                                        if (v8 >= 128)\n
                                        {\n
LABEL_408fc3:\n
                                            if (v8 == 128)\n
                                            {\n
                                                v61 = -1;\n
                                                goto LABEL_4090cc;\n
                                            }\n
                                            for (v8 = 0; v8 < 16; v8 += 1)\n
                                            {\n
                                                if (*((516 + v71 + 0x8 * v8)) == v58)\n
                                                    *((516 + v71 + 0x8 * v8)) = v9;\n
                                            }\n
                                            v65 = v9;\n
                                            v4 = sub_409180();\n
                                            v64 = v4;\n
                                            v65 = &v10;\n
                                            v66 = 8;\n
                                            if (sub_40abf0(&v10) != 8)\n
                                            {\n
                                                v61 = -1;\n
                                                goto LABEL_4090cc;\n
                                            }\n
                                            goto LABEL_4090b3;\n
                                        }\n
                                        else if (*((&v71[164 + v8] + 2)) != v58)\n
                                        {\n
                                            v8 += 1;\n
                                        }\n
                                        else\n
                                        {\n
                                            v7 = sub_4092a0();\n
                                            v65 = v71[164 + v8];\n
                                            v6 = sub_409370();\n
                                            v5 = 1;\n
                                            v64 = v6;\n
                                            v65 = &v5;\n
                                            v66 = 1;\n
                                            if (sub_40abf0(&v5) != 1)\n
                                            {\n
                                                v61 = -1;\n
                                                goto LABEL_4090cc;\n
                                            }\n
                                            else\n
                                            {\n
                                                *((&v71[164 + v8] + 2)) = v9;\n
                                                *(&v71[164 + v8]) = v7;\n
                                                goto LABEL_408fc3;\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                                else\n
                                {\n
                                    v61 = -1;\n
                                    break;\n
                                }\n
                            }\n
LABEL_4090b3:\n
                            v71[130 + 2 * v66] = v51;\n
                            v61 = v37;\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v36 = 0;\n
                            v35 = v38;\n
                            v34 = 65535;\n
                            v3 = v44 + v35;\n
                            if (v3 > sub_40aa10())\n
                                v35 = sub_40aa10() - v44;\n
                            if (v51 >= v50)\n
                            {\n
                                if (v45 != 65535)\n
                                {\n
                                    v65 = v45;\n
                                    v17 = sub_408680(v45);\n
                                    v64 = v17;\n
                                    v65 = &v15;\n
                                    v66 = 5;\n
                                    if (sub_40acb0(&v15) == 5)\n
                                    {\n
                                        v34 = *(&v16);\n
                                    }\n
                                    else\n
                                    {\n
                                        v61 = -1;\n
                                        break;\n
                                    }\n
                                }\n
                                else\n
                                {\n
                                    v45 = sub_4091d0();\n
                                    v22 = 2;\n
                                    v24 = 65535;\n
                                    v23 = v47;\n
                                    v34 = 65535;\n
                                    v65 = v45;\n
                                    v21 = sub_408680(v45);\n
                                    v64 = v21;\n
                                    v65 = &v22;\n
                                    v66 = 5;\n
                                    if (sub_40abf0(&v22) != 5)\n
                                    {\n
                                        v61 = -1;\n
                                        break;\n
                                    }\n
                                    else\n
                                    {\n
                                        v65 = v47;\n
                                        v18 = sub_408680(v47);\n
                                        v64 = v18;\n
                                        v65 = &v19;\n
                                        v66 = 5;\n
                                        if (sub_40acb0(&v19) != 5)\n
                                        {\n
                                            v61 = -1;\n
                                            break;\n
                                        }\n
                                        else if (*(&v20) != 65535)\n
                                        {\n
                                            v61 = -1;\n
                                            break;\n
                                        }\n
                                        else\n
                                        {\n
                                            v20 = v45;\n
                                            v65 = v18;\n
                                            v66 = &v19;\n
                                            a0 = 5;\n
                                            if (sub_40abf0(v66, a0) != 5)\n
                                            {\n
                                                v61 = -1;\n
                                                break;\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                                v65 = v45;\n
                                v14 = sub_408680(v45);\n
                                v64 = v14 + v44;\n
                                v65 = a0 + v37;\n
                                v66 = v35;\n
                                if (sub_40abf0(a0 + v37) != v35)\n
                                {\n
                                    v61 = -1;\n
                                    break;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                v33 = sub_40aa10();\n
                                v65 = v45;\n
                                v32 = sub_408680(v45);\n
                                v64 = v32;\n
                                v65 = &v29;\n
                                v66 = 5;\n
                                if (sub_40acb0(&v29) != 5)\n
                                {\n
                                    v61 = -1;\n
                                    break;\n
                                }\n
                                else\n
                                {\n
                                    v34 = *(&v31);\n
                                    v26 = 2;\n
                                    v27 = *(&v30);\n
                                    v28 = *(&v31);\n
                                    v65 = &v32[1] + 1;\n
                                    v66 = v71;\n
                                    a0 = v44 - 5;\n
                                    if (sub_40acb0(v66, a0) != v44 - 5)\n
                                    {\n
                                        v61 = -1;\n
                                        break;\n
                                    }\n
                                    else\n
                                    {\n
                                        v65 = -5 + v71 + v44;\n
                                        v66 = a0 + v37;\n
                                        a0 = v35;\n
                                        sub_407620(v66, a0, a1);\n
                                        if (v44 + v35 < v33)\n
                                        {\n
                                            v65 = v32 + v44 + v35;\n
                                            v66 = -5 + v71 + v44 + v35;\n
                                            a0 = v33 - (v44 + v35);\n
                                            if (sub_40acb0(v66, a0) != v33 - (v44 + v35))\n
                                            {\n
                                                v61 = -1;\n
                                                break;\n
                                            }\n
                                        }\n
                                        v25 = sub_40aa30() * 4 + v45;\n
                                        v65 = v25;\n
                                        sub_40ae10();\n
                                        v64 = v32;\n
                                        v65 = &v26;\n
                                        v66 = 5;\n
                                        if (sub_40abf0(&v26) != 5)\n
                                        {\n
                                            v61 = -1;\n
                                            break;\n
                                        }\n
                                        else\n
                                        {\n
                                            v65 = &v32[1] + 1;\n
                                            v66 = v71;\n
                                            a0 = v33 - 5;\n
                                            if (sub_40abf0(v66, a0) != v33 - 5)\n
                                            {\n
                                                v61 = -1;\n
                                                break;\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                            v47 = v45;\n
                            v45 = v34;\n
                            v44 = 5;\n
                            v51 = v35 + v51;\n
                            v37 = v35 + v37;\n
                            v38 = v38 - v35;\n
                        }\n
                    }\n
                }\n
                else\n
                {\n
                    v43 = v51 - v49;\n
                    v42 = 0;\n
                    v44 = 5;\n
                    if (v49)\n
                    {\n
                        v42 = v48;\n
                    }\n
                    else\n
                    {\n
                        v44 += v57;\n
                        v42 = v48 - v57;\n
                    }\n
                    if (v42 > v43)\n
                    {\n
                        v44 += v43;\n
                        goto LABEL_4088e3;\n
                    }\n
                    else\n
                    {\n
                        v65 = v45;\n
                        v39 = sub_408680(v45);\n
                        v64 = v39;\n
                        v65 = &v40;\n
                        v66 = 5;\n
                        if (sub_40acb0(&v40) != 5)\n
                        {\n
                            v61 = -1;\n
                            break;\n
                        }\n
                        else if (v40 == 2)\n
                        {\n
                            v47 = v45;\n
                            v45 = *(&v41);\n
                            v44 = 5;\n
                            v49 = v42 + v49;\n
                        }\n
                        else\n
                        {\n
                            v61 = -1;\n
                            break;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_4090cc:\n
    return v61;\n
}\n
", "4231387:sub_4090db": null, "4231392:sub_4090e0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_4090e0(unsigned short v3, struct_0 *a0)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (v3 >= 0 && v3 < 16)\n
    {\n
        if (*((v4 + (v3 << 3) + 516)) != 65535)\n
        {\n
            a0->field_0 = *((v4 + v3 * 8 + 516));\n
            a0->field_4 = *((v4 + v3 * 8 + 520));\n
            v0 = 1;\n
            return v0 & 1;\n
        }\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4231541:sub_409175": null, "4231552:sub_409180": "int sub_409180(unsigned short v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = sub_40aa10();\n
    return sub_40aa30(v4, v0, v4) * v0 + v3 * 8;\n
}\n
", "4231625:sub_4091c9": null, "4231632:sub_4091d0": "int sub_4091d0()\n
{\n
    unsigned short v0[592];  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xa]\n
    unsigned short v2[592];  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned short v6[592];  // ecx\n
    unsigned short v7[592];  // ecx\n
    unsigned short v8;  // ax\n
    unsigned short v10[592];  // ecx\n
    unsigned short v11;  // ax\n
\n
    v3 = &v4;\n
    *(&v2[0]) = v6;\n
    v7 = v2;\n
    *(&v0[0]) = v7;\n
    v8 = v7[590];\n
    v7[590] = v8 + 1;\n
    v1 = v8;\n
    if (v1 >= v7[591])\n
        sub_40a980();\n
    v10 = v0;\n
    v11 = v10[590];\n
    v10[590] = v11 + 1;\n
    v1 = v11;\n
    return v1;\n
}\n
", "4231736:sub_409238": null, "4231744:sub_409240": "int sub_409240()\n
{\n
    unsigned short v0[589];  // [bp-0x14]\n
    unsigned short v1;  // [bp-0xe]\n
    unsigned short v2[589];  // [bp-0xc]\n
    unsigned short v3;  // [bp-0x6]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned short v7[589];  // ecx\n
    unsigned short v8[589];  // ecx\n
    unsigned int v9;  // eax\n
    unsigned short v11[589];  // ecx\n
\n
    v4 = &v5;\n
    *(&v2[0]) = v7;\n
    v8 = v2;\n
    *(&v0[0]) = v8;\n
    v9 = v8[588];\n
    if (v9 >= v8[587])\n
    {\n
        v3 = 65535;\n
        return v3;\n
    }\n
    v11 = v0;\n
    *(&v9) = v11[588];\n
    v11[588] = v9 + 1;\n
    v1 = v9;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4231837:sub_40929d": null, "4231840:sub_4092a0": "int sub_4092a0()\n
{\n
    unsigned short v0;  // [bp-0xe]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned short v5[586];  // ecx\n
\n
    v2 = &v3;\n
    if (v5[584] >= 128)\n
    {\n
        v1 = 65535;\n
        return v1;\n
    }\n
    v0 = v5[585];\n
    while (true)\n
    {\n
        if (v0 >= 128)\n
            v0 = 0;\n
        if (v5[329 + 2 * v0] == 65535)\n
            break;\n
        v0 += 1;\n
        if (false)\n
            break;\n
    }\n
    if (v5[585] < 128)\n
        v5[585] = v5[585] + 1;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4232036:sub_409364": null, "4232048:sub_409370": "typedef struct struct_0 {\n
    char padding_0[652];\n
    unsigned int field_28c;\n
} struct_0;\n
\n
int sub_409370(unsigned short v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_28c + v3 * 3;\n
}\n
", "4232084:sub_409394": null, "4232096:sub_4093a0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4093a0(unsigned int v34, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *<0x4093a0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x8c]\n
    unsigned int v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x71]\n
    char v3;  // [bp-0x6e]\n
    struct struct_0 **v4;  // [bp-0x6c]\n
    unsigned int v5;  // [bp-0x68]\n
    void* v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x60]\n
    struct struct_0 **v8;  // [bp-0x5c]\n
    char v9;  // [bp-0x55]\n
    char v10;  // [bp-0x52]\n
    void* v11;  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x4c]\n
    unsigned short v13;  // [bp-0x48]\n
    unsigned short v14;  // [bp-0x46]\n
    unsigned short v15;  // [bp-0x44]\n
    unsigned short v16;  // [bp-0x42]\n
    unsigned int v17;  // [bp-0x40]\n
    void* v18;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x38]\n
    unsigned int v20;  // [bp-0x34]\n
    unsigned short v21;  // [bp-0x2e]\n
    unsigned int v22;  // [bp-0x2c]\n
    char v23;  // [bp-0x25]\n
    char v24;  // [bp-0x23]\n
    char v25;  // [bp-0x1f]\n
    unsigned short v26;  // [bp-0x1e]\n
    char v27;  // [bp-0x1c]\n
    char v28;  // [bp-0x18]\n
    unsigned int v29;  // [bp-0x10]\n
    unsigned int v30;  // [bp-0xc]\n
    unsigned int v31;  // [bp-0x8]\n
    struct struct_0 **v32;  // [bp-0x4]\n
    struct_0 *v33;  // [bp+0x0]\n
    unsigned int v37;  // edi\n
    unsigned int v38;  // esi\n
    unsigned int v39;  // ecx\n
\n
    v32 = &<0x4093a0[is_2]|Stack bp, 1 B>;\n
    v31 = v37;\n
    v30 = v38;\n
    if (!(sub_4090e0(v34, &v27) & 1))\n
    {\n
        v29 = -1;\n
    }\n
    else\n
    {\n
        v26 = *(&v27);\n
        v22 = sub_409180(v26);\n
        v0 = 8;\n
        if (sub_40acb0(v22) != 8)\n
        {\n
            v29 = -1;\n
        }\n
        else\n
        {\n
            v21 = *(&v23);\n
            v20 = *(&v28);\n
            if (v20 > *(&v24))\n
            {\n
                v20 = *(&v24);\n
                v29 = -1;\n
            }\n
            else\n
            {\n
                if (v20 + a1 > *(&v24))\n
                    a1 = *(&v24) - v20;\n
                if (!a1)\n
                {\n
                    v29 = 0;\n
                }\n
                else\n
                {\n
                    v19 = *(&v24);\n
                    v18 = 0;\n
                    v17 = sub_40aa10() - 5;\n
                    v16 = 65535;\n
                    v15 = v21;\n
                    v14 = v21;\n
                    v13 = 0;\n
                    while (true)\n
                    {\n
                        if (v18 >= v20)\n
                        {\n
LABEL_4095d8:\n
                            if (!v20)\n
                                v13 = v25 + 5;\n
                            v7 = a1;\n
                            v6 = 0;\n
                            while (true)\n
                            {\n
                                if (v7 <= 0)\n
                                {\n
                                    *((v39 + v34 * 8 + 520)) = v20;\n
                                    v29 = v6;\n
                                    break;\n
                                }\n
                                else\n
                                {\n
                                    v5 = v7;\n
                                    v1 = v13 + v5;\n
                                    if (v1 > sub_40aa10())\n
                                        v5 = sub_40aa10() - v13;\n
                                    if (v14 == 65535)\n
                                    {\n
                                        v29 = -1;\n
                                        break;\n
                                    }\n
                                    else\n
                                    {\n
                                        v33 = v14;\n
                                        v4 = sub_408680(v14);\n
                                        v32 = v4;\n
                                        v33 = &v2;\n
                                        v34 = 5;\n
                                        if (sub_40acb0(&v2) != 5)\n
                                        {\n
                                            v29 = -1;\n
                                            break;\n
                                        }\n
                                        else if (v2 != 2)\n
                                        {\n
                                            v29 = -1;\n
                                            break;\n
                                        }\n
                                        else\n
                                        {\n
                                            v33 = v4 + v13;\n
                                            v34 = a0 + v6;\n
                                            a0 = v5;\n
                                            if (sub_40acb0(v34, a0) == v5)\n
                                            {\n
                                                v14 = *(&v3);\n
                                                v13 = 5;\n
                                                v7 -= v5;\n
                                                v6 = v5 + v6;\n
                                                v20 = v5 + v20;\n
                                            }\n
                                            else\n
                                            {\n
                                                v29 = -1;\n
                                                break;\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                        else\n
                        {\n
                            v12 = v20 - v18;\n
                            v11 = 0;\n
                            v13 = 5;\n
                            if (v18)\n
                            {\n
                                v11 = v17;\n
                            }\n
                            else\n
                            {\n
                                v13 += v25;\n
                                v11 = v17 - v25;\n
                            }\n
                            if (v11 > v12)\n
                            {\n
                                v13 += v12;\n
                                goto LABEL_4095d8;\n
                            }\n
                            else\n
                            {\n
                                v33 = v14;\n
                                v8 = sub_408680(v14);\n
                                v32 = v8;\n
                                v33 = &v9;\n
                                v34 = 5;\n
                                if (sub_40acb0(&v9) != 5)\n
                                {\n
                                    v29 = -1;\n
                                    break;\n
                                }\n
                                else if (v9 == 2)\n
                                {\n
                                    v13 = 5;\n
                                    v16 = v14;\n
                                    v14 = *(&v10);\n
                                    v18 = v11 + v18;\n
                                }\n
                                else\n
                                {\n
                                    v29 = -1;\n
                                    break;\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    return v29;\n
}\n
", "4233057:sub_409761": null, "4233072:sub_409770": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_409770(struct struct_0 **v20)\n
{\n
    struct struct_0 **<0x409770[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x60]\n
    void* v1;  // [bp-0x48], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x41]\n
    unsigned int v3;  // [bp-0x40]\n
    void* v4;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned short v5;  // [bp-0x36]\n
    struct struct_0 **v6;  // [bp-0x34]\n
    char v7;  // [bp-0x2d]\n
    char v8;  // [bp-0x2a]\n
    unsigned short v9;  // [bp-0x28]\n
    unsigned short v10;  // [bp-0x26]\n
    struct struct_0 **v11;  // [bp-0x24]\n
    char v12;  // [bp-0x20]\n
    char v13;  // [bp-0x1f]\n
    char v14;  // [bp-0x18]\n
    char v15;  // [bp-0x12]\n
    unsigned int v16;  // [bp-0xc]\n
    unsigned int v17;  // [bp-0x8]\n
    struct struct_0 **v18;  // [bp-0x4], Other Possible Types: unsigned int\n
    struct struct_0 **v19;  // [bp+0x0], Other Possible Types: struct_1 *\n
    unsigned int v21;  // [bp+0x8]\n
    unsigned int v23;  // esi\n
    unsigned short v24[585];  // ecx\n
    unsigned short v25[585];  // eax\n
    unsigned short v26[585];  // eax\n
\n
    v18 = &<0x409770[is_2]|Stack bp, 1 B>;\n
    v17 = v23;\n
    if (!(sub_409ab0(v20, &v15, &v14) & 1))\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v11 = sub_409180(*(&v15));\n
    v0 = 8;\n
    if (sub_40acb0(v11) != 8)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v10 = *(&v13);\n
    v9 = 65535;\n
    while (true)\n
    {\n
        v19 = v10;\n
        v6 = sub_408680(v10);\n
        v18 = v6;\n
        v19 = &v7;\n
        v20 = 5;\n
        if (sub_40acb0(&v7) != 5)\n
        {\n
            v16 = -1;\n
            return v16;\n
        }\n
        if (v7 != 2)\n
        {\n
            v16 = -1;\n
            return v16;\n
        }\n
        v7 = 1;\n
        v19 = v6;\n
        v20 = &v7;\n
        v21 = 5;\n
        if (sub_40abf0(v20, v21) != 5)\n
        {\n
            v16 = -1;\n
            return v16;\n
        }\n
        v10 = *(&v8);\n
        if (v10 == 65535)\n
            break;\n
        if (false)\n
            break;\n
    }\n
    v12 = 1;\n
    v19 = v11;\n
    v20 = &v12;\n
    v21 = 8;\n
    if (sub_40abf0(v20, v21) != 8)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v5 = 65535;\n
    for (v4 = 0; v4 < 128; v4 += 1)\n
    {\n
        if (v24[329 + 2 * v4] == *(&v15))\n
        {\n
            v25 = v24;\n
            v24[329 + 2 * v4] = 65535;\n
            v5 = v24[328 + 2 * v4];\n
            v24[328 + 2 * v4] = 65535;\n
            v25[584] = v25[584] - 1;\n
            break;\n
        }\n
    }\n
    if (v5 == 65535)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v19 = v5;\n
    v3 = sub_409370(v5);\n
    v2 = 1;\n
    v18 = v3;\n
    v19 = &v2;\n
    v20 = 1;\n
    if (sub_40abf0(&v2) != 1)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        if (v24[258 + 4 * v1] == *(&v15))\n
        {\n
            v26 = v24;\n
            v26[258 + 4 * v1] = 65535;\n
            *(&v26[260 + 4 * v1]) = 0;\n
            v26[322] = v26[322] - 1;\n
        }\n
    }\n
    v16 = 0;\n
    return v16;\n
}\n
", "4233895:sub_409aa7": null, "4233904:sub_409ab0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1168];\n
    unsigned short field_490;\n
} struct_1;\n
\n
int sub_409ab0(struct_0 *v14, unsigned short *a0, unsigned int *a1)\n
{\n
    struct_0 *<0x409ab0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_0 **v0;  // [bp-0x12c]\n
    char v1;  // [bp-0x128]\n
    char v2;  // [bp-0x127]\n
    char v3;  // [bp-0x125]\n
    char v4;  // [bp-0x121]\n
    struct struct_0 **v5;  // [bp-0x120]\n
    void* v6;  // [bp-0x11c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x118], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x111]\n
    char v9;  // [bp-0x110]\n
    char v10;  // [bp-0x9]\n
    unsigned int v11;  // [bp-0x8]\n
    struct struct_0 **v12;  // [bp-0x4]\n
    struct_0 *v13;  // [bp+0x0]\n
    unsigned int v16;  // esi\n
    struct_1 *v17;  // ecx\n
\n
    v12 = &<0x409ab0[is_2]|Stack bp, 1 B>;\n
    v11 = v16;\n
    v8 = sub_4079a0(v14);\n
    v7 = 0;\n
    for (v6 = 0; v6 < 128; v6 += 1)\n
    {\n
        if (v7 >= v17->field_490)\n
            break;\n
        if (*(&v17->padding_0[658 + 4 * v6]) != 65535)\n
        {\n
            v7 += 1;\n
            v13 = *(&v17->padding_0[658 + 4 * v6]);\n
            v5 = sub_409180(*(&v17->padding_0[658 + 4 * v6]));\n
            v12 = v5;\n
            v13 = &v1;\n
            v14 = 8;\n
            if (sub_40acb0(&v1) != 8)\n
            {\n
                v10 = 0;\n
                return v10 & 1;\n
            }\n
            else if (v8 == v4)\n
            {\n
                v13 = *(&v2);\n
                v0 = sub_408680(*(&v2)) + 5;\n
                v12 = v0;\n
                v13 = &v9;\n
                v14 = v4;\n
                if (sub_40acb0(&v9) != v4)\n
                {\n
                    v10 = 0;\n
                    return v10 & 1;\n
                }\n
                (&v9)[v4] = 0;\n
                v13 = v14;\n
                v14 = &v9;\n
                if (!sub_407d30(v14, a0))\n
                {\n
                    *(a0) = *(&v17->padding_0[658 + 4 * v6]);\n
                    *(a1) = *(&v3);\n
                    v10 = 1;\n
                    return v10 & 1;\n
                }\n
            }\n
        }\n
    }\n
    v10 = 0;\n
    return v10 & 1;\n
}\n
", "4234452:sub_409cd4": null, "4234464:sub_409ce0": "typedef struct struct_1 {\n
    char padding_0[644];\n
    unsigned short field_284;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409ce0(void* v9, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned short v3;  // [bp-0x14]\n
    char v4;  // [bp-0x11]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v11;  // esi\n
    struct_1 *v12;  // ecx\n
\n
    v7 = &v8;\n
    v6 = v11;\n
    v4 = 0;\n
    if (v12->field_284 >= 16)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    if (!(sub_409ab0(v9, &v3, &v2) & 1))\n
    {\n
        if (a0 != 2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v0 = &v2;\n
        if (!(sub_409e10(v9, &v3) & 1))\n
        {\n
            v5 = -2;\n
            return v5;\n
        }\n
    }\n
    v1 = sub_409f40();\n
    if (v1 == -1)\n
    {\n
        v5 = -0x4;\n
        return v5;\n
    }\n
    *(&v12->padding_0[516 + 8 * v1]) = v3;\n
    if (a0 == 4)\n
        *(&v12->padding_0[520 + 8 * v1]) = v2;\n
    else\n
        *(&v12->padding_0[520 + 8 * v1]) = 0;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4234757:sub_409e05": null, "4234768:sub_409e10": "typedef struct struct_0 {\n
    char padding_0[1168];\n
    unsigned short field_490;\n
} struct_0;\n
\n
int sub_409e10(unsigned int v7, unsigned short *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x12]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v9;  // esi\n
    struct_0 *v10;  // ecx\n
    unsigned short v11;  // dx\n
    unsigned int v12;  // edx\n
\n
    v5 = &v6;\n
    v4 = v9;\n
    if (v10->field_490 >= 128)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v2 = sub_409240();\n
    if (v2 == 65535)\n
    {\n
        sub_40a090();\n
        v2 = sub_409240();\n
    }\n
    if (v2 == 65535)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v1 = sub_4092a0();\n
    if (v1 == 65535)\n
    {\n
        sub_40a4e0();\n
        v1 = sub_4092a0();\n
    }\n
    if (v1 == 65535)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v11 = v1;\n
    v0 = v2;\n
    if (!(sub_40a6d0(v7, v12) & 1))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *(a0) = v2;\n
    *(a1) = 0;\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4235057:sub_409f31": null, "4235072:sub_409f40": "typedef struct struct_0 {\n
    char padding_0[644];\n
    unsigned short field_284;\n
} struct_0;\n
\n
int sub_409f40()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // ecx\n
\n
    v2 = &v3;\n
    if (v5->field_284 >= 16)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 16)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v5->padding_0[516 + 8 * v0]) != 65535)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v5->field_284 = v5->field_284 + 1;\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4235223:sub_409fd7": null, "4235232:sub_409fe0": "typedef struct struct_0 {\n
    char padding_0[644];\n
    unsigned short field_284;\n
} struct_0;\n
\n
int sub_409fe0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
\n
    v1 = &v2;\n
    if (v3 >= 16)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (*(&v4->padding_0[516 + 8 * v3]) != 65535)\n
    {\n
        *(&v4->padding_0[516 + 8 * v3]) = 65535;\n
        *(&v4->padding_0[520 + 8 * v3]) = 0;\n
        v4->field_284 = v4->field_284 - 1;\n
        v0 = v3;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "4235373:sub_40a06d": null, "4235376:sub_40a070": "typedef struct struct_0 {\n
    char padding_0[652];\n
    unsigned int field_28c;\n
} struct_0;\n
\n
int sub_40a070()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_28c;\n
}\n
", "4235397:sub_40a085": null, "4235408:sub_40a090": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40a090()\n
{\n
    struct_0 *<0x40a090[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    char v2;  // [bp-0x54]\n
    void* v3;  // [bp-0x4c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x48]\n
    struct_0 *v5;  // [bp-0x44], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x40]\n
    struct_0 *v7;  // [bp-0x3c], Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // [bp-0x38]\n
    char v9;  // [bp-0x34]\n
    void* v10;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x28]\n
    struct_0 *v12;  // [bp-0x24]\n
    void* v13;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct struct_0 **v14;  // [bp-0x1c]\n
    struct_0 *v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v17;  // [bp-0xd]\n
    char v18;  // [bp-0x5]\n
    struct struct_0 **v19;  // [bp-0x4], Other Possible Types: void*\n
    struct_0 *v20;  // [bp+0x0]\n
    struct_0 *v21;  // [bp+0x4]\n
    unsigned int v22;  // [bp+0x8]\n
    unsigned short v23[590];  // ecx\n
\n
    v19 = &<0x40a090[is_2]|Stack bp, 1 B>;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    do\n
    {\n
        v20 = v23[589];\n
        v12 = sub_40a8a0();\n
        v19 = v23[589] + 1;\n
        v11 = sub_40a8a0(v23[589]);\n
        v10 = 0;\n
        if (!v15)\n
            v15 = v23[589];\n
        v14 = v23[589] + 1;\n
        for (v10 = v16; v13 < v23[584]; v10 += 1)\n
        {\n
            if (v23[329 + 2 * v10] != 65535)\n
            {\n
                if (v10 >= 128)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                if (v12 + 8 > v11)\n
                    break;\n
                v20 = v23[329 + 2 * v10];\n
                v8 = sub_409370(v23[329 + 2 * v10]);\n
                v19 = v8;\n
                v20 = &v9;\n
                v21 = 8;\n
                if (sub_40acb0(&v9) != 8)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                v20 = v12;\n
                v21 = &v9;\n
                v22 = 8;\n
                if (sub_40abf0(v21, v22) != 8)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                v12 += 8;\n
                v13 += 1;\n
            }\n
        }\n
        if (v13 == v23[584])\n
            v17 = 1;\n
        v16 = v10;\n
        v23[589] = sub_40a8f0();\n
    } while (((v17 ^ 255) & 1));\n
    v20 = 1;\n
    sub_40ada0();\n
    v19 = 2;\n
    sub_40ada0(1);\n
    v19 = 3;\n
    sub_40ada0(1);\n
    v19 = 0;\n
    v7 = sub_409180(1);\n
    v1 = sub_40aa10(1);\n
    v6 = (sub_40aa30() * v1 >> 3) * 8;\n
    v16 = 0;\n
    v13 = 0;\n
    while (true)\n
    {\n
        v20 = v15;\n
        v5 = sub_40a8a0();\n
        v4 = &v5[v6];\n
        v15 += 1;\n
        v3 = 0;\n
        for (v3 = v16; v13 < v23[584]; v3 += 1)\n
        {\n
            if (v23[329 + 2 * v3] != 65535)\n
            {\n
                if (v3 >= 128)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                if (v5 + 8 > v4)\n
                    break;\n
                v20 = v5;\n
                v21 = &v2;\n
                v22 = 8;\n
                if (sub_40acb0(v21, v22) != 8)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                v20 = v7;\n
                v21 = &v2;\n
                v22 = 8;\n
                if (sub_40abf0(v21, v22) != 8)\n
                {\n
                    v18 = 0;\n
                    return v18 & 1;\n
                }\n
                v23[329 + 2 * v3] = v13;\n
                v13 += 1;\n
                v5 += 8;\n
                v7 += 8;\n
            }\n
        }\n
        v16 = v3;\n
        if (v13 == v23[584])\n
            break;\n
        v0 = v15;\n
        if (v0 >= sub_40a9f0())\n
            v15 = sub_40a9f0() - 4;\n
        if (false)\n
            break;\n
    }\n
    sub_40a4e0();\n
    v18 = 1;\n
    return v18 & 1;\n
}\n
", "4236508:sub_40a4dc": null, "4236512:sub_40a4e0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40a4e0()\n
{\n
    char <0x40a4e0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x34], Other Possible Types: void*\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x23]\n
    unsigned short v3;  // [bp-0x22]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned short v5;  // [bp-0x1a]\n
    unsigned int v6;  // [bp-0x18]\n
    char v7;  // [bp-0x11]\n
    unsigned short v8;  // [bp-0x10]\n
    unsigned short v9;  // [bp-0xe]\n
    char v10;  // [bp-0x5]\n
    unsigned int v11;  // [bp-0x4]\n
    unsigned int v12;  // [bp+0x0]\n
    struct_0 *v13;  // [bp+0x4]\n
    unsigned int v14;  // [bp+0x8]\n
    unsigned short v15[586];  // ecx\n
    unsigned short v16[586];  // eax\n
    unsigned short v17[586];  // eax\n
\n
    v11 = &<0x40a4e0[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    sub_40ada0();\n
    v7 = 193;\n
    v8 = 0;\n
    v9 = 5;\n
    v0 = &v7;\n
    v1 = 5;\n
    if (sub_40abf0(0) != 5)\n
    {\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
    v6 = sub_40a070();\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 < v15[584])\n
        {\n
            do\n
            {\n
                if (v5 >= 128)\n
                {\n
                    v10 = 0;\n
                    return v10 & 1;\n
                }\n
                if (v15[329 + 2 * v5] != 65535)\n
                {\n
                    v16 = v15;\n
                    *((658 + &v16[0] + 0x4 * v4)) = v16[329 + 2 * v5];\n
                    *((656 + &v15[0] + 0x4 * v4)) = v4;\n
                    break;\n
                }\n
                v5 += 1;\n
            } while (true);\n
            v2 = 2;\n
            v3 = v15[329 + 2 * v5];\n
            v12 = v6;\n
            v13 = &v2;\n
            v14 = 3;\n
            if (sub_40abf0(v13, v14) != 3)\n
            {\n
                v10 = 0;\n
                return v10 & 1;\n
            }\n
            v6 += 3;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v17 = v15;\n
            v17[585] = v17[584];\n
            for (v5 = v15[585]; v5 < 128; v5 += 1)\n
            {\n
                v15[329 + 2 * v5] = 65535;\n
                v15[328 + 2 * v5] = 65535;\n
            }\n
            v10 = 1;\n
            return v10 & 1;\n
        }\n
    }\n
}\n
", "4237007:sub_40a6cf": null, "4237008:sub_40a6d0": "typedef struct struct_0 {\n
    char padding_0[1168];\n
    unsigned short field_490;\n
} struct_0;\n
\n
int sub_40a6d0(char *v19, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x2c]\n
    unsigned short v5;  // [bp-0x2b]\n
    void* v6;  // [bp-0x29]\n
    char v7;  // [bp-0x25]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1f]\n
    unsigned short v10;  // [bp-0x1e]\n
    unsigned short v11;  // [bp-0x1c]\n
    unsigned short v12;  // [bp-0x1a]\n
    void* v13;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v14;  // [bp-0x11]\n
    char v15;  // [bp-0x9]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    unsigned int v21;  // esi\n
    struct_0 *v22;  // ecx\n
\n
    v17 = &v18;\n
    v16 = v21;\n
    v14 = sub_4079a0(v19);\n
    for (v13 = 0; v13 < 128; v13 += 1)\n
    {\n
        if (*((658 + &v22->padding_0[0] + 0x4 * v13)) == 65535)\n
        {\n
            *(&v22->padding_0[658 + 4 * v13]) = a1;\n
            *(&v22->padding_0[656 + 4 * v13]) = a0;\n
            v22->field_490 = v22->field_490 + 1;\n
            break;\n
        }\n
    }\n
    v12 = sub_4091d0();\n
    v9 = 2;\n
    v10 = 0;\n
    v11 = 65535;\n
    v8 = sub_408680(v12);\n
    v2 = 5;\n
    if (sub_40abf0(v8) != 5)\n
    {\n
        v15 = 0;\n
        return v15 & 1;\n
    }\n
    v1 = v14;\n
    if (sub_40abf0(v8 + 5, v19) != v14)\n
    {\n
        v15 = 0;\n
        return v15 & 1;\n
    }\n
    v4 = 2;\n
    v5 = v12;\n
    v6 = 0;\n
    v7 = v14;\n
    v3 = sub_409180(a1);\n
    v0 = 8;\n
    if (sub_40abf0(v3) != 8)\n
    {\n
        v15 = 0;\n
        return v15 & 1;\n
    }\n
    v15 = 1;\n
    return v15 & 1;\n
}\n
", "4237462:sub_40a896": null, "4237472:sub_40a8a0": "int sub_40a8a0(unsigned short v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = sub_40aa10();\n
    return v3 * sub_40aa30(v4, v0, v4) * v0;\n
}\n
", "4237543:sub_40a8e7": null, "4237552:sub_40a8f0": "typedef struct struct_0 {\n
    char padding_0[1178];\n
    unsigned short field_49a;\n
} struct_0;\n
\n
int sub_40a8f0()\n
{\n
    char v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // ecx\n
\n
    v2 = &v3;\n
    v5->field_49a = v5->field_49a + 1;\n
    v1 = v5->field_49a;\n
    if (v1 >= sub_40a9f0(*(&v0), v5, v1, v5))\n
        v5->field_49a = sub_40a9f0() - 4;\n
    sub_40ada0();\n
    return v5->field_49a;\n
}\n
", "4237690:sub_40a97a": null, "4237696:sub_40a980": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1182];\n
    unsigned short field_49e;\n
} struct_1;\n
\n
int sub_40a980()\n
{\n
    char <0x40a980[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x4]\n
    unsigned int v3;  // [bp+0x0]\n
    struct_1 *v5;  // ecx\n
\n
    v2 = &<0x40a980[is_2]|Stack bp, 1 B>;\n
    v1 = 0;\n
    for (v1 = 0; v1 < v5->field_49e; v1 += 1)\n
    {\n
        v3 = v1;\n
        v0 = sub_408680(v1);\n
    }\n
    sub_40a090();\n
    return 0;\n
}\n
", "4237808:sub_40a9f0": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_40a9f0()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_c;\n
}\n
", "4237840:sub_40aa10": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40aa10()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_4;\n
}\n
", "4237872:sub_40aa30": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_40aa30()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_8;\n
}\n
", "4237904:sub_40aa50": "int sub_40aa50()\n
{\n
    unsigned int v0[4];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[4];  // eax\n
    unsigned int v5[4];  // ecx\n
    unsigned int v6[4];  // eax\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v5;\n
    v6 = v0;\n
    v6[0] = 0;\n
    v6[1] = 0;\n
    v6[2] = 0;\n
    v6[3] = 0;\n
    return v0;\n
}\n
", "4237946:sub_40aa7a": null, "4237952:sub_40aa80": "int sub_40aa80()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[4];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3[4];  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[4];  // ecx\n
    unsigned int v8[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v9[4];  // ecx\n
\n
    v4 = &v5;\n
    v3[0] = v7;\n
    v8 = v3;\n
    v1[0] = v8;\n
    if (!v8[0])\n
        return v3;\n
    v9 = v1;\n
    v2 = v9[3] * v9[2] * v9[1];\n
    v0 = v2;\n
    v8 = cgc_deallocate(v9[0]);\n
    if (!v8)\n
        return v8;\n
    v8 = cgc__terminate();\n
}\n
", "4238041:sub_40aad9": null, "4238048:sub_40aae0": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_40aae0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (!(v3 & 63))\n
        *((v4 + 4)) = v3;\n
    else\n
        *((v4 + 4)) = ((v3 >> 6) + 1) * 64;\n
    if (*((v4 + 4)) > 0x200)\n
        *((v4 + 4)) = 0x200;\n
    if (a0 > 16)\n
        *((v4 + 8)) = 16;\n
    else\n
        *((v4 + 8)) = a0;\n
    if (a1 > 0x100)\n
        *((v4 + 12)) = 0x100;\n
    else\n
        *((v4 + 12)) = a1;\n
    v0 = *((v4 + 12)) * *((v4 + 8)) * *((v4 + 4));\n
    if (cgc_allocate(v0, 0))\n
    {\n
        cgc__terminate();\n
        return sub_407a20(*(v4), 255, v0);\n
    }\n
    return sub_407a20(*(v4), 255, v0);\n
}\n
", "4238314:sub_40abea": null, "4238320:sub_40abf0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_40abf0(char *v7, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    struct_0 *v8;  // ecx\n
    struct_0 *v9;  // ecx\n
    char *v10;  // eax\n
    unsigned int v11;  // ecx\n
\n
    v5 = &v6;\n
    v3 = v8;\n
    v0 = v3;\n
    if (!v0->field_0)\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
    v9 = v0;\n
    v2 = v9->field_c * v9->field_8 * v9->field_4;\n
    if (&v7[a1] > v2)\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    for (v1 = 0; a1 > 0; a1 -= 1)\n
    {\n
        v10 = v0->field_0;\n
        v11 = v7;\n
        v10[v11] = v10[v11] & *((a0 + v1));\n
        v7 += 1;\n
        v1 += 1;\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4238503:sub_40aca7": null, "4238512:sub_40acb0": "int sub_40acb0(char *v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0[4];  // [bp-0x18]\n
    char *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[4];  // ecx\n
    unsigned int v9[4];  // ecx\n
\n
    v5 = &v6;\n
    v3[0] = v8;\n
    v0[0] = v3;\n
    if (!v0[0])\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
    v9 = v0;\n
    v2 = v9[3] * v9[2] * v9[1];\n
    if (&v7[a1] > v2)\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    for (v1 = 0; a1 > 0; a1 -= 1)\n
    {\n
        v1[a0] = *((v0[0] + v7));\n
        v7 += 1;\n
        v1 += 1;\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4238686:sub_40ad5e": null, "4238688:sub_40ad60": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_40ad60()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[4];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[4];  // ecx\n
    struct_0 *v6;  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = v5;\n
    v6 = v1;\n
    v0 = v6->field_c * v6->field_8 * v6->field_4;\n
    sub_407a20(v6->field_0, 255, v0);\n
    return 0;\n
}\n
", "4238746:sub_40ad9a": null, "4238752:sub_40ada0": "int sub_40ada0(unsigned int v7)\n
{\n
    unsigned int v0[4];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[4];  // ecx\n
    unsigned int v9[4];  // ecx\n
\n
    v5 = &v6;\n
    v3[0] = v8;\n
    v0[0] = v3;\n
    if (v7 >= v0[3])\n
    {\n
        v4 = -2;\n
        return v4;\n
    }\n
    v9 = v0;\n
    v2 = v9[2] * v9[1];\n
    v1 = v7 * v2;\n
    sub_407a20(v9[0] + v1, 255, v2);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4238862:sub_40ae0e": null, "4238864:sub_40ae10": "int sub_40ae10(unsigned int v5)\n
{\n
    unsigned int v0[4];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[4];  // ecx\n
    unsigned int v7[4];  // edx\n
\n
    v3 = &v4;\n
    v0[0] = v6;\n
    v1 = v6[3] * v0[2];\n
    if (v5 >= v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v7 = v6;\n
    sub_407a20(v7[0] + v5 * v7[1], 255, v7[1]);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4238976:sub_40ae80": "int sub_40ae80(void* v34)\n
{\n
    unsigned int v0;  // [bp-0xd68]\n
    unsigned int v1;  // [bp-0xd40]\n
    char v2;  // [bp-0xd10]\n
    unsigned int v3;  // [bp-0xd04]\n
    unsigned int v4;  // [bp-0xd00]\n
    unsigned int v5;  // [bp-0xcfc]\n
    unsigned int v6;  // [bp-0xcf8]\n
    unsigned int v7;  // [bp-0xcf4]\n
    unsigned int v8;  // [bp-0xcf0]\n
    unsigned int v9;  // [bp-0xcec]\n
    unsigned int v10;  // [bp-0xce8]\n
    unsigned int v11;  // [bp-0xce4]\n
    unsigned int v12;  // [bp-0xce0]\n
    unsigned int v13;  // [bp-0xcdc]\n
    char v14;  // [bp-0xcd6]\n
    char v15;  // [bp-0xcd1]\n
    char v16;  // [bp-0xcd0]\n
    unsigned int v17;  // [bp-0x4d0]\n
    unsigned int v18;  // [bp-0x4cc]\n
    unsigned int v19;  // [bp-0x4c8]\n
    void* **v20;  // [bp-0x4c4], Other Possible Types: unsigned int\n
    char v21;  // [bp-0x4c0]\n
    char v22;  // [bp-0x6c]\n
    char v23;  // [bp-0x68]\n
    char v24;  // [bp-0x64]\n
    unsigned int v25;  // [bp-0x20]\n
    unsigned int v26;  // [bp-0x1c]\n
    unsigned int v27;  // [bp-0x18]\n
    void* v28;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v29;  // [bp-0x10]\n
    unsigned int v30;  // [bp-0xc]\n
    unsigned int v31;  // [bp-0x8]\n
    unsigned int v32;  // [bp-0x4]\n
    char v33;  // [bp+0x0]\n
    unsigned int v35;  // ebx\n
    unsigned int v36;  // edi\n
    unsigned int v37;  // esi\n
    unsigned int v38;  // esi\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // ebx\n
\n
    v32 = &v33;\n
    v31 = v35;\n
    v30 = v36;\n
    v29 = v37;\n
    v25 = &v2;\n
    v28 = -1;\n
    v27 = sub_40bb10;\n
    v26 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v26;\n
    v13 = &v21;\n
    sub_408170();\n
    v28 = 0;\n
    sub_4081b0(v34);\n
    v12 = sub_409ce0(\"test.txt\", 2);\n
    v20 = v12;\n
    v11 = sub_409ce0(\"test2.txt\", 2);\n
    v19 = v11;\n
    v10 = sub_409ce0(\"test3.txt\", 2);\n
    v18 = v10;\n
    sub_405e10(\"Test1 FD is: $d\\n
\");\n
    sub_405e10(\"Test2 FD is: $d\\n
\");\n
    sub_405e10(\"Test3 FD is: $d\\n
\");\n
    v9 = sub_4086d0(v20, \"blah\", 0x4);\n
    v17 = v9;\n
    sub_405e10(\"Ret value is: $d\\n
\");\n
    v8 = sub_4086d0(v20, &v16, 0x700);\n
    v17 = v8;\n
    v1 = v17;\n
    sub_405e10(\"Ret value is: $d\\n
\");\n
    v7 = sub_409fe0(v20);\n
    v17 = v7;\n
    sub_405e10(\"Close ret: $d\\n
\");\n
    v6 = sub_409ce0(\"test.txt\", 1);\n
    v20 = v6;\n
    sub_405e10(\"Open read FD is: $d\\n
\");\n
    v5 = sub_4093a0(v20, &v14, 4);\n
    v17 = v5;\n
    sub_405e10(\"Read return is: $d\\n
\");\n
    v15 = 0;\n
    sub_405e10(\"Read blah buffer is: $s\\n
\");\n
    v4 = sub_409770(\"test.txt\");\n
    v17 = v4;\n
    sub_405e10(\"Delete test.txt ret: $d\\n
\");\n
    v3 = sub_4093a0(v20, &v14, 4);\n
    v17 = v3;\n
    v0 = v17;\n
    sub_405e10(\"Read from FD=1 is: $d\\n
\");\n
    sub_4081a0();\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v26;\n
    v38 = *(&v22);\n
    v39 = *(&v23);\n
    v40 = *(&v24);\n
    return v26;\n
}\n
", "4239909:sub_40b225": null, "4239920:sub_40b230": "int sub_40b230()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4081a0();\n
}\n
", "4239943:sub_40b247": null, "4239952:sub_40b250": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40b250(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3->field_4 = a1;\n
    if (sub_4080a0(1, v3, 8) != 8)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    if (a1 > 0 && sub_4080a0(1, a0, a1) != a1)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4240097:sub_40b2e1": null, "4240112:sub_40b2f0": "int sub_40b2f0(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    char v1;  // [bp-0x112]\n
    char v2;  // [bp-0x111]\n
    unsigned int v3;  // [bp-0x110]\n
    char v4;  // [bp-0x106]\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (sub_407fd0(0, &v1, 2) != 2)\n
    {\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    else if (sub_407fd0(0, &v4, v1) == v1)\n
    {\n
        (&v4)[v1] = 0;\n
        v0 = sub_409ce0(&v4, v2);\n
        v3 = v0;\n
        sub_40b250(&v3, 0, 0);\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
}\n
", "4240351:sub_40b3df": null, "4240352:sub_40b3e0": "int sub_40b3e0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (sub_407fd0(0, &v1, 4) != 4)\n
    {\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    v0 = sub_409fe0(*(&v1));\n
    v2 = v0;\n
    sub_40b250(&v2, 0, 0);\n
    v3 = 0;\n
    return v3 & 1;\n
}\n
", "4240480:sub_40b460": "int sub_40b460(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18], Other Possible Types: char\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v10;  // esi\n
\n
    v6 = &v7;\n
    v5 = v10;\n
    if (sub_407fd0(0, &v1, 8) != 8)\n
    {\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
    if (*(&v2) > 0x1000)\n
        v2 = 0x1000;\n
    v0 = sub_4093a0(*(&v1), a0, v2);\n
    v3 = v0;\n
    if (v3 > 0)\n
        sub_40b250(&v3, a0, v2);\n
    else\n
        sub_40b250(&v3, 0, 0);\n
    v4 = 0;\n
    return v4 & 1;\n
}\n
", "4240687:sub_40b52f": null, "4240688:sub_40b530": "int sub_40b530(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18], Other Possible Types: char\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v10;  // esi\n
\n
    v6 = &v7;\n
    v5 = v10;\n
    if (sub_407fd0(0, &v1, 8) != 8)\n
    {\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
    if (*(&v2) > 0x1000)\n
        v2 = 0x1000;\n
    if (sub_407fd0(0, a0, v2) != v2)\n
    {\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
    v0 = sub_4086d0(*(&v1), a0, v2);\n
    v3 = v0;\n
    sub_40b250(&v3, 0, 0);\n
    v4 = 0;\n
    return v4 & 1;\n
}\n
", "4240901:sub_40b605": null, "4240912:sub_40b610": "int sub_40b610(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    char v1;  // [bp-0x111]\n
    unsigned int v2;  // [bp-0x110]\n
    void* *v3;  // [bp-0x106]\n
    char v4;  // [bp-0x5]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (sub_407fd0(0, &v1, 1) != 1)\n
    {\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
    else if (sub_407fd0(0, &v3, v1) == v1)\n
    {\n
        *(&v3 + v1) = 0;\n
        v0 = sub_409770(&v3);\n
        v2 = v0;\n
        sub_40b250(&v2, 0, 0);\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
}\n
", "4241138:sub_40b6f2": null, "4241152:sub_40b700": "int sub_40b700(char v17[3], unsigned int a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x4fc]\n
    unsigned int v1;  // [bp-0x4f8]\n
    char v2;  // [bp-0x4f4]\n
    unsigned int v3;  // [bp-0x4e4]\n
    unsigned int v4;  // [bp-0x4e0]\n
    unsigned int v5;  // [bp-0x4dc]\n
    unsigned int v6;  // [bp-0x4d8]\n
    char v7[3];  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    void* v11;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v15;  // [bp-0x4]\n
    char v16;  // [bp+0x0]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // ebx\n
\n
    v15 = &v16;\n
    v14 = v18;\n
    v13 = v19;\n
    v12 = v20;\n
    v8 = &v2;\n
    v11 = -1;\n
    v10 = sub_40bb30;\n
    v9 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v9;\n
    *(&v7) = v17;\n
    sub_40aa50();\n
    v11 = 0;\n
    sub_408170();\n
    if (v7[0] < 128)\n
        v6 = 0x100;\n
    else\n
        v6 = 0x200;\n
    v3 = v7[1];\n
    v5 = (v3 - (v3 * 1431655766 >> 32) * 3) * 4 + 8;\n
    v4 = (v7[2] & 31) * 4 + 0x200;\n
    v11 = 1;\n
    sub_40aae0(v6, v5, v4);\n
    sub_4081b0(a1);\n
    v1 = v4;\n
    v0 = v5;\n
    sub_405e10(\"Starting test for device ($d, $d, $d):\\n
\");\n
    sub_4081a0();\n
    sub_40aa80();\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v9;\n
    v21 = v8;\n
    v22 = v9;\n
    v23 = v10;\n
    return v9;\n
}\n
", "4241510:sub_40b866": null, "4241520:sub_40b870": "int sub_40b870()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4081a0();\n
}\n
", "4241543:sub_40b887": null, "4241552:sub_40b890": "int sub_40b890()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40aa80();\n
}\n
", "4241572:sub_40b8a4": null, "4241584:sub_40b8b0": "int sub_40b8b0()\n
{\n
    unsigned int v0;  // [bp-0x100c]\n
    char v1;  // [bp-0x1006]\n
    char v2;  // [bp-0x1005]\n
    char v3;  // [bp-0x1004]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x1010]\n
    unsigned int v6;  // ebp\n
\n
    sub_40bbb0();\n
    v2 = 0;\n
    while (true)\n
    {\n
        v4 = 1;\n
        if (sub_407fd0(0, &v1, 1) != 1)\n
        {\n
            v6 = *(&v5);\n
            return;\n
        }\n
        v0 = v1;\n
        switch (v0)\n
        {\n
        case 0:\n
            v2 = sub_40b2f0(v4) & 1;\n
            break;\n
        case 1:\n
            v2 = sub_40b3e0(v4) & 1;\n
            break;\n
        case 2:\n
            v2 = sub_40b530(v4, &v3) & 1;\n
            break;\n
        case 3:\n
            v2 = sub_40b460(v4, &v3) & 1;\n
            break;\n
        case 4:\n
            v2 = sub_40b610(v4) & 1;\n
            break;\n
        case 5:\n
            sub_405e10(\"Stop simulation\\n
\");\n
            v2 = 1;\n
            break;\n
        default:\n
            sub_405e10(\"Invalid command\\n
\");\n
            v2 = 1;\n
            break;\n
        }\n
        if (!((v2 ^ 255) & 1))\n
        {\n
            v6 = *(&v5);\n
            return;\n
        }\n
    }\n
}\n
", "4241906:sub_40b9f2": null, "4241920:sub_40ba00": "int sub_40ba00(unsigned int v9, unsigned int a0)\n
{\n
    char v0;  // [bp-0x4dc]\n
    char v1;  // [bp-0x4d0]\n
    char v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    v3 = &v0;\n
    v6 = -1;\n
    v5 = sub_40bb50;\n
    v4 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v4;\n
    v9 = 0x4347c000;\n
    sub_40aa50();\n
    v6 = 0;\n
    sub_408170();\n
    v6 = 1;\n
    sub_40b700(v9, &v1, &v2);\n
    sub_40b8b0();\n
    sub_4081a0();\n
    sub_40aa80();\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v4;\n
    return 0;\n
}\n
", "4242114:sub_40bac2": null, "4242128:sub_40bad0": "int sub_40bad0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4081a0();\n
}\n
", "4242151:sub_40bae7": null, "4242160:sub_40baf0": "int sub_40baf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40aa80();\n
}\n
", "4242180:sub_40bb04": null, "4242192:sub_40bb10": "int sub_40bb10(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4242218:sub_40bb2a": null, "4242224:sub_40bb30": "int sub_40bb30(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4242250:sub_40bb4a": null, "4242256:sub_40bb50": "int sub_40bb50(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4242288:sub_40bb70": "int sub_40bb70(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40bbe0(v2);\n
}\n
", "4242320:sub_40bb90": "int sub_40bb90(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40bc30(v2);\n
}\n
", "4242352:sub_40bbb0": "int sub_40bbb0()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4242400:sub_40bbe0": "int sub_40bbe0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    while (true)\n
    {\n
        v0 = malloc(v3, v0);\n
        if (v0)\n
            break;\n
        if (!_callnewh())\n
        {\n
            if (v3 == -1)\n
                sub_40bf10();\n
            else\n
                sub_40bee0();\n
        }\n
    }\n
    return v0;\n
}\n
", "4242480:sub_40bc30": "int sub_40bc30(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _free_dbg(v2, -1);\n
}\n
", "4242512:sub_40bc50": "extern char g_40e640;\n
\n
int sub_40bc50(unsigned int v3)\n
{\n
    unsigned int v0[2];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[2];  // ecx\n
    unsigned int v5[2];  // edx\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v4;\n
    v0[0] = &g_40e640;\n
    v5 = &v0[1];\n
    v5[0] = 0;\n
    v5[1] = 0;\n
    v0[1] = v3;\n
    return v0;\n
}\n
", "4242560:sub_40bc80": "extern char g_40e640;\n
\n
int sub_40bc80(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
    unsigned int v4[2];  // edx\n
\n
    v0 = &v1;\n
    *(v3) = &g_40e640;\n
    v4 = v3 + 1;\n
    v4[0] = 0;\n
    v4[1] = 0;\n
    __std_exception_copy(v2 + 4, v3 + 1, v3);\n
    return v3;\n
}\n
", "4242624:sub_40bcc0": "extern char g_40e640;\n
\n
int sub_40bcc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    *(v3) = &g_40e640;\n
    return __std_exception_destroy(v3 + 1, v3);\n
}\n
", "4242672:sub_40bcf0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40bcf0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
\n
    v1 = &v2;\n
    if (!v4->field_4)\n
    {\n
        v0 = \"Unknown exception\";\n
        return v0;\n
    }\n
    v0 = v4->field_4;\n
    return v0;\n
}\n
", "4242720:sub_40bd20": "int sub_40bd20(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40bcc0();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40bf40(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4242768:sub_40bd50": "extern char g_40e660;\n
\n
int sub_40bd50()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    v0 = 1;\n
    sub_40bc50(\"bad allocation\");\n
    *(v1) = &g_40e660;\n
    return v1;\n
}\n
", "4242816:sub_40bd80": "extern char g_40e660;\n
\n
int sub_40bd80(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // ecx\n
\n
    v2 = &v3;\n
    v0 = 1;\n
    sub_40bc50(v4);\n
    *(v5) = &g_40e660;\n
    return *(&v1);\n
}\n
", "4242864:sub_40bdb0": "int sub_40bdb0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return sub_40bcc0();\n
}\n
", "4242896:sub_40bdd0": "extern char g_40e660;\n
\n
int sub_40bdd0(unsigned int v3)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    sub_40bc80(v3);\n
    *(v4) = &g_40e660;\n
    return *(&v0);\n
}\n
", "4242944:sub_40be00": "int sub_40be00(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40bdb0();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40bf40(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4242992:sub_40be30": "extern char g_40e67c;\n
\n
int sub_40be30()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    sub_40bd80(\"bad array new length\");\n
    *(v0) = &g_40e67c;\n
    return v0;\n
}\n
", "4243040:sub_40be60": "int sub_40be60()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return sub_40bdb0();\n
}\n
", "4243072:sub_40be80": "extern char g_40e67c;\n
\n
int sub_40be80(unsigned int v3)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    sub_40bdd0(v3);\n
    *(v4) = &g_40e67c;\n
    return *(&v0);\n
}\n
", "4243120:sub_40beb0": "int sub_40beb0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40be60();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40bf40(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4243168:sub_40bee0": "extern char g_40f1dc;\n
\n
int sub_40bee0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_40bd50();\n
    v0 = &g_40f1dc;\n
    return _CxxThrowException(&v1);\n
}\n
", "4243216:sub_40bf10": "extern char g_40f230;\n
\n
int sub_40bf10()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_40be30();\n
    v0 = &g_40f230;\n
    return _CxxThrowException(&v1);\n
}\n
", "4243264:sub_40bf40": "int sub_40bf40(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40bc30(v2);\n
}\n
", "4243296:sub_40bf60": "extern char g_40e6a0;\n
\n
int sub_40bf60()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    *(v0) = &g_40e6a0;\n
    return v0;\n
}\n
", "4243328:sub_40bf80": "int sub_40bf80(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40bf60();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40bf40(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4243376:sub_40bfb0": "int sub_40bfb0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40c0d0();\n
    sub_40c0e0();\n
    sub_40c100();\n
    v0 = 1;\n
    if (!sub_40c6d0())\n
    {\n
        v0 = 7;\n
        sub_40cdb0();\n
    }\n
    sub_40cf80();\n
    v1 = sub_40cfb0;\n
    sub_40c3a0();\n
    if (sub_40c0a0())\n
    {\n
        v1 = 7;\n
        sub_40cdb0();\n
    }\n
    sub_40cb40();\n
    if (sub_40cc40())\n
    {\n
        v1 = sub_40cae0;\n
        __setusermatherr();\n
    }\n
    sub_40cbc0();\n
    sub_40cbd0();\n
    sub_40cb90();\n
    v1 = sub_40cb30();\n
    _configthreadlocale();\n
    if (sub_40cb80())\n
        sub_40c0c0();\n
    sub_40cd70();\n
    if (sub_40cd80())\n
    {\n
        v1 = 7;\n
        sub_40cdb0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4243568:sub_40c070": "int sub_40c070()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40cbe0();\n
    return 0;\n
}\n
", "4243584:sub_40c080": "int sub_40c080()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40cd90();\n
    v0 = sub_40cb20();\n
    return _set_new_mode();\n
}\n
", "4243616:sub_40c0a0": "int sub_40c0a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_40caf0());\n
}\n
", "4243648:sub_40c0c0": "int sub_40c0c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4243664:sub_40c0d0": "int sub_40c0d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4243680:sub_40c0e0": "int sub_40c0e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_40cb10());\n
}\n
", "4243712:sub_40c100": "int sub_40c100()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_40cb00(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4243744:sub_40c120": "int sub_40c120()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_40ba00(v1, v2);\n
}\n
", "4243808:sub_40c160": "extern char g_40e9a8;\n
extern char g_40e9b0;\n
extern char g_40e9b4;\n
extern struct_0 *g_40e9c0;\n
extern char g_40f270;\n
extern unsigned int g_410040;\n
extern unsigned int g_410504;\n
\n
int sub_40c160()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40f270;\n
    v13 = sub_40cfe0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_410040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_40c640(1, g_410040 ^ &v16, v22, v23))\n
        sub_40cdb0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_40c5c0();\n
    if (g_410504 == 1)\n
    {\n
        v16 = 7;\n
        sub_40cdb0();\n
    }\n
    else if (g_410504)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_410504 = 1;\n
        v16 = &g_40e9c0;\n
        v15 = &g_40e9b4;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_40c369;\n
        }\n
        else\n
        {\n
            v16 = &g_40e9b0;\n
            v15 = &g_40e9a8;\n
            _initterm(*(&v17));\n
            g_410504 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_40c610();\n
    v8 = sub_40cc70();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_40c490())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_40d020(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_40cc80();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_40c490())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_40c120();\n
    if (!sub_40cce0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_40c690(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_40c369:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4244223:sub_40c2ff": "int sub_40c2ff()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4244232:sub_40c308": "int sub_40c308()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4244259:sub_40c323": "extern char g_40c331;\n
\n
int sub_40c323()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_40c331;\n
    if (!sub_40cce0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4244322:sub_40c362": "int sub_40c362()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4244352:sub_40c380": "int sub_40c380()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40c9f0();\n
    return sub_40c160();\n
}\n
", "4244368:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40c380();\n
}\n
", "4244384:sub_40c3a0": "int sub_40c3a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_40c3d0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4244432:sub_40c3d0": "extern unsigned int g_410510;\n
\n
int sub_40c3d0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_410510;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_410510))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4244488:sub_40c408": "int sub_40c408()\n
{\n
}\n
", "4244544:sub_40c440": "extern unsigned int g_41051c;\n
\n
int sub_40c440(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_41051c;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_41051c);\n
    return v6;\n
}\n
", "4244578:sub_40c462": "int sub_40c462()\n
{\n
}\n
", "4244608:sub_40c480": "int sub_40c480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4244624:sub_40c490": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40f290;\n
extern unsigned int g_410040;\n
\n
int sub_40c490(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40f290;\n
    v13 = sub_40cfe0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_410040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_40c8f0(v6, g_410040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_40c960(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4244829:sub_40c55d": "int sub_40c55d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4244838:sub_40c566": "int sub_40c566()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4244877:sub_40c58d": "int sub_40c58d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4244896:sub_40c5a0": "int sub_40c5a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4244928:sub_40c5c0": "extern unsigned int g_410508;\n
\n
int sub_40c5c0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40d800();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_40c480() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_410508 = v6;\n
        if (!g_410508)\n
        {\n
            tmp_0 = 0;\n
            g_410508 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_410508 = v6;\n
            v5 = g_410508;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4245008:sub_40c610": "extern void* g_410508;\n
\n
int sub_40c610(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d800();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_410508;\n
        g_410508 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40c62f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4245056:sub_40c640": "extern char g_41050c;\n
\n
int sub_40c640(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_41050c = 1;\n
    sub_40d370();\n
    v4 = sub_40dba0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40dba0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40dbb0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4245136:sub_40c690": "extern char g_41050c;\n
\n
int sub_40c690(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_41050c && a0)\n
        return 1;\n
    sub_40dbb0(v2);\n
    v3 = sub_40dbb0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4245200:sub_40c6d0": "extern char g_41050d;\n
extern unsigned int g_410510;\n
extern unsigned int g_410514;\n
extern unsigned int g_410518;\n
extern unsigned int g_41051c;\n
extern unsigned int g_410520;\n
extern unsigned int g_410524;\n
\n
int sub_40c6d0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_41050d)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_40cdb0();\n
    }\n
    if (sub_40d800() && !v10)\n
    {\n
        v8 = &g_410510;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_41051c;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_40c796;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_410510 = v4;\n
    g_410514 = v5;\n
    g_410518 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_41051c = v1;\n
    g_410520 = v2;\n
    v11 = v3;\n
    g_410524 = v11;\n
LABEL_40c796:\n
    g_41050d = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4245424:sub_40c7b0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_40c7b0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40d800() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_40d020(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4245504:sub_40c800": "int sub_40c800()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40c6d0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4245536:sub_40c820": "int sub_40c820()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40d800())\n
    {\n
        v3 = sub_40d370();\n
    }\n
    else\n
    {\n
        v3 = sub_40c0a0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_40c0c0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4245584:sub_40c850": "extern char g_410510;\n
\n
int sub_40c850()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40d800())\n
    {\n
        v0 = &g_410510;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40dbf0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4245632:sub_40c880": "int sub_40c880()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40dbc0(0);\n
    return sub_40dbc0();\n
}\n
", "4245664:sub_40c8a0": "int sub_40c8a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40dbd0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40dbd0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40dbe0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4245712:sub_40c8d0": "char sub_40c8d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40dbe0();\n
    sub_40dbe0();\n
    return 1;\n
}\n
", "4245744:sub_40c8f0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40c8f0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4245856:sub_40c960": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40c960(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 != v0)\n
        {\n
            if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
                return v5;\n
            v5 = &v5[2 + 2];\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
}\n
", "4246000:sub_40c9f0": "extern unsigned int g_410040;\n
extern unsigned int g_410080;\n
\n
int sub_40c9f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_410040 != 3141592654)\n
    {\n
        v4 = g_410040 & -0x10000;\n
        if (v4)\n
        {\n
            g_410080 = ~(g_410040);\n
            return g_410040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_40ca70(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_410040 = v0;\n
    g_410080 = ~(v0);\n
    return v4;\n
}\n
", "4246128:sub_40ca70": "int sub_40ca70()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4246240:sub_40cae0": "int sub_40cae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4246256:sub_40caf0": "int sub_40caf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4246272:sub_40cb00": "int sub_40cb00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4246288:sub_40cb10": "int sub_40cb10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4246304:sub_40cb20": "int sub_40cb20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4246320:sub_40cb30": "int sub_40cb30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4246336:sub_40cb40": "extern void g_410528;\n
\n
int sub_40cb40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_410528);\n
}\n
", "4246368:sub_40cb60": "extern unsigned int g_410528;\n
\n
int sub_40cb60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_410528);\n
}\n
", "4246400:sub_40cb80": "char sub_40cb80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4246416:sub_40cb90": "int sub_40cb90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_40cdb0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4246464:sub_40cbc0": "int sub_40cbc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4246480:sub_40cbd0": "int sub_40cbd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4246496:sub_40cbe0": "int sub_40cbe0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_40cc20();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_40cc30(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4246560:sub_40cc20": "extern char g_410530;\n
\n
int sub_40cc20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410530;\n
}\n
", "4246576:sub_40cc30": "extern char g_410538;\n
\n
int sub_40cc30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410538;\n
}\n
", "4246592:sub_40cc40": "extern unsigned int g_410008;\n
\n
int sub_40cc40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_410008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4246640:sub_40cc70": "extern char g_410544;\n
\n
int sub_40cc70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410544;\n
}\n
", "4246656:sub_40cc80": "extern char g_410548;\n
\n
int sub_40cc80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410548;\n
}\n
", "4246672:sub_40cc90": "extern void* g_41054c;\n
\n
int sub_40cc90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_41054c = 0;\n
    return v3;\n
}\n
", "4246688:sub_40cca0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40cca0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4246752:sub_40cce0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_40cce0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4246896:sub_40cd70": "int sub_40cd70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4246912:sub_40cd80": "int sub_40cd80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40cef0();\n
}\n
", "4246928:sub_40cd90": "int sub_40cd90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_40cf00);\n
}\n
", "4246960:sub_40cdb0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40cdb0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_40cc90();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_40cc90();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4246985:sub_40cdc9": "int sub_40cdc9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4246985\n
}\n
", "4247280:sub_40cef0": "int sub_40cef0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4247296:sub_40cf00": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_40cf00(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4247424:sub_40cf80": "extern struct_0 *g_40f110;\n
\n
int sub_40cf80()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40f110;\n
    v3 = &g_40f110;\n
    return &g_40f110;\n
}\n
", "4247472:sub_40cfb0": "extern struct_0 *g_40f118;\n
\n
int sub_40cfb0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40f118;\n
    v3 = &g_40f118;\n
    return &g_40f118;\n
}\n
", "4247520:sub_40cfe0": "extern unsigned int g_410040;\n
\n
int sub_40cfe0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40dc00(*(v2));\n
    return _except_handler4_common(&g_410040, sub_40d830, v2, a0, a1);\n
}\n
", "4247584:sub_40d020": "int sub_40d020()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4247600:sub_40d030": "int sub_40d030(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x40d039;\n
    return tmp_4;\n
}\n
", "4247616:sub_40d040": "int sub_40d040(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4247648:sub_40d060": "int sub_40d060(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40d040(v2);\n
}\n
", "4247680:sub_40d080": "extern unsigned int g_410550;\n
\n
int sub_40d080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_40d030(&g_410550, v3);\n
    return v0;\n
}\n
", "4247712:sub_40d0a0": "extern char g_40d020;\n
extern unsigned int g_411000;\n
\n
int sub_40d0a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_40d060(&g_411000) != sub_40d020)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4247760:sub_40d0d0": "extern char g_40e7c0;\n
\n
int sub_40d0d0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40e7c0;\n
    v1 = &g_40e7c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4247824:sub_40d110": "extern unsigned int g_411008;\n
\n
int sub_40d110(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_40d060(&g_411008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4247872:sub_40d140": "extern unsigned int g_410550;\n
\n
int sub_40d140(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_40d060(&g_410550);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_40d020();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4247936:sub_40d180": "int sub_40d180()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4247952:sub_40d190": "int sub_40d190(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d0d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4247971\n
}\n
", "4247984:sub_40d1b0": "int sub_40d1b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d0d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4248009:sub_40d1c9": "int sub_40d1c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4248009\n
}\n
", "4248016:sub_40d1d0": "int sub_40d1d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d0d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40d110(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4248064:sub_40d200": "int sub_40d200(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d0d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40d140(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4248112:sub_40d230": "extern char g_40e7c0;\n
\n
int sub_40d230(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40e7c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4248176:sub_40d270": "int sub_40d270(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d230(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40d0d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4248219\n
}\n
", "4248224:sub_40d2a0": "int sub_40d2a0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d230(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40d0d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4248273:sub_40d2d1": "int sub_40d2d1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4248273\n
}\n
", "4248288:sub_40d2e0": "int sub_40d2e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4248304:sub_40d2f0": "int sub_40d2f0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d230(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40d0d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40d110(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4248368:sub_40d330": "int sub_40d330(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40d230(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40d0d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40d140(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4248432:sub_40d370": "extern unsigned int g_410040;\n
extern unsigned int g_410088;\n
extern unsigned int g_41008c;\n
extern unsigned int g_410090;\n
extern unsigned int g_410554;\n
extern unsigned int g_410558;\n
extern unsigned int g_41055c;\n
\n
int sub_40d370()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_410040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_410558 = 0;\n
    g_410090 = g_410090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40d830();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40d4bb;\n
        g_41055c = g_41055c | 1;\n
    }\n
LABEL_40d4bb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_41055c = g_41055c | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_410558 = 1;\n
    g_410090 = g_410090 | 2;\n
    g_410088 = g_410088 & -2;\n
    g_41008c = g_41008c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_410558 = 2;\n
        g_410090 = g_410090 | 4;\n
        g_410088 = g_410088 & -17;\n
        g_41008c = g_41008c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_410558 = 3;\n
                g_410090 = g_410090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_410558 = 5;\n
                    g_410090 = g_410090 | 32;\n
                    g_410088 = g_410088 & -3;\n
                    g_41008c = g_41008c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_410558 = 6;\n
                            g_410090 = g_410090 | 64;\n
                            g_410088 = g_410088 & -37;\n
                            g_41008c = g_41008c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_410088 = g_410088 & -16777217;\n
                    g_41008c = g_41008c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_410554 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_410088 = ~(v2 | 16777256) & g_410088;\n
                        g_41008c = ~(v3) & g_41008c;\n
                        if (g_410554 > 1)\n
                        {\n
                            g_410088 = g_410088 & -65;\n
                            g_41008c = g_41008c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4249600:sub_40d800": "extern unsigned int g_410094;\n
\n
int sub_40d800()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_410094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4249648:sub_40d830": "extern unsigned int g_410040;\n
extern unsigned int g_410080;\n
extern unsigned int g_410568;\n
extern unsigned int g_41056c;\n
extern unsigned int g_410574;\n
extern unsigned int g_410578;\n
extern unsigned int g_41057c;\n
extern unsigned int g_4105b8;\n
extern unsigned short g_410644;\n
extern unsigned short g_410648;\n
extern unsigned short g_41064c;\n
extern unsigned short g_410650;\n
extern unsigned int g_410654;\n
extern unsigned int g_410658;\n
extern unsigned int g_41065c;\n
extern unsigned int g_410660;\n
extern unsigned int g_410664;\n
extern unsigned int g_410668;\n
extern unsigned int g_41066c;\n
extern unsigned int g_410670;\n
extern unsigned short g_410674;\n
extern unsigned int g_410678;\n
extern unsigned int g_41067c;\n
extern unsigned short g_410680;\n
\n
int sub_40d830()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_410040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_410668 = v7;\n
        g_410664 = v6;\n
        g_410660 = v8;\n
        g_41065c = v9;\n
        g_410658 = v10;\n
        g_410654 = v11;\n
        g_410680 = v12;\n
        g_410674 = v13;\n
        g_410650 = v14;\n
        g_41064c = v15;\n
        g_410648 = v16;\n
        g_410644 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_410678 = v0;\n
        g_41066c = v3;\n
        g_410670 = *(&v4);\n
        g_41067c = &v5;\n
        g_4105b8 = 65537;\n
        g_410574 = g_410670;\n
        g_410568 = 3221226505;\n
        g_41056c = 1;\n
        g_410578 = 1;\n
        g_41057c = 2;\n
        v1 = g_410040;\n
        v2 = g_410080;\n
        sub_40db70();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4249664:sub_40d840": "extern unsigned int g_410568;\n
extern unsigned int g_41056c;\n
extern unsigned int g_410574;\n
extern unsigned int g_410578;\n
extern unsigned int g_41057c;\n
extern unsigned short g_410644;\n
extern unsigned short g_410648;\n
extern unsigned short g_41064c;\n
extern unsigned short g_410650;\n
extern unsigned int g_410654;\n
extern unsigned int g_410658;\n
extern unsigned int g_41065c;\n
extern unsigned int g_410660;\n
extern unsigned int g_410664;\n
extern unsigned int g_410668;\n
extern unsigned int g_41066c;\n
extern unsigned int g_410670;\n
extern unsigned short g_410674;\n
extern unsigned int g_410678;\n
extern unsigned int g_41067c;\n
extern unsigned short g_410680;\n
\n
int sub_40d840()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_410668 = v4;\n
        g_410664 = v5;\n
        g_410660 = v6;\n
        g_41065c = v7;\n
        g_410658 = v8;\n
        g_410654 = v9;\n
        g_410680 = v10;\n
        g_410674 = v11;\n
        g_410650 = v12;\n
        g_41064c = v13;\n
        g_410648 = v14;\n
        g_410644 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_410678 = v0;\n
        g_41066c = v1;\n
        g_410670 = *(&v2);\n
        g_41067c = &v3;\n
        g_410574 = g_410670;\n
        g_410568 = 3221226505;\n
        g_41056c = 1;\n
        g_410578 = 1;\n
        g_41057c = v3;\n
        sub_40db70();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4249689:sub_40d859": "int sub_40d859()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4249689\n
}\n
", "4249888:sub_40d920": "extern unsigned int g_410568;\n
extern unsigned int g_41056c;\n
extern unsigned int g_410574;\n
extern unsigned int g_410578;\n
extern unsigned int g_41057c;\n
extern char g_410580;\n
extern unsigned short g_410644;\n
extern unsigned short g_410648;\n
extern unsigned short g_41064c;\n
extern unsigned short g_410650;\n
extern unsigned int g_410654;\n
extern unsigned int g_410658;\n
extern unsigned int g_41065c;\n
extern unsigned int g_410660;\n
extern unsigned int g_410664;\n
extern unsigned int g_410668;\n
extern unsigned int g_41066c;\n
extern unsigned int g_410670;\n
extern unsigned short g_410674;\n
extern unsigned int g_410678;\n
extern unsigned int g_41067c;\n
extern unsigned short g_410680;\n
\n
int sub_40d920()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1065313];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_410668 = v7;\n
        g_410664 = v8;\n
        g_410660 = v9;\n
        g_41065c = v10;\n
        g_410658 = v11;\n
        g_410654 = v12;\n
        g_410680 = v13;\n
        g_410674 = v14;\n
        g_410650 = v15;\n
        g_41064c = v16;\n
        g_410648 = v17;\n
        g_410644 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_410678 = v0;\n
        g_41066c = v2;\n
        g_410670 = *(&v3);\n
        g_41067c = &v4;\n
        g_410574 = g_410670;\n
        g_410568 = 3221226505;\n
        g_41056c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_410578 = v5 + 1;\n
        g_41057c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_410580)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40db70();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4249913:sub_40d939": "int sub_40d939()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4249913\n
}\n
", "4250192:sub_40da50": "int sub_40da50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40d840(8);\n
}\n
", "4250235:sub_40da7b": "int sub_40da7b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4250235\n
}\n
", "4250480:sub_40db70": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40db70(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4250528:sub_40dba0": "char sub_40dba0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4250544:sub_40dbb0": "char sub_40dbb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4250560:sub_40dbc0": "char sub_40dbc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4250576:sub_40dbd0": "char sub_40dbd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4250592:sub_40dbe0": "char sub_40dbe0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4250608:sub_40dbf0": "int sub_40dbf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4250624:sub_40dc00": "extern unsigned int g_410558;\n
\n
int sub_40dc00(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_410558 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4250932:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4250938:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4250944:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4250950:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4250956:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4250962:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4250968:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4250974:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4250980:sub_40dd64": "int sub_40dd64(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4250986:sub_40dd6a": "int sub_40dd6a()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4250992:sub_40dd70": "int sub_40dd70()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4250998:sub_40dd76": "int sub_40dd76(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4251004:sub_40dd7c": "int sub_40dd7c(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4251010:sub_40dd82": "int sub_40dd82()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4251016:sub_40dd88": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40dd88(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4251022:sub_40dd8e": "int sub_40dd8e(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4251028:sub_40dd94": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40dd94(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4251034:sub_40dd9a": "int sub_40dd9a(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4251040:sub_40dda0": "int sub_40dda0(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4251046:_CxxThrowException": "int _CxxThrowException()\n
{\n
    return ::kernel32.dll::_CxxThrowException();\n
}\n
", "4251058:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4251064:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4251070:__std_exception_copy": "int __std_exception_copy()\n
{\n
    return ::kernel32.dll::__std_exception_copy();\n
}\n
", "4251076:__std_exception_destroy": "int __std_exception_destroy()\n
{\n
    return ::kernel32.dll::__std_exception_destroy();\n
}\n
", "4251082:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4251088:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4251094:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4251100:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4251106:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4251112:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4251118:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4251124:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4251130:_callnewh": "int _callnewh()\n
{\n
    return ::kernel32.dll::_callnewh();\n
}\n
", "4251136:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4251142:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4251148:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4251154:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4251160:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4251166:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4251172:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4251178:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4251184:_free_dbg": "int _free_dbg()\n
{\n
    return ::kernel32.dll::_free_dbg();\n
}\n
", "4251190:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4251196:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4251202:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4251208:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4251214:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4251220:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4251226:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4251232:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4251238:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4251244:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4251250:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4251256:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4251262:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4251268:malloc": "int malloc()\n
{\n
    return ::kernel32.dll::malloc();\n
}\n
", "4251274:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4251280:sub_40de90": "int sub_40de90()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4251286:sub_40de96": "int sub_40de96(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_transmit": null, "5242912:GetCurrentProcess": null, "5242916:GetCurrentProcessId": null, "5242920:GetCurrentThreadId": null, "5242924:GetModuleHandleW": null, "5242928:GetStartupInfoW": null, "5242932:GetSystemTimeAsFileTime": null, "5242936:InitializeSListHead": null, "5242940:IsDebuggerPresent": null, "5242944:IsProcessorFeaturePresent": null, "5242948:QueryPerformanceCounter": null, "5242952:SetUnhandledExceptionFilter": null, "5242956:TerminateProcess": null, "5242960:UnhandledExceptionFilter": null, "5242964:_CxxThrowException": null, "5242968:__CxxFrameHandler3": null, "5242972:__current_exception": null, "5242976:__current_exception_context": null, "5242980:__std_exception_copy": null, "5242984:__std_exception_destroy": null, "5242988:__std_type_info_destroy_list": null, "5242992:_except_handler4_common": null, "5242996:memset": null, "5243000:__p___argc": null, "5243004:__p___argv": null, "5243008:__p__commode": null, "5243012:__setusermatherr": null, "5243016:_c_exit": null, "5243020:_callnewh": null, "5243024:_cexit": null, "5243028:_configthreadlocale": null, "5243032:_configure_narrow_argv": null, "5243036:_controlfp_s": null, "5243040:_crt_at_quick_exit": null, "5243044:_crt_atexit": null, "5243048:_execute_onexit_table": null, "5243052:_exit": null, "5243056:_free_dbg": null, "5243060:_get_initial_narrow_environment": null, "5243064:_initialize_narrow_environment": null, "5243068:_initialize_onexit_table": null, "5243072:_initterm": null, "5243076:_initterm_e": null, "5243080:_register_onexit_function": null, "5243084:_register_thread_local_exe_atexit_callback": null, "5243088:_seh_filter_dll": null, "5243092:_seh_filter_exe": null, "5243096:_set_app_type": null, "5243100:_set_fmode": null, "5243104:_set_new_mode": null, "5243108:exit": null, "5243112:malloc": null, "5243116:terminate": null, "6295596:UnresolvableCallTarget": null}