{"4198400:sub_401000": "int sub_401000(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0 * v5;\n
    v1 = sub_401050();\n
    v0 = v2;\n
    sub_401fa0(v1, 0);\n
    return v1;\n
}\n
", "4198472:sub_401048": null, "4198480:sub_401050": "extern struct_0 *g_409098;\n
\n
int sub_401050(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_0 *v1[2];  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct struct_0 *v6[2];  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v9 = &v10;\n
    if (v11 < 8)\n
    {\n
        v11 = 8;\n
    }\n
    else if ((v11 & 3))\n
    {\n
        v11 = (v11 >> 2) + 1;\n
        v11 *= 4;\n
    }\n
    v8 = &g_409098->field_0;\n
    while (true)\n
    {\n
        if (!v8)\n
            v8 = sub_4012d0();\n
        v7 = v8;\n
        v6[0] = v8 + (*(v7) & -0x4) - 4;\n
        if (*(v7) >= v11)\n
            break;\n
        v8 = v6[0];\n
    }\n
    v5 = v8 + 4;\n
    v4 = *(v7) - v11;\n
    *(v7) = v11;\n
    v12 = v7;\n
    *(v12) = *(v12) | 1;\n
    if (v4 >= 12)\n
    {\n
        v3 = v8 + v11 + 4;\n
        v2 = v3;\n
        *(v2) = v4 - 4;\n
        v1[0] = &v6[0];\n
        if (-4 + v2 + (*(v2) & -0x4) != v6)\n
        {\n
            sub_404060();\n
            cgc__terminate();\n
        }\n
        if (g_409098 == v8)\n
        {\n
            g_409098 = v2;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v2;\n
        }\n
        else\n
        {\n
            if (v1[1])\n
                *((-4 + &v1[1]->field_0 + (v1[1]->field_0 & -0x4))) = v3;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v3;\n
        }\n
        v13 = v7;\n
        *(v13) = *(v13) | 2;\n
    }\n
    else if (g_409098 == v8)\n
    {\n
        g_409098 = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v6[1])\n
            *((-4 + &v6[1]->field_0 + (v6[1]->field_0 & -0x4))) = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = v6[1];\n
    }\n
    v0 = v11;\n
    sub_401fa0(v8 + 4, 0);\n
    return v8 + 4;\n
}\n
", "4199112:sub_4012c8": null, "4199120:sub_4012d0": "extern struct_0 *g_409098;\n
\n
int sub_4012d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = v7 + 4;\n
    if ((v4 & 4095))\n
    {\n
        v4 = (v4 >> 12) + 1;\n
        v4 *= 0x1000;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(v4, 0))\n
        cgc__terminate();\n
    v2 = *(&v3);\n
    v1[0] = *(&v3) + v4 - 8;\n
    *(v2) = v4 - 4;\n
    v1[1] = 0;\n
    v1[0] = g_409098;\n
    g_409098 = v2;\n
    return v2;\n
}\n
", "4199293:sub_40137d": null, "4199296:sub_401380": "extern struct_0 *g_409098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 **, struct struct_0 *[2], unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_409098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_409098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_409098;\n
    v1[1] = 0;\n
    if (g_409098)\n
        *((&g_409098->field_0 + (g_409098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_409098 = v12;\n
    return v6;\n
}\n
", "4199728:sub_401530": "extern struct_0 *g_409098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 **, struct struct_0 *[2], unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_409098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_409098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_409098;\n
    v1[1] = 0;\n
    if (g_409098)\n
        *((&g_409098->field_0 + (g_409098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_409098 = v12;\n
    return v6;\n
}\n
", "4199929:sub_4015f9": null, "4199936:sub_401600": null, "4200113:sub_4016b1": null, "4200128:sub_4016c0": null, "4200336:sub_401790": "int sub_401790(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4200408:sub_4017d8": null, "4200416:sub_4017e0": "int sub_4017e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200470:sub_401816": null, "4200480:sub_401820": "int sub_401820(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200534:sub_401856": null, "4200544:sub_401860": "int sub_401860(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4017e0(v3);\n
    return v0 | sub_401820(v3);\n
}\n
", "4200590:sub_40188e": null, "4200592:sub_401890": "int sub_401890(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_401860(v3);\n
    return v0 | sub_4018c0(v3, v0);\n
}\n
", "4200638:sub_4018be": null, "4200640:sub_4018c0": "int sub_4018c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200694:sub_4018f6": null, "4200704:sub_401900": "int sub_401900(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4200798:sub_40195e": null, "4200800:sub_401960": null, "4200840:sub_401988": null, "4200848:sub_401990": null, "4200912:sub_4019d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4019d0()\n
{\n
    char <0x4019d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_37;  // tmp #37\n
    int tmp_39;  // tmp #39\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp+0x0]\n
    char *v2;  // [bp+0x4], Other Possible Types: unsigned int\n
    unsigned long v3;  // [bp+0x8]\n
    void* v4;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp+0x14]\n
    unsigned long v6;  // [bp+0x18], Other Possible Types: unsigned long long\n
    unsigned long v7;  // [bp+0x20], Other Possible Types: unsigned long long\n
    unsigned long v8;  // [bp+0x28], Other Possible Types: unsigned long long\n
    int v9;  // 168, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // xmm0\n
    int v11;  // xmm0\n
    int v13;  // xmm0\n
    struct_0 *v14;  // ebp\n
\n
    v0 = &<0x4019d0[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v9 = 0;\n
        v6 = 4591870180066957722;\n
        v5 = 1;\n
        while (true)\n
        {\n
            v1 = *(v2);\n
            if (!sub_401900(*(v2)))\n
                break;\n
            v2 += 1;\n
        }\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v2))\n
            {\n
LABEL_401bf8:\n
                *(&v9) = v5;\n
                xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE)))\n
                *(&v8) = v13;\n
                break;\n
            }\n
            else\n
            {\n
                if (*(v2) == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_401bd1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_401bd1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_401bd1;\n
                }\n
                v1 = *(v2);\n
                if (!sub_4018c0(*(v2)))\n
                    goto LABEL_401bf8;\n
                if (!v4)\n
                {\n
LABEL_401b39:\n
                    v4 = 1;\n
                    v9 = (0 CONCAT v7) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v2) - 48);\n
                    *(&v7) = v9;\n
                    goto LABEL_401bd1;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_401b39;\n
                    if (v4 == 2)\n
                    {\n
                        v10 = *(v2) - 48;\n
                        v11 = v9 * (0 CONCAT v6);\n
                        *(&v7) = v11 + (0 CONCAT v7);\n
                        tmp_37 = DivV(tmp_39, tmp_38);\n
                        v9 = tmp_37;\n
                        *(&v6) = v9;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
LABEL_401bd1:\n
                    v2 += 1;\n
                }\n
            }\n
        }\n
    }\n
    *(&v3) = *(&v8);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v14 = v0;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v14 = v0;\n
    return;\n
}\n
", "4201502:sub_401c1e": null, "4201504:sub_401c20": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401c20(char *v2)\n
{\n
    char <0x401c20[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_27;  // tmp #27\n
    unsigned int v1;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x8]\n
    void* v4;  // [bp+0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp+0x14]\n
    void* v7;  // [bp+0x18], Other Possible Types: unsigned int\n
    char *v8;  // [bp+0x1c]\n
    void* v9;  // [bp+0x20], Other Possible Types: unsigned int\n
    unsigned int v10;  // ecx\n
    char *v12;  // eax\n
    unsigned int v13;  // esi\n
\n
    v0 = &<0x401c20[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 1;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = *(v2);\n
        if (!sub_401900(*(v2)))\n
            break;\n
        v2 += 1;\n
    }\n
    for (v5 = 0; *(v2); v2 += 1)\n
    {\n
        if (*(v2) == 45)\n
        {\n
            if (!v5)\n
            {\n
                v6 = -1;\n
                v5 += 1;\n
            }\n
            else\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v2) != 43)\n
            {\n
                v1 = *(v2);\n
                if (!sub_4018c0(*(v2)))\n
                    break;\n
                if (v5 && v5 != 1)\n
                {\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                v5 = 1;\n
                v2 = v8;\n
                v10 = v7 * 10;\n
                tmp_27 = v10;\n
                v12 = (v7 * 10 >> 32) + v2 * 10 + (*(v2) - 48 >> 31) + (tmp_27 + *(v2) - 48 < tmp_27);\n
                v7 = v10 + *(v2) - 48;\n
                v8 = v12;\n
                v4 += 1;\n
                if (v4 == 10)\n
                    break;\n
            }\n
            else if (!v5)\n
            {\n
                v5 += 1;\n
            }\n
            else\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
        }\n
    }\n
    v13 = v7;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base+28, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>))))\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v3 = v7;\n
    v3 *= v6;\n
    v9 = v3;\n
    return v9;\n
}\n
", "4202021:sub_401e25": null, "4202032:sub_401e30": "int sub_401e30(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4202123:sub_401e8b": null, "4202128:sub_401e90": "int sub_401e90(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v4 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v4 + v1)) = 0;\n
    }\n
    return v4;\n
}\n
", "4202283:sub_401f2b": null, "4202288:sub_401f30": "int sub_401f30(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v5 = v4;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!a0)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v5 = v1;\n
            if (v5 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4202396:sub_401f9c": null, "4202400:sub_401fa0": "int sub_401fa0(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v3;\n
}\n
", "4202478:sub_401fee": null, "4202480:sub_401ff0": "int sub_401ff0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(v4) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4202588:sub_40205c": null, "4202592:sub_402060": "int sub_402060(char *v7, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = v7;\n
    v3 = sub_402120();\n
    if (v7 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v7[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v7[v2 + v3] = 0;\n
        v4 = v7;\n
        return v4;\n
    }\n
    v4 = v7;\n
    return v4;\n
}\n
", "4202773:sub_402115": null, "4202784:sub_402120": "int sub_402120(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
        return v0;\n
    for (v0 = 0; v0[v3]; v0 += 1);\n
    return v0;\n
}\n
", "4202861:sub_40216d": null, "4202864:sub_402170": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402170(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            return v3;\n
        *((v6 + v3)) = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1 == a0)\n
            return v3;\n
        *((v6 + v3)) = v1;\n
        v3 += 1;\n
    }\n
}\n
", "4203036:sub_40221c": null, "4203040:sub_402220": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402220(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            *((v6 + v3)) = 0;\n
            v0 = &v2;\n
            if (cgc_receive(0, &v1, 1))\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (v1 == a0)\n
                return v3;\n
            *((v6 + v3)) = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                v0 = &v2;\n
                if (cgc_receive(0, &v1, 1))\n
                {\n
                    return v3;\n
                }\n
                else if (v1 == a0)\n
                {\n
                    return v3;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4203288:sub_402318": null, "4203296:sub_402320": "int sub_402320(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (v4 && a0)\n
    {\n
        for (v0 = sub_402120(v4); *((a0 + v1)); v1 += 1)\n
        {\n
            v4[v0] = *((a0 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4203435:sub_4023ab": null, "4203440:sub_4023b0": "int sub_4023b0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v5)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v5 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v5 + v2)) = 0;\n
    return v2;\n
}\n
", "4203639:sub_402477": null, "4203648:sub_402480": "int sub_402480(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    cgc_transmit(1, v4, sub_402120(v4));\n
    v0 = &v1;\n
    return cgc_transmit(1, \"\\n
\", 1);\n
}\n
", "4203742:sub_4024de": null, "4203744:sub_4024e0": "int sub_4024e0(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    for (v0 = v4; *(v3); v3 += 1)\n
    {\n
        if (*(v3) == a0)\n
        {\n
            v0 = v3;\n
            return v0;\n
        }\n
    }\n
    if (*(v3) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4203850:sub_40254a": null, "4203856:sub_402550": "extern struct_0 *g_40909c;\n
extern struct_0 *g_4090a0;\n
extern void* g_4090a4;\n
extern struct_0 *g_4090a8;\n
\n
int sub_402550(char *v11, char *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc]\n
    char *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    if (!a0)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v11)\n
    {\n
        if (g_4090a0)\n
        {\n
            cgc_deallocate(g_4090a0);\n
            g_4090a0 = 0;\n
            g_4090a4 = 0;\n
            g_4090a8 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!g_4090a0)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (g_4090a8 >= g_4090a0 + g_4090a4)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!g_4090a0)\n
    {\n
        if (sub_402120(v11) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        g_4090a4 = sub_402120(v11);\n
        v0 = &g_4090a0;\n
        if (cgc_allocate(g_4090a4, 0))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        sub_401e30(g_4090a0, v11);\n
        g_4090a8 = g_4090a0;\n
    }\n
    v11 = &g_4090a8->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (sub_4024e0(a0, *(v11)))\n
            v3 = v11 < g_4090a0 + g_4090a4;\n
        if (!(v3 & 1))\n
            break;\n
        v11 += 1;\n
    }\n
    if (v11 >= g_4090a0 + g_4090a4)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = v11;\n
    v2 = v11;\n
    v6 = &v2[sub_402120(v11)];\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= sub_402120(a0))\n
            break;\n
        v5 = sub_4024e0(v7, a0[v4]);\n
        if (v5 && v5 && v5 < v6)\n
            v6 = v5;\n
        v4 += 1;\n
    }\n
    g_40909c = v7;\n
    *(v6) = 0;\n
    g_4090a8 = v6 + 1;\n
    v8 = g_40909c;\n
    return v8;\n
}\n
", "4204520:sub_4027e8": null, "4204528:sub_4027f0": "int sub_4027f0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    cgc_transmit(1, v5, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4204611:sub_402843": null, "4204624:sub_402850": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402850(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (cgc_allocate(sub_402120(v5) + 1, 0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401f30(*(&v1), sub_402120(v5) + 1);\n
    sub_401e30(*(&v1), v5);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4204778:sub_4028ea": null, "4204784:sub_4028f0": "int sub_4028f0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4204856:sub_402938": null, "4204864:sub_402940": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402940(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v5 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v5 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v7 = v5;\n
        v5 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205073:sub_402a11": null, "4205088:sub_402a20": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402a20(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v5 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v5 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205281:sub_402ae1": null, "4205296:sub_402af0": null, "4206183:sub_402e67": null, "4206192:sub_402e70": "int sub_402e70(struct struct_0 **v3, struct struct_0 **a0)\n
{\n
    struct struct_0 **<0x402e70[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct struct_0 **v2;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0xc]\n
    char v5;  // [bp+0x13]\n
    unsigned int v6;  // [bp+0x14]\n
    unsigned int v7;  // [bp+0x18]\n
    unsigned int v8;  // [bp+0x1c]\n
    unsigned int v9;  // [bp+0x20]\n
    unsigned int v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28], Other Possible Types: unsigned int\n
    struct struct_0 **v12;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct struct_0 **v13;  // [bp+0x30]\n
    struct struct_0 **v14;  // [bp+0x3c], Other Possible Types: unsigned int\n
    struct struct_0 **v15;  // [bp+0x40]\n
    struct struct_0 **v16;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct struct_0 **v17;  // [bp+0x48]\n
    char v18;  // [bp+0x4f]\n
    void* v19;  // [bp+0x50], Other Possible Types: unsigned int\n
    void* v20;  // [bp+0x54], Other Possible Types: unsigned int\n
    unsigned int v21;  // [bp+0x58]\n
    void* v22;  // [bp+0x5c], Other Possible Types: unsigned int\n
    void* v23;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v24;  // [bp+0x64], Other Possible Types: unsigned int\n
    char v25;  // [bp+0x68]\n
    unsigned int v26;  // [bp+0xa8]\n
    unsigned int v27;  // [bp+0xac]\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
    struct struct_0 **v32;  // eax\n
\n
    v1 = &<0x402e70[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v27 = -1;\n
        return v27;\n
    }\n
    while (*(v3))\n
    {\n
        if (*(v3) != 64)\n
        {\n
            v2 = *(v3);\n
            sub_4028f0(*(v3));\n
            v3 = v3 + 1;\n
            v26 += 1;\n
LABEL_403726:\n
        }\n
        else\n
        {\n
            v3 = v3 + 1;\n
            v24 = 0;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v19 = 0;\n
            if (*(v3) == 64)\n
            {\n
                v2 = 64;\n
                sub_4028f0(64);\n
                v3 = v3 + 1;\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 45)\n
            {\n
                v21 = 1;\n
                v3 = v3 + 1;\n
            }\n
            v2 = *(v3);\n
            if (sub_4018c0(*(v3)))\n
            {\n
                if (*(v3) == 48)\n
                {\n
                    v22 = 1;\n
                    v3 = v3 + 1;\n
                }\n
                v2 = *(v3);\n
                if (sub_4018c0(*(v3)))\n
                {\n
                    v2 = v3;\n
                    v24 = sub_401c20(v3);\n
                    while (true)\n
                    {\n
                        v2 = *(v3);\n
                        if (!sub_4018c0(*(v3)))\n
                            break;\n
                        v3 = v3 + 1;\n
                    }\n
                }\n
            }\n
            if (*(v3) == 46)\n
            {\n
                v3 = v3 + 1;\n
                v2 = v3;\n
                v23 = sub_401c20(v3);\n
                while (true)\n
                {\n
                    v2 = *(v3);\n
                    if (!sub_4018c0(*(v3)))\n
                        break;\n
                    v3 = v3 + 1;\n
                }\n
            }\n
            if (*(v3) == 99)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v18 = *(v28);\n
                v19 = v24 - 1;\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_4028f0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_4028f0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                v2 = v18;\n
                sub_4028f0(v18);\n
                v26 += 1;\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_4028f0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 100)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v17 = &*(v29)->field_0;\n
                v2 = v17;\n
                v3 = &v25;\n
                sub_402940(v3, a0);\n
                v9 = v24;\n
                v2 = &v25;\n
                v19 = v9 - sub_402120(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_4028f0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_4028f0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v16 = &v25; *(v16); v16 += 1)\n
                {\n
                    v2 = *(v16);\n
                    sub_4028f0(*(v16));\n
                    v26 += 1;\n
                }\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_4028f0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 120)\n
            {\n
                v30 = a0;\n
                a0 = v30 + 1;\n
                v15 = &*(v30)->field_0;\n
                v2 = v15;\n
                v3 = &v25;\n
                sub_402a20(v3, a0);\n
                v8 = v24;\n
                v2 = &v25;\n
                v19 = v8 - sub_402120(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_4028f0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_4028f0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v14 = &v25; *(v14); v14 = v14 + 1)\n
                {\n
                    v2 = *(v14);\n
                    sub_4028f0(*(v14));\n
                    v26 += 1;\n
                }\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_4028f0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 102)\n
            {\n
                v31 = a0;\n
                a0 = v31 + 2;\n
                *(&v13) = *(&v31);\n
                *(&v2) = *(&v13);\n
                a0 = &v25;\n
                v4 = v23;\n
                sub_402af0();\n
                v7 = v24;\n
                v2 = &v25;\n
                v19 = v7 - sub_402120(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_4028f0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_4028f0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v12 = &v25; *(v12); v12 += 1)\n
                {\n
                    v2 = *(v12);\n
                    sub_4028f0(*(v12));\n
                    v26 += 1;\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (!(*(v3) == 115))\n
                goto LABEL_403726;\n
            v32 = a0;\n
            a0 = v32 + 1;\n
            v11 = &*(v32)->field_0;\n
            if (v23 > 0)\n
            {\n
                v6 = v23;\n
                v2 = v11;\n
                if (v6 < sub_402120(v11))\n
                {\n
                    v10 = v23;\n
                    goto LABEL_4035aa;\n
                }\n
            }\n
            v2 = v11;\n
            v10 = sub_402120(v11);\n
LABEL_4035aa:\n
            v19 = v24 - v10;\n
            if (!v21)\n
            {\n
                for (v20 = 0; v20 < v19; v20 += 1)\n
                {\n
                    if (!v22)\n
                    {\n
                        v2 = 32;\n
                        sub_4028f0(32);\n
                    }\n
                    else\n
                    {\n
                        v2 = 48;\n
                        sub_4028f0(48);\n
                    }\n
                    v26 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v5 = 0;\n
                if (*(v11))\n
                    v5 = !(v10 <= 0);\n
                if (!(v5 & 1))\n
                    break;\n
                v2 = *(v11);\n
                sub_4028f0(*(v11));\n
                v26 += 1;\n
                v11 += 1;\n
                v10 -= 1;\n
            }\n
            if (v21)\n
            {\n
                for (v20 = 0; v20 < v19; v20 += 1)\n
                {\n
                    v2 = 32;\n
                    sub_4028f0(32);\n
                    v26 += 1;\n
                }\n
            }\n
            v3 = v3 + 1;\n
        }\n
    }\n
    v27 = v26;\n
    return v27;\n
}\n
", "4208452:sub_403744": null, "4208464:sub_403750": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403750(struct_0 *v3, struct_0 *a0, struct struct_0 **a1)\n
{\n
    struct_0 *<0x403750[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct_0 *v2;  // [bp+0x0]\n
    char v4;  // [bp+0x13]\n
    struct struct_0 **v5;  // [bp+0x14]\n
    unsigned int v6;  // [bp+0x18]\n
    unsigned int v7;  // [bp+0x1c]\n
    unsigned int v8;  // [bp+0x20]\n
    struct struct_0 **v9;  // [bp+0x24], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp+0x28], Other Possible Types: unsigned int\n
    struct_0 *v11;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct_0 *v12;  // [bp+0x30]\n
    struct_0 *v13;  // [bp+0x3c], Other Possible Types: unsigned int\n
    struct_0 *v14;  // [bp+0x40]\n
    struct_0 *v15;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct_0 *v16;  // [bp+0x48]\n
    char v17;  // [bp+0x4f]\n
    void* v18;  // [bp+0x50], Other Possible Types: unsigned int\n
    void* v19;  // [bp+0x54], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp+0x58]\n
    void* v21;  // [bp+0x5c], Other Possible Types: unsigned int\n
    struct struct_0 **v22;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v23;  // [bp+0x64], Other Possible Types: unsigned int\n
    char v24;  // [bp+0x68]\n
    unsigned int v25;  // [bp+0xa8], Other Possible Types: char\n
    struct_0 *v26;  // [bp+0xac], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
\n
    v1 = &<0x403750[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (a0->field_0)\n
    {\n
        if (a0->field_0 != 64)\n
        {\n
            v3[*(&v25)].field_0 = a0->field_0;\n
            a0 += 1;\n
            v25 = *(&v25) + 1;\n
LABEL_40403f:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (a0->field_0 == 64)\n
            {\n
                v3[*(&v25)].field_0 = 64;\n
                a0 += 1;\n
                v25 = *(&v25) + 1;\n
                continue;\n
            }\n
            if (a0->field_0 == 45)\n
            {\n
                v20 = 1;\n
                a0 += 1;\n
            }\n
            v2 = *(a0);\n
            if (sub_4018c0(*(a0)))\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v21 = 1;\n
                    a0 += 1;\n
                }\n
                v2 = *(a0);\n
                if (sub_4018c0(*(a0)))\n
                {\n
                    v2 = a0;\n
                    v23 = sub_401c20(a0);\n
                    while (true)\n
                    {\n
                        v2 = *(a0);\n
                        if (!sub_4018c0(*(a0)))\n
                            break;\n
                        a0 += 1;\n
                    }\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                v2 = a0;\n
                v22 = sub_401c20(a0);\n
                while (true)\n
                {\n
                    v2 = *(a0);\n
                    if (!sub_4018c0(*(a0)))\n
                        break;\n
                    a0 += 1;\n
                }\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v17 = *(v27);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                v3[*(&v25)].field_0 = v17;\n
                v25 = *(&v25) + 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v16 = *(v28);\n
                v2 = v16;\n
                v3 = &v24;\n
                sub_402940(v3, a0);\n
                v8 = v23;\n
                v2 = &v24;\n
                v18 = v8 - sub_402120(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v15);\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v14 = *(v29);\n
                v2 = v14;\n
                v3 = &v24;\n
                sub_402a20(v3, a0);\n
                v7 = v23;\n
                v2 = &v24;\n
                v18 = v7 - sub_402120(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v13);\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                v30 = a1;\n
                a1 = v30 + 2;\n
                *(&v12) = *(&v30);\n
                *(&v2) = *(&v12);\n
                a0 = &v24;\n
                a1 = v22;\n
                sub_402af0();\n
                v6 = v23;\n
                v2 = &v24;\n
                v18 = v6 - sub_402120(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v11 = &v24; *(v11); v11 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v11);\n
                    v25 = *(&v25) + 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40403f;\n
            v31 = a1;\n
            a1 = v31 + 1;\n
            v10 = *(v31);\n
            if (v22 > 0)\n
            {\n
                v5 = v22;\n
                v2 = v10;\n
                if (v5 < sub_402120(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_403eb5;\n
                }\n
            }\n
            v2 = v10;\n
            v9 = sub_402120(v10);\n
LABEL_403eb5:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (v21)\n
                        v3[*(&v25)].field_0 = 48;\n
                    else\n
                        v3[*(&v25)].field_0 = 32;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v4 = 0;\n
                if (*(v10))\n
                    v4 = !(v9 <= 0);\n
                if (!(v4 & 1))\n
                    break;\n
                v3[*(&v25)].field_0 = *(v10);\n
                v25 = *(&v25) + 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = 32;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4210781:sub_40405d": null, "4210784:sub_404060": "int sub_404060()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* **v1;  // [bp-0x8]\n
    void* **v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0x1010]\n
    unsigned int v5;  // ebp\n
\n
    sub_4059a0();\n
    v1 = &v3;\n
    v0 = sub_402e70(v2, v1);\n
    v5 = *(&v4);\n
    return;\n
}\n
", "4210838:sub_404096": null, "4210848:sub_4040a0": "int sub_4040a0(void* v5, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v1 = &v6;\n
    v0 = sub_403750(v5, a0, v1);\n
    v8 = v2;\n
    return v0;\n
}\n
", "4210912:sub_4040e0": "int sub_4040e0()\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v0 = sub_401050(328);\n
    if (!v0)\n
    {\n
        cgc__terminate();\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4210970:sub_40411a": null, "4210976:sub_404120": "int sub_404120(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401380(v2);\n
}\n
", "4210999:sub_404137": null, "4211008:sub_404140": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
    unsigned int field_144;\n
} struct_1;\n
\n
int sub_404140(struct_1 *v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v1[0] = sub_401050(12);\n
    v0 = sub_401050(188);\n
    if (v0 && !(!v1))\n
        goto LABEL_40418e;\n
    cgc__terminate();\n
LABEL_40418e:\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v2 = v6->field_140;\n
    v3 = v2;\n
    if (!v2)\n
    {\n
        v6->field_140 = &v1[0];\n
        v1[0] = 0;\n
        v6->field_144 = 1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        v3 = v2;\n
        v2 = v2->field_8;\n
    }\n
}\n
", "4211250:sub_404232": null, "4211264:sub_404240": "int sub_404240(unsigned int v7, unsigned int a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = *((v7 + 320));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = v2 != a0;\n
        if (!(v0 & 1))\n
            break;\n
        v2 = *((v2 + 8));\n
    }\n
    if (!v2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (*(a0))\n
    {\n
        *((*(a0) + 8)) = *((a0 + 8));\n
        v3 = *(a0);\n
    }\n
    if (*((a0 + 8)))\n
        *(*((a0 + 8))) = *(a0);\n
    if (a0 == *((v7 + 320)))\n
        *((v7 + 320)) = *((*((v7 + 320)) + 8));\n
    sub_401380(*((a0 + 4)));\n
    sub_401380(a0);\n
    v4 = v3;\n
    return v4;\n
}\n
", "4211526:sub_404346": null, "4211536:sub_404350": "int sub_404350(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4040e0();\n
    sub_404740(v0, v0, 0);\n
    sub_404120(v0);\n
    return 1;\n
}\n
", "4211600:sub_404390": "int sub_404390(char v3[64])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_401f30(v3, 64);\n
    v0 = sub_402220(v3, 10, 64);\n
    if (v0 < 64)\n
        v3[v0] = 0;\n
    v3[63] = 0;\n
    return v0;\n
}\n
", "4211693:sub_4043ed": null, "4211696:sub_4043f0": "int sub_4043f0(char v3[32])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_401f30(v3, 32);\n
    v0 = sub_402220(v3, 10, 32);\n
    if (v0 < 32)\n
        v3[v0] = 0;\n
    v3[31] = 0;\n
    return v0;\n
}\n
", "4211789:sub_40444d": null, "4211792:sub_404450": "int sub_404450()\n
{\n
    char v0;  // [bp-0x6]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_402220(&v0, 10, 2);\n
    if (sub_4017e0(v0))\n
    {\n
        v0 -= 32;\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4211865:sub_404499": null, "4211872:sub_4044a0": "int sub_4044a0()\n
{\n
    char *v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    char v3;  // [bp-0x23]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    sub_401fa0(&v2, 0, 32);\n
    v1 = 0;\n
    v0 = sub_402220(&v2, 10, 10);\n
    *((&v3 + v0)) = 0;\n
    v1 = sub_401c20(&v2);\n
    if (!v0)\n
    {\n
        v1 = -999999;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4211991:sub_404517": null, "4212000:sub_404520": "int sub_404520()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = sub_4044a0();\n
    if (v0 == -999999)\n
    {\n
        v1 = -999999;\n
        return v1;\n
    }\n
    if (v0 < 0)\n
        v0 = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4212070:sub_404566": null, "4212080:sub_404570": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_4080cc;\n
\n
int sub_404570(unsigned int v14[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x58]\n
    void* v2;  // [bp-0x54], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    struct_0 *v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15[6];  // eax, Other Possible Types: unsigned int\n
    unsigned int v16;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v20;  // eax\n
\n
    v12 = &v13;\n
    v11 = 3600;\n
    v10 = 86400;\n
    v9 = 31536000;\n
    v8 = 0x1e28500;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    if (a0 < 0)\n
    {\n
        v15 = v14;\n
        v15[0] = 0;\n
        return v14;\n
    }\n
    for (v6 = a0; v6 >= 0; v5 += 1)\n
    {\n
        v7 = v6;\n
        if ((v5 >> 31 CONCAT v5) /m 4 >> 32)\n
            v6 = v7 - 31536000;\n
        else\n
            v6 = v7 - 0x1e28500;\n
    }\n
    v5 -= 1;\n
    v14[2] = v5 + 1970;\n
    v0 = 48;\n
    memcpy(&v3, &g_4080cc);\n
    v6 = v7;\n
    if (!(v5 >> 31 CONCAT v5) /m 4 >> 32)\n
        v4 = 28;\n
    v5 = 0;\n
    for (v2 = 0; v6 >= 0; v5 += 1)\n
    {\n
        v7 = v6;\n
        v2 = (&v3)[v5] * 86400;\n
        v6 = v7 - v2;\n
    }\n
    v14[0] = v5;\n
    v16 = v7;\n
    v1 = (v16 >> 31 CONCAT v16) /m 86400 + 1;\n
    v14[1] = v1;\n
    v7 -= (v14[1] - 1) * 86400;\n
    v18 = v7;\n
    v14[3] = (v18 >> 31 CONCAT v18) /m 3600;\n
    v7 -= v14[3] * 3600;\n
    v20 = v7;\n
    v14[4] = (v20 >> 31 CONCAT v20) /m 60;\n
    v15 = v14;\n
    *((v15 + 20)) = v7 - v14[4] * 60;\n
    return v14;\n
}\n
", "4212537:sub_404739": null, "4212544:sub_404740": "extern unsigned int g_4080fc;\n
\n
int sub_404740(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 1;\n
    while (v1 == 1)\n
    {\n
        sub_402480(&g_4080fc);\n
        sub_402480(\"C - Change Diver Info\");\n
        sub_402480(\"L - Log a New Dive\");\n
        sub_402480(\"D - Download Dive Data\");\n
        sub_402480(\"E - Edit Dives\");\n
        sub_402480(\"P - Print Dive Logs\");\n
        sub_402480(\"R - Remove Dives\");\n
        sub_402480(\"S - Diver Statistics\");\n
        sub_402480(\"X - Exit Application\");\n
        sub_404060();\n
        v1 = sub_404450();\n
        v0 = v1 - 67;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_4048b0();\n
            v1 = 1;\n
            break;\n
        case 1:\n
            sub_404a60();\n
            v1 = 1;\n
            break;\n
        case 2:\n
            sub_404ca0();\n
            v1 = 1;\n
            break;\n
        case 9:\n
            sub_404a10();\n
            v1 = 1;\n
            break;\n
        case 13:\n
            sub_404d00();\n
            v1 = 1;\n
            break;\n
        case 15:\n
            sub_404d50();\n
            v1 = 1;\n
            break;\n
        case 16:\n
            sub_404da0();\n
            v1 = 1;\n
            break;\n
        case 21:\n
            sub_404120(v4);\n
            break;\n
        default:\n
            v1 = 1;\n
            break;\n
        }\n
    }\n
    return v1;\n
}\n
", "4212909:sub_4048ad": null, "4212912:sub_4048b0": "extern unsigned int g_4080fc;\n
\n
int sub_4048b0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_402480(&g_4080fc);\n
    v1 = 20;\n
    sub_404eb0(\"First Name\", v4);\n
    v1 = 20;\n
    sub_404eb0(\"Last Name\", v4 + 32);\n
    v1 = 29;\n
    sub_404eb0(\"Street\", v4 + 64);\n
    v1 = 19;\n
    sub_404eb0(\"City\", v4 + 128);\n
    v1 = 2;\n
    sub_404eb0(\"State\", v4 + 160);\n
    v1 = 10;\n
    sub_404eb0(\"Zip Code\", v4 + 192);\n
    v1 = 15;\n
    sub_404eb0(\"Phone Number\", v4 + 224);\n
    v1 = 19;\n
    sub_404eb0(\"PADI Diver Number\", v4 + 0x100);\n
    v0 = v4 + 288;\n
    v1 = 10;\n
    sub_404eb0(\"PADI Cert Date\", v0);\n
    sub_405220(v4 + 288, v0);\n
    return sub_404fd0();\n
}\n
", "4213264:sub_404a10": "typedef struct struct_0 {\n
    char padding_0[324];\n
    unsigned int field_144;\n
} struct_0;\n
\n
extern unsigned int g_4080fc;\n
\n
int sub_404a10(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    sub_402480(&g_4080fc);\n
    v4 = v3;\n
    if (v4->field_144 < 128)\n
    {\n
        v0 = sub_404140(v3);\n
        v4 = sub_405480();\n
        return v4;\n
    }\n
    return v3;\n
}\n
", "4213336:sub_404a58": null, "4213344:sub_404a60": "typedef struct struct_0 {\n
    char padding_0[324];\n
    unsigned int field_144;\n
} struct_0;\n
\n
extern unsigned int g_4080fc;\n
\n
int sub_404a60(struct_0 *v20)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    char v3;  // [bp-0x49]\n
    unsigned int v4[6];  // [bp-0x48]\n
    char v5;  // [bp-0x40]\n
    char v6;  // [bp-0x3c]\n
    char v7;  // [bp-0x38]\n
    char v8;  // [bp-0x34]\n
    void* v9;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x1c]\n
    void* v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v17[47];  // [bp-0x10]\n
    unsigned int v18;  // [bp-0x4]\n
    char v19;  // [bp+0x0]\n
    struct_0 *v21;  // eax, Other Possible Types: unsigned int\n
\n
    v18 = &v19;\n
    v21 = v20;\n
    if (v21->field_144 >= 128)\n
        return v20;\n
    v17[0] = sub_404140(v20);\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    memset(v4, 0);\n
    sub_402480(&g_4080fc);\n
    v16 = sub_4057a0();\n
    v15 = sub_4057a0();\n
    v12 = v16;\n
    v11 = v16;\n
    v13 = v15;\n
    v10 = v15;\n
    v9 = 1;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (v16)\n
            v3 = v9 < 100000;\n
        if (!(v3 & 1))\n
            break;\n
        v16 = sub_4057a0();\n
        if (v16)\n
        {\n
            v15 = sub_4057a0();\n
            if (v15 > 3000)\n
                v15 = 3000;\n
            v9 += 1;\n
            v10 = v15 + v10;\n
            if (v16 < v12)\n
                v12 = v16;\n
            if (v16 > v11)\n
                v11 = v16;\n
            if (v15 > v13)\n
                v13 = v15;\n
        }\n
    }\n
    sub_404570(v4, v12);\n
    v17[40] = v13;\n
    v17[42] = (0 CONCAT v11 - v12) /m 60;\n
    v17[41] = (0 CONCAT v10) /m v9;\n
    v17[46] = v9;\n
    v2 = *(&v5);\n
    sub_4040a0(&v17[16], \"@d/@d/@d\");\n
    v0 = *(&v6);\n
    v1 = *(&v7);\n
    v2 = *(&v8);\n
    sub_4040a0(&v17[24], \"@02d:@02d:@02d\");\n
    v21 = sub_405480(v17, \"@02d:@02d:@02d\", v0, v1);\n
    return v21;\n
}\n
", "4213906:sub_404c92": null, "4213920:sub_404ca0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_4080fc;\n
\n
int sub_404ca0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = \"\\n
Enter Dive # to edit: \";\n
    v6 = sub_405810(v5);\n
    v2 = v6;\n
    if (v2)\n
    {\n
        v1 = v2->field_4;\n
        sub_402480(&g_4080fc);\n
        v6 = sub_405480();\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4214002:sub_404cf2": null, "4214016:sub_404d00": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404d00(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = \"\\n
Enter Dive # to display: \";\n
    v6 = sub_405810(v5);\n
    v2 = v6;\n
    if (v2)\n
    {\n
        v1 = v2->field_4;\n
        v6 = sub_4050d0();\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4214084:sub_404d44": null, "4214096:sub_404d50": "int sub_404d50(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v5 = sub_405810(v4);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v5 = sub_404240(v4, v1);\n
        v0 = v5;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4214165:sub_404d95": null, "4214176:sub_404da0": "typedef struct struct_2 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[160];\n
    unsigned int field_a0;\n
    char padding_a4[4];\n
    unsigned int field_a8;\n
} struct_1;\n
\n
extern unsigned int g_4080fc;\n
\n
int sub_404da0(struct_2 *v8)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4[43];  // [bp-0xc]\n
    struct_0 *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v12;  // eax\n
\n
    v6 = &v7;\n
    sub_402480(&g_4080fc);\n
    v5 = v8->field_140;\n
    v4[0] = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v9 = sub_404060();\n
        return v9;\n
    }\n
    for (v1 = 0; v5; v5 = *((v5 + 8)))\n
    {\n
        v4[0] = *((v5 + 4));\n
        v3 += 1;\n
        v2 += v4[40];\n
        v1 += v4[42];\n
    }\n
    v10 = v2;\n
    v2 = (v10 >> 31 CONCAT v10) /m v3;\n
    v12 = v1;\n
    v1 = (v12 >> 31 CONCAT v12) /m v3;\n
    v0 = v3;\n
    sub_404060(\"\\n
Dives logged: @d\\n
\");\n
    v0 = v2;\n
    sub_404060(\"Average Max Depth: @d\\n
\");\n
    v0 = v1;\n
    v9 = sub_404060(\"Average Dive Length: @d\\n
\");\n
    return v9;\n
}\n
", "4214433:sub_404ea1": null, "4214448:sub_404eb0": "extern char g_4080fc;\n
\n
int sub_404eb0(unsigned int v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned int v1;  // [bp-0x48]\n
    char v2[64];  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    if (sub_401ff0(a0, &g_4080fc))\n
    {\n
        v0 = a0;\n
        sub_404060(\"@s (@s): \", v5);\n
    }\n
    else\n
    {\n
        sub_404060(\"@s: \");\n
    }\n
    v6 = sub_404390(v2);\n
    v1 = v6;\n
    if (v1 > 0)\n
    {\n
        *((v2 + a1)) = 0;\n
        v6 = sub_401e30(a0, v2);\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4214602:sub_404f4a": null, "4214608:sub_404f50": "int sub_404f50(unsigned int v4, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (*(a0))\n
    {\n
        v0 = *(a0);\n
        sub_404060(\"@s (@d): \", v4);\n
    }\n
    else\n
    {\n
        sub_404060(\"@s: \");\n
    }\n
    v5 = sub_4044a0();\n
    v1 = v5;\n
    if (v1 != -999999)\n
    {\n
        v5 = a0;\n
        *(v5) = v1;\n
        return a0;\n
    }\n
    return v5;\n
}\n
", "4214729:sub_404fc9": null, "4214736:sub_404fd0": "extern unsigned int g_4080fc;\n
\n
int sub_404fd0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_402480(&g_4080fc);\n
    v0 = v3 + 32;\n
    sub_404060(\"     Name: @s @s\\n
\", v3);\n
    sub_404060(\"  Address: @s\\n
\");\n
    sub_404060(\"     City: @s\\n
\");\n
    sub_404060(\"    State: @s\\n
\");\n
    sub_404060(\" Zip Code: @s\\n
\");\n
    sub_404060(\"    Phone: @s\\n
\");\n
    sub_404060(\" PADI Num: @s\\n
\");\n
    sub_404060(\"Cert Date: @s\\n
\");\n
    return sub_402480(&g_4080fc);\n
}\n
", "4214989:sub_4050cd": null, "4214992:sub_4050d0": "typedef struct struct_0 {\n
    char padding_0[168];\n
    struct struct_0 *field_a8;\n
    char padding_ac[12];\n
    unsigned int field_b8;\n
} struct_0;\n
\n
extern unsigned int g_4080fc;\n
\n
int sub_4050d0(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_402480(&g_4080fc);\n
    v0 = &v3->padding_0[64];\n
    sub_404060(\"          Date: @s\\n
\");\n
    v0 = &v3->padding_0[96];\n
    sub_404060(\"          Time: @s\\n
\");\n
    v0 = v3;\n
    sub_404060(\"     Dive Site: @s\\n
\");\n
    v0 = &v3->padding_0[128];\n
    sub_404060(\"      Location: @s\\n
\");\n
    v0 = *(&v3->padding_0[160]);\n
    sub_404060(\"     Max Depth: @d\\n
\");\n
    v0 = *(&v3->padding_0[164]);\n
    sub_404060(\"     Avg Depth: @d\\n
\");\n
    v0 = v3->field_a8;\n
    sub_404060(\"      Duration: @d\\n
\");\n
    v0 = *(&v3->padding_ac[0]);\n
    sub_404060(\"    O2 Percent: @d\\n
\");\n
    v0 = *(&v3->padding_ac[4]);\n
    sub_404060(\"Start Pressure: @d\\n
\");\n
    v0 = *(&v3->padding_ac[8]);\n
    sub_404060(\"  End Pressure: @d\\n
\");\n
    v0 = v3->field_b8;\n
    sub_404060(\"     Bin Count: @d\\n
\");\n
    return sub_402480(&g_4080fc);\n
}\n
", "4215318:sub_405216": null, "4215328:sub_405220": "int sub_405220(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x3c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x38], Other Possible Types: unsigned int, char *\n
    void* v8;  // [bp-0x34], Other Possible Types: char *\n
    void* v9;  // [bp-0x30], Other Possible Types: unsigned int, char *\n
    char v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
\n
    v11 = &v12;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    sub_401f30(&v10, 32);\n
    v8 = v13;\n
    if (v8)\n
    {\n
        v9 = sub_4024e0(v8, 47);\n
        if (v9)\n
        {\n
            v9 += 1;\n
            v7 = sub_4024e0(v9, 47);\n
            if (v7)\n
            {\n
                v7 += 1;\n
                v5 = sub_401c20(v8);\n
                v6 = sub_401c20(v9);\n
                v4 = sub_401c20(v7);\n
            }\n
        }\n
    }\n
    if (v4 >= 1900 && v4 <= 2100 && v5 >= 1 && v5 <= 12)\n
    {\n
        if (v5 == 2)\n
        {\n
            if (!(v4 & 3) && v4 != 1900)\n
            {\n
                if (v6 >= 1 && v6 <= 29)\n
                    v3 = 1;\n
                goto LABEL_405394;\n
            }\n
            if (v6 >= 1 && v6 <= 28)\n
                v3 = 1;\n
LABEL_405394:\n
        }\n
        else if (v5 == 4)\n
        {\n
LABEL_4053c6:\n
            if (v6 >= 1 && v6 <= 30)\n
                v3 = 1;\n
        }\n
        else\n
        {\n
            if (v5 == 6)\n
                goto LABEL_4053c6;\n
            if (v5 == 9)\n
                goto LABEL_4053c6;\n
            if (v5 == 11)\n
                goto LABEL_4053c6;\n
            if (v6 >= 1 && v6 <= 31)\n
                v3 = 1;\n
        }\n
    }\n
    if (v3 != 1)\n
    {\n
        sub_4040a0(&v10, \"1/1/1900\");\n
        return sub_401e30(v13, &v10);\n
    }\n
    v0 = v5;\n
    v1 = v6;\n
    v2 = v4;\n
    sub_4040a0(&v10, \"@d/@d/@d\");\n
    return sub_401e30(v13, &v10);\n
}\n
", "4215932:sub_40547c": null, "4215936:sub_405480": "int sub_405480(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404eb0(\"Dive Site\", v2, 25);\n
    sub_404eb0(\"Date\", v2 + 64, 10);\n
    sub_404eb0(\"Time\", v2 + 96, 32);\n
    sub_404eb0(\"Location (area/city)\", v2 + 128, 25);\n
    sub_404f50(\"Max Depth in ft\", v2 + 160);\n
    sub_404f50(\"Avg Depth in ft\", v2 + 164);\n
    sub_404f50(\"Dive Duration (mins)\", v2 + 168);\n
    sub_404f50(\"O2 Percentage\", v2 + 172);\n
    sub_404f50(\"Pressure In (psi)\", v2 + 176);\n
    sub_404f50(\"Pressure Out (psi)\", v2 + 180);\n
    return sub_405770(v2);\n
}\n
", "4216244:sub_4055b4": null, "4216256:sub_4055c0": "int sub_4055c0(unsigned int v12)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    void* v2;  // [bp-0x38], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x28], Other Possible Types: unsigned int, void*\n
    char *v7;  // [bp-0x24], Other Possible Types: void*, unsigned int\n
    void* v8;  // [bp-0x20], Other Possible Types: char *\n
    char v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v8 = v12;\n
    if (v8)\n
    {\n
        v7 = sub_4024e0(v8, 58);\n
        if (v7)\n
        {\n
            v7 += 1;\n
            v6 = sub_4024e0(v7, 58);\n
            if (v6)\n
            {\n
                v6 += 1;\n
                v5 = sub_401c20(v8);\n
                v4 = sub_401c20(v7);\n
                v3 = sub_401c20(v6);\n
            }\n
        }\n
    }\n
    if (v5 >= 0 && v5 <= 23 && v4 >= 0 && v4 <= 59 && v3 >= 0 && v3 <= 59)\n
        v2 = 1;\n
    sub_401f30(&v9, 16);\n
    if (v2 != 1)\n
    {\n
        sub_4040a0(&v9, \"00:00:00\");\n
        return sub_401e90(v12, &v9, 16);\n
    }\n
    v0 = v4;\n
    v1 = v3;\n
    sub_4040a0(&v9, \"@02d:@02d:@02d\");\n
    return sub_401e90(v12, &v9, 16);\n
}\n
", "4216673:sub_405761": null, "4216688:sub_405770": "int sub_405770(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405220(v2 + 64);\n
    return sub_4055c0(v2 + 96);\n
}\n
", "4216728:sub_405798": null, "4216736:sub_4057a0": "int sub_4057a0()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = cgc_receive(0, &v1, 4, &v2, 0, 0, 0);\n
    if (!v0 && v2)\n
        return v1;\n
    cgc__terminate();\n
    return v1;\n
}\n
", "4216842:sub_40580a": null, "4216848:sub_405810": "typedef struct struct_1 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int sub_405810(struct_1 *v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x224]\n
    char v1;  // [bp-0x21d]\n
    void* v2;  // [bp-0x21c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x218]\n
    struct struct_0 **v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v6 = v10->field_140;\n
    v5 = 0;\n
    v4 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        sub_404060();\n
        v7 = 0;\n
        return v7;\n
    }\n
    sub_404060();\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = v4 < 128;\n
        if (!(v1 & 1))\n
            break;\n
        v5 = v6->field_4;\n
        *((&v3 + 0x4 * v4)) = v6;\n
        v4 = v4 + 1;\n
        v0 = v5 + 96;\n
        sub_404060(\"@4d: @-10s @-8s\", v4, v5 + 64);\n
        sub_404060(\" @-25s @-25s\\n
\", v5);\n
        v6 = v6->field_8;\n
    }\n
    sub_404060(\"@s\");\n
    v2 = sub_404520();\n
    if (v2 >= 1 && v2 <= v4)\n
    {\n
        v6 = *(&(&v3)[4 + 4 * v2]);\n
        goto LABEL_40598b;\n
    }\n
    sub_404060();\n
    v6 = 0;\n
LABEL_40598b:\n
    v7 = v6;\n
    return v7;\n
}\n
", "4217248:sub_4059a0": "int sub_4059a0()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4217296:sub_4059d0": "int sub_4059d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_405af0();\n
    sub_405b00();\n
    sub_405b20();\n
    v0 = 1;\n
    if (!sub_4060f0())\n
    {\n
        v0 = 7;\n
        sub_4067d0();\n
    }\n
    sub_4069a0();\n
    v1 = sub_4069d0;\n
    sub_405dc0();\n
    if (sub_405ac0())\n
    {\n
        v1 = 7;\n
        sub_4067d0();\n
    }\n
    sub_406560();\n
    if (sub_406660())\n
    {\n
        v1 = sub_406500;\n
        __setusermatherr();\n
    }\n
    sub_4065e0();\n
    sub_4065f0();\n
    sub_4065b0();\n
    v1 = sub_406550();\n
    _configthreadlocale();\n
    if (sub_4065a0())\n
        sub_405ae0();\n
    sub_406790();\n
    if (sub_4067a0())\n
    {\n
        v1 = 7;\n
        sub_4067d0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4217488:sub_405a90": "int sub_405a90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406600();\n
    return 0;\n
}\n
", "4217504:sub_405aa0": "int sub_405aa0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4067b0();\n
    v0 = sub_406540();\n
    return _set_new_mode();\n
}\n
", "4217536:sub_405ac0": "int sub_405ac0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_406510());\n
}\n
", "4217568:sub_405ae0": "int sub_405ae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4217584:sub_405af0": "int sub_405af0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4217600:sub_405b00": "int sub_405b00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_406530());\n
}\n
", "4217632:sub_405b20": "int sub_405b20()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_406520(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4217664:sub_405b40": "int sub_405b40()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_404350(v1, v2);\n
}\n
", "4217728:sub_405b80": "extern char g_408778;\n
extern char g_408780;\n
extern char g_408784;\n
extern struct_0 *g_408790;\n
extern char g_408e48;\n
extern unsigned int g_409040;\n
extern unsigned int g_4090ac;\n
\n
int sub_405b80()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_408e48;\n
    v13 = sub_406a00;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_409040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_406060(1, g_409040 ^ &v16, v22, v23))\n
        sub_4067d0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_405fe0();\n
    if (g_4090ac == 1)\n
    {\n
        v16 = 7;\n
        sub_4067d0();\n
    }\n
    else if (g_4090ac)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4090ac = 1;\n
        v16 = &g_408790;\n
        v15 = &g_408784;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_405d89;\n
        }\n
        else\n
        {\n
            v16 = &g_408780;\n
            v15 = &g_408778;\n
            _initterm(*(&v17));\n
            g_4090ac = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_406030();\n
    v8 = sub_406690();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_405eb0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_406a40(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_4066a0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_405eb0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_405b40();\n
    if (!sub_406700())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_4060b0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_405d89:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4218143:sub_405d1f": "int sub_405d1f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4218152:sub_405d28": "int sub_405d28()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4218179:sub_405d43": "extern char g_405d51;\n
\n
int sub_405d43()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_405d51;\n
    if (!sub_406700())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4218242:sub_405d82": "int sub_405d82()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4218272:sub_405da0": "int sub_405da0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406410();\n
    return sub_405b80();\n
}\n
", "4218288:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405da0();\n
}\n
", "4218304:sub_405dc0": "int sub_405dc0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_405df0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4218352:sub_405df0": "extern unsigned int g_4090b8;\n
\n
int sub_405df0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4090b8;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4090b8))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4218408:sub_405e28": "int sub_405e28()\n
{\n
}\n
", "4218464:sub_405e60": "extern unsigned int g_4090c4;\n
\n
int sub_405e60(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4090c4;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4090c4);\n
    return v6;\n
}\n
", "4218498:sub_405e82": "int sub_405e82()\n
{\n
}\n
", "4218528:sub_405ea0": "int sub_405ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4218544:sub_405eb0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_408e68;\n
extern unsigned int g_409040;\n
\n
int sub_405eb0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_408e68;\n
    v13 = sub_406a00;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_409040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_406310(v6, g_409040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_406380(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4218749:sub_405f7d": "int sub_405f7d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4218758:sub_405f86": "int sub_405f86()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4218797:sub_405fad": "int sub_405fad()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4218816:sub_405fc0": "int sub_405fc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4218848:sub_405fe0": "extern unsigned int g_4090b0;\n
\n
int sub_405fe0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_407220();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_405ea0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4090b0 = v6;\n
        if (!g_4090b0)\n
        {\n
            tmp_0 = 0;\n
            g_4090b0 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4090b0 = v6;\n
            v5 = g_4090b0;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4218928:sub_406030": "extern void* g_4090b0;\n
\n
int sub_406030(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407220();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4090b0;\n
        g_4090b0 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40604f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4218976:sub_406060": "extern char g_4090b4;\n
\n
int sub_406060(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4090b4 = 1;\n
    sub_406d90();\n
    v4 = sub_4075c0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_4075c0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_4075d0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4219056:sub_4060b0": "extern char g_4090b4;\n
\n
int sub_4060b0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4090b4 && a0)\n
        return 1;\n
    sub_4075d0(v2);\n
    v3 = sub_4075d0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4219120:sub_4060f0": "extern char g_4090b5;\n
extern unsigned int g_4090b8;\n
extern unsigned int g_4090bc;\n
extern unsigned int g_4090c0;\n
extern unsigned int g_4090c4;\n
extern unsigned int g_4090c8;\n
extern unsigned int g_4090cc;\n
\n
int sub_4060f0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4090b5)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_4067d0();\n
    }\n
    if (sub_407220() && !v10)\n
    {\n
        v8 = &g_4090b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4090c4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_4061b6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4090b8 = v4;\n
    g_4090bc = v5;\n
    g_4090c0 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4090c4 = v1;\n
    g_4090c8 = v2;\n
    v11 = v3;\n
    g_4090cc = v11;\n
LABEL_4061b6:\n
    g_4090b5 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4219344:sub_4061d0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4061d0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_407220() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_406a40(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4219424:sub_406220": "int sub_406220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4060f0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4219456:sub_406240": "int sub_406240()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_407220())\n
    {\n
        v3 = sub_406d90();\n
    }\n
    else\n
    {\n
        v3 = sub_405ac0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_405ae0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4219504:sub_406270": "extern char g_4090b8;\n
\n
int sub_406270()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_407220())\n
    {\n
        v0 = &g_4090b8;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_407610();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4219552:sub_4062a0": "int sub_4062a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4075e0(0);\n
    return sub_4075e0();\n
}\n
", "4219584:sub_4062c0": "int sub_4062c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_4075f0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_4075f0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_407600();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4219632:sub_4062f0": "char sub_4062f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407600();\n
    sub_407600();\n
    return 1;\n
}\n
", "4219664:sub_406310": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406310(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4219776:sub_406380": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406380(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4219920:sub_406410": "extern unsigned int g_409040;\n
extern unsigned int g_409080;\n
\n
int sub_406410()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_409040 != 3141592654)\n
    {\n
        v4 = g_409040 & -0x10000;\n
        if (v4)\n
        {\n
            g_409080 = ~(g_409040);\n
            return g_409040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_406490(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_409040 = v0;\n
    g_409080 = ~(v0);\n
    return v4;\n
}\n
", "4220048:sub_406490": "int sub_406490()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4220160:sub_406500": "int sub_406500()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4220176:sub_406510": "int sub_406510()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4220192:sub_406520": "int sub_406520()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4220208:sub_406530": "int sub_406530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4220224:sub_406540": "int sub_406540()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4220240:sub_406550": "int sub_406550()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4220256:sub_406560": "extern void g_4090d0;\n
\n
int sub_406560()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4090d0);\n
}\n
", "4220288:sub_406580": "extern unsigned int g_4090d0;\n
\n
int sub_406580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4090d0);\n
}\n
", "4220320:sub_4065a0": "char sub_4065a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4220336:sub_4065b0": "int sub_4065b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_4067d0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220384:sub_4065e0": "int sub_4065e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4220400:sub_4065f0": "int sub_4065f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4220416:sub_406600": "int sub_406600()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_406640();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_406650(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4220480:sub_406640": "extern char g_4090d8;\n
\n
int sub_406640()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090d8;\n
}\n
", "4220496:sub_406650": "extern char g_4090e0;\n
\n
int sub_406650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090e0;\n
}\n
", "4220512:sub_406660": "extern unsigned int g_409008;\n
\n
int sub_406660()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_409008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4220560:sub_406690": "extern char g_4090ec;\n
\n
int sub_406690()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090ec;\n
}\n
", "4220576:sub_4066a0": "extern char g_4090f0;\n
\n
int sub_4066a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090f0;\n
}\n
", "4220592:sub_4066b0": "extern void* g_4090f4;\n
\n
int sub_4066b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4090f4 = 0;\n
    return v3;\n
}\n
", "4220608:sub_4066c0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4066c0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4220672:sub_406700": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_406700()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4220816:sub_406790": "int sub_406790()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4220832:sub_4067a0": "int sub_4067a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406910();\n
}\n
", "4220848:sub_4067b0": "int sub_4067b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_406920);\n
}\n
", "4220880:sub_4067d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4067d0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_4066b0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_4066b0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4220905:sub_4067e9": "int sub_4067e9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220905\n
}\n
", "4221200:sub_406910": "int sub_406910()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4221216:sub_406920": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_406920(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4221344:sub_4069a0": "extern struct_0 *g_408e38;\n
\n
int sub_4069a0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_408e38;\n
    v3 = &g_408e38;\n
    return &g_408e38;\n
}\n
", "4221392:sub_4069d0": "extern struct_0 *g_408e40;\n
\n
int sub_4069d0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_408e40;\n
    v3 = &g_408e40;\n
    return &g_408e40;\n
}\n
", "4221440:sub_406a00": "extern unsigned int g_409040;\n
\n
int sub_406a00(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_407620(*(v2));\n
    return _except_handler4_common(&g_409040, sub_407250, v2, a0, a1);\n
}\n
", "4221504:sub_406a40": "int sub_406a40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4221520:sub_406a50": "int sub_406a50(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x406a59;\n
    return tmp_4;\n
}\n
", "4221536:sub_406a60": "int sub_406a60(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4221568:sub_406a80": "int sub_406a80(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406a60(v2);\n
}\n
", "4221600:sub_406aa0": "extern unsigned int g_4090f8;\n
\n
int sub_406aa0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_406a50(&g_4090f8, v3);\n
    return v0;\n
}\n
", "4221632:sub_406ac0": "extern char g_406a40;\n
extern unsigned int g_40a000;\n
\n
int sub_406ac0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_406a80(&g_40a000) != sub_406a40)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4221680:sub_406af0": "extern char g_4086c0;\n
\n
int sub_406af0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_4086c0;\n
    v1 = &g_4086c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4221744:sub_406b30": "extern unsigned int g_40a008;\n
\n
int sub_406b30(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_406a80(&g_40a008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4221792:sub_406b60": "extern unsigned int g_4090f8;\n
\n
int sub_406b60(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_406a80(&g_4090f8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_406a40();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4221856:sub_406ba0": "int sub_406ba0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4221872:sub_406bb0": "int sub_406bb0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406af0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4221891\n
}\n
", "4221904:sub_406bd0": "int sub_406bd0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406af0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4221929:sub_406be9": "int sub_406be9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4221929\n
}\n
", "4221936:sub_406bf0": "int sub_406bf0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406af0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406b30(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4221984:sub_406c20": "int sub_406c20(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406af0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406b60(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4222032:sub_406c50": "extern char g_4086c0;\n
\n
int sub_406c50(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_4086c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4222096:sub_406c90": "int sub_406c90(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406c50(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_406af0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4222139\n
}\n
", "4222144:sub_406cc0": "int sub_406cc0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406c50(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_406af0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4222193:sub_406cf1": "int sub_406cf1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4222193\n
}\n
", "4222208:sub_406d00": "int sub_406d00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4222224:sub_406d10": "int sub_406d10(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406c50(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_406af0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406b30(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4222288:sub_406d50": "int sub_406d50(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406c50(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_406af0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406b60(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4222352:sub_406d90": "extern unsigned int g_409040;\n
extern unsigned int g_409088;\n
extern unsigned int g_40908c;\n
extern unsigned int g_409090;\n
extern unsigned int g_4090fc;\n
extern unsigned int g_409100;\n
extern unsigned int g_409104;\n
\n
int sub_406d90()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_409040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_409100 = 0;\n
    g_409090 = g_409090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_407250();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_406edb;\n
        g_409104 = g_409104 | 1;\n
    }\n
LABEL_406edb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_409104 = g_409104 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_409100 = 1;\n
    g_409090 = g_409090 | 2;\n
    g_409088 = g_409088 & -2;\n
    g_40908c = g_40908c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_409100 = 2;\n
        g_409090 = g_409090 | 4;\n
        g_409088 = g_409088 & -17;\n
        g_40908c = g_40908c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_409100 = 3;\n
                g_409090 = g_409090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_409100 = 5;\n
                    g_409090 = g_409090 | 32;\n
                    g_409088 = g_409088 & -3;\n
                    g_40908c = g_40908c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_409100 = 6;\n
                            g_409090 = g_409090 | 64;\n
                            g_409088 = g_409088 & -37;\n
                            g_40908c = g_40908c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_409088 = g_409088 & -16777217;\n
                    g_40908c = g_40908c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4090fc = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_409088 = ~(v2 | 16777256) & g_409088;\n
                        g_40908c = ~(v3) & g_40908c;\n
                        if (g_4090fc > 1)\n
                        {\n
                            g_409088 = g_409088 & -65;\n
                            g_40908c = g_40908c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4223520:sub_407220": "extern unsigned int g_409094;\n
\n
int sub_407220()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_409094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4223568:sub_407250": "extern unsigned int g_409040;\n
extern unsigned int g_409080;\n
extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern unsigned int g_409160;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_407250()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_409040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_409210 = v7;\n
        g_40920c = v6;\n
        g_409208 = v8;\n
        g_409204 = v9;\n
        g_409200 = v10;\n
        g_4091fc = v11;\n
        g_409228 = v12;\n
        g_40921c = v13;\n
        g_4091f8 = v14;\n
        g_4091f4 = v15;\n
        g_4091f0 = v16;\n
        g_4091ec = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v3;\n
        g_409218 = *(&v4);\n
        g_409224 = &v5;\n
        g_409160 = 65537;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        g_409120 = 1;\n
        g_409124 = 2;\n
        v1 = g_409040;\n
        v2 = g_409080;\n
        sub_407590();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4223584:sub_407260": "extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_407260()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_409210 = v4;\n
        g_40920c = v5;\n
        g_409208 = v6;\n
        g_409204 = v7;\n
        g_409200 = v8;\n
        g_4091fc = v9;\n
        g_409228 = v10;\n
        g_40921c = v11;\n
        g_4091f8 = v12;\n
        g_4091f4 = v13;\n
        g_4091f0 = v14;\n
        g_4091ec = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v1;\n
        g_409218 = *(&v2);\n
        g_409224 = &v3;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        g_409120 = 1;\n
        g_409124 = v3;\n
        sub_407590();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4223609:sub_407279": "int sub_407279()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4223609\n
}\n
", "4223808:sub_407340": "extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern char g_409128;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_407340()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1057867];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_409210 = v7;\n
        g_40920c = v8;\n
        g_409208 = v9;\n
        g_409204 = v10;\n
        g_409200 = v11;\n
        g_4091fc = v12;\n
        g_409228 = v13;\n
        g_40921c = v14;\n
        g_4091f8 = v15;\n
        g_4091f4 = v16;\n
        g_4091f0 = v17;\n
        g_4091ec = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v2;\n
        g_409218 = *(&v3);\n
        g_409224 = &v4;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_409120 = v5 + 1;\n
        g_409124 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_409128)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_407590();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4223833:sub_407359": "int sub_407359()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4223833\n
}\n
", "4224112:sub_407470": "int sub_407470()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407260(8);\n
}\n
", "4224155:sub_40749b": "int sub_40749b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224155\n
}\n
", "4224400:sub_407590": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_407590(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4224448:sub_4075c0": "char sub_4075c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224464:sub_4075d0": "char sub_4075d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224480:sub_4075e0": "char sub_4075e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224496:sub_4075f0": "char sub_4075f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224512:sub_407600": "char sub_407600()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224528:sub_407610": "int sub_407610()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224544:sub_407620": "extern unsigned int g_409100;\n
\n
int sub_407620(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_409100 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4224852:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4224858:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4224864:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4224870:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4224876:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4224882:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4224888:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4224894:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4224900:sub_407784": "int sub_407784(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4224906:sub_40778a": "int sub_40778a()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4224912:sub_407790": "int sub_407790()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4224918:sub_407796": "int sub_407796(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4224924:sub_40779c": "int sub_40779c(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4224930:sub_4077a2": "int sub_4077a2()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4224936:sub_4077a8": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4077a8(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4224942:sub_4077ae": "int sub_4077ae(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4224948:sub_4077b4": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4077b4(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4224954:sub_4077ba": "int sub_4077ba(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4224960:sub_4077c0": "int sub_4077c0(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4224966:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4224972:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4224978:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4224984:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4224990:memcpy": "int memcpy()\n
{\n
    return ::kernel32.dll::memcpy();\n
}\n
", "4224996:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4225002:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4225008:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4225014:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4225020:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4225026:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4225032:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4225038:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4225044:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4225050:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4225056:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4225062:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4225068:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4225074:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4225080:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4225086:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4225092:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4225098:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4225104:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4225110:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4225116:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4225122:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4225128:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4225134:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4225140:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4225146:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4225152:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4225158:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4225164:sub_40788c": "int sub_40788c()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4225170:sub_407892": "int sub_407892(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_transmit": null, "5242912:GetCurrentProcess": null, "5242916:GetCurrentProcessId": null, "5242920:GetCurrentThreadId": null, "5242924:GetModuleHandleW": null, "5242928:GetStartupInfoW": null, "5242932:GetSystemTimeAsFileTime": null, "5242936:InitializeSListHead": null, "5242940:IsDebuggerPresent": null, "5242944:IsProcessorFeaturePresent": null, "5242948:QueryPerformanceCounter": null, "5242952:SetUnhandledExceptionFilter": null, "5242956:TerminateProcess": null, "5242960:UnhandledExceptionFilter": null, "5242964:__current_exception": null, "5242968:__current_exception_context": null, "5242972:__std_type_info_destroy_list": null, "5242976:_except_handler4_common": null, "5242980:memcpy": null, "5242984:memset": null, "5242988:__p___argc": null, "5242992:__p___argv": null, "5242996:__p__commode": null, "5243000:__setusermatherr": null, "5243004:_c_exit": null, "5243008:_cexit": null, "5243012:_configthreadlocale": null, "5243016:_configure_narrow_argv": null, "5243020:_controlfp_s": null, "5243024:_crt_at_quick_exit": null, "5243028:_crt_atexit": null, "5243032:_execute_onexit_table": null, "5243036:_exit": null, "5243040:_get_initial_narrow_environment": null, "5243044:_initialize_narrow_environment": null, "5243048:_initialize_onexit_table": null, "5243052:_initterm": null, "5243056:_initterm_e": null, "5243060:_register_onexit_function": null, "5243064:_register_thread_local_exe_atexit_callback": null, "5243068:_seh_filter_dll": null, "5243072:_seh_filter_exe": null, "5243076:_set_app_type": null, "5243080:_set_fmode": null, "5243084:_set_new_mode": null, "5243088:exit": null, "5243092:terminate": null, "6295596:UnresolvableCallTarget": null}