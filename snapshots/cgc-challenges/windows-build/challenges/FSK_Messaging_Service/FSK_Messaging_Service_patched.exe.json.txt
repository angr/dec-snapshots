{"4198400:sub_401000": "int sub_401000(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198454:sub_401036": null, "4198464:sub_401040": "int sub_401040(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198518:sub_401076": null, "4198528:sub_401080": "int sub_401080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198582:sub_4010b6": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3) && !sub_401080(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198668:sub_40110c": null, "4198672:sub_401110": "int sub_401110(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3) && !sub_401000(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198748:sub_40115c": null, "4198752:sub_401160": "int sub_401160(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 32 && v3 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198806:sub_401196": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401080(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + -32;\n
    return v0;\n
}\n
", "4198876:sub_4011dc": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + 32;\n
    return v0;\n
}\n
", "4198940:sub_40121c": null, "4198944:sub_401220": "int sub_401220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4199040:sub_401280": "extern char g_40a098;\n
\n
int sub_401280(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = g_40a098;\n
    if (!v6)\n
        return g_40a098;\n
    v7 = v6;\n
    if (*(v7) <= 1016)\n
    {\n
        if (*(v6) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v6) >> 3;\n
        *((v6 + 4)) = (&g_40a098)[v2];\n
        v1 = v6;\n
        if (*(v6) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v6) >> 3;\n
        v7 = v0;\n
        (&g_40a098)[v7] = v1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v7;\n
        if (!*((v3 + 4)))\n
        {\n
            *((v3 + 4)) = v6;\n
            *((v6 + 8)) = v3;\n
            v7 = v6;\n
            *((v7 + 4)) = 0;\n
            return v6;\n
        }\n
        else if (*(v6) >= *(*((v3 + 4))))\n
        {\n
            v7 = *((v3 + 4));\n
            v3 = v7;\n
        }\n
        else\n
        {\n
            *((v6 + 4)) = *((v3 + 4));\n
            *((v6 + 8)) = v3;\n
            *((*((v3 + 4)) + 8)) = v6;\n
            v7 = v3;\n
            *((v7 + 4)) = v6;\n
            return v3;\n
        }\n
    }\n
}\n
", "4199355:sub_4013bb": null, "4199360:sub_4013c0": "extern struct_0 *g_40a098;\n
\n
int sub_4013c0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v3 += 4;\n
    v3 = v3 + 4095 & -0x1000;\n
    if (cgc_allocate(v3, 0, &v0, 0, 0))\n
    {\n
        sub_402590(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
        cgc__terminate(-1);\n
    }\n
    sub_404160(v0);\n
    *(v0) = v3 - 4;\n
    if (!g_40a098)\n
    {\n
        v4 = v0;\n
        g_40a098 = v4;\n
        return v0;\n
    }\n
    v4 = sub_401280(v0);\n
    return v4;\n
}\n
", "4199549:sub_40147d": null, "4199552:sub_401480": "int sub_401480(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = v3;\n
    v0 = 0;\n
    if (v3)\n
    {\n
        v0 = v3 - 4;\n
        v4 = sub_401280(v0);\n
    }\n
    return v4;\n
}\n
", "4199603:sub_4014b3": null, "4199616:sub_4014c0": "extern struct_0 *g_40a098;\n
\n
int sub_4014c0()\n
{\n
    unsigned int v0[3];  // [bp-0xc]\n
    unsigned int v1[3];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (cgc_allocate(0x1000, 0, &g_40a098, 0, 0))\n
    {\n
        sub_402590();\n
        cgc__terminate();\n
    }\n
    sub_404160(g_40a098);\n
    v1[0] = g_40a098;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4080;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4199802:sub_40157a": null, "4199808:sub_401580": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_401580(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    v0 = &v1;\n
    if (!v2)\n
        return v2;\n
    if (v2->field_8)\n
        v2->field_8->field_4 = v2->field_4;\n
    v3 = v2;\n
    if (!v3->field_4)\n
        return v3;\n
    v3 = v2->field_4;\n
    v3->field_8 = v2->field_8;\n
}\n
", "4199892:sub_4015d4": null, "4199904:sub_4015e0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_0 *g_40a098;\n
\n
int sub_4015e0(unsigned int v5)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!g_40a098)\n
        sub_4014c0();\n
    for (v1 = g_40a098; v1; v1 = *((v1 + 4)))\n
    {\n
        if (*(v1) >= v5)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        sub_4013c0(v5);\n
        v2 = sub_4015e0(v5);\n
        return v2;\n
    }\n
    sub_401580(v1);\n
    if (*(v1) - v5 < 12)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + v5;\n
    *(v0) = *(v1) - (v5 + 4);\n
    *(v1) = v5;\n
    sub_401280(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4200149:sub_4016d5": null, "4200160:sub_4016e0": "int sub_4016e0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_401740();\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    sub_404160(v1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4200248:sub_401738": null, "4200256:sub_401740": "typedef struct struct_1 {\n
    char padding_0[4235416];\n
    struct struct_0 *field_40a098;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40a098[4];\n
\n
int sub_401740(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4015e0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_40a098[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40a098[v2];\n
        g_40a098[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4015e0(v6);\n
    return v3;\n
}\n
", "4200512:sub_401840": "typedef struct struct_1 {\n
    char padding_0[4235416];\n
    struct struct_0 *field_40a098;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40a098[4];\n
\n
int sub_401740(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4015e0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_40a098[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40a098[v2];\n
        g_40a098[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4015e0(v6);\n
    return v3;\n
}\n
", "4200692:sub_4018f4": null, "4200704:sub_401900": null, "4200912:sub_4019d0": "extern unsigned int g_40a298;\n
extern void* g_40a318;\n
\n
int sub_4019d0(unsigned int v5, unsigned int a0[1058983])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2[1058983];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[1058983];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 128;\n
    sub_404160(&g_40a298);\n
    g_40a318 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2[0] = 0; v2 < a0; v2 += 1)\n
    {\n
        (&g_40a298)[v2] = *((v5 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2[0] = v6;\n
        if (v2 >= 32)\n
            break;\n
        v1 = (&g_40a298)[&v2[0] + 1 & 31];\n
        (&g_40a298)[v2] = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4201109:sub_401a95": null, "4201120:sub_401aa0": "int sub_401aa0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4019d0(&v2, 0x1);\n
}\n
", "4201153:sub_401ac1": null, "4201168:sub_401ad0": "extern char g_40a298;\n
extern struct_0 *g_40a318;\n
\n
int sub_401ad0()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = *((0x4 * g_40a318 + &g_40a298));\n
    v7 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[3] & 31)]);\n
    v6 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[24] & 31)]);\n
    v5 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[10] & 31)]);\n
    v4 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[31] & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *((0x4 * g_40a318 + &g_40a298)) = v1;\n
    *(&(&g_40a298)[4 * (&g_40a318->padding_0[31] & 31)]) = v0;\n
    g_40a318 = &g_40a318->padding_0[31] & 31;\n
    return v0;\n
}\n
", "4201428:sub_401bd4": null, "4201440:sub_401be0": "int sub_401be0(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 > a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v7 != a0)\n
    {\n
        v2 = a0 - v7 + 1;\n
        if (!v2)\n
        {\n
            v4 = sub_401ad0();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = sub_401ad0();\n
        } while (v3 >= v2 * v1);\n
        v0 = v7;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v7;\n
        return v4;\n
    }\n
}\n
", "4201616:sub_401c90": "int sub_401c90(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4201703:sub_401ce7": null, "4201712:sub_401cf0": "int sub_401cf0(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4201746:sub_401d12": null, "4201760:sub_401d20": "int sub_401d20(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    if (*((v3 + 0x100)) >= 0x100)\n
    {\n
        for (v2 = v3; *((v3 + 0x100)) > 0; v2 = *(&v1) + v2)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(1, v2, *((v3 + 0x100))))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v1))\n
            {\n
                v8 = v3;\n
                v9 = *((v8 + 0x100)) - *(&v1);\n
                *((v8 + 0x100)) = v9;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v10 = v3;\n
    *(&v9) = *((v10 + 0x100));\n
    *((v10 + 0x100)) = v9 + 1;\n
    *((v3 + v9)) = a0;\n
    v4 = a1 + 1;\n
    return v4;\n
}\n
", "4202010:sub_401e1a": null, "4202016:sub_401e20": "int sub_401e20(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v5, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4202094:sub_401e6e": null, "4202096:sub_401e70": "int sub_401e70(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    v2 = sub_404120();\n
    while (true)\n
    {\n
        if (v1 != v2)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v7 + v1, v2 - v1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v3))\n
            {\n
                v1 = *(&v3) + v1;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            sub_401e20(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4202261:sub_401f15": null, "4202272:sub_401f20": "int sub_401f20(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x130]\n
    char v1;  // [bp-0x12c]\n
    unsigned int v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x124]\n
    void* v4;  // [bp-0x120]\n
    unsigned int v5;  // [bp-0x11c]\n
    char v6;  // [bp-0x116]\n
    unsigned short v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v12 = &v13;\n
    v11 = v15;\n
    v10 = v16;\n
    v8 = sub_401d20;\n
    v7 = 0;\n
    v5 = &v6;\n
    v4 = 0;\n
    v0 = a0;\n
    v3 = sub_402040(v5, v8, v4, v14);\n
    v2 = &v6;\n
    while (true)\n
    {\n
        if (v7 <= 0)\n
        {\n
            v9 = v3;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v2, v7))\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
        else if (*(&v1))\n
        {\n
            v7 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
    }\n
    return v9;\n
}\n
", "4202549:sub_402035": null, "4202560:sub_402040": "int sub_402040(struct struct_0 **v6, struct struct_0 **a0, struct struct_0 **a1, struct struct_0 **a2, struct struct_0 **a3)\n
{\n
    struct struct_0 **<0x402040[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    struct struct_0 **v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x1c]\n
    struct struct_0 **v9;  // [bp+0x20]\n
    struct struct_0 **v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28]\n
    struct struct_0 **v12;  // [bp+0x2c]\n
    struct struct_0 **v13;  // [bp+0x30]\n
    unsigned int v14;  // [bp+0x34]\n
    char v15;  // [bp+0x39]\n
    char v16;  // [bp+0x3a]\n
    char v17;  // [bp+0x3b]\n
    struct struct_0 **v18;  // [bp+0x3c]\n
    struct struct_0 **v19;  // [bp+0x40]\n
    struct struct_0 **v20;  // [bp+0x48]\n
    struct struct_0 **v21;  // [bp+0x50]\n
    struct struct_0 **v22;  // [bp+0x54]\n
    struct struct_0 **v23;  // [bp+0x58]\n
    struct struct_0 **v24;  // [bp+0x5c]\n
    struct struct_0 **v25;  // [bp+0x60]\n
    struct struct_0 **v26;  // [bp+0x64]\n
    char v27;  // [bp+0x6b]\n
    struct struct_0 **v28;  // [bp+0x6c], Other Possible Types: unsigned int\n
    void* v29;  // [bp+0x70]\n
    struct struct_0 **v30;  // [bp+0x74], Other Possible Types: unsigned int\n
    struct struct_0 **v31;  // [bp+0x78], Other Possible Types: unsigned int\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    struct struct_0 **v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    struct struct_0 **v41;  // eax\n
\n
    v4 = &<0x402040[is_2]|Stack bp, 1 B>;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(a2))\n
            return a1;\n
        v27 = *(a2);\n
        a2 = a2 + 1;\n
        if (v27 != 36)\n
        {\n
            v32 = a0;\n
            v5 = v6;\n
            v6 = v27;\n
            a0 = a1;\n
            a1 = v32(v6, a0);\n
        }\n
        else\n
        {\n
            v28 = 0;\n
            v29 = 0;\n
            v30 = 0;\n
            v31 = 0;\n
            if (!*(a2))\n
                return a1;\n
            if (*(a2) != 36)\n
            {\n
                if (*(a2) == 45)\n
                {\n
                    v31 |= 1;\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v5 = *(a2);\n
                if (sub_401000(*(a2)))\n
                {\n
                    if (*(a2) == 48)\n
                        v31 |= 4;\n
                    v26 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v26;\n
                    v30 = sub_403ab0();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                if (*(a2) == 46)\n
                {\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                    v25 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v25;\n
                    v28 = sub_403ab0();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v14 = *(a2) - 88;\n
                switch (v14)\n
                {\n
                case 0:\n
                    v31 |= 8;\n
                    v37 = a3;\n
                    a3 = v37 + 1;\n
                    v21 = &*(v37)->field_0;\n
                    v10 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v21;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v10;\n
                    a1 = sub_402790(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 11:\n
                    v41 = a3;\n
                    a3 = v41 + 1;\n
                    v17 = *(v41);\n
                    v15 = v17;\n
                    v16 = 0;\n
                    v9 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = &v15;\n
                    a2 = v30;\n
                    a3 = 0;\n
                    v7 = v9;\n
                    a1 = sub_403860(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 12:\n
                    v35 = a3;\n
                    a3 = v35 + 1;\n
                    v23 = &*(v35)->field_0;\n
                    v12 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v23;\n
                    a2 = 10;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v12;\n
                    a1 = sub_402790(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 13:\n
                    v31 |= 16;\n
                    v39 = a3;\n
                    a3 = v39 + 2;\n
                    *(&v19) = *(&v39);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v19);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_4035b0(v6, a0, a1);\n
                    break;\n
                case 14:\n
                    v38 = a3;\n
                    a3 = v38 + 2;\n
                    *(&v20) = *(&v38);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v20);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_4035b0(v6, a0, a1);\n
                    break;\n
                case 22:\n
                    v40 = a3;\n
                    a3 = v40 + 1;\n
                    v18 = &*(v40)->field_0;\n
                    *(v18) = a1;\n
                    break;\n
                case 27:\n
                    v34 = a3;\n
                    a3 = v34 + 1;\n
                    v24 = &*(v34)->field_0;\n
                    v13 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v24;\n
                    a2 = v30;\n
                    a3 = v28;\n
                    v7 = v13;\n
                    a1 = sub_403860(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 32:\n
                    v36 = a3;\n
                    a3 = v36 + 1;\n
                    v22 = &*(v36)->field_0;\n
                    v11 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v22;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v11;\n
                    a1 = sub_402790(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                a2 = a2 + 1;\n
            }\n
            else\n
            {\n
                v33 = a0;\n
                v5 = v6;\n
                v6 = 36;\n
                a0 = a1;\n
                a1 = v33(v6, a0);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4203915:sub_40258b": null, "4203920:sub_402590": "int sub_402590(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_401f20(v4, v1);\n
    return v0;\n
}\n
", "4203964:sub_4025bc": null, "4203968:sub_4025c0": "int sub_4025c0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
\n
    v4 = &v5;\n
    v3 = v8;\n
    v2 = &v7;\n
    v0 = v2;\n
    v1 = sub_402600(v6, a0);\n
    v9 = v3;\n
    return v1;\n
}\n
", "4204023:sub_4025f7": null, "4204032:sub_402600": "int sub_402600(unsigned int v8, void* **a0, void* **a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* **v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
\n
    v6 = &v7;\n
    v5 = v9;\n
    v4 = v10;\n
    v3 = &sub_401cf0;\n
    v2 = v8;\n
    v1 = 0;\n
    v0 = sub_402040(v2, v3, v1, a0, a1);\n
    v3(v2, 0);\n
    v11 = v4;\n
    v12 = v5;\n
    return v0;\n
}\n
", "4204151:sub_402677": null, "4204160:sub_402680": "int sub_402680(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m a0 >> 32;\n
        v5 = (0 CONCAT v5) /m a0;\n
        if (a0 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a1[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a1[v9] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4204432:sub_402790": "int sub_402790(unsigned int v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    struct struct_0 **v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v3 = 1;\n
        a2 = -(a2);\n
        v5 += 1;\n
    }\n
    v2 = sub_402680(a2, a3, &v1, a6);\n
    v5 = v2 + v5;\n
    if (a4 > 0 && v5 < a4)\n
        v4 = a4 - v5;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < a5)\n
            v4 = a5 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v8, 45);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v8, 32);\n
            else\n
                a1 = a0(v8, 48);\n
        }\n
    }\n
    if (v3)\n
    {\n
        a1 = a0(v8, 45);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        a1 = a0(v8, *(&v0 + v0));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v10 = v4;\n
        v4 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        a1 = a0(v8, 32);\n
    }\n
    return a1;\n
}\n
", "4205050:sub_4029fa": null, "4205056:sub_402a00": null, "4208039:sub_4035a7": null, "4208048:sub_4035b0": "int sub_4035b0()\n
{\n
    int <0x4035b0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned long v6;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xc]\n
    char v10;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x14]\n
    char v12;  // [bp+0x18]\n
    char v13;  // [bp+0x1c]\n
    char v14;  // [bp+0x20]\n
    unsigned int v15;  // [bp+0x38]\n
    char v16;  // [bp+0x3f]\n
    unsigned int v17;  // [bp+0x40]\n
    unsigned int v18;  // [bp+0x44], Other Possible Types: char\n
    char v19;  // [bp+0x48], Other Possible Types: unsigned long\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ebp\n
\n
    v5 = &<0x4035b0[is_2]|Stack bp, 1 B>;\n
    *(&v4) = *(&v10);\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (((CmpF(0, *(&v4)) & 69 | ((CmpF(0, *(&v4)) & 69) >> 6)) & 1) != 1)\n
    {\n
        *(&v19) = (0 CONCAT *(&v19)) ^ 0x80000000000000008000000000000000;\n
        v16 = 1;\n
        v18 = *(&v18) + 1;\n
    }\n
    if (!*(&v13))\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = 6;\n
    }\n
    else\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = *(&v13);\n
    }\n
    v9 = &v12;\n
    v10 = *(&v14);\n
    v15 = sub_402a00();\n
    v18 = v15 + v18;\n
    if (*(&v12) > 0 && v18 < *(&v12))\n
        v17 = *(&v12) - v18;\n
    if (!(*(&v14) & 1))\n
    {\n
        if (v16 && v17 > 0 && (*(&v14) & 4))\n
        {\n
            v20 = v8;\n
            v6 = (&v6)[1];\n
            v7 = 45;\n
            v8 = v9;\n
            v9 = v20(v7, v8);\n
            v16 = 0;\n
        }\n
        while (true)\n
        {\n
            v21 = v17;\n
            v17 = v21 - 1;\n
            if (v21 <= 0)\n
                break;\n
            if ((*(&v14) & 4))\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 48;\n
            }\n
            else\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 32;\n
            }\n
            v8 = v9;\n
            v9 = v22(v7, v8);\n
        }\n
    }\n
    if (v16)\n
    {\n
        v23 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 45;\n
        v8 = v9;\n
        v9 = v23(v7, v8);\n
        v16 = 0;\n
    }\n
    for (v11 = 0; v11 < v15; v11 += 1)\n
    {\n
        v24 = v8;\n
        v6 = (&v6)[1];\n
        v7 = (&v12)[v11];\n
        v8 = v9;\n
        v9 = v24(v7, v8);\n
    }\n
    if (!(*(&v14) & 1))\n
    {\n
        v27 = v5;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v25 = v17;\n
        v17 = v25 - 1;\n
        if (v25 <= 0)\n
            break;\n
        v26 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 32;\n
        v8 = v9;\n
        v9 = v26(v7, v8);\n
    }\n
    v27 = v5;\n
    return;\n
}\n
", "4208735:sub_40385f": null, "4208736:sub_403860": "int sub_403860(unsigned int v6, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // edx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v4 = &v5; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v6, *(a2));\n
        }\n
        v3 = a1;\n
        return v3;\n
    }\n
    v2 = sub_404120();\n
    v1 = 0;\n
    if (a4 > 0 && v2 > a4)\n
        v2 = a4;\n
    if (a3 > 0 && v2 < a3)\n
        v1 = a3 - v2;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v7 = v1;\n
            v1 = v7 - 1;\n
            if (v7 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v9 = a2;\n
        a2 = v9 + 1;\n
        v10 = *(v9);\n
        v0 = a1;\n
        a1 = a0(v6, v10);\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v1;\n
            v1 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v6, 32);\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4209248:sub_403a60": "int sub_403a60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401be0(0, 2147483646);\n
}\n
", "4209281:sub_403a81": null, "4209296:sub_403a90": "int sub_403a90(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401aa0(v2);\n
}\n
", "4209319:sub_403aa7": null, "4209328:sub_403ab0": "int sub_403ab0(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    for (v0 = 0; sub_401220(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = 1;\n
        v5 += 1;\n
    }\n
    for (; sub_401000(*(v5)); v1 = v1 * 10 + *(v6) - 48)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
    }\n
    if (v0)\n
    {\n
        v2 = -(v1);\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209542:sub_403b86": null, "4209552:sub_403b90": "int sub_403b90(char *v5)\n
{\n
    int <0x403b90[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x1c]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x18]\n
    unsigned long long v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    char *v4;  // [bp+0x0]\n
    char *v6;  // [bp+0x7], Other Possible Types: char\n
    unsigned long v7;  // [bp+0x8]\n
    char *v8;  // [bp+0x10], Other Possible Types: unsigned int\n
    char v9;  // [bp+0x14]\n
    unsigned long v10;  // [bp+0x18]\n
    unsigned long v11;  // [bp+0x20]\n
    char *v12;  // eax, Other Possible Types: unsigned int, void*\n
\n
    v3 = &<0x403b90[is_2]|Stack bp, 1 B>;\n
    v2 = 0;\n
    v1 = v5;\n
    for (v0 = v5; *(v8); v8 += 1)\n
    {\n
        if (*(v8) == 46)\n
        {\n
            *(v8) = 0;\n
            v8 += 1;\n
            break;\n
        }\n
    }\n
    v4 = *(&v9);\n
    *(&v11) = sub_403ab0(*(&v9));\n
    v12 = *(v8);\n
    if (v12)\n
    {\n
        v4 = v8;\n
        *(&v10) = sub_403ab0(v8);\n
        while (true)\n
        {\n
            v12 = 0;\n
            *(&v6) = 0;\n
            if (v8)\n
            {\n
                v4 = *(v8);\n
                v12 = sub_401000(*(v8));\n
                v6 = v12;\n
            }\n
            *(&v12) = v6;\n
            if (!(v6 & 1))\n
                break;\n
            tmp_12 = DivV(tmp_14, tmp_13);\n
            *(&v10) = tmp_12;\n
            v8 += 1;\n
        }\n
    }\n
    *(&v7) = (0 CONCAT *(&v11)) + (0 CONCAT *(&v10));\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v12;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v12;\n
}\n
", "4209852:sub_403cbc": null, "4209856:sub_403cc0": "int sub_403cc0(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); *(v6) = tmp_19)\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    *(v3) = 0;\n
    return v0;\n
}\n
", "4209932:sub_403d0c": null, "4209936:sub_403d10": "int sub_403d10(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = 0;\n
    }\n
    return v3;\n
}\n
", "4210073:sub_403d99": null, "4210080:sub_403da0": "int sub_403da0(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = *(&a0);\n
        v3 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4210216:sub_403e28": null, "4210224:sub_403e30": "int sub_403e30(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; sub_401220(v8[0]); v8 = &v8[1]);\n
    if (*(v8) == 45)\n
    {\n
        v3 = 1;\n
        *(&v8) = &v8[1];\n
    }\n
    else if (*(v8) == 43)\n
    {\n
        *(&v8) = &v8[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_403f37;\n
    if (*(v8) != 48)\n
    {\n
LABEL_403f37:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_403f8a;\n
        if (*(v8) == 48)\n
        {\n
            if (*((v8 + 1)) != 98 && !(*((v8 + 1)) == 66))\n
                goto LABEL_403f8a;\n
            *(&v8) = v8 + 2;\n
            a1 = 2;\n
        }\n
LABEL_403f8a:\n
    }\n
    else\n
    {\n
        if (*((v8 + 1)) != 120 && !(*((v8 + 1)) == 88))\n
            goto LABEL_403f37;\n
        *(&v8) = v8 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v8) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = 0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m a1 >> 32;\n
    v2 = (0 CONCAT v2) /m a1;\n
    while (*(v8))\n
    {\n
        v0 = *(v8);\n
        if (sub_401000(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!sub_4010c0(v0))\n
                break;\n
            if (sub_401040(v0))\n
                v0 -= 55;\n
            else\n
                v0 -= 87;\n
        }\n
        if (v0 >= a1)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_4040b9:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_4040be:\n
            v4 *= a1;\n
            v4 = v0 + v4;\n
            v8 = &v8[1];\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_4040be;\n
            goto LABEL_4040b9;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v8;\n
    if (v3)\n
    {\n
        v5 = -(v4);\n
        return v5;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4210976:sub_404120": "int sub_404120(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211035:sub_40415b": null, "4211040:sub_404160": "int sub_404160(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ecx\n
\n
    for (v0 = &v1; a0; v3[1 + v2] = 0)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
    }\n
    *((v2 + a0)) = 0;\n
    return v2;\n
}\n
", "4211095:sub_404197": null, "4211104:sub_4041a0": "int sub_4041a0(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v5) = v0;\n
        v5 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(v6) = v1;\n
    }\n
    return v2;\n
}\n
", "4211259:sub_40423b": null, "4211264:sub_404240": "int sub_404240(char *v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_404120(v5))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v5[v1] != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &v5[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4211402:sub_4042ca": null, "4211408:sub_4042d0": "extern struct_0 *g_40a420;\n
\n
int sub_4042d0(char *v7, char *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v7)\n
    {\n
        if (g_40a420)\n
        {\n
            v7 = g_40a420;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (sub_404240(a0, *(v7)))\n
            v0 = *(v7);\n
        if (!(v0 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (!*(v7))\n
    {\n
        g_40a420 = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = sub_404120(v7);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            g_40a420 = 0;\n
            v4 = v7;\n
            return v4;\n
        }\n
        if (sub_404240(a0, *((v7 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v7 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (sub_404240(a0, *((v7 + v2))))\n
        {\n
            *((v7 + v2)) = 0;\n
        }\n
        else\n
        {\n
            g_40a420 = v7 + v2;\n
            v4 = v7;\n
            return v4;\n
        }\n
    }\n
    if (v2 == v1)\n
        g_40a420 = 0;\n
    v4 = v7;\n
    return v4;\n
}\n
", "4211878:sub_4044a6": null, "4211888:sub_4044b0": "int sub_4044b0(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v4 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v4 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v4))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v4) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v4) >= *(a0))\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v4) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v4) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4212238:sub_40460e": null, "4212240:sub_404610": "int sub_404610(char *v6, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = sub_404120(v6);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= sub_404120(a0))\n
                break;\n
            v6[v2] = a0[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v6[v2] = 0;\n
        v3 = v6;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212400:sub_4046b0": "int sub_4046b0(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v6];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4212560:sub_404750": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    char padding_10[12];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    char field_28;\n
    char field_29;\n
    char field_2a;\n
    char field_2b;\n
    char field_2c;\n
    char field_2d;\n
    char padding_2e[256];\n
    unsigned short field_12e;\n
} struct_0;\n
\n
int sub_404750(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2->field_0 = 0;\n
    v2->field_1 = 0;\n
    v2->field_8 = 0;\n
    v2->field_1c = 0;\n
    v2->field_20 = 0;\n
    v2->field_28 = 0;\n
    v2->field_2a = 0;\n
    v2->field_29 = 0;\n
    v2->field_2b = 0;\n
    v2->field_2c = 0;\n
    v2->field_2d = 0;\n
    v2->field_12e = 0;\n
    return v2;\n
}\n
", "4212666:sub_4047ba": null, "4212672:sub_4047c0": "int sub_4047c0(unsigned int v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4047f0(v2, a0);\n
}\n
", "4212710:sub_4047e6": null, "4212720:sub_4047f0": null, "4213405:sub_404a9d": null, "4213408:sub_404aa0": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
int sub_404aa0(struct_1 *v3, char a0)\n
{\n
    int tmp_60;  // tmp #60\n
    int tmp_62;  // tmp #62\n
    int tmp_61;  // tmp #61\n
    unsigned long v0;  // [bp-0xc]\n
    int tmp_11;  // tmp #11\n
    int tmp_13;  // tmp #13\n
    int tmp_12;  // tmp #12\n
    int tmp_23;  // tmp #23\n
    int tmp_25;  // tmp #25\n
    int tmp_24;  // tmp #24\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned long long v4;  // xmm0\n
    struct_0 *v6;  // eax\n
\n
    v1 = &v2;\n
    tmp_60 = DivV(tmp_62, tmp_61);\n
    v4 = tmp_60;\n
    *(&v0) = v4;\n
    if (((CmpF(0x3ff0000000000000, *(&v0)) & 69 | ((CmpF(0x3ff0000000000000, *(&v0)) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_11 = SubV(tmp_13, tmp_12);\n
        *(&v3->field_8) = tmp_11;\n
    }\n
    else\n
    {\n
        v4 = *(&v2);\n
        if (((CmpF(v4, 0x3ff0000000000000) & 69 | ((CmpF(v4, 0x3ff0000000000000) & 69) >> 6)) & 1) != 1)\n
        {\n
            v6 = *(&(&v2)[4]);\n
            STORE(addr=(eax<4> + 0x8<32>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fb999999999999a<64>) + Conv(64->128, Load(addr=(eax<4> + 0x8<32>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
        }\n
    }\n
    *(((&v2)[1] + 24)) = 0;\n
    tmp_23 = DivV(tmp_25, tmp_24);\n
    *(((&v2)[1] + 16)) = tmp_23;\n
    return (&v2)[1];\n
}\n
", "4213621:sub_404b75": null, "4213632:sub_404b80": "typedef struct struct_0 {\n
    char padding_0[40];\n
    char field_28;\n
    char field_29;\n
    char field_2a;\n
    char field_2b;\n
    char field_2c;\n
    char field_2d;\n
    char padding_2e[256];\n
    unsigned short field_12e;\n
} struct_0;\n
\n
int sub_404b80(struct_0 *v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    unsigned int v10;  // ecx\n
    struct_0 *v11;  // eax\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // eax\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5->field_28;\n
    v6 = v2;\n
    if (!v6)\n
        return v2;\n
    if (v2 == 1)\n
    {\n
        if (v5->field_2a)\n
        {\n
            if (v5->field_2a != 1)\n
            {\n
                v1 = v5->field_2a;\n
                if (!v5->field_29 && v5->field_2a == 2 && a0 == 1)\n
                {\n
                    v6 = v5;\n
                    v6->field_29 = 1;\n
                    goto LABEL_404d0d;\n
                }\n
                if (a0 == (1 << (15 - v1 & 31) & 53155) >> (15 - v1 & 31))\n
                {\n
                    v15 = v5;\n
                    v15->field_2a = v15->field_2a + 1;\n
                }\n
                else\n
                {\n
                    sub_404f10();\n
                }\n
                v6 = v5->field_2a;\n
                if (v6 == 16)\n
                {\n
                    v5->field_28 = 2;\n
                    v5->field_2d = 0;\n
                    v5->field_2c = 0;\n
                    v6 = v5;\n
                    v6->field_2b = 0;\n
                }\n
LABEL_404d0d:\n
            }\n
            else if (a0)\n
            {\n
                v6 = v5;\n
                v6->field_2a = 2;\n
            }\n
            else\n
            {\n
                v5->field_29 = 0;\n
                v6 = v5;\n
                v6->field_2a = 0;\n
            }\n
        }\n
        else\n
        {\n
            if (a0 == 1)\n
            {\n
                v6 = v5;\n
                v6->field_2a = 1;\n
            }\n
            else if (a0 != v5->field_29)\n
            {\n
                v6 = v5;\n
                v6->field_29 = a0;\n
            }\n
            else\n
            {\n
                v6 = sub_404f10();\n
            }\n
        }\n
    }\n
    else\n
    {\n
        if (v2 == 2)\n
        {\n
            v7 = v5;\n
            v7->field_2b = v7->field_2b | (a0 & 1) << (7 - v5->field_2d & 31);\n
            v8 = v5;\n
            v8->field_2d = v8->field_2d + 1;\n
            v6 = v5->field_2d;\n
            if (v6 == 8)\n
            {\n
                if (v5->field_2b)\n
                {\n
                    v5->field_28 = 3;\n
                    v5->field_2d = 0;\n
                    v6 = sub_4041a0(&v5->padding_2e, 0, 255);\n
                }\n
                else\n
                {\n
                    v6 = sub_404f10();\n
                }\n
            }\n
        }\n
        else if (v2 == 3)\n
        {\n
            v9 = v5;\n
            v10 = v5->field_2c;\n
            v9->padding_2e[v10] = v9->padding_2e[v10] | (a0 & 1) << (7 - v5->field_2d & 31);\n
            v11 = v5;\n
            v11->field_2d = v11->field_2d + 1;\n
            v6 = v5->field_2d;\n
            if (v6 == 8)\n
            {\n
                v5->field_2d = 0;\n
                v12 = v5;\n
                v12->field_2c = v12->field_2c + 1;\n
                v6 = v5->field_2c;\n
                if (v6 == v5->field_2b)\n
                {\n
                    v5->field_28 = 4;\n
                    v6 = v5;\n
                    v6->field_12e = 0;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v6 = v2;\n
            if (v6 == 4)\n
            {\n
                v13 = v5;\n
                v13->field_12e = v13->field_12e | (a0 & 1) << (15 - v5->field_2d & 31);\n
                v14 = v5;\n
                v14->field_2d = v14->field_2d + 1;\n
                v6 = v5->field_2d;\n
                if (v6 == 16)\n
                {\n
                    v0 = v5->field_2b;\n
                    sub_405770(&v5->padding_2e, v0);\n
                    v6 = sub_404f10(v5, v0);\n
                }\n
            }\n
        }\n
    }\n
    return v6;\n
}\n
", "4214543:sub_404f0f": null, "4214544:sub_404f10": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    char padding_10[12];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    char field_28;\n
    char field_29;\n
    char field_2a;\n
    char field_2b;\n
    char field_2c;\n
    char field_2d;\n
    char padding_2e[256];\n
    unsigned short field_12e;\n
} struct_0;\n
\n
int sub_404f10(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2->field_0 = 0;\n
    v2->field_28 = 0;\n
    v2->field_1 = 0;\n
    v2->field_8 = 0;\n
    v2->field_1c = 0;\n
    v2->field_20 = 0;\n
    v2->field_2a = 0;\n
    v2->field_29 = 0;\n
    v2->field_2b = 0;\n
    v2->field_2c = 0;\n
    v2->field_2d = 0;\n
    v2->field_12e = 0;\n
    return v2;\n
}\n
", "4214656:sub_404f80": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    char field_10;\n
    char padding_11[3];\n
    unsigned int field_14;\n
    char field_18;\n
    char padding_19[3];\n
    unsigned int field_1c;\n
    char field_20;\n
    char padding_21[3];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern struct_0 *g_40a424;\n
extern char g_40a428;\n
\n
int sub_404f80()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    g_40a424 = sub_401740(40);\n
    g_40a428 = 5;\n
    v0 = g_40a424;\n
    v0->field_0 = 0;\n
    v0->field_4 = sub_405010;\n
    v0->field_8 = 1;\n
    v0->field_c = sub_405170;\n
    v0->field_10 = 2;\n
    v0->field_14 = sub_4052e0;\n
    v0->field_18 = 3;\n
    v0->field_1c = sub_4054e0;\n
    v0->field_20 = 4;\n
    v0->field_24 = sub_4055c0;\n
    return v0;\n
}\n
", "4214793:sub_405009": null, "4214800:sub_405010": "int sub_405010(char *v6, unsigned int a0)\n
{\n
    char v0;  // [bp-0x10f]\n
    char v1;  // [bp-0x106]\n
    char v2;  // [bp-0x6]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = sub_402590(\"[BROADCAST]No data\\n
\");\n
        return v7;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v7 = sub_402590(\"[BROADCAST]Missing length\\n
\");\n
        return v7;\n
    }\n
    else\n
    {\n
        v3 = *(v6);\n
        if (a0 < v3 + 2)\n
        {\n
            v7 = sub_402590(\"[BROADCAST]Invalid message length\\n
\");\n
            return v7;\n
        }\n
        else if (v3 > 8)\n
        {\n
            v7 = sub_402590(\"[BROADCAST]Username length was too large\\n
\");\n
            return v7;\n
        }\n
        else\n
        {\n
            v2 = v6[1 + v3];\n
            if (a0 != v3 + v2 + 2)\n
            {\n
                v7 = sub_402590(\"[BROADCAST]Message length did not match packet length\\n
\");\n
                return v7;\n
            }\n
            sub_403da0(&v0, v6 + 1, v3);\n
            (&v0)[v3] = 0;\n
            sub_403da0(&v1, &v6[v3 + 2], v2);\n
            (&v1)[v2] = 0;\n
            v7 = sub_402590(\"[BROADCAST]From $s::$s\\n
\");\n
            return v7;\n
        }\n
    }\n
}\n
", "4215143:sub_405167": null, "4215152:sub_405170": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405170(char *v8, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x118]\n
    char v1;  // [bp-0x114]\n
    char v2;  // [bp-0x14]\n
    char v3;  // [bp-0xb]\n
    char v4;  // [bp-0xa]\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
\n
    v6 = &v7;\n
    if (!v8)\n
    {\n
        v9 = sub_402590(\"[CHANNEL]No data\\n
\");\n
        return v9;\n
    }\n
    else if (a0 < 2)\n
    {\n
        v9 = sub_402590(\"[CHANNEL]Invalid length\\n
\");\n
        return v9;\n
    }\n
    else\n
    {\n
        v5 = *(v8);\n
        if (a0 < v5 + 3)\n
        {\n
            v9 = sub_402590(\"[CHANNEL]Invalid message length\\n
\");\n
            return v9;\n
        }\n
        else if (v5 > 8)\n
        {\n
            v9 = sub_402590(\"[CHANNEL]Username length was too large\\n
\");\n
            return v9;\n
        }\n
        else\n
        {\n
            v4 = v8[1 + v5];\n
            v3 = v8[2 + v5];\n
            if (a0 != v5 + v3 + 3)\n
            {\n
                v9 = sub_402590(\"[CHANNEL]Message length did not match packet length\\n
\");\n
                return v9;\n
            }\n
            sub_403da0(&v2, v8 + 1, v5);\n
            (&v2)[v5] = 0;\n
            sub_403da0(&v1, &v8[v5 + 3], v3);\n
            (&v1)[v3] = 0;\n
            v0 = &v1;\n
            v9 = sub_402590(\"[CHANNEL $d]Message from $s::$s\\n
\");\n
            return v9;\n
        }\n
    }\n
}\n
", "4215510:sub_4052d6": null, "4215520:sub_4052e0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4052e0(char *v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x124]\n
    char v1;  // [bp-0x11d]\n
    char v2;  // [bp-0x114]\n
    char v3;  // [bp-0x10b]\n
    char v4;  // [bp-0xb]\n
    char v5;  // [bp-0xa]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // eax\n
\n
    v7 = &v8;\n
    if (!v9)\n
    {\n
        v10 = sub_402590(\"[PRIVATE MESSAGE]No data\\n
\");\n
        return v10;\n
    }\n
    else if (a0 < 2)\n
    {\n
        v10 = sub_402590(\"[PRIVATE MESSAGE]Invalid length\\n
\");\n
        return v10;\n
    }\n
    else\n
    {\n
        v6 = *(v9);\n
        if (a0 < v6 + 3)\n
        {\n
            v10 = sub_402590(\"[PRIVATE MESSAGE]Message length did not match packet length\\n
\");\n
            return v10;\n
        }\n
        else if (v6 > 8)\n
        {\n
            v10 = sub_402590(\"[PRIVATE MESSAGE]Username length was too large\\n
\");\n
            return v10;\n
        }\n
        else\n
        {\n
            v5 = v9[1 + v6];\n
            if (a0 < v6 + v5 + 3)\n
            {\n
                v10 = sub_402590(\"[PRIVATE MESSAGE]Message length did not match packet length\\n
\");\n
                return v10;\n
            }\n
            else if (v5 > 8)\n
            {\n
                v10 = sub_402590(\"[PRIVATE MESSAGE]Username length was too large\\n
\");\n
                return v10;\n
            }\n
            else\n
            {\n
                v4 = v9[2 + v5 + v6];\n
                if (a0 != v6 + v5 + v4 + 3)\n
                {\n
                    v10 = sub_402590(\"[PRIVATE MESSAGE]Message length did not match packet length\\n
\");\n
                    return v10;\n
                }\n
                sub_403da0(&v1, v9 + 1, v6);\n
                (&v1)[v6] = 0;\n
                sub_403da0(&v2, &v9[v6 + 2], v5);\n
                (&v2)[v5] = 0;\n
                sub_403da0(&v3, &v9[v6 + v5 + 3], v4);\n
                (&v3)[v4] = 0;\n
                v0 = &v3;\n
                v10 = sub_402590(\"[PRIVATE MESSAGE]$s to $s::$s\\n
\");\n
                return v10;\n
            }\n
        }\n
    }\n
}\n
", "4216032:sub_4054e0": "int sub_4054e0(char *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v5 = sub_402590(\"[CONNECT MESSAGE]No data\\n
\");\n
        return v5;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v5 = sub_402590(\"[CONNECT MESSAGE]Invalid length\\n
\");\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = *(v4);\n
        if (a0 != v1 + 1)\n
        {\n
            v5 = sub_402590(\"[CONNECT MESSAGE]Message length did not match packet length\\n
\");\n
            return v5;\n
        }\n
        else if (v1 < 8)\n
        {\n
            sub_403da0(&v0, v4 + 1, v1);\n
            (&v0)[v1] = 0;\n
            v5 = sub_402590(\"[CONNECT MESSAGE]$s connected\\n
\");\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = sub_402590(\"[CONNECT MESSAGE]Username length was too large\\n
\");\n
            return v5;\n
        }\n
    }\n
}\n
", "4216243:sub_4055b3": null, "4216256:sub_4055c0": "int sub_4055c0(char *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v5 = sub_402590(\"[DISCONNECT MESSAGE]No data\\n
\");\n
        return v5;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v5 = sub_402590(\"[DISCONNECT MESSAGE]Invalid length\\n
\");\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = *(v4);\n
        if (a0 != v1 + 1)\n
        {\n
            v5 = sub_402590(\"[DISCONNECT MESSAGE]Message length did not match packet length\\n
\");\n
            return v5;\n
        }\n
        else if (v1 < 8)\n
        {\n
            sub_403da0(&v0, v4 + 1, v1);\n
            (&v0)[v1] = 0;\n
            v5 = sub_402590(\"[DISCONNECT MESSAGE]$s disconnected\\n
\");\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = sub_402590(\"[DISCONNECT MESSAGE]Username length was too large\\n
\");\n
            return v5;\n
        }\n
    }\n
}\n
", "4216467:sub_405693": null, "4216480:sub_4056a0": "typedef struct struct_0 {\n
    char padding_0[52];\n
    struct struct_0 *field_34;\n
} struct_0;\n
\n
extern void* g_40a424;\n
extern struct_0 *g_40a42c;\n
\n
int sub_4056a0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    if (g_40a424)\n
        sub_401480(g_40a424);\n
    g_40a424 = 0;\n
    v5 = g_40a42c;\n
    for (v1 = g_40a42c; v1; v1 = v5)\n
    {\n
        v0 = v1->field_34;\n
        sub_401480(v1);\n
        v5 = v0;\n
    }\n
    g_40a42c = 0;\n
    return v5;\n
}\n
", "4216586:sub_40570a": null, "4216592:sub_405710": "int sub_405710(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    char *v6;  // eax, Other Possible Types: unsigned int\n
    char *v7;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v6 = v4;\n
    v1 = 49069;\n
    while (true)\n
    {\n
        *(&v6) = a0;\n
        a0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v7 = v4;\n
        v4 = v7 + 1;\n
        v6 = v1 + *(v7);\n
        v1 = v6;\n
    }\n
    return v1;\n
}\n
", "4216674:sub_405762": null, "4216688:sub_405770": "extern char g_40a424;\n
extern char g_40a428;\n
extern char g_40a430;\n
extern char g_40a434;\n
extern char g_40a438;\n
\n
int sub_405770(unsigned int v7, char a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    char v3;  // [bp-0xb]\n
    unsigned short v4;  // [bp-0xa]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    if (!v7)\n
        return v7;\n
    v8 = a0;\n
    if (!v8)\n
        return a0;\n
    v4 = sub_405710(v7, a0);\n
    v8 = a1;\n
    if (v8 != v4)\n
        return a1;\n
    v8 = a0;\n
    if (v8 > 49)\n
        return a0;\n
    v3 = *(v7);\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v8 = v1;\n
        if (v8 >= g_40a428)\n
            break;\n
        if (*((g_40a424 + (v1 << 3))) == v3)\n
        {\n
            v2 = 1;\n
            v0 = a0 - 1;\n
            sub_4058b0(v3, *((g_40a424 + v1 * 8 + 4)), v7 + 1);\n
            g_40a430 = g_40a430 + 1;\n
            g_40a434 = a0 + g_40a434;\n
        }\n
        v1 += 1;\n
    }\n
    if (v2)\n
        return v8;\n
    v8 = g_40a438 + 1;\n
    g_40a438 = v8;\n
}\n
", "4216997:sub_4058a5": null, "4217008:sub_4058b0": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    unsigned int field_34;\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_0;\n
\n
extern struct_0 *g_40a42c;\n
\n
int sub_4058b0(char v3, unsigned int a0, char *a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = sub_401740(64);\n
    v0->field_3c = v3;\n
    v0->field_38 = a0;\n
    v0->field_34 = 0;\n
    v0->field_30 = a2;\n
    sub_403da0(v0, a1, a2);\n
    if (!g_40a42c)\n
    {\n
        v4 = v0;\n
        g_40a42c = v4;\n
        return v0;\n
    }\n
    v0->field_34 = g_40a42c;\n
    v4 = v0;\n
    g_40a42c = v4;\n
    return v0;\n
}\n
", "4217156:sub_405944": null, "4217168:sub_405950": "typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    struct struct_1 *field_34;\n
    struct struct_0 *field_38;\n
    char field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_1 *g_40a42c;\n
extern unsigned int g_40a430;\n
extern unsigned int g_40a434;\n
extern unsigned int g_40a438;\n
\n
int sub_405950()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v0 = g_40a434;\n
    v1 = g_40a438;\n
    sub_402590(\"Total $d bytes received and $d invalid packets.\\n
\");\n
    v0 = g_40a430;\n
    sub_402590(\"Displaying $d received packets:\\n
\");\n
    v2 = 0;\n
    v7 = g_40a42c;\n
    for (v3 = g_40a42c; v3; v3 = v7)\n
    {\n
        v0 = v2;\n
        v1 = *((v3 + 60));\n
        sub_402590(\"Displaying packet $d type $d:\\n
\");\n
        v0 = *((v3 + 48));\n
        *((v3 + 56))(v3);\n
        v2 += 1;\n
        v7 = *((v3 + 52));\n
    }\n
    return v7;\n
}\n
", "4217360:sub_405a10": "int sub_405a10()\n
{\n
    int <0x405a10[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned long v1;  // [bp+0x0]\n
    unsigned long v3;  // [bp+0x8]\n
    unsigned long v4;  // [bp+0x10]\n
\n
    v0 = &<0x405a10[is_2]|Stack bp, 1 B>;\n
    *(&v4) = sub_403a60() >> 4;\n
    *(&v3) = sub_403a60() >> 5;\n
    *(&v1) = ((0 CONCAT *(&v4)) * (0 CONCAT 0x4190000000000000) + (0 CONCAT *(&v3))) * (0 CONCAT 0x3ca0000000000000);\n
    if ([D] GetI(136:I8x8)[t48,0])\n
    {\n
        [D] PutI(72:F64x8)[t1,0] = t4\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        return *(&v3);\n
    }\n
    [D] PutI(72:F64x8)[t1,0] = t4\n
    [D] PutI(136:I8x8)[t1,0] = 0x01\n
    return *(&v3);\n
}\n
", "4217457:sub_405a71": null, "4217472:sub_405a80": null, "4218003:sub_405c93": null, "4218016:sub_405ca0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long g_40a440;\n
extern unsigned long long g_40a448;\n
extern unsigned long long g_40a450;\n
extern unsigned long long g_40a458;\n
extern unsigned long long g_40a460;\n
extern unsigned long long g_40a468;\n
extern unsigned long long g_40a470;\n
extern unsigned long long g_40a478;\n
extern unsigned long long g_40a480;\n
extern unsigned long long g_40a488;\n
extern unsigned long long g_40a490;\n
extern unsigned long long g_40a498;\n
extern unsigned long long g_40a4a0;\n
extern unsigned long long g_40a4a8;\n
extern unsigned long long g_40a4b0;\n
extern unsigned long long g_40a4b8;\n
extern unsigned long long g_40a4c0;\n
extern unsigned long long g_40a4c8;\n
extern unsigned long long g_40a4d0;\n
extern unsigned long long g_40a4d8;\n
extern unsigned long long g_40a4e0;\n
extern unsigned long long g_40a4e8;\n
extern unsigned long long g_40a4f0;\n
extern unsigned long long g_40a4f8;\n
extern unsigned long long g_40a500;\n
extern unsigned long long g_40a508;\n
extern unsigned long long g_40a510;\n
extern unsigned long long g_40a518;\n
extern unsigned long long g_40a520;\n
extern unsigned long long g_40a528;\n
extern unsigned long long g_40a530;\n
extern unsigned long long g_40a538;\n
extern unsigned long long g_40a540;\n
extern unsigned long long g_40a548;\n
extern unsigned long long g_40a550;\n
extern unsigned long long g_40a558;\n
extern unsigned long long g_40a560;\n
extern unsigned long long g_40a568;\n
extern unsigned long long g_40a570;\n
extern unsigned long long g_40a578;\n
extern unsigned long long g_40a580;\n
extern unsigned long long g_40a588;\n
extern unsigned long long g_40a590;\n
extern unsigned long long g_40a598;\n
\n
int sub_405ca0(char v3)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    int tmp_72;  // tmp #72\n
    int tmp_74;  // tmp #74\n
    int tmp_73;  // tmp #73\n
    int tmp_90;  // tmp #90\n
    int tmp_92;  // tmp #92\n
    int tmp_91;  // tmp #91\n
    int tmp_95;  // tmp #95\n
    int tmp_97;  // tmp #97\n
    int tmp_96;  // tmp #96\n
    int tmp_94;  // tmp #94\n
    int tmp_112;  // tmp #112\n
    int tmp_113;  // tmp #113\n
    int tmp_110;  // tmp #110\n
    int tmp_117;  // tmp #117\n
    int tmp_118;  // tmp #118\n
    int tmp_115;  // tmp #115\n
    int tmp_105;  // tmp #105\n
    int tmp_107;  // tmp #107\n
    int tmp_106;  // tmp #106\n
    int tmp_49;  // tmp #49\n
    int tmp_51;  // tmp #51\n
    int tmp_50;  // tmp #50\n
    struct_0 *v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned long v4;  // [bp+0x8]\n
    unsigned long v5;  // [bp+0x10]\n
    unsigned long long v6;  // [bp+0x18]\n
    unsigned long v7;  // [bp+0x20]\n
    unsigned int v8;  // [bp+0x28]\n
    unsigned int v9;  // [bp+0x2c]\n
    unsigned long v10;  // [bp+0x30]\n
    unsigned int v11;  // [bp+0x38]\n
    unsigned int v12;  // [bp+0x3c]\n
    char v13;  // [bp+0x47]\n
    int v17;  // xmm1\n
    int v21;  // xmm1\n
    int v23;  // xmm0\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    v3 = sub_405a80(v2);\n
    v12 = 1085251875;\n
    v11 = 2783138808;\n
    g_40a440 = g_40a448;\n
    g_40a448 = g_40a450;\n
    g_40a450 = g_40a458;\n
    g_40a458 = g_40a460;\n
    g_40a460 = g_40a468;\n
    g_40a468 = g_40a470;\n
    tmp_72 = DivV(tmp_74, tmp_73);\n
    *(&g_40a470) = tmp_72;\n
    g_40a478 = g_40a480;\n
    g_40a480 = g_40a488;\n
    g_40a488 = g_40a490;\n
    g_40a490 = g_40a498;\n
    g_40a498 = g_40a4a0;\n
    g_40a4a0 = g_40a4a8;\n
    tmp_90 = SubV(tmp_92, tmp_91);\n
    tmp_95 = SubV(tmp_97, tmp_96);\n
    v17 = (0 CONCAT g_40a488) * (0 CONCAT 13843575331137114248) + (0 CONCAT g_40a480) * (0 CONCAT 4614871111687090306) + (0 CONCAT g_40a478) * (0 CONCAT 0xbfe89fea63391f00) + tmp_95 * (0 CONCAT 0x4008000000000000) + tmp_90;\n
    g_40a4a8 = ((0 CONCAT g_40a4a0) * (0 CONCAT 4616264329692339511) + (0 CONCAT g_40a498) * (0 CONCAT 13844208981161497880) + (0 CONCAT g_40a490) * (0 CONCAT 4621782674337219323) + v17);\n
    *(&v10) = g_40a4a8;\n
    v9 = 1085251875;\n
    v8 = 2787536854;\n
    g_40a4b0 = g_40a4b8;\n
    g_40a4b8 = g_40a4c0;\n
    g_40a4c0 = g_40a4c8;\n
    g_40a4c8 = g_40a4d0;\n
    g_40a4d0 = g_40a4d8;\n
    g_40a4d8 = g_40a4e0;\n
    tmp_94 = DivV(tmp_95, tmp_92);\n
    *(&g_40a4e0) = tmp_94;\n
    g_40a4e8 = g_40a4f0;\n
    g_40a4f0 = g_40a4f8;\n
    g_40a4f8 = g_40a500;\n
    g_40a500 = g_40a508;\n
    g_40a508 = g_40a510;\n
    g_40a510 = g_40a518;\n
    tmp_112 = SubV(tmp_113, tmp_110);\n
    tmp_117 = SubV(tmp_118, tmp_115);\n
    v21 = (0 CONCAT g_40a4e8) * (0 CONCAT 0xbfe89fea63391f00) + tmp_117 * (0 CONCAT 0x4008000000000000) + tmp_112;\n
    g_40a518 = ((0 CONCAT g_40a510) * 0 + (0 CONCAT g_40a508) * (0 CONCAT 13836720750279075031) + (0 CONCAT g_40a500) * 0 + (0 CONCAT g_40a4f8) * (0 CONCAT 13836206207155685140) + (0 CONCAT g_40a4f0) * 0 + v21);\n
    *(&v7) = g_40a518;\n
    v6 = 0x40679544e06f4100;\n
    g_40a520 = g_40a528;\n
    g_40a528 = g_40a530;\n
    g_40a530 = g_40a538;\n
    tmp_105 = DivV(tmp_107, tmp_106);\n
    *(&g_40a538) = tmp_105;\n
    g_40a540 = g_40a548;\n
    g_40a548 = g_40a550;\n
    g_40a550 = g_40a558;\n
    g_40a558 =L Conv(128->64, (((0x0<64> CONCAT Load(addr=0x40a550<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0x4001c0db79ff4399<64>)) + (((0x0<64> CONCAT Load(addr=0x40a548<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0xbffb711f64ca2f0e<64>)) + (((0x0<64> CONCAT Load(addr=0x40a540<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0x3fdd06e585cbf46f<64>)) + ((((0x0<64> CONCAT Load(addr=0x40a528<32>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=0x40a530<32>, size=8, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008000000000000<64>)) + ((0x0<64> CONCAT Load(addr=0x40a520<32>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=0x40a538<32>, size=8, endness=Iend_LE))))))))<8>\n
    *(&v5) = g_40a558;\n
    g_40a560 = g_40a568;\n
    g_40a568 = g_40a570;\n
    g_40a570 = g_40a578;\n
    tmp_49 = DivV(tmp_51, tmp_50);\n
    v23 = tmp_49;\n
    g_40a578 = v23;\n
    g_40a580 = g_40a588;\n
    g_40a588 = g_40a590;\n
    g_40a590 = g_40a598;\n
    g_40a598 =L Conv(128->64, (((0x0<64> CONCAT Load(addr=0x40a590<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0x4001c0db79ff4399<64>)) + (((0x0<64> CONCAT Load(addr=0x40a588<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0xbffb711f64ca2f0e<64>)) + (((0x0<64> CONCAT Load(addr=0x40a580<32>, size=8, endness=Iend_LE)) * (0x0<64> CONCAT 0x3fdd06e585cbf46f<64>)) + ((((0x0<64> CONCAT Load(addr=0x40a568<32>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=0x40a570<32>, size=8, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008000000000000<64>)) + ((0x0<64> CONCAT Load(addr=0x40a560<32>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=0x40a578<32>, size=8, endness=Iend_LE))))))))<8>\n
    *(&v4) = g_40a598;\n
    *(&v23) = *(&v4);\n
    if (((CmpF(v23, *(&v5)) & 69 | ((CmpF(v23, *(&v5)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v13 = 1;\n
        return v13;\n
    }\n
    v13 = 0;\n
    return v13;\n
}\n
", "4219536:sub_406290": "int sub_406290()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (!cgc_random(&v2, 32))\n
        return sub_4019d0(&v2, 0x8);\n
    sub_402590(\"[[ERROR RANDOM FAILED]]\\n
\");\n
    cgc__terminate();\n
    return sub_4019d0(&v2, 0x8);\n
}\n
", "4219627:sub_4062eb": null, "4219632:sub_4062f0": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4062f0(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x264]\n
    unsigned int v1;  // [bp-0x260]\n
    unsigned int v2;  // [bp-0x140]\n
    struct_1 *v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8]\n
    struct struct_0 **v5;  // [bp-0x4]\n
    struct_0 *v6;  // [bp+0x0]\n
    unsigned int v8;  // [bp+0xc]\n
    char v9;  // [bp+0x17]\n
    unsigned int v10;  // [bp+0x18]\n
    char v11;  // [bp+0x1c]\n
    char v12;  // [bp+0x20]\n
    void* v13;  // [bp+0x120], Other Possible Types: unsigned int\n
    char v14;  // [bp+0x128]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v7 = 0x4347c000;\n
    v3 = v7;\n
    v2 = *(&v3->field_0) + v3->field_4 + v3->field_8 + v3->field_c;\n
    v2 &= 524287;\n
    v2 += 1452975630;\n
    v0 = \"[[RECEIVER STARTED -- TIMESTAMP: $d]]\\n
\";\n
    v1 = v2;\n
    sub_402590(v6);\n
    sub_406290();\n
    v6 = &v14;\n
    sub_404750(&v14);\n
    sub_404f80();\n
    v13 = 0;\n
    while (v13 < 0x9600)\n
    {\n
        v6 = 0;\n
        v7 = &v12;\n
        a0 = 0x100;\n
        v8 = &v11;\n
        if (cgc_receive(v7, a0, v8))\n
        {\n
            v6 = &\"[[CONNECTION CLOSED EARLY]]\\n
\";\n
            sub_402590(\"[[CONNECTION CLOSED EARLY]]\\n
\");\n
            v6 = 1;\n
            cgc__terminate();\n
        }\n
        if (*(&v11) < 1)\n
        {\n
            v6 = &\"[[RECEIVE ERROR]]\\n
\";\n
            sub_402590(\"[[RECEIVE ERROR]]\\n
\");\n
            v6 = 1;\n
            cgc__terminate();\n
        }\n
        for (v10 = 0; v10 < *(&v11); v10 += 1)\n
        {\n
            if (v13 >= 0x9600)\n
                break;\n
            v6 = (&v12)[v10];\n
            v9 = sub_405ca0((&v12)[v10]);\n
            v6 = &v14;\n
            v7 = v9;\n
            sub_4047c0(v7, a0);\n
            v13 += 1;\n
        }\n
    }\n
    sub_405950();\n
    sub_4056a0();\n
    return 0;\n
}\n
", "4220096:sub_4064c0": "int sub_4064c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4065e0();\n
    sub_4065f0();\n
    sub_406610();\n
    v0 = 1;\n
    if (!sub_406be0())\n
    {\n
        v0 = 7;\n
        sub_4072c0();\n
    }\n
    sub_407490();\n
    v1 = sub_4074c0;\n
    sub_4068b0();\n
    if (sub_4065b0())\n
    {\n
        v1 = 7;\n
        sub_4072c0();\n
    }\n
    sub_407050();\n
    if (sub_407150())\n
    {\n
        v1 = sub_406ff0;\n
        __setusermatherr();\n
    }\n
    sub_4070d0();\n
    sub_4070e0();\n
    sub_4070a0();\n
    v1 = sub_407040();\n
    _configthreadlocale();\n
    if (sub_407090())\n
        sub_4065d0();\n
    sub_407280();\n
    if (sub_407290())\n
    {\n
        v1 = 7;\n
        sub_4072c0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4220288:sub_406580": "int sub_406580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4070f0();\n
    return 0;\n
}\n
", "4220304:sub_406590": "int sub_406590()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4072a0();\n
    v0 = sub_407030();\n
    return _set_new_mode();\n
}\n
", "4220336:sub_4065b0": "int sub_4065b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_407000());\n
}\n
", "4220368:sub_4065d0": "int sub_4065d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4220384:sub_4065e0": "int sub_4065e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4220400:sub_4065f0": "int sub_4065f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_407020());\n
}\n
", "4220432:sub_406610": "int sub_406610()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_407010(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4220464:sub_406630": "int sub_406630()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_4062f0(v1, v2);\n
}\n
", "4220528:sub_406670": "extern char g_40988c;\n
extern char g_409894;\n
extern char g_409898;\n
extern struct_0 *g_4098a4;\n
extern char g_409f68;\n
extern unsigned int g_40a040;\n
extern unsigned int g_40a5a0;\n
\n
int sub_406670()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409f68;\n
    v13 = sub_4074f0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40a040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_406b50(1, g_40a040 ^ &v16, v22, v23))\n
        sub_4072c0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_406ad0();\n
    if (g_40a5a0 == 1)\n
    {\n
        v16 = 7;\n
        sub_4072c0();\n
    }\n
    else if (g_40a5a0)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40a5a0 = 1;\n
        v16 = &g_4098a4;\n
        v15 = &g_409898;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_406879;\n
        }\n
        else\n
        {\n
            v16 = &g_409894;\n
            v15 = &g_40988c;\n
            _initterm(*(&v17));\n
            g_40a5a0 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_406b20();\n
    v8 = sub_407180();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_4069a0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_407530(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_407190();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_4069a0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_406630();\n
    if (!sub_4071f0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_406ba0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_406879:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4220943:sub_40680f": "int sub_40680f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4220952:sub_406818": "int sub_406818()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4220979:sub_406833": "extern char g_406841;\n
\n
int sub_406833()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_406841;\n
    if (!sub_4071f0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4221042:sub_406872": "int sub_406872()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4221072:sub_406890": "int sub_406890()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406f00();\n
    return sub_406670();\n
}\n
", "4221088:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406890();\n
}\n
", "4221104:sub_4068b0": "int sub_4068b0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4068e0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4221152:sub_4068e0": "extern unsigned int g_40a5ac;\n
\n
int sub_4068e0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40a5ac;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40a5ac))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4221208:sub_406918": "int sub_406918()\n
{\n
}\n
", "4221264:sub_406950": "extern unsigned int g_40a5b8;\n
\n
int sub_406950(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40a5b8;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40a5b8);\n
    return v6;\n
}\n
", "4221298:sub_406972": "int sub_406972()\n
{\n
}\n
", "4221328:sub_406990": "int sub_406990()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4221344:sub_4069a0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_409f88;\n
extern unsigned int g_40a040;\n
\n
int sub_4069a0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409f88;\n
    v13 = sub_4074f0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40a040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_406e00(v6, g_40a040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_406e70(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4221549:sub_406a6d": "int sub_406a6d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4221558:sub_406a76": "int sub_406a76()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4221597:sub_406a9d": "int sub_406a9d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4221616:sub_406ab0": "int sub_406ab0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4221648:sub_406ad0": "extern unsigned int g_40a5a4;\n
\n
int sub_406ad0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_407d10();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_406990() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40a5a4 = v6;\n
        if (!g_40a5a4)\n
        {\n
            tmp_0 = 0;\n
            g_40a5a4 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40a5a4 = v6;\n
            v5 = g_40a5a4;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221728:sub_406b20": "extern void* g_40a5a4;\n
\n
int sub_406b20(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407d10();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40a5a4;\n
        g_40a5a4 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x406b3f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4221776:sub_406b50": "extern char g_40a5a8;\n
\n
int sub_406b50(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40a5a8 = 1;\n
    sub_407880();\n
    v4 = sub_4080b0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_4080b0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_4080c0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4221856:sub_406ba0": "extern char g_40a5a8;\n
\n
int sub_406ba0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40a5a8 && a0)\n
        return 1;\n
    sub_4080c0(v2);\n
    v3 = sub_4080c0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4221920:sub_406be0": "extern char g_40a5a9;\n
extern unsigned int g_40a5ac;\n
extern unsigned int g_40a5b0;\n
extern unsigned int g_40a5b4;\n
extern unsigned int g_40a5b8;\n
extern unsigned int g_40a5bc;\n
extern unsigned int g_40a5c0;\n
\n
int sub_406be0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40a5a9)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_4072c0();\n
    }\n
    if (sub_407d10() && !v10)\n
    {\n
        v8 = &g_40a5ac;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40a5b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_406ca6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40a5ac = v4;\n
    g_40a5b0 = v5;\n
    g_40a5b4 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40a5b8 = v1;\n
    g_40a5bc = v2;\n
    v11 = v3;\n
    g_40a5c0 = v11;\n
LABEL_406ca6:\n
    g_40a5a9 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4222144:sub_406cc0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_406cc0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_407d10() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_407530(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4222224:sub_406d10": "int sub_406d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406be0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4222256:sub_406d30": "int sub_406d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_407d10())\n
    {\n
        v3 = sub_407880();\n
    }\n
    else\n
    {\n
        v3 = sub_4065b0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_4065d0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4222304:sub_406d60": "extern char g_40a5ac;\n
\n
int sub_406d60()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_407d10())\n
    {\n
        v0 = &g_40a5ac;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_408100();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4222352:sub_406d90": "int sub_406d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4080d0(0);\n
    return sub_4080d0();\n
}\n
", "4222384:sub_406db0": "int sub_406db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_4080e0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_4080e0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_4080f0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4222432:sub_406de0": "char sub_406de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4080f0();\n
    sub_4080f0();\n
    return 1;\n
}\n
", "4222464:sub_406e00": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406e00(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4222576:sub_406e70": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406e70(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4222720:sub_406f00": "extern unsigned int g_40a040;\n
extern unsigned int g_40a080;\n
\n
int sub_406f00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40a040 != 3141592654)\n
    {\n
        v4 = g_40a040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40a080 = ~(g_40a040);\n
            return g_40a040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_406f80(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40a040 = v0;\n
    g_40a080 = ~(v0);\n
    return v4;\n
}\n
", "4222848:sub_406f80": "int sub_406f80()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4222960:sub_406ff0": "int sub_406ff0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222976:sub_407000": "int sub_407000()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222992:sub_407010": "int sub_407010()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223008:sub_407020": "int sub_407020()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4223024:sub_407030": "int sub_407030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223040:sub_407040": "int sub_407040()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223056:sub_407050": "extern void g_40a5c8;\n
\n
int sub_407050()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40a5c8);\n
}\n
", "4223088:sub_407070": "extern unsigned int g_40a5c8;\n
\n
int sub_407070()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40a5c8);\n
}\n
", "4223120:sub_407090": "char sub_407090()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4223136:sub_4070a0": "int sub_4070a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_4072c0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4223184:sub_4070d0": "int sub_4070d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4223200:sub_4070e0": "int sub_4070e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4223216:sub_4070f0": "int sub_4070f0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_407130();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_407140(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4223280:sub_407130": "extern char g_40a5d0;\n
\n
int sub_407130()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a5d0;\n
}\n
", "4223296:sub_407140": "extern char g_40a5d8;\n
\n
int sub_407140()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a5d8;\n
}\n
", "4223312:sub_407150": "extern unsigned int g_40a008;\n
\n
int sub_407150()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40a008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4223360:sub_407180": "extern char g_40a5e4;\n
\n
int sub_407180()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a5e4;\n
}\n
", "4223376:sub_407190": "extern char g_40a5e8;\n
\n
int sub_407190()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a5e8;\n
}\n
", "4223392:sub_4071a0": "extern void* g_40a5ec;\n
\n
int sub_4071a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40a5ec = 0;\n
    return v3;\n
}\n
", "4223408:sub_4071b0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4071b0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4223472:sub_4071f0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_4071f0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4223616:sub_407280": "int sub_407280()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223632:sub_407290": "int sub_407290()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407400();\n
}\n
", "4223648:sub_4072a0": "int sub_4072a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_407410);\n
}\n
", "4223680:sub_4072c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4072c0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_4071a0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_4071a0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4223705:sub_4072d9": "int sub_4072d9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4223705\n
}\n
", "4224000:sub_407400": "int sub_407400()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224016:sub_407410": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_407410(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4224144:sub_407490": "extern struct_0 *g_409f5c;\n
\n
int sub_407490()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409f5c;\n
    v3 = &g_409f5c;\n
    return &g_409f5c;\n
}\n
", "4224192:sub_4074c0": "extern struct_0 *g_409f64;\n
\n
int sub_4074c0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409f64;\n
    v3 = &g_409f64;\n
    return &g_409f64;\n
}\n
", "4224240:sub_4074f0": "extern unsigned int g_40a040;\n
\n
int sub_4074f0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_408110(*(v2));\n
    return _except_handler4_common(&g_40a040, sub_407d40, v2, a0, a1);\n
}\n
", "4224304:sub_407530": "int sub_407530()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4224320:sub_407540": "int sub_407540(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x407549;\n
    return tmp_4;\n
}\n
", "4224336:sub_407550": "int sub_407550(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4224368:sub_407570": "int sub_407570(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407550(v2);\n
}\n
", "4224400:sub_407590": "extern unsigned int g_40a5f0;\n
\n
int sub_407590(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_407540(&g_40a5f0, v3);\n
    return v0;\n
}\n
", "4224432:sub_4075b0": "extern char g_407530;\n
extern unsigned int g_40b000;\n
\n
int sub_4075b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_407570(&g_40b000) != sub_407530)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4224480:sub_4075e0": "extern char g_4097c0;\n
\n
int sub_4075e0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_4097c0;\n
    v1 = &g_4097c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4224544:sub_407620": "extern unsigned int g_40b008;\n
\n
int sub_407620(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_407570(&g_40b008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4224592:sub_407650": "extern unsigned int g_40a5f0;\n
\n
int sub_407650(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_407570(&g_40a5f0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_407530();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4224656:sub_407690": "int sub_407690()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4224672:sub_4076a0": "int sub_4076a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4075e0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4224691\n
}\n
", "4224704:sub_4076c0": "int sub_4076c0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4075e0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4224729:sub_4076d9": "int sub_4076d9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224729\n
}\n
", "4224736:sub_4076e0": "int sub_4076e0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4075e0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407620(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224784:sub_407710": "int sub_407710(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4075e0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407650(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224832:sub_407740": "extern char g_4097c0;\n
\n
int sub_407740(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_4097c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4224896:sub_407780": "int sub_407780(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407740(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4075e0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4224939\n
}\n
", "4224944:sub_4077b0": "int sub_4077b0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407740(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4075e0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4224993:sub_4077e1": "int sub_4077e1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224993\n
}\n
", "4225008:sub_4077f0": "int sub_4077f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4225024:sub_407800": "int sub_407800(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407740(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4075e0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407620(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4225088:sub_407840": "int sub_407840(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407740(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4075e0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407650(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4225152:sub_407880": "extern unsigned int g_40a040;\n
extern unsigned int g_40a088;\n
extern unsigned int g_40a08c;\n
extern unsigned int g_40a090;\n
extern unsigned int g_40a5f4;\n
extern unsigned int g_40a5f8;\n
extern unsigned int g_40a5fc;\n
\n
int sub_407880()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40a040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40a5f8 = 0;\n
    g_40a090 = g_40a090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_407d40();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_4079cb;\n
        g_40a5fc = g_40a5fc | 1;\n
    }\n
LABEL_4079cb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40a5fc = g_40a5fc | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40a5f8 = 1;\n
    g_40a090 = g_40a090 | 2;\n
    g_40a088 = g_40a088 & -2;\n
    g_40a08c = g_40a08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40a5f8 = 2;\n
        g_40a090 = g_40a090 | 4;\n
        g_40a088 = g_40a088 & -17;\n
        g_40a08c = g_40a08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40a5f8 = 3;\n
                g_40a090 = g_40a090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40a5f8 = 5;\n
                    g_40a090 = g_40a090 | 32;\n
                    g_40a088 = g_40a088 & -3;\n
                    g_40a08c = g_40a08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40a5f8 = 6;\n
                            g_40a090 = g_40a090 | 64;\n
                            g_40a088 = g_40a088 & -37;\n
                            g_40a08c = g_40a08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40a088 = g_40a088 & -16777217;\n
                    g_40a08c = g_40a08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40a5f4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40a088 = ~(v2 | 16777256) & g_40a088;\n
                        g_40a08c = ~(v3) & g_40a08c;\n
                        if (g_40a5f4 > 1)\n
                        {\n
                            g_40a088 = g_40a088 & -65;\n
                            g_40a08c = g_40a08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4226320:sub_407d10": "extern unsigned int g_40a094;\n
\n
int sub_407d10()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40a094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4226368:sub_407d40": "extern unsigned int g_40a040;\n
extern unsigned int g_40a080;\n
extern unsigned int g_40a608;\n
extern unsigned int g_40a60c;\n
extern unsigned int g_40a614;\n
extern unsigned int g_40a618;\n
extern unsigned int g_40a61c;\n
extern unsigned int g_40a658;\n
extern unsigned short g_40a6e4;\n
extern unsigned short g_40a6e8;\n
extern unsigned short g_40a6ec;\n
extern unsigned short g_40a6f0;\n
extern unsigned int g_40a6f4;\n
extern unsigned int g_40a6f8;\n
extern unsigned int g_40a6fc;\n
extern unsigned int g_40a700;\n
extern unsigned int g_40a704;\n
extern unsigned int g_40a708;\n
extern unsigned int g_40a70c;\n
extern unsigned int g_40a710;\n
extern unsigned short g_40a714;\n
extern unsigned int g_40a718;\n
extern unsigned int g_40a71c;\n
extern unsigned short g_40a720;\n
\n
int sub_407d40()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40a040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40a708 = v7;\n
        g_40a704 = v6;\n
        g_40a700 = v8;\n
        g_40a6fc = v9;\n
        g_40a6f8 = v10;\n
        g_40a6f4 = v11;\n
        g_40a720 = v12;\n
        g_40a714 = v13;\n
        g_40a6f0 = v14;\n
        g_40a6ec = v15;\n
        g_40a6e8 = v16;\n
        g_40a6e4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40a718 = v0;\n
        g_40a70c = v3;\n
        g_40a710 = *(&v4);\n
        g_40a71c = &v5;\n
        g_40a658 = 65537;\n
        g_40a614 = g_40a710;\n
        g_40a608 = 3221226505;\n
        g_40a60c = 1;\n
        g_40a618 = 1;\n
        g_40a61c = 2;\n
        v1 = g_40a040;\n
        v2 = g_40a080;\n
        sub_408080();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4226384:sub_407d50": "extern unsigned int g_40a608;\n
extern unsigned int g_40a60c;\n
extern unsigned int g_40a614;\n
extern unsigned int g_40a618;\n
extern unsigned int g_40a61c;\n
extern unsigned short g_40a6e4;\n
extern unsigned short g_40a6e8;\n
extern unsigned short g_40a6ec;\n
extern unsigned short g_40a6f0;\n
extern unsigned int g_40a6f4;\n
extern unsigned int g_40a6f8;\n
extern unsigned int g_40a6fc;\n
extern unsigned int g_40a700;\n
extern unsigned int g_40a704;\n
extern unsigned int g_40a708;\n
extern unsigned int g_40a70c;\n
extern unsigned int g_40a710;\n
extern unsigned short g_40a714;\n
extern unsigned int g_40a718;\n
extern unsigned int g_40a71c;\n
extern unsigned short g_40a720;\n
\n
int sub_407d50()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40a708 = v4;\n
        g_40a704 = v5;\n
        g_40a700 = v6;\n
        g_40a6fc = v7;\n
        g_40a6f8 = v8;\n
        g_40a6f4 = v9;\n
        g_40a720 = v10;\n
        g_40a714 = v11;\n
        g_40a6f0 = v12;\n
        g_40a6ec = v13;\n
        g_40a6e8 = v14;\n
        g_40a6e4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40a718 = v0;\n
        g_40a70c = v1;\n
        g_40a710 = *(&v2);\n
        g_40a71c = &v3;\n
        g_40a614 = g_40a710;\n
        g_40a608 = 3221226505;\n
        g_40a60c = 1;\n
        g_40a618 = 1;\n
        g_40a61c = v3;\n
        sub_408080();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4226409:sub_407d69": "int sub_407d69()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226409\n
}\n
", "4226608:sub_407e30": "extern unsigned int g_40a608;\n
extern unsigned int g_40a60c;\n
extern unsigned int g_40a614;\n
extern unsigned int g_40a618;\n
extern unsigned int g_40a61c;\n
extern char g_40a620;\n
extern unsigned short g_40a6e4;\n
extern unsigned short g_40a6e8;\n
extern unsigned short g_40a6ec;\n
extern unsigned short g_40a6f0;\n
extern unsigned int g_40a6f4;\n
extern unsigned int g_40a6f8;\n
extern unsigned int g_40a6fc;\n
extern unsigned int g_40a700;\n
extern unsigned int g_40a704;\n
extern unsigned int g_40a708;\n
extern unsigned int g_40a70c;\n
extern unsigned int g_40a710;\n
extern unsigned short g_40a714;\n
extern unsigned int g_40a718;\n
extern unsigned int g_40a71c;\n
extern unsigned short g_40a720;\n
\n
int sub_407e30()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1059209];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40a708 = v7;\n
        g_40a704 = v8;\n
        g_40a700 = v9;\n
        g_40a6fc = v10;\n
        g_40a6f8 = v11;\n
        g_40a6f4 = v12;\n
        g_40a720 = v13;\n
        g_40a714 = v14;\n
        g_40a6f0 = v15;\n
        g_40a6ec = v16;\n
        g_40a6e8 = v17;\n
        g_40a6e4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40a718 = v0;\n
        g_40a70c = v2;\n
        g_40a710 = *(&v3);\n
        g_40a71c = &v4;\n
        g_40a614 = g_40a710;\n
        g_40a608 = 3221226505;\n
        g_40a60c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40a618 = v5 + 1;\n
        g_40a61c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_40a620)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_408080();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4226633:sub_407e49": "int sub_407e49()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226633\n
}\n
", "4226912:sub_407f60": "int sub_407f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407d50(8);\n
}\n
", "4226955:sub_407f8b": "int sub_407f8b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226955\n
}\n
", "4227200:sub_408080": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_408080(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4227248:sub_4080b0": "char sub_4080b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227264:sub_4080c0": "char sub_4080c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227280:sub_4080d0": "char sub_4080d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227296:sub_4080e0": "char sub_4080e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227312:sub_4080f0": "char sub_4080f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227328:sub_408100": "int sub_408100()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227344:sub_408110": "extern unsigned int g_40a5f8;\n
\n
int sub_408110(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40a5f8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4227652:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4227658:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4227664:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4227670:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4227676:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4227682:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4227688:cgc_log": "int cgc_log()\n
{\n
    return ::kernel32.dll::cgc_log();\n
}\n
", "4227694:cgc_sqrt": "int cgc_sqrt()\n
{\n
    return ::kernel32.dll::cgc_sqrt();\n
}\n
", "4227700:cgc_random": "int cgc_random()\n
{\n
    return ::kernel32.dll::cgc_random();\n
}\n
", "4227706:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4227712:sub_408280": "int sub_408280(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4227718:sub_408286": "int sub_408286()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4227724:sub_40828c": "int sub_40828c()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4227730:sub_408292": "int sub_408292(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4227736:sub_408298": "int sub_408298(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4227742:sub_40829e": "int sub_40829e()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4227748:sub_4082a4": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4082a4(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4227754:sub_4082aa": "int sub_4082aa(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4227760:sub_4082b0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4082b0(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4227766:sub_4082b6": "int sub_4082b6(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4227772:sub_4082bc": "int sub_4082bc(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4227778:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4227784:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4227790:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4227796:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4227802:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4227808:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4227814:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4227820:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4227826:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4227832:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4227838:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4227844:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4227850:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4227856:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4227862:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4227868:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4227874:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4227880:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4227886:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4227892:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4227898:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4227904:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4227910:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4227916:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4227922:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4227928:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4227934:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4227940:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4227946:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4227952:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4227958:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4227964:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4227970:sub_408382": "int sub_408382()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4227976:sub_408388": "int sub_408388(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_log": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_random": null, "5242904:cgc_receive": null, "5242908:cgc_rint": null, "5242912:cgc_sqrt": null, "5242916:cgc_transmit": null, "5242920:GetCurrentProcess": null, "5242924:GetCurrentProcessId": null, "5242928:GetCurrentThreadId": null, "5242932:GetModuleHandleW": null, "5242936:GetStartupInfoW": null, "5242940:GetSystemTimeAsFileTime": null, "5242944:InitializeSListHead": null, "5242948:IsDebuggerPresent": null, "5242952:IsProcessorFeaturePresent": null, "5242956:QueryPerformanceCounter": null, "5242960:SetUnhandledExceptionFilter": null, "5242964:TerminateProcess": null, "5242968:UnhandledExceptionFilter": null, "5242972:__current_exception": null, "5242976:__current_exception_context": null, "5242980:__std_type_info_destroy_list": null, "5242984:_except_handler4_common": null, "5242988:memset": null, "5242992:__p___argc": null, "5242996:__p___argv": null, "5243000:__p__commode": null, "5243004:__setusermatherr": null, "5243008:_c_exit": null, "5243012:_cexit": null, "5243016:_configthreadlocale": null, "5243020:_configure_narrow_argv": null, "5243024:_controlfp_s": null, "5243028:_crt_at_quick_exit": null, "5243032:_crt_atexit": null, "5243036:_execute_onexit_table": null, "5243040:_exit": null, "5243044:_get_initial_narrow_environment": null, "5243048:_initialize_narrow_environment": null, "5243052:_initialize_onexit_table": null, "5243056:_initterm": null, "5243060:_initterm_e": null, "5243064:_register_onexit_function": null, "5243068:_register_thread_local_exe_atexit_callback": null, "5243072:_seh_filter_dll": null, "5243076:_seh_filter_exe": null, "5243080:_set_app_type": null, "5243084:_set_fmode": null, "5243088:_set_new_mode": null, "5243092:exit": null, "5243096:terminate": null, "6295596:UnresolvableCallTarget": null}