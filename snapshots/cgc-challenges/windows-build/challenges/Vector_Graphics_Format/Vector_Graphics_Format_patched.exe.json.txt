{"4198400:sub_401000": "int sub_401000(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0 * v5;\n
    v1 = sub_401050();\n
    v0 = v2;\n
    sub_401cf0(v1, 0);\n
    return v1;\n
}\n
", "4198472:sub_401048": null, "4198480:sub_401050": "extern struct_0 *g_408098;\n
\n
int sub_401050(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_0 *v1[2];  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct struct_0 *v6[2];  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v9 = &v10;\n
    if (v11 < 8)\n
    {\n
        v11 = 8;\n
    }\n
    else if ((v11 & 3))\n
    {\n
        v11 = (v11 >> 2) + 1;\n
        v11 *= 4;\n
    }\n
    v8 = &g_408098->field_0;\n
    while (true)\n
    {\n
        if (!v8)\n
            v8 = sub_4012d0();\n
        v7 = v8;\n
        v6[0] = v8 + (*(v7) & -0x4) - 4;\n
        if (*(v7) >= v11)\n
            break;\n
        v8 = v6[0];\n
    }\n
    v5 = v8 + 4;\n
    v4 = *(v7) - v11;\n
    *(v7) = v11;\n
    v12 = v7;\n
    *(v12) = *(v12) | 1;\n
    if (v4 >= 12)\n
    {\n
        v3 = v8 + v11 + 4;\n
        v2 = v3;\n
        *(v2) = v4 - 4;\n
        v1[0] = &v6[0];\n
        if (-4 + v2 + (*(v2) & -0x4) != v6)\n
        {\n
            sub_4018e0();\n
            cgc__terminate();\n
        }\n
        if (g_408098 == v8)\n
        {\n
            g_408098 = v2;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v2;\n
        }\n
        else\n
        {\n
            if (v1[1])\n
                *((-4 + &v1[1]->field_0 + (v1[1]->field_0 & -0x4))) = v3;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v3;\n
        }\n
        v13 = v7;\n
        *(v13) = *(v13) | 2;\n
    }\n
    else if (g_408098 == v8)\n
    {\n
        g_408098 = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v6[1])\n
            *((-4 + &v6[1]->field_0 + (v6[1]->field_0 & -0x4))) = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = v6[1];\n
    }\n
    v0 = v11;\n
    sub_401cf0(v8 + 4, 0);\n
    return v8 + 4;\n
}\n
", "4199112:sub_4012c8": null, "4199120:sub_4012d0": "extern struct_0 *g_408098;\n
\n
int sub_4012d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = v7 + 4;\n
    if ((v4 & 4095))\n
    {\n
        v4 = (v4 >> 12) + 1;\n
        v4 *= 0x1000;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(v4, 0))\n
        cgc__terminate();\n
    v2 = *(&v3);\n
    v1[0] = *(&v3) + v4 - 8;\n
    *(v2) = v4 - 4;\n
    v1[1] = 0;\n
    v1[0] = g_408098;\n
    g_408098 = v2;\n
    return v2;\n
}\n
", "4199293:sub_40137d": null, "4199296:sub_401380": "extern struct_0 *g_408098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_408098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_408098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_408098;\n
    v1[1] = 0;\n
    if (g_408098)\n
        *((&g_408098->field_0 + (g_408098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_408098 = v12;\n
    return v6;\n
}\n
", "4199728:sub_401530": "int sub_401530(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4199800:sub_401578": null, "4199808:sub_401580": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401580(char *v13, struct struct_1 **a0)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    char *v1;  // [bp-0x64]\n
    char *v2;  // [bp-0x60], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x58]\n
    char *v5;  // [bp-0x38], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0x34], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x30]\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    struct struct_1 **v14;  // eax\n
    struct struct_1 **v15;  // eax\n
    struct struct_1 **v16;  // eax\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    struct_0 *v20;  // eax\n
    unsigned int v21;  // eax\n
    char *v22;  // eax\n
    struct_0 *v23;  // eax\n
\n
    v11 = &v12;\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    while (true)\n
    {\n
        if (!*(v13))\n
        {\n
            v10 = v9;\n
            return v10;\n
        }\n
        if (*(v13) == 36)\n
            break;\n
        sub_401530(*(v13));\n
        v13 += 1;\n
        v9 += 1;\n
LABEL_4018c9:\n
    }\n
    v13 += 1;\n
    v0 = *(v13);\n
    if (!v0)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    if (v0 == 36)\n
    {\n
        sub_401530(36);\n
        goto LABEL_40189b;\n
    }\n
    if (v0 != 88)\n
    {\n
        if (v0 == 100)\n
        {\n
            v14 = a0;\n
            a0 = v14 + 1;\n
            v5 = &*(v14)->field_0;\n
            v6 = 0;\n
            if (v5 < 0)\n
            {\n
                v5 = -(v5);\n
                sub_401530(45);\n
                v9 += 1;\n
            }\n
            else\n
            {\n
                if (!v5)\n
                {\n
                    v6 = 1;\n
                    v7 = 48;\n
                }\n
            }\n
            while (v5)\n
            {\n
                v21 = v6;\n
                v6 = v21 + 1;\n
                (&v7)[v21] = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
                v22 = v5;\n
                v5 = (v22 >> 31 CONCAT v22) /m 10;\n
                if (v6 >= 32)\n
                    break;\n
            }\n
            while (true)\n
            {\n
                v23 = v6;\n
                v6 = v23 + 1;\n
                if (v23 <= 0)\n
                    break;\n
                sub_401530((&v7)[v6]);\n
                v9 += 1;\n
            }\n
            goto LABEL_40189b;\n
        }\n
        else if (v0 == 115)\n
        {\n
            v15 = a0;\n
            a0 = v15 + 1;\n
            v8 = &*(v15)->field_0;\n
            while (*(v8))\n
            {\n
                sub_401530(*(v8));\n
                v9 += 1;\n
                v8 += 1;\n
                if (!v8)\n
                    break;\n
            }\n
            goto LABEL_40189b;\n
        }\n
        else if (v0 != 120)\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
    }\n
    v16 = a0;\n
    a0 = v16 + 1;\n
    v2 = &*(v16)->field_0;\n
    v3 = 0;\n
    while (v2)\n
    {\n
        v1 = v2 & 15;\n
        v2 >>= 4;\n
        if (v1 < 10)\n
        {\n
            v17 = v3;\n
            v3 = v17 + 1;\n
            (&v4)[v17] = v1 + 48;\n
        }\n
        else if (*(v13) == 120)\n
        {\n
            v18 = v3;\n
            v3 = v18 + 1;\n
            (&v4)[v18] = v1 + 87;\n
        }\n
        else\n
        {\n
            v19 = v3;\n
            v3 = v19 + 1;\n
            (&v4)[v19] = v1 + 55;\n
        }\n
        if (v3 >= 32)\n
            break;\n
    }\n
    while (true)\n
    {\n
        v20 = v3;\n
        v3 = v20 + 1;\n
        if (v20 <= 0)\n
            break;\n
        sub_401530((&v4)[v3]);\n
        v9 += 1;\n
    }\n
LABEL_40189b:\n
    v13 += 1;\n
    goto LABEL_4018c9;\n
}\n
", "4200668:sub_4018dc": null, "4200672:sub_4018e0": "int sub_4018e0(char *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_401580(v4, v1);\n
    return v0;\n
}\n
", "4200720:sub_401910": "int sub_401910(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4200814:sub_40196e": null, "4200816:sub_401970": "int sub_401970(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200870:sub_4019a6": null, "4200880:sub_4019b0": null, "4200920:sub_4019d8": null, "4200928:sub_4019e0": null, "4200992:sub_401a20": "int sub_401a20(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = v3 + 32;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4201050:sub_401a5a": null, "4201056:sub_401a60": "int sub_401a60(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = v3 + -32;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4201114:sub_401a9a": null, "4201120:sub_401aa0": "int sub_401aa0(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v4] && !v0[a0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!v0[v4])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!v0[a0])\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (v0[v4] < v0[a0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (v0[v4] <= v0[a0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4201358:sub_401b8e": null, "4201360:sub_401b90": "int sub_401b90(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4201451:sub_401beb": null, "4201456:sub_401bf0": "int sub_401bf0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4201562:sub_401c5a": null, "4201568:sub_401c60": "int sub_401c60(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *(&v0[v3]) = *(&v0[a0]);\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    return v3;\n
}\n
", "4201712:sub_401cf0": "int sub_401cf0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *((v5 + v2)) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        *((v5 + v2)) = v1;\n
    }\n
    return v5;\n
}\n
", "4201881:sub_401d99": null, "4201888:sub_401da0": "int sub_401da0(char *v7)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; sub_401910(*(v7)); v7 += 1);\n
    for (v1 = 0; *(v7); v7 += 1)\n
    {\n
        if (*(v7) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v7) != 43)\n
            {\n
                if (!sub_401970(*(v7)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v7) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = v3 * v2;\n
    return v4;\n
}\n
", "4202269:sub_401f1d": null, "4202272:sub_401f20": "int sub_401f20(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[v3]; v0 += 1);\n
    return v0;\n
}\n
", "4202327:sub_401f57": null, "4202336:sub_401f60": "int sub_401f60(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < 0)\n
    {\n
        v0 = -(v3);\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4202384:sub_401f90": "extern unsigned int g_40809c;\n
extern unsigned int g_4080a0;\n
\n
int sub_401f90(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    g_40809c = v2;\n
    g_4080a0 = a0;\n
    return a0;\n
}\n
", "4202411:sub_401fab": null, "4202416:sub_401fb0": "extern unsigned int g_40809c;\n
\n
int sub_401fb0()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1;\n
    v2 = cgc_receive(g_40809c, &v1, 1, &v0);\n
    if (v2)\n
    {\n
        cgc__terminate();\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4202498:sub_402002": null, "4202512:sub_402010": "extern unsigned int g_40809c;\n
\n
int sub_402010()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1;\n
    v2 = cgc_receive(g_40809c, &v1, 2, &v0);\n
    if (v2)\n
    {\n
        cgc__terminate();\n
        return *(&v1);\n
    }\n
    return *(&v1);\n
}\n
", "4202594:sub_402062": null, "4202608:sub_402070": "extern unsigned int g_40809c;\n
\n
int sub_402070()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1;\n
    v2 = cgc_receive(g_40809c, &v1, 4, &v0);\n
    if (v2)\n
    {\n
        cgc__terminate();\n
        return *(&v1);\n
    }\n
    return *(&v1);\n
}\n
", "4202689:sub_4020c1": null, "4202704:sub_4020d0": "extern unsigned int g_4080a0;\n
\n
int sub_4020d0(char v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 1;\n
    v5 = cgc_transmit(g_4080a0, &v4, 1, &v0);\n
    v1 = v5;\n
    if (v5)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4202785:sub_402121": null, "4202800:sub_402130": "extern unsigned int g_4080a0;\n
\n
int sub_402130(unsigned short v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v5 = cgc_transmit(g_4080a0, &v4, 2);\n
    v1 = v5;\n
    if (v5)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4202878:sub_40217e": null, "4202880:sub_402180": "extern unsigned int g_4080a0;\n
\n
int sub_402180(unsigned int v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v5 = cgc_transmit(g_4080a0, &v4, 4);\n
    v1 = v5;\n
    if (v5)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4202960:sub_4021d0": "int sub_4021d0(unsigned int *v2, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    *((v2 + *(a0))) = a1;\n
    v3 = a0;\n
    *(v3) = *(v3) + 4;\n
    return 4;\n
}\n
", "4203003:sub_4021fb": null, "4203008:sub_402200": "int sub_402200(unsigned short *v2, unsigned int *a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    *((v2 + *(a0))) = a1;\n
    v3 = a0;\n
    *(v3) = *(v3) + 2;\n
    return 2;\n
}\n
", "4203054:sub_40222e": null, "4203056:sub_402230": "int sub_402230(char *v2, unsigned int *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    v2[*(a0)] = a1;\n
    v3 = a0;\n
    *(v3) = *(v3) + 1;\n
    return 1;\n
}\n
", "4203099:sub_40225b": null, "4203104:sub_402260": "int sub_402260(struct struct_0 **v30, unsigned int *a0, char *a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    char v1;  // [bp-0x5f]\n
    char v2;  // [bp-0x5e]\n
    char v3;  // [bp-0x5d]\n
    void* v4;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x58], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x54]\n
    unsigned int v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4a]\n
    unsigned int v9;  // [bp-0x46]\n
    unsigned int v10;  // [bp-0x42]\n
    unsigned short v11;  // [bp-0x3e]\n
    unsigned short v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x3a]\n
    unsigned int v14;  // [bp-0x36]\n
    unsigned int v15;  // [bp-0x32]\n
    unsigned int v16;  // [bp-0x2e]\n
    void* v17;  // [bp-0x2a]\n
    void* v18;  // [bp-0x26]\n
    unsigned short v19;  // [bp-0x22]\n
    unsigned int v20;  // [bp-0x20]\n
    unsigned short v21;  // [bp-0x1c]\n
    unsigned short v22;  // [bp-0x1a]\n
    unsigned int v23;  // [bp-0x18]\n
    void* v24;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0x10]\n
    unsigned int v26;  // [bp-0xc]\n
    char *v27;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v28;  // [bp-0x4]\n
    char v29;  // [bp+0x0]\n
    unsigned int v31;  // ecx\n
\n
    v28 = &v29;\n
    if (a2 && a3)\n
    {\n
        if (a1)\n
        {\n
            v23 = 54;\n
            v19 = 19792;\n
            v21 = 0;\n
            v22 = 0;\n
            v7 = a2 * 3;\n
            if ((v7 & 3))\n
                v7 = (v7 & -0x4) + 4;\n
            v26 = a3 * v7;\n
            v20 = v26 + 54;\n
            if ((v20 & 3))\n
                v20 = (v20 & -0x4) + 4;\n
            v10 = a3;\n
            v9 = a2;\n
            v8 = 40;\n
            v12 = 24;\n
            v13 = 0;\n
            v11 = 1;\n
            v17 = 0;\n
            v18 = 0;\n
            v15 = 2835;\n
            v16 = 2835;\n
            v14 = v26;\n
            *(v30) = sub_401050(v20);\n
            *(a0) = v20;\n
            v6 = &*(v30)->field_0;\n
            v5 = 0;\n
            sub_401c60(v6 + v5, &v19, 14);\n
            v5 += 14;\n
            sub_401c60(v6 + v5, &v8, 40);\n
            v5 += 40;\n
            for (v25 = a3; v25 > 0; v25 -= 1)\n
            {\n
                v4 = 0;\n
                for (v24 = 0; v24 < a2; v24 += 1)\n
                {\n
                    v0 = a2 * 3 * (v25 - 1);\n
                    v3 = a1[2 + 3 * v24 + v0];\n
                    v2 = a1[1 + 3 * v24 + v0];\n
                    v1 = a1[3 * v24 + v0];\n
                    sub_402230(v6, &v5, v3);\n
                    sub_402230(v6, &v5, v2);\n
                    sub_402230(v6, &v5, v1);\n
                    v4 += 3;\n
                }\n
                for (; (v4 & 3); v4 += 1)\n
                {\n
                    v31 = v5;\n
                    v5 = v31 + 1;\n
                    v6[v31] = 0;\n
                }\n
            }\n
            v27 = v5;\n
            return v27;\n
        }\n
        else\n
        {\n
            v27 = -1;\n
            return v27;\n
        }\n
    }\n
    v27 = -1;\n
    return v27;\n
}\n
", "4203782:sub_402506": null, "4203792:sub_402510": "int sub_402510(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 54;\n
    v0 = v4 * 3;\n
    if ((v0 >> 31 CONCAT v0) /m 4 >> 32)\n
        v0 = (v0 & -0x4) + 4;\n
    v1 += a0 * v0;\n
    return v1;\n
}\n
", "4203888:sub_402570": "int sub_402570(unsigned int v15, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    char *v1;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x38]\n
    char *v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    char *v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    char *v8;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x1c]\n
    unsigned short v10;  // [bp-0x16]\n
    char v11;  // [bp-0x14]\n
    void* v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0x4]\n
    char v14;  // [bp+0x0]\n
\n
    v13 = &v14;\n
    v12 = 0;\n
    sub_401f90(0, 1);\n
    v10 = sub_402010();\n
    if (v10 > 20000)\n
        cgc__terminate();\n
    v9 = sub_401050(20000);\n
    v8 = 0;\n
    for (v8 = 0; v8 < v10; v8 += 1)\n
    {\n
        v9[v8] = sub_401fb0();\n
    }\n
    if (v8 != v10)\n
        cgc__terminate();\n
    if (sub_4027f0(v9, v10))\n
        cgc__terminate();\n
    sub_401380(v9);\n
    v7 = sub_402cd0();\n
    if (v7 <= 0)\n
        cgc__terminate();\n
    v5 = v7;\n
    v6 = sub_401050(v5);\n
    if (sub_402d20(*(&v11), v6))\n
        cgc__terminate();\n
    v0 = sub_4027c0();\n
    if (sub_402260(&v3, &v4, v6, sub_402790(), v0) <= 0)\n
        cgc__terminate();\n
    sub_401380(v6);\n
    v2 = v4;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        sub_4020d0(*((v3 + v1)));\n
    }\n
    sub_401380(v3);\n
    sub_402c40();\n
    return 0;\n
}\n
", "4204432:sub_402790": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
int sub_402790(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v4->field_8;\n
    return v1;\n
}\n
", "4204480:sub_4027c0": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_0;\n
\n
int sub_4027c0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v4->field_6;\n
    return v1;\n
}\n
", "4204528:sub_4027f0": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char field_10;\n
    char padding_11[3];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    char field_a;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_4027f0(struct_2 *v13, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x25]\n
    struct_0 *v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x20]\n
    struct_2 *v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    struct_2 *v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    struct_0 *v14;  // eax\n
    struct_2 *v15;  // ecx\n
    unsigned int v16;  // edx\n
    struct_0 *v17;  // eax\n
    struct_2 *v18;  // ecx\n
    unsigned int v19;  // edx\n
    struct_0 *v20;  // eax\n
    struct_2 *v21;  // ecx\n
    unsigned int v22;  // edx\n
    struct_0 *v23;  // eax\n
    struct_2 *v24;  // ecx\n
    unsigned int v25;  // edx\n
\n
    v11 = &v12;\n
    v7 = -1;\n
    v5 = 0;\n
    *(a1) = 0;\n
    v8 = 0;\n
    v6 = v13;\n
    if (v8 + 1 > a0)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (*(&v6->field_0) != 2016610569)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (v6->field_4 == 1)\n
    {\n
        if (v6->field_6 <= 0x200 && v6->field_8 <= 0x200)\n
        {\n
            if (v6->field_a <= 6)\n
            {\n
                v8 += 1;\n
                v5 = sub_401050(24);\n
                v5->field_c = 0;\n
                v5->field_10 = 0;\n
                v5->field_14 = 0;\n
                sub_401c60(v5, v6, 11);\n
                v4 = 0;\n
                do\n
                {\n
                    v3 = 0;\n
                    v2 = &(&v13->field_0)[v8];\n
                    if (v8 + 4 > a0)\n
                    {\n
                        v7 = -1;\n
                        goto LABEL_402bf9;\n
                    }\n
                    v8 += 4;\n
                    v1 = sub_401050(20);\n
                    v1->field_10 = 0;\n
                    if (v4)\n
                        v4->field_10 = v1;\n
                    else\n
                        v5->field_c = v1;\n
                    v4 = v1;\n
                    v1->field_0 = *(&v2);\n
                    v0 = *(v2);\n
                    if (!v0)\n
                    {\n
                        if (v8 + 8 <= a0)\n
                        {\n
                            v14 = v1;\n
                            v15 = v13;\n
                            v16 = v8;\n
                            v14->field_4 = *(&(&v15->field_0)[v16]);\n
                            *(&v14->field_8) = *(&(&v15->field_0)[v16 + 4]);\n
                            v8 += 8;\n
                        }\n
                        else\n
                        {\n
                            v7 = -1;\n
                            goto LABEL_402bf9;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (v0 == 1)\n
                        {\n
                            if (v8 + 12 <= a0)\n
                            {\n
                                v17 = v1;\n
                                v18 = v13;\n
                                v19 = v8;\n
                                v17->field_4 = *(&(&v18->field_0)[v19]);\n
                                *(&v17->field_8) = *(&(&v18->field_0)[v19 + 4]);\n
                                v17->field_c = *(&(&v18->field_0)[v19 + 8]);\n
                                v8 += 12;\n
                            }\n
                            else\n
                            {\n
                                v7 = -1;\n
                                goto LABEL_402bf9;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            if (v0 == 2)\n
                            {\n
                                if (v8 + 8 <= a0)\n
                                {\n
                                    v20 = v1;\n
                                    v21 = v13;\n
                                    v22 = v8;\n
                                    v20->field_4 = *(&(&v21->field_0)[v22]);\n
                                    *(&v20->field_8) = *(&(&v21->field_0)[v22 + 4]);\n
                                    v8 += 8;\n
                                }\n
                                else\n
                                {\n
                                    v7 = -1;\n
                                    goto LABEL_402bf9;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                if (v0 == 3)\n
                                {\n
                                    if (v8 + 6 <= a0)\n
                                    {\n
                                        v23 = v1;\n
                                        v24 = v13;\n
                                        v25 = v8;\n
                                        v23->field_4 = *(&(&v24->field_0)[v25]);\n
                                        v23->field_8 = *(&(&v24->field_0)[v25 + 4]);\n
                                        v8 += 6;\n
                                    }\n
                                    else\n
                                    {\n
                                        v7 = -1;\n
                                        goto LABEL_402bf9;\n
                                    }\n
                                }\n
                                else\n
                                {\n
                                    if (v0 == 100)\n
                                    {\n
                                        v3 = 1;\n
                                    }\n
                                    else\n
                                    {\n
                                        v7 = -1;\n
                                        goto LABEL_402bf9;\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                } while (!v3);\n
                if (v8 + 1 > a0)\n
                {\n
                    v7 = -1;\n
                }\n
                else\n
                {\n
                    v5->field_10 = (&v13->field_0)[v8];\n
                    v8 += 1;\n
                    if (v5->field_10 > 0)\n
                    {\n
                        v5->field_14 = sub_401050(v5->field_10 * 3);\n
                        v9 = 0;\n
                        while (v9 < v5->field_10)\n
                        {\n
                            if (v8 + 3 > a0)\n
                            {\n
                                v7 = -1;\n
                                goto LABEL_402bf9;\n
                            }\n
                            else\n
                            {\n
                                sub_401c60(v5->field_14 + v9 * 3, &(&v13->field_0)[v8], 3);\n
                                v8 += 3;\n
                                v9 += 1;\n
                            }\n
                        }\n
                    }\n
                    v7 = 0;\n
                }\n
LABEL_402bf9:\n
                if (v5 && v7)\n
                    sub_402c40();\n
                if (!v7)\n
                    *(a1) = v5;\n
                v10 = v7;\n
                return v10;\n
            }\n
            else\n
            {\n
                v10 = -1;\n
                return v10;\n
            }\n
        }\n
        v10 = -1;\n
        return v10;\n
    }\n
    else\n
    {\n
        v10 = -2;\n
        return v10;\n
    }\n
}\n
", "4205625:sub_402c39": null, "4205632:sub_402c40": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
    char padding_10[4];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int sub_402c40(struct_1 *v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
        return v4;\n
    if (v4->field_c)\n
    {\n
        for (v1 = v4->field_c; v1; v1 = v0)\n
        {\n
            v0 = *((v1 + 16));\n
            sub_401380(v1);\n
        }\n
    }\n
    if (!v4->field_14)\n
        return sub_401380(v4);\n
    sub_401380(v4->field_14);\n
}\n
", "4205767:sub_402cc7": null, "4205776:sub_402cd0": "int sub_402cd0(unsigned short v5[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = v5[3] * v5[4];\n
    v0 = v1 * 3;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4205848:sub_402d18": null, "4205856:sub_402d20": "typedef struct struct_1 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    char field_a;\n
    char padding_b[1];\n
    struct struct_0 *field_c;\n
    char field_10;\n
    char padding_11[3];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int sub_402d20(struct_1 *v19, char *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    int tmp_3;  // tmp #3\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned short v3;  // [bp-0x4c]\n
    char v4;  // [bp-0x4a]\n
    char v5;  // [bp-0x49]\n
    struct_0 *v6;  // [bp-0x48], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x41]\n
    unsigned short *v8;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x3c]\n
    char v10;  // [bp-0x22]\n
    char v11;  // [bp-0x21]\n
    unsigned short v12;  // [bp-0x20]\n
    unsigned short v13;  // [bp-0x1e]\n
    unsigned short *v14;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
\n
    v17 = &v18;\n
    v8 = 0;\n
    v7 = 0;\n
    if (v19 && a0 && a1)\n
    {\n
        v13 = v19->field_8;\n
        v12 = v19->field_6;\n
        v15 = v12 * v13;\n
        v11 = v19->field_a;\n
        for (v10 = 0; v10 < v11; v10 += 1)\n
        {\n
            (&v9)[v10] = sub_401050(v15 * 2);\n
            for (v14 = 0; v14 < v15; v14 += 1)\n
            {\n
                *(((&v9)[v10] + v14 * 2)) = 65535;\n
            }\n
        }\n
        v6 = v19->field_c;\n
        while (true)\n
        {\n
            if (!v6)\n
            {\n
                v8 = sub_401050(v15 * 2);\n
                for (v14 = 0; v14 < v15; v14 += 1)\n
                {\n
                    *((v8 + v14 * 2)) = 65535;\n
                }\n
                for (v10 = 0; v10 < v11; v10 += 1)\n
                {\n
                    for (v14 = 0; v14 < v15; v14 += 1)\n
                    {\n
                        if (*(((&v9)[v10] + (v14 << 1))) != 65535)\n
                            *((v8 + v14 * 2)) = *(((&v9)[v10] + v14 * 2));\n
                    }\n
                }\n
                if (*(a1) < v15 * 3)\n
                {\n
                    v7 = 255;\n
                    break;\n
                }\n
                else\n
                {\n
                    v2 = 0;\n
                    v14 = 0;\n
                    while (true)\n
                    {\n
                        if (v14 >= v15)\n
                        {\n
                            v7 = 0;\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            if (*((v8 + (v14 << 1))) == 65535)\n
                            {\n
                                a0[v2] = 0;\n
                                a0[1 + v2] = 0;\n
                                a0[2 + v2] = 0;\n
                            }\n
                            else if (*((v8 + (v14 << 1))) < v19->field_10)\n
                            {\n
                                a0[v2] = *((v19->field_14 + *((v8 + v14 * 2)) * 3));\n
                                a0[1 + v2] = *((v19->field_14 + *((v8 + v14 * 2)) * 3 + 1));\n
                                a0[2 + v2] = *((v19->field_14 + *((v8 + v14 * 2)) * 3 + 2));\n
                            }\n
                            else\n
                            {\n
                                v7 = 255;\n
                                break;\n
                            }\n
                            v2 += 3;\n
                            v14 += 1;\n
                        }\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                v5 = *((v6 + 1));\n
                v4 = *((v6 + 2));\n
                v3 = *((v6 + 3));\n
                if (v5 >= v11)\n
                {\n
                    v7 = 255;\n
                    break;\n
                }\n
                else if (v4 >= v19->field_10)\n
                {\n
                    v7 = 255;\n
                    break;\n
                }\n
                else\n
                {\n
                    v1 = *(v6);\n
                    if (!v1)\n
                    {\n
                        v0 = v12;\n
                        sub_403250(v6 + 4, (&v9)[v5], v3, v4, v13);\n
                    }\n
                    else\n
                    {\n
                        v20 = v1;\n
                        tmp_3 = v20;\n
                        v21 = v20 - 1;\n
                        if (tmp_3 == 1)\n
                        {\n
                            *(&v21) = v12;\n
                            v0 = v21;\n
                            sub_4034e0(v6 + 4, (&v9)[v5], v3, v4, v13);\n
                        }\n
                        else\n
                        {\n
                            v22 = v1;\n
                            tmp_3 = v22;\n
                            v23 = v22 - 2;\n
                            if (tmp_3 == 2)\n
                            {\n
                                *(&v23) = v12;\n
                                v0 = v23;\n
                                sub_403c10(v6 + 4, (&v9)[v5], v3, v4, v13);\n
                            }\n
                            else\n
                            {\n
                                v24 = v1;\n
                                tmp_3 = v24;\n
                                v25 = v24 - 3;\n
                                if (tmp_3 == 3)\n
                                {\n
                                    *(&v25) = v12;\n
                                    v0 = v25;\n
                                    sub_403d60(v6 + 4, (&v9)[v5], v3, v4, v13);\n
                                }\n
                                else if (v1 != 100)\n
                                {\n
                                    v7 = 255;\n
                                    break;\n
                                }\n
                            }\n
                        }\n
                    }\n
                    v6 = v6->field_10;\n
                }\n
            }\n
        }\n
        if (v8)\n
            sub_401380(v8);\n
        for (v10 = 0; v10 < v11; v10 += 1)\n
        {\n
            if ((&v9)[v10])\n
                sub_401380((&v9)[v10]);\n
        }\n
        v16 = v7;\n
        return v16;\n
    }\n
    v16 = -1;\n
    return v16;\n
}\n
", "4207178:sub_40324a": null, "4207184:sub_403250": "int sub_403250(unsigned short v8[4], unsigned short *a0, char a1, char a2, unsigned short a3, unsigned short a4)\n
{\n
    unsigned short v0;  // [bp-0x18]\n
    unsigned short v1;  // [bp-0x16]\n
    unsigned short v2;  // [bp-0x14]\n
    unsigned short v3;  // [bp-0x12]\n
    unsigned short v4;  // [bp-0x10]\n
    unsigned short v5;  // [bp-0xe]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned short v9[4];  // eax, Other Possible Types: unsigned int\n
\n
    v6 = &v7;\n
    if (!v8)\n
        return v8;\n
    v3 = v8[0];\n
    v2 = v8[1];\n
    v1 = v8[0] + v8[2];\n
    v0 = v8[1] + v8[3];\n
    v9 = v3;\n
    if (v9 >= a3)\n
        return v9;\n
    v9 = v2;\n
    if (v9 < a4)\n
    {\n
        v9 = v1;\n
        if (v9 < a3)\n
        {\n
            v9 = v0;\n
            if (v9 < a4)\n
            {\n
                v9 = v3;\n
                if (v9 > v1)\n
                    return v3;\n
                v9 = v2;\n
                if (v9 > v0)\n
                    return v2;\n
                v5 = v3;\n
                for (v4 = v2; v5 < v1; v5 += 1)\n
                {\n
                    a0[a3 * v4 + v5] = a2;\n
                }\n
                for (; v4 < v0; v4 += 1)\n
                {\n
                    a0[a3 * v4 + v5] = a2;\n
                }\n
                for (; v5 > v3; v5 -= 1)\n
                {\n
                    a0[a3 * v4 + v5] = a2;\n
                }\n
                for (; v4 > v2; v4 -= 1)\n
                {\n
                    a0[a3 * v4 + v5] = a2;\n
                }\n
                v9 = a1 & 1;\n
                if (!v9)\n
                    return a1 & 1;\n
                v5 = v3 + 1;\n
                while (true)\n
                {\n
                    v9 = v5;\n
                    if (v9 >= v1)\n
                        break;\n
                    for (v4 = v2 + 1; v4 < v0; v4 += 1)\n
                    {\n
                        a0[a3 * v4 + v5] = a2;\n
                    }\n
                    v5 += 1;\n
                }\n
                return v5;\n
            }\n
        }\n
    }\n
}\n
", "4207837:sub_4034dd": null, "4207840:sub_4034e0": "int sub_4034e0(unsigned short v50[6], unsigned int a0, char a1, char a2, unsigned short a3, unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x84]\n
    unsigned short v1;  // [bp-0x7e]\n
    unsigned short v2;  // [bp-0x7c]\n
    unsigned short v3;  // [bp-0x7a]\n
    unsigned short v4;  // [bp-0x78]\n
    unsigned short v5;  // [bp-0x76]\n
    unsigned short v6;  // [bp-0x74]\n
    unsigned short v7;  // [bp-0x72]\n
    unsigned int v8;  // [bp-0x70]\n
    unsigned int v9;  // [bp-0x6c]\n
    unsigned short v10;  // [bp-0x66]\n
    unsigned int v11;  // [bp-0x64]\n
    unsigned int v12;  // [bp-0x60]\n
    unsigned short v13;  // [bp-0x5a]\n
    unsigned short v14;  // [bp-0x58]\n
    unsigned short v15;  // [bp-0x56]\n
    unsigned short v16;  // [bp-0x54]\n
    unsigned short v17;  // [bp-0x52]\n
    unsigned short v18;  // [bp-0x50]\n
    unsigned short v19;  // [bp-0x4e]\n
    unsigned short v20;  // [bp-0x4c]\n
    unsigned short v21;  // [bp-0x4a]\n
    unsigned short v22;  // [bp-0x48]\n
    unsigned short v23;  // [bp-0x46]\n
    unsigned short v24;  // [bp-0x44]\n
    unsigned short v25;  // [bp-0x42]\n
    void* v26;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v27;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned short v28;  // [bp-0x38]\n
    unsigned short v29;  // [bp-0x36]\n
    unsigned short v30;  // [bp-0x34]\n
    unsigned short v31;  // [bp-0x32]\n
    unsigned short v32;  // [bp-0x30]\n
    unsigned short v33;  // [bp-0x2e]\n
    unsigned short v34;  // [bp-0x2c]\n
    unsigned short v35;  // [bp-0x2a]\n
    unsigned short v36;  // [bp-0x28]\n
    unsigned short v37;  // [bp-0x26]\n
    unsigned short v38;  // [bp-0x24]\n
    unsigned short v39;  // [bp-0x22]\n
    unsigned short v40;  // [bp-0x20]\n
    unsigned short v41;  // [bp-0x1e]\n
    unsigned short v42;  // [bp-0x1c]\n
    unsigned short v43;  // [bp-0x1a]\n
    unsigned short v44;  // [bp-0x18]\n
    unsigned short v45;  // [bp-0x16]\n
    unsigned short v46;  // [bp-0x14]\n
    unsigned short v47;  // [bp-0x12]\n
    unsigned int v48;  // [bp-0x4]\n
    char v49;  // [bp+0x0]\n
    unsigned int v51;  // eax\n
    unsigned short v52;  // di\n
    unsigned short v53;  // bx\n
    unsigned int v54;  // ebx\n
    unsigned int v55;  // edi\n
    unsigned short v56;  // di\n
    unsigned short v57;  // bx\n
    unsigned short v58;  // di\n
    unsigned short v59;  // bx\n
    unsigned int v60;  // eax\n
    unsigned int v62;  // eax\n
    unsigned int v64;  // edi\n
    unsigned short v65;  // bx\n
    unsigned int v66;  // ebx\n
    unsigned int v67;  // edi\n
    unsigned short v68;  // bx\n
    unsigned int v69;  // edi\n
    unsigned short v70;  // bx\n
    unsigned int v71;  // ebx\n
    unsigned int v72;  // eax\n
    unsigned int v74;  // eax\n
    unsigned int v76;  // edi\n
\n
    v48 = &v49;\n
    if (!v50)\n
        return v50;\n
    v47 = v50[0];\n
    v46 = v50[1];\n
    v45 = v50[2];\n
    v44 = v50[3];\n
    v43 = v50[4];\n
    v42 = v50[5];\n
    v51 = v47;\n
    if (v51 >= a3)\n
        return v51;\n
    v51 = v46;\n
    if (v51 < a4)\n
    {\n
        v51 = v45;\n
        if (v51 < a3)\n
        {\n
            v51 = v44;\n
            if (v51 < a4)\n
            {\n
                v51 = v43;\n
                if (v51 < a3)\n
                {\n
                    v51 = v42;\n
                    if (v51 < a4)\n
                    {\n
                        if ((a1 & 1))\n
                        {\n
                            if (v46 > v44)\n
                            {\n
                                v41 = v46;\n
                                v46 = v44;\n
                                v44 = v41;\n
                                v40 = v47;\n
                                v47 = v45;\n
                                v45 = v40;\n
                            }\n
                            if (v44 > v42)\n
                            {\n
                                v39 = v44;\n
                                v44 = v42;\n
                                v42 = v39;\n
                                v38 = v45;\n
                                v45 = v43;\n
                                v43 = v38;\n
                            }\n
                            if (v46 > v44)\n
                            {\n
                                v37 = v46;\n
                                v46 = v44;\n
                                v44 = v37;\n
                                v36 = v47;\n
                                v47 = v45;\n
                                v45 = v36;\n
                            }\n
                            if (v46 != v42)\n
                            {\n
                                v33 = v43 - v47;\n
                                v32 = v42 - v46;\n
                                v31 = v43 - v45;\n
                                v30 = v42 - v44;\n
                                v29 = v44 - v46;\n
                                v28 = v45 - v47;\n
                                v27 = 0;\n
                                v26 = 0;\n
                                if (v44 == v42)\n
                                    v25 = v44;\n
                                else\n
                                    v25 = v44 - 1;\n
                                if (v46 == v44)\n
                                {\n
                                    v23 = v47;\n
                                    v22 = v45;\n
                                    if (v23 > v22)\n
                                    {\n
                                        v21 = v23;\n
                                        v23 = v22;\n
                                        v22 = v21;\n
                                    }\n
                                    v13 = a4;\n
                                    v67 = v23;\n
                                    *(&v67) = v22 - v67;\n
                                    v68 = v46;\n
                                    sub_4043d0(v23, v66, v67, a0, a2, a3);\n
                                    v24 = v44;\n
                                }\n
                                else\n
                                {\n
                                    for (v24 = v46; v24 <= v25; v24 += 1)\n
                                    {\n
                                        v11 = v47;\n
                                        v60 = v26;\n
                                        v20 = v11 + ((v60 >> 31 CONCAT v60) /m v32);\n
                                        v12 = v47;\n
                                        v62 = v27;\n
                                        v19 = v12 + ((v62 >> 31 CONCAT v62) /m v29);\n
                                        v26 = v33 + v26;\n
                                        v27 = v28 + v27;\n
                                        if (v19 > v20)\n
                                        {\n
                                            v18 = v19;\n
                                            v19 = v20;\n
                                            v20 = v18;\n
                                        }\n
                                        v10 = a4;\n
                                        v64 = v19;\n
                                        *(&v64) = v20 - v64;\n
                                        v65 = v24;\n
                                        sub_4043d0(v19, ebx<4>, v64, a0, a2, a3);\n
                                    }\n
                                }\n
                                v26 = (v24 - v46) * v33;\n
                                v27 = (v24 - v44) * v31;\n
                                while (true)\n
                                {\n
                                    v51 = v24;\n
                                    if (v51 > v42)\n
                                        break;\n
                                    v8 = v47;\n
                                    v72 = v26;\n
                                    v17 = v8 + ((v72 >> 31 CONCAT v72) /m v32);\n
                                    v9 = v45;\n
                                    v74 = v27;\n
                                    v16 = v9 + ((v74 >> 31 CONCAT v74) /m v30);\n
                                    v26 = v33 + v26;\n
                                    v27 = v31 + v27;\n
                                    if (v16 > v17)\n
                                    {\n
                                        v15 = v16;\n
                                        v16 = v17;\n
                                        v17 = v15;\n
                                    }\n
                                    v7 = a4;\n
                                    v76 = v16;\n
                                    *(&v76) = v17 - v76;\n
                                    *(&v66) = v24;\n
                                    sub_4043d0(v16, v66, v76, a0, a2, a3);\n
                                    v24 += 1;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                v34 = v47;\n
                                v35 = v47;\n
                                if (v45 < v35)\n
                                {\n
                                    v35 = v45;\n
                                }\n
                                else if (v45 > v34)\n
                                {\n
                                    v34 = v45;\n
                                }\n
                                if (v43 < v35)\n
                                {\n
                                    v35 = v43;\n
                                }\n
                                else if (v43 > v34)\n
                                {\n
                                    v34 = v43;\n
                                }\n
                                v14 = a4;\n
                                v69 = v35;\n
                                *(&v69) = v34 - v69;\n
                                v70 = v46;\n
                                v51 = sub_4043d0(v35, v71, v69, a0, a2, a3);\n
                            }\n
                            return v51;\n
                        }\n
                        else\n
                        {\n
                            v2 = a4;\n
                            v52 = v44;\n
                            v53 = v45;\n
                            v1 = v46;\n
                            v0 = v2;\n
                            sub_404550(v47, v1, v54, v55, a0, a2, a3);\n
                            v4 = a4;\n
                            v56 = v42;\n
                            v57 = v43;\n
                            v3 = v44;\n
                            v0 = v4;\n
                            sub_404550(v45, v3, ebx<4>, edi<4>, a0, a2, a3);\n
                            v6 = a4;\n
                            v58 = v46;\n
                            v59 = v47;\n
                            v5 = v42;\n
                            v0 = v6;\n
                            v51 = sub_404550(v43, v5, ebx<4>, edi<4>, a0, a2, a3);\n
                            return v51;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4209669:sub_403c05": null, "4209680:sub_403c10": "int sub_403c10(unsigned short v9[4], unsigned int a0, char a1, char a2, unsigned short a3, unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x1a]\n
    unsigned short v3;  // [bp-0x18]\n
    unsigned short v4;  // [bp-0x16]\n
    unsigned short v5;  // [bp-0x14]\n
    unsigned short v6;  // [bp-0x12]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned short v10[4];  // eax, Other Possible Types: unsigned int\n
    unsigned short v11;  // di\n
    unsigned short v12;  // bx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // edi\n
\n
    v7 = &v8;\n
    if (!v9)\n
        return v9;\n
    v6 = v9[0];\n
    v5 = v9[1];\n
    v4 = v9[2];\n
    v3 = v9[3];\n
    v10 = v6;\n
    if (v10 >= a3)\n
        return v10;\n
    v10 = v5;\n
    if (v10 < a4)\n
    {\n
        v10 = v4;\n
        if (v10 < a3)\n
        {\n
            v10 = v3;\n
            if (v10 < a4)\n
            {\n
                v10 = v6;\n
                if (v10 > v4)\n
                    return v6;\n
                v10 = v5;\n
                if (v10 <= v3)\n
                {\n
                    v2 = a4;\n
                    v11 = v3;\n
                    v12 = v4;\n
                    v1 = v5;\n
                    v0 = v2;\n
                    sub_404550(v6, v1, v13, v14, a0, a2, a3);\n
                    v10 = a1 & 1;\n
                    if ((Not (Not (eax<4> == 0x0<32>)))) { Goto None } else { Goto None }\n
                    return a1 & 1;\n
                }\n
                return v5;\n
            }\n
        }\n
    }\n
}\n
", "4210007:sub_403d57": null, "4210016:sub_403d60": "int sub_403d60(unsigned short v28[3], unsigned short *a0, char a1, char a2, unsigned short a3[3], unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned short v2[3];  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned short v4[3];  // [bp-0x3c]\n
    unsigned short v5;  // [bp-0x3a]\n
    unsigned short v6[3];  // [bp-0x38]\n
    unsigned short v7;  // [bp-0x36]\n
    unsigned short v8[3];  // [bp-0x34]\n
    unsigned short v9;  // [bp-0x32]\n
    unsigned short v10;  // [bp-0x30]\n
    unsigned short v11;  // [bp-0x2e]\n
    unsigned short v12;  // [bp-0x2c]\n
    unsigned short v13;  // [bp-0x2a]\n
    unsigned short v14;  // [bp-0x28]\n
    unsigned short v15;  // [bp-0x26]\n
    unsigned short v16;  // [bp-0x24]\n
    unsigned short v17;  // [bp-0x22]\n
    unsigned short v18;  // [bp-0x20]\n
    unsigned short v19;  // [bp-0x1e]\n
    unsigned short v20;  // [bp-0x1c]\n
    unsigned short v21;  // [bp-0x1a]\n
    unsigned short v22;  // [bp-0x18]\n
    unsigned short v23;  // [bp-0x16]\n
    unsigned short v24;  // [bp-0x14]\n
    unsigned short v25;  // [bp-0x12]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // eax\n
    unsigned short v31;  // di\n
    unsigned short v32[3];  // ebx\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // di\n
    unsigned short v35[3];  // ecx\n
    unsigned int v36;  // eax\n
    unsigned short v37;  // di\n
    unsigned short v38[3];  // ecx\n
    unsigned int v39;  // eax\n
    unsigned short v40;  // di\n
    unsigned short v41[3];  // ecx\n
    unsigned int v42;  // eax\n
    unsigned short v43;  // di\n
    unsigned short v44[3];  // ecx\n
    unsigned int v45;  // eax\n
\n
    v26 = &v27;\n
    if (!v28)\n
        return v28;\n
    v29 = v28[0];\n
    if (v29 >= a3)\n
        return v29;\n
    v29 = v28[1];\n
    if (v29 < a4)\n
    {\n
        v29 = v28[0] + v28[2];\n
        if (v29 >= a3)\n
            return v29;\n
        v29 = v28[1] + v28[2];\n
        if (v29 < a4)\n
        {\n
            v29 = v28[0];\n
            if (v29 < v28[2])\n
                return v29;\n
            v29 = v28[1];\n
            if (v29 >= v28[2])\n
            {\n
                if ((a1 & 1))\n
                {\n
                    v25 = v28[0];\n
                    v24 = v28[1];\n
                    v23 = 0;\n
                    v22 = v28[2];\n
                    v21 = 1 - v28[2];\n
                    v20 = 1;\n
                    v19 = v28[2] * 65534;\n
                    v10 = a4;\n
                    v31 = v22 * 2;\n
                    v32 = v22;\n
                    v32[0] = v24 - v32;\n
                    v1 = v10;\n
                    sub_404490(v25, v32, v33, a0, a2, a3);\n
                    while (true)\n
                    {\n
                        v29 = v23;\n
                        if (v29 >= v22)\n
                            break;\n
                        if (v21 >= 0)\n
                        {\n
                            v22 -= 1;\n
                            v19 += 2;\n
                            v21 += v19;\n
                        }\n
                        v23 += 1;\n
                        v20 += 2;\n
                        v21 += v20;\n
                        v3 = a4;\n
                        v2[0] = a3;\n
                        v34 = v22 * 2;\n
                        v32[0] = v24 - v22;\n
                        v35 = v23;\n
                        v36 = v25 + v35;\n
                        v35[0] = v2;\n
                        v0 = v36;\n
                        *(&v36) = v3;\n
                        v1 = v36;\n
                        sub_404490(v0, v32, edi<4>, a0, a2, v35);\n
                        v5 = a4;\n
                        v4[0] = a3;\n
                        v37 = v23 * 2;\n
                        v32[0] = v24 - v23;\n
                        v38 = v22;\n
                        v39 = v25 + v38;\n
                        v38[0] = v4;\n
                        v0 = v39;\n
                        *(&v39) = v5;\n
                        v1 = v39;\n
                        sub_404490(v0, v32, edi<4>, a0, a2, v38);\n
                        v7 = a4;\n
                        v6[0] = a3;\n
                        v40 = v22 * 2;\n
                        v32[0] = v24 - v22;\n
                        v41 = v23;\n
                        v42 = v25 - v41;\n
                        v41[0] = v6;\n
                        v0 = v42;\n
                        *(&v42) = v7;\n
                        v1 = v42;\n
                        sub_404490(v0, v32, edi<4>, a0, a2, v41);\n
                        v9 = a4;\n
                        v8[0] = a3;\n
                        v43 = v23 * 2;\n
                        v32[0] = v24 - v23;\n
                        v44 = v22;\n
                        v45 = v25 - v44;\n
                        v44[0] = v8;\n
                        v0 = v45;\n
                        *(&v45) = v9;\n
                        v1 = v45;\n
                        sub_404490(v0, v32, edi<4>, a0, a2, v44);\n
                    }\n
                    return v23;\n
                }\n
                else\n
                {\n
                    v18 = v28[0];\n
                    v17 = v28[1];\n
                    v16 = 0;\n
                    v15 = v28[2];\n
                    v14 = 1 - v28[2];\n
                    v13 = 1;\n
                    v12 = v28[2] * 65534;\n
                    v11 = v28[2];\n
                    a0[a3 * (v17 + v11) + v18] = a2;\n
                    a0[a3 * (v17 - v11) + v18] = a2;\n
                    a0[a3 * v17 + v11 + v18] = a2;\n
                    a0[a3 * v17 + v18 + -1 * v11] = a2;\n
                    while (true)\n
                    {\n
                        v29 = v16;\n
                        if (v29 >= v15)\n
                            break;\n
                        if (v14 >= 0)\n
                        {\n
                            v15 -= 1;\n
                            v12 += 2;\n
                            v14 += v12;\n
                        }\n
                        v16 += 1;\n
                        v13 += 2;\n
                        v14 += v13;\n
                        a0[a3 * (v17 + v15) + v16 + v18] = a2;\n
                        a0[a3 * (v17 + v15) + v18 + -1 * v16] = a2;\n
                        a0[a3 * (v17 - v15) + v16 + v18] = a2;\n
                        a0[a3 * (v17 - v15) + v18 + -1 * v16] = a2;\n
                        a0[a3 * (v17 + v16) + v15 + v18] = a2;\n
                        a0[a3 * (v17 + v16) + v18 + -1 * v15] = a2;\n
                        a0[a3 * (v17 - v16) + v15 + v18] = a2;\n
                        a0[a3 * (v17 - v16) + v18 + -1 * v15] = a2;\n
                    }\n
                    return v16;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4211664:sub_4043d0": "int sub_4043d0(unsigned short v4, unsigned short a0, unsigned short a1, unsigned short *a2, char a3, unsigned short a4, unsigned short a5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v6 = v4;\n
    if (v6 >= a4)\n
        return v4;\n
    v6 = a0;\n
    if (v6 >= a5)\n
        return a0;\n
    v1 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v6 = v1;\n
        if (v6 >= a1)\n
            return v1;\n
        v6 = v4 + v1;\n
        if (v6 >= a4)\n
            return v4 + v1;\n
        a2[a4 * a0 + v1 + v4] = a3;\n
        v1 += 1;\n
    }\n
}\n
", "4211854:sub_40448e": null, "4211856:sub_404490": "int sub_404490(unsigned short v4, unsigned short a0, unsigned short a1, unsigned short *a2, char a3, unsigned short a4, unsigned short a5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v6 = v4;\n
    if (v6 >= a4)\n
        return v4;\n
    v6 = a0;\n
    if (v6 >= a5)\n
        return a0;\n
    v1 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v6 = v1;\n
        if (v6 >= a1)\n
            return v1;\n
        v6 = a0 + v1;\n
        if (v6 >= a5)\n
            return a0 + v1;\n
        a2[a4 * (a0 + v1) + v4] = a3;\n
        v1 += 1;\n
    }\n
}\n
", "4212046:sub_40454e": null, "4212048:sub_404550": "int sub_404550(unsigned short v12, unsigned short a0, unsigned short a1, unsigned short a2, unsigned short *a3, char a4, unsigned short a5, unsigned short a6)\n
{\n
    unsigned short v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1e]\n
    unsigned short v2;  // [bp-0x1c]\n
    unsigned short v3;  // [bp-0x1a]\n
    unsigned short v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x16]\n
    unsigned short v6;  // [bp-0x14]\n
    unsigned short v7;  // [bp-0x12]\n
    unsigned short v8;  // [bp-0x10]\n
    unsigned short v9;  // [bp-0xe]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    v2 = v12;\n
    v1 = a0;\n
    v9 = sub_401f60(a1 - v12);\n
    v8 = sub_401f60(a2 - a0);\n
    if (v9 > v8)\n
        v3 = v9;\n
    else\n
        v3 = v8;\n
    if (v12 < a1)\n
        v7 = 1;\n
    else\n
        v7 = 65535;\n
    if (a0 < a2)\n
        v6 = 1;\n
    else\n
        v6 = 65535;\n
    v5 = 0;\n
    v4 = 0;\n
    for (v0 = 0; v0 <= v3 + 1; v0 += 1)\n
    {\n
        a3[a5 * v1 + v2] = a4;\n
        v5 += v9;\n
        v4 += v8;\n
        if (v5 > v3)\n
        {\n
            v5 -= v3;\n
            v2 += v7;\n
        }\n
        if (v4 > v3)\n
        {\n
            v4 -= v3;\n
            v1 += v6;\n
        }\n
    }\n
    return v0;\n
}\n
", "4212464:sub_4046f0": "int sub_4046f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404810();\n
    sub_404820();\n
    sub_404840();\n
    v0 = 1;\n
    if (!sub_404e10())\n
    {\n
        v0 = 7;\n
        sub_4054f0();\n
    }\n
    sub_4056c0();\n
    v1 = sub_4056f0;\n
    sub_404ae0();\n
    if (sub_4047e0())\n
    {\n
        v1 = 7;\n
        sub_4054f0();\n
    }\n
    sub_405280();\n
    if (sub_405380())\n
    {\n
        v1 = sub_405220;\n
        __setusermatherr();\n
    }\n
    sub_405300();\n
    sub_405310();\n
    sub_4052d0();\n
    v1 = sub_405270();\n
    _configthreadlocale();\n
    if (sub_4052c0())\n
        sub_404800();\n
    sub_4054b0();\n
    if (sub_4054c0())\n
    {\n
        v1 = 7;\n
        sub_4054f0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4212656:sub_4047b0": "int sub_4047b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405320();\n
    return 0;\n
}\n
", "4212672:sub_4047c0": "int sub_4047c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4054d0();\n
    v0 = sub_405260();\n
    return _set_new_mode();\n
}\n
", "4212704:sub_4047e0": "int sub_4047e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_405230());\n
}\n
", "4212736:sub_404800": "int sub_404800()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4212752:sub_404810": "int sub_404810()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4212768:sub_404820": "int sub_404820()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_405250());\n
}\n
", "4212800:sub_404840": "int sub_404840()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_405240(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4212832:sub_404860": "int sub_404860()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_402570(v1, v2);\n
}\n
", "4212896:sub_4048a0": "extern char g_407210;\n
extern char g_407218;\n
extern char g_40721c;\n
extern struct_0 *g_407228;\n
extern char g_407878;\n
extern unsigned int g_408040;\n
extern unsigned int g_4080a4;\n
\n
int sub_4048a0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_407878;\n
    v13 = sub_405720;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_408040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_404d80(1, g_408040 ^ &v16, v22, v23))\n
        sub_4054f0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_404d00();\n
    if (g_4080a4 == 1)\n
    {\n
        v16 = 7;\n
        sub_4054f0();\n
    }\n
    else if (g_4080a4)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4080a4 = 1;\n
        v16 = &g_407228;\n
        v15 = &g_40721c;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_404aa9;\n
        }\n
        else\n
        {\n
            v16 = &g_407218;\n
            v15 = &g_407210;\n
            _initterm(*(&v17));\n
            g_4080a4 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_404d50();\n
    v8 = sub_4053b0();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_404bd0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_405760(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_4053c0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_404bd0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_404860();\n
    if (!sub_405420())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_404dd0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_404aa9:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4213311:sub_404a3f": "int sub_404a3f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4213320:sub_404a48": "int sub_404a48()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4213347:sub_404a63": "extern char g_404a71;\n
\n
int sub_404a63()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_404a71;\n
    if (!sub_405420())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4213410:sub_404aa2": "int sub_404aa2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4213440:sub_404ac0": "int sub_404ac0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405130();\n
    return sub_4048a0();\n
}\n
", "4213456:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404ac0();\n
}\n
", "4213472:sub_404ae0": "int sub_404ae0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_404b10(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4213520:sub_404b10": "extern unsigned int g_4080b0;\n
\n
int sub_404b10(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4080b0;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4080b0))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4213576:sub_404b48": "int sub_404b48()\n
{\n
}\n
", "4213632:sub_404b80": "extern unsigned int g_4080bc;\n
\n
int sub_404b80(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4080bc;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4080bc);\n
    return v6;\n
}\n
", "4213666:sub_404ba2": "int sub_404ba2()\n
{\n
}\n
", "4213696:sub_404bc0": "int sub_404bc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4213712:sub_404bd0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_407898;\n
extern unsigned int g_408040;\n
\n
int sub_404bd0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_407898;\n
    v13 = sub_405720;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_408040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_405030(v6, g_408040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_4050a0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4213917:sub_404c9d": "int sub_404c9d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4213926:sub_404ca6": "int sub_404ca6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4213965:sub_404ccd": "int sub_404ccd()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4213984:sub_404ce0": "int sub_404ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4214016:sub_404d00": "extern unsigned int g_4080a8;\n
\n
int sub_404d00()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_405f40();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_404bc0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4080a8 = v6;\n
        if (!g_4080a8)\n
        {\n
            tmp_0 = 0;\n
            g_4080a8 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4080a8 = v6;\n
            v5 = g_4080a8;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4214096:sub_404d50": "extern void* g_4080a8;\n
\n
int sub_404d50(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405f40();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4080a8;\n
        g_4080a8 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x404d6f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4214144:sub_404d80": "extern char g_4080ac;\n
\n
int sub_404d80(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4080ac = 1;\n
    sub_405ab0();\n
    v4 = sub_4062e0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_4062e0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_4062f0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4214224:sub_404dd0": "extern char g_4080ac;\n
\n
int sub_404dd0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4080ac && a0)\n
        return 1;\n
    sub_4062f0(v2);\n
    v3 = sub_4062f0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4214288:sub_404e10": "extern char g_4080ad;\n
extern unsigned int g_4080b0;\n
extern unsigned int g_4080b4;\n
extern unsigned int g_4080b8;\n
extern unsigned int g_4080bc;\n
extern unsigned int g_4080c0;\n
extern unsigned int g_4080c4;\n
\n
int sub_404e10(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4080ad)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_4054f0();\n
    }\n
    if (sub_405f40() && !v10)\n
    {\n
        v8 = &g_4080b0;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4080bc;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_404ed6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4080b0 = v4;\n
    g_4080b4 = v5;\n
    g_4080b8 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4080bc = v1;\n
    g_4080c0 = v2;\n
    v11 = v3;\n
    g_4080c4 = v11;\n
LABEL_404ed6:\n
    g_4080ad = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4214512:sub_404ef0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_404ef0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_405f40() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_405760(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4214592:sub_404f40": "int sub_404f40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_404e10(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4214624:sub_404f60": "int sub_404f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_405f40())\n
    {\n
        v3 = sub_405ab0();\n
    }\n
    else\n
    {\n
        v3 = sub_4047e0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_404800();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4214672:sub_404f90": "extern char g_4080b0;\n
\n
int sub_404f90()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_405f40())\n
    {\n
        v0 = &g_4080b0;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_406330();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4214720:sub_404fc0": "int sub_404fc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406300(0);\n
    return sub_406300();\n
}\n
", "4214752:sub_404fe0": "int sub_404fe0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_406310();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_406310();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_406320();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4214800:sub_405010": "char sub_405010()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406320();\n
    sub_406320();\n
    return 1;\n
}\n
", "4214832:sub_405030": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_405030(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4214944:sub_4050a0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_4050a0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4215088:sub_405130": "extern unsigned int g_408040;\n
extern unsigned int g_408080;\n
\n
int sub_405130()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_408040 != 3141592654)\n
    {\n
        v4 = g_408040 & -0x10000;\n
        if (v4)\n
        {\n
            g_408080 = ~(g_408040);\n
            return g_408040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_4051b0(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_408040 = v0;\n
    g_408080 = ~(v0);\n
    return v4;\n
}\n
", "4215216:sub_4051b0": "int sub_4051b0()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4215328:sub_405220": "int sub_405220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4215344:sub_405230": "int sub_405230()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4215360:sub_405240": "int sub_405240()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4215376:sub_405250": "int sub_405250()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4215392:sub_405260": "int sub_405260()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4215408:sub_405270": "int sub_405270()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4215424:sub_405280": "extern void g_4080c8;\n
\n
int sub_405280()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4080c8);\n
}\n
", "4215456:sub_4052a0": "extern unsigned int g_4080c8;\n
\n
int sub_4052a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4080c8);\n
}\n
", "4215488:sub_4052c0": "char sub_4052c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4215504:sub_4052d0": "int sub_4052d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_4054f0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215552:sub_405300": "int sub_405300()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215568:sub_405310": "int sub_405310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215584:sub_405320": "int sub_405320()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_405360();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_405370(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4215648:sub_405360": "extern char g_4080d0;\n
\n
int sub_405360()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4080d0;\n
}\n
", "4215664:sub_405370": "extern char g_4080d8;\n
\n
int sub_405370()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4080d8;\n
}\n
", "4215680:sub_405380": "extern unsigned int g_408008;\n
\n
int sub_405380()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_408008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215728:sub_4053b0": "extern char g_4080e4;\n
\n
int sub_4053b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4080e4;\n
}\n
", "4215744:sub_4053c0": "extern char g_4080e8;\n
\n
int sub_4053c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4080e8;\n
}\n
", "4215760:sub_4053d0": "extern void* g_4080ec;\n
\n
int sub_4053d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4080ec = 0;\n
    return v3;\n
}\n
", "4215776:sub_4053e0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4053e0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4215840:sub_405420": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_405420()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4215984:sub_4054b0": "int sub_4054b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216000:sub_4054c0": "int sub_4054c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405630();\n
}\n
", "4216016:sub_4054d0": "int sub_4054d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_405640);\n
}\n
", "4216048:sub_4054f0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4054f0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_4053d0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_4053d0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4216073:sub_405509": "int sub_405509()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4216073\n
}\n
", "4216368:sub_405630": "int sub_405630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216384:sub_405640": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_405640(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4216512:sub_4056c0": "extern struct_0 *g_40786c;\n
\n
int sub_4056c0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40786c;\n
    v3 = &g_40786c;\n
    return &g_40786c;\n
}\n
", "4216560:sub_4056f0": "extern struct_0 *g_407874;\n
\n
int sub_4056f0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_407874;\n
    v3 = &g_407874;\n
    return &g_407874;\n
}\n
", "4216608:sub_405720": "extern unsigned int g_408040;\n
\n
int sub_405720(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_406340(*(v2));\n
    return _except_handler4_common(&g_408040, sub_405f70, v2, a0, a1);\n
}\n
", "4216672:sub_405760": "int sub_405760()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4216688:sub_405770": "int sub_405770(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x405779;\n
    return tmp_4;\n
}\n
", "4216704:sub_405780": "int sub_405780(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4216736:sub_4057a0": "int sub_4057a0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405780(v2);\n
}\n
", "4216768:sub_4057c0": "extern unsigned int g_4080f0;\n
\n
int sub_4057c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_405770(&g_4080f0, v3);\n
    return v0;\n
}\n
", "4216800:sub_4057e0": "extern char g_405760;\n
extern unsigned int g_409000;\n
\n
int sub_4057e0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_4057a0(&g_409000) != sub_405760)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4216848:sub_405810": "extern char g_407140;\n
\n
int sub_405810(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_407140;\n
    v1 = &g_407140;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4216912:sub_405850": "extern unsigned int g_409008;\n
\n
int sub_405850(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_4057a0(&g_409008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4216960:sub_405880": "extern unsigned int g_4080f0;\n
\n
int sub_405880(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_4057a0(&g_4080f0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_405760();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4217024:sub_4058c0": "int sub_4058c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4217040:sub_4058d0": "int sub_4058d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405810(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4217059\n
}\n
", "4217072:sub_4058f0": "int sub_4058f0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405810(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4217097:sub_405909": "int sub_405909()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217097\n
}\n
", "4217104:sub_405910": "int sub_405910(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405810(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405850(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217152:sub_405940": "int sub_405940(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405810(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405880(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217200:sub_405970": "extern char g_407140;\n
\n
int sub_405970(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_407140;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4217264:sub_4059b0": "int sub_4059b0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405970(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405810(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4217307\n
}\n
", "4217312:sub_4059e0": "int sub_4059e0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405970(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405810(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4217361:sub_405a11": "int sub_405a11()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217361\n
}\n
", "4217376:sub_405a20": "int sub_405a20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4217392:sub_405a30": "int sub_405a30(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405970(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405810(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405850(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217456:sub_405a70": "int sub_405a70(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405970(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405810(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405880(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217520:sub_405ab0": "extern unsigned int g_408040;\n
extern unsigned int g_408088;\n
extern unsigned int g_40808c;\n
extern unsigned int g_408090;\n
extern unsigned int g_4080f4;\n
extern unsigned int g_4080f8;\n
extern unsigned int g_4080fc;\n
\n
int sub_405ab0()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_408040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4080f8 = 0;\n
    g_408090 = g_408090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_405f70();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_405bfb;\n
        g_4080fc = g_4080fc | 1;\n
    }\n
LABEL_405bfb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4080fc = g_4080fc | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4080f8 = 1;\n
    g_408090 = g_408090 | 2;\n
    g_408088 = g_408088 & -2;\n
    g_40808c = g_40808c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4080f8 = 2;\n
        g_408090 = g_408090 | 4;\n
        g_408088 = g_408088 & -17;\n
        g_40808c = g_40808c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4080f8 = 3;\n
                g_408090 = g_408090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4080f8 = 5;\n
                    g_408090 = g_408090 | 32;\n
                    g_408088 = g_408088 & -3;\n
                    g_40808c = g_40808c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4080f8 = 6;\n
                            g_408090 = g_408090 | 64;\n
                            g_408088 = g_408088 & -37;\n
                            g_40808c = g_40808c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_408088 = g_408088 & -16777217;\n
                    g_40808c = g_40808c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4080f4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_408088 = ~(v2 | 16777256) & g_408088;\n
                        g_40808c = ~(v3) & g_40808c;\n
                        if (g_4080f4 > 1)\n
                        {\n
                            g_408088 = g_408088 & -65;\n
                            g_40808c = g_40808c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4218688:sub_405f40": "extern unsigned int g_408094;\n
\n
int sub_405f40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_408094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4218736:sub_405f70": "extern unsigned int g_408040;\n
extern unsigned int g_408080;\n
extern unsigned int g_408108;\n
extern unsigned int g_40810c;\n
extern unsigned int g_408114;\n
extern unsigned int g_408118;\n
extern unsigned int g_40811c;\n
extern unsigned int g_408158;\n
extern unsigned short g_4081e4;\n
extern unsigned short g_4081e8;\n
extern unsigned short g_4081ec;\n
extern unsigned short g_4081f0;\n
extern unsigned int g_4081f4;\n
extern unsigned int g_4081f8;\n
extern unsigned int g_4081fc;\n
extern unsigned int g_408200;\n
extern unsigned int g_408204;\n
extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408210;\n
extern unsigned short g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern unsigned short g_408220;\n
\n
int sub_405f70()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_408040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408208 = v7;\n
        g_408204 = v6;\n
        g_408200 = v8;\n
        g_4081fc = v9;\n
        g_4081f8 = v10;\n
        g_4081f4 = v11;\n
        g_408220 = v12;\n
        g_408214 = v13;\n
        g_4081f0 = v14;\n
        g_4081ec = v15;\n
        g_4081e8 = v16;\n
        g_4081e4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_408218 = v0;\n
        g_40820c = v3;\n
        g_408210 = *(&v4);\n
        g_40821c = &v5;\n
        g_408158 = 65537;\n
        g_408114 = g_408210;\n
        g_408108 = 3221226505;\n
        g_40810c = 1;\n
        g_408118 = 1;\n
        g_40811c = 2;\n
        v1 = g_408040;\n
        v2 = g_408080;\n
        sub_4062b0();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4218752:sub_405f80": "extern unsigned int g_408108;\n
extern unsigned int g_40810c;\n
extern unsigned int g_408114;\n
extern unsigned int g_408118;\n
extern unsigned int g_40811c;\n
extern unsigned short g_4081e4;\n
extern unsigned short g_4081e8;\n
extern unsigned short g_4081ec;\n
extern unsigned short g_4081f0;\n
extern unsigned int g_4081f4;\n
extern unsigned int g_4081f8;\n
extern unsigned int g_4081fc;\n
extern unsigned int g_408200;\n
extern unsigned int g_408204;\n
extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408210;\n
extern unsigned short g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern unsigned short g_408220;\n
\n
int sub_405f80()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_408208 = v4;\n
        g_408204 = v5;\n
        g_408200 = v6;\n
        g_4081fc = v7;\n
        g_4081f8 = v8;\n
        g_4081f4 = v9;\n
        g_408220 = v10;\n
        g_408214 = v11;\n
        g_4081f0 = v12;\n
        g_4081ec = v13;\n
        g_4081e8 = v14;\n
        g_4081e4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_408218 = v0;\n
        g_40820c = v1;\n
        g_408210 = *(&v2);\n
        g_40821c = &v3;\n
        g_408114 = g_408210;\n
        g_408108 = 3221226505;\n
        g_40810c = 1;\n
        g_408118 = 1;\n
        g_40811c = v3;\n
        sub_4062b0();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4218777:sub_405f99": "int sub_405f99()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4218777\n
}\n
", "4218976:sub_406060": "extern unsigned int g_408108;\n
extern unsigned int g_40810c;\n
extern unsigned int g_408114;\n
extern unsigned int g_408118;\n
extern unsigned int g_40811c;\n
extern char g_408120;\n
extern unsigned short g_4081e4;\n
extern unsigned short g_4081e8;\n
extern unsigned short g_4081ec;\n
extern unsigned short g_4081f0;\n
extern unsigned int g_4081f4;\n
extern unsigned int g_4081f8;\n
extern unsigned int g_4081fc;\n
extern unsigned int g_408200;\n
extern unsigned int g_408204;\n
extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408210;\n
extern unsigned short g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern unsigned short g_408220;\n
\n
int sub_406060()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1056841];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408208 = v7;\n
        g_408204 = v8;\n
        g_408200 = v9;\n
        g_4081fc = v10;\n
        g_4081f8 = v11;\n
        g_4081f4 = v12;\n
        g_408220 = v13;\n
        g_408214 = v14;\n
        g_4081f0 = v15;\n
        g_4081ec = v16;\n
        g_4081e8 = v17;\n
        g_4081e4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_408218 = v0;\n
        g_40820c = v2;\n
        g_408210 = *(&v3);\n
        g_40821c = &v4;\n
        g_408114 = g_408210;\n
        g_408108 = 3221226505;\n
        g_40810c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_408118 = v5 + 1;\n
        g_40811c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_408120)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_4062b0();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4219001:sub_406079": "int sub_406079()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4219001\n
}\n
", "4219280:sub_406190": "int sub_406190()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405f80(8);\n
}\n
", "4219323:sub_4061bb": "int sub_4061bb()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4219323\n
}\n
", "4219568:sub_4062b0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4062b0(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4219616:sub_4062e0": "char sub_4062e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4219632:sub_4062f0": "char sub_4062f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4219648:sub_406300": "char sub_406300()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4219664:sub_406310": "char sub_406310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4219680:sub_406320": "char sub_406320()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4219696:sub_406330": "int sub_406330()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4219712:sub_406340": "extern unsigned int g_4080f8;\n
\n
int sub_406340(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4080f8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4220020:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4220026:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4220032:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4220038:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4220044:sub_40648c": "int sub_40648c(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4220050:sub_406492": "int sub_406492()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4220056:sub_406498": "int sub_406498()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4220062:sub_40649e": "int sub_40649e(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4220068:sub_4064a4": "int sub_4064a4(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4220074:sub_4064aa": "int sub_4064aa()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4220080:sub_4064b0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4064b0(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4220086:sub_4064b6": "int sub_4064b6(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4220092:sub_4064bc": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4064bc(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4220098:sub_4064c2": "int sub_4064c2(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4220104:sub_4064c8": "int sub_4064c8(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4220110:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4220116:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4220122:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4220128:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4220134:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4220140:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4220146:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4220152:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4220158:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4220164:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4220170:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4220176:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4220182:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4220188:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4220194:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4220200:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4220206:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4220212:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4220218:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4220224:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4220230:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4220236:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4220242:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4220248:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4220254:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4220260:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4220266:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4220272:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4220278:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4220284:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4220290:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4220296:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4220302:sub_40658e": "int sub_40658e()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4220308:sub_406594": "int sub_406594(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_receive": null, "5242892:cgc_transmit": null, "5242896:GetCurrentProcess": null, "5242900:GetCurrentProcessId": null, "5242904:GetCurrentThreadId": null, "5242908:GetModuleHandleW": null, "5242912:GetStartupInfoW": null, "5242916:GetSystemTimeAsFileTime": null, "5242920:InitializeSListHead": null, "5242924:IsDebuggerPresent": null, "5242928:IsProcessorFeaturePresent": null, "5242932:QueryPerformanceCounter": null, "5242936:SetUnhandledExceptionFilter": null, "5242940:TerminateProcess": null, "5242944:UnhandledExceptionFilter": null, "5242948:__current_exception": null, "5242952:__current_exception_context": null, "5242956:__std_type_info_destroy_list": null, "5242960:_except_handler4_common": null, "5242964:memset": null, "5242968:__p___argc": null, "5242972:__p___argv": null, "5242976:__p__commode": null, "5242980:__setusermatherr": null, "5242984:_c_exit": null, "5242988:_cexit": null, "5242992:_configthreadlocale": null, "5242996:_configure_narrow_argv": null, "5243000:_controlfp_s": null, "5243004:_crt_at_quick_exit": null, "5243008:_crt_atexit": null, "5243012:_execute_onexit_table": null, "5243016:_exit": null, "5243020:_get_initial_narrow_environment": null, "5243024:_initialize_narrow_environment": null, "5243028:_initialize_onexit_table": null, "5243032:_initterm": null, "5243036:_initterm_e": null, "5243040:_register_onexit_function": null, "5243044:_register_thread_local_exe_atexit_callback": null, "5243048:_seh_filter_dll": null, "5243052:_seh_filter_exe": null, "5243056:_set_app_type": null, "5243060:_set_fmode": null, "5243064:_set_new_mode": null, "5243068:exit": null, "5243072:terminate": null, "6295596:UnresolvableCallTarget": null}