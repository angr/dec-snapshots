{"4198400:sub_401000": "int sub_401000(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = a0 * v6;\n
        if ((0 CONCAT v2) /m a0 != v6)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = sub_401440();\n
        if (!v1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = v2;\n
        v3 = sub_401c90(v1, 0);\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    v1 = 1;\n
    if (!sub_4010f0())\n
    {\n
        v0 = v4;\n
        v1 = sub_401140();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4198629:sub_4010e5": null, "4198640:sub_4010f0": "int sub_4010f0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    v1 = 1;\n
    if (!sub_401160())\n
    {\n
        v0 = v4;\n
        v1 = sub_401180();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4198709:sub_401135": null, "4198720:sub_401140": "int sub_401140(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 48 < 10;\n
}\n
", "4198745:sub_401159": null, "4198752:sub_401160": "int sub_401160(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 97 < 26;\n
}\n
", "4198777:sub_401179": null, "4198784:sub_401180": "int sub_401180(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 65 < 26;\n
}\n
", "4198809:sub_401199": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return ((v2 & -128) ^ 255) & 1;\n
}\n
", "4198843:sub_4011bb": null, "4198848:sub_4011c0": "int sub_4011c0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 1;\n
    if (v4 != 32)\n
        v1 = v4 == 9;\n
    return v1 & 1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:sub_4011f0": "int sub_4011f0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 1;\n
    if (v4 != 127)\n
        v1 = v4 < 32;\n
    return v1 & 1;\n
}\n
", "4198941:sub_40121d": null, "4198944:sub_401220": "int sub_401220(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (v4 != 32)\n
    {\n
        v0 = v4;\n
        v1 = sub_401260();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199001:sub_401259": null, "4199008:sub_401260": "int sub_401260(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 0;\n
    if (v4 >= 32)\n
        v1 = v4 != 127;\n
    return v1 & 1;\n
}\n
", "4199053:sub_40128d": null, "4199056:sub_401290": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401290(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000));\n
}\n
", "4199075:sub_4012a3": null, "4199088:sub_4012b0": "int sub_4012b0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (v4 > 8)\n
    {\n
        v1 = 1;\n
        if (v4 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v4 == 32;\n
    return v1 & 1;\n
}\n
", "4199143:sub_4012e7": null, "4199152:sub_4012f0": "typedef struct struct_0 {\n
    char padding_0[4239488];\n
    char field_40b080;\n
} struct_0;\n
\n
extern char g_40b080;\n
\n
int sub_4012f0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b080));\n
}\n
", "4199171:sub_401303": null, "4199184:sub_401310": "int sub_401310(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 & 127;\n
}\n
", "4199198:sub_40131e": null, "4199200:sub_401320": "int sub_401320(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401180(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 | 32;\n
    return v0;\n
}\n
", "4199257:sub_401359": null, "4199264:sub_401360": "int sub_401360(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 & 95;\n
    return v0;\n
}\n
", "4199328:sub_4013a0": "int sub_4013a0(unsigned int v4[2])\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
        return v4;\n
    v1[0] = v4 + 3;\n
    v5 = v1;\n
    if (*((v5 + 4)))\n
    {\n
        return v1;\n
    }\n
    else if (v1[0] >= 0x40000)\n
    {\n
        v0[0] = v1;\n
        v5 = sub_401410();\n
        return v5;\n
    }\n
    else\n
    {\n
        v0[0] = v1;\n
        sub_401820();\n
        v0[0] = v1;\n
        v5 = sub_401950();\n
        return v5;\n
    }\n
}\n
", "4199437:sub_40140d": null, "4199440:sub_401410": "int sub_401410(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return cgc_deallocate(v2, *(v2));\n
}\n
", "4199488:sub_401440": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4243864];\n
    struct struct_1 *field_40c198;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char g_40c198;\n
\n
int sub_401440(unsigned int v8)\n
{\n
    struct struct_1 **v0;  // [bp-0x1c]\n
    unsigned int v1[6];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_2 *v3;  // [bp-0x10]\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v8 + 24 < 0x40000)\n
    {\n
        if ((v8 & 7))\n
            v8 = v8 - -7 & -8;\n
        if (v8 >= 0x80000000)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v8 += 24;\n
        v4 = 0;\n
        v0 = &v4;\n
        v3 = sub_401670(v8);\n
        if (!v4)\n
        {\n
            if (!sub_401710())\n
            {\n
                v3 = 31;\n
                v4 = *((0x4 * v3 + &g_40c198));\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        sub_4018b0();\n
        v2 = *(v4) - v8;\n
        if (v2 > 48)\n
        {\n
            v1[0] = v4 + v8;\n
            v1[0] = v2;\n
            v1[1] = 1;\n
            v1[2] = 0;\n
            v1[3] = 0;\n
            *(v4) = v8;\n
            v1[5] = v4;\n
            v1[4] = *((v4 + 16));\n
            if (*((v4 + 16)))\n
                *((*((v4 + 16)) + 20)) = v1;\n
            *((v4 + 16)) = v1;\n
            sub_401820();\n
        }\n
        v5 = v4 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = sub_4015d0();\n
        return v5;\n
    }\n
}\n
", "4199878:sub_4015c6": null, "4199888:sub_4015d0": "int sub_4015d0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[6];  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v6 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v6, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v6;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4200036:sub_401664": null, "4200048:sub_401670": "typedef struct struct_0 {\n
    char padding_0[4243864];\n
    unsigned int field_40c198;\n
} struct_0;\n
\n
extern char g_40c198;\n
\n
int sub_401670(unsigned int v5, struct struct_1 **a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = v5;\n
    for (v1 = sub_4017c0(); v1 < 32; v1 = &v1->padding_0[1])\n
    {\n
        for (*(a0) = *(&(&g_40c198)[4 * v1]); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200204:sub_40170c": null, "4200208:sub_401710": "int sub_401710()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[6];  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v0 = 0x40000;\n
    if (cgc_allocate(v0, 0, &v2))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1[0] = *(&v2);\n
        v1[0] = v0;\n
        v1[1] = 1;\n
        v1[3] = 0;\n
        v1[2] = 0;\n
        v1[5] = 0;\n
        v1[4] = 0;\n
        sub_401820();\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4200384:sub_4017c0": "extern unsigned int g_40c000[4];\n
\n
int sub_4017c0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(v4 <= g_40c000[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4200477:sub_40181d": null, "4200480:sub_401820": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4243848];\n
    struct struct_0 *field_40c198;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern unsigned int g_40c198[4];\n
\n
int sub_401820(struct_1 *v3)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = sub_4017c0(v3->field_0);\n
    v3->field_4 = 1;\n
    if (!*((0x4 * v0 + &g_40c198[0])))\n
    {\n
        v4 = v0;\n
        *((0x4 * v4 + &g_40c198[0])) = v3;\n
        return v0;\n
    }\n
    v3->field_8 = *((0x4 * v0 + &g_40c198[0]));\n
    *((*((0x4 * v0 + &g_40c198[0])) + 12)) = v3;\n
    *((0x4 * v0 + &g_40c198[0])) = v3;\n
    v4 = v3;\n
    *((v4 + 12)) = 0;\n
    return v3;\n
}\n
", "4200610:sub_4018a2": null, "4200624:sub_4018b0": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4243864];\n
    unsigned int field_40c198;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int g_40c198[4];\n
\n
int sub_4018b0(struct_2 *v3)\n
{\n
    struct_3 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4017c0(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((0x4 * v0 + &g_40c198[0])) == v3)\n
        *((0x4 * v0 + &g_40c198[0])) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4200775:sub_401947": null, "4200784:sub_401950": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_401950(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    unsigned int v5[2];  // eax\n
    struct_0 *v6;  // eax\n
    unsigned int v7[2];  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    v0 = &v1;\n
    if (v2->field_14 && v2->field_14->field_4 && v2->field_10 && v2->field_10->field_4)\n
    {\n
        sub_4018b0(v2->field_14);\n
        sub_4018b0(v2->field_10);\n
        sub_4018b0(v2);\n
        v3 = v2->field_14;\n
        v3[0] = v2->field_0 + v3[0];\n
        v4 = v2->field_14;\n
        v4[0] = v2->field_10->field_0 + v4[0];\n
        sub_401820(v2->field_14);\n
        sub_401b10();\n
        v7 = sub_401b10();\n
        return v7;\n
    }\n
    if (v2->field_14 && v2->field_14->field_4 && v2->field_10 && !v2->field_10->field_4)\n
    {\n
        sub_4018b0(v2->field_14);\n
        sub_4018b0(v2);\n
        v5 = v2->field_14;\n
        v5[0] = v2->field_0 + v5[0];\n
        sub_401820(v2->field_14);\n
        v7 = sub_401b10();\n
        goto LABEL_401b00;\n
    }\n
    v7 = v2;\n
    if (v7->field_14)\n
    {\n
        v7 = v2->field_14;\n
        if (!v7[1])\n
        {\n
            v7 = v2;\n
            if (v7->field_10)\n
            {\n
                v7 = v2->field_10;\n
                if (v7[1])\n
                {\n
                    sub_4018b0(v2->field_10);\n
                    sub_4018b0(v2);\n
                    v6 = v2;\n
                    v6->field_0 = v2->field_10->field_0 + v6->field_0;\n
                    sub_401820(v2);\n
                    v7 = sub_401b10();\n
                }\n
            }\n
        }\n
    }\n
LABEL_401b00:\n
    return v7;\n
}\n
", "4201231:sub_401b0f": null, "4201232:sub_401b10": "int sub_401b10(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (*((v2 + 20)))\n
        *((*((v2 + 20)) + 16)) = *((v2 + 16));\n
    v3 = v2;\n
    if (*((v3 + 16)))\n
    {\n
        v3 = *((v2 + 16));\n
        *((v3 + 20)) = *((v2 + 20));\n
    }\n
    return v3;\n
}\n
", "4201296:sub_401b50": "int sub_401b50(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[v4] == a0)\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4201392:sub_401bb0": "int sub_401bb0(char *v4, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v4) != *(a0))\n
        {\n
            v1 = *(a0) - *(v4);\n
            return v1;\n
        }\n
        v4 += 1;\n
        a0 += 1;\n
        v0 += 1;\n
    }\n
}\n
", "4201520:sub_401c30": "int sub_401c30(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v5;\n
}\n
", "4201616:sub_401c90": "int sub_401c90(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v5;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            *(v6) = a0;\n
        }\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4201760:sub_401d20": "int sub_401d20(unsigned int v11, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    char v7;  // [bp-0x11]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = 0;\n
    if (v11 >= a0)\n
    {\n
        v3 = a2;\n
        v2 = a0;\n
        v8 = sub_401d20((0 CONCAT v11) /m a0, v2, a1 - 1, v3);\n
        v11 = (0 CONCAT v11) /m a0 >> 32;\n
    }\n
    if (!v8 && a1 > 0)\n
    {\n
        while (true)\n
        {\n
            a1 -= 1;\n
            if (!a1)\n
                break;\n
            if (!(a2 & 1))\n
            {\n
                v6 = 32;\n
                cgc_transmit(1, &v6, 1);\n
            }\n
            else\n
            {\n
                v7 = 48;\n
                cgc_transmit(1, &v7, 1);\n
            }\n
        }\n
    }\n
    if ((a2 & 2))\n
    {\n
        if (v11 < 10)\n
            v1 = v11 + 48;\n
        else\n
            v1 = v11 + 55;\n
        v5 = v1;\n
        cgc_transmit(1, &v5, 1);\n
        return v8 + 1;\n
    }\n
    else\n
    {\n
        if (v11 < 10)\n
            v0 = v11 + 48;\n
        else\n
            v0 = v11 + 87;\n
        v4 = v0;\n
        cgc_transmit(1, &v4, 1);\n
        return v8 + 1;\n
    }\n
}\n
", "4202231:sub_401ef7": null, "4202240:sub_401f00": "int sub_401f00(char *v19)\n
{\n
    char *v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    char v3;  // [bp-0x4d]\n
    char v4;  // [bp-0x45]\n
    char v5;  // [bp-0x3d]\n
    char v6;  // [bp-0x35]\n
    char v7;  // [bp-0x2d]\n
    char v8;  // [bp-0x25]\n
    struct struct_0 **v9;  // [bp-0x24], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x20]\n
    void* v11;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    char *v16;  // [bp-0x8]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    char v20;  // [bp+0x8]\n
    char *v21;  // eax\n
    char *v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    struct struct_0 **v25;  // eax\n
\n
    v17 = &v18;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v9 = &v20;\n
    while (*(v19))\n
    {\n
        v21 = v19;\n
        v19 = v21 + 1;\n
        v8 = *(v21);\n
        if (v8 != 37)\n
        {\n
            v3 = v8;\n
            cgc_transmit(1, &v3, 1);\n
LABEL_4021f6:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v22 = v19;\n
                    v19 = v22 + 1;\n
                    v8 = *(v22);\n
                    v2 = v8;\n
                    if (v2 != 48)\n
                        break;\n
                    v12 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v11 = sub_402a30(v19 - 1, &v19);\n
            }\n
            v1 = v8;\n
            if (v1 == 37)\n
            {\n
                v7 = 37;\n
                cgc_transmit(1, &v7, 1);\n
                goto LABEL_4021b1;\n
            }\n
            if (v1 == 88)\n
            {\n
                v12 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v23 = v9;\n
                    v9 = v23 + 1;\n
                    v15 = *(v23);\n
                    if (v15 < 0)\n
                    {\n
                        v5 = 45;\n
                        cgc_transmit(1, &v5, 1);\n
                        v15 = -(v15);\n
                    }\n
                    sub_401d20(v15, 10, v11, v12);\n
                    goto LABEL_4021b1;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v24 = v9;\n
                    v9 = v24 + 1;\n
                    v16 = &*(v24)->field_0;\n
                    v14 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v14;\n
                        if (v0 >= sub_402920())\n
                            break;\n
                        v6 = v16[v14];\n
                        cgc_transmit(1, &v6, 1);\n
                        v14 += 1;\n
                    }\n
                    goto LABEL_4021b1;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v4 = v8;\n
                    cgc_transmit(1, &v4, 1);\n
LABEL_4021b1:\n
                    v11 = 0;\n
                    v12 = 0;\n
                    goto LABEL_4021f6;\n
                }\n
            }\n
            v25 = v9;\n
            v9 = v25 + 1;\n
            v10 = &*(v25)->field_0;\n
            sub_401d20(v10, 16, v11, v12);\n
            goto LABEL_4021b1;\n
        }\n
    }\n
    return v13;\n
}\n
", "4203011:sub_402203": null, "4203024:sub_402210": "int sub_402210(unsigned int *v10, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    char v4;  // [bp-0x2d]\n
    char v5;  // [bp-0x25]\n
    char v6;  // [bp-0x1d]\n
    char v7;  // [bp-0x15]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    struct struct_0 **v11;  // eax\n
    unsigned int *v12;  // eax\n
    struct struct_0 **v13;  // eax\n
    unsigned int *v14;  // eax\n
\n
    v8 = &v9;\n
    if (a1 >= a2)\n
    {\n
        v3 = a4;\n
        v2 = a2;\n
        sub_402210(v10, a0, (0 CONCAT a1) /m a2, v2, a3 - 1, v3);\n
        a1 = (0 CONCAT a1) /m a2 >> 32;\n
    }\n
    if (a1 < a2 && a3 > 0)\n
    {\n
        while (true)\n
        {\n
            a3 -= 1;\n
            if (!a3)\n
                break;\n
            if ((a4 & 1))\n
            {\n
                v7 = 48;\n
                *(a0)->field_0 = v7;\n
            }\n
            else\n
            {\n
                v6 = 32;\n
                *(a0)->field_0 = v6;\n
            }\n
            v11 = a0;\n
            *(v11) = *(v11) + 1;\n
            v12 = v10;\n
            *(v12) = *(v12) + 1;\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (a1 < 10)\n
            v1 = a1 + 48;\n
        else\n
            v1 = a1 + 55;\n
        v5 = v1;\n
        *(a0)->field_0 = v5;\n
    }\n
    else\n
    {\n
        if (a1 < 10)\n
            v0 = a1 + 48;\n
        else\n
            v0 = a1 + 87;\n
        v4 = v0;\n
        *(a0)->field_0 = v4;\n
    }\n
    v13 = a0;\n
    *(v13) = *(v13) + 1;\n
    v14 = v10;\n
    *(v14) = *(v14) + 1;\n
    return v14;\n
}\n
", "4203489:sub_4023e1": null, "4203504:sub_4023f0": "int sub_4023f0(char *v19, char *a0)\n
{\n
    char *v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    char v3;  // [bp-0x55]\n
    char v4;  // [bp-0x4d]\n
    char v5;  // [bp-0x45]\n
    char v6;  // [bp-0x3d]\n
    char v7;  // [bp-0x35]\n
    char v8;  // [bp-0x2d]\n
    struct struct_0 **v9;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x28]\n
    void* v11;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x18]\n
    char *v15;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x10]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    char v20;  // [bp+0xc]\n
    char *v21;  // eax\n
    char *v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    struct struct_0 **v25;  // eax\n
    char *v26;  // eax\n
\n
    v17 = &v18;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v9 = &v20;\n
    while (*(a0))\n
    {\n
        v21 = a0;\n
        a0 = v21 + 1;\n
        v8 = *(v21);\n
        if (v8 != 37)\n
        {\n
            v3 = v8;\n
            *(v19) = v3;\n
            v19 += 1;\n
            v13 += 1;\n
LABEL_4026df:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v22 = a0;\n
                    a0 = v22 + 1;\n
                    v8 = *(v22);\n
                    v2 = v8;\n
                    if (v2 != 48)\n
                        break;\n
                    v12 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v11 = sub_402a30(a0 - 1, &a0);\n
            }\n
            v1 = v8;\n
            if (v1 == 37)\n
            {\n
                v7 = 37;\n
                *(v19) = v7;\n
                v19 += 1;\n
                v13 += 1;\n
                goto LABEL_4026a2;\n
            }\n
            if (v1 == 88)\n
            {\n
                v12 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v23 = v9;\n
                    v9 = v23 + 1;\n
                    v15 = &*(v23)->field_0;\n
                    if (v15 < 0)\n
                    {\n
                        v5 = 45;\n
                        *(v19) = v5;\n
                        v19 += 1;\n
                        v13 += 1;\n
                        v15 = -(v15);\n
                    }\n
                    sub_402210(&v13, &v19, v15, 10, v11, v12);\n
                    goto LABEL_4026a2;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v24 = v9;\n
                    v9 = v24 + 1;\n
                    v16 = &*(v24)->field_0;\n
                    v14 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v14;\n
                        if (v0 >= sub_402920())\n
                            break;\n
                        v6 = v16[v14];\n
                        *(v19) = v6;\n
                        v19 += 1;\n
                        v13 += 1;\n
                        v14 += 1;\n
                    }\n
                    goto LABEL_4026a2;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v4 = v8;\n
                    *(v19) = v4;\n
                    v19 += 1;\n
                    v13 += 1;\n
LABEL_4026a2:\n
                    v11 = 0;\n
                    v12 = 0;\n
                    goto LABEL_4026df;\n
                }\n
            }\n
            v25 = v9;\n
            v9 = v25 + 1;\n
            v10 = &*(v25)->field_0;\n
            sub_402210(&v13, &v19, v10, 16, v11, v12);\n
            goto LABEL_4026a2;\n
        }\n
    }\n
    v26 = v19;\n
    v19 = v26 + 1;\n
    *(v26) = 0;\n
    return v13;\n
}\n
", "4204288:sub_402700": "int sub_402700(char *v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = sub_401440(a0);\n
        return v2;\n
    }\n
    else if (a0)\n
    {\n
        v1 = sub_401440(a0);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = &v5[24];\n
        if (a0 >= *(v0) - 24)\n
            sub_401c30(v1, v5, *(v0) - 24);\n
        else\n
            sub_401c30(v1, v5, a0);\n
        sub_4013a0(v5);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_4013a0(v5);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4204512:sub_4027e0": "int sub_4027e0(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v5 = v0;\n
        v0 = v5 + 1;\n
        if (*(v5) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4204608:sub_402840": "int sub_402840(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v4) != *(a0))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(a0) - *(v4);\n
}\n
", "4204736:sub_4028c0": "int sub_4028c0(unsigned int v3, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *(a0); *((v3 + v6)) = *(v5))\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        v6 = v0;\n
        v0 = v6 + 1;\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4204832:sub_402920": "int sub_402920(char *v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(v0); v0 += 1);\n
    return v0 - v3;\n
}\n
", "4204896:sub_402960": "int sub_402960(struct struct_0 **v5, char *a0)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = &*(v5)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = sub_4027e0(a0, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    a0 = &*(v5)->field_0;\n
    if (!*(v1))\n
    {\n
        *(v5) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(v5) = &v1[1];\n
    }\n
    v2 = a0;\n
    return v2;\n
}\n
", "4205104:sub_402a30": "int sub_402a30(char v14[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v14;\n
    if (a1 == 1)\n
    {\n
LABEL_402a78:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_402a78;\n
        if (a1 < 0)\n
            goto LABEL_402a78;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_402b6f:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_402b6f;\n
                v6 += 1;\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_402be4;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_402be4:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_402d42;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_402d02;\n
            }\n
            if (!v7)\n
            {\n
LABEL_402d02:\n
                if (v8 >= a1)\n
                    goto LABEL_402d42;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = v6 + 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_402cf9;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_402cf9:\n
                v8 += 10;\n
                goto LABEL_402d02;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_402c78;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_402c78:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_402d42:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v14;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4205966:sub_402d8e": null, "4205968:sub_402d90": "int sub_402d90(char v2[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402a30(v2, a0, a1);\n
}\n
", "4206016:sub_402dc0": "extern unsigned int g_40c218;\n
extern unsigned int g_40c21c;\n
\n
int sub_402dc0()\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v0 = 0;\n
    g_40c218 = sub_401000(70200, 16);\n
    if (!g_40c218)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    g_40c21c = sub_401440(2808);\n
    if (!g_40c21c)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < 702; v2 = v2 + 1)\n
    {\n
        *((g_40c21c + v2 * 4)) = g_40c218 + v2 * 1600;\n
    }\n
    for (v2 = 0; v2 < 702; v2 = v2 + 1)\n
    {\n
        for (v1 = 0; v1 < 100; v1 = v1 + 1)\n
        {\n
            v7 = v0;\n
            v0 = v7 + 1;\n
            *((*((g_40c21c + v2 * 4)) + v1 * 16)) = v7;\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4206298:sub_402eda": null, "4206304:sub_402ee0": null, "4206626:sub_403022": null, "4206640:sub_403030": null, "4206961:sub_403171": null, "4206976:sub_403180": null, "4208083:sub_4035d3": null, "4208096:sub_4035e0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8[2];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4035e0(unsigned int v4, char *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (a0 && sub_402920(a0) && sub_402920(a0) < a1)\n
    {\n
        v0 = sub_403030(v4);\n
        if (!v0)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (v0->field_4)\n
        {\n
            sub_4013a0(v0->field_8);\n
            v0->field_8 = 0;\n
            v0->field_4 = 0;\n
            v0->field_c = 0;\n
        }\n
        v0->field_8 = sub_401440(sub_402920(a0) + 1);\n
        if (!v0->field_8)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        sub_4028c0(v0->field_8, a0);\n
        if (sub_402920(a0) >= 2 && *(a0) == 61)\n
        {\n
            v0->field_c = &v0->field_8[0] + 1;\n
            v0->field_4 = 7;\n
            goto LABEL_403744;\n
        }\n
        v0->field_4 = sub_403760();\n
        if (v0->field_4 != 4)\n
            v0->field_4 = 2;\n
LABEL_403744:\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4208472:sub_403758": null, "4208480:sub_403760": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int sub_403760(struct_0 *v10)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    struct_0 *v11;  // eax\n
\n
    v8 = &v9;\n
    if (!v10)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = v10; *(v10); v10 = &v10->field_0)\n
    {\n
        if (*(v10) >= 48 && *(v10) <= 57)\n
        {\n
            v6 += 1;\n
            goto LABEL_40385f;\n
        }\n
        if (*(v10) == 45)\n
        {\n
            v6 += 1;\n
            v4 += 1;\n
        }\n
        else if (*(v10) == 46)\n
        {\n
            v6 += 1;\n
            v5 += 1;\n
        }\n
        else if (*(v10) == 34)\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v2 += 1;\n
        }\n
LABEL_40385f:\n
    }\n
    v10 = v1;\n
    if (v3)\n
    {\n
        if (v3 == 2)\n
        {\n
            v11 = v10;\n
            v10 = &v11->field_0;\n
            if (v11->field_0 == 34)\n
            {\n
                v7 = 3;\n
                return v7;\n
            }\n
        }\n
        v7 = 2;\n
        return v7;\n
    }\n
    else if (v2)\n
    {\n
        if (v5 <= 1 && v4 <= 1)\n
        {\n
            v0 = v10;\n
            if (!sub_406800())\n
            {\n
                v7 = 6;\n
                return v7;\n
            }\n
            v0 = v10;\n
            if (!sub_403be0())\n
            {\n
                v7 = 2;\n
                return v7;\n
            }\n
            v7 = 5;\n
            return v7;\n
        }\n
        v7 = 2;\n
        return v7;\n
    }\n
    else if (v6)\n
    {\n
        if (v5 <= 1 && v4 <= 1)\n
        {\n
            if (v5 && v6 == 1)\n
                goto LABEL_40398e;\n
            if (v5 && v4)\n
            {\n
                if (!(v6 == 2))\n
                    goto LABEL_40399a;\n
LABEL_40398e:\n
                v7 = 2;\n
                return v7;\n
            }\n
LABEL_40399a:\n
            if (v4 && v6 == 1)\n
            {\n
                v7 = 5;\n
                return v7;\n
            }\n
            v7 = 4;\n
            return v7;\n
        }\n
        v7 = 2;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
}\n
", "4209109:sub_4039d5": null, "4209120:sub_4039e0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8[2];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4039e0(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = sub_403030(v4);\n
    if (!v0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (v0->field_4)\n
    {\n
        sub_4013a0(v0->field_8);\n
        v0->field_8 = 0;\n
        v0->field_4 = 0;\n
        v0->field_c = 0;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4209237:sub_403a55": null, "4209248:sub_403a60": "extern unsigned int g_40c21c;\n
\n
int sub_403a60()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5[3];  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp-0xf]\n
    char v10;  // [bp-0xb]\n
    char v11;  // [bp-0xa]\n
    char v12;  // [bp-0x9]\n
    unsigned int v13;  // [bp-0x4]\n
    char v14;  // [bp+0x0]\n
\n
    v13 = &v14;\n
    for (v8 = 0; v8 < 702; v8 = v8 + 1)\n
    {\n
        for (v7 = 0; v7 < 100; v7 += 1)\n
        {\n
            v5[0] = *((g_40c21c + v8 * 4)) + v7 * 16;\n
            if (v5[1])\n
            {\n
                v6 = v5[0];\n
                v4 = &v9;\n
                v0 = 4;\n
                sub_4072f0((0 CONCAT v6) /m 100 >> 32, v4);\n
                v12 = 0;\n
                if (!(0 CONCAT v6) /m 2600)\n
                    v3 = 0;\n
                else\n
                    v3 = ((0 CONCAT (0 CONCAT v6) /m 100) /m 26 >> 32) + 65;\n
                v11 = v3;\n
                if (!(0 CONCAT v6) /m 2600)\n
                    v2 = ((0 CONCAT (0 CONCAT v6) /m 100) /m 26 >> 32) + 65;\n
                else\n
                    v2 = ((0 CONCAT (0 CONCAT v6) /m 2600 - 1) /m 26 >> 32) + 65;\n
                v10 = v2;\n
                v0 = &v9;\n
                v1 = v5[2];\n
                sub_401f00(\"%s%s=%s\\n
\");\n
            }\n
        }\n
    }\n
    return v8 + 1;\n
}\n
", "4209621:sub_403bd5": null, "4209632:sub_403be0": "extern unsigned int g_40c080;\n
\n
int sub_403be0(char *v7)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int, char **\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = sub_401440(sub_402920(v7) + 1);\n
    sub_4028c0(v3, v7);\n
    v1 = sub_402920(v3);\n
    for (v2 = 0; v2 < v1; v2 += 1)\n
    {\n
        v3[v2] = sub_401360(v3[v2]);\n
    }\n
    v0 = 0;\n
    for (v0 = &g_40c080; *(v0); v0 += 2)\n
    {\n
        if (!sub_402840(*(v0), v3))\n
            break;\n
    }\n
    sub_4013a0(v3);\n
    if (!*(v0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = v0;\n
    return v4;\n
}\n
", "4209912:sub_403cf8": null, "4209920:sub_403d00": "int sub_403d00(char *v22, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    char v2;  // [bp-0x58]\n
    unsigned int *v3;  // [bp-0x48]\n
    char v4;  // [bp-0x41]\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x3c]\n
    void* v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9[2];  // [bp-0x30]\n
    char v10;  // [bp-0x2b]\n
    char v11;  // [bp-0x29]\n
    char *v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x24], Other Possible Types: unsigned int\n
    char *v14;  // [bp-0x20]\n
    unsigned int *v15;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x18]\n
    unsigned int *v17;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x10]\n
    void* v19;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x4]\n
    char v21;  // [bp+0x0]\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int *v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
    unsigned int *v28;  // eax\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // eax\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // eax\n
\n
    v20 = &v21;\n
    v19 = 0;\n
    v18 = 16;\n
    v17 = -1;\n
    v16 = sub_401440(a0);\n
    v15 = sub_401440(v18 * 4);\n
    v14 = \"():,+-*/\";\n
    memset(&v10, 0);\n
    v7 = 0;\n
    v6 = 0;\n
    sub_401c30(v16, v22, a0);\n
    if (sub_406bc0(v16))\n
    {\n
LABEL_404437:\n
        sub_4013a0(v16);\n
        sub_4013a0(v15);\n
        return v6;\n
    }\n
    v12 = v16;\n
    v13 = v12;\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v23 = v5;\n
        v5 = v23 + 1;\n
        if (v23 >= a0)\n
        {\n
LABEL_404399:\n
            while (v7)\n
            {\n
                if (!sub_402840(sub_407f40(), \"(\"))\n
                {\n
LABEL_4043f8:\n
                    goto LABEL_404421;\n
                }\n
                else\n
                {\n
                    if (!sub_402840(sub_407f40(), \")\"))\n
                        goto LABEL_4043f8;\n
                    sub_4080c0();\n
                    sub_407cc0(&v6);\n
                }\n
            }\n
LABEL_404421:\n
            sub_407eb0();\n
            sub_408120();\n
            goto LABEL_404437;\n
        }\n
        if (!sub_4027e0(v14, *(v12)) && *(v12))\n
        {\n
            v4 = *(v12);\n
            v12 += 1;\n
            continue;\n
        }\n
        if (sub_4027e0(v14, *(v12)))\n
            break;\n
LABEL_403e97:\n
        v4 = *(v12);\n
        v11 = *(v12);\n
        *(v12) = 0;\n
        v8 = sub_403760(v13);\n
        v1 = v8 - 1;\n
        switch (v1)\n
        {\n
        case 0:\n
            break;\n
        case 3: case 5:\n
            v24 = sub_402920(v13) + 1;\n
            sub_407d60(&v6, v13);\n
            break;\n
        case 4:\n
            if (v17 == v18 - 1)\n
            {\n
                v18 *= 2;\n
                v3 = sub_402700(v15, v18 * 4);\n
                if (!v3)\n
                    goto LABEL_404421;\n
                v15 = v3;\n
            }\n
            v25 = v17;\n
            v17 = v25 + 1;\n
            *((v15 + v25 * 4 + 4)) = 0;\n
            v26 = sub_402920(v13) + 1;\n
            sub_407ff0(&v7, v13);\n
            break;\n
        default:\n
            goto LABEL_404421;\n
        }\n
        v19 = 0;\n
        v0 = v11;\n
        switch (v0)\n
        {\n
        case 0:\n
            goto LABEL_404399;\n
        case 40:\n
            v27 = sub_402920(\"(\") + 1;\n
            sub_407ff0(&v7, \"(\");\n
            break;\n
        case 41:\n
            v19 = 1;\n
            while (v7)\n
            {\n
                if (sub_402840(sub_407f40(), \"(\"))\n
                {\n
                    sub_4080c0();\n
                    sub_407cc0(&v6);\n
                }\n
                else\n
                {\n
                    v9[0] = sub_4080c0();\n
                    sub_4013a0(v9);\n
                    v19 = 0;\n
                    break;\n
                }\n
            }\n
            if (sub_407f40() && v17 >= 0 && !sub_4027e0(v14, *(sub_407f40())))\n
            {\n
                if (sub_403760(sub_407f40()) == 5)\n
                {\n
                    v33 = v17;\n
                    v17 = v33 - 1;\n
                    v34 = sub_4072f0(*((v15 + v33 * 4)) + 1, &v2);\n
                    sub_407d60(&v6, v34);\n
                    sub_4080c0(&v7, v34);\n
                    sub_407cc0(&v6);\n
                }\n
                break;\n
            }\n
            break;\n
        case 42: case 47:\n
            v10 = v11;\n
            while (v7)\n
            {\n
                if (sub_402840(sub_407f40(), \"/\") && sub_402840(sub_407f40(), \"*\"))\n
                    break;\n
                sub_4080c0();\n
                sub_407cc0(&v6);\n
            }\n
            v31 = sub_402920(&v10) + 1;\n
            sub_407ff0(&v7, &v10);\n
            break;\n
        case 43: case 45:\n
            v10 = v11;\n
            while (v7)\n
            {\n
                if (sub_402840(sub_407f40(), \"-\") && sub_402840(sub_407f40(), \"+\") && sub_402840(sub_407f40(), \"+\") && sub_402840(sub_407f40(), \"/\"))\n
                    break;\n
                sub_4080c0();\n
                sub_407cc0(&v6);\n
            }\n
            v30 = sub_402920(&v10) + 1;\n
            sub_407ff0(&v7, &v10);\n
            break;\n
        case 44:\n
            v19 = 1;\n
            while (v7)\n
            {\n
                if (sub_402840(sub_407f40(), \"(\"))\n
                {\n
                    sub_4080c0();\n
                    sub_407cc0(&v6);\n
                }\n
                else\n
                {\n
                    if (v17 >= 0)\n
                    {\n
                        v28 = v15;\n
                        v29 = v17;\n
                        v28[v29] = v28[v29] + 1;\n
                    }\n
                    v19 = 0;\n
                    break;\n
                }\n
            }\n
            break;\n
        default:\n
            goto LABEL_404421;\n
        }\n
        if (!(!v19))\n
            goto LABEL_404421;\n
        v12 += 1;\n
        v13 = v12;\n
    }\n
    if (*(v12) != 45)\n
    {\n
LABEL_403e92:\n
        goto LABEL_403e97;\n
    }\n
    if (v5 > 1)\n
    {\n
        if (v4 == 41)\n
        {\n
LABEL_403e8d:\n
            goto LABEL_403e92;\n
        }\n
        else if (v4 >= 48 && v4 <= 57)\n
        {\n
            goto LABEL_403e8d;\n
        }\n
    }\n
    v4 = *(v12);\n
    v12 += 1;\n
    continue;\n
}\n
", "4211798:sub_404456": null, "4211808:sub_404460": null, "4212395:sub_4046ab": null, "4212400:sub_4046b0": "int sub_4046b0(char *v3)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = 1;\n
    if (!sub_401bb0(v3, \"+\", 2))\n
        return v0 & 1;\n
    v0 = 1;\n
    if (!sub_401bb0(v3, \"-\", 2))\n
        return v0 & 1;\n
    v0 = 1;\n
    if (sub_401bb0(v3, \"/\", 2))\n
    {\n
        v0 = !sub_401bb0(v3, \"*\", 2);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4212608:sub_404780": "int sub_4046b0(char *v3)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = 1;\n
    if (!sub_401bb0(v3, \"+\", 2))\n
        return v0 & 1;\n
    v0 = 1;\n
    if (!sub_401bb0(v3, \"-\", 2))\n
        return v0 & 1;\n
    v0 = 1;\n
    if (sub_401bb0(v3, \"/\", 2))\n
    {\n
        v0 = !sub_401bb0(v3, \"*\", 2);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4212936:sub_4048c8": null, "4212944:sub_4048d0": null, "4213256:sub_404a08": null, "4213264:sub_404a10": null, "4213701:sub_404bc5": null, "4213712:sub_404bd0": null, "4215093:sub_405135": null, "4215104:sub_405140": null, "4215545:sub_4052f9": null, "4215552:sub_405300": null, "4216128:sub_405540": null, "4216396:sub_40564c": null, "4216400:sub_405650": null, "4216778:sub_4057ca": null, "4216784:sub_4057d0": null, "4217052:sub_4058dc": null, "4217056:sub_4058e0": null, "4217354:sub_405a0a": null, "4217360:sub_405a10": null, "4217658:sub_405b3a": null, "4217664:sub_405b40": null, "4218502:sub_405e86": null, "4218512:sub_405e90": null, "4218890:sub_40600a": null, "4218896:sub_406010": null, "4219304:sub_4061a8": null, "4219312:sub_4061b0": null, "4219580:sub_4062bc": null, "4219584:sub_4062c0": null, "4219872:sub_4063e0": null, "4220250:sub_40655a": null, "4220256:sub_406560": null, "4220512:sub_406660": "int sub_406660(char *v6, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = sub_402920(v6) + 1;\n
    if (v1 > a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (v1 != 1)\n
    {\n
        if (a1 != 1 && !(a1 == 3))\n
            goto LABEL_40673e;\n
        v0 = v6;\n
        for (v2 = 0; v2 < v1; v0 += 1)\n
        {\n
            if (sub_4027e0(\"\\r\\n
\\t \", *(v0)))\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                sub_401c30(v6, v0, v1 - v2);\n
                break;\n
            }\n
        }\n
LABEL_40673e:\n
        if (a1 != 2 && !(a1 == 3))\n
            goto LABEL_4067e4;\n
        if (v1 != 1)\n
        {\n
            for (v2 = v1 - 2; v2 >= 0; v2 -= 1)\n
            {\n
                if (!sub_4027e0(\"\\r\\n
\\t \", v6[v2]))\n
                {\n
                    v6[1 + v2] = 0;\n
                    break;\n
                }\n
                else if (!v2)\n
                {\n
                    v6[v2] = 0;\n
                    break;\n
                }\n
            }\n
        }\n
LABEL_4067e4:\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4220915:sub_4067f3": null, "4220928:sub_406800": "int sub_406800(char v11[2])\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x17]\n
    char v2;  // [bp-0x16]\n
    char v3;  // [bp-0x13]\n
    char v4;  // [bp-0x12]\n
    char v5;  // [bp-0x11]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v7[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
\n
    v9 = &v10;\n
    if (sub_402920(v11) < 2)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    *(&v7) = 0;\n
    v6 = 0;\n
    v1 = 0;\n
    v0 = sub_401360(v11[0]);\n
    if (v0 >= 65 && v0 <= 90)\n
    {\n
        v3 = v0;\n
        v0 = sub_401360(v11[1]);\n
        if (v0 >= 65 && v0 <= 90)\n
            goto LABEL_4068ca;\n
        if (v0 >= 48 && v0 <= 57)\n
        {\n
LABEL_4068ca:\n
            if (v0 >= 48 && v0 <= 57)\n
            {\n
                v12 = v6;\n
                v6 = v12 + 1;\n
                (&v2)[v12] = v0;\n
                v4 = 0;\n
                goto LABEL_406909;\n
            }\n
            v4 = v0;\n
            v5 = 0;\n
LABEL_406909:\n
            v7 = 2;\n
            while (true)\n
            {\n
                if (v7 >= 5)\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                if (v11[v7] == v1 && v6)\n
                {\n
                    (&v2)[v6] = 0;\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                if (v11[v7] < 48)\n
                    break;\n
                if (v11[v7] > 57)\n
                    break;\n
                if (v6 >= 2)\n
                    break;\n
                v13 = v6;\n
                v6 = v13 + 1;\n
                (&v2)[v13] = v11[v7];\n
                v7 += 1;\n
            }\n
            v8 = -1;\n
            return v8;\n
        }\n
        v8 = -1;\n
        return v8;\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4221385:sub_4069c9": null, "4221392:sub_4069d0": "int sub_4069d0(char v6[2], char a0[3], unsigned int a1, char a2)\n
{\n
    char v0;  // [bp-0x15]\n
    char *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v4 = &v5;\n
    if (sub_402920(v6) < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    *(&v2) = 0;\n
    v1 = 0;\n
    v0 = sub_401360(v6[0]);\n
    if (v0 >= 65 && v0 <= 90)\n
    {\n
        a0[0] = v0;\n
        v0 = sub_401360(v6[1]);\n
        if (v0 >= 65 && v0 <= 90)\n
            goto LABEL_406aa2;\n
        if (v0 >= 48 && v0 <= 57)\n
        {\n
LABEL_406aa2:\n
            if (v0 >= 48 && v0 <= 57)\n
            {\n
                v7 = v1;\n
                v1 = v7 + 1;\n
                *((a1 + v7)) = v0;\n
                a0[1] = 0;\n
                goto LABEL_406aec;\n
            }\n
            a0[1] = v0;\n
            a0[2] = 0;\n
LABEL_406aec:\n
            v2 = 2;\n
            while (true)\n
            {\n
                if (v2 >= 5)\n
                {\n
                    v3 = -1;\n
                    return v3;\n
                }\n
                if (v6[v2] == a2 && v1)\n
                {\n
                    *((a1 + v1)) = 0;\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (v6[v2] < 48)\n
                    break;\n
                if (v6[v2] > 57)\n
                    break;\n
                if (v1 >= 2)\n
                    break;\n
                v8 = v1;\n
                v1 = v8 + 1;\n
                *((a1 + v8)) = v6[v2];\n
                v2 += 1;\n
            }\n
            v3 = -1;\n
            return v3;\n
        }\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4221873:sub_406bb1": null, "4221888:sub_406bc0": "int sub_406bc0(char *v7, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // ecx\n
\n
    v5 = &v6;\n
    v1 = sub_402920(v7);\n
    if (v1 > a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = sub_401000(1, a0);\n
    if (!v0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v3 < v1; v3 += 1)\n
    {\n
        if (!sub_4027e0(\"\\r\\n
\\t \", v7[v3]))\n
        {\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            v0[v8] = v7[v3];\n
        }\n
    }\n
    sub_401c30(v7, v0, a0);\n
    sub_4013a0(v0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4222144:sub_406cc0": "int sub_406bc0(char *v7, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // ecx\n
\n
    v5 = &v6;\n
    v1 = sub_402920(v7);\n
    if (v1 > a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = sub_401000(1, a0);\n
    if (!v0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v3 < v1; v3 += 1)\n
    {\n
        if (!sub_4027e0(\"\\r\\n
\\t \", v7[v3]))\n
        {\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            v0[v8] = v7[v3];\n
        }\n
    }\n
    sub_401c30(v7, v0, a0);\n
    sub_4013a0(v0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4222848:sub_406f80": "int sub_406bc0(char *v7, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // ecx\n
\n
    v5 = &v6;\n
    v1 = sub_402920(v7);\n
    if (v1 > a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = sub_401000(1, a0);\n
    if (!v0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v3 < v1; v3 += 1)\n
    {\n
        if (!sub_4027e0(\"\\r\\n
\\t \", v7[v3]))\n
        {\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            v0[v8] = v7[v3];\n
        }\n
    }\n
    sub_401c30(v7, v0, a0);\n
    sub_4013a0(v0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4223728:sub_4072f0": "int sub_4072f0(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x1e]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // ecx\n
\n
    v7 = &v8;\n
    v5 = 10;\n
    if (a1 <= 1)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    if (v9 < 0)\n
        v3 = 1;\n
    do\n
    {\n
        if (v3)\n
        {\n
            v10 = v4;\n
            v4 = v10 + 1;\n
            v10[a0] = 48 - ((v9 >> 31 CONCAT v9) /m v5 >> 32);\n
        }\n
        else\n
        {\n
            v11 = v4;\n
            v4 = v11 + 1;\n
            *((a0 + v11)) = ((v9 >> 31 CONCAT v9) /m v5 >> 32) + 48;\n
        }\n
        v12 = v9;\n
        v9 = (v12 >> 31 CONCAT v12) /m v5;\n
        v0 = 0;\n
        if (v4 < a1 - 1)\n
            v0 = v9;\n
    } while ((v0 & 1));\n
    if (!v9)\n
    {\n
        if (v4 != a1 - 1)\n
        {\n
LABEL_4073f4:\n
            if (v3)\n
            {\n
                v14 = v4;\n
                v4 = v14 + 1;\n
                *((a0 + v14)) = 45;\n
            }\n
            v15 = v4;\n
            v4 = v15 - 1;\n
            *((a0 + v15)) = 0;\n
            for (v2 = 0; v4 > v2; *((a0 + v17)) = v1)\n
            {\n
                v1 = *((a0 + v2));\n
                v16 = v2;\n
                v2 = v16 + 1;\n
                *((a0 + v16)) = *((a0 + v4));\n
                v17 = v4;\n
                v4 = v17 - 1;\n
            }\n
            v6 = a0;\n
            return v6;\n
        }\n
        else if (!v3)\n
        {\n
            goto LABEL_4073f4;\n
        }\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4224144:sub_407490": "int sub_407490(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x218]\n
    unsigned int v1;  // [bp-0x214]\n
    unsigned int v2;  // [bp-0x210]\n
    void* v3;  // [bp-0x20c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x208]\n
    void* v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    sub_402dc0();\n
    v3 = 0;\n
    do\n
    {\n
        sub_401f00(\"Accel:-$ \");\n
        v0 = 0x200;\n
        v2 = sub_407610(0, &v4);\n
        if (v2)\n
        {\n
            sub_401f00(\"\\n
\");\n
        }\n
        else\n
        {\n
            v1 = sub_407700() + 8;\n
            switch (v1)\n
            {\n
            case 0:\n
                sub_401f00(\"Error clearing cell\\n
\");\n
                break;\n
            case 4:\n
                sub_401f00(\"Error assigning cell. Valid Cells: A0-ZZ99\\n
\");\n
                break;\n
            case 6:\n
                sub_401f00(\"Error showing data. Try SHOW TABLE or SHOW [A0-ZZ99]\\n
\");\n
                break;\n
            case 7:\n
                sub_401f00(\"Bad input\\n
\");\n
                break;\n
            case 8:\n
                sub_401f00(\"Success.\\n
\");\n
                break;\n
            case 9:\n
                v3 = 1;\n
                sub_401f00(\"Exiting...\\n
\");\n
                goto LABEL_4075bc;\n
            default:\n
LABEL_4075bc:\n
                sub_401f00(\"Unknown Input\\n
\");\n
            }\n
        }\n
    } while (((v3 ^ 255) & 1));\n
    sub_401f00(\"Unsupported signal. Exiting...\\n
\");\n
}\n
", "4224515:sub_407603": null, "4224528:sub_407610": "int sub_407610(unsigned int v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    for (v2 = 0; v2 < a1; v2 += 1)\n
    {\n
        v0 = &v1;\n
        if (!cgc_receive(v6, a0, 1) && !(!*(&v1)))\n
            goto LABEL_407674;\n
        sub_407c60();\n
LABEL_407674:\n
        if (*(a0) == 10)\n
            break;\n
        a0 += 1;\n
    }\n
    if (v2 == a1 && *(a0) != 10)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (*(a0) != 10)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    *(a0) = 0;\n
    v3 = 0;\n
    return v3;\n
}\n
", "4224763:sub_4076fb": null, "4224768:sub_407700": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407700(char *v18)\n
{\n
    unsigned int v0;  // [bp-0x260]\n
    unsigned int v1;  // [bp-0x25c]\n
    unsigned int v2;  // [bp-0x258]\n
    unsigned int v3;  // [bp-0x254]\n
    unsigned int v4;  // [bp-0x250]\n
    unsigned int v5;  // [bp-0x24c]\n
    struct_0 *v6;  // [bp-0x248]\n
    struct_0 *v7;  // [bp-0x244]\n
    struct_0 *v8;  // [bp-0x240]\n
    unsigned int v9;  // [bp-0x23c]\n
    char v10;  // [bp-0x238]\n
    unsigned int v11;  // [bp-0x38]\n
    char v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
\n
    v16 = &v17;\n
    v14 = 0;\n
    if (sub_406660(v18, 0x200, 1) == -1)\n
    {\n
        v15 = -1;\n
        return v15;\n
    }\n
    sub_401c30(&v12, v18, sub_402920(\"SHOW \"));\n
    v13 = 0;\n
    while (true)\n
    {\n
        v8 = v13;\n
        if (v8 >= sub_402920(\"SHOW \"))\n
            break;\n
        (&v12)[v13] = sub_401360((&v12)[v13]);\n
        v13 += 1;\n
    }\n
    if (sub_401bb0(&v12, \"SHOW \", sub_402920(\"SHOW \")))\n
    {\n
        sub_401c30(&v12, v18, sub_402920(\"REPR \"));\n
        v13 = 0;\n
        while (true)\n
        {\n
            v7 = v13;\n
            if (v7 >= sub_402920(\"REPR \"))\n
                break;\n
            (&v12)[v13] = sub_401360((&v12)[v13]);\n
            v13 += 1;\n
        }\n
        if (!sub_401bb0(&v12, \"REPR \", sub_402920(\"REPR \")))\n
        {\n
            v14 = 1;\n
        }\n
        else\n
        {\n
            sub_401c30(&v12, v18, sub_402920(\"CLEAR \"));\n
            v13 = 0;\n
            while (true)\n
            {\n
                v6 = v13;\n
                if (v6 >= sub_402920(\"CLEAR \"))\n
                    break;\n
                (&v12)[v13] = sub_401360((&v12)[v13]);\n
                v13 += 1;\n
            }\n
            if (!sub_401bb0(&v12, \"CLEAR \", sub_402920(\"CLEAR \")))\n
            {\n
                v0 = v18;\n
                if (!sub_4039e0(v0 + sub_402920(\"CLEAR \")))\n
                {\n
                    v15 = 0;\n
                    return v15;\n
                }\n
                v15 = -8;\n
                return v15;\n
            }\n
            else\n
            {\n
                sub_401c30(&v12, v18, 5);\n
                for (v13 = 0; v13 < 5; v13 += 1)\n
                {\n
                    (&v12)[v13] = sub_401360((&v12)[v13]);\n
                }\n
                if (!sub_401bb0(&v12, \"EXIT\", 5))\n
                {\n
                    v15 = 1;\n
                    return v15;\n
                }\n
                v11 = sub_402960(&v18, \"=\");\n
                if (v11 && v18)\n
                {\n
                    if (sub_4035e0(v11, v18, 0x200))\n
                    {\n
                        v15 = -0x4;\n
                        return v15;\n
                    }\n
                    v15 = 0;\n
                    return v15;\n
                }\n
                v15 = -1;\n
                return v15;\n
            }\n
        }\n
    }\n
    sub_406660(v18, 0x200, 2);\n
    v5 = v18;\n
    sub_401c30(&v12, v5 + sub_402920(\"SHOW \"), 6);\n
    for (v13 = 0; v13 < 6; v13 += 1)\n
    {\n
        (&v12)[v13] = sub_401360((&v12)[v13]);\n
    }\n
    if (!sub_401bb0(&v12, \"TABLE\", 6))\n
    {\n
        sub_407c80();\n
        v15 = 0;\n
        return v15;\n
    }\n
    v4 = v18;\n
    if (sub_406800(v4 + sub_402920(\"SHOW \")) == -1)\n
    {\n
        v15 = -2;\n
        return v15;\n
    }\n
    v3 = &v10;\n
    v2 = v14;\n
    v1 = v18;\n
    v9 = sub_402ee0(v1 + sub_402920(\"SHOW \"), v2, v3, 0x200);\n
    if (!v14)\n
        sub_401f00(\"Cell Value: %s\\n
\");\n
    else\n
        sub_401f00(\"Cell Repr: %s\\n
\");\n
    v15 = 0;\n
    return v15;\n
}\n
", "4226130:sub_407c52": null, "4226144:sub_407c60": "int sub_407c60(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    cgc__terminate(v2);\n
    return sub_407c80(v2);\n
}\n
", "4226176:sub_407c80": "int sub_407c80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_403a60();\n
}\n
", "4226192:sub_407c90": "int sub_407c90(unsigned int *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4226237:sub_407cbd": null, "4226240:sub_407cc0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_407cc0(struct struct_0 **v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!a0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1[0] = sub_401440(8);\n
    v1[0] = a0;\n
    v1[1] = 0;\n
    if (!*(v5))\n
    {\n
        *(v5) = &v1[0];\n
    }\n
    else\n
    {\n
        for (v0 = *(v5); v0->field_4; v0 = v0->field_4);\n
        *((v0 + 4)) = v1;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4226391:sub_407d57": null, "4226400:sub_407d60": "typedef struct struct_1 {\n
    char *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_407d60(struct struct_0 **v6, char *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = sub_402920(a0) + 1;\n
    if (v2 > a1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = sub_401440(8);\n
    v1->field_0 = sub_401440(v2);\n
    sub_401c30(v1->field_0, a0, v2);\n
    v1->field_4 = 0;\n
    if (!*(v6))\n
    {\n
        *(v6) = &v1->field_0;\n
    }\n
    else\n
    {\n
        for (v0 = *(v6); *((v0 + 4)); v0 = *((v0 + 4)));\n
        *((v0 + 4)) = v1;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4226632:sub_407e48": null, "4226640:sub_407e50": "int sub_407e50(struct struct_0 **v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1[0] = *(v5);\n
    v0 = v1[0];\n
    *(v5) = v1[1];\n
    sub_4013a0(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4226725:sub_407ea5": null, "4226736:sub_407eb0": "typedef struct struct_1 {\n
    unsigned int field_0[2];\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_407eb0(struct struct_0 **v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = v4;\n
    if (!*(v5))\n
        return v4;\n
    v1 = &*(v4)->field_0;\n
    while (*((v1 + 4)))\n
    {\n
        sub_4013a0(*(v1));\n
        v0 = v1;\n
        v1 = *((v1 + 4));\n
        sub_4013a0(v0);\n
    }\n
    sub_4013a0(*(v1));\n
    sub_4013a0(v1);\n
    v5 = v4;\n
    *(v5) = 0;\n
    return v4;\n
}\n
", "4226880:sub_407f40": "int sub_407f40(unsigned int *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4226925:sub_407f6d": null, "4226928:sub_407f70": "int sub_407f70(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v0[0] = sub_401440(8);\n
    v0[0] = a0;\n
    if (!*(v4))\n
        v0[1] = 0;\n
    else\n
        v0[1] = *(v4);\n
    *(v4) = v0;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4227054:sub_407fee": null, "4227056:sub_407ff0": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_407ff0(unsigned int *v5, char *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!a0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = sub_402920(a0) + 1;\n
    if (v1 > a1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = sub_401440(8);\n
    v0->field_0 = sub_401440(v1);\n
    sub_401c30(v0->field_0, a0, v1);\n
    if (!*(v5))\n
        v0->field_4 = 0;\n
    else\n
        v0->field_4 = *(v5);\n
    *(v5) = v0;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4227263:sub_4080bf": null, "4227264:sub_4080c0": "int sub_4080c0(struct struct_0 **v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1[0] = *(v5);\n
    v0 = v1[0];\n
    *(v5) = v1[1];\n
    sub_4013a0(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4227349:sub_408115": null, "4227360:sub_408120": "typedef struct struct_0 {\n
    unsigned int field_0[2];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
int sub_408120(struct struct_1 **v4)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_1 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = v4;\n
    if (!*(v5))\n
        return v4;\n
    v1 = &*(v4)->field_0;\n
    while (*((v1 + 4)))\n
    {\n
        sub_4013a0(*(v1));\n
        v0 = v1;\n
        v1 = *((v1 + 4));\n
        sub_4013a0(v0);\n
    }\n
    sub_4013a0(*(v1));\n
    sub_4013a0(v1);\n
    v5 = v4;\n
    *(v5) = 0;\n
    return v4;\n
}\n
", "4227504:sub_4081b0": "int sub_4081b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4082d0();\n
    sub_4082e0();\n
    sub_408300();\n
    v0 = 1;\n
    if (!sub_4088d0())\n
    {\n
        v0 = 7;\n
        sub_408fb0();\n
    }\n
    sub_409180();\n
    v1 = sub_4091b0;\n
    sub_4085a0();\n
    if (sub_4082a0())\n
    {\n
        v1 = 7;\n
        sub_408fb0();\n
    }\n
    sub_408d40();\n
    if (sub_408e40())\n
    {\n
        v1 = sub_408ce0;\n
        __setusermatherr();\n
    }\n
    sub_408dc0();\n
    sub_408dd0();\n
    sub_408d90();\n
    v1 = sub_408d30();\n
    _configthreadlocale();\n
    if (sub_408d80())\n
        sub_4082c0();\n
    sub_408f70();\n
    if (sub_408f80())\n
    {\n
        v1 = 7;\n
        sub_408fb0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4227696:sub_408270": "int sub_408270()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408de0();\n
    return 0;\n
}\n
", "4227712:sub_408280": "int sub_408280()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_408f90();\n
    v0 = sub_408d20();\n
    return _set_new_mode();\n
}\n
", "4227744:sub_4082a0": "int sub_4082a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_408cf0());\n
}\n
", "4227776:sub_4082c0": "int sub_4082c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4227792:sub_4082d0": "int sub_4082d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4227808:sub_4082e0": "int sub_4082e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_408d10());\n
}\n
", "4227840:sub_408300": "int sub_408300()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_408d00(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4227872:sub_408320": "int sub_408320()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_407490(v1, v2);\n
}\n
", "4227936:sub_408360": "extern char g_40b5ec;\n
extern char g_40b5f4;\n
extern char g_40b5f8;\n
extern struct_0 *g_40b604;\n
extern char g_40bd08;\n
extern unsigned int g_40c140;\n
extern unsigned int g_40c220;\n
\n
int sub_408360()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40bd08;\n
    v13 = sub_4091e0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40c140;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_408840(1, g_40c140 ^ &v16, v22, v23))\n
        sub_408fb0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_4087c0();\n
    if (g_40c220 == 1)\n
    {\n
        v16 = 7;\n
        sub_408fb0();\n
    }\n
    else if (g_40c220)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40c220 = 1;\n
        v16 = &g_40b604;\n
        v15 = &g_40b5f8;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_408569;\n
        }\n
        else\n
        {\n
            v16 = &g_40b5f4;\n
            v15 = &g_40b5ec;\n
            _initterm(*(&v17));\n
            g_40c220 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_408810();\n
    v8 = sub_408e70();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_408690())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_409220(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_408e80();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_408690())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_408320();\n
    if (!sub_408ee0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_408890(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_408569:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4228351:sub_4084ff": "int sub_4084ff()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4228360:sub_408508": "int sub_408508()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4228387:sub_408523": "extern char g_408531;\n
\n
int sub_408523()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_408531;\n
    if (!sub_408ee0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4228450:sub_408562": "int sub_408562()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4228480:sub_408580": "int sub_408580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408bf0();\n
    return sub_408360();\n
}\n
", "4228496:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408580();\n
}\n
", "4228512:sub_4085a0": "int sub_4085a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4085d0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4228560:sub_4085d0": "extern unsigned int g_40c22c;\n
\n
int sub_4085d0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40c22c;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40c22c))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4228616:sub_408608": "int sub_408608()\n
{\n
}\n
", "4228672:sub_408640": "extern unsigned int g_40c238;\n
\n
int sub_408640(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40c238;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40c238);\n
    return v6;\n
}\n
", "4228706:sub_408662": "int sub_408662()\n
{\n
}\n
", "4228736:sub_408680": "int sub_408680()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4228752:sub_408690": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40bd28;\n
extern unsigned int g_40c140;\n
\n
int sub_408690(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40bd28;\n
    v13 = sub_4091e0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40c140;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_408af0(v6, g_40c140 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_408b60(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4228957:sub_40875d": "int sub_40875d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4228966:sub_408766": "int sub_408766()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4229005:sub_40878d": "int sub_40878d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4229024:sub_4087a0": "int sub_4087a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4229056:sub_4087c0": "extern unsigned int g_40c224;\n
\n
int sub_4087c0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_409a00();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_408680() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40c224 = v6;\n
        if (!g_40c224)\n
        {\n
            tmp_0 = 0;\n
            g_40c224 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40c224 = v6;\n
            v5 = g_40c224;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4229136:sub_408810": "extern void* g_40c224;\n
\n
int sub_408810(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409a00();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40c224;\n
        g_40c224 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40882f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4229184:sub_408840": "extern char g_40c228;\n
\n
int sub_408840(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40c228 = 1;\n
    sub_409570();\n
    v4 = sub_409da0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_409da0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_409db0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4229264:sub_408890": "extern char g_40c228;\n
\n
int sub_408890(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40c228 && a0)\n
        return 1;\n
    sub_409db0(v2);\n
    v3 = sub_409db0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229328:sub_4088d0": "extern char g_40c229;\n
extern unsigned int g_40c22c;\n
extern unsigned int g_40c230;\n
extern unsigned int g_40c234;\n
extern unsigned int g_40c238;\n
extern unsigned int g_40c23c;\n
extern unsigned int g_40c240;\n
\n
int sub_4088d0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40c229)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_408fb0();\n
    }\n
    if (sub_409a00() && !v10)\n
    {\n
        v8 = &g_40c22c;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40c238;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_408996;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40c22c = v4;\n
    g_40c230 = v5;\n
    g_40c234 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40c238 = v1;\n
    g_40c23c = v2;\n
    v11 = v3;\n
    g_40c240 = v11;\n
LABEL_408996:\n
    g_40c229 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4229552:sub_4089b0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4089b0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_1 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_1 **v1;  // [bp-0xc]\n
    struct struct_1 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_409a00() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_409220(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4229632:sub_408a00": "int sub_408a00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4088d0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4229664:sub_408a20": "int sub_408a20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_409a00())\n
    {\n
        v3 = sub_409570();\n
    }\n
    else\n
    {\n
        v3 = sub_4082a0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_4082c0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229712:sub_408a50": "extern char g_40c22c;\n
\n
int sub_408a50()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_409a00())\n
    {\n
        v0 = &g_40c22c;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_409df0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4229760:sub_408a80": "int sub_408a80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409dc0(0);\n
    return sub_409dc0();\n
}\n
", "4229792:sub_408aa0": "int sub_408aa0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_409dd0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_409dd0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_409de0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4229840:sub_408ad0": "char sub_408ad0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409de0();\n
    sub_409de0();\n
    return 1;\n
}\n
", "4229872:sub_408af0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_408af0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4229984:sub_408b60": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_408b60(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 != v0)\n
        {\n
            if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
                return v5;\n
            v5 += 40;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
}\n
", "4230128:sub_408bf0": "extern unsigned int g_40c140;\n
extern unsigned int g_40c180;\n
\n
int sub_408bf0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40c140 != 3141592654)\n
    {\n
        v4 = g_40c140 & -0x10000;\n
        if (v4)\n
        {\n
            g_40c180 = ~(g_40c140);\n
            return g_40c140 & -0x10000;\n
        }\n
    }\n
    v4 = sub_408c70(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40c140 = v0;\n
    g_40c180 = ~(v0);\n
    return v4;\n
}\n
", "4230256:sub_408c70": "int sub_408c70()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4230368:sub_408ce0": "int sub_408ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230384:sub_408cf0": "int sub_408cf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4230400:sub_408d00": "int sub_408d00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230416:sub_408d10": "int sub_408d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4230432:sub_408d20": "int sub_408d20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230448:sub_408d30": "int sub_408d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230464:sub_408d40": "extern void g_40c248;\n
\n
int sub_408d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40c248);\n
}\n
", "4230496:sub_408d60": "extern unsigned int g_40c248;\n
\n
int sub_408d60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40c248);\n
}\n
", "4230528:sub_408d80": "char sub_408d80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4230544:sub_408d90": "int sub_408d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_408fb0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4230592:sub_408dc0": "int sub_408dc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4230608:sub_408dd0": "int sub_408dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4230624:sub_408de0": "int sub_408de0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_408e20();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_408e30(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4230688:sub_408e20": "extern char g_40c250;\n
\n
int sub_408e20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c250;\n
}\n
", "4230704:sub_408e30": "extern char g_40c258;\n
\n
int sub_408e30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c258;\n
}\n
", "4230720:sub_408e40": "extern unsigned int g_40c120;\n
\n
int sub_408e40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40c120)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4230768:sub_408e70": "extern char g_40c264;\n
\n
int sub_408e70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c264;\n
}\n
", "4230784:sub_408e80": "extern char g_40c268;\n
\n
int sub_408e80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c268;\n
}\n
", "4230800:sub_408e90": "extern void* g_40c26c;\n
\n
int sub_408e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40c26c = 0;\n
    return v3;\n
}\n
", "4230816:sub_408ea0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_408ea0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4230880:sub_408ee0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_408ee0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4231024:sub_408f70": "int sub_408f70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231040:sub_408f80": "int sub_408f80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4090f0();\n
}\n
", "4231056:sub_408f90": "int sub_408f90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_409100);\n
}\n
", "4231088:sub_408fb0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_408fb0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_408e90();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_408e90();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4231113:sub_408fc9": "int sub_408fc9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231113\n
}\n
", "4231408:sub_4090f0": "int sub_4090f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231424:sub_409100": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_409100(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4231552:sub_409180": "extern struct_0 *g_40bcfc;\n
\n
int sub_409180()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bcfc;\n
    v3 = &g_40bcfc;\n
    return &g_40bcfc;\n
}\n
", "4231600:sub_4091b0": "extern struct_0 *g_40bd04;\n
\n
int sub_4091b0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bd04;\n
    v3 = &g_40bd04;\n
    return &g_40bd04;\n
}\n
", "4231648:sub_4091e0": "extern unsigned int g_40c140;\n
\n
int sub_4091e0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_409e00(*(v2));\n
    return _except_handler4_common(&g_40c140, sub_409a30, v2, a0, a1);\n
}\n
", "4231712:sub_409220": "int sub_409220()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4231728:sub_409230": "int sub_409230(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x409239;\n
    return tmp_4;\n
}\n
", "4231744:sub_409240": "int sub_409240(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4231776:sub_409260": "int sub_409260(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409240(v2);\n
}\n
", "4231808:sub_409280": "extern unsigned int g_40c270;\n
\n
int sub_409280(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_409230(&g_40c270, v3);\n
    return v0;\n
}\n
", "4231840:sub_4092a0": "extern char g_409220;\n
extern unsigned int g_40d000;\n
\n
int sub_4092a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_409260(&g_40d000) != sub_409220)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4231888:sub_4092d0": "extern char g_40b540;\n
\n
int sub_4092d0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40b540;\n
    v1 = &g_40b540;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4231952:sub_409310": "extern unsigned int g_40d008;\n
\n
int sub_409310(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_409260(&g_40d008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4232000:sub_409340": "extern unsigned int g_40c270;\n
\n
int sub_409340(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_409260(&g_40c270);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_409220();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4232064:sub_409380": "int sub_409380()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232080:sub_409390": "int sub_409390(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4092d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4232099\n
}\n
", "4232112:sub_4093b0": "int sub_4093b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4092d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4232137:sub_4093c9": "int sub_4093c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232137\n
}\n
", "4232144:sub_4093d0": "int sub_4093d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4092d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409310(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232192:sub_409400": "int sub_409400(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4092d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409340(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232240:sub_409430": "extern char g_40b540;\n
\n
int sub_409430(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40b540;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4232304:sub_409470": "int sub_409470(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409430(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4092d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4232347\n
}\n
", "4232352:sub_4094a0": "int sub_4094a0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409430(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4092d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4232401:sub_4094d1": "int sub_4094d1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232401\n
}\n
", "4232416:sub_4094e0": "int sub_4094e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232432:sub_4094f0": "int sub_4094f0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409430(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4092d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409310(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232496:sub_409530": "int sub_409530(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409430(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4092d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409340(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232560:sub_409570": "extern unsigned int g_40c140;\n
extern unsigned int g_40c188;\n
extern unsigned int g_40c18c;\n
extern unsigned int g_40c190;\n
extern unsigned int g_40c274;\n
extern unsigned int g_40c278;\n
extern unsigned int g_40c27c;\n
\n
int sub_409570()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40c140 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40c278 = 0;\n
    g_40c190 = g_40c190 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_409a30();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_4096bb;\n
        g_40c27c = g_40c27c | 1;\n
    }\n
LABEL_4096bb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40c27c = g_40c27c | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40c278 = 1;\n
    g_40c190 = g_40c190 | 2;\n
    g_40c188 = g_40c188 & -2;\n
    g_40c18c = g_40c18c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40c278 = 2;\n
        g_40c190 = g_40c190 | 4;\n
        g_40c188 = g_40c188 & -17;\n
        g_40c18c = g_40c18c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40c278 = 3;\n
                g_40c190 = g_40c190 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40c278 = 5;\n
                    g_40c190 = g_40c190 | 32;\n
                    g_40c188 = g_40c188 & -3;\n
                    g_40c18c = g_40c18c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40c278 = 6;\n
                            g_40c190 = g_40c190 | 64;\n
                            g_40c188 = g_40c188 & -37;\n
                            g_40c18c = g_40c18c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40c188 = g_40c188 & -16777217;\n
                    g_40c18c = g_40c18c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40c274 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40c188 = ~(v2 | 16777256) & g_40c188;\n
                        g_40c18c = ~(v3) & g_40c18c;\n
                        if (g_40c274 > 1)\n
                        {\n
                            g_40c188 = g_40c188 & -65;\n
                            g_40c18c = g_40c18c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4233728:sub_409a00": "extern unsigned int g_40c194;\n
\n
int sub_409a00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40c194)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4233776:sub_409a30": "extern unsigned int g_40c140;\n
extern unsigned int g_40c180;\n
extern unsigned int g_40c288;\n
extern unsigned int g_40c28c;\n
extern unsigned int g_40c294;\n
extern unsigned int g_40c298;\n
extern unsigned int g_40c29c;\n
extern unsigned int g_40c2d8;\n
extern unsigned short g_40c364;\n
extern unsigned short g_40c368;\n
extern unsigned short g_40c36c;\n
extern unsigned short g_40c370;\n
extern unsigned int g_40c374;\n
extern unsigned int g_40c378;\n
extern unsigned int g_40c37c;\n
extern unsigned int g_40c380;\n
extern unsigned int g_40c384;\n
extern unsigned int g_40c388;\n
extern unsigned int g_40c38c;\n
extern unsigned int g_40c390;\n
extern unsigned short g_40c394;\n
extern unsigned int g_40c398;\n
extern unsigned int g_40c39c;\n
extern unsigned short g_40c3a0;\n
\n
int sub_409a30()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40c140)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c388 = v7;\n
        g_40c384 = v6;\n
        g_40c380 = v8;\n
        g_40c37c = v9;\n
        g_40c378 = v10;\n
        g_40c374 = v11;\n
        g_40c3a0 = v12;\n
        g_40c394 = v13;\n
        g_40c370 = v14;\n
        g_40c36c = v15;\n
        g_40c368 = v16;\n
        g_40c364 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40c398 = v0;\n
        g_40c38c = v3;\n
        g_40c390 = *(&v4);\n
        g_40c39c = &v5;\n
        g_40c2d8 = 65537;\n
        g_40c294 = g_40c390;\n
        g_40c288 = 3221226505;\n
        g_40c28c = 1;\n
        g_40c298 = 1;\n
        g_40c29c = 2;\n
        v1 = g_40c140;\n
        v2 = g_40c180;\n
        sub_409d70();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4233792:sub_409a40": "extern unsigned int g_40c288;\n
extern unsigned int g_40c28c;\n
extern unsigned int g_40c294;\n
extern unsigned int g_40c298;\n
extern unsigned int g_40c29c;\n
extern unsigned short g_40c364;\n
extern unsigned short g_40c368;\n
extern unsigned short g_40c36c;\n
extern unsigned short g_40c370;\n
extern unsigned int g_40c374;\n
extern unsigned int g_40c378;\n
extern unsigned int g_40c37c;\n
extern unsigned int g_40c380;\n
extern unsigned int g_40c384;\n
extern unsigned int g_40c388;\n
extern unsigned int g_40c38c;\n
extern unsigned int g_40c390;\n
extern unsigned short g_40c394;\n
extern unsigned int g_40c398;\n
extern unsigned int g_40c39c;\n
extern unsigned short g_40c3a0;\n
\n
int sub_409a40()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40c388 = v4;\n
        g_40c384 = v5;\n
        g_40c380 = v6;\n
        g_40c37c = v7;\n
        g_40c378 = v8;\n
        g_40c374 = v9;\n
        g_40c3a0 = v10;\n
        g_40c394 = v11;\n
        g_40c370 = v12;\n
        g_40c36c = v13;\n
        g_40c368 = v14;\n
        g_40c364 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40c398 = v0;\n
        g_40c38c = v1;\n
        g_40c390 = *(&v2);\n
        g_40c39c = &v3;\n
        g_40c294 = g_40c390;\n
        g_40c288 = 3221226505;\n
        g_40c28c = 1;\n
        g_40c298 = 1;\n
        g_40c29c = v3;\n
        sub_409d70();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4233817:sub_409a59": "int sub_409a59()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4233817\n
}\n
", "4234016:sub_409b20": "extern unsigned int g_40c288;\n
extern unsigned int g_40c28c;\n
extern unsigned int g_40c294;\n
extern unsigned int g_40c298;\n
extern unsigned int g_40c29c;\n
extern char g_40c2a0;\n
extern unsigned short g_40c364;\n
extern unsigned short g_40c368;\n
extern unsigned short g_40c36c;\n
extern unsigned short g_40c370;\n
extern unsigned int g_40c374;\n
extern unsigned int g_40c378;\n
extern unsigned int g_40c37c;\n
extern unsigned int g_40c380;\n
extern unsigned int g_40c384;\n
extern unsigned int g_40c388;\n
extern unsigned int g_40c38c;\n
extern unsigned int g_40c390;\n
extern unsigned short g_40c394;\n
extern unsigned int g_40c398;\n
extern unsigned int g_40c39c;\n
extern unsigned short g_40c3a0;\n
\n
int sub_409b20()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1061033];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c388 = v7;\n
        g_40c384 = v8;\n
        g_40c380 = v9;\n
        g_40c37c = v10;\n
        g_40c378 = v11;\n
        g_40c374 = v12;\n
        g_40c3a0 = v13;\n
        g_40c394 = v14;\n
        g_40c370 = v15;\n
        g_40c36c = v16;\n
        g_40c368 = v17;\n
        g_40c364 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40c398 = v0;\n
        g_40c38c = v2;\n
        g_40c390 = *(&v3);\n
        g_40c39c = &v4;\n
        g_40c294 = g_40c390;\n
        g_40c288 = 3221226505;\n
        g_40c28c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40c298 = v5 + 1;\n
        g_40c29c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_40c2a0)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_409d70();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4234041:sub_409b39": "int sub_409b39()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234041\n
}\n
", "4234320:sub_409c50": "int sub_409c50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409a40(8);\n
}\n
", "4234363:sub_409c7b": "int sub_409c7b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234363\n
}\n
", "4234608:sub_409d70": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409d70(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4234656:sub_409da0": "char sub_409da0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234672:sub_409db0": "char sub_409db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234688:sub_409dc0": "char sub_409dc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234704:sub_409dd0": "char sub_409dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234720:sub_409de0": "char sub_409de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234736:sub_409df0": "int sub_409df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234752:sub_409e00": "extern unsigned int g_40c278;\n
\n
int sub_409e00(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40c278 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4235060:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4235066:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4235072:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4235078:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4235084:cgc_sqrt": "int cgc_sqrt()\n
{\n
    return ::kernel32.dll::cgc_sqrt();\n
}\n
", "4235090:cgc_fabs": "int cgc_fabs()\n
{\n
    return ::kernel32.dll::cgc_fabs();\n
}\n
", "4235096:cgc_cos": "int cgc_cos()\n
{\n
    return ::kernel32.dll::cgc_cos();\n
}\n
", "4235102:cgc_log": "int cgc_log()\n
{\n
    return ::kernel32.dll::cgc_log();\n
}\n
", "4235108:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4235114:cgc_remainder": "int cgc_remainder()\n
{\n
    return ::kernel32.dll::cgc_remainder();\n
}\n
", "4235120:cgc_sin": "int cgc_sin()\n
{\n
    return ::kernel32.dll::cgc_sin();\n
}\n
", "4235126:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4235132:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4235138:sub_409f82": "int sub_409f82(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4235144:sub_409f88": "int sub_409f88()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4235150:sub_409f8e": "int sub_409f8e()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4235156:sub_409f94": "int sub_409f94(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4235162:sub_409f9a": "int sub_409f9a(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4235168:sub_409fa0": "int sub_409fa0()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4235174:sub_409fa6": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409fa6(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4235180:sub_409fac": "int sub_409fac(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4235186:sub_409fb2": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_409fb2(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4235192:sub_409fb8": "int sub_409fb8(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4235198:sub_409fbe": "int sub_409fbe(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4235204:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4235210:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4235216:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4235222:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4235228:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4235234:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4235240:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4235246:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4235252:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4235258:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4235264:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4235270:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4235276:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4235282:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4235288:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4235294:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4235300:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4235306:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4235312:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4235318:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4235324:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4235330:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4235336:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4235342:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4235348:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4235354:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4235360:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4235366:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4235372:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4235378:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4235384:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4235390:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4235396:sub_40a084": "int sub_40a084()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4235402:sub_40a08a": "int sub_40a08a(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_cos": null, "5242892:cgc_deallocate": null, "5242896:cgc_fabs": null, "5242900:cgc_log": null, "5242904:cgc_log10": null, "5242908:cgc_pow": null, "5242912:cgc_receive": null, "5242916:cgc_remainder": null, "5242920:cgc_sin": null, "5242924:cgc_sqrt": null, "5242928:cgc_transmit": null, "5242932:GetCurrentProcess": null, "5242936:GetCurrentProcessId": null, "5242940:GetCurrentThreadId": null, "5242944:GetModuleHandleW": null, "5242948:GetStartupInfoW": null, "5242952:GetSystemTimeAsFileTime": null, "5242956:InitializeSListHead": null, "5242960:IsDebuggerPresent": null, "5242964:IsProcessorFeaturePresent": null, "5242968:QueryPerformanceCounter": null, "5242972:SetUnhandledExceptionFilter": null, "5242976:TerminateProcess": null, "5242980:UnhandledExceptionFilter": null, "5242984:__current_exception": null, "5242988:__current_exception_context": null, "5242992:__std_type_info_destroy_list": null, "5242996:_except_handler4_common": null, "5243000:memset": null, "5243004:__p___argc": null, "5243008:__p___argv": null, "5243012:__p__commode": null, "5243016:__setusermatherr": null, "5243020:_c_exit": null, "5243024:_cexit": null, "5243028:_configthreadlocale": null, "5243032:_configure_narrow_argv": null, "5243036:_controlfp_s": null, "5243040:_crt_at_quick_exit": null, "5243044:_crt_atexit": null, "5243048:_execute_onexit_table": null, "5243052:_exit": null, "5243056:_get_initial_narrow_environment": null, "5243060:_initialize_narrow_environment": null, "5243064:_initialize_onexit_table": null, "5243068:_initterm": null, "5243072:_initterm_e": null, "5243076:_register_onexit_function": null, "5243080:_register_thread_local_exe_atexit_callback": null, "5243084:_seh_filter_dll": null, "5243088:_seh_filter_exe": null, "5243092:_set_app_type": null, "5243096:_set_fmode": null, "5243100:_set_new_mode": null, "5243104:exit": null, "5243108:terminate": null, "6295596:UnresolvableCallTarget": null}