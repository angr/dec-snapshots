{"4198400:sub_401000": "int sub_401000(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0 * v5;\n
    v1 = sub_401050();\n
    v0 = v2;\n
    sub_403910(v1, 0);\n
    return v1;\n
}\n
", "4198472:sub_401048": null, "4198480:sub_401050": "extern struct_0 *g_409098;\n
\n
int sub_401050(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_0 *v1[2];  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct struct_0 *v6[2];  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v9 = &v10;\n
    if (v11 < 8)\n
    {\n
        v11 = 8;\n
    }\n
    else if ((v11 & 3))\n
    {\n
        v11 = (v11 >> 2) + 1;\n
        v11 *= 4;\n
    }\n
    v8 = &g_409098->field_0;\n
    while (true)\n
    {\n
        if (!v8)\n
            v8 = sub_4012d0();\n
        v7 = v8;\n
        v6[0] = v8 + (*(v7) & -0x4) - 4;\n
        if (*(v7) >= v11)\n
            break;\n
        v8 = v6[0];\n
    }\n
    v5 = v8 + 4;\n
    v4 = *(v7) - v11;\n
    *(v7) = v11;\n
    v12 = v7;\n
    *(v12) = *(v12) | 1;\n
    if (v4 >= 12)\n
    {\n
        v3 = v8 + v11 + 4;\n
        v2 = v3;\n
        *(v2) = v4 - 4;\n
        v1[0] = &v6[0];\n
        if (-4 + v2 + (*(v2) & -0x4) != v6)\n
        {\n
            sub_403110();\n
            cgc__terminate();\n
        }\n
        if (g_409098 == v8)\n
        {\n
            g_409098 = v2;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v2;\n
        }\n
        else\n
        {\n
            if (v1[1])\n
                *((-4 + &v1[1]->field_0 + (v1[1]->field_0 & -0x4))) = v3;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v3;\n
        }\n
        v13 = v7;\n
        *(v13) = *(v13) | 2;\n
    }\n
    else if (g_409098 == v8)\n
    {\n
        g_409098 = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v6[1])\n
            *((-4 + &v6[1]->field_0 + (v6[1]->field_0 & -0x4))) = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = v6[1];\n
    }\n
    v0 = v11;\n
    sub_403910(v8 + 4, 0);\n
    return v8 + 4;\n
}\n
", "4199112:sub_4012c8": null, "4199120:sub_4012d0": "extern struct_0 *g_409098;\n
\n
int sub_4012d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = v7 + 4;\n
    if ((v4 & 4095))\n
    {\n
        v4 = (v4 >> 12) + 1;\n
        v4 *= 0x1000;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(v4, 0))\n
        cgc__terminate();\n
    v2 = *(&v3);\n
    v1[0] = *(&v3) + v4 - 8;\n
    *(v2) = v4 - 4;\n
    v1[1] = 0;\n
    v1[0] = g_409098;\n
    g_409098 = v2;\n
    return v2;\n
}\n
", "4199293:sub_40137d": null, "4199296:sub_401380": "extern struct_0 *g_409098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_409098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_409098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_409098;\n
    v1[1] = 0;\n
    if (g_409098)\n
        *((&g_409098->field_0 + (g_409098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_409098 = v12;\n
    return v6;\n
}\n
", "4199728:sub_401530": "extern struct_0 *g_409098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_409098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_409098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_409098;\n
    v1[1] = 0;\n
    if (g_409098)\n
        *((&g_409098->field_0 + (g_409098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_409098 = v12;\n
    return v6;\n
}\n
", "4199929:sub_4015f9": null, "4199936:sub_401600": null, "4200113:sub_4016b1": null, "4200128:sub_4016c0": null, "4200336:sub_401790": "int sub_401790(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200408:sub_4017d8": null, "4200416:sub_4017e0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4017e0(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v5 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v5 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v7 = v5;\n
        v5 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4200625:sub_4018b1": null, "4200640:sub_4018c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4018c0(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = ((0 CONCAT v5) /m 10 >> 32) + 48;\n
        v5 = (0 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v7 = v0;\n
        v0 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4200819:sub_401973": null, "4200832:sub_401980": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401980(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v5 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v5 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4201025:sub_401a41": null, "4201040:sub_401a50": null, "4201927:sub_401dc7": null, "4201936:sub_401dd0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_401dd0(struct struct_0 **v3, struct struct_0 **a0)\n
{\n
    struct struct_0 **<0x401dd0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct struct_0 **v2;  // [bp+0x0]\n
    struct_1 *v4;  // [bp+0xc]\n
    struct_1 *v5;  // [bp+0x10]\n
    unsigned int v6;  // [bp+0x14]\n
    unsigned int v7;  // [bp+0x18]\n
    unsigned int v8;  // [bp+0x1c]\n
    unsigned int v9;  // [bp+0x20]\n
    unsigned int v10;  // [bp+0x24]\n
    void* v11;  // [bp+0x28]\n
    struct_1 *v12;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct struct_0 **v13;  // [bp+0x30]\n
    struct struct_0 **v14;  // [bp+0x34], Other Possible Types: unsigned int\n
    struct struct_0 **v15;  // [bp+0x38]\n
    struct struct_0 **v16;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct struct_0 **v17;  // [bp+0x48]\n
    struct struct_0 **v18;  // [bp+0x4c], Other Possible Types: unsigned int\n
    struct struct_0 **v19;  // [bp+0x50]\n
    struct struct_0 **v20;  // [bp+0x54], Other Possible Types: unsigned int\n
    struct struct_0 **v21;  // [bp+0x58]\n
    char v22;  // [bp+0x5f]\n
    void* v23;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v24;  // [bp+0x64], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp+0x68]\n
    void* v26;  // [bp+0x6c], Other Possible Types: unsigned int\n
    struct_1 *v27;  // [bp+0x70], Other Possible Types: unsigned int\n
    void* v28;  // [bp+0x74], Other Possible Types: unsigned int\n
    char v29;  // [bp+0x78]\n
    unsigned int v30;  // [bp+0xb8], Other Possible Types: char\n
    unsigned int v31;  // [bp+0xbc]\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
\n
    v1 = &<0x401dd0[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v31 = -1;\n
        return v31;\n
    }\n
    while (*(v3))\n
    {\n
        if (*(v3) != 64)\n
        {\n
            v2 = *(v3);\n
            sub_401790(*(v3));\n
            v3 += 1;\n
            v30 = *(&v30) + 1;\n
LABEL_4027df:\n
        }\n
        else\n
        {\n
            v3 += 1;\n
            v28 = 0;\n
            v27 = 0;\n
            v26 = 0;\n
            v25 = 0;\n
            v23 = 0;\n
            if (*(v3) == 64)\n
            {\n
                v2 = 64;\n
                sub_401790(64);\n
                v3 += 1;\n
                v30 = *(&v30) + 1;\n
                continue;\n
            }\n
            if (*(v3) == 45)\n
            {\n
                v25 = 1;\n
                v3 += 1;\n
            }\n
            v2 = *(v3);\n
            if (sub_4032c0())\n
            {\n
                if (*(v3) == 48)\n
                {\n
                    v26 = 1;\n
                    v3 += 1;\n
                }\n
                v2 = *(v3);\n
                if (sub_4032c0())\n
                {\n
                    v2 = v3;\n
                    v28 = sub_403620();\n
                    while (true)\n
                    {\n
                        v2 = *(v3);\n
                        if (!sub_4032c0())\n
                            break;\n
                        v3 += 1;\n
                    }\n
                }\n
            }\n
            if (*(v3) == 46)\n
            {\n
                v3 += 1;\n
                v2 = v3;\n
                v27 = sub_403620();\n
                while (true)\n
                {\n
                    v2 = *(v3);\n
                    if (!sub_4032c0())\n
                        break;\n
                    v3 += 1;\n
                }\n
            }\n
            if (*(v3) == 99)\n
            {\n
                v32 = a0;\n
                a0 = v32 + 1;\n
                v22 = *(v32);\n
                v23 = v28 - 1;\n
                if (!v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        if (v26)\n
                        {\n
                            v2 = 48;\n
                            sub_401790(48);\n
                        }\n
                        else\n
                        {\n
                            v2 = 32;\n
                            sub_401790(32);\n
                        }\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                v2 = v22;\n
                sub_401790(v22);\n
                v30 = *(&v30) + 1;\n
                if (v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_401790(32);\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                v3 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 100)\n
            {\n
                v33 = a0;\n
                a0 = v33 + 1;\n
                v21 = &*(v33)->field_0;\n
                v2 = v21;\n
                v3 = &v29;\n
                sub_4017e0(v3, a0);\n
                v9 = v28;\n
                v2 = &v29;\n
                v23 = v9 - sub_403a90(&v29);\n
                if (!v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        if (v26)\n
                        {\n
                            v2 = 48;\n
                            sub_401790(48);\n
                        }\n
                        else\n
                        {\n
                            v2 = 32;\n
                            sub_401790(32);\n
                        }\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                for (v20 = &v29; *(v20); v20 = v20 + 1)\n
                {\n
                    v2 = *(v20);\n
                    sub_401790(*(v20));\n
                    v30 = *(&v30) + 1;\n
                }\n
                if (v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_401790(32);\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                v3 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 117)\n
            {\n
                v34 = a0;\n
                a0 = v34 + 1;\n
                v19 = &*(v34)->field_0;\n
                v2 = v19;\n
                v3 = &v29;\n
                sub_4018c0(v3, a0);\n
                v8 = v28;\n
                v2 = &v29;\n
                v23 = v8 - sub_403a90(&v29);\n
                if (!v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        if (!v26)\n
                        {\n
                            v2 = 32;\n
                            sub_401790(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_401790(48);\n
                        }\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                for (v18 = &v29; *(v18); v18 += 1)\n
                {\n
                    v2 = *(v18);\n
                    sub_401790(*(v18));\n
                    v30 = *(&v30) + 1;\n
                }\n
                if (v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_401790(32);\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                v3 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 120)\n
            {\n
                v35 = a0;\n
                a0 = v35 + 1;\n
                v17 = &*(v35)->field_0;\n
                v2 = v17;\n
                v3 = &v29;\n
                sub_401980(v3, a0);\n
                v7 = v28;\n
                v2 = &v29;\n
                v23 = v7 - sub_403a90(&v29);\n
                if (!v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        if (!v26)\n
                        {\n
                            v2 = 32;\n
                            sub_401790(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_401790(48);\n
                        }\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                for (v16 = &v29; *(v16); v16 += 1)\n
                {\n
                    v2 = *(v16);\n
                    sub_401790(*(v16));\n
                    v30 = *(&v30) + 1;\n
                }\n
                if (v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_401790(32);\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                v3 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 102)\n
            {\n
                v36 = a0;\n
                a0 = v36 + 2;\n
                *(&v15) = *(&v36);\n
                *(&v2) = *(&v15);\n
                a0 = &v29;\n
                v4 = v27;\n
                sub_401a50();\n
                v6 = v28;\n
                v2 = &v29;\n
                v23 = v6 - sub_403a90();\n
                if (!v25)\n
                {\n
                    for (v24 = 0; v24 < v23; v24 += 1)\n
                    {\n
                        if (!v26)\n
                        {\n
                            v2 = 32;\n
                            sub_401790(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_401790(48);\n
                        }\n
                        v30 = *(&v30) + 1;\n
                    }\n
                }\n
                for (v14 = &v29; *(v14); v14 = v14 + 1)\n
                {\n
                    v2 = *(v14);\n
                    sub_401790(*(v14));\n
                    v30 = *(&v30) + 1;\n
                }\n
                v3 += 1;\n
                continue;\n
            }\n
            if (!(*(v3) == 115))\n
                goto LABEL_4027df;\n
            v37 = a0;\n
            a0 = v37 + 1;\n
            v13 = &*(v37)->field_0;\n
            if (v27 > 0)\n
            {\n
                v5 = v27;\n
                v2 = v13;\n
                if (v5 < sub_403a90())\n
                {\n
                    v12 = v27;\n
                    goto LABEL_402673;\n
                }\n
            }\n
            v2 = v13;\n
            v12 = sub_403a90();\n
LABEL_402673:\n
            v23 = v28 - v12;\n
            if (!v25)\n
            {\n
                for (v24 = 0; v24 < v23; v24 += 1)\n
                {\n
                    if (!v26)\n
                    {\n
                        v2 = 32;\n
                        sub_401790(32);\n
                    }\n
                    else\n
                    {\n
                        v2 = 48;\n
                        sub_401790(48);\n
                    }\n
                    v30 = *(&v30) + 1;\n
                }\n
            }\n
            v11 = 0;\n
            v2 = v13;\n
            v2 = 1;\n
            v3 = v13;\n
            a0 = sub_403a90();\n
            v4 = &v11;\n
            v10 = cgc_transmit(v3, a0, v4);\n
            if (v10)\n
            {\n
                v2 = 1;\n
                cgc__terminate();\n
            }\n
            v30 = v11 + v30;\n
            if (v25)\n
            {\n
                for (v24 = 0; v24 < v23; v24 += 1)\n
                {\n
                    v2 = 32;\n
                    sub_401790(32);\n
                    v30 = *(&v30) + 1;\n
                }\n
            }\n
            v3 += 1;\n
        }\n
    }\n
    v31 = v30;\n
    return v31;\n
}\n
", "4204541:sub_4027fd": null, "4204544:sub_402800": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402800(struct_0 *v3, struct_0 *a0, struct struct_0 **a1)\n
{\n
    struct_0 *<0x402800[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct_0 *v2;  // [bp+0x0]\n
    char v4;  // [bp+0x13]\n
    struct struct_0 **v5;  // [bp+0x14]\n
    unsigned int v6;  // [bp+0x18]\n
    unsigned int v7;  // [bp+0x1c]\n
    unsigned int v8;  // [bp+0x20]\n
    struct struct_0 **v9;  // [bp+0x24], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp+0x28], Other Possible Types: unsigned int\n
    struct_0 *v11;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct_0 *v12;  // [bp+0x30]\n
    struct_0 *v13;  // [bp+0x3c], Other Possible Types: unsigned int\n
    struct_0 *v14;  // [bp+0x40]\n
    struct_0 *v15;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct_0 *v16;  // [bp+0x48]\n
    char v17;  // [bp+0x4f]\n
    void* v18;  // [bp+0x50], Other Possible Types: unsigned int\n
    void* v19;  // [bp+0x54], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp+0x58]\n
    void* v21;  // [bp+0x5c], Other Possible Types: unsigned int\n
    struct struct_0 **v22;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v23;  // [bp+0x64], Other Possible Types: unsigned int\n
    char v24;  // [bp+0x68]\n
    unsigned int v25;  // [bp+0xa8], Other Possible Types: char\n
    struct_0 *v26;  // [bp+0xac], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
\n
    v1 = &<0x402800[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            v3[*(&v25)].field_0 = *(a0);\n
            a0 += 1;\n
            v25 = *(&v25) + 1;\n
LABEL_4030ef:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (a0->field_0 == 64)\n
            {\n
                v3[*(&v25)].field_0 = 64;\n
                a0 += 1;\n
                v25 = *(&v25) + 1;\n
                continue;\n
            }\n
            if (a0->field_0 == 45)\n
            {\n
                v20 = 1;\n
                a0 += 1;\n
            }\n
            v2 = *(a0);\n
            if (sub_4032c0())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v21 = 1;\n
                    a0 += 1;\n
                }\n
                v2 = *(a0);\n
                if (sub_4032c0())\n
                {\n
                    v2 = a0;\n
                    v23 = sub_403620();\n
                    while (true)\n
                    {\n
                        v2 = *(a0);\n
                        if (!sub_4032c0())\n
                            break;\n
                        a0 += 1;\n
                    }\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                v2 = a0;\n
                v22 = sub_403620();\n
                while (true)\n
                {\n
                    v2 = *(a0);\n
                    if (!sub_4032c0())\n
                        break;\n
                    a0 += 1;\n
                }\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v17 = *(v27);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                v3[*(&v25)].field_0 = v17;\n
                v25 = *(&v25) + 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v16 = *(v28);\n
                v2 = v16;\n
                v3 = &v24;\n
                sub_4017e0(v3, a0);\n
                v8 = v23;\n
                v2 = &v24;\n
                v18 = v8 - sub_403a90(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v15);\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v14 = *(v29);\n
                v2 = v14;\n
                v3 = &v24;\n
                sub_401980(v3, a0);\n
                v7 = v23;\n
                v2 = &v24;\n
                v18 = v7 - sub_403a90(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v13 = &v24; v13->field_0; v13 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = v13->field_0;\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                v30 = a1;\n
                a1 = v30 + 2;\n
                *(&v12) = *(&v30);\n
                *(&v2) = *(&v12);\n
                a0 = &v24;\n
                a1 = v22;\n
                sub_401a50();\n
                v6 = v23;\n
                v2 = &v24;\n
                v18 = v6 - sub_403a90();\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v11 = &v24; *(v11); v11 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v11);\n
                    v25 = *(&v25) + 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_4030ef;\n
            v31 = a1;\n
            a1 = v31 + 1;\n
            v10 = *(v31);\n
            if (v22 > 0)\n
            {\n
                v5 = v22;\n
                v2 = v10;\n
                if (v5 < sub_403a90())\n
                {\n
                    v9 = v22;\n
                    goto LABEL_402f65;\n
                }\n
            }\n
            v2 = v10;\n
            v9 = sub_403a90();\n
LABEL_402f65:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (v21)\n
                        v3[*(&v25)].field_0 = 48;\n
                    else\n
                        v3[*(&v25)].field_0 = 32;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v4 = 0;\n
                if (v10->field_0)\n
                    v4 = !(v9 <= 0);\n
                if (!(v4 & 1))\n
                    break;\n
                v3[*(&v25)].field_0 = v10->field_0;\n
                v25 = *(&v25) + 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = 32;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4206861:sub_40310d": null, "4206864:sub_403110": "int sub_403110()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* **v1;  // [bp-0x8]\n
    void* **v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0x1010]\n
    unsigned int v5;  // ebp\n
\n
    sub_405250();\n
    v1 = &v3;\n
    v0 = sub_401dd0(v2, v1);\n
    v5 = *(&v4);\n
    return;\n
}\n
", "4206918:sub_403146": null, "4206928:sub_403150": "int sub_403150(void* v5, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v1 = &v6;\n
    v0 = sub_402800(v5, a0, v1);\n
    v8 = v2;\n
    return v0;\n
}\n
", "4206992:sub_403190": "int sub_403190(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4207064:sub_4031d8": null, "4207072:sub_4031e0": "int sub_4031e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207126:sub_403216": null, "4207136:sub_403220": "int sub_403220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207190:sub_403256": null, "4207200:sub_403260": "int sub_403260(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4031e0(v3);\n
    return v0 | sub_403220(v3);\n
}\n
", "4207246:sub_40328e": null, "4207248:sub_403290": "int sub_403290(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_403260(v3);\n
    return v0 | sub_4032c0(v3, v0);\n
}\n
", "4207294:sub_4032be": null, "4207296:sub_4032c0": "int sub_4032c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207350:sub_4032f6": null, "4207360:sub_403300": "int sub_403300(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207454:sub_40335e": null, "4207456:sub_403360": null, "4207496:sub_403388": null, "4207504:sub_403390": null, "4207568:sub_4033d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4033d0()\n
{\n
    char <0x4033d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_37;  // tmp #37\n
    int tmp_39;  // tmp #39\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp+0x0]\n
    char *v2;  // [bp+0x4], Other Possible Types: unsigned int\n
    unsigned long v3;  // [bp+0x8]\n
    void* v4;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp+0x14]\n
    unsigned long long v6;  // [bp+0x18], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp+0x20], Other Possible Types: unsigned long long\n
    unsigned long v8;  // [bp+0x28], Other Possible Types: unsigned long long\n
    int v9;  // 168, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // xmm0\n
    int v11;  // xmm0\n
    int v13;  // xmm0\n
    struct_0 *v14;  // ebp\n
\n
    v0 = &<0x4033d0[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v9 = 0;\n
        v6 = 4591870180066957722;\n
        v5 = 1;\n
        while (true)\n
        {\n
            v1 = *(v2);\n
            if (!sub_403300(*(v2)))\n
                break;\n
            v2 += 1;\n
        }\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v2))\n
            {\n
LABEL_4035f8:\n
                *(&v9) = v5;\n
                xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE)))\n
                *(&v8) = v13;\n
                break;\n
            }\n
            else\n
            {\n
                if (*(v2) == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_4035d1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_4035d1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_4035d1;\n
                }\n
                v1 = *(v2);\n
                if (!sub_4032c0(*(v2)))\n
                    goto LABEL_4035f8;\n
                if (!v4)\n
                {\n
LABEL_403539:\n
                    v4 = 1;\n
                    v9 = (0 CONCAT v7) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v2) - 48);\n
                    *(&v7) = v9;\n
                    goto LABEL_4035d1;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_403539;\n
                    if (v4 == 2)\n
                    {\n
                        v10 = *(v2) - 48;\n
                        v11 = v9 * (0 CONCAT v6);\n
                        *(&v7) = v11 + (0 CONCAT v7);\n
                        tmp_37 = DivV(tmp_39, tmp_38);\n
                        v9 = tmp_37;\n
                        *(&v6) = v9;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
LABEL_4035d1:\n
                    v2 += 1;\n
                }\n
            }\n
        }\n
    }\n
    *(&v3) = *(&v8);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v14 = v0;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v14 = v0;\n
    return;\n
}\n
", "4208158:sub_40361e": null, "4208160:sub_403620": "int sub_403620(char *v7)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; sub_403300(*(v7)); v7 += 1);\n
    for (v1 = 0; *(v7); v7 += 1)\n
    {\n
        if (*(v7) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v7) != 43)\n
            {\n
                if (!sub_4032c0(*(v7)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v7) - 48;\n
                v0 += 1;\n
                if (v0 == 10)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = v3 * v2;\n
    return v4;\n
}\n
", "4208541:sub_40379d": null, "4208544:sub_4037a0": "int sub_4037a0(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4208635:sub_4037fb": null, "4208640:sub_403800": "int sub_403800(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v4 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v4 + v1)) = 0;\n
    }\n
    return v4;\n
}\n
", "4208795:sub_40389b": null, "4208800:sub_4038a0": "int sub_4038a0(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v5 = v4;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!a0)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v5 = v1;\n
            if (v5 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4208908:sub_40390c": null, "4208912:sub_403910": "int sub_403910(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v3;\n
}\n
", "4208990:sub_40395e": null, "4208992:sub_403960": "int sub_403960(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(v4) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4209100:sub_4039cc": null, "4209104:sub_4039d0": "int sub_4039d0(char *v7, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = v7;\n
    v3 = sub_403a90();\n
    if (v7 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v7[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v7[v2 + v3] = 0;\n
        v4 = v7;\n
        return v4;\n
    }\n
    v4 = v7;\n
    return v4;\n
}\n
", "4209285:sub_403a85": null, "4209296:sub_403a90": "int sub_403a90(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
        return v0;\n
    for (v0 = 0; *((v3 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4209373:sub_403add": null, "4209376:sub_403ae0": "int sub_403ae0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x4a4]\n
    char v1;  // [bp-0x49c]\n
    void* v2;  // [bp-0x9c]\n
    unsigned int v3;  // [bp-0x98]\n
    char v4;  // [bp-0x94]\n
    unsigned int v5;  // [bp-0x90]\n
    char v6;  // [bp-0x8c]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    while (true)\n
    {\n
        sub_4038a0(&v6, 128);\n
        v11 = v10 >> 5;\n
        *(&(&v6)[4 * v11]) = 1 << (v10 & 31 & 31) | *(&(&v6)[4 * v11]);\n
        v2 = 0;\n
        v3 = 10;\n
        v0 = &v4;\n
        v5 = cgc_fdwait(v10 + 1, &v6, 0, &v2);\n
        if (v5)\n
        {\n
            v7 = v5;\n
            return v7;\n
        }\n
        if (!(*(&(&v6)[4 * (v10 >> 5)]) & 1 << (v10 & 31 & 31)))\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        cgc_receive(v10, &v1, 0x400);\n
    }\n
}\n
", "4209660:sub_403bfc": null, "4209664:sub_403c00": "int sub_403c00(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = a0;\n
    v1 = sub_403c60(v4, 10);\n
    if (v1 != a0)\n
    {\n
        v4[v1] = 0;\n
        return v1;\n
    }\n
    v4[1 + a0] = 0;\n
    return v1;\n
}\n
", "4209753:sub_403c59": null, "4209760:sub_403c60": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403c60(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 0; v3 < a1; v3 += 1)\n
    {\n
        *((v6 + v3)) = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 1))\n
        {\n
            v3 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v1 == a0)\n
                break;\n
            *((v6 + v3)) = v1;\n
        }\n
    }\n
    if (v3 == a1)\n
        sub_403ae0(0);\n
    return v3;\n
}\n
", "4209958:sub_403d26": null, "4209968:sub_403d30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403d30(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = a0 - v3;\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v0 = &v1;\n
            if (cgc_receive(0, v7 + v3, v2))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 -= v1;\n
            v3 = v1 + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4210124:sub_403dcc": null, "4210128:sub_403dd0": "int sub_403dd0(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (v4 && a0)\n
    {\n
        for (v0 = sub_403a90(v4); *((a0 + v1)); v1 += 1)\n
        {\n
            v4[v0] = *((a0 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4210267:sub_403e5b": null, "4210272:sub_403e60": "int sub_403e60(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v5)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v5 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v5 + v2)) = 0;\n
    return v2;\n
}\n
", "4210471:sub_403f27": null, "4210480:sub_403f30": "int sub_403f30(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    cgc_transmit(1, v4, sub_403a90(v4));\n
    v0 = &v1;\n
    return cgc_transmit(1, \"\\n
\", 1);\n
}\n
", "4210574:sub_403f8e": null, "4210576:sub_403f90": "int sub_403f90(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    for (v0 = v4; *(v3); v3 += 1)\n
    {\n
        if (*(v3) == a0)\n
        {\n
            v0 = v3;\n
            return v0;\n
        }\n
    }\n
    if (*(v3) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4210682:sub_403ffa": null, "4210688:sub_404000": "extern struct_0 *g_40909c;\n
extern struct_0 *g_4090a0;\n
extern void* g_4090a4;\n
extern struct_0 *g_4090a8;\n
\n
int sub_404000(char *v11, char *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc]\n
    char *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    if (!a0)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v11)\n
    {\n
        if (g_4090a0)\n
        {\n
            cgc_deallocate(g_4090a0);\n
            g_4090a0 = 0;\n
            g_4090a4 = 0;\n
            g_4090a8 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!g_4090a0)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (g_4090a8 >= g_4090a0 + g_4090a4)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!g_4090a0)\n
    {\n
        if (sub_403a90(v11) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        g_4090a4 = sub_403a90(v11);\n
        v0 = &g_4090a0;\n
        if (cgc_allocate(g_4090a4, 0))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        sub_4037a0(g_4090a0, v11);\n
        g_4090a8 = g_4090a0;\n
    }\n
    v11 = &g_4090a8->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (sub_403f90(a0, *(v11)))\n
            v3 = v11 < g_4090a0 + g_4090a4;\n
        if (!(v3 & 1))\n
            break;\n
        v11 += 1;\n
    }\n
    if (v11 >= g_4090a0 + g_4090a4)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = v11;\n
    v2 = v11;\n
    v6 = &v2[sub_403a90(v11)];\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= sub_403a90(a0))\n
            break;\n
        v5 = sub_403f90(v7, a0[v4]);\n
        if (v5 && v5 && v5 < v6)\n
            v6 = v5;\n
        v4 += 1;\n
    }\n
    g_40909c = v7;\n
    *(v6) = 0;\n
    g_4090a8 = v6 + 1;\n
    v8 = g_40909c;\n
    return v8;\n
}\n
", "4211352:sub_404298": null, "4211360:sub_4042a0": "int sub_4042a0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    cgc_transmit(1, v5, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4211443:sub_4042f3": null, "4211456:sub_404300": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404300(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (cgc_allocate(sub_403a90(v5) + 1, 0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_4038a0(*(&v1), sub_403a90(v5) + 1);\n
    sub_4037a0(*(&v1), v5);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4211616:sub_4043a0": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1024];\n
    struct struct_0 *field_400;\n
} struct_0;\n
\n
int sub_4043a0(struct struct_1 **v6, char *a0, struct struct_2 **a1)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_1 *v7;  // eax\n
\n
    v4 = &v5;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!*(v6))\n
    {\n
        *(v6) = sub_401000(1, 20);\n
        if (!*(v6))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v1 = a1();\n
        if (v1 <= 0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        *(v6)->field_0 = &a0;\n
        *(v6)->field_8 = 1;\n
        *(v6)->field_4 = v1;\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v1 = a1();\n
        v2 = *(v6);\n
        while (true)\n
        {\n
            if (v1 < v2->field_4)\n
            {\n
                if (v2[1].field_0)\n
                {\n
                    v2 = &v2[1].field_0->padding_0[0];\n
                }\n
                else\n
                {\n
                    *((v2 + 16)) = sub_401000(1, 20);\n
                    if (!*((v2 + 16)))\n
                    {\n
                        v3 = -1;\n
                        return v3;\n
                    }\n
                    *(*((v2 + 16))) = a0;\n
                    *((*((v2 + 16)) + 8)) = 1;\n
                    *((*((v2 + 16)) + 4)) = v1;\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (v1 > v2->field_4)\n
                {\n
                    if (!v2->field_c)\n
                    {\n
                        *((v2 + 12)) = sub_401000(1, 20);\n
                        if (!v2->field_c)\n
                        {\n
                            v3 = -1;\n
                            return v3;\n
                        }\n
                        *(*((v2 + 12))) = a0;\n
                        *((*((v2 + 12)) + 8)) = 1;\n
                        *((*((v2 + 12)) + 4)) = v1;\n
                        v3 = 0;\n
                        return v3;\n
                    }\n
                    v2 = v2->field_c;\n
                }\n
                else if (sub_403960(*(v2), a0))\n
                {\n
                    for (v0 = *(v2); v0->field_400; v0 = v0->field_400);\n
                    *((v0 + 0x400)) = a0;\n
                    v7 = v2;\n
                    v7->field_8 = v7->field_8 + 1;\n
                    break;\n
                }\n
            }\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4212246:sub_404616": null, "4212256:sub_404620": "int sub_404620(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    if (!*(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = *(v8);\n
    while (*((v4 + 4)) != a1)\n
    {\n
        v2 = v4;\n
        if (a1 >= *((v4 + 4)))\n
            v4 = *((v4 + 12));\n
        else\n
            v4 = *((v4 + 16));\n
        if (!v4)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    if (*((v4 + 8)) > 1)\n
    {\n
        v1 = *(v4);\n
        if (!sub_403960(*(v4), a0))\n
        {\n
            sub_401380(v1);\n
            *(v4) = v0;\n
            v9 = v4;\n
            *((v9 + 8)) = *((v9 + 8)) - 1;\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v0 = *((v1 + 0x400)); v0; v0 = *((v0 + 0x400)))\n
        {\n
            if (sub_403960(v0, a0))\n
            {\n
                v1 = v0;\n
            }\n
            else\n
            {\n
                *((v1 + 0x400)) = *((v0 + 0x400));\n
                v10 = v4;\n
                *((v10 + 8)) = *((v10 + 8)) - 1;\n
                v0 = *((v0 + 0x400));\n
                sub_401380(v0);\n
                break;\n
            }\n
        }\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        if (!*((v4 + 16)) && !*((v4 + 12)))\n
        {\n
            if (v4 != *(v8))\n
            {\n
                if (*((v2 + 4)) > a1)\n
                    *((v2 + 16)) = 0;\n
                else\n
                    *((v2 + 12)) = 0;\n
                sub_401380(*(v4));\n
                sub_401380(v4);\n
                goto LABEL_4049ad;\n
            }\n
            else\n
            {\n
                sub_401380(*(*(v8)));\n
                sub_401380(*(v8));\n
                *(v8) = 0;\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        if (*((v4 + 16)) && *((v4 + 12)))\n
        {\n
            v2 = v4;\n
            for (v3 = *((v4 + 16)); *((v3 + 12)); v3 = *((v3 + 12)))\n
            {\n
                v2 = v3;\n
            }\n
            sub_401380(*(v4));\n
            *(v4) = *(v3);\n
            if (*((v3 + 4)) > *((v2 + 4)))\n
                *((v2 + 12)) = *((v3 + 16));\n
            else\n
                *((v2 + 16)) = *((v3 + 16));\n
            *((v4 + 4)) = *((v3 + 4));\n
            *((v4 + 8)) = *((v3 + 8));\n
            sub_401380(v3);\n
            goto LABEL_4049ad;\n
        }\n
        if (v4 == *(v8))\n
        {\n
            sub_401380(*(*(v8)));\n
            if (*((v4 + 16)))\n
                *(v8) = *((*(v8) + 16));\n
            else\n
                *(v8) = *((*(v8) + 12));\n
            sub_401380(v4);\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (*((v4 + 16)))\n
            v3 = *((v4 + 16));\n
        else\n
            v3 = *((v4 + 12));\n
        if (*((v2 + 4)) > a1)\n
            *((v2 + 16)) = v3;\n
        else\n
            *((v2 + 12)) = v3;\n
        sub_401380(*(v4));\n
        sub_401380(v4);\n
LABEL_4049ad:\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4213185:sub_4049c1": null, "4213200:sub_4049d0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int sub_4049d0(struct_0 *v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (v0->field_4 != a0)\n
        {\n
            if (a0 < v0->field_4)\n
                v0 = v0->field_10;\n
            else\n
                v0 = *(&v0->padding_8[4]);\n
            if (!v0)\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = *(v0);\n
            return v1;\n
        }\n
    }\n
}\n
", "4213336:sub_404a58": null, "4213344:sub_404a60": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1024];\n
    struct struct_0 *field_400;\n
} struct_0;\n
\n
int sub_404a60(struct_1 *v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v5->field_10)\n
        sub_404a60(v5->field_10);\n
    for (v1 = v5->field_0; v1; v1 = v1->field_400)\n
    {\n
        v0 = v1;\n
        sub_403110(\"@s\\n
\");\n
    }\n
    if (v5->field_c)\n
        sub_404a60(v5->field_c);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4213500:sub_404afc": null, "4213504:sub_404b00": "int sub_404b00(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    v1 = sub_4051e0(v0, v0, 0);\n
    return v1;\n
}\n
", "4213548:sub_404b2c": null, "4213552:sub_404b30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404b30(unsigned int v9[5], unsigned int a0[3])\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    if (v9 && a0)\n
    {\n
        a0[0] = 0;\n
        v2 = 0;\n
        v1 = 0;\n
        if (v9[4])\n
        {\n
            v0 = &v2;\n
            sub_404c50(v9[4]);\n
        }\n
        v4 = v2;\n
        if (v9[3])\n
        {\n
            v0 = &v1;\n
            sub_404c50(v9[3]);\n
        }\n
        v3 = v1;\n
        v5 = v4 + v3;\n
        if (v9[0])\n
            v5 += 1;\n
        a0[0] = v5;\n
        if (v5 < 2)\n
        {\n
            a0[1] = 0;\n
            a0[2] = 0;\n
        }\n
        else\n
        {\n
            a0[1] = (0 CONCAT v4 * 100) /m (v5 - 1);\n
            a0[2] = (0 CONCAT v3 * 100) /m (v5 - 1);\n
        }\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = -1;\n
    return v6;\n
}\n
", "4213831:sub_404c47": null, "4213840:sub_404c50": "int sub_404c50(unsigned int v2[5], unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    if (v2[4])\n
        sub_404c50(v2[4], a0);\n
    v3 = a0;\n
    *(v3) = *(v3) + 1;\n
    if (v2[3])\n
        sub_404c50(v2[3], a0);\n
    return 0;\n
}\n
", "4213952:sub_404cc0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404cc0(unsigned int v2, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404620(v2, a1->field_4, sub_404b00(a1->field_4));\n
}\n
", "4214016:sub_404d00": "typedef struct struct_1 {\n
    char padding_0[1024];\n
    struct struct_1 *field_400;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
int sub_404d00(void* v3, unsigned int a0, struct_0 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v4 = sub_4049d0(v3, sub_404b00(a1->field_4));\n
    if (!v0)\n
        return v4;\n
    for (v0 = v4; v0; v0 = v4)\n
    {\n
        if (sub_403960(a1->field_4, v0))\n
        {\n
            v4 = *((v0 + 0x400));\n
        }\n
        else\n
        {\n
            v4 = sub_403110(\"@s\\n
\");\n
            break;\n
        }\n
    }\n
    return v4;\n
}\n
", "4214192:sub_404db0": "int sub_404db0(char *v7, char a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    char *v8;  // eax\n
\n
    v5 = &v6;\n
    if (!*(v7))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 1;\n
    v2 = v7;\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 + 1;\n
        if (!*(v8))\n
            break;\n
        if (*(v2) == a0)\n
            v3 += 1;\n
    }\n
    *(a1) = sub_401000(v3, 4);\n
    if (!*(a1))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = v7;\n
    for (v1 = 0; v1 < v3; v1 = v1 + 1)\n
    {\n
        *((*(a1) + v1 * 4)) = v2;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2) != a0)\n
                v0 = *(v2);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        if (*(v2))\n
        {\n
            *(v2) = 0;\n
            v2 += 1;\n
        }\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4214544:sub_404f10": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    void* field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1024];\n
    unsigned int field_400;\n
} struct_0;\n
\n
typedef struct struct_0 {\n
    char padding_0[1024];\n
    void* field_400;\n
} struct_0;\n
\n
int sub_404f10(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x82c]\n
    unsigned int v1;  // [bp-0x828]\n
    unsigned int v2;  // [bp-0x824]\n
    char v3;  // [bp-0x820]\n
    char v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x10]\n
    struct_1 *v6;  // [bp-0xc], Other Possible Types: char\n
    void* v7;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v7 = 0;\n
    while (true)\n
    {\n
        do\n
        {\n
            v2 = sub_403c00(&v3, 0x800);\n
        } while (!v2);\n
        v0 = sub_404db0(&v3, 47, &v1);\n
        if (*(*(v1)) == 97 && v0 == 2)\n
        {\n
            if (sub_403a90(*((v1 + 4))) >= 10)\n
            {\n
                v5 = sub_401000(1, 1028);\n
                if (!v5)\n
                {\n
                    sub_403110();\n
                    v7 = -1;\n
                    return v7;\n
                }\n
                sub_403800(v5, *((v1 + 4)), 1023);\n
                v5->field_400 = 0;\n
                sub_4043a0(&v6, v5, sub_404b00);\n
                goto LABEL_4051b8;\n
            }\n
            else\n
            {\n
                sub_401380(v1);\n
                continue;\n
            }\n
        }\n
        if (*(*(v1)) == 102 && v0 == 2)\n
        {\n
            sub_404d00(*(&v6), v0, v1);\n
            goto LABEL_4051b8;\n
        }\n
        if (*(*(v1)) == 100 && v0 == 2)\n
        {\n
            sub_404cc0(&v6, v0, v1);\n
            goto LABEL_4051b8;\n
        }\n
        if (*(*(v1)) == 120)\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (*(*(v1)) == 119)\n
        {\n
            sub_404a60(v6);\n
        }\n
        else if (*(*(v1)) == 115)\n
        {\n
            sub_4038a0(&v4, 12);\n
            sub_404b30(*(&v6), &v4);\n
            sub_403110(\"# of Nodes: @d\\n
\");\n
            sub_403110(\"% left nodes: @d\\n
\");\n
            sub_403110(\"% right nodes: @d\\n
\");\n
        }\n
LABEL_4051b8:\n
        sub_401380(v1);\n
    }\n
}\n
", "4215264:sub_4051e0": "int sub_4051e0(char *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 5381; *(v4); v4 += 1)\n
    {\n
        v0 = 33 * v0 + *(v4);\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4215376:sub_405250": "int sub_405250()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4215424:sub_405280": "int sub_405280()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4053a0();\n
    sub_4053b0();\n
    sub_4053d0();\n
    v0 = 1;\n
    if (!sub_4059a0())\n
    {\n
        v0 = 7;\n
        sub_406080();\n
    }\n
    sub_406250();\n
    v1 = sub_406280;\n
    sub_405670();\n
    if (sub_405370())\n
    {\n
        v1 = 7;\n
        sub_406080();\n
    }\n
    sub_405e10();\n
    if (sub_405f10())\n
    {\n
        v1 = sub_405db0;\n
        __setusermatherr();\n
    }\n
    sub_405e90();\n
    sub_405ea0();\n
    sub_405e60();\n
    v1 = sub_405e00();\n
    _configthreadlocale();\n
    if (sub_405e50())\n
        sub_405390();\n
    sub_406040();\n
    if (sub_406050())\n
    {\n
        v1 = 7;\n
        sub_406080();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4215616:sub_405340": "int sub_405340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405eb0();\n
    return 0;\n
}\n
", "4215632:sub_405350": "int sub_405350()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_406060();\n
    v0 = sub_405df0();\n
    return _set_new_mode();\n
}\n
", "4215664:sub_405370": "int sub_405370()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_405dc0());\n
}\n
", "4215696:sub_405390": "int sub_405390()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4215712:sub_4053a0": "int sub_4053a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4215728:sub_4053b0": "int sub_4053b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_405de0());\n
}\n
", "4215760:sub_4053d0": "int sub_4053d0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_405dd0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4215792:sub_4053f0": "int sub_4053f0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_404f10(v1, v2);\n
}\n
", "4215856:sub_405430": "extern char g_4082d4;\n
extern char g_4082dc;\n
extern char g_4082e0;\n
extern struct_0 *g_4082ec;\n
extern char g_4089a8;\n
extern unsigned int g_409040;\n
extern unsigned int g_4090ac;\n
\n
int sub_405430()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_4089a8;\n
    v13 = sub_4062b0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_409040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_405910(1, g_409040 ^ &v16, v22, v23))\n
        sub_406080();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_405890();\n
    if (g_4090ac == 1)\n
    {\n
        v16 = 7;\n
        sub_406080();\n
    }\n
    else if (g_4090ac)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4090ac = 1;\n
        v16 = &g_4082ec;\n
        v15 = &g_4082e0;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_405639;\n
        }\n
        else\n
        {\n
            v16 = &g_4082dc;\n
            v15 = &g_4082d4;\n
            _initterm(*(&v17));\n
            g_4090ac = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_4058e0();\n
    v8 = sub_405f40();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_405760())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_4062f0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_405f50();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_405760())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_4053f0();\n
    if (!sub_405fb0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_405960(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_405639:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4216271:sub_4055cf": "int sub_4055cf()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4216280:sub_4055d8": "int sub_4055d8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4216307:sub_4055f3": "extern char g_405601;\n
\n
int sub_4055f3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_405601;\n
    if (!sub_405fb0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4216370:sub_405632": "int sub_405632()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4216400:sub_405650": "int sub_405650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405cc0();\n
    return sub_405430();\n
}\n
", "4216416:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405650();\n
}\n
", "4216432:sub_405670": "int sub_405670(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4056a0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4216480:sub_4056a0": "extern unsigned int g_4090b8;\n
\n
int sub_4056a0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4090b8;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4090b8))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4216536:sub_4056d8": "int sub_4056d8()\n
{\n
}\n
", "4216592:sub_405710": "extern unsigned int g_4090c4;\n
\n
int sub_405710(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4090c4;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4090c4);\n
    return v6;\n
}\n
", "4216626:sub_405732": "int sub_405732()\n
{\n
}\n
", "4216656:sub_405750": "int sub_405750()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4216672:sub_405760": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_4089c8;\n
extern unsigned int g_409040;\n
\n
int sub_405760(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_4089c8;\n
    v13 = sub_4062b0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_409040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_405bc0(v6, g_409040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_405c30(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4216877:sub_40582d": "int sub_40582d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4216886:sub_405836": "int sub_405836()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4216925:sub_40585d": "int sub_40585d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4216944:sub_405870": "int sub_405870()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4216976:sub_405890": "extern unsigned int g_4090b0;\n
\n
int sub_405890()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_406ad0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_405750() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4090b0 = v6;\n
        if (g_4090b0)\n
        {\n
            tmp_0 = 0;\n
            g_4090b0 = v6;\n
            v5 = g_4090b0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4090b0 = v6;\n
            v5 = 0;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4217056:sub_4058e0": "extern void* g_4090b0;\n
\n
int sub_4058e0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406ad0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4090b0;\n
        g_4090b0 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x4058ff;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4217104:sub_405910": "extern char g_4090b4;\n
\n
int sub_405910(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4090b4 = 1;\n
    sub_406640();\n
    v4 = sub_406e70();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_406e70();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_406e80();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4217184:sub_405960": "extern char g_4090b4;\n
\n
int sub_405960(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4090b4 && a0)\n
        return 1;\n
    sub_406e80(v2);\n
    v3 = sub_406e80();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4217248:sub_4059a0": "extern char g_4090b5;\n
extern unsigned int g_4090b8;\n
extern unsigned int g_4090bc;\n
extern unsigned int g_4090c0;\n
extern unsigned int g_4090c4;\n
extern unsigned int g_4090c8;\n
extern unsigned int g_4090cc;\n
\n
int sub_4059a0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4090b5)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_406080();\n
    }\n
    if (sub_406ad0() && !v10)\n
    {\n
        v8 = &g_4090b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4090c4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_405a66;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4090b8 = v4;\n
    g_4090bc = v5;\n
    g_4090c0 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4090c4 = v1;\n
    g_4090c8 = v2;\n
    v11 = v3;\n
    g_4090cc = v11;\n
LABEL_405a66:\n
    g_4090b5 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4217472:sub_405a80": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_405a80(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_406ad0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_4062f0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4217552:sub_405ad0": "int sub_405ad0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4059a0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4217584:sub_405af0": "int sub_405af0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_406ad0())\n
    {\n
        v3 = sub_406640();\n
    }\n
    else\n
    {\n
        v3 = sub_405370();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_405390();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4217632:sub_405b20": "extern char g_4090b8;\n
\n
int sub_405b20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_406ad0())\n
    {\n
        v0 = &g_4090b8;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_406ec0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4217680:sub_405b50": "int sub_405b50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406e90(0);\n
    return sub_406e90();\n
}\n
", "4217712:sub_405b70": "int sub_405b70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_406ea0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_406ea0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_406eb0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4217760:sub_405ba0": "char sub_405ba0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406eb0();\n
    sub_406eb0();\n
    return 1;\n
}\n
", "4217792:sub_405bc0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_405bc0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4217904:sub_405c30": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_405c30(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 != v0)\n
        {\n
            if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
                return v5;\n
            v5 += 40;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
}\n
", "4218048:sub_405cc0": "extern unsigned int g_409040;\n
extern unsigned int g_409080;\n
\n
int sub_405cc0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_409040 != 3141592654)\n
    {\n
        v4 = g_409040 & -0x10000;\n
        if (v4)\n
        {\n
            g_409080 = ~(g_409040);\n
            return g_409040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_405d40(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_409040 = v0;\n
    g_409080 = ~(v0);\n
    return v4;\n
}\n
", "4218176:sub_405d40": "int sub_405d40()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4218288:sub_405db0": "int sub_405db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218304:sub_405dc0": "int sub_405dc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218320:sub_405dd0": "int sub_405dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218336:sub_405de0": "int sub_405de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4218352:sub_405df0": "int sub_405df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218368:sub_405e00": "int sub_405e00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218384:sub_405e10": "extern void g_4090d0;\n
\n
int sub_405e10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4090d0);\n
}\n
", "4218416:sub_405e30": "extern unsigned int g_4090d0;\n
\n
int sub_405e30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4090d0);\n
}\n
", "4218448:sub_405e50": "char sub_405e50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218464:sub_405e60": "int sub_405e60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_406080();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218512:sub_405e90": "int sub_405e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4218528:sub_405ea0": "int sub_405ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4218544:sub_405eb0": "int sub_405eb0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_405ef0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_405f00(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4218608:sub_405ef0": "extern char g_4090d8;\n
\n
int sub_405ef0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090d8;\n
}\n
", "4218624:sub_405f00": "extern char g_4090e0;\n
\n
int sub_405f00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090e0;\n
}\n
", "4218640:sub_405f10": "extern unsigned int g_409008;\n
\n
int sub_405f10()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_409008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4218688:sub_405f40": "extern char g_4090ec;\n
\n
int sub_405f40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090ec;\n
}\n
", "4218704:sub_405f50": "extern char g_4090f0;\n
\n
int sub_405f50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4090f0;\n
}\n
", "4218720:sub_405f60": "extern void* g_4090f4;\n
\n
int sub_405f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4090f4 = 0;\n
    return v3;\n
}\n
", "4218736:sub_405f70": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_405f70()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4218800:sub_405fb0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_405fb0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4218944:sub_406040": "int sub_406040()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218960:sub_406050": "int sub_406050()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4061c0();\n
}\n
", "4218976:sub_406060": "int sub_406060()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_4061d0);\n
}\n
", "4219008:sub_406080": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406080()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_405f60();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_405f60();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4219033:sub_406099": "int sub_406099()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4219033\n
}\n
", "4219328:sub_4061c0": "int sub_4061c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4219344:sub_4061d0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_4061d0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4219472:sub_406250": "extern struct_0 *g_408998;\n
\n
int sub_406250()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_408998;\n
    v3 = &g_408998;\n
    return &g_408998;\n
}\n
", "4219520:sub_406280": "extern struct_0 *g_4089a0;\n
\n
int sub_406280()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_4089a0;\n
    v3 = &g_4089a0;\n
    return &g_4089a0;\n
}\n
", "4219568:sub_4062b0": "extern unsigned int g_409040;\n
\n
int sub_4062b0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_406ed0(*(v2));\n
    return _except_handler4_common(&g_409040, sub_406b00, v2, a0, a1);\n
}\n
", "4219632:sub_4062f0": "int sub_4062f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4219648:sub_406300": "int sub_406300(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x406309;\n
    return tmp_4;\n
}\n
", "4219664:sub_406310": "int sub_406310(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4219696:sub_406330": "int sub_406330(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406310(v2);\n
}\n
", "4219728:sub_406350": "extern unsigned int g_4090f8;\n
\n
int sub_406350(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_406300(&g_4090f8, v3);\n
    return v0;\n
}\n
", "4219760:sub_406370": "extern char g_4062f0;\n
extern unsigned int g_40a000;\n
\n
int sub_406370()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_406330(&g_40a000) != sub_4062f0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4219808:sub_4063a0": "extern char g_408200;\n
\n
int sub_4063a0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_408200;\n
    v1 = &g_408200;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219872:sub_4063e0": "extern unsigned int g_40a008;\n
\n
int sub_4063e0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_406330(&g_40a008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4219920:sub_406410": "extern unsigned int g_4090f8;\n
\n
int sub_406410(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_406330(&g_4090f8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_4062f0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4219984:sub_406450": "int sub_406450()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4220000:sub_406460": "int sub_406460(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4063a0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4220019\n
}\n
", "4220032:sub_406480": "int sub_406480(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4063a0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4220057:sub_406499": "int sub_406499()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220057\n
}\n
", "4220064:sub_4064a0": "int sub_4064a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4063a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4063e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220112:sub_4064d0": "int sub_4064d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4063a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406410(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220160:sub_406500": "extern char g_408200;\n
\n
int sub_406500(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_408200;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4220224:sub_406540": "int sub_406540(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4063a0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4220267\n
}\n
", "4220272:sub_406570": "int sub_406570(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4063a0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4220321:sub_4065a1": "int sub_4065a1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220321\n
}\n
", "4220336:sub_4065b0": "int sub_4065b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4220352:sub_4065c0": "int sub_4065c0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4063a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4063e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220416:sub_406600": "int sub_406600(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4063a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_406410(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220480:sub_406640": "extern unsigned int g_409040;\n
extern unsigned int g_409088;\n
extern unsigned int g_40908c;\n
extern unsigned int g_409090;\n
extern unsigned int g_4090fc;\n
extern unsigned int g_409100;\n
extern unsigned int g_409104;\n
\n
int sub_406640()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_409040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_409100 = 0;\n
    g_409090 = g_409090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_406b00();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40678b;\n
        g_409104 = g_409104 | 1;\n
    }\n
LABEL_40678b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_409104 = g_409104 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_409100 = 1;\n
    g_409090 = g_409090 | 2;\n
    g_409088 = g_409088 & -2;\n
    g_40908c = g_40908c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_409100 = 2;\n
        g_409090 = g_409090 | 4;\n
        g_409088 = g_409088 & -17;\n
        g_40908c = g_40908c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_409100 = 3;\n
                g_409090 = g_409090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_409100 = 5;\n
                    g_409090 = g_409090 | 32;\n
                    g_409088 = g_409088 & -3;\n
                    g_40908c = g_40908c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_409100 = 6;\n
                            g_409090 = g_409090 | 64;\n
                            g_409088 = g_409088 & -37;\n
                            g_40908c = g_40908c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_409088 = g_409088 & -16777217;\n
                    g_40908c = g_40908c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4090fc = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_409088 = ~(v2 | 16777256) & g_409088;\n
                        g_40908c = ~(v3) & g_40908c;\n
                        if (g_4090fc > 1)\n
                        {\n
                            g_409088 = g_409088 & -65;\n
                            g_40908c = g_40908c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4221648:sub_406ad0": "extern unsigned int g_409094;\n
\n
int sub_406ad0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_409094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4221696:sub_406b00": "extern unsigned int g_409040;\n
extern unsigned int g_409080;\n
extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern unsigned int g_409160;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_406b00()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_409040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_409210 = v7;\n
        g_40920c = v6;\n
        g_409208 = v8;\n
        g_409204 = v9;\n
        g_409200 = v10;\n
        g_4091fc = v11;\n
        g_409228 = v12;\n
        g_40921c = v13;\n
        g_4091f8 = v14;\n
        g_4091f4 = v15;\n
        g_4091f0 = v16;\n
        g_4091ec = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v3;\n
        g_409218 = *(&v4);\n
        g_409224 = &v5;\n
        g_409160 = 65537;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        g_409120 = 1;\n
        g_409124 = 2;\n
        v1 = g_409040;\n
        v2 = g_409080;\n
        sub_406e40();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4221712:sub_406b10": "extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_406b10()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_409210 = v4;\n
        g_40920c = v5;\n
        g_409208 = v6;\n
        g_409204 = v7;\n
        g_409200 = v8;\n
        g_4091fc = v9;\n
        g_409228 = v10;\n
        g_40921c = v11;\n
        g_4091f8 = v12;\n
        g_4091f4 = v13;\n
        g_4091f0 = v14;\n
        g_4091ec = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v1;\n
        g_409218 = *(&v2);\n
        g_409224 = &v3;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        g_409120 = 1;\n
        g_409124 = v3;\n
        sub_406e40();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4221737:sub_406b29": "int sub_406b29()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4221737\n
}\n
", "4221936:sub_406bf0": "extern unsigned int g_409110;\n
extern unsigned int g_409114;\n
extern unsigned int g_40911c;\n
extern unsigned int g_409120;\n
extern unsigned int g_409124;\n
extern char g_409128;\n
extern unsigned short g_4091ec;\n
extern unsigned short g_4091f0;\n
extern unsigned short g_4091f4;\n
extern unsigned short g_4091f8;\n
extern unsigned int g_4091fc;\n
extern unsigned int g_409200;\n
extern unsigned int g_409204;\n
extern unsigned int g_409208;\n
extern unsigned int g_40920c;\n
extern unsigned int g_409210;\n
extern unsigned int g_409214;\n
extern unsigned int g_409218;\n
extern unsigned short g_40921c;\n
extern unsigned int g_409220;\n
extern unsigned int g_409224;\n
extern unsigned short g_409228;\n
\n
int sub_406bf0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1057867];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_409210 = v7;\n
        g_40920c = v8;\n
        g_409208 = v9;\n
        g_409204 = v10;\n
        g_409200 = v11;\n
        g_4091fc = v12;\n
        g_409228 = v13;\n
        g_40921c = v14;\n
        g_4091f8 = v15;\n
        g_4091f4 = v16;\n
        g_4091f0 = v17;\n
        g_4091ec = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_409220 = v0;\n
        g_409214 = v2;\n
        g_409218 = *(&v3);\n
        g_409224 = &v4;\n
        g_40911c = g_409218;\n
        g_409110 = 3221226505;\n
        g_409114 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_409120 = v5 + 1;\n
        g_409124 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_409128)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_406e40();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4221961:sub_406c09": "int sub_406c09()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4221961\n
}\n
", "4222240:sub_406d20": "int sub_406d20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406b10(8);\n
}\n
", "4222283:sub_406d4b": "int sub_406d4b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4222283\n
}\n
", "4222528:sub_406e40": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_406e40(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4222576:sub_406e70": "char sub_406e70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222592:sub_406e80": "char sub_406e80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222608:sub_406e90": "char sub_406e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222624:sub_406ea0": "char sub_406ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222640:sub_406eb0": "char sub_406eb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222656:sub_406ec0": "int sub_406ec0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222672:sub_406ed0": "extern unsigned int g_409100;\n
\n
int sub_406ed0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_409100 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4222980:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4222986:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4222992:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4222998:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4223004:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4223010:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4223016:cgc_fdwait": "int cgc_fdwait()\n
{\n
    return ::kernel32.dll::cgc_fdwait();\n
}\n
", "4223022:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4223028:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4223034:sub_40703a": "int sub_40703a(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4223040:sub_407040": "int sub_407040()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4223046:sub_407046": "int sub_407046()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4223052:sub_40704c": "int sub_40704c(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4223058:sub_407052": "int sub_407052(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4223064:sub_407058": "int sub_407058()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4223070:sub_40705e": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40705e(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4223076:sub_407064": "int sub_407064(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4223082:sub_40706a": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40706a(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4223088:sub_407070": "int sub_407070(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4223094:sub_407076": "int sub_407076(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4223100:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4223106:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4223112:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4223118:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4223124:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4223130:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4223136:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4223142:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4223148:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4223154:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4223160:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4223166:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4223172:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4223178:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4223184:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4223190:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4223196:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4223202:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4223208:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4223214:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4223220:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4223226:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4223232:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4223238:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4223244:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4223250:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4223256:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4223262:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4223268:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4223274:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4223280:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4223286:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4223292:sub_40713c": "int sub_40713c()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4223298:sub_407142": "int sub_407142(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_fdwait": null, "5242896:cgc_log10": null, "5242900:cgc_pow": null, "5242904:cgc_receive": null, "5242908:cgc_rint": null, "5242912:cgc_transmit": null, "5242916:GetCurrentProcess": null, "5242920:GetCurrentProcessId": null, "5242924:GetCurrentThreadId": null, "5242928:GetModuleHandleW": null, "5242932:GetStartupInfoW": null, "5242936:GetSystemTimeAsFileTime": null, "5242940:InitializeSListHead": null, "5242944:IsDebuggerPresent": null, "5242948:IsProcessorFeaturePresent": null, "5242952:QueryPerformanceCounter": null, "5242956:SetUnhandledExceptionFilter": null, "5242960:TerminateProcess": null, "5242964:UnhandledExceptionFilter": null, "5242968:__current_exception": null, "5242972:__current_exception_context": null, "5242976:__std_type_info_destroy_list": null, "5242980:_except_handler4_common": null, "5242984:memset": null, "5242988:__p___argc": null, "5242992:__p___argv": null, "5242996:__p__commode": null, "5243000:__setusermatherr": null, "5243004:_c_exit": null, "5243008:_cexit": null, "5243012:_configthreadlocale": null, "5243016:_configure_narrow_argv": null, "5243020:_controlfp_s": null, "5243024:_crt_at_quick_exit": null, "5243028:_crt_atexit": null, "5243032:_execute_onexit_table": null, "5243036:_exit": null, "5243040:_get_initial_narrow_environment": null, "5243044:_initialize_narrow_environment": null, "5243048:_initialize_onexit_table": null, "5243052:_initterm": null, "5243056:_initterm_e": null, "5243060:_register_onexit_function": null, "5243064:_register_thread_local_exe_atexit_callback": null, "5243068:_seh_filter_dll": null, "5243072:_seh_filter_exe": null, "5243076:_set_app_type": null, "5243080:_set_fmode": null, "5243084:_set_new_mode": null, "5243088:exit": null, "5243092:terminate": null, "6295596:UnresolvableCallTarget": null}