{"4198400:sub_401000": "extern unsigned int g_40fe50;\n
\n
int sub_401000(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = a0 * v6;\n
    if (v6 * a0 >> 32)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = sub_4020b0(&g_40fe50);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    sub_403130(v1, 0);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4198560:sub_4010a0": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_4010a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 1;\n
}\n
", "4198587:sub_4010bb": null, "4198592:sub_4010c0": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_4010c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 2;\n
}\n
", "4198619:sub_4010db": null, "4198624:sub_4010e0": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_4010e0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 16;\n
}\n
", "4198651:sub_4010fb": null, "4198656:sub_401100": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_401100(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 14;\n
}\n
", "4198683:sub_40111b": null, "4198688:sub_401120": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_401120(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 12;\n
}\n
", "4198715:sub_40113b": null, "4198720:sub_401140": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_401140(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 4;\n
}\n
", "4198747:sub_40115b": null, "4198752:sub_401160": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_401160(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 8;\n
}\n
", "4198779:sub_40117b": null, "4198784:sub_401180": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_401180(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 64;\n
}\n
", "4198811:sub_40119b": null, "4198816:sub_4011a0": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_4011a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 32;\n
}\n
", "4198843:sub_4011bb": null, "4198848:sub_4011c0": "typedef struct struct_0 {\n
    char padding_0[4255744];\n
    char field_40f000;\n
} struct_0;\n
\n
extern char g_40f000;\n
\n
int sub_4011c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40f000)) & 128;\n
}\n
", "4198877:sub_4011dd": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x6]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v4 = sub_401240();\n
    v1 = 1;\n
    if (sub_4010c0(v4))\n
        return v1 & 1;\n
    v0 = 0;\n
    if (v4 >= 65)\n
        v0 = v4 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4198974:sub_40123e": null, "4198976:sub_401240": "int sub_401240(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199047:sub_401287": null, "4199056:sub_401290": "int sub_401290(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = sub_401240(v3);\n
    if (sub_4010c0(v3))\n
    {\n
        v0 = v3 - 48;\n
        return v0;\n
    }\n
    if (v3 >= 65 && v3 <= 70)\n
    {\n
        v0 = v3 + -55;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4199165:sub_4012fd": null, "4199168:sub_401300": "int sub_401300(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199248:sub_401350": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401350()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    cgc__terminate(1);\n
    v0 = &v1;\n
    cgc__terminate(v1);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4199282\n
}\n
", "4199296:sub_401380": "int sub_401380(unsigned int v5[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == -1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v5[1] != 1)\n
    {\n
        v1 = 0;\n
        v0 = v5[3] - v5[2];\n
        sub_401470(v5[4], &v5[1 + 1] + v5[2]);\n
        v0 = v5[3] - v5[2];\n
        if (sub_4014e0(v5[0], &v5[1 + 1] + v5[2]))\n
            v1 = -1;\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4199523:sub_401463": null, "4199536:sub_401470": "int sub_401470(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199635:sub_4014d3": null, "4199648:sub_4014e0": "int sub_4014e0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4199778:sub_401562": null, "4199792:sub_401570": "int sub_401570(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (v2[2] != -1)\n
        sub_401380(v2);\n
    if (a0)\n
        v2[2] = 0;\n
    else\n
        v2[2] = -1;\n
    v2[3] = 0;\n
    return v2;\n
}\n
", "4199888:sub_4015d0": "int sub_4015d0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2[6];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1048;\n
    v1[0] = sub_402080();\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = v5;\n
    v1[1] = (a0 ? 1 : 2);\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4200032:sub_401660": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401660(unsigned int v7, unsigned int a0, unsigned int a1[6])\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[6];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] == a1[3])\n
        sub_4017c0();\n
    if (a1[2] != -1)\n
    {\n
        v1 = a1[3] - a1[2];\n
        if (v1 > a0)\n
            v1 = a0;\n
        sub_403020(v3, 1 + a1 + a1[2]);\n
        v2 = v1 + v2;\n
        v8 = a1;\n
        v8[2] = v1 + v8[2];\n
        if (a1[2] == a1[3])\n
        {\n
            a1[3] = 0;\n
            a1[2] = 0;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_receive(a1[0], v3 + v2, a0 - v2))\n
            break;\n
        if (!v1)\n
            break;\n
        sub_401880(a1[5], v3 + v2);\n
        v2 = v1 + v2;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4200382:sub_4017be": null, "4200384:sub_4017c0": "int sub_4017c0(unsigned int v5[6])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == v5[3])\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
    }\n
    v0 = &v1;\n
    if (!cgc_receive(v5[0], 1 + v5 + v5[3], 0x400 - v5[3]) && *(&v1))\n
    {\n
        v5[3] = *(&v1);\n
        sub_401880(v5[5], v5 + 1);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200572:sub_40187c": null, "4200576:sub_401880": "int sub_401880(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200675:sub_4018e3": null, "4200688:sub_4018f0": "int sub_4018f0(unsigned int v7, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    for (v3 = 0; v3 < a0 - 1; v3 += 1)\n
    {\n
        v0 = a2;\n
        v2 = sub_4019f0();\n
        if (v2 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (v2 == a1)\n
            break;\n
        v3[v7] = v2;\n
    }\n
    if (v3 == a0 - 1)\n
    {\n
        do\n
        {\n
            v0 = a2;\n
            v1 = sub_4019f0();\n
            if (v1 == -1)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        } while (v1 != a1);\n
    }\n
    v3[v7] = 0;\n
    v4 = v3;\n
    return v4;\n
}\n
", "4200931:sub_4019e3": null, "4200944:sub_4019f0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char *field_14;\n
} struct_0;\n
\n
int sub_4019f0(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[6];  // edx\n
    unsigned int v8;  // ecx\n
\n
    v4 = &v5;\n
    if (v6->field_8 == -1)\n
    {\n
        v0 = &v1;\n
        if (!cgc_receive(v6->field_0, &v2, 1) && *(&v1))\n
        {\n
            sub_401880(v6->field_14, &v2, 1);\n
            v3 = v2;\n
            return v3;\n
        }\n
        v3 = -1;\n
        return v3;\n
    }\n
    else\n
    {\n
        if (v6->field_8 == v6->field_c && sub_4017c0(v6) < 0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v7 = v6;\n
        v8 = v7[2];\n
        v7[2] = v8 + 1;\n
        v3 = *(24 + &v6->field_0 + v8);\n
        return v3;\n
    }\n
}\n
", "4201168:sub_401ad0": "extern unsigned int g_40fe50;\n
\n
int sub_401ad0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4024d0(&g_40fe50, v2);\n
}\n
", "4201216:sub_401b00": "int sub_401b00(unsigned int v7, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[5];  // eax\n
    unsigned int v9[5];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] != -1)\n
    {\n
        if (a0 >= 0x400)\n
        {\n
            sub_401380(a1);\n
        }\n
        else\n
        {\n
            if (a1[3] + a0 >= 0x400)\n
            {\n
                v1 = 0x400 - a1[3];\n
                sub_403020(&a1[1 + 1] + a1[3], v3);\n
                v8 = a1;\n
                v8[3] = v1 + v8[3];\n
                v2 = v1 + v2;\n
                sub_401380(a1);\n
            }\n
            if (v2 < a0)\n
            {\n
                v1 = a0 - v2;\n
                sub_403020(&a1[1 + 1] + a1[3], v3 + v2);\n
                v9 = a1;\n
                v9[3] = v1 + v9[3];\n
                v2 = v1 + v2;\n
            }\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    if (a1[4])\n
    {\n
        v0 = a0;\n
        if (sub_401d30(a1[0], a1[4], v7))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    else if (sub_401ca0(a1[0], v7))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = a0;\n
    return v4;\n
}\n
", "4201626:sub_401c9a": null, "4201632:sub_401ca0": "int sub_401ca0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4201762:sub_401d22": null, "4201776:sub_401d30": "int sub_401d30(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x414]\n
    void* v1;  // [bp-0x410], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x40c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = a2 - v1;\n
            if (v0 > 0x400)\n
                v0 = 0x400;\n
            sub_403020(&v2, v3 + v1);\n
            sub_401e30(a0, &v2);\n
            if (sub_401ca0(v7, &v2, v0))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4202030:sub_401e2e": null, "4202032:sub_401e30": "int sub_401e30(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4202144:sub_401ea0": "int sub_401ea0(unsigned int v9[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // eax\n
    char *v11;  // eax, Other Possible Types: unsigned int, unsigned int [6]\n
    char *v12;  // eax\n
\n
    v7 = &v8;\n
    if (!a0)\n
    {\n
        sub_401ad0(v9[4]);\n
        v9[4] = 0;\n
        v11 = v9;\n
        v11[5] = 0;\n
        return v9;\n
    }\n
    v0 = 0x100;\n
    v10 = sub_403dd0(v9[4]);\n
    v9[4] = v10;\n
    v4 = v10;\n
    v0 = 0x100;\n
    v12 = sub_403dd0(v9[5]);\n
    v9[5] = v12;\n
    v3 = v12;\n
    v11 = sub_402010(a0);\n
    v6 = v11;\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v4[v5] = v5;\n
        v11 = v5 + 1;\n
    }\n
    for (v5 = 255; v5 >= 1; v5 = v11)\n
    {\n
        v2 = (0 CONCAT v6) /m v5 >> 32;\n
        v6 *= 3;\n
        v6 = v6 * 0x2000 ^ v6 >> 19 ^ v6 >> 21;\n
        v1 = v4[v5];\n
        v4[v5] = v4[v2];\n
        v4[v2] = v1;\n
        v11 = v5 - 1;\n
    }\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v3[v4[v5]] = v5;\n
        v11 = v5 + 1;\n
    }\n
    return v11;\n
}\n
", "4202510:sub_40200e": null, "4202512:sub_402010": "int sub_402010(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 826981510;\n
    for (v1 = 0; *((v4 + v1)); v1 += 1)\n
    {\n
        v0 *= 37;\n
        v0 = *((v4 + v1)) ^ v0;\n
        v0 = v0 * 0x2000 ^ v0 >> 19;\n
    }\n
    return v0;\n
}\n
", "4202624:sub_402080": "extern unsigned int g_40fe50;\n
\n
int sub_402080(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4020b0(&g_40fe50, v2);\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a0 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    a0 = a0 - -3 & -0x4;\n
    if (a0 < 4)\n
    {\n
        v0 = 4;\n
        v1 = sub_402190(v5);\n
    }\n
    else if (a0 < 16)\n
    {\n
        v0 = a0;\n
        v1 = sub_402190(v5);\n
    }\n
    else if (a0 < 0x20000)\n
    {\n
        v0 = a0;\n
        v1 = sub_402320(v5);\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v1 = sub_402450(v5);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4202881:sub_402181": null, "4202896:sub_402190": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4628];\n
    unsigned int field_1218;\n
    unsigned int field_121c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_402190(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned short v2[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc]\n
    unsigned int *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned short v9[2];  // eax\n
    struct_0 *v10;  // eax\n
    unsigned short v11[2];  // eax\n
\n
    v6 = &v7;\n
    v4 = sub_402aa0();\n
    v3 = *((v8 + v4 * 4));\n
    if (v3)\n
    {\n
        *((v8 + v4 * 4)) = *(v3);\n
        v5 = v3;\n
        return v5;\n
    }\n
    *(&v2[0]) = *((v8 + v4 * 4 + 4620));\n
    if (!v2)\n
    {\n
        if (!*((v8 + 4632)))\n
        {\n
            v0 = 1;\n
            *((v8 + 4632)) = sub_402b50(v8);\n
            if (!*((v8 + 4632)))\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            *((v8 + 4636)) = 0;\n
        }\n
        v9 = *((v8 + 4632)) + *((v8 + 4636));\n
        *((v8 + v4 * 4 + 4620)) = v9;\n
        v2 = v9;\n
        *(v2) = a0;\n
        *((v2 + 2)) = a0;\n
        v10 = v8;\n
        v10->field_121c = v10->field_121c + 0x1000;\n
        if (*((v8 + 4636)) == 0x100000)\n
            *((v8 + 4632)) = 0;\n
    }\n
    v1 = v2 + *((v2 + 2));\n
    v11 = v2;\n
    v11[1] = v11[1] + a0;\n
    if (*((v2 + 2)) + *(v2) > 0x1000)\n
        *((v8 + v4 * 4 + 4620)) = 0;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4203287:sub_402317": null, "4203296:sub_402320": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_402320(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = a0 - -23 & -0x10;\n
    for (v3 = sub_402aa0(); v3 < 131; v3 = v3 + 1)\n
    {\n
        for (v1 = *((v7 + v3 * 4)); v1; v1 = v1->field_c)\n
        {\n
            if (v1->field_4 >= v2)\n
                break;\n
        }\n
        if (v1)\n
            break;\n
    }\n
    if (v3 == 131)\n
    {\n
        if (!sub_402c40())\n
        {\n
            v3 = 130;\n
            v1 = *((v7 + v3 * 4));\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v0 = v1;\n
    sub_402d00(v7, v3);\n
    if (*((v1 + 4)) - v2 > 32)\n
    {\n
        v0 = v2;\n
        sub_402dc0(v7, v1);\n
    }\n
    v4 = v1 + 8;\n
    return v4;\n
}\n
", "4203597:sub_40244d": null, "4203600:sub_402450": "int sub_402450(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0 - -4103 & -0x1000;\n
    v0 = &v2;\n
    if (cgc_allocate(v3, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v7;\n
    v1[1] = v3;\n
    v4 = v1 + 1;\n
    return v4;\n
}\n
", "4203723:sub_4024cb": null, "4203728:sub_4024d0": "int sub_4024d0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v5 = *((v4 + (a0 >> 20) + 524));\n
    v1 = v5;\n
    if (!a0)\n
    {\n
        return *((v4 + (a0 >> 20) + 524));\n
    }\n
    else if (v1)\n
    {\n
        if (v1 == 2)\n
        {\n
            v0 = a0;\n
            v5 = sub_402670(v4);\n
        }\n
        else if (v1 == 1)\n
        {\n
            v0 = a0;\n
            v5 = sub_4028b0(v4);\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v5 = sub_402580(v4);\n
        return v5;\n
    }\n
}\n
", "4203904:sub_402580": "int sub_402580(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0;\n
    if ((v2 & 4095) != 8)\n
        sub_402ee0(\"BAD FREE: large address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    v1[0] = a0 - 8;\n
    if (v1[0] != v5)\n
    {\n
        v0 = v5;\n
        sub_402ee0(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", v2, v1[0]); /* do not return */\n
    }\n
    if (!(v1[1] >= 0x20000 && v1[1] <= 2147487743 && !(v1[1] & 4095)))\n
        sub_402ee0(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v2); /* do not return */\n
    return cgc_deallocate(v1);\n
}\n
", "4204131:sub_402663": null, "4204144:sub_402670": "int sub_402670(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    unsigned int v3[2];  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5[2];  // [bp-0x14]\n
    unsigned int v6[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12[2];  // eax\n
    unsigned int v13[2];  // eax\n
\n
    v9 = &v10;\n
    v8 = a0;\n
    v7[0] = v8 - 8;\n
    v4 = v8 & -0x100000;\n
    if ((v8 & 7))\n
    {\n
        sub_402ee0(\"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    }\n
    else if ((v7[1] & 1))\n
    {\n
        sub_402ee0(\"BAD SMALL FREE: double free ptr=%08x\\n
\"); /* do not return */\n
    }\n
    else\n
    {\n
        if (!(v7[1] <= 0x20000 && v7[1] >= 16))\n
            sub_402ee0(\"BAD SMALL FREE: corrupted size ptr=%08x\\n
\"); /* do not return */\n
        if (!v7[0])\n
            v6[0] = 0;\n
        else\n
            v6 = v7 - v7[0];\n
        v5[0] = v7 + v7[1];\n
        if (v6 && (*((v6 + 4)) & -2) != v7[0])\n
        {\n
            v0 = v8;\n
            sub_402ee0(\"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\", v6); /* do not return */\n
        }\n
        if (v5[0] != v7[1])\n
        {\n
            v0 = v8;\n
            sub_402ee0(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v5); /* do not return */\n
        }\n
        if (v6 && (*((v6 + 4)) & 1))\n
        {\n
            v3[0] = v6;\n
            v0[0] = v3;\n
            sub_402d00(v11, sub_402aa0());\n
            v12 = v6;\n
            v12[1] = v7[1] + v12[1];\n
            v7 = v6;\n
            v5[0] = *((v7 + 4));\n
        }\n
        if (!(v5[1] & 1))\n
        {\n
            v1[0] = v7;\n
            v0[0] = v1;\n
            return sub_402e50(v11, sub_402aa0());\n
        }\n
        v2[0] = v5;\n
        v0[0] = v2;\n
        sub_402d00(v11, sub_402aa0());\n
        v13 = v7;\n
        v13[1] = v5[1] + v13[1];\n
        v5[0] = v7 + v7[1];\n
        v5[0] = *((v7 + 4));\n
    }\n
}\n
", "4204716:sub_4028ac": null, "4204720:sub_4028b0": "int sub_4028b0(unsigned int v5, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x10]\n
    unsigned short *v1;  // [bp-0xc]\n
    unsigned int *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = a0 & -0x1000;\n
    v0 = a0;\n
    v2 = sub_402aa0(*(v1), v0);\n
    *(&v0) = *((v5 + v2 * 4));\n
    *((v5 + v2 * 4)) = v0;\n
    return v5;\n
}\n
", "4204797:sub_4028fd": null, "4204800:sub_402900": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402900(unsigned int v6, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = *((v6 + (a0 >> 20) + 524));\n
    if (v2 != 2 && v2)\n
    {\n
        if (v2 == 1)\n
        {\n
            v0 = a0 & -0x1000;\n
            v3 = *(v0);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &a0[4];\n
    v3 = v1->field_4 - 8;\n
    return v3;\n
}\n
", "4204938:sub_40298a": null, "4204944:sub_402990": "int sub_402990(unsigned int v5, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a1 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_4024d0(v5, a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v2 = sub_4020b0(v5, a1);\n
        return v2;\n
    }\n
    else if (sub_402900(v5, a0) < a1)\n
    {\n
        v1 = sub_4020b0(v5, a1);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = sub_402900(v5, a0);\n
        sub_403020(v1, a0);\n
        sub_4024d0(v5, a0);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4205213:sub_402a9d": null, "4205216:sub_402aa0": "int sub_402aa0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < 16)\n
    {\n
        v0 = (v3 >> 2) - 1;\n
        return v0;\n
    }\n
    else if (v3 <= 0x200)\n
    {\n
        v0 = (v3 >> 4) - -2;\n
        return v0;\n
    }\n
    else if (v3 <= 0x1200)\n
    {\n
        v0 = (v3 - 0x200 >> 7) - -34;\n
        return v0;\n
    }\n
    else if (v3 <= 0x20000)\n
    {\n
        v0 = (v3 - 0x1200 >> 11) - -66;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 130;\n
        return v0;\n
    }\n
}\n
", "4205379:sub_402b43": null, "4205392:sub_402b50": "int sub_402b50(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = &v1;\n
    if (cgc_allocate(0x200000, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = *(&v1);\n
    v2 = v3 - -1048575 & -0x100000;\n
    if (v3 < v2)\n
        cgc_deallocate(v3);\n
    if (v2 + 0x100000 < v3 + 0x200000)\n
        cgc_deallocate(v2 + 0x100000);\n
    *((v7 + (v2 >> 20) + 524)) = a0;\n
    v4 = v2;\n
    return v4;\n
}\n
", "4205622:sub_402c36": null, "4205632:sub_402c40": "int sub_402c40(unsigned int v7)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = sub_402b50(v7, 2);\n
    if (!v1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v3[0] = v1 - -19 & -0x10;\n
    v3[0] = 0;\n
    v3[1] = 1048560 + -0x1 * v3 + v1;\n
    v2[0] = v3 + v3[1];\n
    v2[0] = v3[1];\n
    v2[1] = 0;\n
    v0[0] = v3;\n
    sub_402e50(v7, 130);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205810:sub_402cf2": null, "4205824:sub_402d00": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_402d00(unsigned int *v3, unsigned int a0, struct_2 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_2 *v4;  // eax\n
\n
    v1 = &v2;\n
    if (!(a1->field_4 & 1))\n
    {\n
        v0 = a1;\n
        sub_402ee0(\"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    v4->field_4 = v4->field_4 & -2;\n
    if (a1->field_8)\n
        a1->field_8->field_c = a1->field_c;\n
    if (a1->field_c)\n
        a1->field_c->field_8 = a1->field_8;\n
    if (v3[a0] != a1)\n
    {\n
        a1->field_8 = 0;\n
        a1->field_c = 0;\n
        return a1;\n
    }\n
    v3[a0] = a1->field_c;\n
}\n
", "4206004:sub_402db4": null, "4206016:sub_402dc0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402dc0(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = a0->field_4 - a1;\n
    v3[0] = &a0->padding_0[a1];\n
    v2 = &a0->padding_0[a0->field_4];\n
    a0->field_4 = a1;\n
    v3[0] = a0->field_4;\n
    v3[1] = v4;\n
    *(v2) = v4;\n
    v1[0] = v3;\n
    v0[0] = v1;\n
    return sub_402e50(v7, sub_402aa0(v4));\n
}\n
", "4206147:sub_402e43": null, "4206160:sub_402e50": "int sub_402e50(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    if ((*((a1 + 4)) & 1) == 1)\n
    {\n
        v0 = a1;\n
        sub_402ee0(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    *((v4 + 4)) = *((v4 + 4)) | 1;\n
    *((a1 + 8)) = 0;\n
    *((a1 + 12)) = *((v3 + a0 * 4));\n
    *((v3 + a0 * 4)) = a1;\n
    v5 = a1;\n
    if (!*((v5 + 12)))\n
        return v5;\n
    v5 = *((a1 + 12));\n
    *((v5 + 8)) = a1;\n
}\n
", "4206293:sub_402ed5": null, "4206304:sub_402ee0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40f930;\n
\n
int sub_402ee0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0x8]\n
\n
    v3 = &v4;\n
    v2 = &v6;\n
    v0 = v5;\n
    v1 = v2;\n
    sub_403220(&g_40f930, v0, v1, &v6);\n
    cgc__terminate(1, v0, v1, &v6);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4206359\n
}\n
", "4206368:sub_402f20": "int sub_402f20(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1[v0] == a0)\n
        {\n
            v2 = &v1[v0];\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206480:sub_402f90": "int sub_402f90(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = v6;\n
    v0 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1[v2] == *((v0 + v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = v1[v2] - *((v0 + v2));\n
            return v3;\n
        }\n
    }\n
}\n
", "4206624:sub_403020": "int sub_403020(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v5;\n
}\n
", "4206720:sub_403080": "int sub_403080(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    if (v5 > a0)\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            *((v2 + -1 + a1 - v0)) = *(-1 + v1 + a1 - v0);\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v2[v0] = *((v1 + v0));\n
        }\n
        return v5;\n
    }\n
}\n
", "4206896:sub_403130": "int sub_403130(char *v4, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v4;\n
}\n
", "4206976:sub_403180": "int sub_403180(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v0 = &v5;\n
    v1 = sub_4031b0(v4, v0);\n
    return v1;\n
}\n
", "4207020:sub_4031ac": null, "4207024:sub_4031b0": "extern unsigned int g_40f518;\n
\n
int sub_4031b0(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_403220(&g_40f518, v2, a0);\n
}\n
", "4207069:sub_4031dd": null, "4207072:sub_4031e0": "int sub_4031e0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_403220(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207127:sub_403217": null, "4207136:sub_403220": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_403220(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 1;\n
    if (v5->field_8 == -1)\n
    {\n
        v1 = 0;\n
        v5->field_8 = 0;\n
    }\n
    v0 = 2147483647;\n
    v2 = sub_403340(a0, a1, v5, 0);\n
    if (!v1)\n
    {\n
        sub_401380(v5);\n
        v5->field_8 = -1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207275:sub_4032ab": null, "4207280:sub_4032b0": "int sub_4032b0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_4032f0(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207335:sub_4032e7": null, "4207344:sub_4032f0": "int sub_4032f0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    return sub_403340(a0, a1, 0, v3, 2147483647, *(&v0));\n
}\n
", "4207409:sub_403331": null, "4207424:sub_403340": "int sub_403340(char *v31, unsigned int *a0, unsigned int a1[5], unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    void* v2;  // [bp-0xb0], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xac]\n
    unsigned int v4;  // [bp-0xa8]\n
    unsigned int v5;  // [bp-0xa4]\n
    char v6;  // [bp-0x9d]\n
    unsigned int v7;  // [bp-0x9c]\n
    unsigned int v8;  // [bp-0x98]\n
    char v9;  // [bp-0x91]\n
    unsigned int v10;  // [bp-0x90]\n
    unsigned int v11;  // [bp-0x8c]\n
    char v12;  // [bp-0x85]\n
    unsigned int v13;  // [bp-0x84]\n
    unsigned int v14;  // [bp-0x80]\n
    unsigned int v15;  // [bp-0x7c]\n
    unsigned int v16;  // [bp-0x78]\n
    char v17;  // [bp-0x71]\n
    unsigned int v18;  // [bp-0x70]\n
    unsigned int v19;  // [bp-0x6c]\n
    char *v20;  // [bp-0x68]\n
    char *v21;  // [bp-0x64]\n
    char v22;  // [bp-0x5d]\n
    unsigned int v23;  // [bp-0x5c]\n
    char v24;  // [bp-0x58]\n
    char *v25;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v26;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v27;  // [bp-0x10]\n
    char v28;  // [bp-0x9]\n
    unsigned int v29;  // [bp-0x4]\n
    char v30;  // [bp+0x0]\n
    char *v32;  // eax\n
    char *v33;  // eax\n
    char *v34;  // eax\n
    char *v35;  // eax\n
    char *v36;  // eax\n
    char *v37;  // eax\n
    unsigned int *v38;  // eax\n
    char *v39;  // eax\n
    unsigned int *v40;  // eax\n
    unsigned int *v41;  // eax\n
    unsigned int *v42;  // eax\n
    unsigned int v43;  // ecx\n
    char *v44;  // eax\n
    char *v45;  // eax\n
\n
    v29 = &v30;\n
    v25 = 0;\n
    while (true)\n
    {\n
        v32 = v31;\n
        v31 = v32 + 1;\n
        v28 = *(v32);\n
        if (!v28)\n
            break;\n
        v22 = 32;\n
        while (v28 != 37)\n
        {\n
            if (v25 >= a3)\n
            {\n
                v33 = v25;\n
                v25 = v33 + 1;\n
                if (v33 == -1)\n
                    cgc__terminate();\n
            }\n
            else\n
            {\n
                v17 = v28;\n
                if (a1)\n
                    sub_401b00(&v17, 1, a1);\n
                if (a2)\n
                    v25[a2] = v17;\n
                v25 += 1;\n
            }\n
            v34 = v31;\n
            v31 = v34 + 1;\n
            v28 = *(v34);\n
            if (!v28)\n
                goto LABEL_403bf6;\n
        }\n
        v21 = v31;\n
        v27 = 4;\n
        v26 = 0;\n
        v35 = v31;\n
        v31 = v35 + 1;\n
        v5 = *(v35);\n
        v28 = v5;\n
        if (!v5)\n
            break;\n
        if (v5 == 32)\n
        {\n
            v22 = 32;\n
        }\n
        else if (v5 != 48)\n
        {\n
            v31 += 1;\n
        }\n
        else\n
        {\n
            v22 = 48;\n
        }\n
        if (*(v31) >= 48 && *(v31) <= 57)\n
            v26 = sub_4047d0(v31, &v31);\n
        v36 = v31;\n
        v31 = v36 + 1;\n
        v4 = *(v36);\n
        v28 = v4;\n
        if (!v4)\n
            break;\n
        if (v4 == 104)\n
        {\n
            if (*(v31) != 104)\n
            {\n
                v27 = 2;\n
            }\n
            else\n
            {\n
                v31 += 1;\n
                v27 = 1;\n
            }\n
        }\n
        else\n
        {\n
            if (v4 != 108)\n
            {\n
                v31 += 1;\n
            }\n
            else if (*(v31) != 108)\n
            {\n
                v27 = 4;\n
            }\n
            else\n
            {\n
                v31 += 1;\n
                v27 = 8;\n
            }\n
        }\n
        v37 = v31;\n
        v31 = v37 + 1;\n
        v3 = *(v37);\n
        v28 = v3;\n
        if (!v3)\n
        {\n
            v16 = v31 - v21;\n
            if (v25 < a3)\n
            {\n
                v15 = a3 - v25;\n
                if (v15 > v16)\n
                    v15 = v16;\n
                if (a1)\n
                    sub_401b00(v21, v15, a1);\n
                if (a2)\n
                    sub_403020(a2 + v25, v21, v15);\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            else\n
            {\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            break;\n
        }\n
        if (v3 == 88)\n
        {\n
LABEL_4037df:\n
            if (v28 == 100)\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v41 = a0;\n
                a0 = v41 + 1;\n
                v18 = *(v41);\n
                v0 = v18;\n
                v1 = 10;\n
                v2 = 0;\n
                sub_403c90(&v24, v0, 10);\n
            }\n
            else\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v42 = a0;\n
                a0 = v42 + 1;\n
                v19 = *(v42);\n
                v43 = (v28 == 117 ? 16 : 10);\n
                v0 = v19;\n
                v1 = v43;\n
                v2 = v28 == 88;\n
                sub_403cf0();\n
            }\n
            v23 = sub_404100(&v24, v0, v1);\n
            if (v23 < v26)\n
            {\n
                v26 -= v23;\n
                do\n
                {\n
                    if (v25 >= a3)\n
                    {\n
                        v44 = v25;\n
                        v25 = v44 + 1;\n
                        if (v44 == -1)\n
                            cgc__terminate();\n
                    }\n
                    else\n
                    {\n
                        v12 = v22;\n
                        if (a1)\n
                            sub_401b00(&v12, 1, a1);\n
                        if (a2)\n
                            v25[a2] = v12;\n
                        v25 += 1;\n
                    }\n
                    v26 -= 1;\n
                } while (v26 > 0);\n
            }\n
            v11 = v23;\n
            if (v25 >= a3)\n
            {\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            else\n
            {\n
                v10 = a3 - v25;\n
                if (v10 > v11)\n
                    v10 = v11;\n
                if (a1)\n
                    sub_401b00(&v24, v10, a1);\n
                if (a2)\n
                    sub_403020(a2 + v25, &v24, v10);\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            goto LABEL_403be7;\n
        }\n
        else\n
        {\n
            if (v3 == 99)\n
            {\n
                v38 = a0;\n
                a0 = v38 + 1;\n
                v28 = *(v38);\n
                if (v25 >= a3)\n
                {\n
                    v39 = v25;\n
                    v25 = v39 + 1;\n
                    if (v39 == -1)\n
                        cgc__terminate();\n
                }\n
                else\n
                {\n
                    v9 = v28;\n
                    if (a1)\n
                        sub_401b00(&v9, 1, a1);\n
                    if (a2)\n
                        v25[a2] = v9;\n
                    v25 += 1;\n
                }\n
                goto LABEL_403be7;\n
            }\n
            if (v3 == 100)\n
                goto LABEL_4037df;\n
            if (v3 == 115)\n
            {\n
                v40 = a0;\n
                a0 = v40 + 1;\n
                v20 = *(v40);\n
                v8 = sub_404100();\n
                if (v25 >= a3)\n
                {\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
                else\n
                {\n
                    v7 = a3 - v25;\n
                    if (v7 > v8)\n
                        v7 = v8;\n
                    if (a1)\n
                        sub_401b00(v20, v7, a1);\n
                    if (a2)\n
                        sub_403020(a2 + v25, v20, v7);\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
LABEL_403be7:\n
            }\n
            else if (v3 != 117 && v3 != 120)\n
            {\n
                v14 = v31 - v21;\n
                if (v25 >= a3)\n
                {\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                else\n
                {\n
                    v13 = a3 - v25;\n
                    if (v13 > v14)\n
                        v13 = v14;\n
                    if (a1)\n
                        sub_401b00(v21, v13, a1);\n
                    if (a2)\n
                        sub_403020(a2 + v25, v21, v13);\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                goto LABEL_403be7;\n
            }\n
        }\n
    }\n
LABEL_403bf6:\n
    a1 = 0;\n
    if (v25 >= a3)\n
    {\n
        v45 = v25;\n
        v25 = v45 + 1;\n
        if (v45 != -1)\n
            return v25 - 1;\n
        cgc__terminate();\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        if (a1)\n
            sub_401b00(&v6, 1, a1);\n
        if (a2)\n
            v25[a2] = v6;\n
        v25 += 1;\n
        return v25 - 1;\n
    }\n
}\n
", "4209805:sub_403c8d": null, "4209808:sub_403c90": "int sub_403c90(char *v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    if (a0 < 0)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = 45;\n
        a0 = -(a0);\n
    }\n
    v0 = a2;\n
    return sub_403cf0(v3, a0, a1);\n
}\n
", "4209897:sub_403ce9": null, "4209904:sub_403cf0": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
int sub_403cf0(char *v5, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v5[20];\n
    if (a2)\n
        v2 = \"0123456789ABCDEF\";\n
    else\n
        v2 = \"0123456789abcdef\";\n
    v6 = v1;\n
    v1 = v6 + 1;\n
    if (!a0)\n
    {\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v7[1].field_-1 = *(v2);\n
        return sub_403080(v5, v1, 20 + -0x1 * &v5[-1 * v1]);\n
    }\n
    for (v6[1].field_-1 = 0; a0; a0 = (0 CONCAT a0) /m a1)\n
    {\n
        v0 = v2;\n
        v8 = v1;\n
        v1 = v8 + 1;\n
        v8[1].field_-1 = v0[(0 CONCAT a0) /m a1 >> 32];\n
    }\n
    return sub_403080(v5, v1, 20 + -0x1 * &v5[-1 * v1]);\n
}\n
", "4210128:sub_403dd0": "extern unsigned int g_40fe50;\n
\n
int sub_403dd0(unsigned short *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402990(&g_40fe50, v2, a0);\n
}\n
", "4210176:sub_403e00": "int sub_403e00(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v4));\n
                v1 = v0 == sub_401300(*(a0));\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210336:sub_403ea0": "int sub_403ea0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = sub_404100();\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v6 + v2)))\n
        {\n
            v0 = v1;\n
            if (!sub_404140(v6 + v2, a0))\n
            {\n
                v3 = v6 + v2;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4210480:sub_403f30": "int sub_403f30(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    for (v0 = 0; v0[v4]; v0 += 1)\n
    {\n
        if (v0[v4] == a0)\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v4 + v0;\n
    return v1;\n
}\n
", "4210624:sub_403fc0": "int sub_403fc0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v4) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210752:sub_404040": "int sub_404040(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); v0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        a0 += 1;\n
    }\n
    *(v0) = 0;\n
    return v3;\n
}\n
", "4210832:sub_404090": "int sub_404090(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_404100();\n
    v0 = sub_402080(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403020(v0, v5, v1);\n
    v1[v0] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4210944:sub_404100": "int sub_404100(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211008:sub_404140": "int sub_404140(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = &v6[a1];\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v6))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v6));\n
                v1 = 0;\n
                if (v0 == sub_401300(*(a0)))\n
                    v1 = v6 < v2;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v6 += 1;\n
        a0 += 1;\n
    }\n
    if (v6 == v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(v6) - *(a0);\n
    return v3;\n
}\n
", "4211232:sub_404220": "int sub_404220(char *v4, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(a0))\n
            v0 = v1 - v4 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        a0 += 1;\n
        v1 += 1;\n
    }\n
    for (; v1 - v4 < a1; v1 += 1)\n
    {\n
        *(v1) = 0;\n
    }\n
    return v4;\n
}\n
", "4211392:sub_4042c0": "int sub_4042c0(char *v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_404100(v5);\n
    if (v1 > a0)\n
        v1 = a0;\n
    v0 = sub_402080(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403020(v0, v5, v1);\n
    *((v0 + v1)) = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211536:sub_404350": "int sub_404350(struct struct_0 **v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &*(v5)->field_0;\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v0[v1]; v1 += 1)\n
    {\n
        if (sub_403f30(a0, v0[v1]))\n
            break;\n
    }\n
    if (!v0[v1])\n
        *(v5) = 0;\n
    else\n
        *(v5) = &v0[1 + v1];\n
    v0[v1] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211744:sub_404420": "int sub_404420(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v4])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!sub_403fc0(&v0[v4], a0))\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4211872:sub_4044a0": "int sub_4044a0(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2[2];  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char v8[2];  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    *(&v8) = v12;\n
    v7 = 1;\n
    v6 = 1;\n
    v5 = 0;\n
    for (v4 = 0; sub_401180(*(v12)); v12 += 1)\n
    {\n
        if (!*(v12))\n
            goto LABEL_404643;\n
    }\n
    if (*(v12) == 43)\n
    {\n
        v7 = 1;\n
        v12 += 1;\n
    }\n
    else if (*(v12) == 45)\n
    {\n
        v7 = -1;\n
        v12 += 1;\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
            v12 += 2;\n
        goto LABEL_404652;\n
    }\n
    if (a1)\n
    {\n
LABEL_404652:\n
        for (; *(v12); v12 += 1)\n
        {\n
            if (sub_4010c0(*(v12)))\n
            {\n
                v3 = *(v12) - 48;\n
            }\n
            else if (sub_401140(*(v12)))\n
            {\n
                v3 = *(v12) + -87;\n
            }\n
            else\n
            {\n
                if (!sub_401160(*(v12)))\n
                    break;\n
                v3 = *(v12) + -55;\n
            }\n
            if (v3 >= a1)\n
                break;\n
            v6 = 0;\n
            v4 = a1 * v4 + v3;\n
            if (v4 > 2147483647)\n
                v5 = 1;\n
        }\n
    }\n
    if (*(v12) == 48 && *((v12 + 1)) >= 48 && *((v12 + 1)) <= 55)\n
    {\n
        *(&v12) = v12 + 1;\n
        a1 = 8;\n
        goto LABEL_404643;\n
    }\n
    if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
    {\n
        v12 += 2;\n
        a1 = 16;\n
        goto LABEL_404643;\n
    }\n
    if (!sub_4010c0(*(v12)))\n
        goto LABEL_404643;\n
    a1 = 10;\n
LABEL_404643:\n
    if (a0)\n
    {\n
        if (v6)\n
            *(&v2) = v8;\n
        else\n
            v2 = v12;\n
        *(a0) = v2;\n
    }\n
    if (v7 >= 0)\n
    {\n
        if (v5)\n
            v0 = 2147483647;\n
        else\n
            v0 = v4;\n
        v9 = v0;\n
        return v9;\n
    }\n
    else\n
    {\n
        if (v5)\n
            v1 = 0x80000000;\n
        else\n
            v1 = -(v4);\n
        v9 = v1;\n
        return v9;\n
    }\n
}\n
", "4212688:sub_4047d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4047d0(char v8[2], unsigned int *a0, char a1[2])\n
{\n
    char <0x4047d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x30]\n
    int tmp_41;  // tmp #41\n
    void* v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    char v5[2];  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x4]\n
    unsigned int v7;  // [bp+0x0]\n
    unsigned int v9;  // [bp+0x10]\n
    unsigned int v10;  // [bp+0x14]\n
    char v11[2];  // [bp+0x18], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp+0x1c], Other Possible Types: char\n
    unsigned int v13;  // [bp+0x24]\n
    void* v14;  // [bp+0x28]\n
    unsigned int v15;  // [bp+0x2c]\n
    char v16;  // [bp+0x30]\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // eax\n
\n
    v6 = &<0x4047d0[is_2]|Stack bp, 1 B>;\n
    *(&v5) = v8;\n
    v4 = 1;\n
    v3 = 1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v7 = v8[0];\n
        if (!sub_401180(v8[0]))\n
            break;\n
        if (!v8[0])\n
            goto LABEL_404988;\n
        v8 = &v8[1];\n
    }\n
    if (*(v8) == 43)\n
    {\n
        v15 = 1;\n
        v8 = &v8[1];\n
    }\n
    else if (*(v8) == 45)\n
    {\n
        v15 = -1;\n
        v8 = &v8[1];\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v8) == 48)\n
        {\n
            v7 = *((v8 + 1));\n
            if (sub_401300(*((v8 + 1))) == 120)\n
                v8 += 2;\n
        }\n
        goto LABEL_404997;\n
    }\n
    if (a1)\n
    {\n
LABEL_404997:\n
        for (; *(v8); v8 = &v8[1])\n
        {\n
            v7 = *(v8);\n
            if (sub_4010c0(*(v8)))\n
            {\n
                v10 = *(v8) - 48;\n
            }\n
            else\n
            {\n
                v7 = *(v8);\n
                if (sub_401140(*(v8)))\n
                {\n
                    v10 = *(v8) + -87;\n
                }\n
                else\n
                {\n
                    v7 = *(v8);\n
                    if (!sub_401160(*(v8)))\n
                        break;\n
                    v10 = *(v8) + -55;\n
                }\n
            }\n
            if (v10 >= a1)\n
                break;\n
            v14 = 0;\n
            v9 = *(&v12);\n
            v17 = v11 * a1;\n
            tmp_41 = v17;\n
            v19 = (v11 * a1 >> 32) + (a1 >> 31) * v11 + a1 * v9 + (v10 >> 31) + (tmp_41 + v10 < tmp_41);\n
            *(&v11) = v17 + v10;\n
            v12 = v19;\n
            if (v12)\n
                v13 = 1;\n
        }\n
    }\n
    if (*(v8) == 48 && *((v8 + 1)) >= 48 && *((v8 + 1)) <= 55)\n
    {\n
        v8 = &v8[1];\n
        a1 = 8;\n
        goto LABEL_404988;\n
    }\n
    if (*(v8) == 48)\n
    {\n
        v7 = *((v8 + 1));\n
        if (sub_401300(*((v8 + 1))) == 120)\n
        {\n
            v8 += 2;\n
            a1 = 16;\n
            goto LABEL_404988;\n
        }\n
    }\n
    v7 = *(v8);\n
    if (!sub_4010c0(*(v8)))\n
        goto LABEL_404988;\n
    a1 = 10;\n
LABEL_404988:\n
    if (a0)\n
    {\n
        if (v14)\n
            *(&a1) = *(&v16);\n
        else\n
            a1 = v8;\n
        *(a0) = a1;\n
    }\n
    if (v15 < 0)\n
    {\n
        if ((!(!v11 >> 31) || !(!v12)) && (!(v11 == 0x80000000) || !(!v12)))\n
            v13 = 1;\n
        v11 = -(v11);\n
        v12 = -(v12) - (0 < v11);\n
    }\n
    if (v13)\n
    {\n
        *(&v8) = -1;\n
        a0 = 0;\n
        return v8;\n
    }\n
    v8 = v11;\n
    a0 = v12;\n
    return v8;\n
}\n
", "4213648:sub_404b90": "int sub_404b90(unsigned int v3)\n
{\n
    int tmp_16;  // tmp #16\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[3];  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v4[0] = v3;\n
    v4[1] = v3;\n
    v5 = v4[1];\n
    tmp_16 = v5;\n
    v6 = v5 * 4;\n
    if (([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t16, 0x4<32>, 0x0<32>) & 1))\n
        v6 = -1;\n
    v0 = v6;\n
    v4[2] = sub_409eb0();\n
    return v4;\n
}\n
", "4213724:sub_404bdc": null, "4213728:sub_404be0": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_404be0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v5 = v4->field_8;\n
    v0 = v5;\n
    if (v5)\n
        v5 = sub_409e90(v0, v5, v4);\n
    return v5;\n
}\n
", "4213771:sub_404c0b": null, "4213776:sub_404c10": "int sub_404c10(unsigned int v13)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1[3];  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v3[3];  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    char v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
    unsigned int v17[3];  // ecx\n
\n
    v11 = &v12;\n
    v10 = v14;\n
    v9 = v15;\n
    v8 = v16;\n
    v4 = &v0;\n
    v7 = -1;\n
    v6 = sub_405270;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v5;\n
    v1[0] = sub_409e40();\n
    v7 = 0;\n
    sub_404b90(v13);\n
    v3[0] = v1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v17 = v3;\n
        if (v2 >= v17[0])\n
            break;\n
        *((v3[2] + v2 * 4)) = 0;\n
        v2 = v2 + 1;\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v17;\n
    return v3;\n
}\n
", "4213951:sub_404cbf": null, "4213952:sub_404cc0": "int sub_404cc0()\n
{\n
    char v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ebp\n
\n
    v1 = &v2;\n
    sub_409e90(*(&v0));\n
    v4 = v1;\n
    return;\n
}\n
", "4213974:sub_404cd6": null, "4213984:sub_404ce0": null, "4214271:sub_404dff": null, "4214272:sub_404e00": "int sub_404e00()\n
{\n
    char v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // ebp\n
\n
    v3 = &v4;\n
    v6 = &v0;\n
    v2 = *(&v1);\n
    sub_409e90();\n
    v7 = v3;\n
    return;\n
}\n
", "4214299:sub_404e1b": null, "4214304:sub_404e20": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404e20(unsigned int v13, unsigned int a0)\n
{\n
    int <0x404e20[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    int <0x404e20[is_7]|Stack bp-0x48, 1 B>;  // [bp-0x48]\n
    unsigned int v0;  // [bp-0x48]\n
    int tmp_29;  // tmp #29\n
    int tmp_31;  // tmp #31\n
    int tmp_30;  // tmp #30\n
    int tmp_35;  // tmp #35\n
    int tmp_36;  // tmp #36\n
    int tmp_33;  // tmp #33\n
    struct_0 *v1;  // [bp-0x40]\n
    unsigned int v2[3];  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int *v4;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned int v6[3];  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    void* v10;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x4]\n
    unsigned int v12;  // [bp+0x0]\n
\n
    v11 = &<0x404e20[is_2]|Stack bp, 1 B>;\n
    v1 = &v11;\n
    v7 = &<0x404e20[is_7]|Stack bp-0x48, 1 B>;\n
    v10 = -1;\n
    v9 = sub_4052b0;\n
    v8 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v8;\n
    v0 = 12;\n
    v2[0] = sub_409e40();\n
    v10 = 0;\n
    v12 = v13;\n
    sub_404b90(v13);\n
    v6[0] = v2;\n
    tmp_29 = DivV(tmp_31, tmp_30);\n
    *(&v5) = tmp_29;\n
    for (v4 = 0; v4 < v6[0]; v4 = v4 + 1)\n
    {\n
        tmp_35 = DivV(tmp_36, tmp_33);\n
        v3 = tmp_35;\n
        *((v6[2] + v4 * 4)) = ((v3 >> 31 CONCAT v3) /m 2 >> 32 ? 3221225473 : 1073741823);\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v8;\n
    return v6;\n
}\n
", "4214600:sub_404f48": null, "4214608:sub_404f50": "int sub_404f50()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // ebp\n
\n
    v2 = &v3;\n
    v5 = &v0;\n
    sub_409e90(*(&v1));\n
    v6 = v2;\n
    return;\n
}\n
", "4214633:sub_404f69": null, "4214640:sub_404f70": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_0;\n
\n
int sub_404f70(unsigned int v6[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3[3];  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[3];  // ecx\n
    unsigned int v8[3];  // eax, Other Possible Types: unsigned int\n
    unsigned int v9[3];  // eax\n
    unsigned int v10[3];  // eax\n
    struct_0 *v11;  // ecx\n
    unsigned int v12[3];  // edx\n
\n
    v4 = &v5;\n
    v3[0] = v7;\n
    v1[0] = v3;\n
    v8 = v6;\n
    if (v8 <= v1[0])\n
        return v6;\n
    if (v1[1] < v6)\n
    {\n
        while (v1[1] < v6)\n
        {\n
            if (v1[1] < 0x8000)\n
            {\n
                v9 = v1;\n
                v9[1] = v9[1] * 2;\n
            }\n
            else\n
            {\n
                v10 = v1;\n
                v10[1] = v10[1] + 0x8000;\n
            }\n
        }\n
        v11 = v1;\n
        v2 = sub_409eb0();\n
        sub_403020(v2, v11->field_8, v11->field_0 * 4);\n
        v0 = v1[2];\n
        if (v0)\n
            sub_409ed0();\n
        v1[2] = v2;\n
    }\n
    v12 = v1;\n
    sub_403130(v12[2] + v12[0] * 4, 0, (v6 - v12[0]) * 4);\n
    v8 = v1;\n
    *(v8) = v6;\n
    return v1;\n
}\n
", "4214925:sub_40508d": null, "4214928:sub_405090": "int sub_405090(unsigned int v2[3])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    if (*(v3) > v2)\n
    {\n
        *(v3) = v2;\n
        return v3;\n
    }\n
    return sub_404f70(v2);\n
}\n
", "4214994:sub_4050d2": null, "4215008:sub_4050e0": "int sub_4050e0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    return sub_404f70(*(v3) + v2);\n
}\n
", "4215043:sub_405103": null, "4215056:sub_405110": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int sub_405110(unsigned int v5[3], struct_1 *a0)\n
{\n
    char <0x405110[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_13;  // tmp #13\n
    unsigned int v1;  // [bp-0xc]\n
    struct_1 *v2;  // [bp-0x8]\n
    struct_0 *v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x0]\n
    unsigned int v6[3];  // [bp+0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0x10]\n
    unsigned int v8;  // [bp+0x14]\n
    unsigned int v9[3];  // [bp+0x1c], Other Possible Types: unsigned int\n
    unsigned int v10;  // ecx\n
    unsigned int v11[3];  // eax, Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    unsigned int v15[3];  // eax\n
    unsigned int v17;  // edx\n
\n
    v3 = &<0x405110[is_2]|Stack bp, 1 B>;\n
    v2 = a0;\n
    v1 = v10;\n
    v0 = v1;\n
    v6[0] = sub_4052d0();\n
    v11 = v6;\n
    if (v11 < sub_4052d0())\n
        return v6;\n
    v9[0] = 0;\n
    while (true)\n
    {\n
        v5[0] = v9;\n
        v11 = v5;\n
        if (v11 >= sub_4052d0(*((v5[2] + (v9 << 2)))))\n
            break;\n
        v7 = *((a0->field_8 + v9 * 4));\n
        v8 = v7 >> 31;\n
        v4 = *((v5[2] + v9 * 4));\n
        v12 = sub_4052f0();\n
        v13 = v12;\n
        v15 = v6;\n
        tmp_13 = v15;\n
        v7 = v7 + (v12 >> 31) + (tmp_13 + v13 < tmp_13);\n
        v6 = v15 + v13;\n
        if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, Load(addr=stack_base+16, size=4, endness=Iend_LE), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < 0x7fffffff<32>)), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < 0x7fffffff<32>)))))\n
        {\n
            *((a0->field_8 + v9 * 4)) = 2147483647;\n
        }\n
        else\n
        {\n
            v17 = v7;\n
            if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, Load(addr=stack_base+16, size=4, endness=Iend_LE), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < 0x7fffffff<32>)), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < 0x7fffffff<32>)))))\n
                *((a0->field_8 + v9 * 4)) = 0x80000000;\n
            else\n
                *((a0->field_8 + v9 * 4)) = v7;\n
        }\n
        v9 = &v9[0] + 1;\n
    }\n
    return v5;\n
}\n
", "4215395:sub_405263": null, "4215408:sub_405270": "int sub_405270(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    return __CxxFrameHandler3();\n
}\n
", "4215434:sub_40528a": null, "4215440:sub_405290": "int sub_405290(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4215466:sub_4052aa": null, "4215472:sub_4052b0": "int sub_4052b0(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4215504:sub_4052d0": "int sub_4052d0()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return *(v0);\n
}\n
", "4215536:sub_4052f0": "int sub_4052d0()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return *(v0);\n
}\n
", "4215696:sub_405390": "int sub_405390()\n
{\n
    int <0x405390[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned long v0;  // [bp-0x1c]\n
    int tmp_19;  // tmp #19\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned long v2;  // [bp+0x0]\n
    unsigned long v5;  // [bp+0x18]\n
    unsigned int *v6;  // ecx\n
\n
    v1 = &<0x405390[is_2]|Stack bp, 1 B>;\n
    *(&v0) = *(v6);\n
    s_1c =L Conv(128->64, ((0x0<64> CONCAT 0x3e34000000280000<64>) * Conv(64->128, Load(addr=stack_base-28, size=8, endness=Iend_LE))))<8>\n
    if ((CmpF(*(&v0), 0) & 1) == 1)\n
    {\n
        tmp_19 = DivV(tmp_21, tmp_20);\n
        *(&v5) = tmp_19;\n
    }\n
    else\n
    {\n
        s_-18 =L Conv(128->64, ((0x0<64> CONCAT 0x3ff0000000000000<64>) + Conv(64->128, Load(addr=stack_base+8, size=8, endness=Iend_LE))))<8>\n
    }\n
    *(&v2) = *(&v5);\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        [D] PutI(72:F64x8)[t1,0] = t4\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        return v6;\n
    }\n
    [D] PutI(72:F64x8)[t1,0] = t4\n
    [D] PutI(136:I8x8)[t1,0] = 0x01\n
    return v6;\n
}\n
", "4215856:sub_405430": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char field_18;\n
} struct_0;\n
\n
int sub_405430()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405a20(v3, v3);\n
    v3->field_14 = 0;\n
    v3->field_18 = 0;\n
    return v3;\n
}\n
", "4215898:sub_40545a": null, "4215904:sub_405460": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_405460(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405430();\n
    v3->field_4 = 0;\n
    v3->field_8 = v2;\n
    return v3;\n
}\n
", "4215947:sub_40548b": null, "4215952:sub_405490": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_405490(unsigned int v14, unsigned int a0)\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // esi\n
    struct_0 *v21;  // ecx\n
\n
    v12 = &v13;\n
    v11 = v18;\n
    v10 = v19;\n
    v9 = v20;\n
    v5 = &v0;\n
    v8 = -1;\n
    v7 = sub_405a00;\n
    v6 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v6;\n
    sub_405430();\n
    v21->field_4 = 1;\n
    v21->field_8 = v14;\n
    v21->field_c = a0;\n
    v4 = sub_4052d0();\n
    if (v4 >= sub_4052d0())\n
    {\n
        v2 = sub_4052d0();\n
        if (v2 < sub_4052d0())\n
        {\n
            v1 = a0;\n
            v8 = 0;\n
            sub_405090(sub_4052d0());\n
        }\n
    }\n
    else\n
    {\n
        v3 = v14;\n
        v8 = 0;\n
        sub_405090(sub_4052d0());\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v6;\n
    return v21;\n
}\n
", "4216229:sub_4055a5": null, "4216240:sub_4055b0": "int sub_4055b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebp\n
\n
    v0 = &v1;\n
    sub_4055d0(v3);\n
    v4 = v0;\n
    return;\n
}\n
", "4216258:sub_4055c2": null, "4216272:sub_4055d0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4055d0()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // ecx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    if (v6->field_8)\n
    {\n
        v2 = v6->field_8;\n
        if (v2)\n
        {\n
            sub_404be0();\n
            v0 = v2;\n
            sub_409e90();\n
        }\n
    }\n
    if (!(v6->field_4 & 1))\n
        return v6;\n
    v7 = v6;\n
    if (!v6->field_c)\n
        return v7;\n
    v7 = v6->field_c;\n
    v1 = v7;\n
    if (v7)\n
    {\n
        sub_404be0();\n
        v0 = v1;\n
        v7 = sub_409e90();\n
    }\n
}\n
", "4216417:sub_405661": null, "4216432:sub_405670": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int sub_405670(unsigned int v2[3])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405090(v2);\n
    if ((v3->field_4 & 1))\n
        return sub_405090(v2);\n
    return v3;\n
}\n
", "4216507:sub_4056bb": null, "4216512:sub_4056c0": "int sub_4056c0(unsigned int v22)\n
{\n
    int <0x4056c0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    unsigned int v3;  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x44]\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    char v10;  // [bp-0x2c]\n
    char v11;  // [bp-0x28]\n
    char v12;  // [bp-0x24]\n
    char v13;  // [bp-0x20]\n
    char v14;  // [bp-0x1c]\n
    char v15;  // [bp-0x18]\n
    char v16;  // [bp-0x14]\n
    char v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned int v19;  // [bp-0x8]\n
    unsigned int v20;  // [bp-0x4]\n
    unsigned int v21;  // [bp+0x0]\n
    unsigned int v23;  // [bp+0x8]\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
\n
    v20 = &<0x4056c0[is_2]|Stack bp, 1 B>;\n
    v19 = v24;\n
    v8 = v19;\n
    v9 = sub_405a40();\n
    if (v9 < sub_405a40())\n
        sub_405670(sub_405a40());\n
    if ((*((v8 + 4)) & 1))\n
    {\n
        if (!(*((v22 + 4)) & 1))\n
        {\n
            v5 = *((v8 + 8));\n
            v4 = v22 + 16;\n
            v21 = &v16;\n
            v22 = *((v22 + 20));\n
            sub_405ad0(&v16);\n
            v21 = &v17;\n
            v22 = &v16;\n
            sub_405a60(&v17);\n
            v19 = *((v22 + 8));\n
            v20 = *(&v17);\n
            sub_405110(v22, v23);\n
            v7 = *((v8 + 12));\n
            v6 = v22 + 16;\n
            v19 = &v14;\n
            v20 = *((v22 + 20));\n
            sub_405b20(&v17);\n
            v21 = &v15;\n
            v22 = &v14;\n
            sub_405a60(&v15);\n
            v19 = *((v22 + 8));\n
            v20 = *(&v15);\n
        }\n
        else\n
        {\n
            v1 = *((v8 + 8));\n
            v0 = v22 + 16;\n
            v21 = &v12;\n
            v22 = *((v22 + 20));\n
            sub_405ad0(&v12);\n
            v21 = &v13;\n
            v22 = &v12;\n
            sub_405a60(&v13);\n
            v19 = *((v22 + 8));\n
            v20 = *(&v13);\n
            sub_405110(v22, v23);\n
            v3 = *((v8 + 12));\n
            v2 = v22 + 16;\n
            v19 = &v10;\n
            v20 = *((v22 + 20));\n
            sub_405b20(&v13);\n
            v21 = &v11;\n
            v22 = &v10;\n
            sub_405a60(&v11);\n
            v19 = *((v22 + 12));\n
            v20 = *(&v11);\n
        }\n
        v25 = sub_405110(v22, v23);\n
        return v25;\n
    }\n
    else\n
    {\n
        v25 = v22;\n
        if (!(*((v25 + 4)) & 1))\n
        {\n
            v18 = *((v22 + 16));\n
            v21 = *((v22 + 8));\n
            v22 = v18;\n
            v25 = sub_405110(v22, v23);\n
            return v25;\n
        }\n
        return v22;\n
    }\n
}\n
", "4217046:sub_4058d6": null, "4217056:sub_4058e0": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_4058e0(struct_0 *v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct_0 *v4;  // [bp-0x14]\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    struct_1 *v9;  // ecx\n
\n
    v6 = &v7;\n
    if (!(v9->field_4 & 1) && !(v8->field_4 & 1))\n
    {\n
        v9->field_4 = 1;\n
        v9->field_c = v8->field_8;\n
        v8->field_8 = 0;\n
        v4 = v8;\n
        if (v4)\n
        {\n
            sub_4055d0();\n
            sub_409e90();\n
        }\n
        v3 = sub_4052d0();\n
        if (v3 < sub_4052d0())\n
        {\n
            v2 = v9->field_8;\n
            sub_405090(sub_4052d0());\n
        }\n
        else\n
        {\n
            v1 = sub_4052d0();\n
            if (v1 < sub_4052d0())\n
            {\n
                v0 = v9->field_c;\n
                sub_405090(sub_4052d0());\n
            }\n
        }\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4217337:sub_4059f9": null, "4217344:sub_405a00": "int sub_405a00(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4217376:sub_405a20": "int sub_405a20()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4217408:sub_405a40": "int sub_405a40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return sub_4052d0();\n
}\n
", "4217440:sub_405a60": "int sub_405a40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return sub_4052d0();\n
}\n
", "4217552:sub_405ad0": "int sub_405ad0(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    if (a0 <= 0)\n
    {\n
        sub_405cc0(0, v0, v0);\n
        return v0;\n
    }\n
    sub_405cc0(-(a0), v0, v0);\n
    return v0;\n
}\n
", "4217632:sub_405b20": "int sub_405b20(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    if (a0 >= 0)\n
    {\n
        sub_405cc0(0, v0, v0);\n
        return v0;\n
    }\n
    sub_405cc0(a0, v0, v0);\n
    return v0;\n
}\n
", "4217712:sub_405b70": "int sub_405b20(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    if (a0 >= 0)\n
    {\n
        sub_405cc0(0, v0, v0);\n
        return v0;\n
    }\n
    sub_405cc0(a0, v0, v0);\n
    return v0;\n
}\n
", "4218048:sub_405cc0": "int sub_405cc0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = v3;\n
    return v0;\n
}\n
", "4218080:sub_405ce0": "int sub_405ce0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v4;\n
}\n
", "4218092:sub_405cec": null, "4218096:sub_405cf0": "int sub_405cf0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // [bp+0x8]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v3 = sub_409e40();\n
        v0 = 4;\n
        memset(v3, 0);\n
        sub_405de0(v7, v8);\n
        v4 = v3;\n
        return v4;\n
    }\n
    else if (v7 == 1)\n
    {\n
        v2 = sub_409e40();\n
        v0 = 4;\n
        memset(v2, 0);\n
        sub_405e10(v7, v8);\n
        v4 = v2;\n
        return v4;\n
    }\n
    else if (v7 == 2)\n
    {\n
        v1 = sub_409e40();\n
        v0 = 4;\n
        memset(v1, 0);\n
        sub_405e40(v7, v8);\n
        v4 = v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4218336:sub_405de0": "extern char g_40d2a0;\n
\n
int sub_405de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405e70(v3, v3);\n
    *(v3) = &g_40d2a0;\n
    return v3;\n
}\n
", "4218384:sub_405e10": "extern char g_40d2e0;\n
\n
int sub_405e10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405e70(v3, v3);\n
    *(v3) = &g_40d2e0;\n
    return v3;\n
}\n
", "4218432:sub_405e40": "extern char g_40d300;\n
\n
int sub_405e40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_405e70(v3, v3);\n
    *(v3) = &g_40d300;\n
    return v3;\n
}\n
", "4218480:sub_405e70": "extern char g_40d2c0;\n
\n
int sub_405e70()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = &g_40d2c0;\n
    return v0;\n
}\n
", "4218512:sub_405e90": "int sub_405e90(unsigned int v6)\n
{\n
    char v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v1 = v7;\n
    v3 = v7;\n
    v2 = v6;\n
    sub_405f00(*(&v0), v1, v2, v7, v7);\n
    if (v2)\n
    {\n
        sub_409e90();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218592:sub_405ee0": "int sub_405ee0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
}\n
", "4218611:sub_405ef3": "int sub_405ef3()\n
{\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4218611\n
}\n
", "4218624:sub_405f00": "int sub_405f00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return sub_405ce0();\n
}\n
", "4218656:sub_405f20": "int sub_405f20(unsigned int v6)\n
{\n
    char v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v1 = v7;\n
    v3 = v7;\n
    v2 = v6;\n
    sub_405f70(*(&v0), v7, v2, v7, v1);\n
    if (v2)\n
    {\n
        sub_409e90();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218736:sub_405f70": "int sub_405f70()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return sub_405ce0();\n
}\n
", "4218768:sub_405f90": "int sub_405f90(unsigned int v6)\n
{\n
    char v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v1 = v7;\n
    v3 = v7;\n
    v2 = v6;\n
    sub_405fe0(*(&v0), v1, v2, v7, v7);\n
    if (v2)\n
    {\n
        sub_409e90();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218848:sub_405fe0": "int sub_405fe0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return sub_405ce0();\n
}\n
", "4218880:sub_406000": "int sub_406000()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return 0;\n
}\n
", "4218894:sub_40600e": null, "4218896:sub_406010": "int sub_406010(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0xc], Other Possible Types: char\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v6 = ((sub_406200(*(&v0), v4) & 1) ? 1 : 2);\n
    v0 = v6;\n
    return sub_405a40() * v0 * 4;\n
}\n
", "4218963:sub_406053": null, "4218976:sub_406060": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406060(unsigned int v6, unsigned int *a0)\n
{\n
    char <0x406060[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    struct_0 *v4;  // [bp-0x4]\n
    void* v5;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    unsigned int *v8;  // eax\n
    unsigned int *v9;  // eax\n
\n
    v4 = &<0x406060[is_2]|Stack bp, 1 B>;\n
    v3 = v7;\n
    v2 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_405a40())\n
            break;\n
        v5 = 0;\n
        sub_406220();\n
        v4 = v1;\n
        v8 = v2;\n
        v2 = v8 + 1;\n
        *(v8) = sub_406280(0);\n
        if ((sub_406200(0) & 1))\n
        {\n
            v5 = 1;\n
            sub_406220();\n
            v4 = v1;\n
            v9 = v2;\n
            v2 = v9 + 1;\n
            *(v9) = sub_406280(1);\n
        }\n
        v1 += 1;\n
    }\n
    return v0;\n
}\n
", "4219178:sub_40612a": null, "4219184:sub_406130": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406130(unsigned int v6, unsigned int *a0)\n
{\n
    char <0x406130[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    struct_0 *v4;  // [bp-0x4]\n
    void* v5;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0xc]\n
    unsigned int v8;  // ecx\n
    unsigned int *v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int v12;  // eax\n
\n
    v4 = &<0x406130[is_2]|Stack bp, 1 B>;\n
    v3 = v8;\n
    v2 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_405a40())\n
            break;\n
        v5 = 0;\n
        sub_406220();\n
        v9 = v2;\n
        v2 = v9 + 1;\n
        v10 = *(v9);\n
        v4 = v1;\n
        v5 = v10;\n
        sub_4062d0(v5);\n
        if ((sub_406200(v6, a0, v7) & 1))\n
        {\n
            v5 = 1;\n
            sub_406220();\n
            v11 = v2;\n
            v2 = v11 + 1;\n
            v12 = *(v11);\n
            v4 = v1;\n
            v5 = v12;\n
            sub_4062d0(v5);\n
        }\n
        v1 += 1;\n
    }\n
    return v0;\n
}\n
", "4219392:sub_406200": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int sub_406200()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return v0->field_4 & 1;\n
}\n
", "4219424:sub_406220": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_406220(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // ecx\n
\n
    v1 = &v2;\n
    if (!v3)\n
    {\n
        v0 = v4->field_8;\n
        return v0;\n
    }\n
    else if ((v4->padding_0[4] & 1))\n
    {\n
        v0 = *(&v4[1].padding_0[0]);\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4219520:sub_406280": "int sub_406280(unsigned int *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[3];  // ecx\n
\n
    v1 = &v2;\n
    if (v3 >= v4[0])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *((v4[2] + v3 * 4));\n
    return v0;\n
}\n
", "4219600:sub_4062d0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_4062d0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
    unsigned int v4;  // eax\n
\n
    v0 = &v1;\n
    if (v2 >= v3->field_0)\n
        sub_405090(v2 + 1);\n
    v4 = v3->field_8;\n
    *((v4 + v2 * 4)) = a0;\n
    return v4;\n
}\n
", "4219680:sub_406320": "int sub_406320()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return 2;\n
}\n
", "4219697:sub_406331": null, "4219712:sub_406340": "int sub_406340(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v0 = ((sub_406200() & 1) ? 1 : 2);\n
    return sub_405a40() * v0;\n
}\n
", "4219779:sub_406383": null, "4219792:sub_406390": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406390(unsigned int v6, char *a0)\n
{\n
    char <0x406390[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x14]\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    struct_0 *v4;  // [bp-0x4]\n
    void* v5;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    char *v8;  // eax\n
    char *v9;  // eax\n
\n
    v4 = &<0x406390[is_2]|Stack bp, 1 B>;\n
    v3 = v7;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= sub_405a40())\n
            break;\n
        v5 = 0;\n
        sub_406220(0);\n
        v4 = v2;\n
        v1 = sub_406280(NULL);\n
        v4 = v1;\n
        tmp_8 = sub_406470(0);\n
        v8 = a0;\n
        a0 = v8 + 1;\n
        *(v8) = tmp_8;\n
        if ((sub_406200() & 1))\n
        {\n
            v5 = 1;\n
            sub_406220(1);\n
            v4 = v2;\n
            v1 = sub_406280(0x1);\n
            v4 = v1;\n
            tmp_6 = sub_406470(1);\n
            v9 = a0;\n
            a0 = v9 + 1;\n
            *(v9) = tmp_6;\n
        }\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4220016:sub_406470": "int sub_406470(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v4 >>= 18;\n
    if (v4 >= 0)\n
    {\n
        v1 = 128;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        v4 = -(v4) - 1;\n
    }\n
    if (v4 <= 30)\n
    {\n
        v6 = 30 - v4;\n
        v1 |= (v6 >> 31 CONCAT v6) /m 2 + 112;\n
        return v1;\n
    }\n
    if (v4 <= 94)\n
    {\n
        v7 = 94 - v4;\n
        v1 |= (v7 >> 31 CONCAT v7) /m 4 + 96;\n
    }\n
    else if (v4 <= 222)\n
    {\n
        v8 = 222 - v4;\n
        v1 |= (v8 >> 31 CONCAT v8) /m 8 + 80;\n
    }\n
    else if (v4 <= 478)\n
    {\n
        v9 = 478 - v4;\n
        v1 |= (v9 >> 31 CONCAT v9) /m 16 + 64;\n
    }\n
    else if (v4 <= 990)\n
    {\n
        v10 = 990 - v4;\n
        v1 |= (v10 >> 31 CONCAT v10) /m 32 + 48;\n
    }\n
    else if (v4 <= 2014)\n
    {\n
        v11 = 2014 - v4;\n
        v1 |= (v11 >> 31 CONCAT v11) /m 64 + 32;\n
    }\n
    else if (v4 <= 4062)\n
    {\n
        v12 = 4062 - v4;\n
        v1 |= (v12 >> 31 CONCAT v12) /m 128 + 16;\n
    }\n
    else if (v4 <= 8190)\n
    {\n
        v13 = 8190 - v4;\n
        v1 |= (v13 >> 31 CONCAT v13) /m 258;\n
    }\n
    return v1;\n
}\n
", "4220483:sub_406643": null, "4220496:sub_406650": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406650(unsigned int v7, char *a0)\n
{\n
    char <0x406650[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    struct_0 *v5;  // [bp-0x4]\n
    void* v6;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
    char *v9;  // eax\n
    char *v11;  // eax\n
\n
    v5 = &<0x406650[is_2]|Stack bp, 1 B>;\n
    v4 = v8;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v2 = v3;\n
        if (v2 >= sub_405a40())\n
            break;\n
        v6 = 0;\n
        v1 = sub_406220(0);\n
        v9 = a0;\n
        a0 = v9 + 1;\n
        v5 = *(v9);\n
        v6 = v3;\n
        v7 = sub_406740(0);\n
        sub_4062d0(v7, a0);\n
        if ((sub_406200() & 1))\n
        {\n
            v6 = 1;\n
            v0 = sub_406220(1);\n
            v11 = a0;\n
            a0 = v11 + 1;\n
            v5 = *(v11);\n
            v6 = v3;\n
            v7 = sub_406740(1);\n
            sub_4062d0(v7, a0);\n
        }\n
        v3 += 1;\n
    }\n
    return v2;\n
}\n
", "4220722:sub_406732": null, "4220736:sub_406740": "int sub_406740(char v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = v5 & 15;\n
    if (!(v5 & 112))\n
    {\n
        v1 = 8190 - v0 * 258;\n
    }\n
    else if ((v5 & 112) == 16)\n
    {\n
        v1 = 4062 - v0 * 128;\n
    }\n
    else if ((v5 & 112) == 32)\n
    {\n
        v1 = 2014 - v0 * 64;\n
    }\n
    else if ((v5 & 112) == 48)\n
    {\n
        v1 = 990 - v0 * 32;\n
    }\n
    else if ((v5 & 112) == 64)\n
    {\n
        v1 = 478 - v0 * 16;\n
    }\n
    else if ((v5 & 112) == 80)\n
    {\n
        v1 = 222 - v0 * 8;\n
    }\n
    else if ((v5 & 112) == 96)\n
    {\n
        v1 = 94 - v0 * 4;\n
    }\n
    else if ((v5 & 112) == 112)\n
    {\n
        v1 = 30 - v0 * 2;\n
    }\n
    if ((v5 & 128))\n
    {\n
        v2 = v1 * 0x40000;\n
        return v2;\n
    }\n
    v2 = (-(v1) - 1) * 0x40000;\n
    return v2;\n
}\n
", "4221136:sub_4068d0": "int sub_4068d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return 1;\n
}\n
", "4221153:sub_4068e1": null, "4221168:sub_4068f0": "int sub_4068f0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v2 = v7;\n
    if ((sub_406200() & 1))\n
    {\n
        v1 = sub_405a40();\n
        v3 = v1 + (0 CONCAT sub_405a40() + 504) /m 505 * 7;\n
        return v3;\n
    }\n
    v0 = sub_405a40() >> 1;\n
    v3 = v0 + (0 CONCAT sub_405a40() + 508) /m 509 * 3;\n
    return v3;\n
}\n
", "4221310:sub_40697e": null, "4221312:sub_406980": "typedef struct struct_0 {\n
    char padding_0[4248340];\n
    unsigned int field_40d314;\n
} struct_0;\n
\n
extern char g_40d314;\n
\n
int sub_406980(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 < 0)\n
        v6 = -(v6);\n
    v3 = 0;\n
    for (v2 = 1; v2 < 90; v2 = &v2->padding_0[1])\n
    {\n
        v1 = v6 - *((0x4 * v3 + &g_40d314));\n
        v0 = v6 - *(&(&g_40d314)[4 * v2]);\n
        if (v1 < 0)\n
            v1 = -(v1);\n
        if (v0 < 0)\n
            v0 = -(v0);\n
        if (v0 < v1)\n
            v3 = v2;\n
    }\n
    return v3;\n
}\n
", "4221476:sub_406a24": null, "4221488:sub_406a30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406a30(struct_0 *v14, unsigned int a0)\n
{\n
    struct_0 *<0x406a30[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_0 **v0;  // [bp-0x30]\n
    char v1;  // [bp-0x29]\n
    unsigned short v2;  // [bp-0x28]\n
    unsigned short v3;  // [bp-0x26]\n
    unsigned int v4;  // [bp-0x24], Other Possible Types: char\n
    unsigned int v5;  // [bp-0x20], Other Possible Types: char\n
    unsigned int v6;  // [bp-0x1c], Other Possible Types: char\n
    unsigned int v7;  // [bp-0x18], Other Possible Types: char\n
    char *v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    struct struct_0 **v12;  // [bp-0x4]\n
    struct_0 *v13;  // [bp+0x0]\n
    char v15;  // [bp+0x34]\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // esi\n
\n
    v12 = &<0x406a30[is_2]|Stack bp, 1 B>;\n
    v11 = v16;\n
    v10 = v17;\n
    v9 = 0;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v0 = v9;\n
        if (v0 >= sub_405a40())\n
            break;\n
        if (!(v8 & 511))\n
        {\n
            v13 = 0;\n
            sub_406220(0);\n
            v12 = v9;\n
            v4 = sub_406280(NULL) >> 16;\n
            v12 = 0;\n
            sub_406220(0);\n
            v12 = v9 + 1;\n
            v12 = (sub_406280(NULL) >> 16) - v4;\n
            v6 = sub_406980(0);\n
            *((a0 + v8)) = v4;\n
            v8 += 2;\n
            *((a0 + v8)) = v6;\n
            v8 += 2;\n
            if ((sub_406200() & 1))\n
            {\n
                v13 = 1;\n
                sub_406220(1);\n
                v12 = v9;\n
                v5 = sub_406280(0x1) >> 16;\n
                v12 = 1;\n
                sub_406220(1);\n
                v12 = v9 + 1;\n
                v12 = (sub_406280(0x1) >> 16) - v5;\n
                v7 = sub_406980(1);\n
                *((a0 + v8)) = v5;\n
                v8 += 2;\n
                *((a0 + v8)) = v7;\n
                v8 += 2;\n
            }\n
        }\n
        else\n
        {\n
            v13 = 0;\n
            sub_406220(0);\n
            v12 = v9;\n
            v2 = sub_406280(NULL) >> 16;\n
            if (!(sub_406200() & 1))\n
            {\n
                v13 = 0;\n
                sub_406220(0);\n
                v9 = v9 + 1;\n
                v12 = v9;\n
                v2 = sub_406280(NULL) >> 16;\n
            }\n
            else\n
            {\n
                v13 = 1;\n
                sub_406220(1);\n
                v12 = v9;\n
                v3 = sub_406280(0x1) >> 16;\n
            }\n
            v1 = 0;\n
            v13 = &v4;\n
            v14 = &v6;\n
            a0 = v2;\n
            v1 |= sub_406d20(v14, a0) * 16;\n
            if (!(sub_406200() & 1))\n
            {\n
                v13 = &v4;\n
                v14 = &v6;\n
            }\n
            else\n
            {\n
                v13 = &v5;\n
                v14 = &v7;\n
            }\n
            a0 = v3;\n
            v1 |= sub_406d20(v14, a0);\n
            v18 = v8;\n
            v8 = v18 + 1;\n
            a0[v18] = v1;\n
        }\n
        v9 = v9 + 1;\n
    }\n
    v19 = *(&v15);\n
    return v0;\n
}\n
", "4222239:sub_406d1f": null, "4222240:sub_406d20": "extern char g_40d314;\n
\n
int sub_406d20(unsigned int *v7, struct struct_0 **a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = a1 - *(v7);\n
    if (v3 >= 0)\n
    {\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        v3 = -(v3);\n
    }\n
    v1 = *((0x4 * *(a0) + &g_40d314));\n
    v8 = v3 * 4;\n
    v4 = (v8 >> 31 CONCAT v8) /m v1;\n
    if (v4 > 7)\n
        v4 = 7;\n
    if (v2 < 0)\n
        v4 |= 8;\n
    v0 = v4;\n
    sub_407030(v7, a0);\n
    return v4;\n
}\n
", "4222409:sub_406dc9": null, "4222416:sub_406dd0": "int sub_406dd0(struct struct_1 **v12, unsigned int a0)\n
{\n
    struct struct_0 **<0x406dd0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_0 **v0;  // [bp-0x28]\n
    char v1;  // [bp-0x22]\n
    char v2;  // [bp-0x21]\n
    struct struct_0 **v3;  // [bp-0x20], Other Possible Types: char\n
    struct struct_0 **v4;  // [bp-0x1c], Other Possible Types: char, unsigned int\n
    char *v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    struct struct_0 **v10;  // [bp-0x4]\n
    struct struct_0 **v11;  // [bp+0x0]\n
    unsigned int v13;  // ecx\n
\n
    v10 = &<0x406dd0[is_2]|Stack bp, 1 B>;\n
    v9 = v13;\n
    v8 = 0;\n
    v7 = 0;\n
    while (true)\n
    {\n
        v0 = v8;\n
        if (v0 >= sub_405a40())\n
            break;\n
        if (!(v7 & 511))\n
        {\n
            v3 = *(&v7[a0]);\n
            v7 += 2;\n
            v5 = *((a0 + v7));\n
            v7 += 2;\n
            v11 = 0;\n
            sub_406220(0);\n
            v10 = v8;\n
            v11 = v3 * 0x10000;\n
            sub_4062d0(v12, a0);\n
            if ((sub_406200() & 1))\n
            {\n
                v4 = *((a0 + v7));\n
                v7 += 2;\n
                v6 = *((a0 + v7));\n
                v7 += 2;\n
                v11 = 1;\n
                sub_406220(1);\n
                v10 = v8;\n
                v11 = v4 * 0x10000;\n
                sub_4062d0(v12, a0);\n
            }\n
        }\n
        else\n
        {\n
            v2 = *((a0 + v7)) >> 4;\n
            v1 = v7[a0] & 15;\n
            v7 += 1;\n
            v11 = &v3;\n
            v12 = &v5;\n
            a0 = v2;\n
            sub_407030(v12, a0);\n
            v11 = 0;\n
            sub_406220(0);\n
            v10 = v8;\n
            v11 = v3 * 0x10000;\n
            sub_4062d0(v12, a0);\n
            if ((sub_406200() & 1))\n
            {\n
                v11 = &v4;\n
                v12 = &v6;\n
                a0 = v1;\n
                sub_407030(v12, a0);\n
                v11 = 1;\n
                sub_406220(1);\n
                v10 = v8;\n
                v11 = v4 * 0x10000;\n
            }\n
            else\n
            {\n
                v11 = &v3;\n
                v12 = &v5;\n
                a0 = v1;\n
                sub_407030(v12, a0);\n
                v8 += 1;\n
                v11 = 0;\n
                sub_406220(0);\n
                v10 = v8;\n
                v11 = v3 * 0x10000;\n
            }\n
            sub_4062d0(v12, a0);\n
        }\n
        v8 += 1;\n
    }\n
    return v0;\n
}\n
", "4223020:sub_40702c": null, "4223024:sub_407030": "typedef struct struct_1 {\n
    char padding_0[4248700];\n
    unsigned int field_40d47c;\n
} struct_1;\n
\n
extern char g_40d314;\n
extern char g_40d47c;\n
\n
int sub_407030(unsigned int *v3, struct struct_0 **a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    struct struct_0 **v5;  // eax\n
    unsigned int *v7;  // eax\n
    unsigned int *v8;  // eax\n
    unsigned int *v9;  // eax\n
    unsigned int *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *((0x4 * *(a0) + &g_40d314));\n
    v5 = a0;\n
    *(v5) = &*(v5)->padding_0[*(&(&g_40d47c)[4 * (a1 & 7)])];\n
    v0 *= ((a1 & 8) ? 1 : -1);\n
    if ((a1 & 4))\n
    {\n
        v7 = v3;\n
        *(v7) = v0 + *(v7);\n
    }\n
    if ((a1 & 2))\n
    {\n
        v8 = v3;\n
        *(v8) = (v0 >> 1) + *(v8);\n
    }\n
    if ((a1 & 1))\n
    {\n
        v9 = v3;\n
        *(v9) = (v0 >> 2) + *(v9);\n
    }\n
    if (*(a0) < 0)\n
        *(a0) = 0;\n
    if (*(a0) > 7)\n
        *(a0) = 7;\n
    if (*(v3) >= 32767)\n
    {\n
        v10 = v3;\n
        *(v10) = 32767;\n
        return v3;\n
    }\n
    v10 = v3;\n
    if (*(v10) > -0x8000)\n
        return v10;\n
    v10 = v3;\n
    *(v10) = -0x8000;\n
}\n
", "4223296:sub_407140": "int sub_407140(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    *(v4) = v0;\n
    return v4;\n
}\n
", "4223326:sub_40715e": null, "4223328:sub_407160": "int sub_407160(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
\n
    v0 = &v1;\n
    sub_4071d0(sub_406220(0), 0, v3, v3);\n
    v4 = sub_406200();\n
    if ((v4 & 1))\n
    {\n
        v4 = sub_4071d0(sub_406220(1));\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4223440:sub_4071d0": "int sub_4071d0(unsigned int *v6)\n
{\n
    struct struct_0 **<0x4071d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    unsigned int v7;  // [bp+0x8]\n
    unsigned int v8;  // ecx\n
\n
    v4 = &<0x4071d0[is_2]|Stack bp, 1 B>;\n
    v2 = v8;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= sub_4052d0())\n
            break;\n
        v0 = v6;\n
        v5 = v3;\n
        v4 = sub_406280(v5);\n
        v4 = v3;\n
        v5 = sub_4052f0(v5);\n
        sub_4062d0(v6, v7);\n
        v3 += 1;\n
    }\n
    return v1;\n
}\n
", "4223584:sub_407260": "int sub_407260(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = v3;\n
    return v0;\n
}\n
", "4223609:sub_407279": null, "4223616:sub_407280": "int sub_407280(unsigned int v4)\n
{\n
    char v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int *v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_406200();\n
    if ((v5 & 1))\n
    {\n
        sub_405ad0(&v1, *(v6));\n
        sub_407330(sub_406220(0));\n
        sub_405b20(&v0, *(v6));\n
        v5 = sub_407330(sub_406220(1));\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4223786:sub_40732a": null, "4223792:sub_407330": "int sub_407330(unsigned int *v7, unsigned int a0)\n
{\n
    struct struct_0 **<0x407330[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    struct struct_0 **v5;  // [bp-0x4]\n
    struct struct_0 **v6;  // [bp+0x0]\n
    unsigned int v8;  // ecx\n
\n
    v5 = &<0x407330[is_2]|Stack bp, 1 B>;\n
    v4 = a0;\n
    v3 = v8;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v1 = v2;\n
        if (v1 >= sub_4052d0())\n
            break;\n
        v0 = v7;\n
        v6 = v2;\n
        v5 = sub_406280(v6);\n
        v5 = v2;\n
        v6 = sub_4052f0(v6);\n
        sub_4062d0(v7, a0);\n
        v2 = v2 + 1;\n
    }\n
    return v1;\n
}\n
", "4223936:sub_4073c0": "int sub_4073c0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = v3;\n
    return v0;\n
}\n
", "4223961:sub_4073d9": null, "4223968:sub_4073e0": "int sub_4073e0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
\n
    v0 = &v1;\n
    sub_407450(sub_406220(0), 0, v3, v3);\n
    v4 = sub_406200();\n
    if ((v4 & 1))\n
    {\n
        v4 = sub_407450(sub_406220(1));\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4224080:sub_407450": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407450(unsigned int v8)\n
{\n
    int <0x407450[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x48]\n
    int tmp_4;  // tmp #4\n
    int tmp_13;  // tmp #13\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    struct_0 *v6;  // [bp-0x4]\n
    unsigned int *v7;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp+0x8]\n
    unsigned int v10;  // [bp+0xc]\n
    unsigned int v11;  // [bp+0x10]\n
    unsigned int v12;  // [bp+0x14]\n
    unsigned int v13;  // [bp+0x18]\n
    unsigned int *v14;  // [bp+0x1c], Other Possible Types: char\n
    unsigned int v15;  // [bp+0x20]\n
    unsigned int v16;  // [bp+0x24]\n
    char v17;  // [bp+0x28]\n
    void* v18;  // [bp+0x2c]\n
    unsigned int v19;  // [bp+0x30]\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int *v23;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int *v29;  // eax\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // eax\n
\n
    v6 = &<0x407450[is_2]|Stack bp, 1 B>;\n
    v5 = v20;\n
    v3 = v5;\n
    v0 = &v4;\n
    v1 = -50;\n
    v2 = 100;\n
    sub_407640();\n
    v21 = *(*(&v14));\n
    tmp_4 = v21;\n
    v22 = v21 * 4;\n
    if (([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t4, 0x4<32>, 0x0<32>) & 1))\n
        v22 = -1;\n
    v7 = v22;\n
    v19 = sub_409eb0();\n
    v7 = v19;\n
    v8 = 0;\n
    v9 = *(*(&v14)) * 4;\n
    sub_403130(v8, v9, v10);\n
    v18 = 0;\n
    while (true)\n
    {\n
        v13 = v18;\n
        if (v13 >= sub_4052d0())\n
            break;\n
        v12 = v19;\n
        v7 = *((v12 + ((0 CONCAT v18) /m *(*(&v14)) >> 32) * 4));\n
        v23 = sub_4052f0(v7);\n
        v14 = v23;\n
        v15 = v23 >> 31;\n
        v6 = *(&v17);\n
        v26 = sub_406280(v7);\n
        v27 = v26;\n
        v29 = v14;\n
        tmp_13 = v29;\n
        v15 = v15 + (v26 >> 31) + (tmp_13 + v27 < tmp_13);\n
        v14 = v29 + v27;\n
        if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, Load(addr=stack_base+32, size=4, endness=Iend_LE), Conv(1->32, (Load(addr=stack_base+28, size=4, endness=Iend_LE) < 0x80000000<32>)), Conv(1->32, (Load(addr=stack_base+28, size=4, endness=Iend_LE) < 0x80000000<32>)))))\n
        {\n
            v16 = 0;\n
            v15 = 2147483647;\n
        }\n
        else\n
        {\n
            v31 = v15;\n
            if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, Load(addr=stack_base+32, size=4, endness=Iend_LE), Conv(1->32, (Load(addr=stack_base+28, size=4, endness=Iend_LE) < 0x80000000<32>)), Conv(1->32, (Load(addr=stack_base+28, size=4, endness=Iend_LE) < 0x80000000<32>)))))\n
            {\n
                v16 = -1;\n
                v15 = 0x80000000;\n
            }\n
        }\n
        v11 = v19;\n
        *((v11 + ((0 CONCAT v18) /m *(v14) >> 32) * 4)) = v15;\n
        v7 = v18;\n
        v8 = v15;\n
        sub_4062d0(v8, v9);\n
        v16 += 1;\n
    }\n
    v32 = v19;\n
    v10 = v32;\n
    if (v32)\n
    {\n
        v7 = v10;\n
        v32 = sub_409e90();\n
    }\n
    return v32;\n
}\n
", "4224576:sub_407640": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407640()\n
{\n
    int tmp_55;  // tmp #55\n
    int tmp_57;  // tmp #57\n
    int tmp_56;  // tmp #56\n
    int tmp_65;  // tmp #65\n
    int tmp_67;  // tmp #67\n
    int tmp_66;  // tmp #66\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned long v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    struct_0 *v8;  // ebp\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    tmp_55 = DivV(tmp_57, tmp_56);\n
    *(&v2) = tmp_55;\n
    tmp_65 = DivV(tmp_67, tmp_66);\n
    *(&v2) = tmp_65;\n
    s_c =L Conv(128->64, ((0x0<64> CONCAT 0x41dfffffffc00000<64>) * Conv(64->128, Load(addr=stack_base-12, size=8, endness=Iend_LE))))<8>\n
    v0 = *(&v2);\n
    sub_405cc0(*(&v4));\n
    v8 = v3;\n
    return;\n
}\n
", "4224704:sub_4076c0": "int sub_4076c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
\n
    v0 = &v1;\n
    sub_4090d0(v3, v3);\n
    return v3;\n
}\n
", "4224732:sub_4076dc": null, "4224736:sub_4076e0": "int sub_4076e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
\n
    v0 = &v1;\n
    return sub_409170(v3);\n
}\n
", "4224756:sub_4076f4": null, "4224768:sub_407700": "int sub_407700()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
\n
    v0 = &v1;\n
    return sub_407720(v3);\n
}\n
", "4224788:sub_407714": null, "4224800:sub_407720": "extern char g_40f100;\n
extern struct_0 *g_40f518;\n
\n
int sub_407720()\n
{\n
    struct struct_0 **<0x407720[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_0 **v0;  // [bp-0x98]\n
    int tmp_16;  // tmp #16\n
    int tmp_18;  // tmp #18\n
    int tmp_17;  // tmp #17\n
    unsigned int v1;  // [bp-0x94]\n
    struct struct_0 **v2;  // [bp-0x90]\n
    unsigned int v3;  // [bp-0x8c]\n
    char v4;  // [bp-0x88]\n
    struct struct_0 **v5;  // [bp-0x84]\n
    struct struct_0 **v6;  // [bp-0x80]\n
    char v7;  // [bp-0x7c]\n
    struct struct_0 **v8;  // [bp-0x18]\n
    struct struct_0 **v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // [bp-0x10]\n
    char v11;  // [bp-0x5]\n
    struct struct_0 **v12;  // [bp-0x4]\n
    struct struct_0 **v13;  // [bp+0x0]\n
    struct struct_0 **v14;  // [bp+0x4], Other Possible Types: unsigned int\n
    struct struct_0 **v15;  // [bp+0x8], Other Possible Types: unsigned int\n
    unsigned int v16[5];  // [bp+0xc]\n
    unsigned int v17;  // [bp+0x10]\n
    char v18;  // [bp+0xa4]\n
    unsigned int v19;  // ecx\n
    int v21;  // xmm0\n
    unsigned int v22;  // ebp\n
\n
    v12 = &<0x407720[is_2]|Stack bp, 1 B>;\n
    v3 = v19;\n
    while (true)\n
    {\n
        v2 = &g_40f518;\n
        v13 = &\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\";\n
        v13 = &\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\";\n
        v14 = sub_404100(\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\");\n
        v15 = v2;\n
        sub_401b00(v14, v15, v16);\n
        v13 = &v7;\n
        v14 = 100;\n
        v15 = 10;\n
        v16[0] = &g_40f100;\n
        if (sub_4018f0(v14, v15, v16, v17) < 0)\n
        {\n
            v11 = 0;\n
            v22 = *(&v18);\n
            return;\n
        }\n
        if (v7 == 57)\n
        {\n
            v13 = &g_40f518;\n
            v14 = \"Thank you for trying out Grit! Please leave us a nice review on the app store.\\n
\";\n
            sub_4031e0(v14, v15);\n
            v11 = 1;\n
            v22 = *(&v18);\n
            return;\n
        }\n
        v5 = &v7;\n
        v13 = &v5;\n
        v14 = &\" \";\n
        v6 = sub_404350(v14, v15);\n
        v1 = v7 - 49;\n
        switch (v1)\n
        {\n
        case 0:\n
            if (!(sub_407da0() & 1))\n
            {\n
                v11 = 0;\n
                v22 = *(&v18);\n
                return;\n
            }\n
            break;\n
        case 1:\n
            if (!(sub_408300() & 1))\n
            {\n
                v11 = 0;\n
                v22 = *(&v18);\n
                return;\n
            }\n
            break;\n
        case 2:\n
            if (!(sub_4085c0() & 1))\n
            {\n
                v11 = 0;\n
                v22 = *(&v18);\n
                return;\n
            }\n
            break;\n
        case 3:\n
            sub_408860();\n
            break;\n
        case 4:\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Missing track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = v6;\n
            v14 = 0;\n
            v15 = 10;\n
            v8 = sub_4044a0(v14, v15, v16);\n
            v13 = v8;\n
            v10 = sub_409250(v14, v15);\n
            if (!v10)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Invalid track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Missing gain\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = v6;\n
            v14 = 0;\n
            v15 = 10;\n
            v8 = sub_4044a0(v14, v15, v16);\n
            if (v8 >= -1000 && v8 <= 1000)\n
            {\n
                v0 = v10;\n
                v13 = &v4;\n
                v14 = v8;\n
                v15 = 100;\n
                sub_407640(v14, v15);\n
                v13 = *(&v4);\n
                sub_408fb0(v14, v15);\n
                break;\n
            }\n
            v13 = &g_40f518;\n
            v14 = &\"Invalid gain (-10.00...10.00)\\n
\";\n
            sub_4031e0(v14, v15);\n
            continue;\n
        case 5:\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Missing track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = v6;\n
            v14 = 0;\n
            v15 = 10;\n
            v8 = sub_4044a0(v14, v15, v16);\n
            v13 = v8;\n
            v10 = sub_409250(v14, v15);\n
            if (!v10)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Invalid track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Missing pan\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = v6;\n
            v14 = 0;\n
            v15 = 10;\n
            v8 = sub_4044a0(v14, v15, v16);\n
            if (v8 >= -100 && v8 <= 100)\n
            {\n
                if (v8 == 100)\n
                {\n
                    v13 = 2147483647;\n
                }\n
                else\n
                {\n
                    tmp_16 = DivV(tmp_18, tmp_17);\n
                    v21 = tmp_16 * (0 CONCAT 0x41dfffffffc00000);\n
                    v13 = v21;\n
                }\n
                sub_408fd0();\n
                break;\n
            }\n
            v13 = &g_40f518;\n
            v14 = &\"Invalid pan (-1.00...1.00)\\n
\";\n
            sub_4031e0(v14, v15);\n
            continue;\n
        case 6:\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Missing track 1\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = v6;\n
            v14 = 0;\n
            v15 = 10;\n
            v8 = sub_4044a0(v14, v15, v16);\n
            v13 = v8;\n
            v10 = sub_409250(v14, v15);\n
            if (!v10)\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Invalid track 1\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            v13 = &v5;\n
            v14 = &\" \";\n
            v6 = sub_404350(v14, v15);\n
            if (!v6)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v13 = v6;\n
                v14 = 0;\n
                v15 = 10;\n
                v8 = sub_4044a0(v14, v15, v16);\n
                v13 = v8;\n
                v9 = sub_409250(v14, v15);\n
                if (!v9)\n
                {\n
                    v13 = &g_40f518;\n
                    v14 = &\"Invalid track 2\\n
\";\n
                    sub_4031e0(v14, v15);\n
                    continue;\n
                }\n
            }\n
            if (v9)\n
            {\n
                if (!(sub_406200() & 1) && !(sub_406200() & 1))\n
                {\n
                    v13 = &*(v10)->field_0;\n
                    v14 = *(v9);\n
                    sub_409400(*(v10));\n
LABEL_407d39:\n
                    break;\n
                }\n
                v13 = &g_40f518;\n
                v14 = &\"Cannot combine a stereo track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
            else if ((sub_406200() & 1))\n
            {\n
                v13 = &*(v10)->field_0;\n
                sub_409380();\n
                goto LABEL_407d39;\n
            }\n
            else\n
            {\n
                v13 = &g_40f518;\n
                v14 = &\"Cannot split a mono track\\n
\";\n
                sub_4031e0(v14, v15);\n
                continue;\n
            }\n
        case 7:\n
            sub_408910();\n
            break;\n
        default:\n
            v13 = &g_40f518;\n
            v14 = &\"Invalid choice\\n
\";\n
            sub_4031e0(v14, v15);\n
        }\n
    }\n
}\n
", "4226458:sub_407d9a": null, "4226464:sub_407da0": "extern unsigned int g_40f100;\n
extern unsigned int g_40f518;\n
\n
int sub_407da0()\n
{\n
    unsigned int v0;  // [bp-0xe4]\n
    char v1;  // [bp-0xdc]\n
    unsigned int v2;  // [bp-0xcc]\n
    unsigned int v3;  // [bp-0xc8]\n
    unsigned int v4;  // [bp-0xc4]\n
    unsigned int v5;  // [bp-0xc0]\n
    unsigned int v6;  // [bp-0xbc]\n
    unsigned int v7;  // [bp-0xb8]\n
    unsigned int v8;  // [bp-0xb4]\n
    unsigned int v9;  // [bp-0xb0]\n
    unsigned int v10;  // [bp-0xac]\n
    unsigned int v11[5];  // [bp-0xa8]\n
    unsigned int v12;  // [bp-0xa4]\n
    unsigned int v13;  // [bp-0xa0]\n
    unsigned int v14;  // [bp-0x9c]\n
    unsigned int v15;  // [bp-0x98]\n
    char v16[2];  // [bp-0x94], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x90]\n
    char v18;  // [bp-0x8c]\n
    char v19;  // [bp-0x21]\n
    unsigned int v20;  // [bp-0x20]\n
    unsigned int v21;  // [bp-0x1c]\n
    unsigned int v22;  // [bp-0x18]\n
    void* v23;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0x10]\n
    unsigned int v25;  // [bp-0xc]\n
    unsigned int v26;  // [bp-0x8]\n
    unsigned int v27;  // [bp-0x4]\n
    char v28;  // [bp+0x0]\n
    unsigned int v33;  // ebx\n
    unsigned int v34;  // edi\n
    unsigned int v35;  // esi\n
    unsigned int v36;  // ecx\n
\n
    v27 = &v28;\n
    v26 = v33;\n
    v25 = v34;\n
    v24 = v35;\n
    v20 = &v1;\n
    v23 = -1;\n
    v22 = sub_408f50;\n
    v21 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v21;\n
    v12 = v36;\n
    while (true)\n
    {\n
        v11[0] = &g_40f518;\n
        sub_401b00(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\", sub_404100(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\"), v11);\n
        if (sub_4018f0(&v18, 100, 10, &g_40f100) < 0)\n
        {\n
            v19 = 0;\n
            break;\n
        }\n
        if (v18 == 53)\n
        {\n
LABEL_408252:\n
            v19 = 1;\n
            break;\n
        }\n
        v17 = &v18;\n
        v16 = sub_404350(&v17, \" \");\n
        *(&v16) = sub_404350(&v17, \" \");\n
        if (!v16)\n
        {\n
            sub_4031e0(&g_40f518, \"Missing samples\\n
\");\n
            continue;\n
        }\n
        v15 = sub_4047d0(v16, NULL, 0xa);\n
        if (v15 > 2147483647)\n
        {\n
            sub_4031e0(&g_40f518, \"Invalid samples\\n
\");\n
            continue;\n
        }\n
        v10 = v18;\n
        if (v10 == 49)\n
        {\n
            v23 = -1;\n
            v8 = sub_409e40();\n
            v23 = 0;\n
            v9 = sub_404c10(v15);\n
            sub_405460(v9);\n
            v13 = v8;\n
            v23 = -1;\n
            sub_409210();\n
            goto LABEL_40824d;\n
        }\n
        else\n
        {\n
            if (v10 - 50 >= 2)\n
            {\n
                if (v10 == 52)\n
                {\n
                    v23 = -1;\n
                    v2 = sub_409e40();\n
                    v23 = 3;\n
                    v3 = sub_409660();\n
                    sub_405460(v3);\n
                    v13 = v2;\n
                    v23 = -1;\n
                    v0 = v13;\n
                    sub_409210();\n
                    goto LABEL_40824d;\n
                }\n
                else\n
                {\n
                    sub_4031e0(&g_40f518, \"Invalid choice\\n
\");\n
                    continue;\n
                }\n
            }\n
            *(&v16) = sub_404350(&v17, \" \");\n
            if (!v16)\n
            {\n
                sub_4031e0(&g_40f518, \"Missing frequency\\n
\");\n
                continue;\n
            }\n
            v14 = sub_4047d0(v16, NULL, 0xa);\n
            if (v14 >= 50000)\n
            {\n
                sub_4031e0(&g_40f518, \"Invalid frequency\\n
\");\n
            }\n
            else\n
            {\n
                v23 = -1;\n
                if (v18 == 50)\n
                {\n
                    v6 = sub_409e40();\n
                    v23 = 1;\n
                    v7 = sub_404ce0(v15, v14);\n
                    sub_405460(v7);\n
                    v13 = v6;\n
                }\n
                else\n
                {\n
                    v4 = sub_409e40();\n
                    v23 = 2;\n
                    v5 = sub_404e20(v15, v14);\n
                    sub_405460(v5);\n
                    v13 = v4;\n
                }\n
                v23 = -1;\n
                sub_409210();\n
LABEL_40824d:\n
                goto LABEL_408252;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v21;\n
    return v19 & 1;\n
}\n
", "4227699:sub_408273": null, "4227712:sub_408280": "int sub_408280()\n
{\n
    char v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4227739:sub_40829b": null, "4227744:sub_4082a0": "int sub_4082a0()\n
{\n
    char v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4227771:sub_4082bb": null, "4227776:sub_4082c0": "int sub_4082c0()\n
{\n
    char v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4227803:sub_4082db": null, "4227808:sub_4082e0": "int sub_4082e0()\n
{\n
    char v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4227835:sub_4082fb": null, "4227840:sub_408300": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40f100[6];\n
\n
int sub_408300()\n
{\n
    char <0x408300[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char v0;  // [bp-0x68]\n
    unsigned int v1[6];  // [bp-0x5c]\n
    struct struct_2 **v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned int v8;  // [bp-0x40]\n
    unsigned int v9;  // [bp-0x3c]\n
    struct struct_2 **v10;  // [bp-0x38]\n
    unsigned int v11[6];  // [bp-0x34]\n
    unsigned int v12[6];  // [bp-0x30]\n
    char v13;  // [bp-0x2c]\n
    char v14;  // [bp-0x21]\n
    unsigned int v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x18]\n
    void* v18;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x10]\n
    unsigned int v20;  // [bp-0xc]\n
    unsigned int v21;  // [bp-0x8]\n
    struct_0 *v22;  // [bp-0x4]\n
    unsigned int v23[6];  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp+0x4]\n
    unsigned int v25;  // [bp+0x8]\n
    unsigned int v26;  // [bp+0xc]\n
    unsigned int v30;  // ebx\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // ecx\n
\n
    v22 = &<0x408300[is_2]|Stack bp, 1 B>;\n
    v21 = v30;\n
    v20 = v31;\n
    v19 = v32;\n
    v15 = &v0;\n
    v18 = -1;\n
    v17 = sub_408f70;\n
    v16 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v16;\n
    v8 = v33;\n
    if (sub_401660(&v13, 4, &g_40f100[0]) != 4)\n
    {\n
        v14 = 0;\n
    }\n
    else if (*(&v13) >= 2147483647)\n
    {\n
LABEL_40837d:\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        if (*(&v13) <= 24)\n
            goto LABEL_40837d;\n
        v12[0] = sub_409eb0();\n
        if (sub_401660(v12, *(&v13), &g_40f100[0]) != *(&v13))\n
        {\n
            v14 = 0;\n
        }\n
        else\n
        {\n
            v11[0] = v12;\n
            if (v11[0] == 778138980 && v11[1] == 24 && v11[2] < 2147483647 && v11[4] == 8000)\n
            {\n
                v10 = sub_405cf0(v11[3]);\n
                if (v10)\n
                {\n
                    if (v11[5] != 1)\n
                    {\n
                        v4 = sub_409e40();\n
                        v18 = 1;\n
                        v5 = sub_404c10(v11[2]);\n
                        v3 = sub_404c10(v11[2]);\n
                        sub_405490(v3, v5);\n
                        v9 = v4;\n
                    }\n
                    else\n
                    {\n
                        v6 = sub_409e40();\n
                        v18 = 0;\n
                        v7 = sub_404c10(v11[2]);\n
                        sub_405460(v7);\n
                        v9 = v6;\n
                    }\n
                    v18 = -1;\n
                    v23 = v9;\n
                    v24 = v12 + 1;\n
                    *(v10)->field_10(v23);\n
                    v21 = v9;\n
                    sub_409210(v24, v25, v26);\n
                    v2 = v10;\n
                    if (v2)\n
                    {\n
                        v23 = 1;\n
                        *(v2)->field_0();\n
                    }\n
                }\n
            }\n
            v1[0] = v12;\n
            if (v1)\n
            {\n
                v23[0] = v1;\n
                sub_409e90();\n
            }\n
            v14 = 1;\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v16;\n
    return v14 & 1;\n
}\n
", "4228479:sub_40857f": null, "4228480:sub_408580": "int sub_408580()\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4228504:sub_408598": null, "4228512:sub_4085a0": "int sub_4085a0()\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4228536:sub_4085b8": null, "4228544:sub_4085c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40f100;\n
extern unsigned int g_40f518;\n
\n
int sub_4085c0()\n
{\n
    char v0;  // [bp-0xc0]\n
    struct_0 *v1;  // [bp-0xb0]\n
    struct_0 *v2;  // [bp-0xac]\n
    struct_0 *v3;  // [bp-0xa8]\n
    unsigned int v4;  // [bp-0xa4]\n
    unsigned int v5[5];  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    void* v7;  // [bp-0x98]\n
    void* v8;  // [bp-0x94]\n
    void* v9;  // [bp-0x90]\n
    char v10;  // [bp-0x8c]\n
    char v11;  // [bp-0x21]\n
    unsigned int v12;  // [bp-0x20]\n
    unsigned int v13;  // [bp-0x1c]\n
    unsigned int v14;  // [bp-0x18]\n
    void* v15;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x10]\n
    unsigned int v17;  // [bp-0xc]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v19;  // [bp-0x4]\n
    char v20;  // [bp+0x0]\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // esi\n
    unsigned int v28;  // ecx\n
\n
    v19 = &v20;\n
    v18 = v25;\n
    v17 = v26;\n
    v16 = v27;\n
    v12 = &v0;\n
    v15 = -1;\n
    v14 = sub_408f90;\n
    v13 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v13;\n
    v6 = v28;\n
    while (true)\n
    {\n
        v5[0] = &g_40f518;\n
        sub_401b00(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\", sub_404100(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\"), v5);\n
        if (sub_4018f0(&v10, 100, 10, &g_40f100) < 0)\n
        {\n
            v11 = 0;\n
            break;\n
        }\n
        if (v10 == 52)\n
        {\n
LABEL_4087d5:\n
            v11 = 1;\n
            break;\n
        }\n
        v4 = v10;\n
        if (v4 == 49)\n
        {\n
            v9 = 0;\n
            v3 = &v9;\n
            sub_405de0();\n
            v15 = 0;\n
            sub_408e10();\n
            sub_405f00();\n
            goto LABEL_4087d0;\n
        }\n
        if (v4 == 50)\n
        {\n
            v8 = 0;\n
            v2 = &v8;\n
            sub_405e10();\n
            v15 = 1;\n
            sub_408e10();\n
            sub_405f70();\n
            goto LABEL_4087d0;\n
        }\n
        else if (v4 != 51)\n
        {\n
            sub_4031e0(&g_40f518, \"Invalid choice\\n
\");\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            v1 = &v7;\n
            sub_405e40();\n
            v15 = 2;\n
            sub_408e10();\n
            sub_405fe0();\n
LABEL_4087d0:\n
            goto LABEL_4087d5;\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v13;\n
    return v11 & 1;\n
}\n
", "4229110:sub_4087f6": null, "4229120:sub_408800": "int sub_408800()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405f00();\n
}\n
", "4229143:sub_408817": null, "4229152:sub_408820": "int sub_408820()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405f70();\n
}\n
", "4229175:sub_408837": null, "4229184:sub_408840": "int sub_408840()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405fe0();\n
}\n
", "4229207:sub_408857": null, "4229216:sub_408860": "extern unsigned int g_40f518;\n
\n
int sub_408860()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v8;  // [bp+0x4]\n
    unsigned int v9;  // [bp+0x8]\n
    unsigned int v10;  // [bp+0xc]\n
    unsigned int v11;  // [bp+0x10]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ebx\n
\n
    v6 = &v7;\n
    v5 = v12;\n
    v4 = v13;\n
    v3 = v14;\n
    sub_408ff0();\n
    while (true)\n
    {\n
        v15 = sub_409020();\n
        *(&v15) = v15 ^ 255;\n
        if (!(*(&v15) & 1))\n
            break;\n
        v2 = sub_409040();\n
        v1 = sub_405a40();\n
        v0 = v1;\n
        sub_4031e0(&g_40f518, \"%d) %s samples=%d\\n
\");\n
        sub_409060(v8, v9, v10, v11);\n
    }\n
    v17 = v16;\n
    v18 = v3;\n
    v19 = v4;\n
    return v15;\n
}\n
", "4229383:sub_408907": null, "4229392:sub_408910": "extern char g_40f100;\n
extern struct_0 *g_40f518;\n
\n
int sub_408910()\n
{\n
    struct struct_0 **<0x408910[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    int tmp_13;  // tmp #13\n
    int tmp_15;  // tmp #15\n
    int tmp_14;  // tmp #14\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0xa0]\n
    struct struct_0 **v2;  // [bp-0x9c]\n
    unsigned int v3;  // [bp-0x98]\n
    char v4;  // [bp-0x88]\n
    unsigned int v5;  // [bp-0x80]\n
    struct struct_0 **v6;  // [bp-0x7c]\n
    struct struct_0 **v7;  // [bp-0x78]\n
    struct struct_0 **v8;  // [bp-0x74]\n
    char v9;  // [bp-0x70]\n
    char v10;  // [bp-0x5]\n
    struct struct_0 **v11;  // [bp-0x4], Other Possible Types: unsigned int\n
    struct struct_0 **v12;  // [bp+0x0], Other Possible Types: unsigned int\n
    char **v13;  // [bp+0x4], Other Possible Types: unsigned int, void*, struct struct_0 **\n
    struct struct_0 **v14;  // [bp+0x8], Other Possible Types: unsigned int\n
    unsigned int v15[5];  // [bp+0xc]\n
    unsigned int v16;  // [bp+0x10]\n
    char v17;  // [bp+0xb0]\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // eax\n
    int v21;  // xmm0\n
    unsigned int v22;  // ebp\n
\n
    v11 = &<0x408910[is_2]|Stack bp, 1 B>;\n
    v3 = v18;\n
    while (true)\n
    {\n
        v2 = &g_40f518;\n
        v12 = &\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\";\n
        v12 = &\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\";\n
        v13 = sub_404100(\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\");\n
        v14 = v2;\n
        sub_401b00(v13, v14, v15);\n
        v12 = &v9;\n
        v13 = 100;\n
        v14 = 10;\n
        v15[0] = &g_40f100;\n
        if (sub_4018f0(v13, v14, v15, v16) < 0)\n
        {\n
            v10 = 0;\n
            v22 = *(&v17);\n
            return;\n
        }\n
        if (v9 == 53)\n
            break;\n
        v8 = &v9;\n
        v12 = &v8;\n
        v13 = &\" \";\n
        v7 = sub_404350(v13, v14);\n
        v12 = &v8;\n
        v13 = &\" \";\n
        v7 = sub_404350(v13, v14);\n
        if (!v7)\n
        {\n
            v12 = &g_40f518;\n
            v13 = \"Missing track\\n
\";\n
            sub_4031e0(v13, v14);\n
            continue;\n
        }\n
        v12 = v7;\n
        v13 = 0;\n
        v14 = 10;\n
        v6 = sub_4044a0(v13, v14, v15);\n
        v12 = v6;\n
        v5 = sub_409250(v13, v14);\n
        if (!v5)\n
        {\n
            v12 = &g_40f518;\n
            v13 = \"Invalid track\\n
\";\n
            sub_4031e0(v13, v14);\n
        }\n
        else\n
        {\n
            v1 = v9 - 49;\n
            switch (v1)\n
            {\n
            case 0:\n
                v12 = &v8;\n
                v13 = &\" \";\n
                v7 = sub_404350(v13, v14);\n
                if (!v7)\n
                {\n
                    v12 = &g_40f518;\n
                    v13 = \"Missing gain\\n
\";\n
                    sub_4031e0(v13, v14);\n
                    continue;\n
                }\n
                v12 = v7;\n
                v13 = 0;\n
                v14 = 10;\n
                v6 = sub_4044a0(v13, v14, v15);\n
                if (v6 >= -1000 && v6 <= 1000)\n
                {\n
                    v12 = &v4;\n
                    v13 = v6;\n
                    v14 = 100;\n
                    sub_407640(v13, v14);\n
                    v12 = *(&v4);\n
                    sub_407140(v12);\n
                    v11 = v5;\n
                    sub_407160(v12);\n
                    break;\n
                }\n
                v12 = &g_40f518;\n
                v13 = \"Invalid gain (-10.00...10.00)\\n
\";\n
                sub_4031e0(v13, v14);\n
                continue;\n
            case 1:\n
                v12 = &v8;\n
                v13 = &\" \";\n
                v7 = sub_404350(v13, v14);\n
                if (!v7)\n
                {\n
                    v12 = &g_40f518;\n
                    v13 = \"Missing pan\\n
\";\n
                    sub_4031e0(v13, v14);\n
                    continue;\n
                }\n
                v12 = v7;\n
                v13 = 0;\n
                v14 = 10;\n
                v6 = sub_4044a0(v13, v14, v15);\n
                if (v6 >= -100 && v6 <= 100)\n
                {\n
                    if (v6 == 100)\n
                    {\n
                        v12 = 2147483647;\n
                        sub_407260(2147483647);\n
                        v11 = v5;\n
                        sub_407280(2147483647);\n
                    }\n
                    else\n
                    {\n
                        tmp_13 = DivV(tmp_15, tmp_14);\n
                        v21 = tmp_13 * (0 CONCAT 0x41dfffffffc00000);\n
                        v12 = v21;\n
                        sub_407260(v12);\n
                        v11 = v5;\n
                        sub_407280(v12);\n
                    }\n
                    break;\n
                }\n
                v12 = &g_40f518;\n
                v13 = \"Invalid pan (-1.00...1.00)\\n
\";\n
                sub_4031e0(v13, v14);\n
                continue;\n
            case 2:\n
                v12 = &v8;\n
                v13 = &\" \";\n
                v7 = sub_404350(v13, v14);\n
                if (!v7)\n
                {\n
                    v12 = &g_40f518;\n
                    v13 = \"Missing delay\\n
\";\n
                    sub_4031e0(v13, v14);\n
                    continue;\n
                }\n
                else\n
                {\n
                    v12 = v7;\n
                    v13 = 0;\n
                    v14 = 10;\n
                    v6 = sub_4044a0(v13, v14, v15);\n
                    if (v6 > 0)\n
                    {\n
                        v12 = v6;\n
                        sub_4073c0(v12);\n
                        v11 = v5;\n
                        sub_4073e0(v12);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v12 = &g_40f518;\n
                        v13 = \"Invalid delay (>0)\\n
\";\n
                        sub_4031e0(v13, v14);\n
                        continue;\n
                    }\n
                }\n
            case 3:\n
                v12 = &v8;\n
                v13 = &\" \";\n
                v7 = sub_404350(v13, v14);\n
                if (!v7)\n
                {\n
                    v12 = &g_40f518;\n
                    v13 = \"Missing samples\\n
\";\n
                    sub_4031e0(v13, v14);\n
                    continue;\n
                }\n
                else\n
                {\n
                    v12 = v7;\n
                    v13 = 0;\n
                    v14 = 10;\n
                    v6 = sub_4044a0(v13, v14, v15);\n
                    if (v6 > 0)\n
                    {\n
                        v0 = v5;\n
                        v19 = sub_405a40();\n
                        v12 = v19 + v6;\n
                        sub_405670(v19 + v6);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v12 = &g_40f518;\n
                        v13 = \"Invalid samples (>0)\\n
\";\n
                        sub_4031e0(v13, v14);\n
                        continue;\n
                    }\n
                }\n
                goto LABEL_408dfa;\n
            default:\n
                v12 = &g_40f518;\n
                v13 = \"Invalid choice\\n
\";\n
                sub_4031e0(v13, v14);\n
                continue;\n
            }\n
        }\n
    }\n
LABEL_408dfa:\n
    v10 = 1;\n
    v22 = *(&v17);\n
    return;\n
}\n
", "4230670:sub_408e0e": null, "4230672:sub_408e10": "extern unsigned int g_40f518[5];\n
\n
int sub_408e10(struct struct_1 **v11)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2[6];  // [bp-0x20]\n
    unsigned int v3[6];  // [bp-0x1c]\n
    unsigned int v4[6];  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // eax\n
\n
    v9 = &v10;\n
    v8 = v12;\n
    v7 = v13;\n
    v6 = sub_409520();\n
    v0 = v6;\n
    v5 = *(v11)->field_8() + 24;\n
    v4[0] = sub_409eb0(v5);\n
    v3[0] = v4;\n
    strncpy(v3, \"dua.\", 4);\n
    v3[1] = 24;\n
    v3[2] = sub_405a40();\n
    v3[3] = *(v11)->field_4();\n
    v3[4] = 8000;\n
    v3[5] = ((sub_406200() & 1) ? 1 : 2);\n
    v0 = v4 + 1;\n
    *(v11)->field_c();\n
    sub_401b00(&v5, 4, &g_40f518[0]);\n
    sub_401b00(v4, v5, &g_40f518[0]);\n
    v2[0] = v4;\n
    if (v2)\n
        sub_409e90();\n
    v15 = v6;\n
    v1 = v15;\n
    if (v15)\n
    {\n
        sub_4055d0();\n
        v15 = sub_409e90();\n
        return v15;\n
    }\n
    return v6;\n
}\n
", "4230982:sub_408f46": null, "4230992:sub_408f50": "int sub_408f50(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4231018:sub_408f6a": null, "4231024:sub_408f70": "int sub_408f70(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4231050:sub_408f8a": null, "4231056:sub_408f90": "int sub_408f90(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4231088:sub_408fb0": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_408fb0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    v4->field_10 = v0;\n
    return v4;\n
}\n
", "4231120:sub_408fd0": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_408fd0(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    v0->field_14 = v3;\n
    return v0;\n
}\n
", "4231152:sub_408ff0": "int sub_408ff0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    sub_409080(v0, v0, v4);\n
    return v0;\n
}\n
", "4231200:sub_409020": "int sub_409020()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return !*(v0);\n
}\n
", "4231232:sub_409040": "int sub_409040()\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // eax\n
    struct struct_0 **v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    return *(v0)->field_8;\n
}\n
", "4231264:sub_409060": "int sub_409060()\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // eax\n
    struct struct_0 **v5;  // ecx\n
    struct struct_0 **v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    v6 = v0;\n
    *(v6) = *(v6)->field_0;\n
    return v0;\n
}\n
", "4231296:sub_409080": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_409080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    sub_4090b0(v4->field_4, v0, v4);\n
    return v0;\n
}\n
", "4231344:sub_4090b0": "int sub_4090b0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v5;\n
    *(v0) = v3;\n
    return v0;\n
}\n
", "4231376:sub_4090d0": "int sub_4090d0()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    unsigned int *v12;  // ecx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // ebx\n
\n
    v7 = &v8;\n
    v6 = v10;\n
    v5 = v11;\n
    v3 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v3;\n
    *(v12) = 0;\n
    v2 = v12 + 1;\n
    sub_409760(sub_409730, v2, v12, v12, &v1, v3, sub_4096f0, -1, v11, v10, v13);\n
    v4 = 0;\n
    sub_409bb0(*(&v0), sub_409730, v2, v12, v12, &v1, v3, sub_4096f0, 0, v11, v10, v13);\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v3;\n
    v14 = v4;\n
    v15 = v5;\n
    v16 = v6;\n
    return v12;\n
}\n
", "4231504:sub_409150": "int sub_409150()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebp\n
\n
    v0 = &v1;\n
    sub_409790(v3);\n
    v4 = v0;\n
    return;\n
}\n
", "4231522:sub_409162": null, "4231536:sub_409170": "int sub_409170()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ecx\n
\n
    v0 = &v1;\n
    return sub_409790(v3);\n
}\n
", "4231559:sub_409187": null, "4231568:sub_409190": "int sub_409190()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v3 = v7;\n
    v2 = 0;\n
    sub_409080(&v1);\n
    while (((sub_409020() ^ 255) & 1))\n
    {\n
        sub_409040();\n
        v0 = sub_405a40();\n
        if (v0 > v2)\n
            v2 = v0;\n
        sub_409060();\n
    }\n
    return v2;\n
}\n
", "4231689:sub_409209": null, "4231696:sub_409210": "int sub_409210(unsigned int *v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
    unsigned int *v5;  // ecx\n
    unsigned int v6;  // edx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = v0;\n
    v6 = *(v5);\n
    *(v5) = v6 + 1;\n
    *(v3) = v6;\n
    return sub_409860(v3, v0);\n
}\n
", "4231746:sub_409242": null, "4231760:sub_409250": "int sub_409250(unsigned int v6)\n
{\n
    unsigned int *v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ecx\n
\n
    v4 = &v5;\n
    v2 = v7;\n
    sub_409080(&v1);\n
    while (true)\n
    {\n
        if (((sub_409020() ^ 255) & 1))\n
        {\n
            v0 = sub_409040();\n
            if (*(v0) == v6)\n
            {\n
                v3 = v0;\n
                return v3;\n
            }\n
            sub_409060();\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4231886:sub_4092ce": null, "4231888:sub_4092d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4092d0(unsigned int v8)\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int *v4;  // [bp-0x10]\n
    char v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // ecx\n
    unsigned int *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v6 = &v7;\n
    v3 = v9;\n
    sub_409080(&v5);\n
    while (true)\n
    {\n
        v10 = sub_409020();\n
        *(&v10) = v10 ^ 255;\n
        if (!(*(&v10) & 1))\n
            return v10;\n
        v4 = sub_409040();\n
        if (*(v4) == v8)\n
            break;\n
        sub_409060();\n
    }\n
    v1 = &v5;\n
    sub_4098d0();\n
    v10 = v4;\n
    v2 = v10;\n
    if (v10)\n
    {\n
        sub_4055d0();\n
        v0 = v2;\n
        v10 = sub_409e90();\n
    }\n
    return v10;\n
}\n
", "4232055:sub_409377": null, "4232064:sub_409380": "int sub_409380(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
\n
    v3 = &v4;\n
    v0 = v6;\n
    v1 = sub_409250(v5);\n
    if (v1 && (sub_406200() & 1))\n
    {\n
        v1 = sub_409950();\n
        sub_409210(v1);\n
        v2 = 1;\n
        return v2 & 1;\n
    }\n
    v2 = 0;\n
    return v2 & 1;\n
}\n
", "4232181:sub_4093f5": null, "4232192:sub_409400": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409400(unsigned int v8, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // ecx\n
\n
    v6 = &v7;\n
    v1 = v9;\n
    v4 = sub_409250(v8);\n
    if (v4 && !(sub_406200() & 1))\n
    {\n
        sub_409080(&v2);\n
        while (true)\n
        {\n
            if (!((sub_409020() ^ 255) & 1))\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v3 = sub_409040();\n
            if (*(v3) == a0)\n
                break;\n
            sub_409060();\n
        }\n
        if ((sub_406200() & 1))\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        else if ((sub_4058e0(v3) & 1))\n
        {\n
            v0 = &v2;\n
            sub_4098d0();\n
            v5 = 1;\n
            return v5 & 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
    }\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4232468:sub_409514": null, "4232480:sub_409520": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409520()\n
{\n
    char <0x409520[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char v0;  // [bp-0x4c]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    char v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    void* v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    struct_0 *v16;  // [bp-0x4]\n
    unsigned int v17;  // [bp+0x0]\n
    char v19;  // [bp+0x3c]\n
    char v20;  // [bp+0x40]\n
    char v21;  // [bp+0x44]\n
    unsigned int v22;  // ebx\n
    unsigned int v23;  // edi\n
    unsigned int v24;  // esi\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // esi\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // ebx\n
\n
    v16 = &<0x409520[is_2]|Stack bp, 1 B>;\n
    v15 = v22;\n
    v14 = v23;\n
    v13 = v24;\n
    v9 = &v0;\n
    v12 = -1;\n
    v11 = sub_409710;\n
    v10 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v10;\n
    v2 = v25;\n
    v8 = sub_409190();\n
    v3 = sub_409e40();\n
    v12 = 0;\n
    v4 = sub_404c10(v8);\n
    v1 = sub_404c10(v8);\n
    sub_405490(v1, v4);\n
    v7 = v3;\n
    v12 = -1;\n
    sub_409080(&v6);\n
    while (((sub_409020() ^ 255) & 1))\n
    {\n
        v5 = sub_409040();\n
        v17 = v5;\n
        sub_4056c0(v5);\n
        sub_409060();\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v10;\n
    v26 = *(&v19);\n
    v27 = *(&v20);\n
    v28 = *(&v21);\n
    return v7;\n
}\n
", "4232754:sub_409632": null, "4232768:sub_409640": "int sub_409640()\n
{\n
    char v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v0);\n
    sub_409e90();\n
    v5 = v2;\n
    return;\n
}\n
", "4232792:sub_409658": null, "4232800:sub_409660": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409660(unsigned int *v7)\n
{\n
    char <0x409660[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x0]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // ecx\n
\n
    v5 = &<0x409660[is_2]|Stack bp, 1 B>;\n
    v2 = v9;\n
    v0 = 0x1000;\n
    sub_409bd0(0x4347c000);\n
    v4 = sub_404c10(v7);\n
    for (v3 = 0; v3 < v7; v3 += 1)\n
    {\n
        v1 = v4;\n
        v6 = v3;\n
        v7 = sub_409d10() >> 1;\n
        sub_4062d0(v7, v8);\n
    }\n
    return v4;\n
}\n
", "4232942:sub_4096ee": null, "4232944:sub_4096f0": "int sub_4096f0(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4232970:sub_40970a": null, "4232976:sub_409710": "int sub_409710(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4233008:sub_409730": "int sub_409730(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v5 = v4;\n
    v1 = v5;\n
    if (v5)\n
    {\n
        sub_4055d0();\n
        v0 = v1;\n
        v5 = sub_409e90();\n
        return v5;\n
    }\n
    return v4;\n
}\n
", "4233056:sub_409760": "int sub_409760(unsigned int v3)\n
{\n
    unsigned int v0[4];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[4];  // eax\n
    unsigned int v5[4];  // ecx\n
    unsigned int v6[4];  // eax\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v5;\n
    v6 = v0;\n
    v6[0] = v3;\n
    v6[1] = 0;\n
    v6[2] = 0;\n
    v6[3] = 0;\n
    return v0;\n
}\n
", "4233104:sub_409790": "int sub_409790()\n
{\n
    struct struct_0 **<0x409790[is_5]|Stack bp-0x38, 1 B>;  // [bp-0x38]\n
    struct struct_0 **v0;  // [bp-0x38]\n
    struct struct_0 **v1;  // [bp-0x34]\n
    struct struct_0 **v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0x28]\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    struct struct_0 *v11[2];  // ecx\n
\n
    v8 = &v9;\n
    v4 = &<0x409790[is_5]|Stack bp-0x38, 1 B>;\n
    v7 = -1;\n
    v6 = sub_409b70;\n
    v5 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v5;\n
    for (v2 = &v11[1]->field_0; v2; v2 = v3)\n
    {\n
        v3 = &*(v2)->field_0;\n
        if (v11[0])\n
        {\n
            v7 = 0;\n
            v0 = &v2[2]->field_0;\n
            v11[0]();\n
        }\n
        v1 = v2;\n
        if (v1)\n
        {\n
            v0 = v1;\n
            sub_409e90();\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v5;\n
    return v5;\n
}\n
", "4233284:sub_409844": null, "4233296:sub_409850": "int sub_409850()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    __std_terminate(v3);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4233306\n
}\n
", "4233312:sub_409860": "int sub_409860(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[4];  // ecx\n
\n
    v3 = &v4;\n
    v0 = 12;\n
    v1 = sub_409e40();\n
    v0 = v5;\n
    sub_409a20();\n
    v2 = v1;\n
    v0 = v2;\n
    sub_409a50(v6[2]);\n
    v6[3] = v6[3] + 1;\n
    return v6;\n
}\n
", "4233424:sub_4098d0": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4098d0(unsigned int *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v8;  // ecx\n
\n
    v4 = &v5;\n
    v7 = sub_409020();\n
    if ((v7 & 1))\n
        return v7;\n
    v3 = *(v6);\n
    sub_409060();\n
    v1 = v3;\n
    sub_409ae0();\n
    v2 = v3;\n
    if (v2)\n
    {\n
        v0 = v2;\n
        sub_409e90();\n
    }\n
    v8->field_c = v8->field_c - 1;\n
    return v8;\n
}\n
", "4233552:sub_409950": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_409950()\n
{\n
    char v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    struct_0 *v19;  // ecx\n
\n
    v10 = &v11;\n
    v9 = v16;\n
    v8 = v17;\n
    v7 = v18;\n
    v3 = &v0;\n
    v6 = -1;\n
    v5 = sub_409b90;\n
    v4 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v4;\n
    if (!(v19->field_4 & 1))\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v19->field_4 = 0;\n
        v1 = sub_409e40();\n
        v6 = 0;\n
        sub_405460(v19->field_c);\n
        v2 = v1;\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v4;\n
    return v2;\n
}\n
", "4233719:sub_4099f7": null, "4233728:sub_409a00": "int sub_409a00()\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ebp\n
\n
    v1 = &v2;\n
    sub_409e90(*(&v0));\n
    v4 = v1;\n
    return;\n
}\n
", "4233760:sub_409a20": "int sub_409a20(unsigned int v3)\n
{\n
    unsigned int v0[3];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[3];  // eax\n
    unsigned int v5[3];  // ecx\n
    unsigned int v6[3];  // eax\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v5;\n
    v6 = v0;\n
    v6[0] = 0;\n
    v6[1] = 0;\n
    v6[2] = v3;\n
    return v0;\n
}\n
", "4233808:sub_409a50": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_409a50(unsigned int *v2, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &v1;\n
    if (v2)\n
    {\n
        a0->field_0 = *(v2);\n
        *(v2) = a0;\n
    }\n
    else\n
    {\n
        a0->field_0 = v3->field_4;\n
        v3->field_4 = a0;\n
    }\n
    a0->field_4 = v2;\n
    if (a0->field_0)\n
        a0->field_0->field_4 = a0;\n
    v4 = v3->field_8;\n
    if (v4 == v2)\n
    {\n
        v4 = v3;\n
        v3->field_8 = &a0;\n
    }\n
    return v4;\n
}\n
", "4233952:sub_409ae0": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_409ae0(struct_1 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_1 *v3;  // ecx\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &v1;\n
    if (v2->field_0)\n
        v2->field_0->field_4 = v2->field_4;\n
    if (v2->field_4)\n
        v2->field_4->field_0 = v2->field_0;\n
    if (v2 == v3->field_4)\n
        v3->field_4 = &v2->field_0->padding_0[0];\n
    v4 = v2;\n
    if (v4 == v3->field_8)\n
    {\n
        v4 = v3;\n
        v3->field_8 = v2->field_4;\n
    }\n
    return v4;\n
}\n
", "4234096:sub_409b70": "int sub_409b70(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4234128:sub_409b90": "int sub_409b90(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4234160:sub_409bb0": "int sub_409bb0()\n
{\n
    unsigned int v0[2];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[2];  // eax\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v5;\n
    v6 = v0;\n
    v6[1] = 3735928559;\n
    v6[0] = 305419896;\n
    return v0;\n
}\n
", "4234188:sub_409bcc": null, "4234192:sub_409bd0": "int sub_409bd0(unsigned int v11, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x2c]\n
    unsigned int v2[2];  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    char *v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14]\n
    unsigned int v8[2];  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12[2];  // ecx\n
    char *v13;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15[2];  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // edx\n
    char *v24;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = &v10;\n
    v8[0] = v12;\n
    v2[0] = v8;\n
    v0 = a0 + 3 & -0x4;\n
    v7 = sub_409eb0();\n
    for (v6 = 0; v6 < a0; v6 += 1)\n
    {\n
        v7[v6] = *((v11 + v6)) ^ 85;\n
    }\n
    for (v5 = 1; v5 < a0; v5 += 1)\n
    {\n
        v13 = v7;\n
        v14 = v5;\n
        v13[v14] = v13[v14] ^ (*((v7 + v5 + 1)) >> 1);\n
    }\n
    for (v4 = 0; v4 < a0; v4 += 4)\n
    {\n
        v15 = v2;\n
        v3 = *(&v7[v4]);\n
        v16 = v15[0];\n
        v17 = v15[1];\n
        v15[1] = v17 ^ v17 / 128;\n
        v15[0] = v16 ^ ((v17 CONCAT v16) * 0x2000000 >> 32);\n
        v19 = v15[0] ^ v3 & 2004318071;\n
        v15[1] = v15[1];\n
        v15[0] = v19;\n
        v20 = v15[0];\n
        v21 = v15[1];\n
        v15[1] = v21 ^ ((v21 CONCAT v20) * 0x20000 >> 32);\n
        v15[0] = v20 ^ v20 * 0x20000;\n
    }\n
    v24 = v7;\n
    v1 = v24;\n
    if (v24)\n
    {\n
        v0 = v1;\n
        v24 = sub_409e90();\n
    }\n
    return v24;\n
}\n
", "4234509:sub_409d0d": null, "4234512:sub_409d10": "int sub_409d10()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
\n
    v2 = &v3;\n
    v1[0] = v5;\n
    v6 = v1;\n
    v0 = (v6[1] CONCAT v6[0]) * 0x4000000 >> 32;\n
    v7 = v6[0];\n
    v8 = v6[1];\n
    v6[1] = v8 ^ v8 / 128;\n
    v6[0] = v7 ^ ((v8 CONCAT v7) * 0x2000000 >> 32);\n
    v10 = v6[0];\n
    v11 = v6[1];\n
    v6[1] = v11 ^ ((v11 CONCAT v10) * 0x20000 >> 32);\n
    v6[0] = v10 ^ v10 * 0x20000;\n
    return v0;\n
}\n
", "4234608:sub_409d70": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409d70(unsigned int v11, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    char v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28]\n
    struct struct_0 **v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v0 = &v9;\n
    v5 = &v0;\n
    v8 = -1;\n
    v7 = sub_409e20;\n
    v6 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v6;\n
    v4 = 0;\n
    v11 = 0x4347c000;\n
    v3 = v11;\n
    v1 = &v2;\n
    sub_4076c0();\n
    v8 = 0;\n
    sub_407700();\n
    v4 = 0;\n
    sub_4076e0();\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v6;\n
    return v4;\n
}\n
", "4234755:sub_409e03": null, "4234768:sub_409e10": "int sub_409e10()\n
{\n
    char v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // ebp\n
\n
    v1 = &v2;\n
    v4 = &v0;\n
    sub_4076e0();\n
    v5 = v1;\n
    return;\n
}\n
", "4234784:sub_409e20": "int sub_409e20(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
}\n
", "4234816:sub_409e40": "int sub_409e40(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    while (true)\n
    {\n
        v0 = malloc(v3, v0);\n
        if (v0)\n
            break;\n
        if (!_callnewh())\n
        {\n
            if (v3 == -1)\n
                sub_40a1b0();\n
            else\n
                sub_40a180();\n
        }\n
    }\n
    return v0;\n
}\n
", "4234896:sub_409e90": "int sub_409e90(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _free_dbg(v2, -1);\n
}\n
", "4234928:sub_409eb0": "int sub_409eb0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409e40(v2);\n
}\n
", "4234960:sub_409ed0": "int sub_409ed0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409e90(v2);\n
}\n
", "4234992:sub_409ef0": "extern char g_40d908;\n
\n
int sub_409ef0(unsigned int v3)\n
{\n
    unsigned int v0[2];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[2];  // ecx\n
    unsigned int v5[2];  // edx\n
\n
    v1 = &v2;\n
    v0[0] = v4;\n
    v0[0] = v4;\n
    v0[0] = &g_40d908;\n
    v5 = &v0[1];\n
    v5[0] = 0;\n
    v5[1] = 0;\n
    v0[1] = v3;\n
    return v0;\n
}\n
", "4235040:sub_409f20": "extern char g_40d908;\n
\n
int sub_409f20(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
    unsigned int v4[2];  // edx\n
\n
    v0 = &v1;\n
    *(v3) = &g_40d908;\n
    v4 = v3 + 1;\n
    v4[0] = 0;\n
    v4[1] = 0;\n
    __std_exception_copy(v2 + 4, v3 + 1, v3);\n
    return v3;\n
}\n
", "4235104:sub_409f60": "extern char g_40d908;\n
\n
int sub_409f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    *(v3) = &g_40d908;\n
    return __std_exception_destroy(v3 + 1, v3);\n
}\n
", "4235152:sub_409f90": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_409f90()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // ecx\n
\n
    v1 = &v2;\n
    if (!v4->field_4)\n
    {\n
        v0 = \"Unknown exception\";\n
        return v0;\n
    }\n
    v0 = v4->field_4;\n
    return v0;\n
}\n
", "4235200:sub_409fc0": "int sub_409fc0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_409f60();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40a1e0(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4235248:sub_409ff0": "extern char g_40d928;\n
\n
int sub_409ff0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    v0 = 1;\n
    sub_409ef0(\"bad allocation\");\n
    *(v1) = &g_40d928;\n
    return v1;\n
}\n
", "4235296:sub_40a020": "extern char g_40d928;\n
\n
int sub_40a020(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // ecx\n
\n
    v2 = &v3;\n
    v0 = 1;\n
    sub_409ef0(v4);\n
    *(v5) = &g_40d928;\n
    return *(&v1);\n
}\n
", "4235344:sub_40a050": "int sub_40a050()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return sub_409f60();\n
}\n
", "4235376:sub_40a070": "extern char g_40d928;\n
\n
int sub_40a070(unsigned int v3)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    sub_409f20(v3);\n
    *(v4) = &g_40d928;\n
    return *(&v0);\n
}\n
", "4235424:sub_40a0a0": "int sub_40a0a0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40a050();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40a1e0(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4235472:sub_40a0d0": "extern char g_40d944;\n
\n
int sub_40a0d0()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    sub_40a020(\"bad array new length\");\n
    *(v0) = &g_40d944;\n
    return v0;\n
}\n
", "4235520:sub_40a100": "int sub_40a100()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return sub_40a050();\n
}\n
", "4235552:sub_40a120": "extern char g_40d944;\n
\n
int sub_40a120(unsigned int v3)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    sub_40a070(v3);\n
    *(v4) = &g_40d944;\n
    return *(&v0);\n
}\n
", "4235600:sub_40a150": "int sub_40a150(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40a100();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40a1e0(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4235648:sub_40a180": "extern char g_40e608;\n
\n
int sub_40a180()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_409ff0();\n
    v0 = &g_40e608;\n
    return _CxxThrowException(&v1);\n
}\n
", "4235696:sub_40a1b0": "extern char g_40e65c;\n
\n
int sub_40a1b0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_40a0d0();\n
    v0 = &g_40e65c;\n
    return _CxxThrowException(&v1);\n
}\n
", "4235744:sub_40a1e0": "int sub_40a1e0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409e90(v2);\n
}\n
", "4235776:sub_40a200": "extern char g_40d968;\n
\n
int sub_40a200()\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    *(v0) = &g_40d968;\n
    return v0;\n
}\n
", "4235808:sub_40a220": "int sub_40a220(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v1 = v5;\n
    sub_40a200();\n
    if ((v4 & 1))\n
    {\n
        v0 = 12;\n
        sub_40a1e0(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4235856:sub_40a250": "int sub_40a250()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40a370();\n
    sub_40a380();\n
    sub_40a3a0();\n
    v0 = 1;\n
    if (!sub_40a970())\n
    {\n
        v0 = 7;\n
        sub_40b050();\n
    }\n
    sub_40b220();\n
    v1 = sub_40b250;\n
    sub_40a640();\n
    if (sub_40a340())\n
    {\n
        v1 = 7;\n
        sub_40b050();\n
    }\n
    sub_40ade0();\n
    if (sub_40aee0())\n
    {\n
        v1 = sub_40ad80;\n
        __setusermatherr();\n
    }\n
    sub_40ae60();\n
    sub_40ae70();\n
    sub_40ae30();\n
    v1 = sub_40add0();\n
    _configthreadlocale();\n
    if (sub_40ae20())\n
        sub_40a360();\n
    sub_40b010();\n
    if (sub_40b020())\n
    {\n
        v1 = 7;\n
        sub_40b050();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4236048:sub_40a310": "int sub_40a310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ae80();\n
    return 0;\n
}\n
", "4236064:sub_40a320": "int sub_40a320()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40b030();\n
    v0 = sub_40adc0();\n
    return _set_new_mode();\n
}\n
", "4236096:sub_40a340": "int sub_40a340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_40ad90());\n
}\n
", "4236128:sub_40a360": "int sub_40a360()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4236144:sub_40a370": "int sub_40a370()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4236160:sub_40a380": "int sub_40a380()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_40adb0());\n
}\n
", "4236192:sub_40a3a0": "int sub_40a3a0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_40ada0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4236224:sub_40a3c0": "int sub_40a3c0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_409d70(v1, v2);\n
}\n
", "4236288:sub_40a400": "extern char g_40dc50;\n
extern char g_40dc58;\n
extern char g_40dc5c;\n
extern struct_0 *g_40dc68;\n
extern char g_40e698;\n
extern unsigned int g_40fd80;\n
extern unsigned int g_411070;\n
\n
int sub_40a400()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40e698;\n
    v13 = sub_40b280;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40fd80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_40a8e0(1, g_40fd80 ^ &v16, v22, v23))\n
        sub_40b050();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_40a860();\n
    if (g_411070 == 1)\n
    {\n
        v16 = 7;\n
        sub_40b050();\n
    }\n
    else if (g_411070)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_411070 = 1;\n
        v16 = &g_40dc68;\n
        v15 = &g_40dc5c;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_40a609;\n
        }\n
        else\n
        {\n
            v16 = &g_40dc58;\n
            v15 = &g_40dc50;\n
            _initterm(*(&v17));\n
            g_411070 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_40a8b0();\n
    v8 = sub_40af10();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_40a730())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_40b2c0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_40af20();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_40a730())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_40a3c0();\n
    if (!sub_40af80())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_40a930(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_40a609:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4236703:sub_40a59f": "int sub_40a59f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4236712:sub_40a5a8": "int sub_40a5a8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4236739:sub_40a5c3": "extern char g_40a5d1;\n
\n
int sub_40a5c3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_40a5d1;\n
    if (!sub_40af80())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4236802:sub_40a602": "int sub_40a602()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4236832:sub_40a620": "int sub_40a620()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ac90();\n
    return sub_40a400();\n
}\n
", "4236848:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a620();\n
}\n
", "4236864:sub_40a640": "int sub_40a640(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_40a670(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4236912:sub_40a670": "extern unsigned int g_41107c;\n
\n
int sub_40a670(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_41107c;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_41107c))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4236968:sub_40a6a8": "int sub_40a6a8()\n
{\n
}\n
", "4237024:sub_40a6e0": "extern unsigned int g_411088;\n
\n
int sub_40a6e0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_411088;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_411088);\n
    return v6;\n
}\n
", "4237058:sub_40a702": "int sub_40a702()\n
{\n
}\n
", "4237088:sub_40a720": "int sub_40a720()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4237104:sub_40a730": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40e6b8;\n
extern unsigned int g_40fd80;\n
\n
int sub_40a730(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40e6b8;\n
    v13 = sub_40b280;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40fd80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_40ab90(v6, g_40fd80 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_40ac00(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4237309:sub_40a7fd": "int sub_40a7fd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4237318:sub_40a806": "int sub_40a806()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4237357:sub_40a82d": "int sub_40a82d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4237376:sub_40a840": "int sub_40a840()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4237408:sub_40a860": "extern unsigned int g_411074;\n
\n
int sub_40a860()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40baa0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_40a720() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_411074 = v6;\n
        if (!g_411074)\n
        {\n
            tmp_0 = 0;\n
            g_411074 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_411074 = v6;\n
            v5 = g_411074;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4237488:sub_40a8b0": "extern void* g_411074;\n
\n
int sub_40a8b0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40baa0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_411074;\n
        g_411074 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40a8cf;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4237536:sub_40a8e0": "extern char g_411078;\n
\n
int sub_40a8e0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_411078 = 1;\n
    sub_40b610();\n
    v4 = sub_40be40();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40be40();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40be50();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4237616:sub_40a930": "extern char g_411078;\n
\n
int sub_40a930(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_411078 && a0)\n
        return 1;\n
    sub_40be50(v2);\n
    v3 = sub_40be50();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4237680:sub_40a970": "extern char g_411079;\n
extern unsigned int g_41107c;\n
extern unsigned int g_411080;\n
extern unsigned int g_411084;\n
extern unsigned int g_411088;\n
extern unsigned int g_41108c;\n
extern unsigned int g_411090;\n
\n
int sub_40a970(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_411079)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_40b050();\n
    }\n
    if (sub_40baa0() && !v10)\n
    {\n
        v8 = &g_41107c;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_411088;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_40aa36;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_41107c = v4;\n
    g_411080 = v5;\n
    g_411084 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_411088 = v1;\n
    g_41108c = v2;\n
    v11 = v3;\n
    g_411090 = v11;\n
LABEL_40aa36:\n
    g_411079 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4237904:sub_40aa50": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_40aa50(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40baa0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_40b2c0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4237984:sub_40aaa0": "int sub_40aaa0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a970(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4238016:sub_40aac0": "int sub_40aac0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40baa0())\n
    {\n
        v3 = sub_40b610();\n
    }\n
    else\n
    {\n
        v3 = sub_40a340();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_40a360();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4238064:sub_40aaf0": "extern char g_41107c;\n
\n
int sub_40aaf0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40baa0())\n
    {\n
        v0 = &g_41107c;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40be90();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4238112:sub_40ab20": "int sub_40ab20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40be60(0);\n
    return sub_40be60();\n
}\n
", "4238144:sub_40ab40": "int sub_40ab40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40be70();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40be70();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40be80();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4238192:sub_40ab70": "char sub_40ab70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40be80();\n
    sub_40be80();\n
    return 1;\n
}\n
", "4238224:sub_40ab90": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40ab90(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4238336:sub_40ac00": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40ac00(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4238480:sub_40ac90": "extern unsigned int g_40fd80;\n
extern unsigned int g_40fdc0;\n
\n
int sub_40ac90()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40fd80 != 3141592654)\n
    {\n
        v4 = g_40fd80 & -0x10000;\n
        if (v4)\n
        {\n
            g_40fdc0 = ~(g_40fd80);\n
            return g_40fd80 & -0x10000;\n
        }\n
    }\n
    v4 = sub_40ad10(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40fd80 = v0;\n
    g_40fdc0 = ~(v0);\n
    return v4;\n
}\n
", "4238608:sub_40ad10": "int sub_40ad10()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4238720:sub_40ad80": "int sub_40ad80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238736:sub_40ad90": "int sub_40ad90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238752:sub_40ada0": "int sub_40ada0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238768:sub_40adb0": "int sub_40adb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4238784:sub_40adc0": "int sub_40adc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238800:sub_40add0": "int sub_40add0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238816:sub_40ade0": "extern void g_411098;\n
\n
int sub_40ade0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_411098);\n
}\n
", "4238848:sub_40ae00": "extern unsigned int g_411098;\n
\n
int sub_40ae00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_411098);\n
}\n
", "4238880:sub_40ae20": "char sub_40ae20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238896:sub_40ae30": "int sub_40ae30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_40b050();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4238944:sub_40ae60": "int sub_40ae60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4238960:sub_40ae70": "int sub_40ae70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4238976:sub_40ae80": "int sub_40ae80()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_40aec0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_40aed0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4239040:sub_40aec0": "extern char g_4110a0;\n
\n
int sub_40aec0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4110a0;\n
}\n
", "4239056:sub_40aed0": "extern char g_4110a8;\n
\n
int sub_40aed0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4110a8;\n
}\n
", "4239072:sub_40aee0": "extern unsigned int g_40fd50;\n
\n
int sub_40aee0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40fd50)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4239120:sub_40af10": "extern char g_4110b4;\n
\n
int sub_40af10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4110b4;\n
}\n
", "4239136:sub_40af20": "extern char g_4110b8;\n
\n
int sub_40af20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4110b8;\n
}\n
", "4239152:sub_40af30": "extern void* g_4110bc;\n
\n
int sub_40af30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4110bc = 0;\n
    return v3;\n
}\n
", "4239168:sub_40af40": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40af40()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4239232:sub_40af80": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_40af80()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4239376:sub_40b010": "int sub_40b010()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4239392:sub_40b020": "int sub_40b020()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40b190();\n
}\n
", "4239408:sub_40b030": "int sub_40b030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_40b1a0);\n
}\n
", "4239440:sub_40b050": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40b050()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_40af30();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_40af30();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4239465:sub_40b069": "int sub_40b069()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4239465\n
}\n
", "4239760:sub_40b190": "int sub_40b190()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4239776:sub_40b1a0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_40b1a0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4239904:sub_40b220": "extern struct_0 *g_40e3bc;\n
\n
int sub_40b220()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40e3bc;\n
    v3 = &g_40e3bc;\n
    return &g_40e3bc;\n
}\n
", "4239952:sub_40b250": "extern struct_0 *g_40e3c4;\n
\n
int sub_40b250()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40e3c4;\n
    v3 = &g_40e3c4;\n
    return &g_40e3c4;\n
}\n
", "4240000:sub_40b280": "extern unsigned int g_40fd80;\n
\n
int sub_40b280(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40bea0(*(v2));\n
    return _except_handler4_common(&g_40fd80, sub_40bad0, v2, a0, a1);\n
}\n
", "4240064:sub_40b2c0": "int sub_40b2c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4240080:sub_40b2d0": "int sub_40b2d0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x40b2d9;\n
    return tmp_4;\n
}\n
", "4240096:sub_40b2e0": "int sub_40b2e0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4240128:sub_40b300": "int sub_40b300(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40b2e0(v2);\n
}\n
", "4240160:sub_40b320": "extern unsigned int g_4110c0;\n
\n
int sub_40b320(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_40b2d0(&g_4110c0, v3);\n
    return v0;\n
}\n
", "4240192:sub_40b340": "extern char g_40b2c0;\n
extern unsigned int g_412000;\n
\n
int sub_40b340()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_40b300(&g_412000) != sub_40b2c0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4240240:sub_40b370": "extern char g_40da80;\n
\n
int sub_40b370(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40da80;\n
    v1 = &g_40da80;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4240304:sub_40b3b0": "extern unsigned int g_412008;\n
\n
int sub_40b3b0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_40b300(&g_412008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4240352:sub_40b3e0": "extern unsigned int g_4110c0;\n
\n
int sub_40b3e0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_40b300(&g_4110c0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_40b2c0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4240416:sub_40b420": "int sub_40b420()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4240432:sub_40b430": "int sub_40b430(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b370(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4240451\n
}\n
", "4240464:sub_40b450": "int sub_40b450(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b370(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4240489:sub_40b469": "int sub_40b469()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4240489\n
}\n
", "4240496:sub_40b470": "int sub_40b470(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b370(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40b3b0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4240544:sub_40b4a0": "int sub_40b4a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b370(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40b3e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4240592:sub_40b4d0": "extern char g_40da80;\n
\n
int sub_40b4d0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40da80;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4240656:sub_40b510": "int sub_40b510(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b4d0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40b370(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4240699\n
}\n
", "4240704:sub_40b540": "int sub_40b540(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b4d0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40b370(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4240753:sub_40b571": "int sub_40b571()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4240753\n
}\n
", "4240768:sub_40b580": "int sub_40b580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4240784:sub_40b590": "int sub_40b590(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b4d0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40b370(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40b3b0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4240848:sub_40b5d0": "int sub_40b5d0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b4d0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40b370(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40b3e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4240912:sub_40b610": "extern unsigned int g_40fd80;\n
extern unsigned int g_40fdc8;\n
extern unsigned int g_40fdcc;\n
extern unsigned int g_40fdd0;\n
extern unsigned int g_4110c4;\n
extern unsigned int g_4110c8;\n
extern unsigned int g_4110cc;\n
\n
int sub_40b610()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40fd80 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4110c8 = 0;\n
    g_40fdd0 = g_40fdd0 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40bad0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40b75b;\n
        g_4110cc = g_4110cc | 1;\n
    }\n
LABEL_40b75b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4110cc = g_4110cc | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4110c8 = 1;\n
    g_40fdd0 = g_40fdd0 | 2;\n
    g_40fdc8 = g_40fdc8 & -2;\n
    g_40fdcc = g_40fdcc;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4110c8 = 2;\n
        g_40fdd0 = g_40fdd0 | 4;\n
        g_40fdc8 = g_40fdc8 & -17;\n
        g_40fdcc = g_40fdcc;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4110c8 = 3;\n
                g_40fdd0 = g_40fdd0 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4110c8 = 5;\n
                    g_40fdd0 = g_40fdd0 | 32;\n
                    g_40fdc8 = g_40fdc8 & -3;\n
                    g_40fdcc = g_40fdcc;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4110c8 = 6;\n
                            g_40fdd0 = g_40fdd0 | 64;\n
                            g_40fdc8 = g_40fdc8 & -37;\n
                            g_40fdcc = g_40fdcc;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40fdc8 = g_40fdc8 & -16777217;\n
                    g_40fdcc = g_40fdcc;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4110c4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40fdc8 = ~(v2 | 16777256) & g_40fdc8;\n
                        g_40fdcc = ~(v3) & g_40fdcc;\n
                        if (g_4110c4 > 1)\n
                        {\n
                            g_40fdc8 = g_40fdc8 & -65;\n
                            g_40fdcc = g_40fdcc;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4242080:sub_40baa0": "extern unsigned int g_40fdd4;\n
\n
int sub_40baa0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40fdd4)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4242128:sub_40bad0": "extern unsigned int g_40fd80;\n
extern unsigned int g_40fdc0;\n
extern unsigned int g_4110d8;\n
extern unsigned int g_4110dc;\n
extern unsigned int g_4110e4;\n
extern unsigned int g_4110e8;\n
extern unsigned int g_4110ec;\n
extern unsigned int g_411128;\n
extern unsigned short g_4111b4;\n
extern unsigned short g_4111b8;\n
extern unsigned short g_4111bc;\n
extern unsigned short g_4111c0;\n
extern unsigned int g_4111c4;\n
extern unsigned int g_4111c8;\n
extern unsigned int g_4111cc;\n
extern unsigned int g_4111d0;\n
extern unsigned int g_4111d4;\n
extern unsigned int g_4111d8;\n
extern unsigned int g_4111dc;\n
extern unsigned int g_4111e0;\n
extern unsigned short g_4111e4;\n
extern unsigned int g_4111e8;\n
extern unsigned int g_4111ec;\n
extern unsigned short g_4111f0;\n
\n
int sub_40bad0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40fd80)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_4111d8 = v7;\n
        g_4111d4 = v6;\n
        g_4111d0 = v8;\n
        g_4111cc = v9;\n
        g_4111c8 = v10;\n
        g_4111c4 = v11;\n
        g_4111f0 = v12;\n
        g_4111e4 = v13;\n
        g_4111c0 = v14;\n
        g_4111bc = v15;\n
        g_4111b8 = v16;\n
        g_4111b4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_4111e8 = v0;\n
        g_4111dc = v3;\n
        g_4111e0 = *(&v4);\n
        g_4111ec = &v5;\n
        g_411128 = 65537;\n
        g_4110e4 = g_4111e0;\n
        g_4110d8 = 3221226505;\n
        g_4110dc = 1;\n
        g_4110e8 = 1;\n
        g_4110ec = 2;\n
        v1 = g_40fd80;\n
        v2 = g_40fdc0;\n
        sub_40be10();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4242144:sub_40bae0": "extern unsigned int g_4110d8;\n
extern unsigned int g_4110dc;\n
extern unsigned int g_4110e4;\n
extern unsigned int g_4110e8;\n
extern unsigned int g_4110ec;\n
extern unsigned short g_4111b4;\n
extern unsigned short g_4111b8;\n
extern unsigned short g_4111bc;\n
extern unsigned short g_4111c0;\n
extern unsigned int g_4111c4;\n
extern unsigned int g_4111c8;\n
extern unsigned int g_4111cc;\n
extern unsigned int g_4111d0;\n
extern unsigned int g_4111d4;\n
extern unsigned int g_4111d8;\n
extern unsigned int g_4111dc;\n
extern unsigned int g_4111e0;\n
extern unsigned short g_4111e4;\n
extern unsigned int g_4111e8;\n
extern unsigned int g_4111ec;\n
extern unsigned short g_4111f0;\n
\n
int sub_40bae0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_4111d8 = v4;\n
        g_4111d4 = v5;\n
        g_4111d0 = v6;\n
        g_4111cc = v7;\n
        g_4111c8 = v8;\n
        g_4111c4 = v9;\n
        g_4111f0 = v10;\n
        g_4111e4 = v11;\n
        g_4111c0 = v12;\n
        g_4111bc = v13;\n
        g_4111b8 = v14;\n
        g_4111b4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_4111e8 = v0;\n
        g_4111dc = v1;\n
        g_4111e0 = *(&v2);\n
        g_4111ec = &v3;\n
        g_4110e4 = g_4111e0;\n
        g_4110d8 = 3221226505;\n
        g_4110dc = 1;\n
        g_4110e8 = 1;\n
        g_4110ec = v3;\n
        sub_40be10();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4242169:sub_40baf9": "int sub_40baf9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4242169\n
}\n
", "4242368:sub_40bbc0": "extern unsigned int g_4110d8;\n
extern unsigned int g_4110dc;\n
extern unsigned int g_4110e4;\n
extern unsigned int g_4110e8;\n
extern unsigned int g_4110ec;\n
extern char g_4110f0;\n
extern unsigned short g_4111b4;\n
extern unsigned short g_4111b8;\n
extern unsigned short g_4111bc;\n
extern unsigned short g_4111c0;\n
extern unsigned int g_4111c4;\n
extern unsigned int g_4111c8;\n
extern unsigned int g_4111cc;\n
extern unsigned int g_4111d0;\n
extern unsigned int g_4111d4;\n
extern unsigned int g_4111d8;\n
extern unsigned int g_4111dc;\n
extern unsigned int g_4111e0;\n
extern unsigned short g_4111e4;\n
extern unsigned int g_4111e8;\n
extern unsigned int g_4111ec;\n
extern unsigned short g_4111f0;\n
\n
int sub_40bbc0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1066045];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_4111d8 = v7;\n
        g_4111d4 = v8;\n
        g_4111d0 = v9;\n
        g_4111cc = v10;\n
        g_4111c8 = v11;\n
        g_4111c4 = v12;\n
        g_4111f0 = v13;\n
        g_4111e4 = v14;\n
        g_4111c0 = v15;\n
        g_4111bc = v16;\n
        g_4111b8 = v17;\n
        g_4111b4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_4111e8 = v0;\n
        g_4111dc = v2;\n
        g_4111e0 = *(&v3);\n
        g_4111ec = &v4;\n
        g_4110e4 = g_4111e0;\n
        g_4110d8 = 3221226505;\n
        g_4110dc = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_4110e8 = v5 + 1;\n
        g_4110ec = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_4110f0)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40be10();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4242393:sub_40bbd9": "int sub_40bbd9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4242393\n
}\n
", "4242672:sub_40bcf0": "int sub_40bcf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40bae0(8);\n
}\n
", "4242715:sub_40bd1b": "int sub_40bd1b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4242715\n
}\n
", "4242960:sub_40be10": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40be10(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4243008:sub_40be40": "char sub_40be40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4243024:sub_40be50": "char sub_40be50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4243040:sub_40be60": "char sub_40be60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4243056:sub_40be70": "char sub_40be70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4243072:sub_40be80": "char sub_40be80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4243088:sub_40be90": "int sub_40be90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4243104:sub_40bea0": "extern unsigned int g_4110c8;\n
\n
int sub_40bea0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4110c8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4243412:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4243418:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4243424:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4243430:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4243436:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4243442:cgc_sin": "int cgc_sin()\n
{\n
    return ::kernel32.dll::cgc_sin();\n
}\n
", "4243448:sub_40bff8": "int sub_40bff8(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4243454:sub_40bffe": "int sub_40bffe()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4243460:sub_40c004": "int sub_40c004()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4243466:sub_40c00a": "int sub_40c00a(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4243472:sub_40c010": "int sub_40c010(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4243478:sub_40c016": "int sub_40c016()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4243484:sub_40c01c": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40c01c(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4243490:sub_40c022": "int sub_40c022(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4243496:sub_40c028": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40c028(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4243502:sub_40c02e": "int sub_40c02e(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4243508:sub_40c034": "int sub_40c034(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4243514:_CxxThrowException": "int _CxxThrowException()\n
{\n
    return ::kernel32.dll::_CxxThrowException();\n
}\n
", "4243526:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4243532:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4243538:__std_exception_copy": "int __std_exception_copy()\n
{\n
    return ::kernel32.dll::__std_exception_copy();\n
}\n
", "4243544:__std_exception_destroy": "int __std_exception_destroy()\n
{\n
    return ::kernel32.dll::__std_exception_destroy();\n
}\n
", "4243550:__std_terminate": "int __std_terminate()\n
{\n
    return ::kernel32.dll::__std_terminate();\n
}\n
", "4243556:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4243562:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4243568:_purecall": "int _purecall()\n
{\n
    return ::kernel32.dll::_purecall();\n
}\n
", "4243574:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4243580:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4243586:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4243592:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4243598:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4243604:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4243610:_callnewh": "int _callnewh()\n
{\n
    return ::kernel32.dll::_callnewh();\n
}\n
", "4243616:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4243622:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4243628:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4243634:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4243640:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4243646:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4243652:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4243658:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4243664:_free_dbg": "int _free_dbg()\n
{\n
    return ::kernel32.dll::_free_dbg();\n
}\n
", "4243670:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4243676:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4243682:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4243688:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4243694:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4243700:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4243706:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4243712:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4243718:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4243724:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4243730:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4243736:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4243742:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4243748:malloc": "int malloc()\n
{\n
    return ::kernel32.dll::malloc();\n
}\n
", "4243754:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4243760:sub_40c130": "int sub_40c130()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4243766:sub_40c136": "int sub_40c136(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_receive": null, "5242896:cgc_sin": null, "5242900:cgc_transmit": null, "5242904:GetCurrentProcess": null, "5242908:GetCurrentProcessId": null, "5242912:GetCurrentThreadId": null, "5242916:GetModuleHandleW": null, "5242920:GetStartupInfoW": null, "5242924:GetSystemTimeAsFileTime": null, "5242928:InitializeSListHead": null, "5242932:IsDebuggerPresent": null, "5242936:IsProcessorFeaturePresent": null, "5242940:QueryPerformanceCounter": null, "5242944:SetUnhandledExceptionFilter": null, "5242948:TerminateProcess": null, "5242952:UnhandledExceptionFilter": null, "5242956:_CxxThrowException": null, "5242960:__CxxFrameHandler3": null, "5242964:__current_exception": null, "5242968:__current_exception_context": null, "5242972:__std_exception_copy": null, "5242976:__std_exception_destroy": null, "5242980:__std_terminate": null, "5242984:__std_type_info_destroy_list": null, "5242988:_except_handler4_common": null, "5242992:_purecall": null, "5242996:memset": null, "5243000:__p___argc": null, "5243004:__p___argv": null, "5243008:__p__commode": null, "5243012:__setusermatherr": null, "5243016:_c_exit": null, "5243020:_callnewh": null, "5243024:_cexit": null, "5243028:_configthreadlocale": null, "5243032:_configure_narrow_argv": null, "5243036:_controlfp_s": null, "5243040:_crt_at_quick_exit": null, "5243044:_crt_atexit": null, "5243048:_execute_onexit_table": null, "5243052:_exit": null, "5243056:_free_dbg": null, "5243060:_get_initial_narrow_environment": null, "5243064:_initialize_narrow_environment": null, "5243068:_initialize_onexit_table": null, "5243072:_initterm": null, "5243076:_initterm_e": null, "5243080:_register_onexit_function": null, "5243084:_register_thread_local_exe_atexit_callback": null, "5243088:_seh_filter_dll": null, "5243092:_seh_filter_exe": null, "5243096:_set_app_type": null, "5243100:_set_fmode": null, "5243104:_set_new_mode": null, "5243108:exit": null, "5243112:malloc": null, "5243116:terminate": null, "6295596:UnresolvableCallTarget": null}