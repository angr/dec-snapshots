{"4198400:sub_401000": "int sub_401000()\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned long long v1;  // [bp-0x14]\n
    unsigned long long v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // ebp\n
\n
    v3 = &v4;\n
    v2 = *(&v6);\n
    v1 = *(&v5);\n
    *(&v0) = (0 CONCAT v1) + (0 CONCAT v2);\n
    if ([D] GetI(136:I8x8)[t41,0])\n
    {\n
        [D] PutI(72:F64x8)[t1,0] = t4\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        v7 = v3;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t1,0] = t4\n
    [D] PutI(136:I8x8)[t1,0] = 0x01\n
    v7 = v3;\n
    return;\n
}\n
", "4198459:sub_40103b": null, "4198464:sub_401040": "int sub_401040()\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned long long v1;  // [bp-0x14]\n
    unsigned long long v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // ebp\n
\n
    v3 = &v4;\n
    v2 = *(&v6);\n
    v1 = *(&v5);\n
    *(&v0) = (0 CONCAT v1) * (0 CONCAT v2);\n
    if ([D] GetI(136:I8x8)[t41,0])\n
    {\n
        [D] PutI(72:F64x8)[t1,0] = t4\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        v7 = v3;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t1,0] = t4\n
    [D] PutI(136:I8x8)[t1,0] = 0x01\n
    v7 = v3;\n
    return;\n
}\n
", "4198523:sub_40107b": null, "4198528:sub_401080": "int sub_401080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198582:sub_4010b6": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198646:sub_4010f6": null, "4198656:sub_401100": "int sub_401100(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198710:sub_401136": null, "4198720:sub_401140": "int sub_401140(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3) && !sub_401100(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198796:sub_40118c": null, "4198800:sub_401190": "int sub_401190(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401140(v3) && !sub_401080(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198876:sub_4011dc": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 32 && v3 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198934:sub_401216": null, "4198944:sub_401220": "int sub_401220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401100(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + -32;\n
    return v0;\n
}\n
", "4199004:sub_40125c": null, "4199008:sub_401260": "int sub_401260(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + 32;\n
    return v0;\n
}\n
", "4199068:sub_40129c": null, "4199072:sub_4012a0": "int sub_4012a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4199168:sub_401300": "extern char g_40e0a0;\n
\n
int sub_401300(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = g_40e0a0;\n
    if (!g_40e0a0)\n
    {\n
        v0 = 63;\n
        v4 = sub_406cf0(&g_40e0a0, v3);\n
    }\n
    return v4;\n
}\n
", "4199227:sub_40133b": null, "4199232:sub_401340": "extern char g_40e0a0;\n
\n
int sub_401340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40e0a0 = 0;\n
    return v3;\n
}\n
", "4199244:sub_40134c": null, "4199248:sub_401350": "extern char g_40e0a0;\n
\n
int sub_401350()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40e0a0;\n
}\n
", "4199259:sub_40135b": null, "4199264:sub_401360": "extern struct_1 *g_40e098;\n
\n
int sub_401360()\n
{\n
    struct struct_0 **v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!g_40e098)\n
    {\n
        sub_401300(\"Filesystem does not exist\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < g_40e098->field_4; v0 += 1)\n
    {\n
        if (*((g_40e098->field_8 + (v0 << 2))))\n
        {\n
            if (*(*((g_40e098->field_8 + (v0 << 2)))))\n
            {\n
                sub_404460();\n
                *(*((g_40e098->field_8 + v0 * 4))) = 0;\n
            }\n
            if (*((*((g_40e098->field_8 + (v0 << 2))) + 4)))\n
            {\n
                sub_404460();\n
                *((*((g_40e098->field_8 + v0 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((g_40e098->field_8 + (v0 << 2))) + 16)))\n
            {\n
                sub_404460();\n
                *((*((g_40e098->field_8 + v0 * 4)) + 16)) = 0;\n
            }\n
            sub_404460();\n
            *((g_40e098->field_8 + v0 * 4)) = 0;\n
        }\n
    }\n
    sub_404460();\n
    g_40e098 = 0;\n
    sub_401340();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4199659:sub_4014eb": null, "4199664:sub_4014f0": "extern struct_0 *g_40e098;\n
extern unsigned int g_40e0a0;\n
extern unsigned int g_40e0e0;\n
\n
int sub_4014f0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 64;\n
    sub_407140(&g_40e0a0);\n
    if (!v4)\n
    {\n
        sub_401300(\"MaxFiles should be > 0\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (g_40e098)\n
        sub_401360();\n
    g_40e098 = sub_4046c0();\n
    if (!g_40e098)\n
    {\n
        sub_401300(\"calloc failed\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v5 = sub_4046c0();\n
    g_40e098->field_8 = v5;\n
    if (!v5)\n
    {\n
        sub_401300(\"calloc failed\");\n
        sub_404460();\n
        v1 = 0;\n
        return v1;\n
    }\n
    g_40e098->field_4 = v4;\n
    if (!sub_401690())\n
    {\n
        sub_401300(\"Login failed\");\n
        sub_404460();\n
        sub_404460();\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!sub_401750())\n
    {\n
        sub_401830();\n
        sub_401300(\"Failed to init the passwd file\");\n
        sub_404460();\n
        sub_404460();\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        sub_407140(&g_40e0e0);\n
        sub_401340();\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4200065:sub_401681": null, "4200080:sub_401690": "extern void* g_40e09c;\n
\n
int sub_401690(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_407100();\n
    v1 = sub_4046c0();\n
    if (!v1)\n
    {\n
        sub_401300(\"calloc failed\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v5;\n
    sub_406ca0(v1);\n
    if (g_40e09c)\n
    {\n
        sub_404460();\n
        g_40e09c = 0;\n
    }\n
    g_40e09c = v1;\n
    sub_401340();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4200259:sub_401743": null, "4200272:sub_401750": "int sub_401750(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401300(\"Invalid root password\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = sub_401c40(\"passwd\");\n
    if (!v2)\n
    {\n
        sub_401300(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    sub_4022c0(\"root:\", 5, 1);\n
    v1 = v2;\n
    v7 = sub_407100(v6, 5, 1);\n
    v0 = v1;\n
    sub_4022c0(v6, v7, 1);\n
    sub_4020f0(v2, v7, 1);\n
    sub_401340();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4200488:sub_401828": null, "4200496:sub_401830": "extern void* g_40e09c;\n
\n
int sub_401830()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (g_40e09c)\n
        sub_404460(g_40e09c);\n
    g_40e09c = 0;\n
    sub_401340();\n
    return 1;\n
}\n
", "4200551:sub_401867": null, "4200560:sub_401870": "extern struct_0 *g_40e098;\n
\n
int sub_401870(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < g_40e098->field_4)\n
        {\n
            if (*((g_40e098->field_8 + (v1 << 2))) && *(*((g_40e098->field_8 + (v1 << 2)))))\n
            {\n
                v0 = v5;\n
                if (!sub_407490(*(*((g_40e098->field_8 + (v1 << 2))))))\n
                {\n
                    v2 = *((g_40e098->field_8 + v1 * 4));\n
                    return v2;\n
                }\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4200740:sub_401924": null, "4200752:sub_401930": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern struct_1 *g_40e098;\n
extern unsigned int g_40e09c;\n
\n
int sub_401930(unsigned int v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401300(\"Invalid filename\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!g_40e09c)\n
    {\n
        sub_401300(\"Must login first\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if ((a0 & 153))\n
    {\n
        sub_401300(\"Invalid mode\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (sub_401870(v5))\n
    {\n
        sub_401300(\"File already exists\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= g_40e098->field_4)\n
        {\n
LABEL_401bed:\n
            if (v1 != g_40e098->field_4)\n
            {\n
                sub_401340();\n
                v2 = *((g_40e098->field_8 + v1 * 4));\n
                return v2;\n
            }\n
            sub_401300(\"No free inodes\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*((g_40e098->field_8 + (v1 << 2))))\n
        {\n
            v1 = v1 + 1;\n
        }\n
        else\n
        {\n
            v6 = sub_4046c0();\n
            *((g_40e098->field_8 + v1 * 4)) = v6;\n
            if (!v6)\n
            {\n
                sub_401300(\"calloc failed\");\n
                v2 = 0;\n
                return v2;\n
            }\n
            sub_407100();\n
            v7 = sub_4046c0();\n
            *(*((g_40e098->field_8 + v1 * 4))) = v7;\n
            if (!v7)\n
            {\n
                sub_401300(\"calloc failed\");\n
                sub_404460();\n
                *((g_40e098->field_8 + v1 * 4)) = 0;\n
                v2 = 0;\n
                return v2;\n
            }\n
            v0 = v5;\n
            sub_406ca0(*(*((g_40e098->field_8 + v1 * 4))));\n
            v8 = sub_4046c0(5);\n
            *((*((g_40e098->field_8 + v1 * 4)) + 4)) = v8;\n
            if (!v8)\n
            {\n
                sub_401300(\"calloc failed\");\n
                sub_404460();\n
                *(*((g_40e098->field_8 + v1 * 4))) = 0;\n
                sub_404460();\n
                *((g_40e098->field_8 + v1 * 4)) = 0;\n
                v2 = 0;\n
                return v2;\n
            }\n
            v0 = g_40e09c;\n
            sub_406ca0(*((*((g_40e098->field_8 + v1 * 4)) + 4)));\n
            *((*((g_40e098->field_8 + v1 * 4)) + 8)) = a0;\n
            *((*((g_40e098->field_8 + v1 * 4)) + 12)) = 0;\n
            *((*((g_40e098->field_8 + v1 * 4)) + 16)) = 0;\n
            goto LABEL_401bed;\n
            goto LABEL_401bed;\n
        }\n
    }\n
}\n
", "4201527:sub_401c37": null, "4201536:sub_401c40": "typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4251872];\n
    unsigned int field_40e0e0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern unsigned int g_40e098;\n
extern unsigned int g_40e09c;\n
extern unsigned int g_40e0e0[4];\n
\n
int sub_401c40(unsigned int v6, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct_3 *v1;  // [bp-0x10]\n
    struct_2 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = 0;\n
    if (!g_40e098)\n
    {\n
        sub_401300(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v6 && a0)\n
    {\n
        if (sub_407100() > 1)\n
        {\n
            sub_401300(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            sub_401300(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!g_40e09c)\n
        {\n
            sub_401300(\"Must login first\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = sub_401870(v6);\n
        if (!v1 && *(a0) == 114)\n
        {\n
            sub_401300(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1)\n
        {\n
            for (v2 = 0; v2 < 8; v2 += 1)\n
            {\n
                if (g_40e0e0[v2] && *(g_40e0e0[v2]) == v1)\n
                {\n
                    sub_401300(\"File is already open\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (v1 && sub_407490(g_40e09c))\n
        {\n
            if (sub_407490(v1->field_4))\n
            {\n
                if (*(a0) == 114 && !(v1->field_8 & 64))\n
                {\n
                    sub_401300(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a0) == 119 && !(v1->field_8 & 96))\n
                {\n
                    sub_401300(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v1->field_8 & 4))\n
                {\n
                    sub_401300(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a0) == 119 && !(v1->field_8 & 6))\n
                {\n
                    sub_401300(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        v0 = sub_4046c0();\n
        if (!v0)\n
        {\n
            sub_401300(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if (!g_40e0e0[v2])\n
            {\n
                g_40e0e0[v2] = v0;\n
                break;\n
            }\n
        }\n
        if (v2 == 8)\n
        {\n
            sub_401300(\"No free file descriptors\");\n
            sub_404460();\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_4 = 4;\n
            v0->field_8 = 0;\n
        }\n
        else if (v1)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_4 = 6;\n
            v0->field_8 = 0;\n
            v0->field_0->field_c = 0;\n
            if (v0->field_0->field_10)\n
            {\n
                sub_404460();\n
                v0->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v1 = sub_401930(v6, 6);\n
            if (!v1)\n
            {\n
                sub_401300(\"Failed to create file\");\n
                g_40e0e0[v2] = 0;\n
                sub_404460();\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0->field_0 = &v1;\n
            v0->field_4 = 6;\n
            v0->field_8 = 0;\n
        }\n
        sub_401340();\n
        v3 = v0;\n
        return v3;\n
    }\n
    sub_401300(\"Invalid filename or mode\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4202735:sub_4020ef": null, "4202736:sub_4020f0": "extern unsigned int g_40e0e0[4];\n
\n
int sub_4020f0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x6]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        sub_401300(\"Invalid file pointer\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < 8; v0 += 1)\n
    {\n
        if (g_40e0e0[v0] == v4)\n
            g_40e0e0[v0] = 0;\n
    }\n
    sub_401340();\n
    sub_404460();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4202877:sub_40217d": null, "4202880:sub_402180": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_402180(unsigned int v4, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v2 = &v3;\n
    if (v4 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            sub_401300(\"End of file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            sub_406d80(v4, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a2->field_0->field_c - a2->field_8 + v5->field_8;\n
            sub_401340();\n
            v1 = a2->field_0->field_c - a2->field_8;\n
            return v1;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            sub_406d80(v4, a2->field_0->field_10 + a2->field_8);\n
            v6 = a2;\n
            v6->field_8 = a1 * a0 + v6->field_8;\n
            sub_401340();\n
            v1 = a1 * a0;\n
            return v1;\n
        }\n
    }\n
    sub_401300(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203190:sub_4022b6": null, "4203200:sub_4022c0": "int sub_4022c0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[5];  // eax\n
\n
    v3 = &v4;\n
    if (v5 && a2)\n
    {\n
        v1 = sub_4046c0();\n
        if (!v1)\n
        {\n
            sub_401300(\"calloc failed\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            sub_406d80(v1, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        sub_406d80(v1 + *(a2)->field_c, v5);\n
        v6 = *(a2);\n
        v6[3] = a1 * a0 + v6[3];\n
        if (*(a2)->field_10)\n
            sub_404460();\n
        *(a2)->field_10 = v1;\n
        sub_401340();\n
        v2 = a1 * a0;\n
        return v2;\n
    }\n
    sub_401300(\"Invalid buffer or file pointer\");\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203499:sub_4023eb": null, "4203504:sub_4023f0": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4023f0(unsigned int v5, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_50;  // tmp #50\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    struct_2 *v7;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        sub_401300(\"Invalid buffer\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_401300(\"Invalid file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        sub_401300(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v1 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v6 = a1->field_0->field_10;\n
            v7 = a1;\n
            v8 = v7->field_8;\n
            v7->field_8 = v8 + 1;\n
            tmp_50 = v6[v8];\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            *((v5 + v9)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v5 + v1)) = 0;\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401300(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4203856:sub_402550": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4023f0(unsigned int v5, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_50;  // tmp #50\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    struct_2 *v7;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        sub_401300(\"Invalid buffer\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_401300(\"Invalid file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        sub_401300(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v1 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v6 = a1->field_0->field_10;\n
            v7 = a1;\n
            v8 = v7->field_8;\n
            v7->field_8 = v8 + 1;\n
            tmp_50 = v6[v8];\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            *((v5 + v9)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v5 + v1)) = 0;\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401300(\"End of file\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4205091:sub_402a23": null, "4205104:sub_402a30": "extern struct_1 *g_40e098;\n
extern unsigned int g_40e09c;\n
extern unsigned int g_40e0e0[4];\n
\n
int sub_402a30(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[5];  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x5]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!g_40e098)\n
    {\n
        sub_401300(\"Filesystem does not exist\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!v7)\n
    {\n
        sub_401300(\"Invalid filename\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!g_40e09c)\n
    {\n
        sub_401300(\"Must login first\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        for (v3 = 0; v3 < g_40e098->field_4; v3 = v3 + 1)\n
        {\n
            if (*((g_40e098->field_8 + (v3 << 2))))\n
            {\n
                v0 = v7;\n
                if (!sub_407490(*(*((g_40e098->field_8 + (v3 << 2))))))\n
                {\n
                    v1[0] = *((g_40e098->field_8 + v3 * 4));\n
                    v2 = v3;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v3 == g_40e098->field_4)\n
        {\n
            sub_401300(\"Unable to locate file\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 = v3 + 1)\n
        {\n
            if (*((0x4 * v3 + &g_40e0e0[0])) && *(*((0x4 * v3 + &g_40e0e0[0]))) == v1)\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        v0 = \"root\";\n
        if (sub_407490(g_40e09c))\n
        {\n
            v0 = v1[1];\n
            if (sub_407490(g_40e09c))\n
            {\n
                sub_401300(\"Permission denied\");\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        sub_404460();\n
        if (v1[1])\n
            sub_404460();\n
        if (v1[4])\n
            sub_404460();\n
        sub_404460();\n
        *((g_40e098->field_8 + v2 * 4)) = 0;\n
        sub_401340();\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4205689:sub_402c79": null, "4205696:sub_402c80": "extern struct_0 *g_40e098;\n
extern unsigned int g_40e09c;\n
\n
int sub_402c80(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_1 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x5]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2[0] = 0;\n
    if (v7 && a0)\n
    {\n
        for (v3 = 0; v3 < g_40e098->field_4; v3 = v3 + 1)\n
        {\n
            if (*((g_40e098->field_8 + (v3 << 2))) && *(*((g_40e098->field_8 + (v3 << 2)))))\n
            {\n
                v0 = v7;\n
                if (!sub_407490(*(*((g_40e098->field_8 + (v3 << 2))))))\n
                    v2[0] = *((g_40e098->field_8 + v3 * 4));\n
                v0 = a0;\n
                if (!sub_407490(*(*((g_40e098->field_8 + (v3 << 2))))))\n
                {\n
                    sub_401300(\"Destination file already exists\");\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (!v2)\n
        {\n
            sub_401300(\"Source file not found\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = \"root\";\n
        if (sub_407490(g_40e09c))\n
        {\n
            v0 = *((v2 + 4));\n
            if (sub_407490(g_40e09c))\n
            {\n
                sub_401300(\"Permission denied\");\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        sub_407100();\n
        v1 = sub_4046c0();\n
        if (!v1)\n
        {\n
            sub_401300(\"calloc failed\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = a0;\n
        sub_406ca0(v1);\n
        sub_404460(*(v2));\n
        *(v2) = v1;\n
        sub_401340();\n
        v4 = 1;\n
        return v4;\n
    }\n
    sub_401300(\"Invalid filename\");\n
    v4 = 0;\n
    return v4;\n
}\n
", "4206209:sub_402e81": null, "4206224:sub_402e90": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
extern unsigned int g_40e09c;\n
\n
int sub_402e90(unsigned int v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        sub_401300(\"Invalid user\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v1 = sub_401870(v5);\n
        if (!v1)\n
        {\n
            sub_401300(\"Unable to find file\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = \"root\";\n
        if (sub_407490(g_40e09c))\n
        {\n
            v0 = v1->field_4;\n
            if (sub_407490(g_40e09c))\n
            {\n
                sub_401300(\"Permission denied\");\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        v1->field_8 = a0;\n
        sub_401340();\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_401300(\"Invalid mode\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4206472:sub_402f88": null, "4206480:sub_402f90": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40e09c;\n
\n
int sub_402f90(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401300(\"Invalid filename\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v0 = \"root\";\n
        if (sub_407490(g_40e09c))\n
        {\n
            sub_401300(\"Must be root\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 = sub_401870(v6);\n
        if (!v2)\n
        {\n
            sub_401300(\"Unable to find file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (sub_4030f0())\n
        {\n
            sub_407100();\n
            v1 = sub_4046c0();\n
            if (!v1)\n
            {\n
                sub_401300(\"calloc failed\");\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = a0;\n
            sub_406ca0(v1);\n
            if (v2->field_4)\n
                sub_404460();\n
            v2->field_4 = v1;\n
            sub_401340();\n
            v3 = 1;\n
            return v3;\n
        }\n
        else\n
        {\n
            sub_401300(\"Invalid user\");\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    else\n
    {\n
        sub_401300(\"Invalid owner\");\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4206831:sub_4030ef": null, "4206832:sub_4030f0": "int sub_4030f0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x90]\n
    char v1;  // [bp-0x8c]\n
    void* v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = sub_401c40(\"passwd\", \"r\");\n
    if (!v2)\n
    {\n
        sub_401300(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (sub_4023f0(&v1, 127, v2))\n
        {\n
            v0 = sub_4072b0(&v1);\n
            if (!v0)\n
            {\n
                sub_401300(\"Failed to parse passwd file\");\n
                v3 = 0;\n
                return v3;\n
            }\n
            else if (!sub_407490(v0))\n
            {\n
                sub_4020f0(v2);\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            sub_4020f0(v2);\n
            sub_401340();\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4207128:sub_403218": null, "4207136:sub_403220": "extern unsigned int g_40e09c;\n
\n
int sub_403220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404e50(g_40e09c);\n
}\n
", "4207171:sub_403243": null, "4207184:sub_403250": "extern unsigned int g_40e09c;\n
\n
int sub_403250(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0xa8]\n
    struct struct_0 **v2;  // [bp-0xa0]\n
    struct struct_0 **v3;  // [bp-0x9c]\n
    unsigned int v4;  // [bp-0x98]\n
    char v5;  // [bp-0x94]\n
    struct struct_0 **v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10]\n
    char v8;  // [bp-0x9]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    if (!v11)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401300(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407490(g_40e09c))\n
    {\n
        sub_401300(\"Must be root\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407100() > 32)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407100() > 32)\n
    {\n
        sub_401300(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!sub_4030f0(v11))\n
    {\n
        v7 = sub_401c40(\"passwd\", \"r\");\n
        if (!v7)\n
        {\n
            sub_401300(\"Unable to open passwd file\");\n
            v8 = 0;\n
            return v8;\n
        }\n
        v6 = sub_401c40(\"~passwd\", \"w\");\n
        if (!v6)\n
        {\n
            sub_401300(\"Unable to open tmp passwd file\");\n
            sub_4020f0(v7);\n
            v8 = 0;\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            if (sub_4023f0(&v5, 127, v7))\n
            {\n
                v3 = v6;\n
                v0 = sub_407100();\n
                v4 = sub_4022c0(&v5, v0, 1, v3);\n
                if (v4 != sub_407100(&v5, v0, 1))\n
                {\n
                    sub_4020f0(v7);\n
                    sub_4020f0(v6);\n
                    sub_401300(\"Unable to write tmp passwd file\");\n
                    sub_402a30(\"~passwd\");\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                else if (*(&v4 + sub_407100()) != 10 && sub_4022c0(\"\\n
\", 1, 1, v6) != 1)\n
                {\n
                    sub_4020f0(v7);\n
                    sub_4020f0(v6);\n
                    sub_401300(\"Unable to write tmp passwd file\");\n
                    sub_402a30(\"~passwd\");\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v11;\n
                sub_4055a0(&v5, \"$s:$s\", v1);\n
                v2 = v6;\n
                sub_4022c0(&v5, sub_407100(&v5, \"$s:$s\", v1), 1, v2);\n
                sub_4020f0(v7);\n
                sub_4020f0(v6);\n
                sub_402a30(\"passwd\");\n
                sub_402c80(\"~passwd\", \"passwd\");\n
                sub_401340();\n
                v8 = 1;\n
                return v8;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        sub_401300(\"User already exists\");\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4208108:sub_4035ec": null, "4208112:sub_4035f0": "extern unsigned int g_40e09c;\n
\n
int sub_4035f0(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    struct struct_0 **v1;  // [bp-0xa0]\n
    unsigned int v2;  // [bp-0x9c]\n
    unsigned int v3;  // [bp-0x98]\n
    void* v4;  // [bp-0x94]\n
    char v5;  // [bp-0x8d]\n
    unsigned int v6;  // [bp-0x8c]\n
    char v7;  // [bp-0x85]\n
    char v8;  // [bp-0x5]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v5 = 0;\n
    if (!v11)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407490(g_40e09c))\n
    {\n
        sub_401300(\"Must be root\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (sub_407490(v11))\n
    {\n
        v4 = sub_401c40(\"passwd\", \"r\");\n
        if (!v4)\n
        {\n
            sub_401300(\"Unable to open passwd file\");\n
            v8 = 0;\n
            return v8;\n
        }\n
        v3 = sub_401c40(\"~passwd\", \"w\");\n
        if (!v3)\n
        {\n
            sub_401300(\"Unable to open tmp passwd file\");\n
            sub_4020f0(v4);\n
            v8 = 0;\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!sub_4023f0(&v7, 127, v4))\n
                {\n
                    sub_4020f0(v4);\n
                    sub_4020f0(v3);\n
                    if (v5)\n
                    {\n
                        sub_402a30(\"passwd\");\n
                        sub_402c80(\"~passwd\", \"passwd\");\n
                        sub_401340();\n
                        v8 = 1;\n
                        return v8;\n
                    }\n
                    sub_401300(\"User not found\");\n
                    sub_4020f0(v4);\n
                    sub_4020f0(v3);\n
                    sub_402a30(\"~passwd\");\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (!sub_407100());\n
            v6 = sub_4072b0(&v7);\n
            if (!v6)\n
            {\n
                sub_401300(\"Failed to parse passwd file\");\n
                sub_4020f0(v4);\n
                sub_4020f0(v3);\n
                sub_402a30(\"~passwd\");\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (sub_407490(v6))\n
            {\n
                (&v7)[sub_407100()] = 58;\n
                v1 = v3;\n
                v0 = sub_407100();\n
                v2 = sub_4022c0(&v7, v0, 1, v1);\n
                if (v2 != sub_407100(&v7, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v5 = 1;\n
            }\n
        }\n
        sub_4020f0(v4);\n
        sub_4020f0(v3);\n
        sub_401300(\"Unable to write tmp passwd file\");\n
        sub_402a30(\"~passwd\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        sub_401300(\"Can't delete root user\");\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4208988:sub_40395c": null, "4208992:sub_403960": "extern unsigned int g_40e09c;\n
\n
int sub_403960(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct struct_0 **v2;  // [bp-0xac]\n
    unsigned int v3;  // [bp-0xa8]\n
    struct struct_0 **v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    void* v7;  // [bp-0x98]\n
    char v8;  // [bp-0x91]\n
    unsigned int v9;  // [bp-0x90]\n
    char v10;  // [bp-0x89]\n
    char v11;  // [bp-0x9]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v8 = 0;\n
    if (!v14)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401300(\"Invalid password\");\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (sub_407100() <= 32)\n
    {\n
        if (sub_407490(g_40e09c) && sub_407490(g_40e09c))\n
        {\n
            sub_401300(\"Must be root or the user being changed\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        v7 = sub_401c40(\"passwd\", \"r\");\n
        if (!v7)\n
        {\n
            sub_401300(\"Unable to open passwd file\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        v6 = sub_401c40(\"~passwd\", \"w\");\n
        if (!v6)\n
        {\n
            sub_401300(\"Unable to open tmp passwd file\");\n
            sub_4020f0(v7);\n
            v11 = 0;\n
            return v11;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!sub_4023f0(&v10, 127, v7))\n
                {\n
                    sub_4020f0(v7);\n
                    sub_4020f0(v6);\n
                    if (!v8)\n
                    {\n
                        sub_401300(\"User not found\");\n
                        sub_4020f0(v7);\n
                        sub_4020f0(v6);\n
                        sub_402a30(\"~passwd\");\n
                        v11 = 0;\n
                        return v11;\n
                    }\n
                    sub_402a30(\"passwd\");\n
                    sub_402c80(\"~passwd\", \"passwd\");\n
                    sub_401340();\n
                    v11 = 1;\n
                    return v11;\n
                }\n
            } while (!sub_407100());\n
            v9 = sub_4072b0(&v10);\n
            if (!v9)\n
            {\n
                sub_401300(\"Failed to parse passwd file\");\n
                sub_4020f0(v7);\n
                sub_4020f0(v6);\n
                sub_402a30(\"~passwd\");\n
                v11 = 0;\n
                return v11;\n
            }\n
            else if (sub_407490(v9))\n
            {\n
                (&v10)[sub_407100()] = 58;\n
                v2 = v6;\n
                v0 = sub_407100();\n
                v3 = sub_4022c0(&v10, v0, 1, v2);\n
                if (v3 != sub_407100(&v10, v0, 1))\n
                {\n
                    sub_401300(\"Unable to write tmp passwd file\");\n
                    sub_4020f0(v7);\n
                    sub_4020f0(v6);\n
                    sub_402a30(\"~passwd\");\n
                    v11 = 0;\n
                    return v11;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v14;\n
                sub_4055a0(&v10, \"$s:$s\\n
\", v1);\n
                v4 = v6;\n
                v0 = sub_407100(&v10, \"$s:$s\\n
\", v1);\n
                v5 = sub_4022c0(&v10, v0, 1, v4);\n
                if (v5 != sub_407100(&v10, v0, 1))\n
                {\n
                    sub_4020f0(v7);\n
                    sub_4020f0(v6);\n
                    sub_401300(\"Unable to write tmp passwd file\");\n
                    sub_402a30(\"~passwd\");\n
                    v11 = 0;\n
                    return v11;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        sub_401300(\"Invalid password\");\n
        v11 = 0;\n
        return v11;\n
    }\n
}\n
", "4210122:sub_403dca": null, "4210128:sub_403dd0": "extern unsigned int g_40e09c;\n
\n
int sub_403dd0(unsigned int v10, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9d]\n
    void* v1;  // [bp-0x9c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x98]\n
    char v3;  // [bp-0x91]\n
    unsigned int v4;  // [bp-0x90]\n
    unsigned int v5;  // [bp-0x8c]\n
    char v6;  // [bp-0x85]\n
    char v7;  // [bp-0x5]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v3 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v10)\n
    {\n
        sub_401300(\"Invalid username\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (!a0)\n
    {\n
        sub_401300(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (sub_407100() > 32)\n
    {\n
        sub_401300(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        if (!g_40e09c)\n
        {\n
            sub_401690(\"root\");\n
            v0 = 1;\n
        }\n
        else if (sub_407490(g_40e09c))\n
        {\n
            sub_407100();\n
            v1 = sub_4046c0();\n
            if (!v1)\n
            {\n
                sub_401300(\"calloc failed\");\n
                v7 = 0;\n
                return v7;\n
            }\n
            sub_406ca0(v1);\n
            sub_401830();\n
            sub_401690(\"root\");\n
        }\n
        v2 = sub_401c40(\"passwd\", \"r\");\n
        if (!v2)\n
        {\n
            sub_401300(\"Unable to open passwd file\");\n
            if (v1)\n
            {\n
                sub_401830();\n
                sub_401690(v1);\n
                sub_404460();\n
            }\n
            if (v0)\n
                sub_401830();\n
            v7 = 0;\n
            return v7;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!sub_4023f0(&v6, 127, v2))\n
                        {\n
                            sub_4020f0(v2);\n
                            if (!v3)\n
                            {\n
                                sub_401300(\"User not found\");\n
                                if (v1)\n
                                {\n
                                    sub_401830();\n
                                    sub_401690(v1);\n
                                    sub_404460();\n
                                }\n
                                if (v0)\n
                                    sub_401830();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                            else\n
                            {\n
                                sub_401340();\n
                                if (v1)\n
                                {\n
                                    sub_401830();\n
                                    sub_401690(v1);\n
                                    sub_404460();\n
                                }\n
                                if (v0)\n
                                    sub_401830();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                        }\n
                    } while (!sub_407100());\n
                    v5 = sub_4072b0(&v6);\n
                    if (!v5)\n
                    {\n
                        sub_401300(\"Failed to parse passwd file\");\n
                        sub_4020f0(v2);\n
                        if (v1)\n
                        {\n
                            sub_401830();\n
                            sub_401690(v1);\n
                            sub_404460();\n
                        }\n
                        if (v0)\n
                            sub_401830();\n
                        v7 = 0;\n
                        return v7;\n
                    }\n
                } while (sub_407490(v5));\n
                v4 = sub_4072b0(0);\n
                if (!v4)\n
                {\n
                    sub_401300(\"Failed to parse passwd file\");\n
                    sub_4020f0(v2);\n
                    if (v1)\n
                    {\n
                        sub_401830();\n
                        sub_401690(v1);\n
                        sub_404460();\n
                    }\n
                    if (v0)\n
                        sub_401830();\n
                    v7 = 0;\n
                    return v7;\n
                }\n
            } while (sub_407490(v4));\n
            sub_401340();\n
            sub_4020f0(v2);\n
            if (v1)\n
            {\n
                sub_401830();\n
                sub_401690(v1);\n
                sub_404460();\n
            }\n
            if (v0)\n
                sub_401830();\n
            v7 = 1;\n
            return v7;\n
        }\n
    }\n
}\n
", "4211296:sub_404260": "extern char g_40e100;\n
\n
int sub_404260(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = g_40e100;\n
    if (!v6)\n
        return g_40e100;\n
    v7 = v6;\n
    if (*(v7) <= 1016)\n
    {\n
        if (*(v6) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v6) >> 3;\n
        *((v6 + 4)) = (&g_40e100)[v2];\n
        v1 = v6;\n
        if (*(v6) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v6) >> 3;\n
        v7 = v0;\n
        (&g_40e100)[v7] = v1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v7;\n
        if (!*((v3 + 4)))\n
        {\n
            *((v3 + 4)) = v6;\n
            *((v6 + 8)) = v3;\n
            v7 = v6;\n
            *((v7 + 4)) = 0;\n
            return v6;\n
        }\n
        else if (*(v6) >= *(*((v3 + 4))))\n
        {\n
            v7 = *((v3 + 4));\n
            v3 = v7;\n
        }\n
        else\n
        {\n
            *((v6 + 4)) = *((v3 + 4));\n
            *((v6 + 8)) = v3;\n
            *((*((v3 + 4)) + 8)) = v6;\n
            v7 = v3;\n
            *((v7 + 4)) = v6;\n
            return v3;\n
        }\n
    }\n
}\n
", "4211611:sub_40439b": null, "4211616:sub_4043a0": "extern struct_0 *g_40e100;\n
\n
int sub_4043a0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v3 += 4;\n
    v3 = v3 + 4095 & -0x1000;\n
    if (cgc_allocate(v3, 0, &v0, 0, 0))\n
    {\n
        sub_405570(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
        cgc__terminate(-1);\n
    }\n
    sub_407140(v0);\n
    *(v0) = v3 - 4;\n
    if (!g_40e100)\n
    {\n
        v4 = v0;\n
        g_40e100 = v4;\n
        return v0;\n
    }\n
    v4 = sub_404260(v0);\n
    return v4;\n
}\n
", "4211805:sub_40445d": null, "4211808:sub_404460": "int sub_404460(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = v3;\n
    v0 = 0;\n
    if (v3)\n
    {\n
        v0 = v3 - 4;\n
        v4 = sub_404260(v0);\n
    }\n
    return v4;\n
}\n
", "4211859:sub_404493": null, "4211872:sub_4044a0": "extern struct_0 *g_40e100;\n
\n
int sub_4044a0()\n
{\n
    unsigned int v0[3];  // [bp-0xc]\n
    unsigned int v1[3];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (cgc_allocate(0x1000, 0, &g_40e100, 0, 0))\n
    {\n
        sub_405570();\n
        cgc__terminate();\n
    }\n
    sub_407140(g_40e100);\n
    v1[0] = g_40e100;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4080;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4212058:sub_40455a": null, "4212064:sub_404560": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404560(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_1 *v3;  // eax, Other Possible Types: struct_2 *, unsigned int\n
\n
    v0 = &v1;\n
    if (!v2)\n
        return v2;\n
    if (v2->field_8)\n
        v2->field_8->field_4 = v2->field_4;\n
    v3 = v2;\n
    if (!v3->field_4)\n
        return v3;\n
    v3 = v2->field_4;\n
    v3->field_8 = v2->field_8;\n
}\n
", "4212148:sub_4045b4": null, "4212160:sub_4045c0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_0 *g_40e100;\n
\n
int sub_4045c0(unsigned int v5)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!g_40e100)\n
        sub_4044a0();\n
    for (v1 = g_40e100; v1; v1 = v1->field_4)\n
    {\n
        if (v1->field_0 >= v5)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        sub_4043a0(v5);\n
        v2 = sub_4045c0(v5);\n
        return v2;\n
    }\n
    sub_404560(v1);\n
    if (*(v1) - v5 < 12)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + v5;\n
    *(v0) = *(v1) - (v5 + 4);\n
    *(v1) = v5;\n
    sub_404260(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4212405:sub_4046b5": null, "4212416:sub_4046c0": "int sub_4046c0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_404720();\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    sub_407140(v1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212504:sub_404718": null, "4212512:sub_404720": "typedef struct struct_1 {\n
    char padding_0[4251904];\n
    struct struct_0 *field_40e100;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40e100[4];\n
\n
int sub_404720(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4045c0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if (g_40e100[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40e100[v2];\n
        g_40e100[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4045c0(v6);\n
    return v3;\n
}\n
", "4212768:sub_404820": "typedef struct struct_1 {\n
    char padding_0[4251904];\n
    struct struct_0 *field_40e100;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40e100[4];\n
\n
int sub_404720(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4045c0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if (g_40e100[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40e100[v2];\n
        g_40e100[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4045c0(v6);\n
    return v3;\n
}\n
", "4212948:sub_4048d4": null, "4212960:sub_4048e0": null, "4213168:sub_4049b0": "extern unsigned int g_40e300;\n
extern void* g_40e380;\n
\n
int sub_4049b0(unsigned int v5, unsigned int a0[1063105])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2[1063105];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[1063105];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 128;\n
    sub_407140(&g_40e300);\n
    g_40e380 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2[0] = 0; v2 < a0; v2 = &v2[0] + 1)\n
    {\n
        *((0x4 * v2 + &g_40e300)) = *((v5 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2[0] = v6;\n
        if (v2 >= 32)\n
            break;\n
        v1 = (&g_40e300)[&v2[0] + 1 & 31];\n
        *((0x4 * v2 + &g_40e300)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = &v2[0] + 1;\n
    }\n
    return v6;\n
}\n
", "4213365:sub_404a75": null, "4213376:sub_404a80": "int sub_404a80(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4049b0(&v2, 0x1);\n
}\n
", "4213409:sub_404aa1": null, "4213424:sub_404ab0": "extern char g_40e300;\n
extern struct_0 *g_40e380;\n
\n
int sub_404ab0()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = *((0x4 * g_40e380 + &g_40e300));\n
    v7 = *(&(&g_40e300)[4 * (&g_40e380->padding_0[3] & 31)]);\n
    v6 = *(&(&g_40e300)[4 * (&g_40e380->padding_0[24] & 31)]);\n
    v5 = *(&(&g_40e300)[4 * (&g_40e380->padding_0[10] & 31)]);\n
    v4 = *(&(&g_40e300)[4 * (&g_40e380->padding_0[31] & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *((0x4 * g_40e380 + &g_40e300)) = v1;\n
    *(&(&g_40e300)[4 * (&g_40e380->padding_0[31] & 31)]) = v0;\n
    g_40e380 = &g_40e380->padding_0[31] & 31;\n
    return v0;\n
}\n
", "4213684:sub_404bb4": null, "4213696:sub_404bc0": "int sub_404bc0(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 > a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v7 != a0)\n
    {\n
        v2 = a0 - v7 + 1;\n
        if (!v2)\n
        {\n
            v4 = sub_404ab0();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = sub_404ab0();\n
        } while (v3 >= v2 * v1);\n
        v0 = v7;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v7;\n
        return v4;\n
    }\n
}\n
", "4213872:sub_404c70": "int sub_404c70(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4213959:sub_404cc7": null, "4213968:sub_404cd0": "int sub_404cd0(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4214002:sub_404cf2": null, "4214016:sub_404d00": "int sub_404d00(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    if (*((v3 + 0x100)) >= 0x100)\n
    {\n
        for (v2 = v3; *((v3 + 0x100)) > 0; v2 = *(&v1) + v2)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(1, v2, *((v3 + 0x100))))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v1))\n
            {\n
                v8 = v3;\n
                v9 = *((v8 + 0x100)) - *(&v1);\n
                *((v8 + 0x100)) = v9;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v10 = v3;\n
    *(&v9) = *((v10 + 0x100));\n
    *((v10 + 0x100)) = v9 + 1;\n
    *((v3 + v9)) = a0;\n
    v4 = a1 + 1;\n
    return v4;\n
}\n
", "4214266:sub_404dfa": null, "4214272:sub_404e00": "int sub_404e00(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v5, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4214350:sub_404e4e": null, "4214352:sub_404e50": "int sub_404e50(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    v2 = sub_407100();\n
    while (true)\n
    {\n
        if (v1 != v2)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v7 + v1, v2 - v1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v3))\n
            {\n
                v1 = *(&v3) + v1;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            sub_404e00(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4214517:sub_404ef5": null, "4214528:sub_404f00": "int sub_404f00(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x130]\n
    char v1;  // [bp-0x12c]\n
    unsigned int v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x124]\n
    void* v4;  // [bp-0x120]\n
    unsigned int v5;  // [bp-0x11c]\n
    char v6;  // [bp-0x116]\n
    unsigned short v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v12 = &v13;\n
    v11 = v15;\n
    v10 = v16;\n
    v8 = sub_404d00;\n
    v7 = 0;\n
    v5 = &v6;\n
    v4 = 0;\n
    v0 = a0;\n
    v3 = sub_405020(v5, v8, v4, v14);\n
    v2 = &v6;\n
    while (true)\n
    {\n
        if (v7 <= 0)\n
        {\n
            v9 = v3;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v2, v7))\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
        else if (*(&v1))\n
        {\n
            v7 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
    }\n
    return v9;\n
}\n
", "4214805:sub_405015": null, "4214816:sub_405020": "int sub_405020(struct struct_0 **v6, struct struct_0 **a0, struct struct_0 **a1, struct struct_0 **a2, struct struct_0 **a3)\n
{\n
    struct struct_0 **<0x405020[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    struct struct_0 **v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x1c]\n
    struct struct_0 **v9;  // [bp+0x20]\n
    struct struct_0 **v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28]\n
    struct struct_0 **v12;  // [bp+0x2c]\n
    struct struct_0 **v13;  // [bp+0x30]\n
    unsigned int v14;  // [bp+0x34]\n
    char v15;  // [bp+0x39]\n
    char v16;  // [bp+0x3a]\n
    char v17;  // [bp+0x3b]\n
    struct struct_0 **v18;  // [bp+0x3c]\n
    struct struct_0 **v19;  // [bp+0x40]\n
    struct struct_0 **v20;  // [bp+0x48]\n
    struct struct_0 **v21;  // [bp+0x50]\n
    struct struct_0 **v22;  // [bp+0x54]\n
    struct struct_0 **v23;  // [bp+0x58]\n
    struct struct_0 **v24;  // [bp+0x5c]\n
    struct struct_0 **v25;  // [bp+0x60]\n
    struct struct_0 **v26;  // [bp+0x64]\n
    char v27;  // [bp+0x6b]\n
    struct struct_0 **v28;  // [bp+0x6c], Other Possible Types: unsigned int\n
    void* v29;  // [bp+0x70]\n
    struct struct_0 **v30;  // [bp+0x74], Other Possible Types: unsigned int\n
    struct struct_0 **v31;  // [bp+0x78], Other Possible Types: unsigned int\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    struct struct_0 **v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    struct struct_0 **v41;  // eax\n
\n
    v4 = &<0x405020[is_2]|Stack bp, 1 B>;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(a2))\n
            return a1;\n
        v27 = *(a2);\n
        a2 = a2 + 1;\n
        if (v27 != 36)\n
        {\n
            v32 = a0;\n
            v5 = v6;\n
            v6 = v27;\n
            a0 = a1;\n
            a1 = v32(v6, a0);\n
        }\n
        else\n
        {\n
            v28 = 0;\n
            v29 = 0;\n
            v30 = 0;\n
            v31 = 0;\n
            if (!*(a2))\n
                return a1;\n
            if (*(a2) != 36)\n
            {\n
                if (*(a2) == 45)\n
                {\n
                    v31 |= 1;\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v5 = *(a2);\n
                if (sub_401080(*(a2)))\n
                {\n
                    if (*(a2) == 48)\n
                        v31 |= 4;\n
                    v26 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401080(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v26;\n
                    v30 = sub_406a90();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                if (*(a2) == 46)\n
                {\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                    v25 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401080(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v25;\n
                    v28 = sub_406a90();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v14 = *(a2) - 88;\n
                switch (v14)\n
                {\n
                case 0:\n
                    v31 |= 8;\n
                    v37 = a3;\n
                    a3 = v37 + 1;\n
                    v21 = &*(v37)->field_0;\n
                    v10 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v21;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v10;\n
                    a1 = sub_405770(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 11:\n
                    v41 = a3;\n
                    a3 = v41 + 1;\n
                    v17 = *(v41);\n
                    v15 = v17;\n
                    v16 = 0;\n
                    v9 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = &v15;\n
                    a2 = v30;\n
                    a3 = 0;\n
                    v7 = v9;\n
                    a1 = sub_406840(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 12:\n
                    v35 = a3;\n
                    a3 = v35 + 1;\n
                    v23 = &*(v35)->field_0;\n
                    v12 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v23;\n
                    a2 = 10;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v12;\n
                    a1 = sub_405770(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 13:\n
                    v31 |= 16;\n
                    v39 = a3;\n
                    a3 = v39 + 2;\n
                    *(&v19) = *(&v39);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v19);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_406590(v6, a0, a1);\n
                    break;\n
                case 14:\n
                    v38 = a3;\n
                    a3 = v38 + 2;\n
                    *(&v20) = *(&v38);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v20);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_406590(v6, a0, a1);\n
                    break;\n
                case 22:\n
                    v40 = a3;\n
                    a3 = v40 + 1;\n
                    v18 = &*(v40)->field_0;\n
                    *(v18) = a1;\n
                    break;\n
                case 27:\n
                    v34 = a3;\n
                    a3 = v34 + 1;\n
                    v24 = &*(v34)->field_0;\n
                    v13 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v24;\n
                    a2 = v30;\n
                    a3 = v28;\n
                    v7 = v13;\n
                    a1 = sub_406840(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 32:\n
                    v36 = a3;\n
                    a3 = v36 + 1;\n
                    v22 = &*(v36)->field_0;\n
                    v11 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v22;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v11;\n
                    a1 = sub_405770(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                a2 = a2 + 1;\n
            }\n
            else\n
            {\n
                v33 = a0;\n
                v5 = v6;\n
                v6 = 36;\n
                a0 = a1;\n
                a1 = v33(v6, a0);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4216171:sub_40556b": null, "4216176:sub_405570": "int sub_405570(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_404f00(v4, v1);\n
    return v0;\n
}\n
", "4216220:sub_40559c": null, "4216224:sub_4055a0": "int sub_4055a0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
\n
    v4 = &v5;\n
    v3 = v8;\n
    v2 = &v7;\n
    v0 = v2;\n
    v1 = sub_4055e0(v6, a0);\n
    v9 = v3;\n
    return v1;\n
}\n
", "4216279:sub_4055d7": null, "4216288:sub_4055e0": "int sub_4055e0(unsigned int v8, void* **a0, void* **a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* **v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
\n
    v6 = &v7;\n
    v5 = v9;\n
    v4 = v10;\n
    v3 = &sub_404cd0;\n
    v2 = v8;\n
    v1 = 0;\n
    v0 = sub_405020(v2, v3, v1, a0, a1);\n
    v3(v2, 0);\n
    v11 = v4;\n
    v12 = v5;\n
    return v0;\n
}\n
", "4216407:sub_405657": null, "4216416:sub_405660": "int sub_405660(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m a0 >> 32;\n
        v5 = (0 CONCAT v5) /m a0;\n
        if (a0 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a1[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a1[v9] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4216688:sub_405770": "int sub_405770(unsigned int v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    struct struct_0 **v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v3 = 1;\n
        a2 = -(a2);\n
        v5 += 1;\n
    }\n
    v2 = sub_405660(a2, a3, &v1, a6);\n
    v5 = v2 + v5;\n
    if (a4 > 0 && v5 < a4)\n
        v4 = a4 - v5;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < a5)\n
            v4 = a5 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v8, 45);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v8, 48);\n
            else\n
                a1 = a0(v8, 32);\n
        }\n
    }\n
    if (v3)\n
    {\n
        a1 = a0(v8, 45);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        a1 = a0(v8, *(&v0 + v0));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v10 = v4;\n
        v4 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        a1 = a0(v8, 32);\n
    }\n
    return a1;\n
}\n
", "4217306:sub_4059da": null, "4217312:sub_4059e0": null, "4220295:sub_406587": null, "4220304:sub_406590": "int sub_406590()\n
{\n
    int <0x406590[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned long v6;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xc]\n
    unsigned int v10;  // [bp+0x10], Other Possible Types: char\n
    unsigned int v11;  // [bp+0x14]\n
    char v12;  // [bp+0x18]\n
    char v13;  // [bp+0x1c]\n
    char v14;  // [bp+0x20]\n
    unsigned int v15;  // [bp+0x38]\n
    char v16;  // [bp+0x3f]\n
    unsigned int v17;  // [bp+0x40]\n
    unsigned int v18;  // [bp+0x44], Other Possible Types: char\n
    unsigned long v19;  // [bp+0x48], Other Possible Types: char\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ebp\n
\n
    v5 = &<0x406590[is_2]|Stack bp, 1 B>;\n
    *(&v4) = *(&v10);\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (((CmpF(0, *(&v4)) & 69 | ((CmpF(0, *(&v4)) & 69) >> 6)) & 1) != 1)\n
    {\n
        *(&v19) = (0 CONCAT *(&v19)) ^ 0x80000000000000008000000000000000;\n
        v16 = 1;\n
        v18 = *(&v18) + 1;\n
    }\n
    if (!*(&v13))\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = 6;\n
    }\n
    else\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = *(&v13);\n
    }\n
    v9 = &v12;\n
    v10 = *(&v14);\n
    v15 = sub_4059e0();\n
    v18 = v15 + v18;\n
    if (*(&v12) > 0 && v18 < *(&v12))\n
        v17 = *(&v12) - v18;\n
    if (!(*(&v14) & 1))\n
    {\n
        if (v16 && v17 > 0 && (*(&v14) & 4))\n
        {\n
            v20 = v8;\n
            v6 = (&v6)[1];\n
            v7 = 45;\n
            v8 = v9;\n
            v9 = v20(v7, v8);\n
            v16 = 0;\n
        }\n
        while (true)\n
        {\n
            v21 = v17;\n
            v17 = v21 - 1;\n
            if (v21 <= 0)\n
                break;\n
            if ((*(&v14) & 4))\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 48;\n
            }\n
            else\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 32;\n
            }\n
            v8 = v9;\n
            v9 = v22(v7, v8);\n
        }\n
    }\n
    if (v16)\n
    {\n
        v23 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 45;\n
        v8 = v9;\n
        v9 = v23(v7, v8);\n
        v16 = 0;\n
    }\n
    for (v11 = 0; v11 < v15; v11 += 1)\n
    {\n
        v24 = v8;\n
        v6 = (&v6)[1];\n
        v7 = (&v12)[v11];\n
        v8 = v9;\n
        v9 = v24(v7, v8);\n
    }\n
    if (!(*(&v14) & 1))\n
    {\n
        v27 = v5;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v25 = v17;\n
        v17 = v25 - 1;\n
        if (v25 <= 0)\n
            break;\n
        v26 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 32;\n
        v8 = v9;\n
        v9 = v26(v7, v8);\n
    }\n
    v27 = v5;\n
    return;\n
}\n
", "4220991:sub_40683f": null, "4220992:sub_406840": "int sub_406840(unsigned int v6, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // edx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v4 = &v5; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v6, *(a2));\n
        }\n
        v3 = a1;\n
        return v3;\n
    }\n
    v2 = sub_407100();\n
    v1 = 0;\n
    if (a4 > 0 && v2 > a4)\n
        v2 = a4;\n
    if (a3 > 0 && v2 < a3)\n
        v1 = a3 - v2;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v7 = v1;\n
            v1 = v7 - 1;\n
            if (v7 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v9 = a2;\n
        a2 = v9 + 1;\n
        v10 = *(v9);\n
        v0 = a1;\n
        a1 = a0(v6, v10);\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v1;\n
            v1 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v6, 32);\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4221504:sub_406a40": "int sub_406a40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404bc0(0, 2147483646);\n
}\n
", "4221537:sub_406a61": null, "4221552:sub_406a70": "int sub_406a70(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404a80(v2);\n
}\n
", "4221575:sub_406a87": null, "4221584:sub_406a90": "int sub_406a90(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    for (v0 = 0; sub_4012a0(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = 1;\n
        v5 += 1;\n
    }\n
    for (; sub_401080(*(v5)); v1 = v1 * 10 + *(v6) - 48)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
    }\n
    if (v0)\n
    {\n
        v2 = -(v1);\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4221798:sub_406b66": null, "4221808:sub_406b70": "int sub_406b70(char *v5)\n
{\n
    int <0x406b70[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x1c]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x18]\n
    unsigned long long v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    char *v4;  // [bp+0x0]\n
    char *v6;  // [bp+0x7], Other Possible Types: char\n
    unsigned long v7;  // [bp+0x8]\n
    char *v8;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char v9;  // [bp+0x14]\n
    unsigned long v10;  // [bp+0x18]\n
    unsigned long v11;  // [bp+0x20]\n
    char *v12;  // eax, Other Possible Types: unsigned int, void*\n
\n
    v3 = &<0x406b70[is_2]|Stack bp, 1 B>;\n
    v2 = 0;\n
    v1 = v5;\n
    for (v0 = v5; *(*(&v8)); v8 = *(&v8) + 1)\n
    {\n
        if (*(*(&v8)) == 46)\n
        {\n
            *(v8) = 0;\n
            v8 = *(&v8) + 1;\n
            break;\n
        }\n
    }\n
    v4 = *(&v9);\n
    *(&v11) = sub_406a90(*(&v9));\n
    v12 = *(v8);\n
    if (v12)\n
    {\n
        v4 = v8;\n
        *(&v10) = sub_406a90(v8);\n
        while (true)\n
        {\n
            v12 = 0;\n
            *(&v6) = 0;\n
            if (v8)\n
            {\n
                v4 = *(v8);\n
                v12 = sub_401080(*(v8));\n
                v6 = v12;\n
            }\n
            *(&v12) = v6;\n
            if (!(v6 & 1))\n
                break;\n
            tmp_12 = DivV(tmp_14, tmp_13);\n
            *(&v10) = tmp_12;\n
            v8 = *(&v8) + 1;\n
        }\n
    }\n
    *(&v7) = (0 CONCAT *(&v11)) + (0 CONCAT *(&v10));\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v12;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v12;\n
}\n
", "4222108:sub_406c9c": null, "4222112:sub_406ca0": "int sub_406ca0(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); *(v6) = tmp_19)\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    *(v3) = 0;\n
    return v0;\n
}\n
", "4222188:sub_406cec": null, "4222192:sub_406cf0": "int sub_406cf0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v3] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v3] = 0;\n
    }\n
    return v3;\n
}\n
", "4222329:sub_406d79": null, "4222336:sub_406d80": "int sub_406d80(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = *(a0);\n
        v3 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4222472:sub_406e08": null, "4222480:sub_406e10": "int sub_406e10(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; sub_4012a0(v8[0]); v8 = &v8[1]);\n
    if (*(v8) == 45)\n
    {\n
        v3 = 1;\n
        *(&v8) = &v8[1];\n
    }\n
    else if (*(v8) == 43)\n
    {\n
        *(&v8) = &v8[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_406f17;\n
    if (*(v8) != 48)\n
    {\n
LABEL_406f17:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_406f6a;\n
        if (*(v8) == 48)\n
        {\n
            if (*((v8 + 1)) != 98 && !(*((v8 + 1)) == 66))\n
                goto LABEL_406f6a;\n
            *(&v8) = v8 + 2;\n
            a1 = 2;\n
        }\n
LABEL_406f6a:\n
    }\n
    else\n
    {\n
        if (*((v8 + 1)) != 120 && !(*((v8 + 1)) == 88))\n
            goto LABEL_406f17;\n
        *(&v8) = v8 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v8) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = 0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m a1 >> 32;\n
    v2 = (0 CONCAT v2) /m a1;\n
    while (*(v8))\n
    {\n
        v0 = *(v8);\n
        if (sub_401080(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!sub_401140(v0))\n
                break;\n
            if (sub_4010c0(v0))\n
                v0 -= 55;\n
            else\n
                v0 -= 87;\n
        }\n
        if (v0 >= a1)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_407099:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_40709e:\n
            v4 *= a1;\n
            v4 = v0 + v4;\n
            v8 = &v8[1];\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_40709e;\n
            goto LABEL_407099;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v8;\n
    if (v3)\n
    {\n
        v5 = -(v4);\n
        return v5;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4223232:sub_407100": "int sub_407100(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4223291:sub_40713b": null, "4223296:sub_407140": "int sub_407140(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ecx\n
\n
    for (v0 = &v1; a0; v3[1 + v2] = 0)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
    }\n
    *((v2 + a0)) = 0;\n
    return v2;\n
}\n
", "4223351:sub_407177": null, "4223360:sub_407180": "int sub_407180(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v5) = v0;\n
        v5 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(v6) = v1;\n
    }\n
    return v2;\n
}\n
", "4223515:sub_40721b": null, "4223520:sub_407220": "int sub_407220(char *v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_407100(v5))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v5[v1] == a0)\n
        {\n
            v2 = &v5[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4223658:sub_4072aa": null, "4223664:sub_4072b0": "extern struct_0 *g_40e488;\n
\n
int sub_4072b0(char *v7, char *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v7)\n
    {\n
        if (g_40e488)\n
        {\n
            v7 = g_40e488;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (sub_407220(a0, *(v7)))\n
            v0 = *(v7);\n
        if (!(v0 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (!*(v7))\n
    {\n
        g_40e488 = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = sub_407100(v7);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            g_40e488 = 0;\n
            v4 = v7;\n
            return v4;\n
        }\n
        if (sub_407220(a0, *((v7 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v7 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (sub_407220(a0, *((v7 + v2))))\n
        {\n
            *((v7 + v2)) = 0;\n
        }\n
        else\n
        {\n
            g_40e488 = v7 + v2;\n
            v4 = v7;\n
            return v4;\n
        }\n
    }\n
    if (v2 == v1)\n
        g_40e488 = 0;\n
    v4 = v7;\n
    return v4;\n
}\n
", "4224134:sub_407486": null, "4224144:sub_407490": "int sub_407490(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v4 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v4 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v4))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v4) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v4) >= *(a0))\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v4) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v4) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4224494:sub_4075ee": null, "4224496:sub_4075f0": "int sub_4075f0(char *v6, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = sub_407100(v6);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= sub_407100(a0))\n
                break;\n
            v6[v2] = a0[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v6[v2] = 0;\n
        v3 = v6;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4224656:sub_407690": "int sub_407690(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v6];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4224816:sub_407730": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407730()\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14]\n
    char v3;  // [bp-0xe]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
    void* v6;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    v5 = 2;\n
    v2 = 0;\n
    for (v1 = 0; v5; v5 -= v2)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, &(&v3)[v1], v5))\n
        {\n
            sub_405570(\"[ERROR] Failed to read data\\n
\");\n
            cgc__terminate();\n
        }\n
        if (!v2)\n
        {\n
            sub_405570(\"[ERROR] Error with reading selection\\n
\");\n
            cgc__terminate();\n
        }\n
        v1 = v2 + v1;\n
    }\n
    if (!sub_401080(v3))\n
    {\n
        sub_405570(\"[ERROR] Selection must be a digit\\n
\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v4 == 10)\n
    {\n
        v5 = sub_406a90(&v3);\n
        v6 = v5;\n
        return v6;\n
    }\n
    else\n
    {\n
        sub_405570(\"[ERROR] Only single digits allowed in the selection\\n
\");\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4225101:sub_40784d": null, "4225104:sub_407850": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407850(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v3 < a0)\n
        {\n
            v0 = &v2;\n
            if (cgc_receive(0, &v1, 1))\n
            {\n
                sub_405570(\"[ERROR] Failed to read string\\n
\");\n
                cgc__terminate();\n
            }\n
            if (!v2)\n
            {\n
                sub_405570(\"[ERROR] String read failure\\n
\");\n
                cgc__terminate();\n
            }\n
            if (v1 == 10)\n
            {\n
                v4 = v3;\n
                return v4;\n
            }\n
            *((v7 + v3)) = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4225343:sub_40793f": null, "4225344:sub_407940": "extern unsigned int g_40e48c;\n
extern unsigned int g_40e490;\n
\n
int sub_407940()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *((g_40e48c + (g_40e490 >> 2) * 4));\n
    g_40e490 = g_40e490 + 4;\n
    return v0;\n
}\n
", "4225389:sub_40796d": null, "4225392:sub_407970": "extern unsigned int g_40c663;\n
extern unsigned int g_40c668;\n
extern unsigned int g_40c66d;\n
extern unsigned int g_40c672;\n
extern unsigned int g_40c677;\n
extern unsigned int g_40c67c;\n
extern unsigned int g_40c681;\n
extern unsigned int g_40c686;\n
extern unsigned int g_40c68b;\n
extern unsigned int g_40c690;\n
extern unsigned int g_40c695;\n
extern unsigned int g_40c69a;\n
extern unsigned int g_40c69f;\n
extern unsigned int g_40c6a4;\n
extern unsigned int g_40c6a9;\n
extern unsigned int g_40c6ae;\n
extern unsigned int g_40c6b3;\n
extern unsigned int g_40c6b8;\n
extern unsigned int g_40c6bd;\n
extern unsigned int g_40c6c2;\n
extern struct_0 *g_40e48c;\n
\n
int sub_407970()\n
{\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    void* v12;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x4]\n
    char v19;  // [bp+0x0]\n
    unsigned int v21;  // edx\n
\n
    v18 = &v19;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = g_40e48c->field_0;\n
    v17 = v10 - (v10 * 357913942 >> 32) * 4 * 3;\n
    v16 = 2016;\n
    v11 = v17;\n
    if (v11 == 1)\n
    {\n
        v15 = (g_40e48c->field_a >> 31 CONCAT g_40e48c->field_a) /m 29 >> 32;\n
        goto LABEL_407a67;\n
    }\n
    if (v11 != 3 && v11 != 6 && v11 != 9 && v11 != 11)\n
    {\n
        v15 = (g_40e48c->field_a >> 31 CONCAT g_40e48c->field_a) /m 31 >> 32;\n
LABEL_407a67:\n
        v5 = g_40e48c->field_14;\n
        v14 = v5 - (v5 * 178956971 >> 32) * 8 * 3;\n
        v6 = g_40e48c->field_1e;\n
        v13 = v6 - (v6 * 71582789 >> 32) * 60;\n
        v7 = g_40e48c->field_28;\n
        v12 = v7 - (v7 * 71582789 >> 32) * 60;\n
        sub_405570(\"Today: \");\n
        v8 = g_40e48c->field_32;\n
        v21 = v8 * 613566757 >> 32;\n
        v9 = v8 + v21 - v21 * 8;\n
        if (!(v9 <= 6))\n
            goto LABEL_0x407b83;\n
        goto *(((stack_base)[48] * 4 + 4244704));\n
    }\n
    v15 = (g_40e48c->field_a >> 31 CONCAT g_40e48c->field_a) /m 30 >> 32;\n
    goto LABEL_407a67;\n
}\n
", "4226222:sub_407cae": null, "4226224:sub_407cb0": "typedef struct struct_0 {\n
    char padding_0[128];\n
    unsigned int field_80;\n
} struct_0;\n
\n
int sub_407cb0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v0 = sub_404720(136);\n
    if (!v0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    sub_407140(v0, 0x88);\n
    sub_405570(\"Enter Instruction: \");\n
    if (!sub_407850(v0, 127))\n
    {\n
        sub_404460(v0);\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (sub_407490(v0, \"done\"))\n
    {\n
        v0->field_80 = sub_407940();\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        sub_404460(v0);\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4226440:sub_407d88": null, "4226448:sub_407d90": "int sub_407d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405570(\"1) Add Recipe\\n
\");\n
    sub_405570(\"2) Remove Recipe\\n
\");\n
    sub_405570(\"3) List Recipe\\n
\");\n
    sub_405570(\"4) List All\\n
\");\n
    sub_405570(\"5) Print Name\\n
\");\n
    sub_405570(\"6) Recipe Costs\\n
\");\n
    sub_405570(\"7) Leave Menu\\n
\");\n
    return sub_405570(\"-> \");\n
}\n
", "4226569:sub_407e09": null, "4226576:sub_407e10": null, "4227318:sub_4080f6": null, "4227328:sub_408100": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
int sub_408100(struct_0 *v2, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (a0 && v2)\n
    {\n
        a0->field_28 = v2->field_14;\n
        v2->field_14 = a0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4227385:sub_408139": null, "4227392:sub_408140": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[32];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
int sub_408140(struct_0 *v4, unsigned long long *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (v4 && a0)\n
    {\n
        v0 = v4;\n
        while (true)\n
        {\n
            if (!v0)\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
            else if (sub_407490(&v0->padding_8[12], &a0[2] + 4))\n
            {\n
                v0 = v0->field_28;\n
            }\n
            else\n
            {\n
                sub_405570(\"Ingredient already exists. Adding the additional amount.\");\n
                v5 = v0;\n
                STORE(addr=eax<4>, data=Conv(128->64, ((0x0<64> CONCAT Load(addr=Load(addr=stack_base+8, size=4, endness=Iend_LE), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=eax<4>, size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
                v1 = 1;\n
                return v1;\n
            }\n
        }\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4227565:sub_4081ed": null, "4227568:sub_4081f0": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
    char padding_1c[104];\n
    unsigned int field_84;\n
} struct_0;\n
\n
int sub_4081f0(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    if (a0 && v3)\n
    {\n
        if (v3->field_18)\n
        {\n
            for (v0 = v3->field_18; v0->field_84; v0 = v0->field_84);\n
            v5 = v0;\n
            *((v5 + 132)) = a0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v5 = v3;\n
            *((v5 + 24)) = a0;\n
            return v3;\n
        }\n
    }\n
    return v3;\n
}\n
", "4227696:sub_408270": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    void* field_14;\n
} struct_0;\n
\n
extern char g_40f094;\n
\n
int sub_408270()\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int [6]\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4[0] = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((16 + &g_40f094 + 0x1c * v5)))\n
            v0 = v5 < 0x200;\n
        if (!(v0 & 1))\n
            break;\n
        v5 += 1;\n
    }\n
    if (v5 == 0x200)\n
    {\n
        v9 = sub_405570(\"[ERROR] Recipe List is full\\n
\");\n
        return v9;\n
    }\n
    v4 = &(&g_40f094)[28 * v5];\n
    sub_407140(v4, 0x1c);\n
    sub_405570(\"Enter recipe name: \");\n
    if (!sub_407850(v4, 15))\n
    {\n
        v9 = sub_405570(\"[ERROR] Invalid recipe name\\n
\");\n
        return v9;\n
    }\n
    v1 = v5;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 >= 0x200)\n
        {\n
            v4->field_10 = sub_407940();\n
            do\n
            {\n
                v3 = sub_407e10();\n
                if (!sub_408140(v4->field_14, v3))\n
                    sub_408100(v4, v3);\n
                else\n
                    sub_404460(v3);\n
            } while (v3);\n
            do\n
            {\n
                v2 = sub_407cb0();\n
                v9 = sub_4081f0(v4, v2);\n
            } while (v2);\n
            return v9;\n
        }\n
        if (v5 != v1 && *((16 + &g_40f094 + 0x1c * v5)) && !sub_407490(&(&g_40f094)[28 * v5], &(&g_40f094)[28 * v1]))\n
        {\n
            sub_405570(\"[ERROR] Recipe already exists with that name.\\n
\");\n
            v9 = sub_407140(v4, 0x10);\n
            return v9;\n
        }\n
        v5 += 1;\n
    }\n
}\n
", "4228277:sub_4084b5": null, "4228288:sub_4084c0": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    char padding_14[20];\n
    struct struct_1 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[132];\n
    struct struct_0 *field_84;\n
} struct_0;\n
\n
extern char g_40f094;\n
\n
int sub_4084c0(unsigned int v7)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 1;\n
    if (0x200 <= v7)\n
    {\n
        v0 = v7;\n
        v8 = sub_405570(\"[ERROR] Invalid index: $d\\n
\");\n
        return v8;\n
    }\n
    else if (*(&(&g_40f094)[16 + 28 * v7]))\n
    {\n
        v0 = &(&g_40f094)[28 * v7];\n
        sub_405570(\"Name: $s\\n
\");\n
        sub_405570(\"Ingredients:\\n
\");\n
        for (v4 = *(&(&g_40f094)[20 + 28 * v7]); v4; v4 = v4->field_28)\n
        {\n
            *(&v0) = *(v4);\n
            sub_405570(\"\\t$f \");\n
            if (*((v4 + 16)) == 1)\n
                sub_405570(\"oz\\t\");\n
            else\n
                sub_405570(\"g\\t\");\n
            v0 = &v4->padding_14;\n
            sub_405570(\"$s\\n
\");\n
        }\n
        v3 = *(&(&g_40f094)[24 + 28 * v7]);\n
        sub_405570(\"\\n
Instructions:\\n
\");\n
        for (; v3; v3 = v3->field_84)\n
        {\n
            v0 = v2;\n
            v1 = v3;\n
            sub_405570(\"\\t$d) $s\\n
\");\n
            v2 = &v2->padding_0[1];\n
        }\n
        v8 = sub_405570(\"\\n
\\n
\");\n
        return v8;\n
    }\n
    else\n
    {\n
        v0 = v7 + 1;\n
        v8 = sub_405570(\"[ERROR] Empty recipe: $d\\n
\");\n
        return v8;\n
    }\n
}\n
", "4228727:sub_408677": null, "4228736:sub_408680": "int sub_408680()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_407140(&v1, 0x5);\n
    sub_405570(\"Recipe Index [1..512]: \");\n
    v5 = sub_407850(&v1, 5);\n
    if (!v5)\n
        return v5;\n
    v0 = sub_406a90(&v1);\n
    if (v0 > 0 && 0x200 >= v0)\n
    {\n
        v5 = sub_4084c0(v0 - 1);\n
        return v5;\n
    }\n
    v5 = sub_405570(\"[ERROR] Must be between 1 and 512\\n
\");\n
    return v5;\n
}\n
", "4228891:sub_40871b": null, "4228896:sub_408720": "extern char g_40f094;\n
\n
int sub_408720()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    for (v1 = 0; v1 < 0x200; v1 += 1)\n
    {\n
        if (*(&(&g_40f094)[16 + 28 * v1]))\n
        {\n
            v0 = v1 + 1;\n
            sub_405570(\"Index: $d\\n
\");\n
            sub_4084c0(v1);\n
        }\n
    }\n
    return v1 + 1;\n
}\n
", "4229015:sub_408797": null, "4229024:sub_4087a0": "extern char g_40f094;\n
\n
int sub_4087a0()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_407140(&v1, 0x4);\n
    sub_408720();\n
    sub_405570(\"Recipe Index [1..512]: \");\n
    v5 = sub_407850(&v1, 4);\n
    if (!v5)\n
        return v5;\n
    v0 = sub_406a90(&v1);\n
    if (v0 > 0 && 0x200 >= v0)\n
    {\n
        if (!*(&(&g_40f094)[12 + 28 * v0]))\n
        {\n
            v5 = sub_405570(\"[ERROR] Empty recipe\\n
\");\n
            return v5;\n
        }\n
        v5 = sub_407140(&(&g_40f094)[28 + 28 * v0], 0x1c);\n
        return v5;\n
    }\n
    v5 = sub_405570(\"[ERROR] Must be between 1 and 512\\n
\");\n
    return v5;\n
}\n
", "4229259:sub_40888b": null, "4229264:sub_408890": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char padding_10[24];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char g_40f094;\n
\n
int sub_408890()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned long long v3;  // [bp-0xc]\n
    struct_1 *v4;  // [bp-0x4]\n
    unsigned int v5;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v7;  // [bp+0x8]\n
    unsigned long v8;  // [bp+0xc]\n
    struct_0 *v9;  // [bp+0x18], Other Possible Types: unsigned int\n
    void* v10;  // [bp+0x1c], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp+0x20], Other Possible Types: unsigned long long\n
    unsigned int v12;  // eax\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = \"Recipe Costs:\\n
\";\n
    v12 = sub_405570(*(&v5));\n
    for (v10 = 0; v10 < 0x200; v10 = v12)\n
    {\n
        v11 = 0;\n
        if (*((16 + &g_40f094 + 0x1c * v10)))\n
        {\n
            for (v9 = *((20 + &g_40f094 + 0x1c * v10)); v9; v9 = v9->field_28)\n
            {\n
                *(&v11) = (0 CONCAT v9->field_8) * (0 CONCAT v9->field_0) + (0 CONCAT v11);\n
            }\n
            v5 = \"\\t$d) $s - $$.5f\\n
\";\n
            v6 = v10 + 1;\n
            v7 = &g_40f094 + 0x1c * v10;\n
            *(&v8) = *(&v11);\n
            sub_405570(\"\\t$d) $s - $$.5f\\n
\");\n
        }\n
        v12 = v10 + 1;\n
    }\n
    return v12;\n
}\n
", "4229544:sub_4089a8": null, "4229552:sub_4089b0": "extern char g_40f094;\n
\n
int sub_4089b0()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_407140(&v1, 0x5);\n
    sub_405570(\"Recipe Index [1..512]: \");\n
    v5 = sub_407850(&v1, 5);\n
    if (!v5)\n
        return v5;\n
    v0 = sub_406a90(&v1);\n
    if (0x200 < v0)\n
    {\n
        v5 = sub_405570(\"[ERROR] Invalid index: $d\\n
\");\n
        return v5;\n
    }\n
    else if (!*(&(&g_40f094)[12 + 28 * v0]))\n
    {\n
        v5 = sub_405570(\"[ERROR] Empty recipe: $d\\n
\");\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = sub_405570(\"Single Name: $s\\n
\");\n
        return v5;\n
    }\n
}\n
", "4229788:sub_408a9c": null, "4229792:sub_408aa0": "int sub_408aa0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        sub_407d90();\n
        v1 = sub_407730();\n
        v0 = v1 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_408270();\n
            break;\n
        case 1:\n
            sub_4087a0();\n
            break;\n
        case 2:\n
            sub_408680();\n
            break;\n
        case 3:\n
            sub_408720();\n
            break;\n
        case 4:\n
            sub_4089b0();\n
            break;\n
        case 5:\n
            sub_408890();\n
            break;\n
        case 6:\n
            return sub_405570(\"Leave\\n
\");\n
        default:\n
            sub_405570(\"Invalid selection.\\n
\");\n
        }\n
    }\n
}\n
", "4229944:sub_408b38": null, "4229952:sub_408b40": "int sub_408b40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405570(\"1) Create Pantry\\n
\");\n
    sub_405570(\"2) Delete Pantry\\n
\");\n
    sub_405570(\"3) Print Pantry\\n
\");\n
    sub_405570(\"4) Print All Pantries\\n
\");\n
    sub_405570(\"5) Update Pantry\\n
\");\n
    sub_405570(\"6) Leave Menu\\n
\");\n
    return sub_405570(\"-> \");\n
}\n
", "4230059:sub_408bab": null, "4230064:sub_408bb0": "extern unsigned int g_40e48c;\n
extern void* g_40e490;\n
extern unsigned int g_40e494;\n
extern unsigned int g_40f094;\n
\n
int sub_408bb0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407140(&g_40e494, 0xc00);\n
    sub_407140(&g_40f094, 0x3800);\n
    g_40e490 = 0;\n
    g_40e48c = v2;\n
    return v2;\n
}\n
", "4230145:sub_408c01": null, "4230160:sub_408c10": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
int sub_408c10(struct_0 *v2, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (a0 && v2)\n
    {\n
        a0->field_28 = v2->field_14;\n
        v2->field_14 = a0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4230217:sub_408c49": null, "4230224:sub_408c50": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    char padding_14[20];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char g_40e494;\n
\n
int sub_408c50(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 1;\n
    if (128 <= v5)\n
    {\n
        v0 = v5;\n
        v6 = sub_405570(\"[ERROR] Invalid index: $d\\n
\");\n
        return v6;\n
    }\n
    else if (*(&(&g_40e494)[16 + 24 * v5]))\n
    {\n
        v0 = &(&g_40e494)[24 * v5];\n
        sub_405570(\"Name: $s\\n
\");\n
        sub_405570(\"Item:\\n
\");\n
        for (v2 = *(&(&g_40e494)[20 + 24 * v5]); v2; v2 = v2->field_28)\n
        {\n
            *(&v0) = v2->field_0;\n
            sub_405570(\"\\t$f \");\n
            if (v2->field_10 != 1)\n
                sub_405570(\"g\\t\");\n
            else\n
                sub_405570(\"oz\\t\");\n
            v0 = &v2->padding_14;\n
            sub_405570(\"$s\\n
\");\n
        }\n
        v6 = sub_405570(\"\\n
\\n
\");\n
        return v6;\n
    }\n
    else\n
    {\n
        v0 = v5 + 1;\n
        v6 = sub_405570(\"[ERROR] Empty pantry: $d\\n
\");\n
        return v6;\n
    }\n
}\n
", "4230540:sub_408d8c": null, "4230544:sub_408d90": "int sub_408d90()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_407140(&v1, 0x4);\n
    sub_405570(\"Pantry Index [1..128]: \");\n
    v5 = sub_407850(&v1, 4);\n
    if (!v5)\n
        return v5;\n
    v0 = sub_406a90(&v1);\n
    if (v0 > 0 && 128 >= v0)\n
    {\n
        v5 = sub_408c50(v0 - 1);\n
        return v5;\n
    }\n
    v5 = sub_405570(\"[ERROR] Must be between 1 and 128\\n
\");\n
    return v5;\n
}\n
", "4230699:sub_408e2b": null, "4230704:sub_408e30": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    void* field_14;\n
} struct_0;\n
\n
extern char g_40e494;\n
\n
int sub_408e30()\n
{\n
    char v0;  // [bp-0x15]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int [6]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3[0] = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((16 + &g_40e494 + 0x18 * v4)))\n
            v0 = v4 < 128;\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (v4 == 128)\n
    {\n
        v8 = sub_405570(\"[ERROR] Pantry List is full\\n
\");\n
        return v8;\n
    }\n
    v3 = &(&g_40e494)[24 * v4];\n
    sub_407140(v3, 0x18);\n
    sub_405570(\"Enter pantry name: \");\n
    if (!sub_407850(v3, 15))\n
    {\n
        v8 = sub_405570(\"[ERROR] Invalid pantry name\\n
\");\n
        return v8;\n
    }\n
    v1 = v4;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 < 128)\n
        {\n
            if (v4 != v1 && *((16 + &g_40e494 + 0x18 * v4)) && !sub_407490(&g_40e494 + 0x18 * v4, &(&g_40e494)[24 * v1]))\n
            {\n
                sub_405570(\"[ERROR] Pantry already exists with that name.\\n
\");\n
                v8 = sub_407140(v3, 0x10);\n
                return v8;\n
            }\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v3->field_10 = sub_407940();\n
            do\n
            {\n
                v2 = sub_407e10();\n
                if (!sub_408140(v3->field_14, v2))\n
                    v8 = sub_408c10(v3, v2);\n
                else\n
                    v8 = sub_404460(v2);\n
            } while (v2);\n
            return v8;\n
        }\n
    }\n
}\n
", "4231217:sub_409031": null, "4231232:sub_409040": "extern char g_40e494;\n
\n
int sub_409040()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    for (v1 = 0; v1 < 128; v1 += 1)\n
    {\n
        if (*(&(&g_40e494)[16 + 24 * v1]))\n
        {\n
            v0 = v1 + 1;\n
            sub_405570(\"Index: $d\\n
\");\n
            sub_408c50(v1);\n
        }\n
    }\n
    return v1 + 1;\n
}\n
", "4231346:sub_4090b2": null, "4231360:sub_4090c0": "extern char g_40e494;\n
\n
int sub_4090c0()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_407140(&v1, 0x4);\n
    sub_409040();\n
    sub_405570(\"Pantry Index [1..128]: \");\n
    v5 = sub_407850(&v1, 4);\n
    if (!v5)\n
        return v5;\n
    v0 = sub_406a90(&v1);\n
    if (v0 > 0 && 128 >= v0)\n
    {\n
        if (!*(&(&g_40e494)[8 + 24 * v0]))\n
        {\n
            v5 = sub_405570(\"[ERROR] Empty pantry\\n
\");\n
            return v5;\n
        }\n
        v5 = sub_407140(&(&g_40e494)[24 + 24 * v0], 0x18);\n
        return v5;\n
    }\n
    v5 = sub_405570(\"[ERROR] Must be between 1 and 128\\n
\");\n
    return v5;\n
}\n
", "4231585:sub_4091a1": null, "4231600:sub_4091b0": null, "4232353:sub_4094a1": null, "4232368:sub_4094b0": "int sub_4094b0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        sub_408b40();\n
        v1 = sub_407730();\n
        v0 = v1 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_408e30();\n
            break;\n
        case 1:\n
            sub_4090c0();\n
            break;\n
        case 2:\n
            sub_408d90();\n
            break;\n
        case 3:\n
            sub_409040();\n
            break;\n
        case 4:\n
            sub_4091b0();\n
            break;\n
        case 5:\n
            return sub_405570(\"Leave.\\n
\");\n
        default:\n
            sub_405570(\"Invalid selection\\n
\");\n
        }\n
    }\n
}\n
", "4232510:sub_40953e": null, "4232512:sub_409540": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[32];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char g_40e494;\n
extern char g_40f094;\n
\n
int sub_409540()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x29]\n
    struct_0 *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    struct_1 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v8 = &v9;\n
    v3 = 0;\n
    v2 = 0;\n
    sub_405570(\"Select a pantry:\\n
\");\n
    for (v7 = 0; v7 < 128; v7 += 1)\n
    {\n
        if (*((16 + &g_40e494 + 0x18 * v7)))\n
        {\n
            v0 = &g_40e494 + 0x18 * v7;\n
            sub_405570(\"$d) $s\\n
\");\n
        }\n
    }\n
    sub_405570(\"-> \");\n
    v11 = sub_407850(&v6, 4);\n
    if (!v11)\n
        return v11;\n
    v5 = sub_406a90(&v6);\n
    if (v5 > 0 && 128 >= v5)\n
    {\n
        v11 = &(&g_40e494)[24 + 24 * v5];\n
        if (!*((v11 + 16)))\n
        {\n
            v11 = sub_405570(\"[ERROR] Empty pantry\\n
\");\n
            return v11;\n
        }\n
        for (v7 = 0; v7 < 0x200; v7 = v11)\n
        {\n
            if (*((16 + &g_40f094 + 0x1c * v7)))\n
            {\n
                v4 = 0;\n
                for (v3 = *((20 + &g_40f094 + 0x1c * v7)); v3; v3 = v3->field_28)\n
                {\n
                    v4 = 0;\n
                    v2 = *(&(&g_40e494)[4 + 24 * v5]);\n
                    while (true)\n
                    {\n
                        v1 = 0;\n
                        if (v2)\n
                            v1 = !v4;\n
                        if (!(v1 & 1))\n
                            break;\n
                        if (!sub_407490(&v2->padding_8[12], &v3->padding_8[12]) && ((CmpF(v3->field_0, v2->field_0) & 69 | ((CmpF(v3->field_0, v2->field_0) & 69) >> 6)) & 1) == 1)\n
                            v4 = 1;\n
                        v2 = v2->field_28;\n
                    }\n
                    if (!v4)\n
                        break;\n
                }\n
                if (v4)\n
                    sub_405570(\"You can make: $s\\n
\");\n
            }\n
            v11 = v7 + 1;\n
        }\n
        return v11;\n
    }\n
    v11 = sub_405570(\"[ERROR] Invalid selection\\n
\");\n
    return v11;\n
}\n
", "4233156:sub_4097c4": null, "4233168:sub_4097d0": null, "4233573:sub_409965": null, "4233584:sub_409970": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char padding_10[24];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char g_40f094;\n
\n
int sub_409970()\n
{\n
    int <0x409970[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned long long v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned long long v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x0]\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned long v8;  // [bp+0x8]\n
    unsigned long v9;  // [bp+0x10], Other Possible Types: unsigned long long\n
    struct_0 *v10;  // [bp+0x1c], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x20]\n
    unsigned int v12;  // [bp+0x24], Other Possible Types: char\n
    unsigned long v13;  // [bp+0x28]\n
    unsigned int v16;  // eax\n
\n
    v5 = &<0x409970[is_2]|Stack bp, 1 B>;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    for (v2 = 0; v11 < 0x200; v11 += 1)\n
    {\n
        v9 = 0;\n
        if (*(&(&g_40f094)[16 + 28 * v11]))\n
        {\n
            for (v10 = *(&(&g_40f094)[20 + 28 * v11]); v10; v10 = v10->field_28)\n
            {\n
                *(&v9) = (0 CONCAT v10->field_8) * (0 CONCAT v10->field_0) + (0 CONCAT *(&v9));\n
            }\n
            if (!*(&v12))\n
            {\n
                v12 = v11 + 1;\n
                *(&v13) = *(&v9);\n
            }\n
            else if (((CmpF(*(&v13), *(&v9)) & 69 | ((CmpF(*(&v13), *(&v9)) & 69) >> 6)) & 1) != 1)\n
            {\n
                *(&v13) = *(&v9);\n
                v12 = v11 + 1;\n
            }\n
        }\n
    }\n
    if (v12)\n
    {\n
        v6 = \"Cheapest: $d at $f\\n
\";\n
        v7 = v12;\n
        *(&v8) = *(&v13);\n
        v16 = sub_405570(\"Cheapest: $d at $f\\n
\");\n
        return v16;\n
    }\n
    v6 = \"No cheapest recipe found\\n
\";\n
    v16 = sub_405570(\"No cheapest recipe found\\n
\");\n
    return v16;\n
}\n
", "4233966:sub_409aee": null, "4233968:sub_409af0": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char padding_10[24];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char g_40f094;\n
\n
int sub_409af0()\n
{\n
    int <0x409af0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned long long v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned long long v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x0]\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned long v8;  // [bp+0x8]\n
    unsigned long v9;  // [bp+0x10], Other Possible Types: unsigned long long\n
    struct_0 *v10;  // [bp+0x1c], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x20]\n
    unsigned int v12;  // [bp+0x24], Other Possible Types: char\n
    unsigned long v13;  // [bp+0x28]\n
    unsigned int v16;  // eax\n
\n
    v5 = &<0x409af0[is_2]|Stack bp, 1 B>;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    for (v2 = 0; v11 < 0x200; v11 += 1)\n
    {\n
        v9 = 0;\n
        if (*(&(&g_40f094)[16 + 28 * v11]))\n
        {\n
            for (v10 = *(&(&g_40f094)[20 + 28 * v11]); v10; v10 = v10->field_28)\n
            {\n
                *(&v9) = (0 CONCAT v10->field_8) * (0 CONCAT v10->field_0) + (0 CONCAT *(&v9));\n
            }\n
            if (!*(&v12))\n
            {\n
                v12 = v11 + 1;\n
                *(&v13) = *(&v9);\n
            }\n
            else if (((CmpF(*(&v9), *(&v13)) & 69 | ((CmpF(*(&v9), *(&v13)) & 69) >> 6)) & 1) != 1)\n
            {\n
                *(&v13) = *(&v9);\n
                v12 = v11 + 1;\n
            }\n
        }\n
    }\n
    if (v12)\n
    {\n
        v6 = \"Most expensive: $d at $f\\n
\";\n
        v7 = v12;\n
        *(&v8) = *(&v13);\n
        v16 = sub_405570(\"Most expensive: $d at $f\\n
\");\n
        return v16;\n
    }\n
    v6 = \"The most expensive recipe was not found\\n
\";\n
    v16 = sub_405570(\"The most expensive recipe was not found\\n
\");\n
    return v16;\n
}\n
", "4234350:sub_409c6e": null, "4234352:sub_409c70": "int sub_409c70()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        sub_405570(\"1) List Doable Recipes by Pantry\\n
\");\n
        sub_405570(\"2) List Doable Recipes by Cost\\n
\");\n
        sub_405570(\"3) Print Cheapest Recipe\\n
\");\n
        sub_405570(\"4) Print Most Expensive Recipe\\n
\");\n
        sub_405570(\"5) Leave Menu\\n
\");\n
        sub_405570(\"-> \");\n
        v1 = sub_407730();\n
        v0 = v1 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_409540();\n
            break;\n
        case 1:\n
            sub_4097d0();\n
            break;\n
        case 2:\n
            sub_409970();\n
            break;\n
        case 3:\n
            sub_409af0();\n
            break;\n
        case 4:\n
            return sub_405570(\"Leaving..\\n
\");\n
        default:\n
            sub_405570(\"[ERROR] Invalid selection\\n
\");\n
        }\n
    }\n
}\n
", "4234557:sub_409d3d": null, "4234560:sub_409d40": "int sub_409d40(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v5 = 0x4347c000;\n
    v1 = 0;\n
    sub_408bb0(v5);\n
    sub_407970();\n
    while (true)\n
    {\n
        sub_405570(\"1) Recipe Menu\\n
\");\n
        sub_405570(\"2) Pantry Menu\\n
\");\n
        sub_405570(\"3) Query Recipe\\n
\");\n
        sub_405570(\"4) Quit\\n
\");\n
        sub_405570(\"-> \");\n
        v1 = sub_407730();\n
        v0 = v1 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_408aa0();\n
            break;\n
        case 1:\n
            sub_4094b0();\n
            break;\n
        case 2:\n
            sub_409c70();\n
            break;\n
        case 3:\n
            sub_405570(\"Quit\\n
\");\n
            cgc__terminate();\n
        default:\n
            sub_405570(\"unknown\\n
\");\n
            continue;\n
        }\n
    }\n
}\n
", "4234800:sub_409e30": "int sub_409e30()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409f50();\n
    sub_409f60();\n
    sub_409f80();\n
    v0 = 1;\n
    if (!sub_40a550())\n
    {\n
        v0 = 7;\n
        sub_40ac30();\n
    }\n
    sub_40ae00();\n
    v1 = sub_40ae30;\n
    sub_40a220();\n
    if (sub_409f20())\n
    {\n
        v1 = 7;\n
        sub_40ac30();\n
    }\n
    sub_40a9c0();\n
    if (sub_40aac0())\n
    {\n
        v1 = sub_40a960;\n
        __setusermatherr();\n
    }\n
    sub_40aa40();\n
    sub_40aa50();\n
    sub_40aa10();\n
    v1 = sub_40a9b0();\n
    _configthreadlocale();\n
    if (sub_40aa00())\n
        sub_409f40();\n
    sub_40abf0();\n
    if (sub_40ac00())\n
    {\n
        v1 = 7;\n
        sub_40ac30();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4234992:sub_409ef0": "int sub_409ef0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40aa60();\n
    return 0;\n
}\n
", "4235008:sub_409f00": "int sub_409f00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40ac10();\n
    v0 = sub_40a9a0();\n
    return _set_new_mode();\n
}\n
", "4235040:sub_409f20": "int sub_409f20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_40a970());\n
}\n
", "4235072:sub_409f40": "int sub_409f40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4235088:sub_409f50": "int sub_409f50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4235104:sub_409f60": "int sub_409f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_40a990());\n
}\n
", "4235136:sub_409f80": "int sub_409f80()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_40a980(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4235168:sub_409fa0": "int sub_409fa0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    sub_409d40(v1, v2); /* do not return */\n
}\n
", "4235219:sub_409fd3": "int sub_409fd3()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebp\n
\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4235232:sub_409fe0": "extern char g_40ae60;\n
extern char g_40cf8c;\n
extern char g_40cf94;\n
extern char g_40cf98;\n
extern struct_0 *g_40cfa4;\n
extern char g_40d630;\n
extern unsigned int g_40e040;\n
extern unsigned int g_412894;\n
\n
int sub_409fe0()\n
{\n
    unsigned int v13;  // [bp-0x8]\n
    struct struct_0 **v14;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v15;  // [bp+0x0]\n
    struct struct_0 **v19;  // [bp+0xfffc4]\n
    struct struct_0 **v20;  // [bp+0xfffd8]\n
    char v21;  // [bp+0xfffeb]\n
    unsigned int v22;  // [bp+0x100000]\n
    struct struct_0 **v27;  // eax\n
\n
    v20 = v27;\n
    if (!sub_40ab60())\n
    {\n
        v14 = v20;\n
        exit();\n
    }\n
    if (!v21)\n
        _cexit();\n
    v14 = 0;\n
    v13 = 1;\n
    sub_40a510(*(&v15));\n
    v19 = v20;\n
    v22 = -2;\n
}\n
", "4235647:sub_40a17f": "int sub_40a17f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4235656:sub_40a188": "int sub_40a188()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4235683:sub_40a1a3": "extern char g_40a1b1;\n
\n
int sub_40a1a3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_40a1b1;\n
    if (!sub_40ab60())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4235746:sub_40a1e2": "int sub_40a1e2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4235776:sub_40a200": "int sub_40a200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40a870();\n
    return sub_409fe0();\n
}\n
", "4235792:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a200();\n
}\n
", "4235808:sub_40a220": "int sub_40a220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_40a250(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4235856:sub_40a250": "extern unsigned int g_4128a0;\n
\n
int sub_40a250(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4128a0;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4128a0))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4235912:sub_40a288": "int sub_40a288()\n
{\n
}\n
", "4235968:sub_40a2c0": "extern unsigned int g_4128ac;\n
\n
int sub_40a2c0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4128ac;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4128ac);\n
    return v6;\n
}\n
", "4236002:sub_40a2e2": "int sub_40a2e2()\n
{\n
}\n
", "4236032:sub_40a300": "int sub_40a300()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4236048:sub_40a310": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40d650;\n
extern unsigned int g_40e040;\n
\n
int sub_40a310(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40d650;\n
    v13 = sub_40ae60;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40e040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_40a770(v6, g_40e040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_40a7e0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4236253:sub_40a3dd": "int sub_40a3dd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4236262:sub_40a3e6": "int sub_40a3e6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4236301:sub_40a40d": "int sub_40a40d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4236320:sub_40a420": "int sub_40a420()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4236352:sub_40a440": "extern unsigned int g_412898;\n
\n
int sub_40a440()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40b680();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_40a300() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_412898 = v6;\n
        if (!g_412898)\n
        {\n
            tmp_0 = 0;\n
            g_412898 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_412898 = v6;\n
            v5 = g_412898;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4236432:sub_40a490": "extern void* g_412898;\n
\n
int sub_40a490(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b680();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_412898;\n
        g_412898 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40a4af;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4236480:sub_40a4c0": "extern char g_41289c;\n
\n
int sub_40a4c0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_41289c = 1;\n
    sub_40b1f0();\n
    v4 = sub_40ba20();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40ba20();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40ba30();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4236560:sub_40a510": "extern char g_41289c;\n
\n
int sub_40a510(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_41289c && a0)\n
        return 1;\n
    sub_40ba30(v2);\n
    v3 = sub_40ba30();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4236624:sub_40a550": "extern char g_41289d;\n
extern unsigned int g_4128a0;\n
extern unsigned int g_4128a4;\n
extern unsigned int g_4128a8;\n
extern unsigned int g_4128ac;\n
extern unsigned int g_4128b0;\n
extern unsigned int g_4128b4;\n
\n
int sub_40a550(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_41289d)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_40ac30();\n
    }\n
    if (sub_40b680() && !v10)\n
    {\n
        v8 = &g_4128a0;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4128ac;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_40a616;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4128a0 = v4;\n
    g_4128a4 = v5;\n
    g_4128a8 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4128ac = v1;\n
    g_4128b0 = v2;\n
    v11 = v3;\n
    g_4128b4 = v11;\n
LABEL_40a616:\n
    g_41289d = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4236848:sub_40a630": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_40a630(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40b680() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_40aea0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4236928:sub_40a680": "int sub_40a680()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a550(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4236960:sub_40a6a0": "int sub_40a6a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40b680())\n
    {\n
        v3 = sub_40b1f0();\n
    }\n
    else\n
    {\n
        v3 = sub_409f20();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_409f40();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4237008:sub_40a6d0": "extern char g_4128a0;\n
\n
int sub_40a6d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40b680())\n
    {\n
        v0 = &g_4128a0;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40ba70();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4237056:sub_40a700": "int sub_40a700()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ba40(0);\n
    return sub_40ba40();\n
}\n
", "4237088:sub_40a720": "int sub_40a720()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40ba50();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40ba50();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40ba60();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4237136:sub_40a750": "char sub_40a750()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ba60();\n
    sub_40ba60();\n
    return 1;\n
}\n
", "4237168:sub_40a770": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40a770(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4237280:sub_40a7e0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40a7e0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4237424:sub_40a870": "extern unsigned int g_40e040;\n
extern unsigned int g_40e080;\n
\n
int sub_40a870()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40e040 != 3141592654)\n
    {\n
        v4 = g_40e040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40e080 = ~(g_40e040);\n
            return g_40e040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_40a8f0(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40e040 = v0;\n
    g_40e080 = ~(v0);\n
    return v4;\n
}\n
", "4237552:sub_40a8f0": "int sub_40a8f0()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4237664:sub_40a960": "int sub_40a960()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4237680:sub_40a970": "int sub_40a970()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4237696:sub_40a980": "int sub_40a980()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4237712:sub_40a990": "int sub_40a990()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4237728:sub_40a9a0": "int sub_40a9a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4237744:sub_40a9b0": "int sub_40a9b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4237760:sub_40a9c0": "extern void g_4128b8;\n
\n
int sub_40a9c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4128b8);\n
}\n
", "4237792:sub_40a9e0": "extern unsigned int g_4128b8;\n
\n
int sub_40a9e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4128b8);\n
}\n
", "4237824:sub_40aa00": "char sub_40aa00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4237840:sub_40aa10": "int sub_40aa10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_40ac30();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4237888:sub_40aa40": "int sub_40aa40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4237904:sub_40aa50": "int sub_40aa50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4237920:sub_40aa60": "int sub_40aa60()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_40aaa0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_40aab0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4237984:sub_40aaa0": "extern char g_4128c0;\n
\n
int sub_40aaa0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4128c0;\n
}\n
", "4238000:sub_40aab0": "extern char g_4128c8;\n
\n
int sub_40aab0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4128c8;\n
}\n
", "4238016:sub_40aac0": "extern unsigned int g_40e008;\n
\n
int sub_40aac0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40e008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4238064:sub_40aaf0": "extern char g_4128d4;\n
\n
int sub_40aaf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4128d4;\n
}\n
", "4238080:sub_40ab00": "extern char g_4128d8;\n
\n
int sub_40ab00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4128d8;\n
}\n
", "4238096:sub_40ab10": "extern void* g_4128dc;\n
\n
int sub_40ab10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4128dc = 0;\n
    return v3;\n
}\n
", "4238112:sub_40ab20": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40ab20()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4238176:sub_40ab60": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_40ab60()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4238320:sub_40abf0": "int sub_40abf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238336:sub_40ac00": "int sub_40ac00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40ad70();\n
}\n
", "4238352:sub_40ac10": "int sub_40ac10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_40ad80);\n
}\n
", "4238384:sub_40ac30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40ac30()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_40ab10();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_40ab10();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4238409:sub_40ac49": "int sub_40ac49()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4238409\n
}\n
", "4238704:sub_40ad70": "int sub_40ad70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238720:sub_40ad80": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_40ad80(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4238848:sub_40ae00": "extern struct_0 *g_40d620;\n
\n
int sub_40ae00()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40d620;\n
    v3 = &g_40d620;\n
    return &g_40d620;\n
}\n
", "4238896:sub_40ae30": "extern struct_0 *g_40d628;\n
\n
int sub_40ae30()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40d628;\n
    v3 = &g_40d628;\n
    return &g_40d628;\n
}\n
", "4238944:sub_40ae60": "extern unsigned int g_40e040;\n
\n
int sub_40ae60(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40ba80(*(v2));\n
    return _except_handler4_common(&g_40e040, sub_40b6b0, v2, a0, a1);\n
}\n
", "4239008:sub_40aea0": "int sub_40aea0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4239024:sub_40aeb0": "int sub_40aeb0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x40aeb9;\n
    return tmp_4;\n
}\n
", "4239040:sub_40aec0": "int sub_40aec0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4239072:sub_40aee0": "int sub_40aee0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40aec0(v2);\n
}\n
", "4239104:sub_40af00": "extern unsigned int g_4128e0;\n
\n
int sub_40af00(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_40aeb0(&g_4128e0, v3);\n
    return v0;\n
}\n
", "4239136:sub_40af20": "extern char g_40aea0;\n
extern unsigned int g_413000;\n
\n
int sub_40af20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_40aee0(&g_413000) != sub_40aea0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4239184:sub_40af50": "extern char g_40cec0;\n
\n
int sub_40af50(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40cec0;\n
    v1 = &g_40cec0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4239248:sub_40af90": "extern unsigned int g_413008;\n
\n
int sub_40af90(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_40aee0(&g_413008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4239296:sub_40afc0": "extern unsigned int g_4128e0;\n
\n
int sub_40afc0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_40aee0(&g_4128e0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_40aea0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4239360:sub_40b000": "int sub_40b000()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4239376:sub_40b010": "int sub_40b010(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40af50(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4239395\n
}\n
", "4239408:sub_40b030": "int sub_40b030(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40af50(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4239433:sub_40b049": "int sub_40b049()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4239433\n
}\n
", "4239440:sub_40b050": "int sub_40b050(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40af50(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40af90(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4239488:sub_40b080": "int sub_40b080(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40af50(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40afc0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4239536:sub_40b0b0": "extern char g_40cec0;\n
\n
int sub_40b0b0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40cec0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4239600:sub_40b0f0": "int sub_40b0f0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b0b0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40af50(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4239643\n
}\n
", "4239648:sub_40b120": "int sub_40b120(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b0b0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40af50(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4239697:sub_40b151": "int sub_40b151()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4239697\n
}\n
", "4239712:sub_40b160": "int sub_40b160()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4239728:sub_40b170": "int sub_40b170(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b0b0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40af50(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40af90(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4239792:sub_40b1b0": "int sub_40b1b0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40b0b0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40af50(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40afc0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4239856:sub_40b1f0": "extern unsigned int g_40e040;\n
extern unsigned int g_40e088;\n
extern unsigned int g_40e08c;\n
extern unsigned int g_40e090;\n
extern unsigned int g_4128e4;\n
extern unsigned int g_4128e8;\n
extern unsigned int g_4128ec;\n
\n
int sub_40b1f0()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40e040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4128e8 = 0;\n
    g_40e090 = g_40e090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40b6b0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40b33b;\n
        g_4128ec = g_4128ec | 1;\n
    }\n
LABEL_40b33b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4128ec = g_4128ec | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4128e8 = 1;\n
    g_40e090 = g_40e090 | 2;\n
    g_40e088 = g_40e088 & -2;\n
    g_40e08c = g_40e08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4128e8 = 2;\n
        g_40e090 = g_40e090 | 4;\n
        g_40e088 = g_40e088 & -17;\n
        g_40e08c = g_40e08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4128e8 = 3;\n
                g_40e090 = g_40e090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4128e8 = 5;\n
                    g_40e090 = g_40e090 | 32;\n
                    g_40e088 = g_40e088 & -3;\n
                    g_40e08c = g_40e08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4128e8 = 6;\n
                            g_40e090 = g_40e090 | 64;\n
                            g_40e088 = g_40e088 & -37;\n
                            g_40e08c = g_40e08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40e088 = g_40e088 & -16777217;\n
                    g_40e08c = g_40e08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4128e4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40e088 = ~(v2 | 16777256) & g_40e088;\n
                        g_40e08c = ~(v3) & g_40e08c;\n
                        if (g_4128e4 > 1)\n
                        {\n
                            g_40e088 = g_40e088 & -65;\n
                            g_40e08c = g_40e08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4241024:sub_40b680": "extern unsigned int g_40e094;\n
\n
int sub_40b680()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40e094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4241072:sub_40b6b0": "extern unsigned int g_40e040;\n
extern unsigned int g_40e080;\n
extern unsigned int g_4128f8;\n
extern unsigned int g_4128fc;\n
extern unsigned int g_412904;\n
extern unsigned int g_412908;\n
extern unsigned int g_41290c;\n
extern unsigned int g_412948;\n
extern unsigned short g_4129d4;\n
extern unsigned short g_4129d8;\n
extern unsigned short g_4129dc;\n
extern unsigned short g_4129e0;\n
extern unsigned int g_4129e4;\n
extern unsigned int g_4129e8;\n
extern unsigned int g_4129ec;\n
extern unsigned int g_4129f0;\n
extern unsigned int g_4129f4;\n
extern unsigned int g_4129f8;\n
extern unsigned int g_4129fc;\n
extern unsigned int g_412a00;\n
extern unsigned short g_412a04;\n
extern unsigned int g_412a08;\n
extern unsigned int g_412a0c;\n
extern unsigned short g_412a10;\n
\n
int sub_40b6b0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40e040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_4129f8 = v7;\n
        g_4129f4 = v6;\n
        g_4129f0 = v8;\n
        g_4129ec = v9;\n
        g_4129e8 = v10;\n
        g_4129e4 = v11;\n
        g_412a10 = v12;\n
        g_412a04 = v13;\n
        g_4129e0 = v14;\n
        g_4129dc = v15;\n
        g_4129d8 = v16;\n
        g_4129d4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_412a08 = v0;\n
        g_4129fc = v3;\n
        g_412a00 = *(&v4);\n
        g_412a0c = &v5;\n
        g_412948 = 65537;\n
        g_412904 = g_412a00;\n
        g_4128f8 = 3221226505;\n
        g_4128fc = 1;\n
        g_412908 = 1;\n
        g_41290c = 2;\n
        v1 = g_40e040;\n
        v2 = g_40e080;\n
        sub_40b9f0();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4241088:sub_40b6c0": "extern unsigned int g_4128f8;\n
extern unsigned int g_4128fc;\n
extern unsigned int g_412904;\n
extern unsigned int g_412908;\n
extern unsigned int g_41290c;\n
extern unsigned short g_4129d4;\n
extern unsigned short g_4129d8;\n
extern unsigned short g_4129dc;\n
extern unsigned short g_4129e0;\n
extern unsigned int g_4129e4;\n
extern unsigned int g_4129e8;\n
extern unsigned int g_4129ec;\n
extern unsigned int g_4129f0;\n
extern unsigned int g_4129f4;\n
extern unsigned int g_4129f8;\n
extern unsigned int g_4129fc;\n
extern unsigned int g_412a00;\n
extern unsigned short g_412a04;\n
extern unsigned int g_412a08;\n
extern unsigned int g_412a0c;\n
extern unsigned short g_412a10;\n
\n
int sub_40b6c0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_4129f8 = v4;\n
        g_4129f4 = v5;\n
        g_4129f0 = v6;\n
        g_4129ec = v7;\n
        g_4129e8 = v8;\n
        g_4129e4 = v9;\n
        g_412a10 = v10;\n
        g_412a04 = v11;\n
        g_4129e0 = v12;\n
        g_4129dc = v13;\n
        g_4129d8 = v14;\n
        g_4129d4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_412a08 = v0;\n
        g_4129fc = v1;\n
        g_412a00 = *(&v2);\n
        g_412a0c = &v3;\n
        g_412904 = g_412a00;\n
        g_4128f8 = 3221226505;\n
        g_4128fc = 1;\n
        g_412908 = 1;\n
        g_41290c = v3;\n
        sub_40b9f0();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4241113:sub_40b6d9": "int sub_40b6d9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4241113\n
}\n
", "4241312:sub_40b7a0": "extern unsigned int g_4128f8;\n
extern unsigned int g_4128fc;\n
extern unsigned int g_412904;\n
extern unsigned int g_412908;\n
extern unsigned int g_41290c;\n
extern char g_412910;\n
extern unsigned short g_4129d4;\n
extern unsigned short g_4129d8;\n
extern unsigned short g_4129dc;\n
extern unsigned short g_4129e0;\n
extern unsigned int g_4129e4;\n
extern unsigned int g_4129e8;\n
extern unsigned int g_4129ec;\n
extern unsigned int g_4129f0;\n
extern unsigned int g_4129f4;\n
extern unsigned int g_4129f8;\n
extern unsigned int g_4129fc;\n
extern unsigned int g_412a00;\n
extern unsigned short g_412a04;\n
extern unsigned int g_412a08;\n
extern unsigned int g_412a0c;\n
extern unsigned short g_412a10;\n
\n
int sub_40b7a0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1067589];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_4129f8 = v7;\n
        g_4129f4 = v8;\n
        g_4129f0 = v9;\n
        g_4129ec = v10;\n
        g_4129e8 = v11;\n
        g_4129e4 = v12;\n
        g_412a10 = v13;\n
        g_412a04 = v14;\n
        g_4129e0 = v15;\n
        g_4129dc = v16;\n
        g_4129d8 = v17;\n
        g_4129d4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_412a08 = v0;\n
        g_4129fc = v2;\n
        g_412a00 = *(&v3);\n
        g_412a0c = &v4;\n
        g_412904 = g_412a00;\n
        g_4128f8 = 3221226505;\n
        g_4128fc = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_412908 = v5 + 1;\n
        g_41290c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_412910)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40b9f0();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4241337:sub_40b7b9": "int sub_40b7b9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4241337\n
}\n
", "4241616:sub_40b8d0": "int sub_40b8d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40b6c0(8);\n
}\n
", "4241659:sub_40b8fb": "int sub_40b8fb()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4241659\n
}\n
", "4241904:sub_40b9f0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40b9f0(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4241952:sub_40ba20": "char sub_40ba20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4241968:sub_40ba30": "char sub_40ba30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4241984:sub_40ba40": "char sub_40ba40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4242000:sub_40ba50": "char sub_40ba50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4242016:sub_40ba60": "char sub_40ba60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4242032:sub_40ba70": "int sub_40ba70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4242048:sub_40ba80": "extern unsigned int g_4128e8;\n
\n
int sub_40ba80(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4128e8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4242356:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4242362:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4242368:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4242374:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4242380:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4242386:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4242392:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4242398:sub_40bbde": "int sub_40bbde(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4242404:sub_40bbe4": "int sub_40bbe4()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4242410:sub_40bbea": "int sub_40bbea()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4242416:sub_40bbf0": "int sub_40bbf0(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4242422:sub_40bbf6": "int sub_40bbf6(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4242428:sub_40bbfc": "int sub_40bbfc()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4242434:sub_40bc02": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40bc02(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4242440:sub_40bc08": "int sub_40bc08(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4242446:sub_40bc0e": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40bc0e(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4242452:sub_40bc14": "int sub_40bc14(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4242458:sub_40bc1a": "int sub_40bc1a(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4242464:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4242470:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4242476:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4242482:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4242488:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4242494:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4242500:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4242506:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4242512:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4242518:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4242524:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4242530:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4242536:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4242542:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4242548:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4242554:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4242560:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4242566:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4242572:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4242578:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4242584:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4242590:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4242596:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4242602:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4242608:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4242614:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4242620:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4242626:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4242632:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4242638:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4242644:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4242650:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4242656:sub_40bce0": "int sub_40bce0()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4242662:sub_40bce6": "int sub_40bce6(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_log10": null, "5242892:cgc_pow": null, "5242896:cgc_receive": null, "5242900:cgc_rint": null, "5242904:cgc_transmit": null, "5242908:GetCurrentProcess": null, "5242912:GetCurrentProcessId": null, "5242916:GetCurrentThreadId": null, "5242920:GetModuleHandleW": null, "5242924:GetStartupInfoW": null, "5242928:GetSystemTimeAsFileTime": null, "5242932:InitializeSListHead": null, "5242936:IsDebuggerPresent": null, "5242940:IsProcessorFeaturePresent": null, "5242944:QueryPerformanceCounter": null, "5242948:SetUnhandledExceptionFilter": null, "5242952:TerminateProcess": null, "5242956:UnhandledExceptionFilter": null, "5242960:__current_exception": null, "5242964:__current_exception_context": null, "5242968:__std_type_info_destroy_list": null, "5242972:_except_handler4_common": null, "5242976:memset": null, "5242980:__p___argc": null, "5242984:__p___argv": null, "5242988:__p__commode": null, "5242992:__setusermatherr": null, "5242996:_c_exit": null, "5243000:_cexit": null, "5243004:_configthreadlocale": null, "5243008:_configure_narrow_argv": null, "5243012:_controlfp_s": null, "5243016:_crt_at_quick_exit": null, "5243020:_crt_atexit": null, "5243024:_execute_onexit_table": null, "5243028:_exit": null, "5243032:_get_initial_narrow_environment": null, "5243036:_initialize_narrow_environment": null, "5243040:_initialize_onexit_table": null, "5243044:_initterm": null, "5243048:_initterm_e": null, "5243052:_register_onexit_function": null, "5243056:_register_thread_local_exe_atexit_callback": null, "5243060:_seh_filter_dll": null, "5243064:_seh_filter_exe": null, "5243068:_set_app_type": null, "5243072:_set_fmode": null, "5243076:_set_new_mode": null, "5243080:exit": null, "5243084:terminate": null, "6295592:UnresolvableJumpTarget": null, "6295596:UnresolvableCallTarget": null}