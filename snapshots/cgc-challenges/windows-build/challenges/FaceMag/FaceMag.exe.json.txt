{"4198400:sub_401000": "int sub_401000(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198454:sub_401036": null, "4198464:sub_401040": "int sub_401040(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198518:sub_401076": null, "4198528:sub_401080": "int sub_401080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198582:sub_4010b6": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3) && !sub_401080(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198668:sub_40110c": null, "4198672:sub_401110": "int sub_401110(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3) && !sub_401000(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198748:sub_40115c": null, "4198752:sub_401160": "int sub_401160(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 32 && v3 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198806:sub_401196": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401080(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + -32;\n
    return v0;\n
}\n
", "4198876:sub_4011dc": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + 32;\n
    return v0;\n
}\n
", "4198940:sub_40121c": null, "4198944:sub_401220": "int sub_401220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4199040:sub_401280": "extern struct_1 *g_40d098;\n
extern struct_1 *g_40d09c;\n
extern unsigned int g_40d0a0;\n
extern struct_0 *g_40d0a4;\n
extern unsigned int g_40d0a8;\n
\n
int sub_401280(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    struct struct_1 **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if ((0 CONCAT a0) /m v7 >> 32)\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
    v2 = (0 CONCAT a1) /m a0;\n
    v3 = (0 CONCAT a1) /m v7;\n
    if (v2 > a0 << 3)\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
    v0 = &g_40d098;\n
    v1 = cgc_allocate(a1, 0);\n
    if (v1 == 3)\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    else if (!v1)\n
    {\n
        sub_406a70(g_40d098);\n
        g_40d09c = g_40d098;\n
        g_40d09c->field_0 = 1;\n
        g_40d09c->field_4 = a1;\n
        g_40d09c->field_8 = a0;\n
        g_40d09c->field_c = v2;\n
        g_40d09c->field_10 = 2;\n
        g_40d09c->field_14 = 1;\n
        g_40d09c->field_18 = a0 - 8 >> 6;\n
        g_40d09c->field_1c = a0 - 8 >> 2;\n
        g_40d09c->field_20 = 0;\n
        g_40d0a0 = g_40d098 + a0;\n
        g_40d0a4 = &g_40d098->field_0 + 2 * a0;\n
        sub_401460(0);\n
        sub_401460();\n
        sub_401460();\n
        g_40d0a4->field_0 = a0 - 8 >> 6;\n
        g_40d0a4->field_2 = 0;\n
        g_40d0a4->field_4 = 0;\n
        sub_406a70(&g_40d0a8);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
}\n
", "4199506:sub_401452": null, "4199520:sub_401460": "extern unsigned int g_40d0a0;\n
\n
int sub_401460(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v4 >> 3;\n
    v0 = v4 & 7;\n
    v5 = v1;\n
    v5[g_40d0a0] = v5[g_40d0a0] | (1 << (v0 & 31));\n
    return g_40d0a0;\n
}\n
", "4199581:sub_40149d": null, "4199584:sub_4014a0": "extern unsigned int g_40d098;\n
extern struct_0 *g_40d09c;\n
extern struct_1 *g_40d0a4;\n
\n
int sub_4014a0(unsigned int v6, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    else if (g_40d0a4)\n
    {\n
        v1 = g_40d09c->field_8;\n
        while (true)\n
        {\n
            for (v2 = 0; v2 < g_40d09c->field_18; v2 += 1)\n
            {\n
                v0 = v6;\n
                if (!sub_406910(25 + g_40d0a4 + 0x40 * v2))\n
                {\n
                    if (a0)\n
                    {\n
                        a0[1] = g_40d0a4[2 + 8 * v2].field_4;\n
                        *(&a0[0]) = g_40d0a4[3 + 8 * v2].padding_0;\n
                    }\n
                    g_40d0a4 = g_40d098 + v1 * 2;\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            if (!g_40d0a4->field_4)\n
            {\n
                g_40d0a4 = g_40d098 + v1 * 2;\n
                v3 = -1;\n
                return v3;\n
            }\n
            g_40d0a4 = g_40d098 + g_40d0a4->field_4 * v1;\n
        }\n
    }\n
    else\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
}\n
", "4199917:sub_4015ed": null, "4199920:sub_4015f0": "extern unsigned int g_40d098;\n
extern struct_1 *g_40d09c;\n
extern struct_0 *g_40d0a4;\n
extern char g_40d0a8;\n
\n
int sub_4015f0(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v2 = 0;\n
    if (!v8)\n
    {\n
        v5 = 250;\n
        return v5;\n
    }\n
    else if (g_40d0a4)\n
    {\n
        v1 = g_40d09c->field_8;\n
        g_40d0a4 = g_40d098 + v1 * 2;\n
        while (true)\n
        {\n
            for (v4 = 0; v4 < g_40d09c->field_18; v4 += 1)\n
            {\n
                v0 = v8;\n
                if (sub_406910(25 + g_40d0a4 + 0x40 * v4))\n
                {\n
                    v2 += 1;\n
                }\n
                else\n
                {\n
                    if (a0 != 1 && g_40d0a4[1 + 8 * v4].field_4 != a0 && !g_40d0a4[2 + 8 * v4].padding_0[0])\n
                    {\n
                        g_40d0a4 = g_40d098 + v1 * 2;\n
                        v5 = 242;\n
                        return v5;\n
                    }\n
                    for (v3 = 0; v3 < 5; v3 += 1)\n
                    {\n
                        if (*((&g_40d0a8 + 0x2c * v3)) == 1 && *((4 + &g_40d0a8 + 0x2c * v3)) == v2)\n
                        {\n
                            g_40d0a4 = g_40d098 + v1 * 2;\n
                            v5 = 243;\n
                            return v5;\n
                        }\n
                    }\n
                    for (v3 = 0; v3 < 5; v3 += 1)\n
                    {\n
                        if (!*(&(&g_40d0a8)[44 * v3]))\n
                            break;\n
                    }\n
                    if (v3 == 5)\n
                    {\n
                        g_40d0a4 = g_40d098 + v1 * 2;\n
                        v5 = 246;\n
                        return v5;\n
                    }\n
                    *(&(&g_40d0a8)[44 * v3]) = 1;\n
                    *(&(&g_40d0a8)[4 + 44 * v3]) = v2;\n
                    *(&(&g_40d0a8)[8 + 44 * v3]) = 0;\n
                    *(&(&g_40d0a8)[16 + 44 * v3]) = 0;\n
                    *(&(&g_40d0a8)[12 + 44 * v3]) = 0;\n
                    *(&(&g_40d0a8)[20 + 44 * v3]) = 0;\n
                    *(&(&g_40d0a8)[24 + 44 * v3]) = g_40d0a4[2 + 8 * v4].field_4;\n
                    *(&(&g_40d0a8)[32 + 44 * v3]) = g_40d0a4[1 + 8 * v4].field_4;\n
                    (&g_40d0a8)[36 + 44 * v3] = g_40d0a4[2 + 8 * v4].padding_0[0];\n
                    *(&(&g_40d0a8)[40 + 44 * v3]) = g_40d0a4[3 + 8 * v4].padding_0;\n
                    *(&(&g_40d0a8)[28 + 44 * v3]) = g_40d0a4[3 + 8 * v4].field_4;\n
                    if (g_40d0a4[2 + 8 * v4].field_4 > 0)\n
                    {\n
                        *(&(&g_40d0a8)[16 + 44 * v3]) = (0 CONCAT g_40d0a4[2 + 8 * v4].field_4) /m g_40d09c->field_8;\n
                        *(&(&g_40d0a8)[20 + 44 * v3]) = g_40d0a4[2 + 8 * v4].field_4;\n
                    }\n
                    g_40d0a4 = g_40d098 + v1 * 2;\n
                    v5 = v3;\n
                    return v5;\n
                }\n
            }\n
            if (!g_40d0a4->field_4)\n
            {\n
                g_40d0a4 = g_40d098 + v1 * 2;\n
                v5 = 255;\n
                return v5;\n
            }\n
            g_40d0a4 = g_40d098 + g_40d0a4->field_4 * v1;\n
        }\n
    }\n
    else\n
    {\n
        v5 = 247;\n
        return v5;\n
    }\n
}\n
", "4200905:sub_4019c9": null, "4200912:sub_4019d0": "extern unsigned int g_40d0a8;\n
\n
int sub_4019d0(char v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if ((&g_40d0a8)[11 * v3])\n
        {\n
            if (a1 != (&g_40d0a8)[8 + 11 * v3] && a1 != 1)\n
            {\n
                v0 = -14;\n
                return v0;\n
            }\n
            if (a0 > 3)\n
            {\n
                v0 = -6;\n
                return v0;\n
            }\n
            *(&(&g_40d0a8)[9 + 11 * v3]) = a0;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4201109:sub_401a95": null, "4201120:sub_401aa0": "extern unsigned int g_40d0a8;\n
\n
int sub_401aa0(char v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 <= 5 && v4 >= 0)\n
    {\n
        if ((&g_40d0a8)[11 * v4])\n
        {\n
            v0 = v4;\n
            sub_401b90();\n
            (&g_40d0a8)[11 * v4] = 0;\n
            (&g_40d0a8)[1 + 11 * v4] = 0;\n
            (&g_40d0a8)[5 + 11 * v4] = 0;\n
            (&g_40d0a8)[3 + 11 * v4] = 0;\n
            (&g_40d0a8)[6 + 11 * v4] = 0;\n
            *(&(&g_40d0a8)[9 + 11 * v4]) = 0;\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = -11;\n
        return v1;\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4201358:sub_401b8e": null, "4201360:sub_401b90": "extern unsigned int g_40d098;\n
extern struct_0 *g_40d09c;\n
extern struct_1 *g_40d0a4;\n
extern unsigned int g_40d0a8;\n
\n
int sub_401b90(char v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 <= 5 && v6 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v6])\n
        {\n
            v3 = -11;\n
            return v3;\n
        }\n
        else if (g_40d0a4)\n
        {\n
            for (v2 = (0 CONCAT (&g_40d0a8)[1 + 11 * v6]) /m g_40d09c->field_18; v2 > 0; v2 -= 1)\n
            {\n
                g_40d0a4 = g_40d098 + g_40d0a4->field_4 * g_40d09c->field_8;\n
            }\n
            v0 = g_40d0a4 + 1;\n
            *((v0 + ((0 CONCAT (&g_40d0a8)[1 + 11 * v6]) /m g_40d09c->field_18 >> 32) * 64 + 12)) = (&g_40d0a8)[6 + 11 * v6];\n
            v1 = g_40d0a4 + 1;\n
            *((v1 + ((0 CONCAT (&g_40d0a8)[1 + 11 * v6]) /m g_40d09c->field_18 >> 32) * 64 + 8)) = (&g_40d0a8)[9 + 11 * v6];\n
            g_40d0a4 = g_40d098 + g_40d09c->field_8 * 2;\n
            v3 = 0;\n
            return v3;\n
        }\n
        else\n
        {\n
            v3 = -9;\n
            return v3;\n
        }\n
    }\n
    v3 = -11;\n
    return v3;\n
}\n
", "4201733:sub_401d05": null, "4201744:sub_401d10": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40d098;\n
extern struct_1 *g_40d09c;\n
extern struct_0 *g_40d0a4;\n
\n
int sub_401d10(unsigned int v10, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x18], Other Possible Types: struct_0 *\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    if (!v10)\n
    {\n
        v7 = -6;\n
        return v7;\n
    }\n
    else if (!g_40d0a4)\n
    {\n
        v7 = -9;\n
        return v7;\n
    }\n
    else if (sub_4014a0(v10, NULL))\n
    {\n
        v3 = 0;\n
        v2 = g_40d09c->field_8;\n
        while (true)\n
        {\n
            for (v6 = 0; v6 < g_40d09c->field_18; v6 += 1)\n
            {\n
                if (!g_40d0a4[4 + 8 * v6].padding_0[0])\n
                {\n
                    v0 = v10;\n
                    v1 = 40;\n
                    sub_406ba0(&g_40d0a4[8 * v6].padding_0[1 + 24], v0);\n
                    g_40d0a4[2 + 8 * v6].field_4 = 0;\n
                    *(&g_40d0a4[3 + 8 * v6].padding_0) = a0;\n
                    g_40d0a4[1 + 8 * v6].field_4 = a1;\n
                    g_40d0a4[2 + 8 * v6].padding_0[0] = 0;\n
                    if (!sub_401f90(&v5, v0))\n
                    {\n
                        sub_4020b0();\n
                        sub_401460(*(&v5));\n
                        g_40d0a4[3 + 8 * v6].field_4 = *(&v5);\n
                        g_40d0a4 = g_40d098 + v2 * 2;\n
                        g_40d0a4->field_2 = g_40d0a4->field_2 + 1;\n
                        v7 = 0;\n
                        return v7;\n
                    }\n
                    g_40d0a4 = g_40d098 + v2 * 2;\n
                    v7 = -5;\n
                    return v7;\n
                }\n
            }\n
            v3 = g_40d0a4;\n
            if (g_40d0a4->field_4)\n
            {\n
                g_40d0a4 = g_40d098 + g_40d0a4->field_4 * v2;\n
            }\n
            else if (!sub_401f90())\n
            {\n
                g_40d0a4->field_4 = *(&v4);\n
                sub_4020b0();\n
                sub_401460(*(&v4));\n
                g_40d0a4 = g_40d098 + *(&v4) * v2;\n
            }\n
            else\n
            {\n
                g_40d0a4 = g_40d098 + v2 * 2;\n
                v7 = -5;\n
                return v7;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v7 = -12;\n
        return v7;\n
    }\n
}\n
", "4202380:sub_401f8c": null, "4202384:sub_401f90": "extern struct_0 *g_40d09c;\n
extern unsigned int g_40d0a0;\n
\n
int sub_401f90(unsigned int *v6)\n
{\n
    char v0;  // [bp-0x11]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < g_40d09c->field_8; v2 += 1)\n
    {\n
        if (*((g_40d0a0 + v2)) != 255)\n
            break;\n
    }\n
    if (v2 >= g_40d09c->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v0 = *((g_40d0a0 + v2));\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (!(v0 & 1))\n
            break;\n
        v0 >>= 1;\n
    }\n
    *(v6) = v2 * 8 + v1;\n
    if (*(v6) >= g_40d09c->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4202658:sub_4020a2": null, "4202672:sub_4020b0": "extern unsigned int g_40d098;\n
extern struct_0 *g_40d09c;\n
\n
int sub_4020b0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = g_40d09c->field_8;\n
    return sub_406a70(g_40d098 + v3 * v0, v0, v0);\n
}\n
", "4202727:sub_4020e7": null, "4202736:sub_4020f0": "extern struct_0 *g_40d09c;\n
extern unsigned int g_40d0a8;\n
\n
int sub_4020f0(char v16, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x44]\n
    void* v4;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x28]\n
    char v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v14;  // [bp-0x4]\n
    char v15;  // [bp+0x0]\n
\n
    v14 = &v15;\n
    if (v16 <= 5 && v16 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v16])\n
        {\n
            v13 = -11;\n
            return v13;\n
        }\n
        else if (!a0)\n
        {\n
            v13 = -6;\n
            return v13;\n
        }\n
        else if (a1)\n
        {\n
            if (a2 != (&g_40d0a8)[8 + 11 * v16] && a2 != 1 && !((&g_40d0a8)[9 + 11 * v16] & 1))\n
            {\n
                v13 = -14;\n
                return v13;\n
            }\n
            if ((&g_40d0a8)[10 + 11 * v16] > 2)\n
            {\n
                v0 = a1;\n
                v2 = sub_402410(v16, a0);\n
                v13 = v2;\n
                return v13;\n
            }\n
            v12 = a1;\n
            v4 = 0;\n
            v10 = (&g_40d0a8)[5 + 11 * v16];\n
            v9 = g_40d09c->field_8;\n
            while (true)\n
            {\n
                if (v12 > 0)\n
                {\n
                    v11 = (0 CONCAT v10) /m v9 >> 32;\n
                    if (!v11 && v10 == (&g_40d0a8)[6 + 11 * v16] && sub_4024e0() == -1)\n
                    {\n
                        v13 = -5;\n
                        return v13;\n
                    }\n
                    v6 = (&g_40d0a8)[1 + 11 * v16];\n
                    if (sub_402660((&g_40d0a8)[7 + 11 * v16]))\n
                    {\n
                        v13 = -8;\n
                        return v13;\n
                    }\n
                    v1 = *(&v5);\n
                    v7 = *((v1 + (0 CONCAT v10) /m v9 * 4));\n
                    cgc_deallocate(*(&v5));\n
                    v3 = sub_4065e0(v9 - v11);\n
                    if (sub_402660(v7))\n
                    {\n
                        v13 = -8;\n
                        return v13;\n
                    }\n
                    v0 = v3;\n
                    sub_406c30(*(&v8) + v11, a0 + v4);\n
                    sub_402720(*(&v8));\n
                    cgc_deallocate(*(&v8));\n
                    v4 = v3 + v4;\n
                    v12 -= v3;\n
                    if (v10 + v3 > (&g_40d0a8)[6 + 11 * v16])\n
                        (&g_40d0a8)[6 + 11 * v16] = v10 + v3;\n
                    v10 = v3 + v10;\n
                }\n
                else\n
                {\n
                    (&g_40d0a8)[5 + 11 * v16] = v10;\n
                    v13 = 0;\n
                    return v13;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v13 = -6;\n
            return v13;\n
        }\n
    }\n
    v13 = -11;\n
    return v13;\n
}\n
", "4203530:sub_40240a": null, "4203536:sub_402410": "extern char g_40d0a8;\n
\n
int sub_402410(char v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (sub_402660(*(&(&g_40d0a8)[28 + 44 * v6])))\n
    {\n
        v3 = -8;\n
        return v3;\n
    }\n
    v1 = *(&v2);\n
    if (a1 > *(&(&g_40d0a8)[24 + 44 * v6]))\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    v0 = a1;\n
    sub_406c30(*(v1), a0);\n
    *(&(&g_40d0a8)[24 + 44 * v6]) = a1;\n
    cgc_deallocate(*(&v2));\n
    v3 = 0;\n
    return v3;\n
}\n
", "4203736:sub_4024d8": null, "4203744:sub_4024e0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 *g_40d09c;\n
extern unsigned int g_40d0a8;\n
\n
int sub_4024e0(char v9)\n
{\n
    struct_0 *v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    if (v9 <= 5 && v9 >= 0)\n
    {\n
        if ((&g_40d0a8)[11 * v9])\n
        {\n
            v3 = (&g_40d0a8)[1 + 11 * v9];\n
            v0 = &v4;\n
            v1 = sub_402660((&g_40d0a8)[7 + 11 * v9]);\n
            if (v1)\n
            {\n
                v6 = -8;\n
                return v6;\n
            }\n
            for (v2 = 0; v2 < g_40d09c->field_1c; v2 += 1)\n
            {\n
                if (!*((*(&v4) + (v2 << 2))))\n
                    break;\n
            }\n
            if (v2 == g_40d09c->field_1c)\n
            {\n
                v6 = -1;\n
                return v6;\n
            }\n
            else if (!sub_401f90(&v5))\n
            {\n
                sub_401460(v5);\n
                *((*(&v4) + v2 * 4)) = v5;\n
                v0 = (&g_40d0a8)[7 + 11 * v9];\n
                sub_402720(*(&v4));\n
                v0 = g_40d09c->field_8;\n
                cgc_deallocate(*(&v4));\n
                v6 = v5;\n
                return v6;\n
            }\n
            else\n
            {\n
                v6 = -5;\n
                return v6;\n
            }\n
        }\n
        else\n
        {\n
            v6 = -11;\n
            return v6;\n
        }\n
    }\n
    v6 = -11;\n
    return v6;\n
}\n
", "4204126:sub_40265e": null, "4204128:sub_402660": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40d098;\n
extern struct_1 *g_40d09c;\n
\n
int sub_402660(unsigned int v7, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!g_40d098)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v2 = g_40d09c->field_8;\n
    v0 = &v3;\n
    v1 = cgc_allocate(v2, 0);\n
    if (v1 == 3)\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    else if (!v1)\n
    {\n
        v0 = v2;\n
        sub_406c30(*(&v3), g_40d098 + v7 * v2);\n
        *(a0) = *(&v3);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
}\n
", "4204311:sub_402717": null, "4204320:sub_402720": "extern unsigned int g_40d098;\n
extern struct_0 *g_40d09c;\n
\n
int sub_402720(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!g_40d098)\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
    v1 = g_40d09c->field_8;\n
    v0 = v1;\n
    sub_406c30(g_40d098 + a0 * v1, v5);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4204422:sub_402786": null, "4204432:sub_402790": "extern struct_0 *g_40d09c;\n
extern unsigned int g_40d0a8;\n
\n
int sub_402790(char v20, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int *v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    void* v15;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0xc]\n
    unsigned int v18;  // [bp-0x4]\n
    char v19;  // [bp+0x0]\n
\n
    v18 = &v19;\n
    if (a3)\n
        *(a3) = 0;\n
    if (v20 <= 5 && v20 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v20])\n
        {\n
            v17 = -11;\n
            return v17;\n
        }\n
        else if (!a0)\n
        {\n
            v17 = -6;\n
            return v17;\n
        }\n
        else if (a1)\n
        {\n
            if (a4 != (&g_40d0a8)[8 + 11 * v20] && a4 != 1 && !((&g_40d0a8)[9 + 11 * v20] & 2))\n
            {\n
                v17 = -14;\n
                return v17;\n
            }\n
            if ((&g_40d0a8)[10 + 11 * v20] > 2)\n
            {\n
                v0 = a3;\n
                v2 = sub_402b10(v20, a0, a1);\n
                v17 = v2;\n
                return v17;\n
            }\n
            v16 = a1;\n
            v15 = 0;\n
            if (a2)\n
            {\n
                v3 = a2;\n
                if (sub_402c80(v20))\n
                {\n
                    v17 = -6;\n
                    return v17;\n
                }\n
            }\n
            v9 = (&g_40d0a8)[1 + 11 * v20];\n
            v14 = (&g_40d0a8)[3 + 11 * v20];\n
            for (v6 = g_40d09c->field_8; v16; v14 = v7 + v14)\n
            {\n
                if (v14 == (&g_40d0a8)[6 + 11 * v20])\n
                    break;\n
                v13 = (0 CONCAT v14) /m v6;\n
                if (sub_402660((&g_40d0a8)[7 + 11 * v20], &v10))\n
                {\n
                    v17 = -8;\n
                    return v17;\n
                }\n
                v12 = *((v10 + v13 * 4));\n
                cgc_deallocate(v10);\n
                if (sub_402660(v12, &v11))\n
                {\n
                    v17 = -8;\n
                    return v17;\n
                }\n
                v8 = (0 CONCAT v14) /m v6 >> 32;\n
                v4 = v6 - v8;\n
                v5 = (&g_40d0a8)[6 + 11 * v20] - v14;\n
                v1 = v16;\n
                v7 = sub_4065e0(sub_4065e0(v5));\n
                sub_406c30(a0 + v15, v11 + v8);\n
                cgc_deallocate(v11);\n
                v15 = v7 + v15;\n
                v16 -= v7;\n
            }\n
            (&g_40d0a8)[3 + 11 * v20] = v14;\n
            if (a3)\n
                *(a3) = v15;\n
            if (v14 == (&g_40d0a8)[6 + 11 * v20])\n
            {\n
                v17 = -7;\n
                return v17;\n
            }\n
            v17 = 0;\n
            return v17;\n
        }\n
        else\n
        {\n
            v17 = -6;\n
            return v17;\n
        }\n
    }\n
    v17 = -11;\n
    return v17;\n
}\n
", "4205314:sub_402b02": null, "4205328:sub_402b10": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_40d0a8;\n
\n
int sub_402b10(char v7, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    struct_0 *v8;  // eax\n
\n
    v5 = &v6;\n
    if (sub_402660(*(&(&g_40d0a8)[28 + 44 * v7]), &v3))\n
    {\n
        v4 = -8;\n
        return v4;\n
    }\n
    v1 = v3;\n
    if (*(&(&g_40d0a8)[12 + 44 * v7]) >= *(&(&g_40d0a8)[24 + 44 * v7]))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v2 = sub_4065e0(a1);\n
    v0 = v2;\n
    sub_406c30(a0, *(v1) + *(&(&g_40d0a8)[12 + 44 * v7]));\n
    if (a2)\n
        *(a2) = v2;\n
    v8 = &(&g_40d0a8)[44 * v7];\n
    v8->field_c = v2 + v8->field_c;\n
    cgc_deallocate(v3);\n
    if (*(&(&g_40d0a8)[12 + 44 * v7]) >= *(&(&g_40d0a8)[24 + 44 * v7]))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205695:sub_402c7f": null, "4205696:sub_402c80": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern unsigned int g_40d0a8;\n
\n
int sub_402c80(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v3])\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if ((&g_40d0a8)[3 + 11 * v3] + a0 <= (&g_40d0a8)[6 + 11 * v3])\n
        {\n
            if ((&g_40d0a8)[3 + 11 * v3] + a0 < 0)\n
            {\n
                (&g_40d0a8)[3 + 11 * v3] = 0;\n
            }\n
            else\n
            {\n
                v5 = &(&g_40d0a8)[11 * v3];\n
                v5->field_c = a0 + v5->field_c;\n
            }\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4205933:sub_402d6d": null, "4205936:sub_402d70": "int sub_402d70(char v6, char *a0, unsigned int a1, char a2, unsigned int a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v1;  // [bp-0xe]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 < 0)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 = sub_402790(v6, &v1, 1, 0, NULL, 1);\n
        if (v1 == a2)\n
            break;\n
        if (v2 == -7)\n
            break;\n
        if (v2 < 0)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        else if (v0 < a1)\n
        {\n
            *(a0) = v1;\n
            v0 += 1;\n
            a0 += 1;\n
            *(a0) = 0;\n
        }\n
    }\n
    v3 = v0;\n
    return v3;\n
}\n
", "4206162:sub_402e52": null, "4206176:sub_402e60": "extern unsigned int g_40d0a8;\n
\n
int sub_402e60(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v3])\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (a0 <= (&g_40d0a8)[6 + 11 * v3])\n
        {\n
            (&g_40d0a8)[3 + 11 * v3] = a0;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4206335:sub_402eff": null, "4206336:sub_402f00": "extern unsigned int g_40d0a8;\n
\n
int sub_402f00(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v3])\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (a0 <= (&g_40d0a8)[6 + 11 * v3])\n
        {\n
            (&g_40d0a8)[5 + 11 * v3] = a0;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4206495:sub_402f9f": null, "4206496:sub_402fa0": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern unsigned int g_40d0a8;\n
\n
int sub_402fa0(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v3])\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if ((&g_40d0a8)[5 + 11 * v3] + a0 <= (&g_40d0a8)[6 + 11 * v3])\n
        {\n
            if ((&g_40d0a8)[5 + 11 * v3] + a0 < 0)\n
            {\n
                (&g_40d0a8)[5 + 11 * v3] = 0;\n
            }\n
            else\n
            {\n
                v5 = &(&g_40d0a8)[11 * v3];\n
                v5->field_14 = a0 + v5->field_14;\n
            }\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4206733:sub_40308d": null, "4206736:sub_403090": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 *g_40d0a4;\n
extern unsigned int g_40d0a8;\n
\n
int sub_403090(char v8, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (v8 <= 5 && v8 >= 0)\n
    {\n
        if ((&g_40d0a8)[11 * v8])\n
        {\n
            if (a0 != (&g_40d0a8)[8 + 11 * v8] && a0 != 1 && !((&g_40d0a8)[9 + 11 * v8] & 1))\n
            {\n
                v5 = -14;\n
                return v5;\n
            }\n
            v4 = (&g_40d0a8)[1 + 11 * v8];\n
            v1 = sub_402660((&g_40d0a8)[7 + 11 * v8], &v3);\n
            if (v1)\n
            {\n
                v5 = -8;\n
                return v5;\n
            }\n
            if ((&g_40d0a8)[10 + 11 * v8] > 2)\n
            {\n
                v0 = v3;\n
                if (v0->field_0 > 0 && !v0->field_8)\n
                    sub_403f90();\n
            }\n
            else\n
            {\n
                for (v2 = v3; *(v2); v2 += 4)\n
                {\n
                    sub_4020b0(*(v2));\n
                    sub_403340();\n
                }\n
            }\n
            cgc_deallocate(v3);\n
            sub_4020b0((&g_40d0a8)[7 + 11 * v8]);\n
            sub_403340();\n
            g_40d0a4[8 + 16 * v4].padding_0[0] = 0;\n
            *(&g_40d0a4[5 + 16 * v4].padding_0) = 0;\n
            *(&g_40d0a4[7 + 16 * v4].padding_0) = 0;\n
            g_40d0a4->field_2 = g_40d0a4->field_2 - 1;\n
            (&g_40d0a8)[1 + 11 * v8] = 0;\n
            (&g_40d0a8)[11 * v8] = 0;\n
            (&g_40d0a8)[5 + 11 * v8] = 0;\n
            (&g_40d0a8)[3 + 11 * v8] = 0;\n
            (&g_40d0a8)[6 + 11 * v8] = 0;\n
            *(&(&g_40d0a8)[9 + 11 * v8]) = 0;\n
            v5 = 0;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4207422:sub_40333e": null, "4207424:sub_403340": "extern unsigned int g_40d0a0;\n
\n
int sub_403340(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // ecx\n
\n
    v2 = &v3;\n
    v1 = v4 >> 3;\n
    v0 = v4 & 7;\n
    v5 = v1;\n
    v5[g_40d0a0] = v5[g_40d0a0] & ((1 << (v0 & 31)) ^ 255);\n
    return g_40d0a0;\n
}\n
", "4207488:sub_403380": "extern unsigned int g_40d0a8;\n
\n
int sub_403380(char v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 <= 5 && v7 >= 0)\n
    {\n
        if (!(&g_40d0a8)[11 * v7])\n
        {\n
            v4 = -11;\n
            return v4;\n
        }\n
        else if ((&g_40d0a8)[10 + 11 * v7] <= 2)\n
        {\n
            if (a0 != (&g_40d0a8)[8 + 11 * v7] && a0 != 1 && !((&g_40d0a8)[9 + 11 * v7] & 1))\n
            {\n
                v4 = -14;\n
                return v4;\n
            }\n
            v3 = (&g_40d0a8)[1 + 11 * v7];\n
            v0 = sub_402660((&g_40d0a8)[7 + 11 * v7], &v2);\n
            if (v0)\n
            {\n
                v4 = -8;\n
                return v4;\n
            }\n
            for (v1 = v2; *(v1); v1 += 4)\n
            {\n
                sub_4020b0(*(v1));\n
                sub_403340(*(v1));\n
            }\n
            cgc_deallocate(v2);\n
            sub_4020b0((&g_40d0a8)[7 + 11 * v7]);\n
            (&g_40d0a8)[5 + 11 * v7] = 0;\n
            (&g_40d0a8)[3 + 11 * v7] = 0;\n
            (&g_40d0a8)[2 + 11 * v7] = 0;\n
            (&g_40d0a8)[4 + 11 * v7] = 0;\n
            (&g_40d0a8)[6 + 11 * v7] = 0;\n
            sub_401b90(v7);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = -11;\n
    return v4;\n
}\n
", "4208014:sub_40358e": null, "4208016:sub_403590": "typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
extern unsigned int g_40d098;\n
extern struct_1 *g_40d09c;\n
extern struct_2 *g_40d0a4;\n
extern struct_0 *g_40d184;\n
extern unsigned int g_40d188;\n
extern unsigned int g_40d18c;\n
\n
int sub_403590(char *v10, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    void* v1;  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x58]\n
    char v3;  // [bp-0x39]\n
    char v4;  // [bp-0x11]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    if (!g_40d0a4)\n
    {\n
        v7 = -9;\n
        return v7;\n
    }\n
    v1 = 0;\n
    v2 = g_40d09c->field_8;\n
    while (true)\n
    {\n
        v5 = &g_40d0a4[1];\n
        v6 = 0;\n
        while (true)\n
        {\n
            if (v6 >= g_40d09c->field_18)\n
            {\n
                if (!g_40d0a4->field_4)\n
                {\n
                    g_40d0a4 = g_40d098 + v2 * 2;\n
                    v7 = -1;\n
                    return v7;\n
                }\n
                g_40d0a4 = g_40d098 + g_40d0a4->field_4 * v2;\n
                break;\n
            }\n
            if (!v5->field_18)\n
            {\n
                v5 = &v5[2].padding_0[14];\n
                v1 += 1;\n
LABEL_4036ad:\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                v0 = 40;\n
                sub_406ba0(&v3, &v5->field_18);\n
                v4 = 0;\n
                if (*(v10) && sub_406cc0(v10) != 1)\n
                {\n
                    v5 = &v5[2].padding_0[14];\n
                    goto LABEL_4036ad;\n
                }\n
                g_40d184 = v5;\n
                g_40d188 = v1;\n
                v0 = 40;\n
                sub_406ba0(&g_40d18c, v10);\n
                *(a0) = &g_40d184;\n
                v7 = 0;\n
                return v7;\n
            }\n
        }\n
    }\n
}\n
", "4208402:sub_403712": null, "4208416:sub_403720": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_2;\n
\n
extern unsigned int g_40d098;\n
extern struct_1 *g_40d09c;\n
extern struct_0 *g_40d0a4;\n
\n
int sub_403720(struct_3 *v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    struct_3 *v8;  // eax\n
    struct_3 *v9;  // eax\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = g_40d09c->field_8;\n
    v3 = (0 CONCAT v7->field_4) /m g_40d09c->field_18;\n
    for (v2 = (0 CONCAT v7->field_4) /m g_40d09c->field_18 >> 32; v3 > 0; v3 -= 1)\n
    {\n
        g_40d0a4 = g_40d098 + g_40d0a4->field_4 * g_40d09c->field_8;\n
    }\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            if (v7->field_0 >= &g_40d0a4[8 * g_40d09c->field_18].padding_0[1])\n
            {\n
                if (g_40d0a4->field_4)\n
                {\n
                    g_40d0a4 = g_40d098 + g_40d0a4->field_4 * v1;\n
                    break;\n
                }\n
                else\n
                {\n
                    g_40d0a4 = g_40d098 + v1 * 2;\n
                    v4 = -1;\n
                    return v4;\n
                }\n
            }\n
            if (v7->field_0 < g_40d0a4 + 1)\n
            {\n
                v7->field_0 = &g_40d0a4[1];\n
            }\n
            else\n
            {\n
                v8 = v7;\n
                v8->field_0 = &v8->field_0[2].padding_0[14];\n
            }\n
            v9 = v7;\n
            v9->field_4 = v9->field_4 + 1;\n
            if (!v7->field_0->field_18)\n
                continue;\n
            if (!v7->field_8)\n
            {\n
LABEL_403860:\n
                g_40d0a4 = g_40d098 + v1 * 2;\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = &v7->field_0->field_18;\n
            if (sub_406cc0(&v7->field_8) == 1)\n
                goto LABEL_403860;\n
        }\n
    }\n
}\n
", "4208857:sub_4038d9": null, "4208864:sub_4038e0": "extern struct_0 *g_40d09c;\n
\n
int sub_4038e0(unsigned int v3[6])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
    else if (g_40d09c)\n
    {\n
        v3[0] = g_40d09c->field_4;\n
        v3[1] = g_40d09c->field_8;\n
        v3[2] = g_40d09c->field_c;\n
        v3[3] = 0;\n
        v3[4] = g_40d09c->field_18;\n
        v3[5] = g_40d09c->field_1c;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -9;\n
        return v0;\n
    }\n
}\n
", "4209012:sub_403974": null, "4209024:sub_403980": "extern struct_0 *g_40d09c;\n
extern struct_1 *g_40d0a4;\n
\n
int sub_403980(unsigned int v7, unsigned int a0, unsigned int a1, char a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    else if (!g_40d0a4)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    else if (sub_4014a0(v7, NULL))\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            if (v3 >= g_40d09c->field_18)\n
            {\n
                v4 = -10;\n
                return v4;\n
            }\n
            if (!*(32 + &g_40d0a4->padding_0[0] + 0x40 * v3))\n
                break;\n
            v3 += 1;\n
        }\n
        v0 = 40;\n
        sub_406ba0(&(&g_40d0a4[16 * v3].field_2)[12], v7);\n
        *(&g_40d0a4[5 + 16 * v3].padding_0) = a1;\n
        *(&g_40d0a4[6 + 16 * v3].padding_0) = a2 + 3;\n
        *(&g_40d0a4[3 + 16 * v3].padding_0) = a3;\n
        g_40d0a4[4 + 16 * v3].padding_0[0] = 0;\n
        if (sub_401f90(&v2))\n
        {\n
            v4 = -5;\n
            return v4;\n
        }\n
        sub_4020b0(v2);\n
        sub_401460(v2);\n
        *(&g_40d0a4[7 + 16 * v3].padding_0) = v2;\n
        g_40d0a4->field_2 = g_40d0a4->field_2 + 1;\n
        sub_402660(v2, &v1);\n
        *(v1) = a0;\n
        v1[1] = a1;\n
        *(&v1[2]) = a2;\n
        sub_402720(v1, v2);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -12;\n
        return v4;\n
    }\n
}\n
", "4209536:sub_403b80": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403b80(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v1 = 0;\n
            v0 = &v1;\n
            if (cgc_receive(0, v6 + v2, a0 - v2))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4209692:sub_403c1c": null, "4209696:sub_403c20": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char g_40d1b4;\n
extern struct_0 *g_40d3b4;\n
extern void* g_40d3b8;\n
\n
int sub_403c20(char *v8, char a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0x200;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            if (g_40d3b4 >= g_40d3b8 && g_40d3b4 == 0x200)\n
            {\n
                g_40d3b4 = 0;\n
                g_40d3b8 = 0;\n
                break;\n
            }\n
            if (*((g_40d3b4 + &g_40d1b4)) == a0)\n
            {\n
                *(v8) = 0;\n
                g_40d3b4 = &g_40d3b4->padding_0[1];\n
                goto LABEL_403d92;\n
            }\n
            else\n
            {\n
                *(v8) = *((g_40d3b4 + &g_40d1b4));\n
                v2 += 1;\n
                v8 += 1;\n
                if (v2 == a1)\n
                {\n
                    *(v8) = 0;\n
LABEL_403d92:\n
                    v5 = v2;\n
                    return v5;\n
                }\n
                g_40d3b4 = &g_40d3b4->padding_0[1];\n
            }\n
        }\n
        if (g_40d3b8 < g_40d3b4)\n
            v3 = g_40d3b4 - g_40d3b8;\n
        else\n
            v3 = 0x200 - g_40d3b8;\n
        v0 = &v1;\n
        if (cgc_receive(0, &g_40d1b4 + g_40d3b8, v3))\n
            cgc__terminate();\n
        g_40d3b8 = v1 + g_40d3b8;\n
    }\n
}\n
", "4210080:sub_403da0": "extern char g_40d3bc;\n
\n
int sub_403da0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = g_40d3bc;\n
    if (!v6)\n
        return g_40d3bc;\n
    v7 = v6;\n
    if (*(v7) <= 1016)\n
    {\n
        if (*(v6) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v6) >> 3;\n
        *((v6 + 4)) = (&g_40d3bc)[v2];\n
        v1 = v6;\n
        if (*(v6) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v6) >> 3;\n
        v7 = v0;\n
        (&g_40d3bc)[v7] = v1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v7;\n
        if (!*((v3 + 4)))\n
        {\n
            *((v3 + 4)) = v6;\n
            *((v6 + 8)) = v3;\n
            v7 = v6;\n
            *((v7 + 4)) = 0;\n
            return v6;\n
        }\n
        else if (*(v6) >= *(*((v3 + 4))))\n
        {\n
            v7 = *((v3 + 4));\n
            v3 = v7;\n
        }\n
        else\n
        {\n
            *((v6 + 4)) = *((v3 + 4));\n
            *((v6 + 8)) = v3;\n
            *((*((v3 + 4)) + 8)) = v6;\n
            v7 = v3;\n
            *((v7 + 4)) = v6;\n
            return v3;\n
        }\n
    }\n
}\n
", "4210395:sub_403edb": null, "4210400:sub_403ee0": "extern struct_0 *g_40d3bc;\n
\n
int sub_403ee0(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v3 += 4;\n
    v3 = v3 + 4095 & -0x1000;\n
    if (cgc_allocate(v3, 0, &v0, 0, 0))\n
        cgc__terminate();\n
    sub_406a70(v0);\n
    *(v0) = v3 - 4;\n
    if (!g_40d3bc)\n
    {\n
        v4 = v0;\n
        g_40d3bc = v4;\n
        return v0;\n
    }\n
    v4 = sub_403da0(v0);\n
    return v4;\n
}\n
", "4210568:sub_403f88": null, "4210576:sub_403f90": "int sub_403f90(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = v3;\n
    v0 = 0;\n
    if (v3)\n
    {\n
        v0 = v3 - 4;\n
        v4 = sub_403da0(v0);\n
    }\n
    return v4;\n
}\n
", "4210627:sub_403fc3": null, "4210640:sub_403fd0": "extern struct_0 *g_40d3bc;\n
\n
int sub_403fd0()\n
{\n
    unsigned int v0[3];  // [bp-0xc]\n
    unsigned int v1[3];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (cgc_allocate(0x1000, 0, &g_40d3bc, 0, 0))\n
        cgc__terminate();\n
    sub_406a70(g_40d3bc);\n
    v1[0] = g_40d3bc;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4080;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4210812:sub_40407c": null, "4210816:sub_404080": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404080(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_2 *v3;  // eax, Other Possible Types: unsigned int, struct_1 *\n
\n
    v0 = &v1;\n
    if (!v2)\n
        return v2;\n
    if (v2->field_8)\n
        v2->field_8->field_4 = v2->field_4;\n
    v3 = v2;\n
    if (!v3->field_4)\n
        return v3;\n
    v3 = v2->field_4;\n
    v3->field_8 = v2->field_8;\n
}\n
", "4210900:sub_4040d4": null, "4210912:sub_4040e0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_0 *g_40d3bc;\n
\n
int sub_4040e0(unsigned int v5)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!g_40d3bc)\n
        sub_403fd0();\n
    for (v1 = g_40d3bc; v1; v1 = v1->field_4)\n
    {\n
        if (v1->field_0 >= v5)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        sub_403ee0(v5);\n
        v2 = sub_4040e0(v5);\n
        return v2;\n
    }\n
    sub_404080(v1);\n
    if (*(v1) - v5 < 12)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + v5;\n
    *(v0) = *(v1) - (v5 + 4);\n
    *(v1) = v5;\n
    sub_403da0(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4211157:sub_4041d5": null, "4211168:sub_4041e0": "int sub_4041e0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_404240();\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    sub_406a70(v1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4211256:sub_404238": null, "4211264:sub_404240": "typedef struct struct_1 {\n
    char padding_0[4248508];\n
    struct struct_0 *field_40d3bc;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40d3bc[4];\n
\n
int sub_404240(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4040e0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_40d3bc[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40d3bc[v2];\n
        g_40d3bc[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4040e0(v6);\n
    return v3;\n
}\n
", "4211520:sub_404340": "typedef struct struct_1 {\n
    char padding_0[4248508];\n
    struct struct_0 *field_40d3bc;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40d3bc[4];\n
\n
int sub_404240(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_4040e0(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 = &v2->padding_0[1])\n
    {\n
        if (*((0x4 * v2 + &g_40d3bc[0])))\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40d3bc[v2];\n
        g_40d3bc[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_4040e0(v6);\n
    return v3;\n
}\n
", "4211700:sub_4043f4": null, "4211712:sub_404400": null, "4211920:sub_4044d0": "extern unsigned int g_40d5bc;\n
extern void* g_40d63c;\n
\n
int sub_4044d0(unsigned int v5, unsigned int a0[1062256])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2[1062256];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[1062256];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 128;\n
    sub_406a70(&g_40d5bc);\n
    g_40d63c = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2[0] = 0; v2 < a0; v2 += 1)\n
    {\n
        (&g_40d5bc)[v2] = *((v5 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2[0] = v6;\n
        if (v2 >= 32)\n
            break;\n
        v1 = (&g_40d5bc)[&v2[0] + 1 & 31];\n
        (&g_40d5bc)[v2] = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4212117:sub_404595": null, "4212128:sub_4045a0": "int sub_4045a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4044d0(&v2, 0x1);\n
}\n
", "4212161:sub_4045c1": null, "4212176:sub_4045d0": "extern char g_40d5bc;\n
extern struct_0 *g_40d63c;\n
\n
int sub_4045d0()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = *((0x4 * g_40d63c + &g_40d5bc));\n
    v7 = *(&(&g_40d5bc)[4 * (&g_40d63c->padding_0[3] & 31)]);\n
    v6 = *(&(&g_40d5bc)[4 * (&g_40d63c->padding_0[24] & 31)]);\n
    v5 = *(&(&g_40d5bc)[4 * (&g_40d63c->padding_0[10] & 31)]);\n
    v4 = *(&(&g_40d5bc)[4 * (&g_40d63c->padding_0[31] & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *((0x4 * g_40d63c + &g_40d5bc)) = v1;\n
    *(&(&g_40d5bc)[4 * (&g_40d63c->padding_0[31] & 31)]) = v0;\n
    g_40d63c = &g_40d63c->padding_0[31] & 31;\n
    return v0;\n
}\n
", "4212436:sub_4046d4": null, "4212448:sub_4046e0": "int sub_4046e0(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 > a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v7 != a0)\n
    {\n
        v2 = a0 - v7 + 1;\n
        if (!v2)\n
        {\n
            v4 = sub_4045d0();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = sub_4045d0();\n
        } while (v3 >= v2 * v1);\n
        v0 = v7;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v7;\n
        return v4;\n
    }\n
}\n
", "4212624:sub_404790": "int sub_404790(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4212711:sub_4047e7": null, "4212720:sub_4047f0": "int sub_4047f0(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4212754:sub_404812": null, "4212768:sub_404820": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
int sub_404820(struct_0 *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // esi\n
    unsigned int v10;  // ecx\n
\n
    v4 = &v5;\n
    v2 = v6;\n
    while (true)\n
    {\n
        if (v2->field_100 >= 0x100)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(1, v2, v2->field_100))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (*(&v1))\n
            {\n
                v7 = v2;\n
                v7->field_100 = v7->field_100 - *(&v1);\n
            }\n
            else\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v8 = v2;\n
            v8->field_100 = v8->field_100 + 1;\n
            (&v2->field_0)[v10] = a0;\n
            v3 = a1 + 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4212979:sub_4048f3": null, "4212992:sub_404900": "int sub_404900(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v5, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4213070:sub_40494e": null, "4213072:sub_404950": "int sub_404950(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    v2 = sub_4068d0();\n
    while (true)\n
    {\n
        if (v1 == v2)\n
        {\n
            sub_404900(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v3;\n
        if (cgc_transmit(1, v7 + v1, v2 - v1))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (*(&v3))\n
        {\n
            v1 = *(&v3) + v1;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4213237:sub_4049f5": null, "4213248:sub_404a00": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404a00(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x12c]\n
    unsigned int v1;  // [bp-0x124]\n
    void* v2;  // [bp-0x120]\n
    struct_0 *v3;  // [bp-0x11c]\n
    char v4;  // [bp-0x116]\n
    unsigned short v5;  // [bp-0x16]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // esi\n
\n
    v10 = &v11;\n
    v9 = v13;\n
    v8 = v14;\n
    v6 = sub_404820;\n
    v5 = 0;\n
    v3 = &v4;\n
    v2 = 0;\n
    v0 = a0;\n
    v1 = sub_404ad0(v3, v6, v2, v12);\n
    if (v5 > 0)\n
    {\n
        if (cgc_transmit(1, &v4, v5))\n
        {\n
            v7 = -1;\n
            goto LABEL_404ac2;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
        }\n
    }\n
    v7 = v1;\n
LABEL_404ac2:\n
    return v7;\n
}\n
", "4213455:sub_404acf": null, "4213456:sub_404ad0": "int sub_404ad0(struct struct_0 **v6, struct struct_0 **a0, struct struct_0 **a1, struct struct_0 **a2, struct struct_0 **a3)\n
{\n
    struct struct_0 **<0x404ad0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    struct struct_0 **v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x1c]\n
    struct struct_0 **v9;  // [bp+0x20]\n
    struct struct_0 **v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28]\n
    struct struct_0 **v12;  // [bp+0x2c]\n
    struct struct_0 **v13;  // [bp+0x30]\n
    unsigned int v14;  // [bp+0x34]\n
    char v15;  // [bp+0x39]\n
    char v16;  // [bp+0x3a]\n
    char v17;  // [bp+0x3b]\n
    unsigned int *v18;  // [bp+0x3c]\n
    struct struct_0 **v19;  // [bp+0x40]\n
    struct struct_0 **v20;  // [bp+0x48]\n
    struct struct_0 **v21;  // [bp+0x50]\n
    struct struct_0 **v22;  // [bp+0x54]\n
    struct struct_0 **v23;  // [bp+0x58]\n
    struct struct_0 **v24;  // [bp+0x5c]\n
    struct struct_0 **v25;  // [bp+0x60]\n
    struct struct_0 **v26;  // [bp+0x64]\n
    char v27;  // [bp+0x6b]\n
    struct struct_0 **v28;  // [bp+0x6c], Other Possible Types: unsigned int\n
    void* v29;  // [bp+0x70]\n
    struct struct_0 **v30;  // [bp+0x74], Other Possible Types: unsigned int\n
    struct struct_0 **v31;  // [bp+0x78], Other Possible Types: unsigned int\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    struct struct_0 **v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    struct struct_0 **v41;  // eax\n
\n
    v4 = &<0x404ad0[is_2]|Stack bp, 1 B>;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(a2))\n
            return a1;\n
        v27 = *(a2);\n
        a2 = a2 + 1;\n
        if (v27 != 36)\n
        {\n
            v32 = a0;\n
            v5 = v6;\n
            v6 = v27;\n
            a0 = a1;\n
            a1 = v32(v6, a0);\n
        }\n
        else\n
        {\n
            v28 = 0;\n
            v29 = 0;\n
            v30 = 0;\n
            v31 = 0;\n
            if (!*(a2))\n
                return a1;\n
            if (*(a2) != 36)\n
            {\n
                if (*(a2) == 45)\n
                {\n
                    v31 |= 1;\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v5 = *(a2);\n
                if (sub_401000(*(a2)))\n
                {\n
                    if (*(a2) == 48)\n
                        v31 |= 4;\n
                    v26 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v26;\n
                    v30 = sub_406690();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                if (*(a2) == 46)\n
                {\n
                    a2 = a2 + 1;\n
                    if (!*(a2))\n
                        return a1;\n
                    v25 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 = a2 + 1;\n
                    }\n
                    v5 = v25;\n
                    v28 = sub_406690();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v14 = *(a2) - 88;\n
                switch (v14)\n
                {\n
                case 0:\n
                    v31 |= 8;\n
                    v37 = a3;\n
                    a3 = v37 + 1;\n
                    v21 = &*(v37)->field_0;\n
                    v10 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v21;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v10;\n
                    a1 = sub_405280(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 11:\n
                    v41 = a3;\n
                    a3 = v41 + 1;\n
                    v17 = *(v41);\n
                    v15 = v17;\n
                    v16 = 0;\n
                    v9 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = &v15;\n
                    a2 = v30;\n
                    a3 = 0;\n
                    v7 = v9;\n
                    a1 = sub_406350(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 12:\n
                    v35 = a3;\n
                    a3 = v35 + 1;\n
                    v23 = &*(v35)->field_0;\n
                    v12 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v23;\n
                    a2 = 10;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v12;\n
                    a1 = sub_405280(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 13:\n
                    v31 |= 16;\n
                    v39 = a3;\n
                    a3 = v39 + 2;\n
                    *(&v19) = *(&v39);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v19);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_4060a0(v6, a0, a1);\n
                    break;\n
                case 14:\n
                    v38 = a3;\n
                    a3 = v38 + 2;\n
                    *(&v20) = *(&v38);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v20);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_4060a0(v6, a0, a1);\n
                    break;\n
                case 22:\n
                    v40 = a3;\n
                    a3 = v40 + 1;\n
                    v18 = &*(v40)->field_0;\n
                    *(v18) = a1;\n
                    break;\n
                case 27:\n
                    v34 = a3;\n
                    a3 = v34 + 1;\n
                    v24 = &*(v34)->field_0;\n
                    v13 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v24;\n
                    a2 = v30;\n
                    a3 = v28;\n
                    v7 = v13;\n
                    a1 = sub_406350(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 32:\n
                    v36 = a3;\n
                    a3 = v36 + 1;\n
                    v22 = &*(v36)->field_0;\n
                    v11 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v22;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v11;\n
                    a1 = sub_405280(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                a2 = a2 + 1;\n
            }\n
            else\n
            {\n
                v33 = a0;\n
                v5 = v6;\n
                v6 = 36;\n
                a0 = a1;\n
                a1 = v33(v6, a0);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4214811:sub_40501b": null, "4214816:sub_405020": "int sub_405020(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_404a00(v4, v1);\n
    return v0;\n
}\n
", "4214860:sub_40504c": null, "4214864:sub_405050": "int sub_405050(void* **v7, void* **a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* **v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
\n
    v5 = &v6;\n
    v4 = v8;\n
    v3 = v9;\n
    v2 = &sub_404790;\n
    v1 = 0;\n
    v0 = 0;\n
    v10 = v3;\n
    v11 = v4;\n
    return sub_404ad0(v1, v2, v0, v7, a0);\n
}\n
", "4214947:sub_4050a3": null, "4214960:sub_4050b0": "int sub_4050b0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
\n
    v4 = &v5;\n
    v3 = v8;\n
    v2 = &v7;\n
    v0 = v2;\n
    v1 = sub_4050f0(v6, a0);\n
    v9 = v3;\n
    return v1;\n
}\n
", "4215015:sub_4050e7": null, "4215024:sub_4050f0": "int sub_4050f0(unsigned int v8, void* **a0, void* **a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* **v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
\n
    v6 = &v7;\n
    v5 = v9;\n
    v4 = v10;\n
    v3 = &sub_4047f0;\n
    v2 = v8;\n
    v1 = 0;\n
    v0 = sub_404ad0(v2, v3, v1, a0, a1);\n
    v3(v2, 0);\n
    v11 = v4;\n
    v12 = v5;\n
    return v0;\n
}\n
", "4215143:sub_405167": null, "4215152:sub_405170": "int sub_405170(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m a0 >> 32;\n
        v5 = (0 CONCAT v5) /m a0;\n
        if (a0 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a1[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a1[v9] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4215424:sub_405280": "int sub_405280(unsigned int v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    struct struct_0 **v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v3 = 1;\n
        a2 = -(a2);\n
        v5 += 1;\n
    }\n
    v2 = sub_405170(a2, a3, &v1, a6);\n
    v5 = v2 + v5;\n
    if (a4 > 0 && v5 < a4)\n
        v4 = a4 - v5;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < a5)\n
            v4 = a5 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v8, 45);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v8, 48);\n
            else\n
                a1 = a0(v8, 32);\n
        }\n
    }\n
    if (v3)\n
    {\n
        a1 = a0(v8, 45);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 = v0 + 1)\n
    {\n
        a1 = a0(v8, *((&v0 + v0)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v10 = v4;\n
        v4 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        a1 = a0(v8, 32);\n
    }\n
    return a1;\n
}\n
", "4216042:sub_4054ea": null, "4216048:sub_4054f0": null, "4219031:sub_406097": null, "4219040:sub_4060a0": "int sub_4060a0()\n
{\n
    int <0x4060a0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned long v6;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xc]\n
    char v10;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x14]\n
    char v12;  // [bp+0x18]\n
    char v13;  // [bp+0x1c]\n
    char v14;  // [bp+0x20]\n
    unsigned int v15;  // [bp+0x38]\n
    char v16;  // [bp+0x3f]\n
    unsigned int v17;  // [bp+0x40]\n
    unsigned int v18;  // [bp+0x44], Other Possible Types: char\n
    unsigned long v19;  // [bp+0x48], Other Possible Types: char\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ebp\n
\n
    v5 = &<0x4060a0[is_2]|Stack bp, 1 B>;\n
    *(&v4) = *(&v10);\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (((CmpF(0, *(&v4)) & 69 | ((CmpF(0, *(&v4)) & 69) >> 6)) & 1) != 1)\n
    {\n
        *(&v19) = (0 CONCAT *(&v19)) ^ 0x80000000000000008000000000000000;\n
        v16 = 1;\n
        v18 = *(&v18) + 1;\n
    }\n
    if (!*(&v13))\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = 6;\n
    }\n
    else\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = *(&v13);\n
    }\n
    v9 = &v12;\n
    v10 = *(&v14);\n
    v15 = sub_4054f0();\n
    v18 = v15 + v18;\n
    if (*(&v12) > 0 && v18 < *(&v12))\n
        v17 = *(&v12) - v18;\n
    if (!(*(&v14) & 1))\n
    {\n
        if (v16 && v17 > 0 && (*(&v14) & 4))\n
        {\n
            v20 = v8;\n
            v6 = (&v6)[1];\n
            v7 = 45;\n
            v8 = v9;\n
            v9 = v20(v7, v8);\n
            v16 = 0;\n
        }\n
        while (true)\n
        {\n
            v21 = v17;\n
            v17 = v21 - 1;\n
            if (v21 <= 0)\n
                break;\n
            if (!(*(&v14) & 4))\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 32;\n
            }\n
            else\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 48;\n
            }\n
            v8 = v9;\n
            v9 = v22(v7, v8);\n
        }\n
    }\n
    if (v16)\n
    {\n
        v23 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 45;\n
        v8 = v9;\n
        v9 = v23(v7, v8);\n
        v16 = 0;\n
    }\n
    for (v11 = 0; v11 < v15; v11 += 1)\n
    {\n
        v24 = v8;\n
        v6 = (&v6)[1];\n
        v7 = (&v12)[v11];\n
        v8 = v9;\n
        v9 = v24(v7, v8);\n
    }\n
    if (!(*(&v14) & 1))\n
    {\n
        v27 = v5;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v25 = v17;\n
        v17 = v25 - 1;\n
        if (v25 <= 0)\n
            break;\n
        v26 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 32;\n
        v8 = v9;\n
        v9 = v26(v7, v8);\n
    }\n
    v27 = v5;\n
    return;\n
}\n
", "4219727:sub_40634f": null, "4219728:sub_406350": "int sub_406350(unsigned int v6, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // edx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v4 = &v5; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v6, *(a2));\n
        }\n
        v3 = a1;\n
        return v3;\n
    }\n
    v2 = sub_4068d0();\n
    v1 = 0;\n
    if (a4 > 0 && v2 > a4)\n
        v2 = a4;\n
    if (a3 > 0 && v2 < a3)\n
        v1 = a3 - v2;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v7 = v1;\n
            v1 = v7 - 1;\n
            if (v7 <= 0)\n
                break;\n
            if ((a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 48);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 32);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v9 = a2;\n
        a2 = v9 + 1;\n
        v10 = *(v9);\n
        v0 = a1;\n
        a1 = a0(v6, v10);\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v1;\n
            v1 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v6, 32);\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4220233:sub_406549": null, "4220240:sub_406550": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406550(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v0 = &v3;\n
            v1 = cgc_transmit(v7, a0 + v2, a1 - v2);\n
            if (v1)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 = v3 + v2;\n
        }\n
        else\n
        {\n
            v4 = a1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4220384:sub_4065e0": "int sub_4065e0(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < a0)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4220431:sub_40660f": null, "4220432:sub_406610": "int sub_406610(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 > a0)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4220479:sub_40663f": null, "4220480:sub_406640": "int sub_406640()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4046e0(0, 2147483646);\n
}\n
", "4220513:sub_406661": null, "4220528:sub_406670": "int sub_406670(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4045a0(v2);\n
}\n
", "4220551:sub_406687": null, "4220560:sub_406690": "int sub_406690(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    for (v0 = 0; sub_401220(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = 1;\n
        v5 += 1;\n
    }\n
    for (; sub_401000(*(v5)); v1 = v1 * 10 + *(v6) - 48)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
    }\n
    if (v0)\n
    {\n
        v2 = -(v1);\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4220774:sub_406766": null, "4220784:sub_406770": "int sub_406770()\n
{\n
    int <0x406770[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x18]\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned long v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    unsigned int v5;  // [bp+0x8]\n
    unsigned int v6;  // [bp+0xc]\n
    unsigned int v7;  // [bp+0x10]\n
    unsigned int v8;  // [bp+0x14], Other Possible Types: char\n
    unsigned long v9;  // [bp+0x18]\n
    int v10;  // xmm0\n
    int v11;  // xmm0\n
    unsigned long long v12;  // xmm1\n
    int v13;  // xmm1\n
    unsigned int v15;  // ebp\n
\n
    v2 = &<0x406770[is_2]|Stack bp, 1 B>;\n
    v1 = 1;\n
    for (v0 = 0; *(v4) == 32; v4 += 1);\n
    if (*(v4) != 45)\n
    {\n
        v7 = 1;\n
    }\n
    else\n
    {\n
        v7 = -1;\n
        v4 += 1;\n
    }\n
    while (v4)\n
    {\n
        if (*(v4) == 46)\n
        {\n
            v6 = 1;\n
            v4 += 1;\n
            continue;\n
        }\n
        if (*(v4) < 48)\n
        {\n
LABEL_406874:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*(v4) <= 57))\n
                goto LABEL_406874;\n
            v5 = *(v4) - 48;\n
            xmm0<16> = ((0x0<64> CONCAT 0x4024000000000000<64>) * Conv(64->128, Load(addr=stack_base+24, size=8, endness=Iend_LE)))\n
            *(&v9) = v10;\n
            *(&v10) = v5;\n
            xmm0<16> = (xmm0<16> + Conv(64->128, Load(addr=stack_base+24, size=8, endness=Iend_LE)))\n
            *(&v9) = v11;\n
            if (v6)\n
                v8 = *(&v8) * 10;\n
            v4 += 1;\n
        }\n
    }\n
    v12 = v7;\n
    *(&v9) = ((0 CONCAT *(&v9)) * v13);\n
    if (v6)\n
    {\n
        tmp_10 = DivV(tmp_12, tmp_11);\n
        *(&v9) = tmp_10;\n
    }\n
    *(&v3) = *(&v9);\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        [D] PutI(72:F64x8)[t1,0] = t4\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        v15 = v2;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t1,0] = t4\n
    [D] PutI(136:I8x8)[t1,0] = 0x01\n
    v15 = v2;\n
    return;\n
}\n
", "4221136:sub_4068d0": "int sub_4068d0(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221195:sub_40690b": null, "4221200:sub_406910": "int sub_406910(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v4))\n
                v0 = *(v4) == *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v4 += 1;\n
            a0 += 1;\n
        }\n
        v1 = *(v4) - *(a0);\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4221353:sub_4069a9": null, "4221360:sub_4069b0": "int sub_4069b0(char *v5, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (v5 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v5))\n
            {\n
                v0 = 0;\n
                if (*(v5) == *(a0))\n
                    v0 = v1 < a1;\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v5 += 1;\n
            a0 += 1;\n
            v1 += 1;\n
        }\n
        v2 = *(v5) - *(a0);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4221549:sub_406a6d": null, "4221552:sub_406a70": "int sub_406a70(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ecx\n
\n
    for (v0 = &v1; a0; v3[1 + v2] = 0)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
    }\n
    *((v2 + a0)) = 0;\n
    return v2;\n
}\n
", "4221607:sub_406aa7": null, "4221616:sub_406ab0": "int sub_406ab0(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    char *v7;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(&v6) = v0;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v7 = v5;\n
        v5 = v7 + 1;\n
        *(v7) = v1;\n
    }\n
    return v2;\n
}\n
", "4221770:sub_406b4a": null, "4221776:sub_406b50": "int sub_406b50(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); *(v6) = tmp_19)\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    *(v3) = 0;\n
    return v0;\n
}\n
", "4221852:sub_406b9c": null, "4221856:sub_406ba0": "int sub_406ba0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = 0;\n
    }\n
    return v3;\n
}\n
", "4221993:sub_406c29": null, "4222000:sub_406c30": "int sub_406c30(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = *(a0);\n
        v3 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4222144:sub_406cc0": "int sub_406cc0(char v6[2], char *a0)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char v2[2];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(a0))\n
            v1 = v6[0];\n
        if (!(v1 & 1))\n
            break;\n
        if (v6[0] == 42)\n
        {\n
            if (!v6[1])\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            *(&v6) = &v6[1];\n
            *(&v2) = v6;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v6[0] != *(a0))\n
                    v0 = *(a0);\n
                if (!(v0 & 1))\n
                    break;\n
                a0 += 1;\n
            }\n
            if (!*(a0))\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v6 = &v6[1];\n
            a0 += 1;\n
            if (!*(v6))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v6 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else if (v6[0] == 63)\n
        {\n
            v6 = &v6[1];\n
            a0 += 1;\n
        }\n
        else if (v6[0] == *(a0))\n
        {\n
            v6 = &v6[1];\n
            a0 += 1;\n
            if (!*(v6))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v6 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (v6 == v2)\n
            {\n
                a0 += 1;\n
            }\n
            else\n
            {\n
                v6 = v2;\n
                continue;\n
            }\n
        }\n
    }\n
    if (*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v6))\n
    {\n
        if (*(v6) != 42)\n
        {\n
LABEL_406f11:\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!(!*((v6 + 1))))\n
        {\n
            goto LABEL_406f11;\n
        }\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4222764:sub_406f2c": null, "4222768:sub_406f30": "int sub_406f30(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        if (*(v3) == 42)\n
            break;\n
        if (*(v3) == 63)\n
            break;\n
        v3 += 1;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4222864:sub_406f90": "int sub_406f90(char *v10, char *a0)\n
{\n
    char v0;  // [bp-0x178]\n
    unsigned int v1;  // [bp-0x174]\n
    char v2;  // [bp-0x16d]\n
    char v3;  // [bp-0x166]\n
    char v4;  // [bp-0x102]\n
    char v5;  // [bp-0x3a]\n
    char v6;  // [bp-0x21]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v2 = sub_4015f0(\"Users.db\", 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"error opening Users.db\\n
\");\n
        cgc__terminate();\n
    }\n
    while (true)\n
    {\n
        v1 = sub_402d70(v2, &v6, 25, 58, &v0, 1);\n
        if (!v1)\n
        {\n
            sub_401aa0(v2);\n
            v7 = -1;\n
            return v7;\n
        }\n
        if (!sub_406910(&v6, v10))\n
            break;\n
        v1 = sub_402d70(v2, &v4, 200, 10, &v0, 1);\n
    }\n
    v1 = sub_402d70(v2, &v5, 25, 58, &v0, 1);\n
    if (sub_406910(&v5, a0))\n
    {\n
        sub_401aa0(v2);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v1 = sub_402d70(v2, &v3, 100, 10, &v0, 1);\n
    sub_401aa0(v2);\n
    v7 = sub_406690(&v3);\n
    return v7;\n
}\n
", "4223382:sub_407196": null, "4223392:sub_4071a0": "extern char g_40d744;\n
\n
int sub_4071a0(char *v14, unsigned int a0, char *a1)\n
{\n
    char v0;  // [bp-0x470]\n
    void* v1;  // [bp-0x70], Other Possible Types: char, unsigned int\n
    unsigned int v2;  // [bp-0x6c]\n
    char v3;  // [bp-0x66]\n
    char v4;  // [bp-0x65]\n
    char v5;  // [bp-0x64]\n
    char v6;  // [bp-0x60]\n
    unsigned int v7;  // [bp-0x5c]\n
    char v8;  // [bp-0x56]\n
    char v9;  // [bp-0x3d]\n
    char v10;  // [bp-0x29]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v4 = sub_4015f0(\"Users.db\", 1);\n
    if (v4 < 0)\n
    {\n
        sub_405020(\"error opening Users.db\\n
\");\n
        cgc__terminate();\n
    }\n
    if (g_40d744 == 255)\n
    {\n
        g_40d744 = sub_4015f0(\"UserIDs.mem\", 1);\n
        if (g_40d744 < 0)\n
        {\n
            sub_405020(\"error opening security ID file\\n
\");\n
            cgc__terminate();\n
        }\n
    }\n
    v2 = sub_402790(g_40d744, &v6, 4, 0, NULL, 1);\n
    if (v2 == -7)\n
        sub_402e60(g_40d744, 1);\n
    v2 = sub_402790(g_40d744, &v5, 4, 0, NULL, 1);\n
    if (v2 == -7)\n
        sub_402e60(g_40d744, 1);\n
    v7 = *(&v5) * *(&v6);\n
    v7 &= 2147483647;\n
    while (true)\n
    {\n
        v2 = sub_402d70(v4, &v10, 25, 58, &v1, 1);\n
        if (!v2)\n
            break;\n
        if (!sub_406910(&v10, v14))\n
        {\n
            sub_402c80(g_40d744, -0x4);\n
            sub_401aa0(v4);\n
            v11 = -1;\n
            return v11;\n
        }\n
        v2 = sub_402d70(v4, &v0, 0x400, 58, &v1, 1);\n
        v2 = sub_402d70(v4, &v0, 0x400, 10, &v1, 1);\n
        if (sub_406690(&v8) == v7)\n
            v7 += 1;\n
    }\n
    sub_4050b0(&v0, \"$s:$s:$d\\n
\");\n
    v2 = sub_4020f0(v4, &v0, sub_4068d0(&v0), 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"error updating Users.db\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_401aa0(v4);\n
    sub_4050b0(&v9, \"$x.user\");\n
    v2 = sub_401d10(&v9, 2, 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"$d\\n
\");\n
        cgc__terminate(-1);\n
    }\n
    v3 = sub_4015f0(&v9, 1);\n
    if (v3 < 0)\n
    {\n
        sub_405020(\"error opening users file\\n
\");\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    sub_4020f0(v3, &v1, 4, 1);\n
    sub_4020f0(v3, &v1, 4, 1);\n
    v1 = sub_4068d0(a1);\n
    sub_4020f0(v3, &v1, 4, 1);\n
    sub_4020f0(v3, a1, v1, 1);\n
    sub_401aa0(v3);\n
    v11 = v7;\n
    return v11;\n
}\n
", "4224576:sub_407640": "int sub_407640(char *v12)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x20]\n
    char *v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char v7;  // [bp-0xd]\n
    char v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    if (sub_403b80(&v8, 4) == -1)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v0 = *(&v8);\n
    if (v0 == 160)\n
    {\n
        v6 = v12;\n
        if (!v6)\n
            cgc__terminate();\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v6, v7);\n
        v6[v7] = 0;\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v6 + 21, v7);\n
        v6[21 + v7] = 0;\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v6 + 42, v7);\n
        v6[42 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 176)\n
    {\n
        v5 = v12;\n
        if (!v5)\n
            cgc__terminate();\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v5, v7);\n
        v5[v7] = 0;\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v5 + 21, v7);\n
        v5[21 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 192)\n
    {\n
        v4 = v12;\n
        if (!v4)\n
            cgc__terminate();\n
        sub_403b80(v4, 4);\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 208)\n
    {\n
        v3 = v12;\n
        if (!v3)\n
            cgc__terminate();\n
        sub_403b80(v3, 4);\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v3 + 4, v7);\n
        v3[4 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 224)\n
    {\n
        v1 = v12;\n
        if (!v1)\n
            cgc__terminate();\n
        sub_403b80(v1, 4);\n
        sub_403b80(v1 + 4, 4);\n
        sub_403b80(&v7, 1);\n
        sub_403b80(v1 + 8, v7);\n
        v1[8 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 240)\n
    {\n
        v2 = v12;\n
        if (!v2)\n
            cgc__terminate();\n
        sub_403b80(v2, 4);\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4225452:sub_4079ac": null, "4225456:sub_4079b0": "int sub_4079b0(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (sub_406550(1, v3, a0))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4225536:sub_407a00": "int sub_407a00(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0xa4]\n
    char v2;  // [bp-0x9e]\n
    char v3;  // [bp-0x9d]\n
    char v4;  // [bp-0x1e]\n
    char v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    sub_4050b0(&v5, \"$x.post\");\n
    v1 = sub_401d10(&v5, 2, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"1Error making post file.\\n
\");\n
        cgc__terminate();\n
    }\n
    v2 = sub_4015f0(&v5, 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"2error opening post file\\n
\");\n
        cgc__terminate();\n
    }\n
    v1 = sub_4020f0(v2, &a0, 4, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"3Error writing post's ID\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_406ba0(&v3, a1, 128);\n
    v4 = 0;\n
    v0 = sub_4068d0(&v3);\n
    v1 = sub_4020f0(v2, &v0, 4, 1);\n
    v1 = sub_4020f0(v2, &v3, v0, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"4Error writing post's text\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_401aa0(v2);\n
    v2 = sub_4015f0(\"posts.log\", 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"5unable to open posts.log\\n
\");\n
        cgc__terminate();\n
    }\n
    v1 = sub_4020f0(v2, &v8, 4, 1);\n
    sub_401aa0(v2);\n
    return 0;\n
}\n
", "4226146:sub_407c62": null, "4226160:sub_407c70": "int sub_407c70(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x94]\n
    unsigned int v1;  // [bp-0x8c]\n
    char v2;  // [bp-0x86]\n
    char v3;  // [bp-0x85]\n
    char v4;  // [bp-0x22]\n
    char v5;  // [bp-0x21]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    sub_4050b0(&v5, \"$x.post\");\n
    v2 = sub_4015f0(&v5, 1);\n
    if (v2 < 0)\n
    {\n
        sub_405020(\"error opening post file\\n
\");\n
        sub_405020(\"fh = $d\\n
\");\n
        v6 = -1;\n
        return v6;\n
    }\n
    v1 = sub_4020f0(v2, &a0, 4, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"Error writing commenter's ID\\n
\");\n
        v6 = -1;\n
        return v6;\n
    }\n
    sub_406ba0(&v3, a1, 100);\n
    v4 = 0;\n
    v0 = sub_4068d0(&v3);\n
    v1 = sub_4020f0(v2, &v0, 4, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"Error writing comment's size\\n
\");\n
        cgc__terminate();\n
    }\n
    v1 = sub_4020f0(v2, &v3, v0, 1);\n
    if (v1)\n
    {\n
        sub_405020(\"Error writing comment's text\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_401aa0(v2);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4226641:sub_407e51": null, "4226656:sub_407e60": "int sub_407e60(unsigned int v10, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x27]\n
    char v5;  // [bp-0x26]\n
    char v6;  // [bp-0x25]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    sub_4050b0(&v6, \"$x.user\");\n
    v5 = sub_4015f0(&v6, 1);\n
    if (v5 < 0)\n
    {\n
        sub_405020(\"error opening users file\\n
\");\n
        sub_405020(\"fh = $d\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
    v3 = sub_402790(v5, &v2, 4, 0, &v0, 1);\n
    if (v3)\n
    {\n
        sub_405020(\"error reading users file\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
    sub_401aa0(v5);\n
    v4 = sub_4015f0(\"posts.log\", 1);\n
    v1 = 0;\n
    while (v1 <= *(&v2))\n
    {\n
        v3 = sub_402790(v4, &v1, 4, 0, &v0, 1);\n
        if (v3 == -7)\n
            break;\n
    }\n
    sub_401aa0(v4);\n
    if (v1 <= *(&v2))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v3 = sub_4080d0(v1, 0, a0);\n
    if (v3)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = sub_4015f0(&v6, 1);\n
    if (v5 < 0)\n
    {\n
        sub_405020(\"error opening users file\\n
\");\n
        sub_405020(\"fh = $d\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
    sub_402f00(v5, 0);\n
    sub_4020f0(v5, &v1, 4, 1);\n
    sub_401aa0(v5);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4227279:sub_4080cf": null, "4227280:sub_4080d0": "int sub_4080d0(unsigned int v19, unsigned int a0, unsigned int *a1, unsigned int *a2)\n
{\n
    void* v0;  // [bp-0x558], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x554]\n
    char v2;  // [bp-0x54e]\n
    char v3;  // [bp-0x530]\n
    unsigned int v4;  // [bp-0x4cc]\n
    char v5;  // [bp-0x4c6]\n
    char v6;  // [bp-0x4c5]\n
    char v7;  // [bp-0x4c4]\n
    char v8;  // [bp-0x444]\n
    unsigned int v9;  // [bp-0x440], Other Possible Types: char\n
    char v10;  // [bp-0x43c], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x438], Other Possible Types: unsigned int, char\n
    char v12;  // [bp-0x434]\n
    char v13;  // [bp-0x430]\n
    char v14;  // [bp-0x42b]\n
    char v15;  // [bp-0x25]\n
    unsigned int v16;  // [bp-0xc]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
\n
    v17 = &v18;\n
    sub_4050b0(&v15, \"$x.post\");\n
    v6 = sub_4015f0(&v15, 1);\n
    if (v6 < 0)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v4 = sub_402790(v6, &v12, 4, 0, NULL, 1);\n
    if (v4)\n
    {\n
        sub_405020(\"Error reading post's ID\\n
\");\n
        cgc__terminate();\n
    }\n
    v4 = sub_402790(v6, &v8, 4, 0, &v13, 1);\n
    if (v4)\n
    {\n
        sub_405020(\"Error reading post's size\\n
\");\n
        cgc__terminate();\n
    }\n
    v4 = sub_402790(v6, &v7, *(&v8), 0, &v13, 1);\n
    if (v4 && v4 != -7)\n
    {\n
        sub_405020(\"Error reading post's text\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_4050b0(&v15, \"$x.user\");\n
    v5 = sub_4015f0(&v15, 1);\n
    if (v5 < 0)\n
    {\n
        sub_405020(\"Error opening users file\\n
\");\n
        cgc__terminate();\n
    }\n
    v4 = sub_402790(v5, &v14, 30, 12, &v13, 1);\n
    if (v4 < 0 && v4 != -7)\n
    {\n
        sub_405020(\"Error reading name\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_401aa0(v5);\n
    (&v14)[*(&v13)] = 0;\n
    v4 = cgc_allocate(0x1000, 0);\n
    if (v4)\n
    {\n
        sub_405020(\"unable to allocate() memory\\n
\");\n
        cgc__terminate();\n
    }\n
    v0 = 0;\n
    sub_406c30(*(a1) + v0, &v13, 4);\n
    v0 += 4;\n
    sub_406c30(*(a1) + v0, &v14, *(&v13));\n
    v0 = *(&v13) + v0;\n
    sub_406c30(*(a1) + v0, &v8, 4);\n
    v0 += 4;\n
    sub_406c30(*(a1) + v0, &v7, *(&v8));\n
    v0 = *(&v8) + v0;\n
    for (v11 = 0; a0; v0 = v9 + v0)\n
    {\n
        v4 = sub_402790(v6, &v1, 4, 0, NULL, 1);\n
        if (v4)\n
            break;\n
        v4 = sub_402790(v6, &v9, 4, 0, &v13, 1);\n
        if (v4)\n
        {\n
            sub_405020(\"Error reading comment's size\\n
\");\n
            cgc__terminate();\n
        }\n
        v4 = sub_402790(v6, &v3, v9, 0, &v13, 1);\n
        if (v4 && v4 != -7)\n
        {\n
            sub_405020(\"Error reading post's text\\n
\");\n
            cgc__terminate();\n
        }\n
        v9 = *(&v13);\n
        sub_4050b0(&v15, \"$x.user\");\n
        v5 = sub_4015f0(&v15, 1);\n
        if (v5 < 0)\n
        {\n
            sub_406b50(&v2, \"anonymous\");\n
            v10 = sub_4068d0(&v2);\n
        }\n
        else\n
        {\n
            v4 = sub_402790(v5, &v10, 4, 8, &v13, 1);\n
            if (v4 < 0)\n
            {\n
                sub_405020(\"Error reading commenter name length\\n
\");\n
                cgc__terminate();\n
            }\n
            v4 = sub_402790(v5, &v2, v10, 0, &v13, 1);\n
            if (v4 < 0 && v4 != -7)\n
            {\n
                sub_405020(\"Error reading commenter name\\n
\");\n
                cgc__terminate();\n
            }\n
            sub_401aa0(v5);\n
        }\n
        *(&v11) = v11 + 1;\n
        sub_406c30(*(a1) + v0, &v11, 4);\n
        v0 += 4;\n
        sub_406c30(*(a1) + v0, &v10, 4);\n
        v0 += 4;\n
        sub_406c30(*(a1) + v0, &v2, v10);\n
        v0 = v10 + v0;\n
        sub_406c30(*(a1) + v0, &v9, 4);\n
        v0 += 4;\n
        sub_406c30(*(a1) + v0, &v3, v9);\n
    }\n
    *(a2) = v0;\n
    sub_401aa0(v6);\n
    v16 = 0;\n
    return v16;\n
}\n
", "4229312:sub_4088c0": "extern char g_40d744;\n
\n
int sub_4088c0(unsigned int v20, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    void* v1;  // [bp-0x4c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44]\n
    unsigned int v4;  // [bp-0x40]\n
    unsigned int v5;  // [bp-0x3c]\n
    void* v6;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8[2];  // [bp-0x30]\n
    unsigned int *v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x20]\n
    char v13;  // [bp-0x1c]\n
    unsigned int v14;  // [bp-0x18]\n
    char v15;  // [bp-0x11]\n
    unsigned int v16;  // [bp-0xc]\n
    void* v17;  // [bp-0x8]\n
    unsigned int v18;  // [bp-0x4]\n
    char v19;  // [bp+0x0]\n
\n
    v18 = &v19;\n
    v17 = 0;\n
    v5 = 100;\n
    v16 = sub_401280(0x200, 0x200, 0xfa000);\n
    g_40d744 = 255;\n
    if (v16)\n
    {\n
        sub_405020(\"Error making filesystem.\\n
\");\n
        cgc__terminate();\n
    }\n
    v16 = sub_403980(\"sticky.posts\", 0x4347c600, 0xa00, 1, 1);\n
    if (v16)\n
    {\n
        sub_405020(\"Error making posts.log\\n
\");\n
        cgc__terminate();\n
    }\n
    v16 = sub_403980(\"initialPostID.mem\", 0x4347c000, 4, 1, 1);\n
    if (v16)\n
    {\n
        sub_405020(\"Error making posts.log\\n
\");\n
        cgc__terminate();\n
    }\n
    v16 = sub_401d10(\"Users.db\", 2, 1);\n
    if (v16)\n
    {\n
        sub_405020(\"Error making Users.db\\n
\");\n
        cgc__terminate();\n
    }\n
    v16 = sub_401d10(\"posts.log\", 2, 1);\n
    if (v16)\n
    {\n
        sub_405020(\"Error making posts.log\\n
\");\n
        cgc__terminate();\n
    }\n
    v15 = sub_4015f0(\"initialPostID.mem\", 1);\n
    if (v15 < 0)\n
    {\n
        sub_405020(\"Error opening initialPostID.mem\\n
\");\n
        cgc__terminate();\n
    }\n
    sub_402790(v15, &v5, 4, 0, NULL, 1);\n
    v5 &= 268435455;\n
    sub_403090(v15, 1);\n
    v16 = sub_403980(\"UserIDs.mem\", 1128775684, 1532, 1, 1);\n
    if (v16)\n
    {\n
        sub_405020(\"Error making UserIDs.mem\\n
\");\n
        cgc__terminate();\n
    }\n
    v16 = cgc_allocate(0x400, 0);\n
    if (v16)\n
        cgc__terminate();\n
    v1 = 0;\n
    while (((v1 ^ 255) & 1))\n
    {\n
        v12 = sub_407640(*(&v13));\n
        v0 = v12;\n
        if (v0 == 100)\n
        {\n
            v1 = 1;\n
        }\n
        else if (v0 == 160)\n
        {\n
            v11 = *(&v13);\n
            if (sub_4071a0(v11, v11 + 21, v11 + 42) >= 0)\n
                v6 = 0;\n
            else\n
                v6 = -1;\n
            sub_4079b0(&v6, 4);\n
        }\n
        else if (v0 == 176)\n
        {\n
            v10 = *(&v13);\n
            v14 = sub_406f90(v10, v10 + 21);\n
            sub_4079b0(&v14, 4);\n
        }\n
        else if (v0 == 192)\n
        {\n
            v4 = *(*(&v13));\n
            v16 = sub_407e60(v4, &v3, &v2);\n
            if (v16)\n
            {\n
                v16 = -1;\n
                sub_4079b0(&v16, 4);\n
            }\n
            else\n
            {\n
                sub_4079b0(v3, v2);\n
                cgc_deallocate(v3);\n
            }\n
        }\n
        else if (v0 == 208)\n
        {\n
            v9 = *(&v13);\n
            v16 = sub_407a00(v5, *(v9), v9 + 1);\n
            if (v16)\n
            {\n
                v16 = -1;\n
            }\n
            else\n
            {\n
                v16 = v5;\n
                v5 += 1;\n
            }\n
            sub_4079b0(&v16, 4);\n
        }\n
        else if (v0 == 224)\n
        {\n
            v8[0] = *(&v13);\n
            v16 = sub_407c70(v8[0], v8[1], v8 + 1);\n
            sub_4079b0(&v16, 4);\n
        }\n
        else if (v0 != 240)\n
        {\n
            v1 = 1;\n
        }\n
        else\n
        {\n
            v7 = *(*(&v13));\n
            if (v7 < 16)\n
            {\n
                v16 = sub_408ea0();\n
            }\n
            else\n
            {\n
                v16 = sub_4080d0(v7, 1, &v3, &v2);\n
                if (!v16)\n
                {\n
                    sub_4079b0(v3, v2);\n
                    cgc_deallocate(v3);\n
                }\n
            }\n
            if (v16 == -1)\n
                sub_4079b0(&v16, 4);\n
        }\n
    }\n
    sub_405020(\"BYE!\\n
\");\n
    return v17;\n
}\n
", "4230816:sub_408ea0": "int sub_408ea0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2f]\n
    char v5;  // [bp-0x11]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    if (v10 > 15)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = sub_4015f0(\"sticky.posts\", 1);\n
    if (v6 < 0)\n
    {\n
        sub_405020(\"unable to open sticky posts\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
    sub_402e60(v6, v10 * 160);\n
    if (sub_402790(v6, &v4, 30, 0, &v1, 1))\n
    {\n
        sub_405020(\"error reading sticky post\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (v1 == 30)\n
    {\n
        v5 = 0;\n
        if (sub_402790(v6, &v2, 128, 0, &v1, 1))\n
        {\n
            sub_405020(\"error reading sticky post\\n
\");\n
            v7 = -1;\n
            return v7;\n
        }\n
        else if (v1 != 128)\n
        {\n
            sub_405020(\"Error reading data for sticky post\\n
\");\n
            v7 = -1;\n
            return v7;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            for (v0 = 0; v0 < 30; v0 += 1)\n
            {\n
                *(&v4 + v0) = ((*(&v4 + v0) >> 31 CONCAT *(&v4 + v0)) /m 26 >> 32) + 65;\n
            }\n
            for (v0 = 0; v0 < 128; v0 += 1)\n
            {\n
                *(&v2 + v0) = ((*(&v2 + v0) >> 31 CONCAT *(&v2 + v0)) /m 26 >> 32) + 65;\n
            }\n
            v1 = 30;\n
            sub_4079b0(&v1, 4);\n
            sub_4079b0(&v4, v1);\n
            v1 = 128;\n
            sub_4079b0(&v1, 4);\n
            sub_4079b0(&v2, v1);\n
            sub_401aa0(v6);\n
            v7 = 0;\n
            return v7;\n
        }\n
    }\n
    else\n
    {\n
        sub_405020(\"Error reading data for sticky post\\n
\");\n
        v7 = -1;\n
        return v7;\n
    }\n
}\n
", "4231520:sub_409160": "int sub_409160()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409280();\n
    sub_409290();\n
    sub_4092b0();\n
    v0 = 1;\n
    if (!sub_409880())\n
    {\n
        v0 = 7;\n
        sub_409f60();\n
    }\n
    sub_40a130();\n
    v1 = sub_40a160;\n
    sub_409550();\n
    if (sub_409250())\n
    {\n
        v1 = 7;\n
        sub_409f60();\n
    }\n
    sub_409cf0();\n
    if (sub_409df0())\n
    {\n
        v1 = sub_409c90;\n
        __setusermatherr();\n
    }\n
    sub_409d70();\n
    sub_409d80();\n
    sub_409d40();\n
    v1 = sub_409ce0();\n
    _configthreadlocale();\n
    if (sub_409d30())\n
        sub_409270();\n
    sub_409f20();\n
    if (sub_409f30())\n
    {\n
        v1 = 7;\n
        sub_409f60();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4231712:sub_409220": "int sub_409220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409d90();\n
    return 0;\n
}\n
", "4231728:sub_409230": "int sub_409230()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409f40();\n
    v0 = sub_409cd0();\n
    return _set_new_mode();\n
}\n
", "4231760:sub_409250": "int sub_409250()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_409ca0());\n
}\n
", "4231792:sub_409270": "int sub_409270()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4231808:sub_409280": "int sub_409280()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4231824:sub_409290": "int sub_409290()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_409cc0());\n
}\n
", "4231856:sub_4092b0": "int sub_4092b0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_409cb0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4231888:sub_4092d0": "int sub_4092d0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_4088c0(v1, v2);\n
}\n
", "4231952:sub_409310": "extern char g_40c668;\n
extern char g_40c670;\n
extern char g_40c674;\n
extern struct_0 *g_40c680;\n
extern char g_40cd28;\n
extern unsigned int g_40d040;\n
extern unsigned int g_40d748;\n
\n
int sub_409310()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40cd28;\n
    v13 = sub_40a190;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40d040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_4097f0(1, g_40d040 ^ &v16, v22, v23))\n
        sub_409f60();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_409770();\n
    if (g_40d748 == 1)\n
    {\n
        v16 = 7;\n
        sub_409f60();\n
    }\n
    else if (g_40d748)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40d748 = 1;\n
        v16 = &g_40c680;\n
        v15 = &g_40c674;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_409519;\n
        }\n
        else\n
        {\n
            v16 = &g_40c670;\n
            v15 = &g_40c668;\n
            _initterm(*(&v17));\n
            g_40d748 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_4097c0();\n
    v8 = sub_409e20();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_409640())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_40a1d0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_409e30();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_409640())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_4092d0();\n
    if (!sub_409e90())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_409840(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_409519:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4232367:sub_4094af": "int sub_4094af()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4232376:sub_4094b8": "int sub_4094b8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4232403:sub_4094d3": "extern char g_4094e1;\n
\n
int sub_4094d3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_4094e1;\n
    if (!sub_409e90())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4232466:sub_409512": "int sub_409512()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4232496:sub_409530": "int sub_409530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409ba0();\n
    return sub_409310();\n
}\n
", "4232512:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409530();\n
}\n
", "4232528:sub_409550": "int sub_409550(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_409580(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4232576:sub_409580": "extern unsigned int g_40d754;\n
\n
int sub_409580(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40d754;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40d754))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4232632:sub_4095b8": "int sub_4095b8()\n
{\n
}\n
", "4232688:sub_4095f0": "extern unsigned int g_40d760;\n
\n
int sub_4095f0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40d760;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40d760);\n
    return v6;\n
}\n
", "4232722:sub_409612": "int sub_409612()\n
{\n
}\n
", "4232752:sub_409630": "int sub_409630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4232768:sub_409640": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40cd48;\n
extern unsigned int g_40d040;\n
\n
int sub_409640(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40cd48;\n
    v13 = sub_40a190;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40d040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_409aa0(v6, g_40d040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_409b10(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4232973:sub_40970d": "int sub_40970d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4232982:sub_409716": "int sub_409716()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4233021:sub_40973d": "int sub_40973d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4233040:sub_409750": "int sub_409750()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4233072:sub_409770": "extern unsigned int g_40d74c;\n
\n
int sub_409770()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40a9b0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_409630() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40d74c = v6;\n
        if (!g_40d74c)\n
        {\n
            tmp_0 = 0;\n
            g_40d74c = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40d74c = v6;\n
            v5 = g_40d74c;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4233152:sub_4097c0": "extern void* g_40d74c;\n
\n
int sub_4097c0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a9b0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40d74c;\n
        g_40d74c = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x4097df;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4233200:sub_4097f0": "extern char g_40d750;\n
\n
int sub_4097f0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40d750 = 1;\n
    sub_40a520();\n
    v4 = sub_40ad50();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40ad50();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40ad60();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4233280:sub_409840": "extern char g_40d750;\n
\n
int sub_409840(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40d750 && a0)\n
        return 1;\n
    sub_40ad60(v2);\n
    v3 = sub_40ad60();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4233344:sub_409880": "extern char g_40d751;\n
extern unsigned int g_40d754;\n
extern unsigned int g_40d758;\n
extern unsigned int g_40d75c;\n
extern unsigned int g_40d760;\n
extern unsigned int g_40d764;\n
extern unsigned int g_40d768;\n
\n
int sub_409880(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40d751)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_409f60();\n
    }\n
    if (sub_40a9b0() && !v10)\n
    {\n
        v8 = &g_40d754;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40d760;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_409946;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40d754 = v4;\n
    g_40d758 = v5;\n
    g_40d75c = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40d760 = v1;\n
    g_40d764 = v2;\n
    v11 = v3;\n
    g_40d768 = v11;\n
LABEL_409946:\n
    g_40d751 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4233568:sub_409960": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_409960(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40a9b0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_40a1d0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4233648:sub_4099b0": "int sub_4099b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409880(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4233680:sub_4099d0": "int sub_4099d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40a9b0())\n
    {\n
        v3 = sub_40a520();\n
    }\n
    else\n
    {\n
        v3 = sub_409250();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_409270();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4233728:sub_409a00": "extern char g_40d754;\n
\n
int sub_409a00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40a9b0())\n
    {\n
        v0 = &g_40d754;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40ada0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4233776:sub_409a30": "int sub_409a30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ad70(0);\n
    return sub_40ad70();\n
}\n
", "4233808:sub_409a50": "int sub_409a50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40ad80();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40ad80();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40ad90();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4233856:sub_409a80": "char sub_409a80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40ad90();\n
    sub_40ad90();\n
    return 1;\n
}\n
", "4233888:sub_409aa0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_409aa0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4234000:sub_409b10": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_409b10(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4234144:sub_409ba0": "extern unsigned int g_40d040;\n
extern unsigned int g_40d080;\n
\n
int sub_409ba0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40d040 != 3141592654)\n
    {\n
        v4 = g_40d040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40d080 = ~(g_40d040);\n
            return g_40d040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_409c20(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40d040 = v0;\n
    g_40d080 = ~(v0);\n
    return v4;\n
}\n
", "4234272:sub_409c20": "int sub_409c20()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4234384:sub_409c90": "int sub_409c90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234400:sub_409ca0": "int sub_409ca0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234416:sub_409cb0": "int sub_409cb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234432:sub_409cc0": "int sub_409cc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4234448:sub_409cd0": "int sub_409cd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234464:sub_409ce0": "int sub_409ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234480:sub_409cf0": "extern void g_40d770;\n
\n
int sub_409cf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40d770);\n
}\n
", "4234512:sub_409d10": "extern unsigned int g_40d770;\n
\n
int sub_409d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40d770);\n
}\n
", "4234544:sub_409d30": "char sub_409d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234560:sub_409d40": "int sub_409d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_409f60();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234608:sub_409d70": "int sub_409d70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4234624:sub_409d80": "int sub_409d80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4234640:sub_409d90": "int sub_409d90()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_409dd0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_409de0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4234704:sub_409dd0": "extern char g_40d778;\n
\n
int sub_409dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d778;\n
}\n
", "4234720:sub_409de0": "extern char g_40d780;\n
\n
int sub_409de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d780;\n
}\n
", "4234736:sub_409df0": "extern unsigned int g_40d00c;\n
\n
int sub_409df0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40d00c)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4234784:sub_409e20": "extern char g_40d78c;\n
\n
int sub_409e20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d78c;\n
}\n
", "4234800:sub_409e30": "extern char g_40d790;\n
\n
int sub_409e30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d790;\n
}\n
", "4234816:sub_409e40": "extern void* g_40d794;\n
\n
int sub_409e40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40d794 = 0;\n
    return v3;\n
}\n
", "4234832:sub_409e50": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_409e50()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4234896:sub_409e90": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_409e90()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4235040:sub_409f20": "int sub_409f20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4235056:sub_409f30": "int sub_409f30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a0a0();\n
}\n
", "4235072:sub_409f40": "int sub_409f40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_40a0b0);\n
}\n
", "4235104:sub_409f60": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409f60()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_409e40();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_409e40();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4235129:sub_409f79": "int sub_409f79()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4235129\n
}\n
", "4235424:sub_40a0a0": "int sub_40a0a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4235440:sub_40a0b0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_40a0b0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4235568:sub_40a130": "extern struct_0 *g_40cd18;\n
\n
int sub_40a130()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40cd18;\n
    v3 = &g_40cd18;\n
    return &g_40cd18;\n
}\n
", "4235616:sub_40a160": "extern struct_0 *g_40cd20;\n
\n
int sub_40a160()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40cd20;\n
    v3 = &g_40cd20;\n
    return &g_40cd20;\n
}\n
", "4235664:sub_40a190": "extern unsigned int g_40d040;\n
\n
int sub_40a190(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40adb0(*(v2));\n
    return _except_handler4_common(&g_40d040, sub_40a9e0, v2, a0, a1);\n
}\n
", "4235728:sub_40a1d0": "int sub_40a1d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4235744:sub_40a1e0": "int sub_40a1e0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x40a1e9;\n
    return tmp_4;\n
}\n
", "4235760:sub_40a1f0": "int sub_40a1f0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4235792:sub_40a210": "int sub_40a210(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a1f0(v2);\n
}\n
", "4235824:sub_40a230": "extern unsigned int g_40d798;\n
\n
int sub_40a230(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_40a1e0(&g_40d798, v3);\n
    return v0;\n
}\n
", "4235856:sub_40a250": "extern char g_40a1d0;\n
extern unsigned int g_40e000;\n
\n
int sub_40a250()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_40a210(&g_40e000) != sub_40a1d0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4235904:sub_40a280": "extern char g_40c5c0;\n
\n
int sub_40a280(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40c5c0;\n
    v1 = &g_40c5c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4235968:sub_40a2c0": "extern unsigned int g_40e008;\n
\n
int sub_40a2c0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_40a210(&g_40e008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4236016:sub_40a2f0": "extern unsigned int g_40d798;\n
\n
int sub_40a2f0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_40a210(&g_40d798);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_40a1d0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4236080:sub_40a330": "int sub_40a330()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4236096:sub_40a340": "int sub_40a340(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a280(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4236115\n
}\n
", "4236128:sub_40a360": "int sub_40a360(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a280(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4236153:sub_40a379": "int sub_40a379()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4236153\n
}\n
", "4236160:sub_40a380": "int sub_40a380(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a280(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40a2c0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4236208:sub_40a3b0": "int sub_40a3b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a280(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40a2f0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4236256:sub_40a3e0": "extern char g_40c5c0;\n
\n
int sub_40a3e0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40c5c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4236320:sub_40a420": "int sub_40a420(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a3e0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40a280(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4236363\n
}\n
", "4236368:sub_40a450": "int sub_40a450(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a3e0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40a280(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4236417:sub_40a481": "int sub_40a481()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4236417\n
}\n
", "4236432:sub_40a490": "int sub_40a490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4236448:sub_40a4a0": "int sub_40a4a0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a3e0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40a280(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40a2c0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4236512:sub_40a4e0": "int sub_40a4e0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a3e0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40a280(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40a2f0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4236576:sub_40a520": "extern unsigned int g_40d040;\n
extern unsigned int g_40d088;\n
extern unsigned int g_40d08c;\n
extern unsigned int g_40d090;\n
extern unsigned int g_40d79c;\n
extern unsigned int g_40d7a0;\n
extern unsigned int g_40d7a4;\n
\n
int sub_40a520()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40d040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40d7a0 = 0;\n
    g_40d090 = g_40d090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40a9e0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40a66b;\n
        g_40d7a4 = g_40d7a4 | 1;\n
    }\n
LABEL_40a66b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40d7a4 = g_40d7a4 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40d7a0 = 1;\n
    g_40d090 = g_40d090 | 2;\n
    g_40d088 = g_40d088 & -2;\n
    g_40d08c = g_40d08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40d7a0 = 2;\n
        g_40d090 = g_40d090 | 4;\n
        g_40d088 = g_40d088 & -17;\n
        g_40d08c = g_40d08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40d7a0 = 3;\n
                g_40d090 = g_40d090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40d7a0 = 5;\n
                    g_40d090 = g_40d090 | 32;\n
                    g_40d088 = g_40d088 & -3;\n
                    g_40d08c = g_40d08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40d7a0 = 6;\n
                            g_40d090 = g_40d090 | 64;\n
                            g_40d088 = g_40d088 & -37;\n
                            g_40d08c = g_40d08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40d088 = g_40d088 & -16777217;\n
                    g_40d08c = g_40d08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40d79c = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40d088 = ~(v2 | 16777256) & g_40d088;\n
                        g_40d08c = ~(v3) & g_40d08c;\n
                        if (g_40d79c > 1)\n
                        {\n
                            g_40d088 = g_40d088 & -65;\n
                            g_40d08c = g_40d08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4237744:sub_40a9b0": "extern unsigned int g_40d094;\n
\n
int sub_40a9b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40d094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4237792:sub_40a9e0": "extern unsigned int g_40d040;\n
extern unsigned int g_40d080;\n
extern unsigned int g_40d7b0;\n
extern unsigned int g_40d7b4;\n
extern unsigned int g_40d7bc;\n
extern unsigned int g_40d7c0;\n
extern unsigned int g_40d7c4;\n
extern unsigned int g_40d800;\n
extern unsigned short g_40d88c;\n
extern unsigned short g_40d890;\n
extern unsigned short g_40d894;\n
extern unsigned short g_40d898;\n
extern unsigned int g_40d89c;\n
extern unsigned int g_40d8a0;\n
extern unsigned int g_40d8a4;\n
extern unsigned int g_40d8a8;\n
extern unsigned int g_40d8ac;\n
extern unsigned int g_40d8b0;\n
extern unsigned int g_40d8b4;\n
extern unsigned int g_40d8b8;\n
extern unsigned short g_40d8bc;\n
extern unsigned int g_40d8c0;\n
extern unsigned int g_40d8c4;\n
extern unsigned short g_40d8c8;\n
\n
int sub_40a9e0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40d040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40d8b0 = v7;\n
        g_40d8ac = v6;\n
        g_40d8a8 = v8;\n
        g_40d8a4 = v9;\n
        g_40d8a0 = v10;\n
        g_40d89c = v11;\n
        g_40d8c8 = v12;\n
        g_40d8bc = v13;\n
        g_40d898 = v14;\n
        g_40d894 = v15;\n
        g_40d890 = v16;\n
        g_40d88c = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40d8c0 = v0;\n
        g_40d8b4 = v3;\n
        g_40d8b8 = *(&v4);\n
        g_40d8c4 = &v5;\n
        g_40d800 = 65537;\n
        g_40d7bc = g_40d8b8;\n
        g_40d7b0 = 3221226505;\n
        g_40d7b4 = 1;\n
        g_40d7c0 = 1;\n
        g_40d7c4 = 2;\n
        v1 = g_40d040;\n
        v2 = g_40d080;\n
        sub_40ad20();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4237808:sub_40a9f0": "extern unsigned int g_40d7b0;\n
extern unsigned int g_40d7b4;\n
extern unsigned int g_40d7bc;\n
extern unsigned int g_40d7c0;\n
extern unsigned int g_40d7c4;\n
extern unsigned short g_40d88c;\n
extern unsigned short g_40d890;\n
extern unsigned short g_40d894;\n
extern unsigned short g_40d898;\n
extern unsigned int g_40d89c;\n
extern unsigned int g_40d8a0;\n
extern unsigned int g_40d8a4;\n
extern unsigned int g_40d8a8;\n
extern unsigned int g_40d8ac;\n
extern unsigned int g_40d8b0;\n
extern unsigned int g_40d8b4;\n
extern unsigned int g_40d8b8;\n
extern unsigned short g_40d8bc;\n
extern unsigned int g_40d8c0;\n
extern unsigned int g_40d8c4;\n
extern unsigned short g_40d8c8;\n
\n
int sub_40a9f0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40d8b0 = v4;\n
        g_40d8ac = v5;\n
        g_40d8a8 = v6;\n
        g_40d8a4 = v7;\n
        g_40d8a0 = v8;\n
        g_40d89c = v9;\n
        g_40d8c8 = v10;\n
        g_40d8bc = v11;\n
        g_40d898 = v12;\n
        g_40d894 = v13;\n
        g_40d890 = v14;\n
        g_40d88c = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40d8c0 = v0;\n
        g_40d8b4 = v1;\n
        g_40d8b8 = *(&v2);\n
        g_40d8c4 = &v3;\n
        g_40d7bc = g_40d8b8;\n
        g_40d7b0 = 3221226505;\n
        g_40d7b4 = 1;\n
        g_40d7c0 = 1;\n
        g_40d7c4 = v3;\n
        sub_40ad20();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4237833:sub_40aa09": "int sub_40aa09()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4237833\n
}\n
", "4238032:sub_40aad0": "extern unsigned int g_40d7b0;\n
extern unsigned int g_40d7b4;\n
extern unsigned int g_40d7bc;\n
extern unsigned int g_40d7c0;\n
extern unsigned int g_40d7c4;\n
extern char g_40d7c8;\n
extern unsigned short g_40d88c;\n
extern unsigned short g_40d890;\n
extern unsigned short g_40d894;\n
extern unsigned short g_40d898;\n
extern unsigned int g_40d89c;\n
extern unsigned int g_40d8a0;\n
extern unsigned int g_40d8a4;\n
extern unsigned int g_40d8a8;\n
extern unsigned int g_40d8ac;\n
extern unsigned int g_40d8b0;\n
extern unsigned int g_40d8b4;\n
extern unsigned int g_40d8b8;\n
extern unsigned short g_40d8bc;\n
extern unsigned int g_40d8c0;\n
extern unsigned int g_40d8c4;\n
extern unsigned short g_40d8c8;\n
\n
int sub_40aad0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1062387];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40d8b0 = v7;\n
        g_40d8ac = v8;\n
        g_40d8a8 = v9;\n
        g_40d8a4 = v10;\n
        g_40d8a0 = v11;\n
        g_40d89c = v12;\n
        g_40d8c8 = v13;\n
        g_40d8bc = v14;\n
        g_40d898 = v15;\n
        g_40d894 = v16;\n
        g_40d890 = v17;\n
        g_40d88c = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40d8c0 = v0;\n
        g_40d8b4 = v2;\n
        g_40d8b8 = *(&v3);\n
        g_40d8c4 = &v4;\n
        g_40d7bc = g_40d8b8;\n
        g_40d7b0 = 3221226505;\n
        g_40d7b4 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40d7c0 = v5 + 1;\n
        g_40d7c4 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_40d7c8)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40ad20();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4238057:sub_40aae9": "int sub_40aae9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4238057\n
}\n
", "4238336:sub_40ac00": "int sub_40ac00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a9f0(8);\n
}\n
", "4238379:sub_40ac2b": "int sub_40ac2b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4238379\n
}\n
", "4238624:sub_40ad20": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40ad20(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4238672:sub_40ad50": "char sub_40ad50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238688:sub_40ad60": "char sub_40ad60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238704:sub_40ad70": "char sub_40ad70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238720:sub_40ad80": "char sub_40ad80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238736:sub_40ad90": "char sub_40ad90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4238752:sub_40ada0": "int sub_40ada0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4238768:sub_40adb0": "extern unsigned int g_40d7a0;\n
\n
int sub_40adb0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40d7a0 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4239076:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4239082:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4239088:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4239094:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4239100:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4239106:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4239112:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4239118:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4239124:sub_40af14": "int sub_40af14(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4239130:sub_40af1a": "int sub_40af1a()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4239136:sub_40af20": "int sub_40af20()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4239142:sub_40af26": "int sub_40af26(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4239148:sub_40af2c": "int sub_40af2c(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4239154:sub_40af32": "int sub_40af32()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4239160:sub_40af38": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40af38(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4239166:sub_40af3e": "int sub_40af3e(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4239172:sub_40af44": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40af44(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4239178:sub_40af4a": "int sub_40af4a(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4239184:sub_40af50": "int sub_40af50(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4239190:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4239196:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4239202:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4239208:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4239214:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4239220:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4239226:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4239232:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4239238:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4239244:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4239250:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4239256:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4239262:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4239268:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4239274:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4239280:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4239286:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4239292:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4239298:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4239304:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4239310:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4239316:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4239322:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4239328:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4239334:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4239340:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4239346:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4239352:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4239358:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4239364:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4239370:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4239376:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4239382:sub_40b016": "int sub_40b016()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4239388:sub_40b01c": "int sub_40b01c(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_transmit": null, "5242912:GetCurrentProcess": null, "5242916:GetCurrentProcessId": null, "5242920:GetCurrentThreadId": null, "5242924:GetModuleHandleW": null, "5242928:GetStartupInfoW": null, "5242932:GetSystemTimeAsFileTime": null, "5242936:InitializeSListHead": null, "5242940:IsDebuggerPresent": null, "5242944:IsProcessorFeaturePresent": null, "5242948:QueryPerformanceCounter": null, "5242952:SetUnhandledExceptionFilter": null, "5242956:TerminateProcess": null, "5242960:UnhandledExceptionFilter": null, "5242964:__current_exception": null, "5242968:__current_exception_context": null, "5242972:__std_type_info_destroy_list": null, "5242976:_except_handler4_common": null, "5242980:memset": null, "5242984:__p___argc": null, "5242988:__p___argv": null, "5242992:__p__commode": null, "5242996:__setusermatherr": null, "5243000:_c_exit": null, "5243004:_cexit": null, "5243008:_configthreadlocale": null, "5243012:_configure_narrow_argv": null, "5243016:_controlfp_s": null, "5243020:_crt_at_quick_exit": null, "5243024:_crt_atexit": null, "5243028:_execute_onexit_table": null, "5243032:_exit": null, "5243036:_get_initial_narrow_environment": null, "5243040:_initialize_narrow_environment": null, "5243044:_initialize_onexit_table": null, "5243048:_initterm": null, "5243052:_initterm_e": null, "5243056:_register_onexit_function": null, "5243060:_register_thread_local_exe_atexit_callback": null, "5243064:_seh_filter_dll": null, "5243068:_seh_filter_exe": null, "5243072:_set_app_type": null, "5243076:_set_fmode": null, "5243080:_set_new_mode": null, "5243084:exit": null, "5243088:terminate": null, "6295596:UnresolvableCallTarget": null}