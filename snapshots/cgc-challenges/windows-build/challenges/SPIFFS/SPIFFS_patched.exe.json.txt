{"4198400:sub_401000": "int sub_401000(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0 * v5;\n
    v1 = sub_401050();\n
    v0 = v2;\n
    sub_401fa0(v1, 0);\n
    return v1;\n
}\n
", "4198472:sub_401048": null, "4198480:sub_401050": "extern struct_0 *g_40d098;\n
\n
int sub_401050(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_0 *v1[2];  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct struct_0 *v6[2];  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v9 = &v10;\n
    if (v11 < 8)\n
    {\n
        v11 = 8;\n
    }\n
    else if ((v11 & 3))\n
    {\n
        v11 = (v11 >> 2) + 1;\n
        v11 *= 4;\n
    }\n
    v8 = &g_40d098->field_0;\n
    while (true)\n
    {\n
        if (!v8)\n
            v8 = sub_4012d0();\n
        v7 = v8;\n
        v6[0] = v8 + (*(v7) & -0x4) - 4;\n
        if (*(v7) >= v11)\n
            break;\n
        v8 = v6[0];\n
    }\n
    v5 = v8 + 4;\n
    v4 = *(v7) - v11;\n
    *(v7) = v11;\n
    v12 = v7;\n
    *(v12) = *(v12) | 1;\n
    if (v4 >= 12)\n
    {\n
        v3 = v8 + v11 + 4;\n
        v2 = v3;\n
        *(v2) = v4 - 4;\n
        v1[0] = &v6[0];\n
        if (-4 + v2 + (*(v2) & -0x4) != v6)\n
        {\n
            sub_404250();\n
            cgc__terminate();\n
        }\n
        if (g_40d098 == v8)\n
        {\n
            g_40d098 = v2;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v2;\n
        }\n
        else\n
        {\n
            if (v1[1])\n
                *((-4 + &v1[1]->field_0 + (v1[1]->field_0 & -0x4))) = v3;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v3;\n
        }\n
        v13 = v7;\n
        *(v13) = *(v13) | 2;\n
    }\n
    else if (g_40d098 == v8)\n
    {\n
        g_40d098 = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v6[1])\n
            *((-4 + &v6[1]->field_0 + (v6[1]->field_0 & -0x4))) = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = v6[1];\n
    }\n
    v0 = v11;\n
    sub_401fa0(v8 + 4, 0);\n
    return v8 + 4;\n
}\n
", "4199112:sub_4012c8": null, "4199120:sub_4012d0": "extern struct_0 *g_40d098;\n
\n
int sub_4012d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = v7 + 4;\n
    if ((v4 & 4095))\n
    {\n
        v4 = (v4 >> 12) + 1;\n
        v4 *= 0x1000;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(v4, 0))\n
        cgc__terminate();\n
    v2 = *(&v3);\n
    v1[0] = *(&v3) + v4 - 8;\n
    *(v2) = v4 - 4;\n
    v1[1] = 0;\n
    v1[0] = g_40d098;\n
    g_40d098 = v2;\n
    return v2;\n
}\n
", "4199293:sub_40137d": null, "4199296:sub_401380": "extern struct_0 *g_40d098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_40d098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_40d098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_40d098;\n
    v1[1] = 0;\n
    if (g_40d098)\n
        *((&g_40d098->field_0 + (g_40d098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_40d098 = v12;\n
    return v6;\n
}\n
", "4199728:sub_401530": "extern struct_0 *g_40d098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned int\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_40d098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_40d098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_40d098;\n
    v1[1] = 0;\n
    if (g_40d098)\n
        *((&g_40d098->field_0 + (g_40d098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_40d098 = v12;\n
    return v6;\n
}\n
", "4199929:sub_4015f9": null, "4199936:sub_401600": null, "4200113:sub_4016b1": null, "4200128:sub_4016c0": null, "4200336:sub_401790": "int sub_401790(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4200408:sub_4017d8": null, "4200416:sub_4017e0": "int sub_4017e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200470:sub_401816": null, "4200480:sub_401820": "int sub_401820(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200534:sub_401856": null, "4200544:sub_401860": "int sub_401860(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4017e0(v3);\n
    return v0 | sub_401820(v3);\n
}\n
", "4200590:sub_40188e": null, "4200592:sub_401890": "int sub_401890(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_401860(v3);\n
    return v0 | sub_4018c0(v3, v0);\n
}\n
", "4200638:sub_4018be": null, "4200640:sub_4018c0": "int sub_4018c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200694:sub_4018f6": null, "4200704:sub_401900": "int sub_401900(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4200798:sub_40195e": null, "4200800:sub_401960": null, "4200840:sub_401988": null, "4200848:sub_401990": null, "4200912:sub_4019d0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4019d0()\n
{\n
    char <0x4019d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_37;  // tmp #37\n
    int tmp_39;  // tmp #39\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp+0x0]\n
    char *v2;  // [bp+0x4], Other Possible Types: unsigned int\n
    unsigned long v3;  // [bp+0x8]\n
    void* v4;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp+0x14]\n
    unsigned long long v6;  // [bp+0x18], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp+0x20], Other Possible Types: unsigned long long\n
    unsigned long v8;  // [bp+0x28], Other Possible Types: unsigned long long\n
    int v9;  // 168, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // xmm0\n
    int v11;  // xmm0\n
    int v13;  // xmm0\n
    struct_0 *v14;  // ebp\n
\n
    v0 = &<0x4019d0[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v9 = 0;\n
        v6 = 4591870180066957722;\n
        v5 = 1;\n
        while (true)\n
        {\n
            v1 = *(v2);\n
            if (!sub_401900(*(v2)))\n
                break;\n
            v2 += 1;\n
        }\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v2))\n
            {\n
LABEL_401bf8:\n
                *(&v9) = v5;\n
                xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE)))\n
                *(&v8) = v13;\n
                break;\n
            }\n
            else\n
            {\n
                if (*(v2) == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_401bd1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_401bd1;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_401bd1;\n
                }\n
                v1 = *(v2);\n
                if (!sub_4018c0(*(v2)))\n
                    goto LABEL_401bf8;\n
                if (!v4)\n
                {\n
LABEL_401b39:\n
                    v4 = 1;\n
                    v9 = (0 CONCAT v7) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v2) - 48);\n
                    *(&v7) = v9;\n
                    goto LABEL_401bd1;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_401b39;\n
                    if (v4 == 2)\n
                    {\n
                        v10 = *(v2) - 48;\n
                        v11 = v9 * (0 CONCAT v6);\n
                        *(&v7) = v11 + (0 CONCAT v7);\n
                        tmp_37 = DivV(tmp_39, tmp_38);\n
                        v9 = tmp_37;\n
                        *(&v6) = v9;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
LABEL_401bd1:\n
                    v2 += 1;\n
                }\n
            }\n
        }\n
    }\n
    *(&v3) = *(&v8);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v14 = v0;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v14 = v0;\n
    return;\n
}\n
", "4201502:sub_401c1e": null, "4201504:sub_401c20": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401c20(char *v2)\n
{\n
    char <0x401c20[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_27;  // tmp #27\n
    unsigned int v1;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x8]\n
    void* v4;  // [bp+0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp+0x14]\n
    void* v7;  // [bp+0x18], Other Possible Types: unsigned int\n
    char *v8;  // [bp+0x1c], Other Possible Types: unsigned int\n
    void* v9;  // [bp+0x20], Other Possible Types: unsigned int\n
    unsigned int v10;  // ecx\n
    char *v12;  // eax\n
    unsigned int v13;  // esi\n
\n
    v0 = &<0x401c20[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 1;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = *(v2);\n
        if (!sub_401900(*(v2)))\n
            break;\n
        v2 += 1;\n
    }\n
    for (v5 = 0; *(v2); v2 += 1)\n
    {\n
        if (*(v2) == 45)\n
        {\n
            if (!v5)\n
            {\n
                v6 = -1;\n
                v5 += 1;\n
            }\n
            else\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v2) != 43)\n
            {\n
                v1 = *(v2);\n
                if (!sub_4018c0(*(v2)))\n
                    break;\n
                if (v5 && v5 != 1)\n
                {\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                v5 = 1;\n
                v2 = v8;\n
                v10 = v7 * 10;\n
                tmp_27 = v10;\n
                v12 = (v7 * 10 >> 32) + v2 * 10 + (*(v2) - 48 >> 31) + (tmp_27 + *(v2) - 48 < tmp_27);\n
                v7 = v10 + *(v2) - 48;\n
                v8 = v12;\n
                v4 += 1;\n
                if (v4 == 10)\n
                    break;\n
            }\n
            else if (!v5)\n
            {\n
                v5 += 1;\n
            }\n
            else\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
        }\n
    }\n
    v13 = v7;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base+28, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>))))\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v3 = v7;\n
    v3 *= v6;\n
    v9 = v3;\n
    return v9;\n
}\n
", "4202021:sub_401e25": null, "4202032:sub_401e30": "int sub_401e30(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4202123:sub_401e8b": null, "4202128:sub_401e90": "int sub_401e90(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v4 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v4 + v1)) = 0;\n
    }\n
    return v4;\n
}\n
", "4202283:sub_401f2b": null, "4202288:sub_401f30": "int sub_401f30(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v5 = v4;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!a0)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v5 = v1;\n
            if (v5 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4202396:sub_401f9c": null, "4202400:sub_401fa0": "int sub_401fa0(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v3;\n
}\n
", "4202478:sub_401fee": null, "4202480:sub_401ff0": "int sub_401ff0(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v4] && !v0[a0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!v0[v4])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (!v0[a0])\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v4 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v4 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4202718:sub_4020de": null, "4202720:sub_4020e0": "int sub_4020e0(char *v7, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = v7;\n
    v3 = sub_4021a0();\n
    if (v7 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v7[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v7[v2 + v3] = 0;\n
        v4 = v7;\n
        return v4;\n
    }\n
    v4 = v7;\n
    return v4;\n
}\n
", "4202901:sub_402195": null, "4202912:sub_4021a0": "int sub_4021a0(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *((v3 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4202967:sub_4021d7": null, "4202976:sub_4021e0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4021e0(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = a0 - v3;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_receive(0, v7 + v3, v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 -= v1;\n
        v3 = v1 + v3;\n
    }\n
}\n
", "4203131:sub_40227b": null, "4203136:sub_402280": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402280(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            return v3;\n
        *((v6 + v3)) = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1 != a0)\n
        {\n
            *((v6 + v3)) = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            return v3;\n
        }\n
    }\n
}\n
", "4203330:sub_402342": null, "4203344:sub_402350": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402350(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            *((v6 + v3)) = 0;\n
            v0 = &v2;\n
            if (cgc_receive(0, &v1, 1))\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (v1 == a0)\n
                return v3;\n
            *((v6 + v3)) = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                v0 = &v2;\n
                if (cgc_receive(0, &v1, 1))\n
                {\n
                    return v3;\n
                }\n
                else if (v1 == a0)\n
                {\n
                    return v3;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4203592:sub_402448": null, "4203600:sub_402450": "int sub_402450(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (v4 && a0)\n
    {\n
        for (v0 = sub_4021a0(v4); *((a0 + v1)); v1 += 1)\n
        {\n
            v4[v0] = *((a0 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4203739:sub_4024db": null, "4203744:sub_4024e0": "int sub_4024e0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v5)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v5 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v5 + v2)) = 0;\n
    return v2;\n
}\n
", "4203943:sub_4025a7": null, "4203952:sub_4025b0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4025b0(unsigned int v6)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: char\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    if (!v6)\n
        return v6;\n
    v1 = sub_4021a0(v6);\n
    while (true)\n
    {\n
        v7 = v2;\n
        if (v7 >= v1)\n
        {\n
            v3 = 0;\n
            while (true)\n
            {\n
                if (v3 == 1)\n
                    return v7;\n
                v0 = &v3;\n
                v7 = cgc_transmit(1, \"\\n
\", 1);\n
                if (v7)\n
                    return v7;\n
            }\n
        }\n
        else\n
        {\n
            v0 = &v3;\n
            v7 = cgc_transmit(1, v6 + v2, v1 - v2);\n
            if (v7)\n
                return v7;\n
            v2 = *(&v3) + v2;\n
        }\n
    }\n
}\n
", "4204154:sub_40267a": null, "4204160:sub_402680": "int sub_402680(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    for (v0 = v4; *(v3); v3 += 1)\n
    {\n
        if (*(v3) == a0)\n
        {\n
            v0 = v3;\n
            return v0;\n
        }\n
    }\n
    if (*(v3) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4204266:sub_4026ea": null, "4204272:sub_4026f0": "extern struct_0 *g_40d09c;\n
extern struct_0 *g_40d0a0;\n
extern void* g_40d0a4;\n
extern struct_0 *g_40d0a8;\n
\n
int sub_4026f0(char *v11, char *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc]\n
    char *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    if (!a0)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v11)\n
    {\n
        if (g_40d0a0)\n
        {\n
            cgc_deallocate(g_40d0a0);\n
            g_40d0a0 = 0;\n
            g_40d0a4 = 0;\n
            g_40d0a8 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!g_40d0a0)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (g_40d0a8 >= g_40d0a0 + g_40d0a4)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!g_40d0a0)\n
    {\n
        if (sub_4021a0(v11) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        g_40d0a4 = sub_4021a0(v11);\n
        v0 = &g_40d0a0;\n
        if (cgc_allocate(g_40d0a4, 0))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        sub_401e30(g_40d0a0, v11);\n
        g_40d0a8 = g_40d0a0;\n
    }\n
    v11 = &g_40d0a8->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (sub_402680(a0, *(v11)))\n
            v3 = v11 < g_40d0a0 + g_40d0a4;\n
        if (!(v3 & 1))\n
            break;\n
        v11 += 1;\n
    }\n
    if (v11 >= g_40d0a0 + g_40d0a4)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = v11;\n
    v2 = v11;\n
    v6 = &v2[sub_4021a0(v11)];\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= sub_4021a0(a0))\n
            break;\n
        v5 = sub_402680(v7, a0[v4]);\n
        if (v5 && v5 && v5 < v6)\n
            v6 = v5;\n
        v4 += 1;\n
    }\n
    g_40d09c = v7;\n
    *(v6) = 0;\n
    g_40d0a8 = v6 + 1;\n
    v8 = g_40d09c;\n
    return v8;\n
}\n
", "4204936:sub_402988": null, "4204944:sub_402990": "int sub_402990(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (v1 < a0)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v6 + v1, a0 - v1))\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
            v1 = *(&v2) + v1;\n
        }\n
        else\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4205089:sub_402a21": null, "4205104:sub_402a30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402a30(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (cgc_allocate(sub_4021a0(v5) + 1, 0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401f30(*(&v1), sub_4021a0(v5) + 1);\n
    sub_401e30(*(&v1), v5);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4205258:sub_402aca": null, "4205264:sub_402ad0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402ad0(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (!v1)\n
    {\n
        v0 = &v1;\n
        if (cgc_transmit(1, &v4, 1))\n
            cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4205358:sub_402b2e": null, "4205360:sub_402b30": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402b30(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v5 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v5 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v7 = v5;\n
        v5 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205569:sub_402c01": null, "4205584:sub_402c10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402c10(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v5 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v5 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205777:sub_402cd1": null, "4205792:sub_402ce0": null, "4206679:sub_403057": null, "4206688:sub_403060": "int sub_403060(struct struct_0 **v3, struct struct_0 **a0)\n
{\n
    struct struct_0 **<0x403060[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct struct_0 **v2;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0xc]\n
    char v5;  // [bp+0x13]\n
    unsigned int v6;  // [bp+0x14]\n
    unsigned int v7;  // [bp+0x18]\n
    unsigned int v8;  // [bp+0x1c]\n
    unsigned int v9;  // [bp+0x20]\n
    unsigned int v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28], Other Possible Types: unsigned int\n
    struct struct_0 **v12;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct struct_0 **v13;  // [bp+0x30]\n
    struct struct_0 **v14;  // [bp+0x3c], Other Possible Types: unsigned int\n
    struct struct_0 **v15;  // [bp+0x40]\n
    struct struct_0 **v16;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct struct_0 **v17;  // [bp+0x48]\n
    char v18;  // [bp+0x4f]\n
    void* v19;  // [bp+0x50], Other Possible Types: unsigned int\n
    void* v20;  // [bp+0x54], Other Possible Types: unsigned int\n
    unsigned int v21;  // [bp+0x58]\n
    void* v22;  // [bp+0x5c], Other Possible Types: unsigned int\n
    void* v23;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v24;  // [bp+0x64], Other Possible Types: unsigned int\n
    char v25;  // [bp+0x68]\n
    unsigned int v26;  // [bp+0xa8]\n
    unsigned int v27;  // [bp+0xac]\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
    struct struct_0 **v32;  // eax\n
\n
    v1 = &<0x403060[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v27 = -1;\n
        return v27;\n
    }\n
    while (*(v3))\n
    {\n
        if (*(v3) != 64)\n
        {\n
            v2 = *(v3);\n
            sub_402ad0(*(v3));\n
            v3 = v3 + 1;\n
            v26 += 1;\n
LABEL_403916:\n
        }\n
        else\n
        {\n
            v3 = v3 + 1;\n
            v24 = 0;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v19 = 0;\n
            if (*(v3) == 64)\n
            {\n
                v2 = 64;\n
                sub_402ad0(64);\n
                v3 = v3 + 1;\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v3) == 45)\n
            {\n
                v21 = 1;\n
                v3 = v3 + 1;\n
            }\n
            v2 = *(v3);\n
            if (sub_4018c0(*(v3)))\n
            {\n
                if (*(v3) == 48)\n
                {\n
                    v22 = 1;\n
                    v3 = v3 + 1;\n
                }\n
                v2 = *(v3);\n
                if (sub_4018c0(*(v3)))\n
                {\n
                    v2 = v3;\n
                    v24 = sub_401c20(v3);\n
                    while (true)\n
                    {\n
                        v2 = *(v3);\n
                        if (!sub_4018c0(*(v3)))\n
                            break;\n
                        v3 = v3 + 1;\n
                    }\n
                }\n
            }\n
            if (*(v3) == 46)\n
            {\n
                v3 = v3 + 1;\n
                v2 = v3;\n
                v23 = sub_401c20(v3);\n
                while (true)\n
                {\n
                    v2 = *(v3);\n
                    if (!sub_4018c0(*(v3)))\n
                        break;\n
                    v3 = v3 + 1;\n
                }\n
            }\n
            if (*(v3) == 99)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v18 = *(v28);\n
                v19 = v24 - 1;\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (v22)\n
                        {\n
                            v2 = 48;\n
                            sub_402ad0(48);\n
                        }\n
                        else\n
                        {\n
                            v2 = 32;\n
                            sub_402ad0(32);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                v2 = v18;\n
                sub_402ad0(v18);\n
                v26 += 1;\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_402ad0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 100)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v17 = &*(v29)->field_0;\n
                v2 = v17;\n
                v3 = &v25;\n
                sub_402b30(v3, a0);\n
                v9 = v24;\n
                v2 = &v25;\n
                v19 = v9 - sub_4021a0(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (v22)\n
                        {\n
                            v2 = 48;\n
                            sub_402ad0(48);\n
                        }\n
                        else\n
                        {\n
                            v2 = 32;\n
                            sub_402ad0(32);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v16 = &v25; *(v16); v16 = v16 + 1)\n
                {\n
                    v2 = *(v16);\n
                    sub_402ad0(*(v16));\n
                    v26 += 1;\n
                }\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_402ad0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 120)\n
            {\n
                v30 = a0;\n
                a0 = v30 + 1;\n
                v15 = &*(v30)->field_0;\n
                v2 = v15;\n
                v3 = &v25;\n
                sub_402c10(v3, a0);\n
                v8 = v24;\n
                v2 = &v25;\n
                v19 = v8 - sub_4021a0(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_402ad0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_402ad0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v14 = &v25; *(v14); v14 = v14 + 1)\n
                {\n
                    v2 = *(v14);\n
                    sub_402ad0(*(v14));\n
                    v26 += 1;\n
                }\n
                if (v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        v2 = 32;\n
                        sub_402ad0(32);\n
                        v26 += 1;\n
                    }\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (*(v3) == 102)\n
            {\n
                v31 = a0;\n
                a0 = v31 + 2;\n
                *(&v13) = *(&v31);\n
                *(&v2) = *(&v13);\n
                a0 = &v25;\n
                v4 = v23;\n
                sub_402ce0();\n
                v7 = v24;\n
                v2 = &v25;\n
                v19 = v7 - sub_4021a0(&v25);\n
                if (!v21)\n
                {\n
                    for (v20 = 0; v20 < v19; v20 += 1)\n
                    {\n
                        if (!v22)\n
                        {\n
                            v2 = 32;\n
                            sub_402ad0(32);\n
                        }\n
                        else\n
                        {\n
                            v2 = 48;\n
                            sub_402ad0(48);\n
                        }\n
                        v26 += 1;\n
                    }\n
                }\n
                for (v12 = &v25; *(v12); v12 += 1)\n
                {\n
                    v2 = *(v12);\n
                    sub_402ad0(*(v12));\n
                    v26 += 1;\n
                }\n
                v3 = v3 + 1;\n
                continue;\n
            }\n
            if (!(*(v3) == 115))\n
                goto LABEL_403916;\n
            v32 = a0;\n
            a0 = v32 + 1;\n
            v11 = &*(v32)->field_0;\n
            if (v23 > 0)\n
            {\n
                v6 = v23;\n
                v2 = v11;\n
                if (v6 < sub_4021a0(v11))\n
                {\n
                    v10 = v23;\n
                    goto LABEL_40379a;\n
                }\n
            }\n
            v2 = v11;\n
            v10 = sub_4021a0(v11);\n
LABEL_40379a:\n
            v19 = v24 - v10;\n
            if (!v21)\n
            {\n
                for (v20 = 0; v20 < v19; v20 += 1)\n
                {\n
                    if (!v22)\n
                    {\n
                        v2 = 32;\n
                        sub_402ad0(32);\n
                    }\n
                    else\n
                    {\n
                        v2 = 48;\n
                        sub_402ad0(48);\n
                    }\n
                    v26 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v5 = 0;\n
                if (*(v11))\n
                    v5 = !(v10 <= 0);\n
                if (!(v5 & 1))\n
                    break;\n
                v2 = *(v11);\n
                sub_402ad0(*(v11));\n
                v26 += 1;\n
                v11 = v11 + 1;\n
                v10 -= 1;\n
            }\n
            if (v21)\n
            {\n
                for (v20 = 0; v20 < v19; v20 += 1)\n
                {\n
                    v2 = 32;\n
                    sub_402ad0(32);\n
                    v26 += 1;\n
                }\n
            }\n
            v3 = v3 + 1;\n
        }\n
    }\n
    v27 = v26;\n
    return v27;\n
}\n
", "4208948:sub_403934": null, "4208960:sub_403940": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403940(struct_0 *v3, struct_0 *a0, struct struct_0 **a1)\n
{\n
    struct_0 *<0x403940[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x4]\n
    struct_0 *v2;  // [bp+0x0]\n
    char v4;  // [bp+0x13]\n
    struct struct_0 **v5;  // [bp+0x14]\n
    unsigned int v6;  // [bp+0x18]\n
    unsigned int v7;  // [bp+0x1c]\n
    unsigned int v8;  // [bp+0x20]\n
    struct struct_0 **v9;  // [bp+0x24], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp+0x28], Other Possible Types: unsigned int\n
    struct_0 *v11;  // [bp+0x2c], Other Possible Types: unsigned int\n
    struct_0 *v12;  // [bp+0x30]\n
    struct_0 *v13;  // [bp+0x3c], Other Possible Types: unsigned int\n
    struct_0 *v14;  // [bp+0x40]\n
    struct_0 *v15;  // [bp+0x44], Other Possible Types: unsigned int\n
    struct_0 *v16;  // [bp+0x48]\n
    char v17;  // [bp+0x4f]\n
    void* v18;  // [bp+0x50], Other Possible Types: unsigned int\n
    void* v19;  // [bp+0x54], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp+0x58]\n
    void* v21;  // [bp+0x5c], Other Possible Types: unsigned int\n
    struct struct_0 **v22;  // [bp+0x60], Other Possible Types: unsigned int\n
    void* v23;  // [bp+0x64], Other Possible Types: unsigned int\n
    char v24;  // [bp+0x68]\n
    unsigned int v25;  // [bp+0xa8], Other Possible Types: char\n
    struct_0 *v26;  // [bp+0xac], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
\n
    v1 = &<0x403940[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (a0->field_0)\n
    {\n
        if (a0->field_0 != 64)\n
        {\n
            v3[*(&v25)].field_0 = a0->field_0;\n
            a0 += 1;\n
            v25 = *(&v25) + 1;\n
LABEL_40422f:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (a0->field_0 == 64)\n
            {\n
                v3[*(&v25)].field_0 = 64;\n
                a0 += 1;\n
                v25 = *(&v25) + 1;\n
                continue;\n
            }\n
            if (a0->field_0 == 45)\n
            {\n
                v20 = 1;\n
                a0 += 1;\n
            }\n
            v2 = *(a0);\n
            if (sub_4018c0(*(a0)))\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v21 = 1;\n
                    a0 += 1;\n
                }\n
                v2 = *(a0);\n
                if (sub_4018c0(*(a0)))\n
                {\n
                    v2 = a0;\n
                    v23 = sub_401c20(a0);\n
                    while (true)\n
                    {\n
                        v2 = *(a0);\n
                        if (!sub_4018c0(*(a0)))\n
                            break;\n
                        a0 += 1;\n
                    }\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                v2 = a0;\n
                v22 = sub_401c20(a0);\n
                while (true)\n
                {\n
                    v2 = *(a0);\n
                    if (!sub_4018c0(*(a0)))\n
                        break;\n
                    a0 += 1;\n
                }\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v17 = *(v27);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            v3[*(&v25)].field_0 = 32;\n
                        else\n
                            v3[*(&v25)].field_0 = 48;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                v3[*(&v25)].field_0 = v17;\n
                v25 = *(&v25) + 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v16 = *(v28);\n
                v2 = v16;\n
                v3 = &v24;\n
                sub_402b30(v3, a0);\n
                v8 = v23;\n
                v2 = &v24;\n
                v18 = v8 - sub_4021a0(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v15 = &v24; v15->field_0; v15 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = v15->field_0;\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v14 = *(v29);\n
                v2 = v14;\n
                v3 = &v24;\n
                sub_402c10(v3, a0);\n
                v7 = v23;\n
                v2 = &v24;\n
                v18 = v7 - sub_4021a0(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v13);\n
                    v25 = *(&v25) + 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                v30 = a1;\n
                a1 = v30 + 2;\n
                *(&v12) = *(&v30);\n
                *(&v2) = *(&v12);\n
                a0 = &v24;\n
                a1 = v22;\n
                sub_402ce0();\n
                v6 = v23;\n
                v2 = &v24;\n
                v18 = v6 - sub_4021a0(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            v3[*(&v25)].field_0 = 48;\n
                        else\n
                            v3[*(&v25)].field_0 = 32;\n
                        v25 = *(&v25) + 1;\n
                    }\n
                }\n
                for (v11 = &v24; *(v11); v11 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = *(v11);\n
                    v25 = *(&v25) + 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40422f;\n
            v31 = a1;\n
            a1 = v31 + 1;\n
            v10 = *(v31);\n
            if (v22 > 0)\n
            {\n
                v5 = v22;\n
                v2 = v10;\n
                if (v5 < sub_4021a0(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_4040a5;\n
                }\n
            }\n
            v2 = v10;\n
            v9 = sub_4021a0(v10);\n
LABEL_4040a5:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (!v21)\n
                        v3[*(&v25)].field_0 = 32;\n
                    else\n
                        v3[*(&v25)].field_0 = 48;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v4 = 0;\n
                if (*(v10))\n
                    v4 = !(v9 <= 0);\n
                if (!(v4 & 1))\n
                    break;\n
                v3[*(&v25)].field_0 = v10->field_0;\n
                v25 = *(&v25) + 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    v3[*(&v25)].field_0 = 32;\n
                    v25 = *(&v25) + 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4211277:sub_40424d": null, "4211280:sub_404250": "int sub_404250()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* **v1;  // [bp-0x8]\n
    void* **v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0x1010]\n
    unsigned int v5;  // ebp\n
\n
    sub_408780();\n
    v1 = &v3;\n
    v0 = sub_403060(v2, v1);\n
    v5 = *(&v4);\n
    return;\n
}\n
", "4211334:sub_404286": null, "4211344:sub_404290": "int sub_404290(void* v5, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v1 = &v6;\n
    v0 = sub_403940(v5, a0, v1);\n
    v8 = v2;\n
    return v0;\n
}\n
", "4211408:sub_4042d0": "int sub_4042d0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    sub_404250(\"\\n
******************\\n
@s\\n
*****************\\n
\", v0);\n
    cgc__terminate(1, v0);\n
    return sub_404300();\n
}\n
", "4211456:sub_404300": "int sub_404300(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_401050(v3);\n
    if (!v0)\n
        sub_4042d0(a0);\n
    sub_401f30(v0, v3);\n
    return v0;\n
}\n
", "4211529:sub_404349": null, "4211536:sub_404350": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern unsigned int g_40b0f4;\n
\n
int sub_404350()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_1 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v2 = sub_404300(28, \"Failed to malloc workingData\");\n
    v2->field_0 = sub_404300(44, \"Failed to malloc root node\");\n
    v2->field_0->field_20 = 0;\n
    v2->field_0->field_4 = 0;\n
    v2->field_0->field_10 = 0;\n
    v2->field_18 = 0;\n
    v2->field_0->field_8 = 68;\n
    v2->field_4 = v2->field_0;\n
    v2->field_10 = sub_404500(\"root\");\n
    v2->field_14 = sub_4045f0(\"root\");\n
    v2->field_8 = v2->field_10;\n
    v2->field_c = v2->field_14;\n
    sub_4046e0(v2->field_10);\n
    v0 = v2->field_0;\n
    v2->field_0->field_14 = sub_4047a0(v2->field_10, 0);\n
    v0 = v2->field_0;\n
    sub_4047a0(0, v2->field_14);\n
    v2->field_0->field_1c = 0;\n
    v2->field_0->field_20 = 0;\n
    v2->field_0->field_24 = 0;\n
    v1 = sub_404300(5, \"Failed to malloc root name\");\n
    v2->field_0->field_18 = v1;\n
    sub_401e30(v1, &g_40b0f4);\n
    return v2;\n
}\n
", "4211958:sub_4044f6": null, "4211968:sub_404500": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_404500(unsigned int v7, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4[3];  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3[0] = sub_404300(12, \"Failed to allocate user\");\n
    v2 = sub_404300(sub_4021a0(v7) + 1, \"Failed to allocate username\");\n
    sub_401e30(v2, v7);\n
    v3[2] = v2;\n
    if (!a0)\n
    {\n
        v3[0] = 0;\n
    }\n
    else\n
    {\n
        v1 = a0;\n
        for (v0 = a0->field_4; v0; v0 = v0->field_4)\n
        {\n
            v1 = v0;\n
        }\n
        *((v1 + 4)) = v3;\n
        v3[0] = v1;\n
    }\n
    v3[1] = 0;\n
    v4[0] = v3;\n
    return v4;\n
}\n
", "4212195:sub_4045e3": null, "4212208:sub_4045f0": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int sub_4045f0(unsigned int v7, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[5];  // [bp-0xc]\n
    unsigned int v4[5];  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3[0] = sub_404300(20, \"Failed to allocate group\");\n
    v2 = sub_404300(sub_4021a0(v7) + 1, \"Failed to allocate groupName\");\n
    sub_401e30(v2, v7);\n
    v3[4] = v2;\n
    v3[0] = 0;\n
    v3[3] = 0;\n
    v3[2] = 0;\n
    if (!a0)\n
    {\n
        a0[0] = v3;\n
    }\n
    else\n
    {\n
        v1 = a0;\n
        for (v0 = v1; v0; v0 = *((v1 + 8)))\n
        {\n
            v1 = v0;\n
        }\n
        v3[1] = v1;\n
        *((v1 + 8)) = v3;\n
    }\n
    v4[0] = v3;\n
    return v4;\n
}\n
", "4212439:sub_4046d7": null, "4212448:sub_4046e0": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_4046e0(unsigned int v5, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_1 *v6;  // eax\n
\n
    v3 = &v4;\n
    v2[0] = sub_404300(12, \"Failed to allocate newUser\");\n
    v2[2] = v5;\n
    v2[1] = 0;\n
    if (!a0->field_c)\n
    {\n
        a0->field_c = &v2[0];\n
        v2[0] = 0;\n
        a0->field_0 = 1;\n
        return v2;\n
    }\n
    v1 = a0->field_c;\n
    for (v0 = v1; v0; v0 = v0->field_4)\n
    {\n
        v1 = v0;\n
    }\n
    *((v1 + 4)) = v2;\n
    v2[0] = v1;\n
    v6 = a0;\n
    v6->field_0 = v6->field_0 + 1;\n
    return v2;\n
}\n
", "4212629:sub_404795": null, "4212640:sub_4047a0": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4047a0(unsigned int v6, unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2[4];  // [bp-0xc]\n
    unsigned int v3[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6 && !a0)\n
        goto LABEL_4047d7;\n
    if (!v6)\n
        goto LABEL_4047e5;\n
    if (!a0)\n
        goto LABEL_4047e5;\n
LABEL_4047d7:\n
    sub_4042d0(\"Bad call to _add_perm\");\n
LABEL_4047e5:\n
    v2[0] = sub_404300(16, \"Failed to malloc pPerms\");\n
    if (v6)\n
        v2[2] = v6;\n
    if (a0)\n
        v2[3] = a0;\n
    if (!a1->field_14)\n
    {\n
        a1->field_14 = &v2[0];\n
    }\n
    else\n
    {\n
        v1 = a1->field_14;\n
        for (v0 = v1; v0; v0 = *((v1 + 4)))\n
        {\n
            if (*((v1 + 8)) && *((v1 + 8)) == v6)\n
            {\n
                v3[0] = 0;\n
                return v3;\n
            }\n
            if (*((v1 + 12)) && *((v1 + 12)) == a0)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v1 = v0;\n
        }\n
        *((v1 + 4)) = v2;\n
        v2[0] = v1;\n
        v2[1] = 0;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4212965:sub_4048e5": null, "4212976:sub_4048f0": "typedef struct struct_3 {\n
    char padding_0[20];\n
    struct struct_2 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_4048f0(unsigned int v4, struct_3 *a0, unsigned int a1)\n
{\n
    struct_2 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_4049c0(a0);\n
    v0 = a0->field_14;\n
    while (true)\n
    {\n
        if (v0)\n
        {\n
            if (v0->field_8 && !sub_401ff0(v0->field_8->field_8, v4))\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
            if (*((v0 + 12)) && !sub_401ff0(*((*((v0 + 12)) + 16)), v4))\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
            v0 = v0->field_4;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4213181:sub_4049bd": null, "4213184:sub_4049c0": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_4049c0(struct_1 *v5, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v6 = v5->field_14;\n
    v2 = v6;\n
    v1 = 0;\n
    if (!v2)\n
        return v5->field_14;\n
    v6 = v2;\n
    if (!v6->field_8)\n
    {\n
        v6 = v2;\n
        if (!v6->field_c)\n
        {\n
            v0 = v5->field_18;\n
            v6 = sub_404250(\"Bad perm @s\\n
\");\n
            return v6;\n
        }\n
    }\n
    for (; v2; v2 = v6)\n
    {\n
        if (v2->field_8)\n
        {\n
            v0 = a0;\n
            if (!sub_404b80(v2->field_8))\n
            {\n
                v0 = v2;\n
                v1 = sub_404af0(v5);\n
            }\n
            else\n
            {\n
                v1 = v2->field_4;\n
            }\n
        }\n
        if (*((v2 + 12)))\n
        {\n
            v0 = a0;\n
            if (!sub_404be0(*((v2 + 12))))\n
            {\n
                v0 = v2;\n
                v1 = sub_404af0(v5);\n
            }\n
            else\n
            {\n
                v1 = *((v2 + 4));\n
            }\n
        }\n
        v6 = v1;\n
    }\n
    return v6;\n
}\n
", "4213484:sub_404aec": null, "4213488:sub_404af0": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_404af0(struct_3 *v4, struct_1 *a0)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = &a0->field_4->field_0;\n
    if (a0->field_0)\n
        a0->field_0->field_4 = a0->field_4;\n
    if (!a0->field_0)\n
        v4->field_14 = a0->field_4;\n
    if (a0->field_4)\n
        a0->field_4->field_0 = a0->field_0;\n
    sub_401380(a0);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4213632:sub_404b80": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int sub_404b80(unsigned int v4, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = a0->field_10;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0 != v4)\n
        {\n
            v0 = v0->field_4;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4213716:sub_404bd4": null, "4213728:sub_404be0": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int sub_404be0(unsigned int v4, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = a0->field_14;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0 == v4)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 = v0->field_8;\n
    }\n
}\n
", "4213812:sub_404c34": null, "4213824:sub_404c40": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
    struct struct_1 *field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_404c40(char v4, unsigned int a0, unsigned int a1, struct_0 *a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_2 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = sub_404300(44, \"Failed to mallod node\");\n
    v1->field_20 = a2;\n
    v1->field_0 = 0;\n
    v1->field_28 = 0;\n
    v1->field_24 = 0;\n
    v1->field_8 = v4;\n
    v1->field_10 = a0;\n
    v1->field_14 = sub_4047a0(a3, 0, v1);\n
    v0 = sub_404300(sub_4021a0(a1) + 1, \"Failed to malloc name\");\n
    sub_401e30(v0, a1);\n
    v1->field_18 = v0;\n
    v1->field_1c = 0;\n
    v1->field_20 = a2;\n
    if (!a2->field_24)\n
    {\n
        a2->field_24 = v1;\n
        a2->field_28 = &v1->field_0;\n
        v1->field_4 = 0;\n
        return v1;\n
    }\n
    a2->field_28->field_0 = v1;\n
    v1->field_4 = a2->field_28;\n
    a2->field_28 = &v1->field_0;\n
    return v1;\n
}\n
", "4214131:sub_404d73": null, "4214144:sub_404d80": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_404d80(struct_1 *v4)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = v4->field_4;\n
    for (v0 = 0; v1; v1 = v1->field_c)\n
    {\n
        v0 = v1->field_4 + v0;\n
    }\n
    return v0;\n
}\n
", "4214213:sub_404dc5": null, "4214224:sub_404dd0": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_404dd0(struct_1 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v5 = v8->field_4;\n
    v4 = v8->field_4;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (v5)\n
    {\n
        v2 = *((v5 + 4)) + v2;\n
        if (v1 == 1)\n
        {\n
            v5 = sub_404ed0(v8);\n
        }\n
        else\n
        {\n
            if (v2 >= a0)\n
            {\n
                v4 = v5;\n
                v1 = 1;\n
                v3 = v2 - a0;\n
            }\n
            v5 = v5->field_c;\n
        }\n
    }\n
    v2 = *((v4 + 4)) - v3;\n
    v0 = sub_404300(v2, \"Failed to malloc filechunk\");\n
    sub_401790(v0, *(v4), v2);\n
    sub_401380(*(v4));\n
    *((v4 + 4)) = v2;\n
    *(v4) = v0;\n
    return v4;\n
}\n
", "4214479:sub_404ecf": null, "4214480:sub_404ed0": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int sub_404ed0(unsigned int v4[3], struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[3];  // eax\n
    unsigned int v6[3];  // eax\n
\n
    v2 = &v3;\n
    v0 = a0->field_c;\n
    if (!a0)\n
    {\n
        sub_4025b0(\"delete_chunk called with NULL\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (a0->field_8)\n
    {\n
        a0->field_8->field_c = a0->field_c;\n
        if (!a0->field_c)\n
            v4[2] = 0;\n
        else\n
            a0->field_c->field_8 = a0->field_8;\n
        v6 = v4;\n
        v6[0] = v6[0] - 1;\n
    }\n
    else\n
    {\n
        v4[1] = a0->field_c;\n
        if (!a0->field_c)\n
        {\n
            v4[2] = 0;\n
            v4[0] = 0;\n
        }\n
        else\n
        {\n
            a0->field_c->field_8 = 0;\n
            v5 = v4;\n
            v5[0] = v5[0] - 1;\n
        }\n
    }\n
    sub_401380(a0->field_0);\n
    sub_401380(a0);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4214733:sub_404fcd": null, "4214736:sub_404fd0": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_404fd0(unsigned int v3, struct_1 *a0, unsigned int a1)\n
{\n
    unsigned int v0[4];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // eax\n
\n
    v1 = &v2;\n
    v0[0] = sub_404300(16, \"Failed to malloc filechunk\");\n
    v0[0] = sub_404300(a1, \"Failed to malloc chunk\");\n
    sub_401790(v0[0], v3, a1);\n
    v0[1] = a1;\n
    if (!a0->field_8)\n
    {\n
        a0->field_4 = v0;\n
        a0->field_8 = &v0[0];\n
        v0[2] = 0;\n
        a0->field_0 = 1;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        v4->field_0 = v4->field_0 + 1;\n
        a0->field_8->field_c = v0;\n
        v0[2] = a0->field_8;\n
        a0->field_8 = &v0[0];\n
    }\n
    v0[3] = 0;\n
    return v0;\n
}\n
", "4214956:sub_4050ac": null, "4214960:sub_4050b0": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
int sub_4050b0(void* v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = sub_404300(12, \"Failed to malloc file\");\n
    if (a1 > 0)\n
        v1 = sub_404fd0(a3, v2, a1);\n
    v0 = sub_404c40(70, a0, a2, v5, a4);\n
    v0->field_1c = v2;\n
    return v0;\n
}\n
", "4215109:sub_405145": null, "4215120:sub_405150": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_405150(struct_0 *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    for (v0 = v3->field_4; v0; v0 = sub_404ed0(v3, v0));\n
    return sub_401380(v3);\n
}\n
", "4215190:sub_405196": null, "4215200:sub_4051a0": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
    char field_8;\n
    char padding_9[11];\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    struct struct_3 *field_20;\n
    unsigned int field_24;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
    unsigned int field_28;\n
} struct_3;\n
\n
int sub_4051a0(struct_1 *v6, unsigned int *a0)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = v6->field_0;\n
    if (v6 == *(a0))\n
        sub_4025b0(\"can not delete root directory\");\n
    if (v6->field_8 == 70)\n
    {\n
        v2 = v6->field_1c;\n
        sub_405150(v2);\n
    }\n
    if (v6->field_8 == 68)\n
    {\n
        for (v1 = v6->field_24; v1; v1 = sub_4051a0(v1, a0));\n
    }\n
    if (v6->field_4)\n
    {\n
        v6->field_4->field_0 = v6->field_0;\n
        if (!v6->field_0)\n
            v6->field_20->field_28 = v6->field_4;\n
        else\n
            v6->field_0->field_4 = v6->field_4;\n
    }\n
    else\n
    {\n
        v6->field_20->field_24 = v6->field_0;\n
        if (!v6->field_0)\n
        {\n
            v6->field_20->field_24 = 0;\n
            v6->field_20->field_28 = 0;\n
        }\n
        else\n
        {\n
            v6->field_0->field_4 = 0;\n
        }\n
    }\n
    for (v0 = v6->field_14; v0; v0 = sub_404af0(v6, v0));\n
    sub_401380(v6->field_18);\n
    sub_401380(v6);\n
    return v3;\n
}\n
", "4215579:sub_40531b": null, "4215584:sub_405320": "int sub_405320(unsigned int v4, unsigned int a0, void* a1, unsigned int a2)\n
{\n
    unsigned int v0[11];  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v0[0] = sub_404c40(68, v4, a0, a1, a2);\n
    v0[9] = 0;\n
    v0[10] = 0;\n
    v6 = v1;\n
    return v0;\n
}\n
", "4215675:sub_40537b": null, "4215680:sub_405380": "typedef struct struct_0 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_0;\n
\n
int sub_405380(unsigned int v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404500(v2, a0->field_10);\n
}\n
", "4215718:sub_4053a6": null, "4215728:sub_4053b0": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_4053b0(unsigned int v4, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = a0->field_c;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0->field_8 == v4)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = v0->field_4;\n
    }\n
}\n
", "4215814:sub_405406": null, "4215824:sub_405410": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_405410(unsigned int v5, unsigned int a0[4])\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[4];  // eax\n
    unsigned int v7[4];  // eax\n
\n
    v3 = &v4;\n
    v1 = sub_4053b0(v5, a0);\n
    v0 = 0;\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_0)\n
    {\n
        if (!v1->field_4)\n
        {\n
            v1->field_0->field_4 = 0;\n
        }\n
        else\n
        {\n
            v1->field_0->field_4 = v1->field_4;\n
            v1->field_4->field_0 = v1->field_0;\n
        }\n
        v7 = a0;\n
        v7[0] = v7[0] - 1;\n
    }\n
    else if (!v1->field_4)\n
    {\n
        a0[3] = 0;\n
        a0[0] = 0;\n
    }\n
    else\n
    {\n
        a0[3] = v1->field_4;\n
        v1->field_4->field_0 = 0;\n
        v6 = a0;\n
        v6[0] = v6[0] - 1;\n
    }\n
    v0 = v1->field_0;\n
    sub_401380(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4216089:sub_405519": null, "4216096:sub_405520": "typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
int sub_405520(struct_2 *v6, struct_4 *a0)\n
{\n
    void* v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = a0->field_14;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        sub_4025b0(\"Bad call:remove_user\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v6->field_0)\n
    {\n
        sub_4025b0(\"Can not delete root\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v6 != a0->field_10)\n
    {\n
        for (v0 = 0; v2; v2 = v2->field_8)\n
        {\n
            sub_405410(v6, v2);\n
        }\n
        v6->field_0->field_4 = v6->field_4;\n
        if (v6->field_4)\n
            v6->field_4->field_0 = v6->field_0;\n
        v1 = v6->field_0;\n
        sub_401380(v6->field_8);\n
        sub_401380(v6);\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4216366:sub_40562e": null, "4216368:sub_405630": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_3 *field_8;\n
    struct struct_0 *field_c;\n
    unsigned int field_10;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_3;\n
\n
int sub_405630(struct_4 *v6, struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc]\n
    struct_1 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v6)\n
    {\n
        sub_4025b0(\"bad call to remove_group\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v6 == a0->field_14)\n
    {\n
        sub_4025b0(\"Unable to delete group root\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v1 = v6->field_c;\n
        for (v0 = v1; v1; v1 = *((v1 + 4)))\n
        {\n
            v0 = v1;\n
        }\n
        for (; v0; v0 = sub_405410(*((v0 + 8)), v6));\n
        if (v6->field_4)\n
            v6->field_4->field_8 = v6->field_8;\n
        if (v6->field_8)\n
            v6->field_8->field_4 = v6->field_4;\n
        v2 = v6->field_4;\n
        sub_401380(v6->field_10);\n
        sub_401380(v6);\n
        v3 = v2;\n
        return v3;\n
    }\n
}\n
", "4216671:sub_40575f": null, "4216672:sub_405760": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
int sub_405760(unsigned int v5, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = a0->field_10;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (sub_401ff0(v5, *((v0 + 8))))\n
        {\n
            v0 = *((v0 + 4));\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4216779:sub_4057cb": null, "4216784:sub_4057d0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
int sub_4057d0(unsigned int v6, struct_1 *a0)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = a0->field_10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        else if (v0 != v6)\n
        {\n
            v0 += 1;\n
            v1 = *((v1 + 4));\n
        }\n
        else\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4216889:sub_405839": null, "4216896:sub_405840": "typedef struct struct_0 {\n
    char padding_0[20];\n
    void* field_14;\n
} struct_0;\n
\n
int sub_405840(unsigned int v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4045f0(v2, a0->field_14);\n
}\n
", "4216934:sub_405866": null, "4216944:sub_405870": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
int sub_405870(unsigned int v5, struct_1 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = a0->field_14;\n
    v0 = 0;\n
    while (v1)\n
    {\n
        if (v0 == v5)\n
        {\n
            v2 = v1;\n
            v1 = 0;\n
        }\n
        else\n
        {\n
            v0 += 1;\n
            v1 = *((v1 + 8));\n
        }\n
    }\n
    return v2;\n
}\n
", "4217050:sub_4058da": null, "4217056:sub_4058e0": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
int sub_4058e0(unsigned int v5, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (a0->field_14)\n
    {\n
        for (v0 = a0->field_14; v0; v0 = *((v0 + 8)))\n
        {\n
            if (!sub_401ff0(v5, *((v0 + 16))))\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4217181:sub_40595d": null, "4217184:sub_405960": "int sub_405960(unsigned int v7, unsigned int a0[9])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (a0 == v7)\n
    {\n
        v3 = sub_404300(sub_4021a0(a0[6]) + 2, \"Failed to allocate endName\");\n
        sub_401e30(v3, a0[6]);\n
        v4 = v3;\n
        return v4;\n
    }\n
    else if (a0[8])\n
    {\n
        v2 = sub_405960(v7, a0[8]);\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = sub_4021a0(v2);\n
        v1 = sub_404300(v0 + sub_4021a0(a0[6]) + 2, \"Failed to allocate retpath\");\n
        sub_401e30(v1, v2);\n
        sub_402450(v1, \"/\");\n
        sub_402450(v1, a0[6]);\n
        sub_401380(v2);\n
        v4 = v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4217493:sub_405a95": null, "4217504:sub_405aa0": "int sub_405aa0(unsigned int v4, unsigned int *a0, unsigned int a1[9])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = sub_405960(*(a0), a1);\n
    v0 = sub_4021a0(v1);\n
    if (v0 >= 4000)\n
    {\n
        v0 = 3999;\n
        sub_4025b0(\"Path exceeds max path size and has been truncated\");\n
    }\n
    sub_401e90(v4, v1, v0);\n
    return sub_401380(v1);\n
}\n
", "4217631:sub_405b1f": null, "4217632:sub_405b20": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[20];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int sub_405b20(unsigned int v4, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (sub_401ff0(v4, v0->field_18))\n
        {\n
            v0 = v0->field_0;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4217729:sub_405b81": null, "4217744:sub_405b90": "typedef struct struct_0 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
int sub_405b90(unsigned int v4, struct_0 *a0)\n
{\n
    struct_2 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = sub_405b20(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0->field_8 != 68)\n
        {\n
            v0 = sub_405b20(v4, v0->field_0);\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4217860:sub_405c04": null, "4217872:sub_405c10": "typedef struct struct_1 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[19];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
int sub_405c10(unsigned int v4, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = sub_405b20(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0->field_8 != 70)\n
        {\n
            v0 = sub_405b20(v4, v0->field_0);\n
        }\n
        else\n
        {\n
            v1 = *((v0 + 28));\n
            return v1;\n
        }\n
    }\n
}\n
", "4217991:sub_405c87": null, "4218000:sub_405c90": "typedef struct struct_1 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_2;\n
\n
int sub_405c90(unsigned int v4, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = sub_405b20(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0->field_8 == 70)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = sub_405b20(v4, v0->field_0);\n
    }\n
}\n
", "4218116:sub_405d04": null, "4218128:sub_405d10": "int sub_405d10(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_404350();\n
    sub_408740(v0, v0, 0);\n
    return 0;\n
}\n
", "4218176:sub_405d40": "int sub_405d40(unsigned int v5)\n
{\n
    char *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_4021a0(v5))\n
        {\n
            v2 = sub_401c20(v5);\n
            return v2;\n
        }\n
        if (v1[v5] > 57)\n
            break;\n
        if (v1[v5] < 48)\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218313:sub_405dc9": null, "4218320:sub_405dd0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405dd0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xe]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    sub_404250(\"@s :\");\n
    v1 = sub_402280(&v2, 10, 9);\n
    (&v2)[v1] = 0;\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if ((&v2)[v0] <= 57 && !((&v2)[v0] < 48))\n
            goto LABEL_405e51;\n
        (&v2)[v0] = 48;\n
LABEL_405e51:\n
    }\n
    v1 = sub_401c20(&v2);\n
    return v1;\n
}\n
", "4218490:sub_405e7a": null, "4218496:sub_405e80": "int sub_405e80(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404250(\"@s >\");\n
    v0 = sub_402280(v3, 10, a0);\n
    v3[v0] = 0;\n
    return v0;\n
}\n
", "4218579:sub_405ed3": null, "4218592:sub_405ee0": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4[9];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_405ee0(struct_1 *v3)\n
{\n
    char v0;  // [bp-0xfa4]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_401f30(&v0, 4000);\n
    sub_405aa0(&v0, v3, v3->field_4);\n
    return sub_404250(\"@s@@SPIFF:@s/\", v3->field_8->field_8);\n
}\n
", "4218702:sub_405f4e": null, "4218704:sub_405f50": "int sub_405f50(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    sub_404250();\n
    for (v1 = 0; v1 < a0 - 1; v1 = v1 + 1)\n
    {\n
        v0 = *((v4 + v1 * 4));\n
        sub_404250(\"@s, \");\n
    }\n
    v0 = *((v4 + (a0 - 1) * 4));\n
    return sub_404250(\"@s >\\n
\");\n
}\n
", "4218830:sub_405fce": null, "4218832:sub_405fd0": "int sub_405fd0(unsigned int v7, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 1;\n
    v0 = sub_4021a0(a0);\n
    for (v1 = 0; v1 < v0; v1 += 1)\n
    {\n
        if (a0[v1] != 32)\n
        {\n
            if (v2 == 1)\n
                v3 = v1;\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                sub_401f30(v7 + v4 * 0x100, 0x100);\n
                sub_401e90(v7 + v4 * 0x100, &a0[v3], v1 - v3);\n
                if (v4 == 15)\n
                    break;\n
                v4 += 1;\n
            }\n
            v2 = 1;\n
            v3 = v1;\n
        }\n
    }\n
    if (v3 < v1)\n
    {\n
        sub_401f30(v7 + v4 * 0x100, 0x100);\n
        sub_401e90(v7 + v4 * 0x100, &a0[v3], v1 - v3);\n
        v4 += 1;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4219174:sub_406126": null, "4219184:sub_406130": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_406130(struct_1 *v3, void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v3->field_14;\n
    v4 = sub_4049c0(v3, a0);\n
    for (; v0; v0 = v4)\n
    {\n
        if (v0->field_8)\n
            sub_404250(\" @s\");\n
        if (*((v0 + 12)))\n
            sub_404250(\" @s\");\n
        v4 = v0->field_4;\n
    }\n
    return v4;\n
}\n
", "4219332:sub_4061c4": null, "4219344:sub_4061d0": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_4061d0(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v2 = v5->field_10;\n
    v1 = 0;\n
    v6 = sub_404250();\n
    for (; v2; v2 = v6)\n
    {\n
        v0 = *((v2 + 8));\n
        sub_404250(\"@d @s\\n
\", v1);\n
        v1 += 1;\n
        v6 = *((v2 + 4));\n
    }\n
    return v6;\n
}\n
", "4219452:sub_40623c": null, "4219456:sub_406240": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_406240(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v2 = v5->field_14;\n
    v1 = 0;\n
    v6 = sub_404250();\n
    for (; v2; v2 = v6)\n
    {\n
        v0 = *((v2 + 16));\n
        sub_404250(\"@d @s\\n
\", v1);\n
        v1 += 1;\n
        v6 = *((v2 + 8));\n
    }\n
    return v6;\n
}\n
", "4219564:sub_4062ac": null, "4219568:sub_4062b0": "typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_4062b0(struct_2 *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_1 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v2 = v5->field_c;\n
    v1 = 0;\n
    v6 = sub_404250();\n
    for (; v2; v2 = v6)\n
    {\n
        v0 = *((*((v2 + 8)) + 8));\n
        sub_404250(\"@d @s\\n
\", v1);\n
        v1 += 1;\n
        v6 = *((v2 + 4));\n
    }\n
    return v6;\n
}\n
", "4219679:sub_40631f": null, "4219680:sub_406320": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_406320(unsigned int v5, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = sub_405d40(v5);\n
    if (sub_401ff0(v5, \"root\") && sub_401ff0(v5, \"0\"))\n
    {\n
        if (v0)\n
        {\n
            v1 = sub_405870(v0, a0);\n
            if (v1)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
        v1 = sub_4058e0(v5, a0);\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = a0->field_14;\n
    return v2;\n
}\n
", "4219879:sub_4063e7": null, "4219888:sub_4063f0": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_4063f0(unsigned int v6, struct_0 *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = sub_405d40(v6);\n
    v0 = 0;\n
    if (sub_401ff0(v6, \"root\"))\n
        v0 = sub_401ff0(v6, \"0\");\n
    if (!(v0 & 1))\n
    {\n
        v3 = a0->field_10;\n
        return v3;\n
    }\n
    if (v1)\n
    {\n
        v2 = sub_4057d0(v1, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
    v2 = sub_405760(v6, a0);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220111:sub_4064cf": null, "4220112:sub_4064d0": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned int field_18;\n
    void* field_1c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[36];\n
    struct struct_0 *field_24;\n
} struct_1;\n
\n
int sub_4064d0(struct_2 *v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_3 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    v3 = &v6->field_4->field_24->field_0;\n
    v7 = sub_404250();\n
    for (; v3; v3 = v7)\n
    {\n
        if (v3->field_8 == 70)\n
        {\n
            v2 = v3->field_18;\n
            v1 = v3->field_10;\n
            v0 = v2;\n
            sub_404250(\"FILE @d  @x   @s  \", sub_404d80(v3->field_1c), v1);\n
            sub_406130(v3, v6);\n
            sub_404250(\"\\n
\");\n
        }\n
        if (v3->field_8 == 68)\n
        {\n
            v0 = v3->field_18;\n
            sub_404250(\"DIR  @d  @x   @s \", 44, v3->field_10);\n
            sub_406130(v3, v6);\n
            sub_404250(\"\\n
\");\n
        }\n
        v7 = v3->field_0;\n
    }\n
    return v7;\n
}\n
", "4220381:sub_4065dd": null, "4220384:sub_4065e0": "typedef struct struct_2 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[19];\n
    struct struct_1 *field_1c;\n
    char padding_20[4];\n
    unsigned int field_24;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    struct struct_3 *field_4;\n
    struct struct_4 *field_8;\n
    void* field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    struct struct_6 *field_4;\n
    struct struct_5 *field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
    void* field_24;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
    unsigned int field_24;\n
} struct_6;\n
\n
extern unsigned int g_40b0f4;\n
extern unsigned int g_40b3c4;\n
extern unsigned int g_40b3f8;\n
extern unsigned int g_40b418;\n
extern unsigned int g_40b438;\n
\n
int sub_4065e0()\n
{\n
    unsigned int v0;  // [bp-0x21a8]\n
    unsigned int v1;  // [bp-0x21a4]\n
    unsigned int v2;  // [bp-0x21a0]\n
    unsigned int v3;  // [bp-0x219c]\n
    unsigned int v4;  // [bp-0x2198]\n
    unsigned int v5;  // [bp-0x2194]\n
    unsigned int v6;  // [bp-0x2190]\n
    unsigned int v7;  // [bp-0x218c]\n
    unsigned int v8;  // [bp-0x2188]\n
    void* v9;  // [bp-0x2184], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp-0x2180], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x217c], Other Possible Types: unsigned int\n
    struct_1 *v12;  // [bp-0x2178]\n
    void* v13;  // [bp-0x2174], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x2170], Other Possible Types: unsigned int\n
    struct_2 *v15;  // [bp-0x216c], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x2168], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x2164], Other Possible Types: unsigned int\n
    char v18;  // [bp-0x2160]\n
    void* v19;  // [bp-0x11c0]\n
    unsigned int v20;  // [bp-0x11bc]\n
    void* v21;  // [bp-0x11b8], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x11b4], Other Possible Types: unsigned int\n
    void* v23;  // [bp-0x11b0], Other Possible Types: unsigned int\n
    void* v24;  // [bp-0x11ac], Other Possible Types: unsigned int\n
    void* v25;  // [bp-0x11a8], Other Possible Types: unsigned int\n
    char v26;  // [bp-0x11a4]\n
    char v27;  // [bp-0x10a4]\n
    char v28;  // [bp-0xfa4]\n
    char v29;  // [bp-0xea4]\n
    char v30;  // [bp-0xda4]\n
    char v31;  // [bp-0xca4]\n
    unsigned int v32;  // [bp-0xa4]\n
    unsigned int v33;  // [bp-0x84]\n
    unsigned int v34;  // [bp-0x64]\n
    unsigned int v35;  // [bp-0x44]\n
    unsigned int v36;  // [bp-0x40]\n
    unsigned int v37;  // [bp-0x3c]\n
    unsigned int v38;  // [bp-0x38]\n
    unsigned int v39;  // [bp-0x34]\n
    struct_5 *v40;  // [bp+0x4], Other Possible Types: unsigned int, struct_4 *\n
    char v41;  // [bp+0x21a0]\n
    char v42;  // [bp+0x21a4]\n
    char v43;  // [bp+0x21a8]\n
    char v44;  // [bp+0x21ac]\n
    unsigned int v45;  // esi\n
    unsigned int v46;  // edi\n
    unsigned int v47;  // ebx\n
    unsigned int v48;  // esi\n
    unsigned int v49;  // edi\n
    unsigned int v50;  // ebx\n
    unsigned int v51;  // ebp\n
\n
    sub_408780(v45, v46, v47);\n
    memcpy(&v39, &g_40b3c4);\n
    v35 = \"date\";\n
    v36 = \"user\";\n
    v37 = \"group\";\n
    v38 = \"help\";\n
    memcpy(&v34, &g_40b3f8);\n
    memcpy(&v33, &g_40b418);\n
    memcpy(&v32, &g_40b438);\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    while (true)\n
    {\n
        v21 = 0;\n
        v22 = 0;\n
        v23 = 0;\n
        v24 = 0;\n
        v25 = 0;\n
        v19 = 0;\n
        sub_401f30(&v18, 4000);\n
        v17 = 0;\n
        v15 = 0;\n
        v14 = 0;\n
        v13 = 0;\n
        v12 = 0;\n
        v11 = 0;\n
        v10 = 0;\n
        v9 = 0;\n
        sub_401f30(&v26, 0x100);\n
        sub_405ee0(v40);\n
        sub_405e80(&v26, 255, &g_40b0f4);\n
        for (v23 = 0; v23 < 16; v23 += 1)\n
        {\n
            sub_401f30(&v27 + 0x100 * v23, 0x100);\n
        }\n
        v25 = sub_405fd0(&v27, &v26);\n
        v22 = 0;\n
        v21 = 100;\n
        for (v24 = 0; v24 < 9; v24 += 1)\n
        {\n
            if (!sub_401ff0((&v39)[v24], &v27))\n
                v21 = v24;\n
        }\n
        v8 = v21;\n
        switch (v8)\n
        {\n
        case 0:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 4; v24 += 1)\n
            {\n
                if (!sub_401ff0((&v35)[v24], &v28))\n
                    v21 = v24;\n
            }\n
            v7 = v21;\n
            switch (v7)\n
            {\n
            case 0:\n
                v40->field_18 = sub_4084f0();\n
                break;\n
            case 1:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"missing user name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = sub_4063f0(&v29, v40);\n
                    if (v14)\n
                        v40->field_8 = v14;\n
                    else\n
                        sub_404250(\"unknown user: @s\\n
\");\n
                    break;\n
                }\n
            case 2:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"missing group name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v13 = sub_406320(&v29, v40);\n
                    if (v13)\n
                        v40->field_c = v13;\n
                    else\n
                        sub_404250(\"unknown group: @s\\n
\");\n
                    break;\n
                }\n
            case 3:\n
                sub_405f50(&v35, 4);\n
                break;\n
            default:\n
                sub_404250(\"Invalid command: @s\\n
\");\n
            }\n
            break;\n
        case 1:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 8; v24 += 1)\n
            {\n
                if (!sub_401ff0(*((&v34 + 0x4 * v24)), &v28))\n
                    v21 = v24;\n
            }\n
            v6 = v21;\n
            switch (v6)\n
            {\n
            case 0:\n
                sub_4080b0();\n
                break;\n
            case 1:\n
                sub_404250(\"@s\\n
\");\n
                break;\n
            case 2:\n
                sub_404250(\"@s\\n
\");\n
                break;\n
            case 3:\n
                sub_401f30(&v18, 4000);\n
                sub_405aa0(&v18, v40, v40->field_4);\n
                sub_404250(\"@s/\\n
\");\n
                break;\n
            case 4:\n
                sub_405f50(&v34, 8);\n
                break;\n
            case 5:\n
                sub_4061d0(v40);\n
                break;\n
            case 6:\n
                sub_406240(v40);\n
                break;\n
            case 7:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"missing group name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v13 = sub_406320(&v29, v40);\n
                    if (v13)\n
                    {\n
                        sub_4062b0(v13);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        sub_404250(\"unknown group: @s\\n
\");\n
                        break;\n
                    }\n
                }\n
            default:\n
                sub_404250(\"Invalid command: @s\\n
\");\n
            }\n
            break;\n
        case 2:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 8; v24 += 1)\n
            {\n
                if (!sub_401ff0((&v33)[v24], &v28))\n
                    v21 = v24;\n
            }\n
            v5 = v21;\n
            switch (v5)\n
            {\n
            case 0:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_401f30(&v18, 4000);\n
                    sub_405e80(&v18, 128, \"UserName\");\n
                    sub_401e30(&v29, &v18);\n
                }\n
                v14 = sub_4063f0(&v29, v40);\n
                if (v14)\n
                    sub_4025b0(\"Username already in use\");\n
                else\n
                    sub_405380(&v29, v40);\n
                break;\n
            case 1:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_401f30(&v18, 4000);\n
                    sub_405e80(&v18, 128, \"GroupName\");\n
                    sub_401e30(&v29, &v18);\n
                }\n
                v13 = sub_406320(&v29, v40);\n
                if (v13)\n
                    sub_4025b0(\"Groupname already in use\");\n
                else\n
                    sub_405840(&v29, v40);\n
                break;\n
            case 2:\n
                v22 = sub_401c20(&v30);\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Filename required\");\n
                    break;\n
                }\n
                if (v22 > 1000000)\n
                {\n
                    sub_4025b0(\"Too big\");\n
                    break;\n
                }\n
                if (sub_405b20(&v29, v40->field_4->field_24))\n
                {\n
                    sub_4025b0(\"There is another file or directory with that name\");\n
                    break;\n
                }\n
                if (v22 <= 0)\n
                {\n
                    v16 = 0;\n
                }\n
                else\n
                {\n
                    v16 = sub_404300(v22, \"Failed to allocate tempBuf\");\n
                    sub_4025b0(\"-----Begin File-----\");\n
                    v4 = v22;\n
                    if (v4 != sub_4021e0(v16, v22))\n
                    {\n
                        sub_4042d0(\"Failed to reveive file\");\n
                        break;\n
                    }\n
                }\n
                v40 = &v40->field_8->padding_0;\n
                v15 = sub_4050b0(v40->field_4, v40->field_18, v22, &v29, v16, v40);\n
                break;\n
            case 3:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Directory name required\");\n
                    break;\n
                }\n
                else if (sub_405b20(&v29, v40->field_4->field_24))\n
                {\n
                    sub_4025b0(\"There is another file or directory with that name\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = sub_405320(v40->field_18, &v29, v40->field_4, v40->field_8);\n
                    break;\n
                }\n
            case 4:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"username or number required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = sub_4063f0(&v29, v40);\n
                    if (!v14)\n
                    {\n
                        sub_4025b0(\"User does not exist, add user first\");\n
                    }\n
                    else\n
                    {\n
                        v9 = sub_4053b0(v14, v40->field_c);\n
                        if (v9)\n
                            sub_404250(\"@s is already in @s\\n
\", &v29);\n
                        else\n
                            sub_4046e0(v14, v40->field_c);\n
                    }\n
                    break;\n
                }\n
            case 5:\n
                if (sub_401ff0(&v29, &g_40b0f4) && sub_401ff0(&v29, \" \"))\n
                {\n
                    v3 = !sub_401ff0(&v30, \"user\");\n
                    if (!(v3 ^ !sub_401ff0(&v30, \"group\")))\n
                    {\n
                        sub_4025b0(\"'user' or 'group'\");\n
                        break;\n
                    }\n
                    if (!sub_401ff0(&v31, &g_40b0f4))\n
                    {\n
                        sub_4025b0(\"user name, group name, or number required\");\n
                        break;\n
                    }\n
                    v15 = sub_405b20(&v29, v40->field_4->field_24);\n
                    if (!v15)\n
                    {\n
                        sub_4025b0(\"Invalid file or directory\");\n
                        break;\n
                    }\n
                    if (v15->field_8 == 76)\n
                    {\n
                        v15 = v15->field_24;\n
                        break;\n
                    }\n
                    if (!sub_401ff0(&v30, \"user\"))\n
                    {\n
                        v14 = sub_4063f0(&v31, v40);\n
                        v13 = 0;\n
                        if (!v14)\n
                        {\n
                            sub_404250(\"user @s not found\\n
\");\n
                            break;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v13 = sub_406320(&v31, v40);\n
                        v14 = 0;\n
                        if (!v13)\n
                        {\n
                            sub_404250(\"group @s not found\\n
\");\n
                            break;\n
                        }\n
                    }\n
                    sub_4049c0(v15, v40);\n
                    v11 = sub_4047a0(v14, v13, v15);\n
                    break;\n
                }\n
                sub_4025b0(\"name of file or directory required\");\n
                break;\n
            case 6:\n
                v22 = sub_401c20(&v30);\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Filename required\");\n
                    break;\n
                }\n
                else if (v22 > 1000000)\n
                {\n
                    sub_4025b0(\"Too big\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v12 = sub_405c10(&v29, v40->field_4);\n
                    if (!v12)\n
                    {\n
                        sub_4025b0(\"No file in working directory by that name\");\n
                        break;\n
                    }\n
                    else if (v22 <= 0)\n
                    {\n
                        v17 = 0;\n
                        sub_4025b0(\"Can not add 0 bytes to file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v17 = sub_404300(v22, \"Failed to allocate tempBuf\");\n
                        sub_4025b0(\"-----Begin File-----\");\n
                        v2 = v22;\n
                        if (v2 != sub_4021e0(v17, v22))\n
                        {\n
                            sub_4042d0(\"Failed to reveive file\");\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v10 = sub_404fd0(v17, v12, v22);\n
                            break;\n
                        }\n
                    }\n
                }\n
            case 7:\n
                sub_405f50(&v33, 8);\n
                break;\n
            default:\n
                sub_404250(\"Invalid command: @s\\n
\");\n
            }\n
            break;\n
        case 3:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 8; v24 += 1)\n
            {\n
                if (!sub_401ff0(*((&v32 + 0x4 * v24)), &v28))\n
                    v21 = v24;\n
            }\n
            v1 = v21;\n
            switch (v1)\n
            {\n
            case 0:\n
                sub_401f30(&v18, 4000);\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_405e80(&v18, 128, \"User Name or number\");\n
                    sub_401e30(&v29, &v18);\n
                }\n
                v14 = sub_4063f0(&v29, v40);\n
                if (v14)\n
                    sub_405520(v14, v40);\n
                else\n
                    sub_4025b0(\"No such user found\");\n
                break;\n
            case 1:\n
                sub_401f30(&v18, 4000);\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_405e80(&v18, 128, \"Group Name or number\");\n
                    sub_401e30(&v29, &v18);\n
                }\n
                v13 = sub_406320(&v29, v40);\n
                if (!v13)\n
                    sub_4025b0(\"no such group found\");\n
                else\n
                    sub_405630(v13, v40);\n
                break;\n
            case 2:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Filename required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = sub_405c90(&v29, v40->field_4);\n
                    if (!v15)\n
                    {\n
                        sub_4025b0(\"No such file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        sub_4051a0(v15, v40);\n
                        break;\n
                    }\n
                }\n
            case 3:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Directory name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = sub_405b90(&v29, v40->field_4);\n
                    if (!v15)\n
                    {\n
                        sub_4025b0(\"No such directory\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        sub_4051a0(v15, v40);\n
                        break;\n
                    }\n
                }\n
            case 4:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"User name required\");\n
                    break;\n
                }\n
                else if (!sub_401ff0(&v30, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"group name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = sub_4063f0(&v29, v40);\n
                    if (!v14)\n
                    {\n
                        sub_4025b0(\"No such user\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v13 = sub_406320(&v30, v40);\n
                        if (!v13)\n
                        {\n
                            sub_4025b0(\"No such group\");\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v9 = sub_4053b0(v14, v13);\n
                            if (!v9)\n
                            {\n
                                sub_4025b0(\"User is not in group\");\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                sub_405410(v14, v13);\n
                                break;\n
                            }\n
                        }\n
                    }\n
                }\n
            case 5:\n
                if (!sub_401ff0(&v30, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"User or group name required\");\n
                    break;\n
                }\n
                else if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"file name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = sub_405b20(&v29, v40->field_4->field_24);\n
                    if (!v15)\n
                    {\n
                        sub_4025b0(\"No such file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v11 = sub_4048f0(&v30, v15, v40);\n
                        if (!v11)\n
                            sub_4025b0(\"No such user permission on file\");\n
                        else\n
                            sub_404af0(v15, v11);\n
                        break;\n
                    }\n
                }\n
            case 6:\n
                if (!sub_401ff0(&v29, &g_40b0f4))\n
                {\n
                    sub_4025b0(\"Filename required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v20 = sub_405d40(&v30);\n
                    if (!v20)\n
                    {\n
                        sub_4025b0(\"zero bytes deleted\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v15 = sub_405c90(&v29, v40->field_4);\n
                        v12 = v15->field_1c;\n
                        if (!v15)\n
                        {\n
                            sub_4025b0(\"No such file\");\n
                            sub_404250(\"@s\\n
\");\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v22 = sub_404d80(v12);\n
                            if (v20 > v22)\n
                                sub_4025b0(\"Too many bytes\");\n
                            v22 -= v20;\n
                            sub_404dd0(v12, v22);\n
                            break;\n
                        }\n
                    }\n
                }\n
            case 7:\n
                sub_405f50(&v32, 8);\n
                break;\n
            default:\n
                sub_405f50(&v32, 8);\n
            }\n
            break;\n
        case 4:\n
            sub_4025b0(\"exiting\");\n
            goto LABEL_4080a0;\n
        case 5:\n
            sub_405f50(&v39, 9);\n
            break;\n
        case 6:\n
            sub_4064d0(v40);\n
            break;\n
        case 7:\n
            if (!sub_401ff0(&v28, &g_40b0f4))\n
            {\n
                sub_4025b0(\"Filename required\");\n
                break;\n
            }\n
            else\n
            {\n
                v12 = sub_405c10(&v28, v40->field_4);\n
                if (v12)\n
                {\n
                    v10 = v12->field_4;\n
                    sub_4025b0(\"-----Begin File-----\");\n
                    for (; v10; v10 = *((v10 + 12)))\n
                    {\n
                        v0 = *((v10 + 4));\n
                        if (v0 != sub_402990(v10, *((v10 + 4))))\n
                            sub_4025b0(\"file write failed\");\n
                    }\n
                    sub_4025b0(\"-----END File-----\");\n
                }\n
                break;\n
            }\n
        case 8:\n
            if (!sub_401ff0(&v28, &g_40b0f4))\n
            {\n
                sub_4025b0(\"directory required\");\n
                break;\n
            }\n
            else if (!sub_401ff0(&v28, \"..\"))\n
            {\n
                if (v40->field_4->field_20)\n
                    v40->field_4 = v40->field_4->field_20;\n
                break;\n
            }\n
            else\n
            {\n
                v15 = sub_405b90(&v28, v40->field_4);\n
                if (v15)\n
                {\n
                    v40->field_4 = &v15->padding_0;\n
                    break;\n
                }\n
                else\n
                {\n
                    sub_4025b0(\"No such directory in working directory\");\n
                    break;\n
                }\n
            }\n
        default:\n
            sub_404250(\"Invalid command @s\\n
\");\n
            sub_405f50(&v39, 9);\n
        }\n
    }\n
LABEL_4080a0:\n
    v48 = *(&v41);\n
    v49 = *(&v42);\n
    v50 = *(&v43);\n
    v51 = *(&v44);\n
    return;\n
}\n
", "4227243:sub_4080ab": null, "4227248:sub_4080b0": "extern unsigned int g_40b488;\n
extern unsigned int g_40b4a4;\n
\n
int sub_4080b0(unsigned int v16)\n
{\n
    unsigned int v0;  // [bp-0x8c]\n
    unsigned int v1;  // [bp-0x88]\n
    unsigned int v2;  // [bp-0x84]\n
    unsigned int v3;  // [bp-0x80]\n
    unsigned int v4;  // [bp-0x7c]\n
    unsigned int v5;  // [bp-0x78]\n
    char v6;  // [bp-0x74]\n
    char v7;  // [bp-0x70]\n
    char v8;  // [bp-0x6c]\n
    char v9;  // [bp-0x68]\n
    char v10;  // [bp-0x64]\n
    char v11;  // [bp-0x60]\n
    char v12;  // [bp-0x5c]\n
    char v13;  // [bp-0x2c]\n
    unsigned int v14;  // [bp-0x4]\n
    char v15;  // [bp+0x0]\n
\n
    v14 = &v15;\n
    memcpy(&v13, &g_40b488);\n
    memcpy(&v12, &g_40b4a4);\n
    sub_4081a0(v16);\n
    v5 = (0 CONCAT (0 CONCAT v16) /m 86400) /m 7 >> 32;\n
    v4 = *(&(&v13)[4 * v5]);\n
    v3 = *(&(&v12)[4 + 4 * *(&v7)]);\n
    v2 = *(&v11);\n
    v1 = v4;\n
    v0 = v2;\n
    return sub_404250(\"@s, @s @d @d @d:@d:@d GMT\\n
\", v1, v3, *(&v6), *(&v8), *(&v9), *(&v10));\n
}\n
", "4227478:sub_408196": null, "4227488:sub_4081a0": "extern unsigned int g_40b458;\n
\n
int sub_4081a0(unsigned int v14, unsigned int a0[6])\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    char v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v11 = 1970;\n
    v10 = 1;\n
    v9 = 1;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = v14;\n
    v4 = 1;\n
    while (v4)\n
    {\n
        v3 = 0x1e28500;\n
        if (!(v11 >> 31 CONCAT v11) /m 4 >> 32 && !(v11 == 2100))\n
            goto LABEL_40821c;\n
        v3 = 31536000;\n
LABEL_40821c:\n
        if (v5 > v3)\n
        {\n
            v5 -= v3;\n
            v11 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
        }\n
    }\n
    v0 = 48;\n
    memcpy(&v1, &g_40b458);\n
    if (!(v11 >> 31 CONCAT v11) /m 4 >> 32 && !(v11 == 2100))\n
        goto LABEL_408292;\n
    v2 = 28;\n
LABEL_408292:\n
    v4 = 1;\n
    while (v4)\n
    {\n
        if (v5 > *(&(&v1)[4 + 4 * v10]) * 86400)\n
        {\n
            v5 -= *(&(&v1)[4 + 4 * v10]) * 86400;\n
            v10 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
        }\n
    }\n
    for (; v5 >= 86400; v9 += 1)\n
    {\n
        v5 -= 86400;\n
    }\n
    for (; v5 >= 3600; v8 += 1)\n
    {\n
        v5 -= 3600;\n
    }\n
    for (; v5 >= 60; v7 += 1)\n
    {\n
        v5 -= 60;\n
    }\n
    v6 = v5;\n
    a0[0] = v11;\n
    a0[1] = v10;\n
    a0[2] = v9;\n
    a0[3] = v8;\n
    a0[4] = v7;\n
    a0[5] = v6;\n
    return a0;\n
}\n
", "4228008:sub_4083a8": null, "4228016:sub_4083b0": "extern unsigned int g_40b4d4;\n
\n
int sub_4083b0(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    char v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = 48;\n
    memcpy(&v3, &g_40b4d4);\n
    if (!(v8 >> 31 CONCAT v8) /m 4 >> 32 && !(v8 == 2100))\n
        goto LABEL_408414;\n
    v4 = 28;\n
LABEL_408414:\n
    v2 = 1970;\n
    while (v2 < v8)\n
    {\n
        if ((v2 >> 31 CONCAT v2) /m 4 >> 32)\n
        {\n
LABEL_408448:\n
            v5 += 31536000;\n
            goto LABEL_408463;\n
        }\n
        else\n
        {\n
            if (v2 == 2100)\n
                goto LABEL_408448;\n
            v5 += 0x1e28500;\n
LABEL_408463:\n
            v2 += 1;\n
        }\n
    }\n
    for (v1 = 1; v1 < a0; v1 += 1)\n
    {\n
        v5 = *(&(&v3)[4 + 4 * v1]) * 86400 + v5;\n
    }\n
    v5 = (a1 - 1) * 86400 + v5;\n
    v5 = a2 * 3600 + v5;\n
    v5 = a3 * 60 + v5;\n
    v5 = a4 + v5;\n
    return v5;\n
}\n
", "4228325:sub_4084e5": null, "4228336:sub_4084f0": "extern unsigned int g_40b504;\n
\n
int sub_4084f0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 100;\n
    v3 = 100;\n
    v2 = 100;\n
    sub_4025b0(\"Please enter the date as prompted\");\n
    for (; !v7; LABEL_40857b:\n
)\n
    {\n
        v7 = sub_405dd0(\"Enter year between 1970 and 2105\");\n
        if (v7 >= 1970 && v7 <= 2105)\n
            goto LABEL_40857b;\n
        sub_4025b0(\"Bad value for year\");\n
        v7 = 0;\n
    }\n
    for (; !v6; LABEL_4085c9:\n
)\n
    {\n
        v6 = sub_405dd0(\"Enter month\");\n
        if (v6 >= 1 && v6 <= 12)\n
            goto LABEL_4085c9;\n
        sub_4025b0(\"Bad value for month\");\n
        v6 = 0;\n
    }\n
    for (; !v5; LABEL_408657:\n
)\n
    {\n
        memcpy(&v0, &g_40b504);\n
        if (!(v7 >> 31 CONCAT v7) /m 4 >> 32 && !(v7 == 2100))\n
            goto LABEL_408622;\n
        v1 = 28;\n
LABEL_408622:\n
        v5 = sub_405dd0(\"Enter day\");\n
        if (v5 >= 1 && v5 <= *(&(&v0)[4 + 4 * v6]))\n
            goto LABEL_408657;\n
        v5 = 0;\n
    }\n
    for (; v4 == 100; v4 = 100)\n
    {\n
        v4 = sub_405dd0(\"Enter hour (00-23)\");\n
    }\n
    for (; v3 == 100; v3 = 100)\n
    {\n
        v3 = sub_405dd0(\"Enter Minute (00-59)\");\n
    }\n
    for (; v2 == 100; v2 = 100)\n
    {\n
        v2 = sub_405dd0(\"Enter second (00-59)\");\n
    }\n
    return sub_4083b0(v7, v6, v5, v4, v3, v2);\n
}\n
", "4228916:sub_408734": null, "4228928:sub_408740": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int sub_408740(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4025b0(\"Welcome to SPIFFS (Somewhat Poorly Implemented Fast File System)\");\n
    v2->field_18 = sub_4084f0();\n
    return sub_4065e0();\n
}\n
", "4228992:sub_408780": "int sub_408780()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4229040:sub_4087b0": "int sub_4087b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4088d0();\n
    sub_4088e0();\n
    sub_408900();\n
    v0 = 1;\n
    if (!sub_408ed0())\n
    {\n
        v0 = 7;\n
        sub_4095b0();\n
    }\n
    sub_409780();\n
    v1 = sub_4097b0;\n
    sub_408ba0();\n
    if (sub_4088a0())\n
    {\n
        v1 = 7;\n
        sub_4095b0();\n
    }\n
    sub_409340();\n
    if (sub_409440())\n
    {\n
        v1 = sub_4092e0;\n
        __setusermatherr();\n
    }\n
    sub_4093c0();\n
    sub_4093d0();\n
    sub_409390();\n
    v1 = sub_409330();\n
    _configthreadlocale();\n
    if (sub_409380())\n
        sub_4088c0();\n
    sub_409570();\n
    if (sub_409580())\n
    {\n
        v1 = 7;\n
        sub_4095b0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4229232:sub_408870": "int sub_408870()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4093e0();\n
    return 0;\n
}\n
", "4229248:sub_408880": "int sub_408880()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409590();\n
    v0 = sub_409320();\n
    return _set_new_mode();\n
}\n
", "4229280:sub_4088a0": "int sub_4088a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_4092f0());\n
}\n
", "4229312:sub_4088c0": "int sub_4088c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4229328:sub_4088d0": "int sub_4088d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4229344:sub_4088e0": "int sub_4088e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_409310());\n
}\n
", "4229376:sub_408900": "int sub_408900()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_409300(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4229408:sub_408920": "int sub_408920()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_405d10(v1, v2);\n
}\n
", "4229472:sub_408960": "extern char g_40beb0;\n
extern char g_40beb8;\n
extern char g_40bebc;\n
extern struct_0 *g_40bec8;\n
extern char g_40c580;\n
extern unsigned int g_40d040;\n
extern unsigned int g_40d0ac;\n
\n
int sub_408960()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40c580;\n
    v13 = sub_4097e0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40d040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_408e40(1, g_40d040 ^ &v16, v22, v23))\n
        sub_4095b0();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_408dc0();\n
    if (g_40d0ac == 1)\n
    {\n
        v16 = 7;\n
        sub_4095b0();\n
    }\n
    else if (g_40d0ac)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40d0ac = 1;\n
        v16 = &g_40bec8;\n
        v15 = &g_40bebc;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_408b69;\n
        }\n
        else\n
        {\n
            v16 = &g_40beb8;\n
            v15 = &g_40beb0;\n
            _initterm(*(&v17));\n
            g_40d0ac = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_408e10();\n
    v8 = sub_409470();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_408c90())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_409820(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_409480();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_408c90())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_408920();\n
    if (!sub_4094e0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_408e90(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_408b69:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4229887:sub_408aff": "int sub_408aff()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4229896:sub_408b08": "int sub_408b08()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4229923:sub_408b23": "extern char g_408b31;\n
\n
int sub_408b23()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_408b31;\n
    if (!sub_4094e0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4229986:sub_408b62": "int sub_408b62()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4230016:sub_408b80": "int sub_408b80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4091f0();\n
    return sub_408960();\n
}\n
", "4230032:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408b80();\n
}\n
", "4230048:sub_408ba0": "int sub_408ba0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_408bd0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4230096:sub_408bd0": "extern unsigned int g_40d0b8;\n
\n
int sub_408bd0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40d0b8;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40d0b8))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4230152:sub_408c08": "int sub_408c08()\n
{\n
}\n
", "4230208:sub_408c40": "extern unsigned int g_40d0c4;\n
\n
int sub_408c40(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40d0c4;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40d0c4);\n
    return v6;\n
}\n
", "4230242:sub_408c62": "int sub_408c62()\n
{\n
}\n
", "4230272:sub_408c80": "int sub_408c80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4230288:sub_408c90": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40c5a0;\n
extern unsigned int g_40d040;\n
\n
int sub_408c90(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40c5a0;\n
    v13 = sub_4097e0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40d040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_4090f0(v6, g_40d040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_409160(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4230493:sub_408d5d": "int sub_408d5d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4230502:sub_408d66": "int sub_408d66()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4230541:sub_408d8d": "int sub_408d8d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4230560:sub_408da0": "int sub_408da0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4230592:sub_408dc0": "extern unsigned int g_40d0b0;\n
\n
int sub_408dc0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40a000();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_408c80() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40d0b0 = v6;\n
        if (!g_40d0b0)\n
        {\n
            tmp_0 = 0;\n
            g_40d0b0 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40d0b0 = v6;\n
            v5 = g_40d0b0;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4230672:sub_408e10": "extern void* g_40d0b0;\n
\n
int sub_408e10(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a000();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40d0b0;\n
        g_40d0b0 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x408e2f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4230720:sub_408e40": "extern char g_40d0b4;\n
\n
int sub_408e40(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40d0b4 = 1;\n
    sub_409b70();\n
    v4 = sub_40a3a0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40a3a0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40a3b0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4230800:sub_408e90": "extern char g_40d0b4;\n
\n
int sub_408e90(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40d0b4 && a0)\n
        return 1;\n
    sub_40a3b0(v2);\n
    v3 = sub_40a3b0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4230864:sub_408ed0": "extern char g_40d0b5;\n
extern unsigned int g_40d0b8;\n
extern unsigned int g_40d0bc;\n
extern unsigned int g_40d0c0;\n
extern unsigned int g_40d0c4;\n
extern unsigned int g_40d0c8;\n
extern unsigned int g_40d0cc;\n
\n
int sub_408ed0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40d0b5)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_4095b0();\n
    }\n
    if (sub_40a000() && !v10)\n
    {\n
        v8 = &g_40d0b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40d0c4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_408f96;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40d0b8 = v4;\n
    g_40d0bc = v5;\n
    g_40d0c0 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40d0c4 = v1;\n
    g_40d0c8 = v2;\n
    v11 = v3;\n
    g_40d0cc = v11;\n
LABEL_408f96:\n
    g_40d0b5 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4231088:sub_408fb0": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_408fb0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40a000() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_409820(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4231168:sub_409000": "int sub_409000()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408ed0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4231200:sub_409020": "int sub_409020()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40a000())\n
    {\n
        v3 = sub_409b70();\n
    }\n
    else\n
    {\n
        v3 = sub_4088a0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_4088c0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4231248:sub_409050": "extern char g_40d0b8;\n
\n
int sub_409050()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40a000())\n
    {\n
        v0 = &g_40d0b8;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40a3f0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4231296:sub_409080": "int sub_409080()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40a3c0(0);\n
    return sub_40a3c0();\n
}\n
", "4231328:sub_4090a0": "int sub_4090a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40a3d0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40a3d0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40a3e0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4231376:sub_4090d0": "char sub_4090d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40a3e0();\n
    sub_40a3e0();\n
    return 1;\n
}\n
", "4231408:sub_4090f0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_4090f0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4231520:sub_409160": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_409160(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4231664:sub_4091f0": "extern unsigned int g_40d040;\n
extern unsigned int g_40d080;\n
\n
int sub_4091f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40d040 != 3141592654)\n
    {\n
        v4 = g_40d040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40d080 = ~(g_40d040);\n
            return g_40d040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_409270(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40d040 = v0;\n
    g_40d080 = ~(v0);\n
    return v4;\n
}\n
", "4231792:sub_409270": "int sub_409270()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4231904:sub_4092e0": "int sub_4092e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231920:sub_4092f0": "int sub_4092f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231936:sub_409300": "int sub_409300()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231952:sub_409310": "int sub_409310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4231968:sub_409320": "int sub_409320()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231984:sub_409330": "int sub_409330()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232000:sub_409340": "extern void g_40d0d0;\n
\n
int sub_409340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40d0d0);\n
}\n
", "4232032:sub_409360": "extern unsigned int g_40d0d0;\n
\n
int sub_409360()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40d0d0);\n
}\n
", "4232064:sub_409380": "char sub_409380()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232080:sub_409390": "int sub_409390()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_4095b0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232128:sub_4093c0": "int sub_4093c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232144:sub_4093d0": "int sub_4093d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232160:sub_4093e0": "int sub_4093e0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_409420();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_409430(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4232224:sub_409420": "extern char g_40d0d8;\n
\n
int sub_409420()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d0d8;\n
}\n
", "4232240:sub_409430": "extern char g_40d0e0;\n
\n
int sub_409430()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d0e0;\n
}\n
", "4232256:sub_409440": "extern unsigned int g_40d008;\n
\n
int sub_409440()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40d008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4232304:sub_409470": "extern char g_40d0ec;\n
\n
int sub_409470()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d0ec;\n
}\n
", "4232320:sub_409480": "extern char g_40d0f0;\n
\n
int sub_409480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40d0f0;\n
}\n
", "4232336:sub_409490": "extern void* g_40d0f4;\n
\n
int sub_409490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40d0f4 = 0;\n
    return v3;\n
}\n
", "4232352:sub_4094a0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4094a0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4232416:sub_4094e0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_4094e0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4232560:sub_409570": "int sub_409570()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232576:sub_409580": "int sub_409580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4096f0();\n
}\n
", "4232592:sub_409590": "int sub_409590()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_409700);\n
}\n
", "4232624:sub_4095b0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4095b0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_409490();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_409490();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4232649:sub_4095c9": "int sub_4095c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232649\n
}\n
", "4232944:sub_4096f0": "int sub_4096f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232960:sub_409700": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_409700(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4233088:sub_409780": "extern struct_0 *g_40c570;\n
\n
int sub_409780()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40c570;\n
    v3 = &g_40c570;\n
    return &g_40c570;\n
}\n
", "4233136:sub_4097b0": "extern struct_0 *g_40c578;\n
\n
int sub_4097b0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40c578;\n
    v3 = &g_40c578;\n
    return &g_40c578;\n
}\n
", "4233184:sub_4097e0": "extern unsigned int g_40d040;\n
\n
int sub_4097e0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40a400(*(v2));\n
    return _except_handler4_common(&g_40d040, sub_40a030, v2, a0, a1);\n
}\n
", "4233248:sub_409820": "int sub_409820()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4233264:sub_409830": "int sub_409830(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x409839;\n
    return tmp_4;\n
}\n
", "4233280:sub_409840": "int sub_409840(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4233312:sub_409860": "int sub_409860(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409840(v2);\n
}\n
", "4233344:sub_409880": "extern unsigned int g_40d0f8;\n
\n
int sub_409880(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_409830(&g_40d0f8, v3);\n
    return v0;\n
}\n
", "4233376:sub_4098a0": "extern char g_409820;\n
extern unsigned int g_40e000;\n
\n
int sub_4098a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_409860(&g_40e000) != sub_409820)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4233424:sub_4098d0": "extern char g_40be00;\n
\n
int sub_4098d0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40be00;\n
    v1 = &g_40be00;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4233488:sub_409910": "extern unsigned int g_40e008;\n
\n
int sub_409910(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_409860(&g_40e008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4233536:sub_409940": "extern unsigned int g_40d0f8;\n
\n
int sub_409940(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_409860(&g_40d0f8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_409820();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4233600:sub_409980": "int sub_409980()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4233616:sub_409990": "int sub_409990(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4098d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4233635\n
}\n
", "4233648:sub_4099b0": "int sub_4099b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4098d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4233673:sub_4099c9": "int sub_4099c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4233673\n
}\n
", "4233680:sub_4099d0": "int sub_4099d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4098d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409910(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4233728:sub_409a00": "int sub_409a00(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4098d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409940(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4233776:sub_409a30": "extern char g_40be00;\n
\n
int sub_409a30(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40be00;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4233840:sub_409a70": "int sub_409a70(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409a30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4098d0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4233883\n
}\n
", "4233888:sub_409aa0": "int sub_409aa0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409a30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4098d0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4233937:sub_409ad1": "int sub_409ad1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4233937\n
}\n
", "4233952:sub_409ae0": "int sub_409ae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4233968:sub_409af0": "int sub_409af0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409a30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4098d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409910(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234032:sub_409b30": "int sub_409b30(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409a30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4098d0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409940(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234096:sub_409b70": "extern unsigned int g_40d040;\n
extern unsigned int g_40d088;\n
extern unsigned int g_40d08c;\n
extern unsigned int g_40d090;\n
extern unsigned int g_40d0fc;\n
extern unsigned int g_40d100;\n
extern unsigned int g_40d104;\n
\n
int sub_409b70()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40d040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40d100 = 0;\n
    g_40d090 = g_40d090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40a030();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_409cbb;\n
        g_40d104 = g_40d104 | 1;\n
    }\n
LABEL_409cbb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40d104 = g_40d104 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40d100 = 1;\n
    g_40d090 = g_40d090 | 2;\n
    g_40d088 = g_40d088 & -2;\n
    g_40d08c = g_40d08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40d100 = 2;\n
        g_40d090 = g_40d090 | 4;\n
        g_40d088 = g_40d088 & -17;\n
        g_40d08c = g_40d08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40d100 = 3;\n
                g_40d090 = g_40d090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40d100 = 5;\n
                    g_40d090 = g_40d090 | 32;\n
                    g_40d088 = g_40d088 & -3;\n
                    g_40d08c = g_40d08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40d100 = 6;\n
                            g_40d090 = g_40d090 | 64;\n
                            g_40d088 = g_40d088 & -37;\n
                            g_40d08c = g_40d08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40d088 = g_40d088 & -16777217;\n
                    g_40d08c = g_40d08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40d0fc = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40d088 = ~(v2 | 16777256) & g_40d088;\n
                        g_40d08c = ~(v3) & g_40d08c;\n
                        if (g_40d0fc > 1)\n
                        {\n
                            g_40d088 = g_40d088 & -65;\n
                            g_40d08c = g_40d08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4235264:sub_40a000": "extern unsigned int g_40d094;\n
\n
int sub_40a000()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40d094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4235312:sub_40a030": "extern unsigned int g_40d040;\n
extern unsigned int g_40d080;\n
extern unsigned int g_40d110;\n
extern unsigned int g_40d114;\n
extern unsigned int g_40d11c;\n
extern unsigned int g_40d120;\n
extern unsigned int g_40d124;\n
extern unsigned int g_40d160;\n
extern unsigned short g_40d1ec;\n
extern unsigned short g_40d1f0;\n
extern unsigned short g_40d1f4;\n
extern unsigned short g_40d1f8;\n
extern unsigned int g_40d1fc;\n
extern unsigned int g_40d200;\n
extern unsigned int g_40d204;\n
extern unsigned int g_40d208;\n
extern unsigned int g_40d20c;\n
extern unsigned int g_40d210;\n
extern unsigned int g_40d214;\n
extern unsigned int g_40d218;\n
extern unsigned short g_40d21c;\n
extern unsigned int g_40d220;\n
extern unsigned int g_40d224;\n
extern unsigned short g_40d228;\n
\n
int sub_40a030()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40d040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40d210 = v7;\n
        g_40d20c = v6;\n
        g_40d208 = v8;\n
        g_40d204 = v9;\n
        g_40d200 = v10;\n
        g_40d1fc = v11;\n
        g_40d228 = v12;\n
        g_40d21c = v13;\n
        g_40d1f8 = v14;\n
        g_40d1f4 = v15;\n
        g_40d1f0 = v16;\n
        g_40d1ec = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40d220 = v0;\n
        g_40d214 = v3;\n
        g_40d218 = *(&v4);\n
        g_40d224 = &v5;\n
        g_40d160 = 65537;\n
        g_40d11c = g_40d218;\n
        g_40d110 = 3221226505;\n
        g_40d114 = 1;\n
        g_40d120 = 1;\n
        g_40d124 = 2;\n
        v1 = g_40d040;\n
        v2 = g_40d080;\n
        sub_40a370();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4235328:sub_40a040": "extern unsigned int g_40d110;\n
extern unsigned int g_40d114;\n
extern unsigned int g_40d11c;\n
extern unsigned int g_40d120;\n
extern unsigned int g_40d124;\n
extern unsigned short g_40d1ec;\n
extern unsigned short g_40d1f0;\n
extern unsigned short g_40d1f4;\n
extern unsigned short g_40d1f8;\n
extern unsigned int g_40d1fc;\n
extern unsigned int g_40d200;\n
extern unsigned int g_40d204;\n
extern unsigned int g_40d208;\n
extern unsigned int g_40d20c;\n
extern unsigned int g_40d210;\n
extern unsigned int g_40d214;\n
extern unsigned int g_40d218;\n
extern unsigned short g_40d21c;\n
extern unsigned int g_40d220;\n
extern unsigned int g_40d224;\n
extern unsigned short g_40d228;\n
\n
int sub_40a040()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40d210 = v4;\n
        g_40d20c = v5;\n
        g_40d208 = v6;\n
        g_40d204 = v7;\n
        g_40d200 = v8;\n
        g_40d1fc = v9;\n
        g_40d228 = v10;\n
        g_40d21c = v11;\n
        g_40d1f8 = v12;\n
        g_40d1f4 = v13;\n
        g_40d1f0 = v14;\n
        g_40d1ec = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40d220 = v0;\n
        g_40d214 = v1;\n
        g_40d218 = *(&v2);\n
        g_40d224 = &v3;\n
        g_40d11c = g_40d218;\n
        g_40d110 = 3221226505;\n
        g_40d114 = 1;\n
        g_40d120 = 1;\n
        g_40d124 = v3;\n
        sub_40a370();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4235353:sub_40a059": "int sub_40a059()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4235353\n
}\n
", "4235552:sub_40a120": "extern unsigned int g_40d110;\n
extern unsigned int g_40d114;\n
extern unsigned int g_40d11c;\n
extern unsigned int g_40d120;\n
extern unsigned int g_40d124;\n
extern char g_40d128;\n
extern unsigned short g_40d1ec;\n
extern unsigned short g_40d1f0;\n
extern unsigned short g_40d1f4;\n
extern unsigned short g_40d1f8;\n
extern unsigned int g_40d1fc;\n
extern unsigned int g_40d200;\n
extern unsigned int g_40d204;\n
extern unsigned int g_40d208;\n
extern unsigned int g_40d20c;\n
extern unsigned int g_40d210;\n
extern unsigned int g_40d214;\n
extern unsigned int g_40d218;\n
extern unsigned short g_40d21c;\n
extern unsigned int g_40d220;\n
extern unsigned int g_40d224;\n
extern unsigned short g_40d228;\n
\n
int sub_40a120()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1061963];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40d210 = v7;\n
        g_40d20c = v8;\n
        g_40d208 = v9;\n
        g_40d204 = v10;\n
        g_40d200 = v11;\n
        g_40d1fc = v12;\n
        g_40d228 = v13;\n
        g_40d21c = v14;\n
        g_40d1f8 = v15;\n
        g_40d1f4 = v16;\n
        g_40d1f0 = v17;\n
        g_40d1ec = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40d220 = v0;\n
        g_40d214 = v2;\n
        g_40d218 = *(&v3);\n
        g_40d224 = &v4;\n
        g_40d11c = g_40d218;\n
        g_40d110 = 3221226505;\n
        g_40d114 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40d120 = v5 + 1;\n
        g_40d124 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_40d128)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40a370();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4235577:sub_40a139": "int sub_40a139()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4235577\n
}\n
", "4235856:sub_40a250": "int sub_40a250()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a040(8);\n
}\n
", "4235899:sub_40a27b": "int sub_40a27b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4235899\n
}\n
", "4236144:sub_40a370": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40a370(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4236192:sub_40a3a0": "char sub_40a3a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236208:sub_40a3b0": "char sub_40a3b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236224:sub_40a3c0": "char sub_40a3c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236240:sub_40a3d0": "char sub_40a3d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236256:sub_40a3e0": "char sub_40a3e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236272:sub_40a3f0": "int sub_40a3f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4236288:sub_40a400": "extern unsigned int g_40d100;\n
\n
int sub_40a400(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40d100 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4236596:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4236602:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4236608:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4236614:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4236620:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4236626:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4236632:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4236638:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4236644:sub_40a564": "int sub_40a564(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4236650:sub_40a56a": "int sub_40a56a()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4236656:sub_40a570": "int sub_40a570()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4236662:sub_40a576": "int sub_40a576(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4236668:sub_40a57c": "int sub_40a57c(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4236674:sub_40a582": "int sub_40a582()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4236680:sub_40a588": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40a588(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4236686:sub_40a58e": "int sub_40a58e(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4236692:sub_40a594": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40a594(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4236698:sub_40a59a": "int sub_40a59a(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4236704:sub_40a5a0": "int sub_40a5a0(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4236710:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4236716:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4236722:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4236728:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4236734:memcpy": "int memcpy()\n
{\n
    return ::kernel32.dll::memcpy();\n
}\n
", "4236740:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4236746:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4236752:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4236758:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4236764:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4236770:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4236776:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4236782:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4236788:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4236794:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4236800:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4236806:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4236812:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4236818:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4236824:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4236830:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4236836:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4236842:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4236848:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4236854:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4236860:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4236866:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4236872:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4236878:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4236884:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4236890:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4236896:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4236902:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4236908:sub_40a66c": "int sub_40a66c()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4236914:sub_40a672": "int sub_40a672(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_transmit": null, "5242912:GetCurrentProcess": null, "5242916:GetCurrentProcessId": null, "5242920:GetCurrentThreadId": null, "5242924:GetModuleHandleW": null, "5242928:GetStartupInfoW": null, "5242932:GetSystemTimeAsFileTime": null, "5242936:InitializeSListHead": null, "5242940:IsDebuggerPresent": null, "5242944:IsProcessorFeaturePresent": null, "5242948:QueryPerformanceCounter": null, "5242952:SetUnhandledExceptionFilter": null, "5242956:TerminateProcess": null, "5242960:UnhandledExceptionFilter": null, "5242964:__current_exception": null, "5242968:__current_exception_context": null, "5242972:__std_type_info_destroy_list": null, "5242976:_except_handler4_common": null, "5242980:memcpy": null, "5242984:memset": null, "5242988:__p___argc": null, "5242992:__p___argv": null, "5242996:__p__commode": null, "5243000:__setusermatherr": null, "5243004:_c_exit": null, "5243008:_cexit": null, "5243012:_configthreadlocale": null, "5243016:_configure_narrow_argv": null, "5243020:_controlfp_s": null, "5243024:_crt_at_quick_exit": null, "5243028:_crt_atexit": null, "5243032:_execute_onexit_table": null, "5243036:_exit": null, "5243040:_get_initial_narrow_environment": null, "5243044:_initialize_narrow_environment": null, "5243048:_initialize_onexit_table": null, "5243052:_initterm": null, "5243056:_initterm_e": null, "5243060:_register_onexit_function": null, "5243064:_register_thread_local_exe_atexit_callback": null, "5243068:_seh_filter_dll": null, "5243072:_seh_filter_exe": null, "5243076:_set_app_type": null, "5243080:_set_fmode": null, "5243084:_set_new_mode": null, "5243088:exit": null, "5243092:terminate": null, "6295596:UnresolvableCallTarget": null}