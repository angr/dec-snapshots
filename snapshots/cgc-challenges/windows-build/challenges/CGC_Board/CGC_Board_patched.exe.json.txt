{"4198400:sub_401000": "int sub_401000(unsigned int v1, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
        return 0;\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    tmp_2 = v3;\n
    v4 = v3 * v2;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v0 = v4;\n
    v6 = sub_401210();\n
    if (v6)\n
    {\n
        v0 = v4;\n
        return sub_401ad0(v6, 0);\n
    }\n
    return 0;\n
}\n
", "4198464:sub_401040": "int sub_401040(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = v1;\n
    if (!sub_401060())\n
        goto LABEL_0x401080;\n
    return 1;\n
}\n
", "4198490:sub_40105a": null, "4198496:sub_401060": "int sub_401060(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = v1;\n
    if (!sub_401090())\n
        goto LABEL_0x4010a0;\n
    return 1;\n
}\n
", "4198522:sub_40107a": null, "4198528:sub_401080": "int sub_401080(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4198544:sub_401090": "int sub_401090(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4198590:sub_4010be": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4198614:sub_4010d6": null, "4198624:sub_4010e0": "int sub_4010e0(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4198646:sub_4010f6": null, "4198656:sub_401100": "int sub_401100(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (v0 != 32)\n
    {\n
        v1 = v0;\n
        return v1 != 127 & !(v1 < 32);\n
    }\n
    return 0;\n
}\n
", "4198670:sub_40110e": null, "4198694:sub_401126": null, "4198704:sub_401130": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401130(struct_0 *v0)\n
{\n
    return *((v0 + &g_40b000));\n
}\n
", "4198716:sub_40113c": null, "4198720:sub_401140": "int sub_401140(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4198745:sub_401159": null, "4198752:sub_401160": "typedef struct struct_0 {\n
    char padding_0[4239488];\n
    char field_40b080;\n
} struct_0;\n
\n
extern char g_40b080;\n
\n
int sub_401160(struct_0 *v0)\n
{\n
    return *((v0 + &g_40b080));\n
}\n
", "4198764:sub_40116c": null, "4198768:sub_401170": "int sub_401170(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4198776:sub_401178": null, "4198784:sub_401180": "int sub_401180(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v4 = v3 | 32;\n
    if (!sub_4010a0(v3))\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4198812:sub_40119c": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v4 = v3 & 95;\n
    if (!sub_401090(v3))\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4198848:sub_4011c0": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int sub_4011c0(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // esi\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v3;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v4 = v2 + 6;\n
        if (*(v4) >= 0x40000)\n
        {\n
            v0 = *(v4);\n
            return cgc_deallocate(v4);\n
        }\n
        sub_4015a0();\n
        return sub_401650();\n
    }\n
}\n
", "4198904:sub_4011f8": null, "4198928:sub_401210": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    uint128_t field_4;\n
    unsigned int field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern struct_1 *g_40d194;\n
\n
int sub_401210(unsigned int v3)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_2 *v1;  // [bp-0x8]\n
    struct_2 *v2;  // [bp-0x4]\n
    struct_2 *v4;  // esi\n
    unsigned int v5;  // edi\n
    struct_2 *v6;  // eax\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    struct_1 *v9;  // edi\n
    struct_2 *v11;  // ecx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // eax\n
    struct_0 *v17;  // ecx\n
\n
    v1 = v4;\n
    v5 = v3;\n
    if (!v5)\n
        return 0;\n
    v6 = v5 - 262120;\n
    if (v6 <= -262145)\n
    {\n
        v2 = v1;\n
        v1 = v6;\n
        v8 = v5 + 24;\n
        if (!cgc_allocate(v8, 0, &v1, v6))\n
        {\n
            v11 = v1;\n
            v11->field_0 = v8;\n
            *(&(&v11->field_0)[1]) = 0;\n
            *((&v11->field_4 + 4)) = 0;\n
            return &v11->field_4 + 8;\n
        }\n
        return 0;\n
    }\n
    else\n
    {\n
        v7 = v5 + 7 & -8;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v0 = 0;\n
        sub_401310();\n
        v14 = v0;\n
        if (!v14)\n
        {\n
            if (!sub_401350())\n
                v14 = g_40d194;\n
            else\n
                return 0;\n
        }\n
        sub_4015f0();\n
        v15 = *(v14) - v9;\n
        if (v15 >= 49)\n
        {\n
            v16 = v9 + v14;\n
            *((&v9->field_0 + v14)) = v15;\n
            *(&v9->padding_4[v14]) = 1;\n
            *(&v9->padding_4[4 + v14]) = 0;\n
            *(&v9->padding_4[8 + v14]) = 0;\n
            *(v14) = v9;\n
            *((20 + &v9->field_0 + v14)) = v14;\n
            *((16 + &v9->field_0 + v14)) = *((v14 + 16));\n
            v17 = *((v14 + 16));\n
            if (v17)\n
                v17->field_14 = v16;\n
            *((v14 + 16)) = v16;\n
            sub_4015a0();\n
        }\n
        v13 = v14 + 24;\n
        return v13;\n
    }\n
}\n
", "4199119:sub_4012cf": null, "4199176:sub_401308": null, "4199184:sub_401310": "typedef struct struct_1 {\n
    char padding_0[4247832];\n
    struct struct_0 *field_40d118;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char g_40d118;\n
\n
int sub_401310()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // ecx\n
    struct_0 *v4;  // ecx, Other Possible Types: unsigned int\n
    unsigned int *v5;  // edx\n
    struct_1 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v6 = sub_4013a0(v2, *(&v0));\n
    if (v6 <= 31)\n
    {\n
        do\n
        {\n
            v4 = *(&(&g_40d118)[4 * v6]);\n
            while (true)\n
            {\n
                *(v5) = v4;\n
                if (!v4)\n
                    break;\n
                if (*(v4) >= v2)\n
                    return v6;\n
                v4 = *((v4 + 8));\n
            }\n
            v6 = &v6->padding_0[1];\n
        } while (v6 != 32);\n
    }\n
    *(v5) = 0;\n
    return v6;\n
}\n
", "4199213:sub_40132d": null, "4199247:sub_40134f": null, "4199248:sub_401350": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    uint128_t field_8;\n
} struct_0;\n
\n
int sub_401350()\n
{\n
    char v0;  // [bp-0x4]\n
    struct_0 *v2;  // eax\n
\n
    if (cgc_allocate(0x40000, 0, &v0))\n
    {\n
        return 1;\n
    }\n
    else if (!v2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v2->field_0 = 0x40000;\n
        v2->field_4 = 1;\n
        *(&(&v2->field_4)[1]) = 0;\n
        sub_4015a0();\n
        return 0;\n
    }\n
}\n
", "4199328:sub_4013a0": "extern unsigned int g_40d000;\n
extern unsigned int g_40d004;\n
extern unsigned int g_40d008;\n
extern unsigned int g_40d00c;\n
extern unsigned int g_40d010;\n
extern unsigned int g_40d014;\n
extern unsigned int g_40d018;\n
extern unsigned int g_40d01c;\n
extern unsigned int g_40d020;\n
extern unsigned int g_40d024;\n
extern unsigned int g_40d028;\n
extern unsigned int g_40d02c;\n
extern unsigned int g_40d030;\n
extern unsigned int g_40d034;\n
extern unsigned int g_40d038;\n
extern unsigned int g_40d03c;\n
extern unsigned int g_40d040;\n
extern unsigned int g_40d044;\n
extern unsigned int g_40d048;\n
extern unsigned int g_40d04c;\n
extern unsigned int g_40d050;\n
extern unsigned int g_40d054;\n
extern unsigned int g_40d058;\n
extern unsigned int g_40d05c;\n
extern unsigned int g_40d060;\n
extern unsigned int g_40d064;\n
extern unsigned int g_40d068;\n
extern unsigned int g_40d06c;\n
extern unsigned int g_40d070;\n
extern unsigned int g_40d074;\n
extern unsigned int g_40d078;\n
extern unsigned int g_40d07c;\n
\n
int sub_4013a0(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (g_40d000 >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_40d004 < v1)\n
    {\n
        v2 = 2;\n
        if (g_40d008 < v1)\n
        {\n
            v2 = 3;\n
            if (g_40d00c < v1)\n
            {\n
                v2 = 4;\n
                if (g_40d010 < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_40d014 < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_40d018 < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_40d01c < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_40d020 < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_40d024 < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_40d028 < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_40d02c < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_40d030 < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_40d034 < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_40d038 < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_40d03c < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_40d040 < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_40d044 < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_40d048 < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_40d04c < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_40d050 < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_40d054 < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_40d058 < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_40d05c < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_40d060 < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_40d064 < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_40d068 < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_40d06c < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_40d070 < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_40d074 < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_40d078 < v1)\n
                                                                                                                            v2 = 31 + (g_40d07c < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4199832:sub_401598": null, "4199840:sub_4015a0": "typedef struct struct_1 {\n
    char padding_0[4247832];\n
    struct struct_0 *field_40d118;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_40d118;\n
\n
int sub_4015a0(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    struct_1 *v2;  // eax\n
    struct_0 *v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = sub_4013a0(v1[0]);\n
    v1[1] = 1;\n
    v3 = *((0x4 * v2 + &g_40d118));\n
    if (v3)\n
    {\n
        v1[2] = v3;\n
        *((*((0x4 * v2 + &g_40d118)) + 12)) = v1;\n
        *((0x4 * v2 + &g_40d118)) = v1;\n
        v1[3] = 0;\n
        return v2;\n
    }\n
    *((0x4 * v2 + &g_40d118)) = v1;\n
    return v2;\n
}\n
", "4199911:sub_4015e7": null, "4199920:sub_4015f0": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4247832];\n
    unsigned int field_40d118;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern unsigned int g_40d118[4];\n
\n
int sub_4015f0(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    struct_3 *v2;  // eax\n
    struct_1 *v3;  // ecx\n
    struct_0 *v4;  // ecx\n
\n
    v1 = v0;\n
    v2 = sub_4013a0(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v1->field_c;\n
    if (*((0x4 * v2 + &g_40d118[0])) == v1)\n
        *((0x4 * v2 + &g_40d118[0])) = v1->field_8;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4200003:sub_401643": null, "4200016:sub_401650": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_401650(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // ecx\n
    unsigned int v4[2];  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_14;\n
    if (!v2)\n
        return v1->field_14;\n
    v3 = v1->field_10;\n
    if (v2[1])\n
    {\n
        if (v3 && v3[1])\n
        {\n
            sub_4015f0(v2);\n
            sub_4015f0(v1->field_10);\n
            sub_4015f0(v1);\n
            v1->field_14->field_0 = v1->field_14->field_0 + v1->field_0;\n
            v1->field_14->field_0 = v1->field_14->field_0 + v1->field_10->field_0;\n
            sub_4015a0(v1->field_14);\n
            sub_401730();\n
            return sub_401730();\n
        }\n
        v4 = v1->field_10;\n
        if (!v4)\n
            return v1->field_14;\n
        if (v4[1])\n
            return v1->field_14;\n
        sub_4015f0(v2);\n
        sub_4015f0(v1);\n
        v1->field_14->field_0 = v1->field_14->field_0 + v1->field_0;\n
        sub_4015a0(v1->field_14);\n
        return sub_401730();\n
    }\n
    else if (!v3)\n
    {\n
        return v1->field_14;\n
    }\n
    else if (!v3[1])\n
    {\n
        return v1->field_14;\n
    }\n
    else\n
    {\n
        sub_4015f0(v3);\n
        sub_4015f0(v1);\n
        v1->field_0 = v1->field_0 + v1->field_10->field_0;\n
        sub_4015a0(v1);\n
        return sub_401730();\n
    }\n
}\n
", "4200234:sub_40172a": null, "4200240:sub_401730": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_401730()\n
{\n
    struct_2 *v1;  // ecx\n
    struct_1 *v2;  // eax\n
    struct_0 *v3;  // eax\n
\n
    v2 = v1->field_14;\n
    if (v2)\n
        v2->field_10 = v1->field_10;\n
    v3 = v1->field_10;\n
    if (v3)\n
        v3->field_14 = v1->field_14;\n
    return v1->field_10;\n
}\n
", "4200272:sub_401750": "int sub_401750(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4200336:sub_401790": "int sub_401790(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebx\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v3 != v4)\n
                return v3 - v4;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4200400:sub_4017d0": "int sub_4017d0(char *v2, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ebx\n
    char *v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
    int v7;  // xmm1\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // edi\n
    char *v12;  // ebx, Other Possible Types: unsigned int\n
\n
    v0 = &v1;\n
    v3 = a1;\n
    v4 = v2;\n
    if (!v3)\n
        return v2;\n
    v5 = a0;\n
    v8 = 0;\n
    if (v3 >= 8 && &v4[-1 * v5] >= 32)\n
    {\n
        v8 = 0;\n
        if (v3 >= 32)\n
        {\n
            v8 = v3 & -32;\n
            v6 = 0;\n
            do\n
            {\n
                v7 = *((v5 + v6 + 16));\n
                *(&v4[v6]) = *((v5 + v6));\n
                *(&v4[16 + v6]) = v7;\n
                v6 += 32;\n
            } while (v8 != v6);\n
            if (v8 == v3)\n
                return v2;\n
            if (!(v3 & 24))\n
                goto LABEL_401855;\n
        }\n
        v9 = v8;\n
        v8 = v3 & -8;\n
        do\n
        {\n
            *(&v4[v9]) = *((v5 + v9));\n
            v9 += 8;\n
        } while (v8 != v9);\n
        if (v8 == v3)\n
            return v2;\n
    }\n
LABEL_401855:\n
    v10 = &v3[~(v8)];\n
    v12 = v3 & 3;\n
    if (v12)\n
    {\n
        do\n
        {\n
            v4[v8] = *((v5 + v8));\n
            v8 += 1;\n
            v12 -= 1;\n
        } while (v12);\n
    }\n
    if (v10 < 3)\n
        return v2;\n
    do\n
    {\n
        v4[v8] = *((v5 + v8));\n
        v4[1 + v8] = *((v5 + v8 + 1));\n
        v4[2 + v8] = *((v5 + v8 + 2));\n
        v4[3 + v8] = *((v5 + v8 + 3));\n
        v8 += 4;\n
    } while (v3 != v8);\n
}\n
", "4200624:sub_4018b0": "int sub_4018b0(char *v4, char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // ecx, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    int v8;  // xmm1\n
    unsigned int v9;  // edi\n
    char *v10;  // esi, Other Possible Types: unsigned int\n
    uint128_t *v11;  // ebp\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    char *v15;  // edi, Other Possible Types: unsigned int\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // edi\n
    char *v18;  // ebx, Other Possible Types: unsigned int\n
    char *v19;  // esi\n
    char *v20;  // ebx, Other Possible Types: unsigned int\n
    char *v21;  // edx, Other Possible Types: unsigned int\n
    char *v22;  // esi, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v4;\n
    if (v7 < a0)\n
    {\n
        if (!v5)\n
            return v4;\n
        v13 = 0;\n
        if (v5 >= 8 && v7 - a0 >= 32)\n
        {\n
            v13 = 0;\n
            if (v5 >= 32)\n
            {\n
                v13 = v5 & -32;\n
                v9 = 0;\n
                do\n
                {\n
                    v8 = *(&v6[16 + v9]);\n
                    *((v7 + v9)) = *(&v6[v9]);\n
                    *((v7 + v9 + 16)) = v8;\n
                    v9 += 32;\n
                } while (v13 != v9);\n
                if (v13 == v5)\n
                    return v4;\n
                if (!(v5 & 24))\n
                    goto LABEL_40193a;\n
            }\n
            v14 = v13;\n
            v13 = v5 & -8;\n
            do\n
            {\n
                *((v7 + v14)) = *(&v6[v14]);\n
                v14 += 8;\n
            } while (v13 != v14);\n
            if (v13 == v5)\n
                return v4;\n
        }\n
LABEL_40193a:\n
        v17 = &v5[~(v13)];\n
        v18 = v5 & 3;\n
        if ((v5 & 3))\n
        {\n
            do\n
            {\n
                *((v7 + v13)) = v6[v13];\n
                v13 += 1;\n
                v18 -= 1;\n
            } while (v18);\n
        }\n
        if (v17 < 3)\n
            return v4;\n
        do\n
        {\n
            *((v7 + v13)) = v6[v13];\n
            *((v7 + v13 + 1)) = v6[1 + v13];\n
            *((v7 + v13 + 2)) = v6[2 + v13];\n
            *((v7 + v13 + 3)) = v6[3 + v13];\n
            v13 += 4;\n
        } while (v5 != v13);\n
    }\n
    if ([D] x86g_calculate_condition(0x6<32>, 0x6<32>, eax<4>, ebp<4>, 0x0<32>))\n
        return v4;\n
    if (!v5)\n
        return v4;\n
    if (v5 < 4)\n
    {\n
LABEL_4019b3:\n
        v15 = v5;\n
        goto LABEL_4019b5;\n
    }\n
    else\n
    {\n
        if (v5 + v6 - v7 - v5 < 16)\n
            goto LABEL_4019b3;\n
        v10 = 0;\n
        if (v5 >= 16)\n
        {\n
            v10 = v5 & -0x10;\n
            v11 = v6 + v5 - 16;\n
            v12 = 0;\n
            do\n
            {\n
                *(&v5[16 + v12 + v7]) = *((v11 + v12));\n
                v12 -= 16;\n
            } while (!(v10) != v12);\n
            v6 = a0;\n
            if (v10 == v5)\n
                return v4;\n
            if (!(v5 & 12))\n
            {\n
                v5 &= 15;\n
                goto LABEL_4019b3;\n
            }\n
        }\n
        v15 = v5 & 3;\n
        v1 = &v5[v7 + 4];\n
        v16 = -(v10);\n
        v0 = v5 & -0x4;\n
        do\n
        {\n
            *(&v1[v16]) = *(&v5[4 + v16 + v6]);\n
            v16 -= 4;\n
        } while (!(v0) != v16);\n
        v6 = a0;\n
        if (v0 == a1)\n
            return v4;\n
LABEL_4019b5:\n
        v19 = v15 - 1;\n
        v20 = v15 & 3;\n
        if (!(v15 & 3))\n
        {\n
            v21 = v15;\n
            if (v19 < 3)\n
                return v4;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                v21 = v15 - 1;\n
                *((v7 + v15 - 1)) = *((v6 + v15 - 1));\n
                v15 = v21;\n
                v20 -= 1;\n
            } while (v20);\n
            if (v19 < 3)\n
                return v4;\n
        }\n
        v22 = v21;\n
        do\n
        {\n
            *((v7 + v21 - 1)) = *((v6 + v21 - 1));\n
            *((v7 + v21 - 2)) = *((v6 + v21 - 2));\n
            *((v7 + v21 - 3)) = *((v6 + v21 - 3));\n
            *((v7 + v21 - 4)) = *((v6 + v21 - 4));\n
            v22 -= 4;\n
            v21 = v22;\n
        } while (v22 != 4);\n
        return v4;\n
    }\n
}\n
", "4201168:sub_401ad0": "int sub_401ad0(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8], Other Possible Types: char\n
    unsigned int v2;  // esi\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v1;\n
    }\n
    else if (!*(&v0))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = a1;\n
        memset(v2, a0);\n
        return v1;\n
    }\n
}\n
", "4201216:sub_401b00": "int sub_401b00(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_6;  // tmp #6\n
    char v0;  // [bp-0x1d]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v3 = &v4;\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v2 = v9;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        tmp_6 = (0 CONCAT v9) /m v8;\n
        v2 = tmp_6 >> 32;\n
        v14 = v5;\n
        v1 = sub_401b00(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v1)\n
    {\n
        v13 = v7 - 1;\n
        if (v13)\n
        {\n
            do\n
            {\n
                if ((v12 & 1))\n
                    v0 = 48;\n
                else\n
                    v0 = 32;\n
                cgc_transmit(v14, &v0, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                v13 -= 1;\n
            } while (v13);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v2;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v2;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v0 = v16;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4201324:sub_401b6c": null, "4201433:sub_401bd9": null, "4201440:sub_401be0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401be0(unsigned int v9, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char v4;  // [bp-0x1d]\n
    struct struct_1 **v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char v10;  // [bp+0xc]\n
    char *v11;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v12;  // ebp\n
    struct_0 *v13;  // ebx, Other Possible Types: unsigned int\n
    char v14;  // cl\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // edi\n
    void* v17;  // esi, Other Possible Types: unsigned int\n
    char *v18;  // ecx, Other Possible Types: unsigned int\n
    char *v19;  // eax, Other Possible Types: unsigned int\n
    unsigned int v20;  // edx\n
    struct struct_1 **v21;  // eax\n
    struct struct_1 **v22;  // eax\n
    unsigned int v23;  // edi\n
    struct struct_1 **v24;  // eax\n
    struct struct_1 **v25;  // eax, Other Possible Types: unsigned int\n
    char *v26;  // edi, Other Possible Types: unsigned int\n
\n
    v7 = &v8;\n
    v11 = a0;\n
    v5 = &v10;\n
    if (!*(v11))\n
        return 0;\n
    v12 = v9;\n
    v13 = &v4;\n
    do\n
    {\n
        v19 = v11 + 1;\n
        a0 = v19;\n
        v14 = *(v11);\n
        if (v4 == 37)\n
        {\n
            v6 = 0;\n
            v17 = 0;\n
            v18 = v19;\n
            while (true)\n
            {\n
                v19 = v18 + 1;\n
                a0 = v19;\n
                v15 = *(v18);\n
                v16 = v15;\n
                if (v16 - 49 >= 9)\n
                    break;\n
                v17 = sub_402450(v18, &a0);\n
                v18 = a0;\n
            }\n
            switch (v16)\n
            {\n
            case 88:\n
                v20 = v6 | 2;\n
                goto LABEL_401d74;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
                v4 = v15;\n
                break;\n
            case 99:\n
                v21 = v5;\n
                v5 = v21 + 1;\n
                v4 = *(v21);\n
                break;\n
            case 100:\n
                v22 = v5;\n
                v5 = v22 + 1;\n
                v23 = *(v22);\n
                if (v23 >= 0)\n
                {\n
                    v12 = v9;\n
                }\n
                else\n
                {\n
                    v4 = 45;\n
                    v12 = v9;\n
                    cgc_transmit(v9, &v4, 1);\n
                    v23 = -(v23);\n
                }\n
                v3 = v6;\n
                v2 = v17;\n
                v1 = 10;\n
                v0 = v23;\n
                goto LABEL_401dd5;\n
            case 115:\n
                v24 = v5;\n
                v5 = v24 + 1;\n
                v12 = v9;\n
                v13 = &v4;\n
                if (sub_4022b0())\n
                {\n
                    v26 = 0;\n
                    do\n
                    {\n
                        v4 = (*(v24))[v26].field_0;\n
                        cgc_transmit(v12, &v4, 1);\n
                        v26 += 1;\n
                    } while (v26 < sub_4022b0());\n
                }\n
                goto LABEL_401c22;\n
            case 117:\n
                v25 = v5;\n
                v5 = v25 + 1;\n
                v3 = v6;\n
                v2 = v17;\n
                v1 = 10;\n
                goto LABEL_401d83;\n
            case 120:\n
                v20 = v6;\n
LABEL_401d74:\n
                v25 = v5;\n
                v5 = v25 + 4;\n
                v3 = v20;\n
                v2 = v17;\n
                v1 = 16;\n
LABEL_401d83:\n
                v0 = *(v25);\n
                v12 = v9;\n
LABEL_401dd5:\n
                sub_401b00(v12, v0, v1, v2, v3);\n
                v13 = &v4;\n
                goto LABEL_401c22;\n
            default:\n
                if (v16 == 37)\n
                    goto LABEL_401d8b;\n
                else\n
                    goto LABEL_0x401ca1;\n
            }\n
LABEL_401d8b:\n
            v4 = 37;\n
            v13 = &v4;\n
            v12 = v9;\n
            cgc_transmit(v9, &v4, 1);\n
            goto LABEL_401c22;\n
        }\n
        v4 = v14;\n
        cgc_transmit(v12, v13, 1);\n
LABEL_401c22:\n
        v11 = a0;\n
    } while (*(v11));\n
    return 0;\n
}\n
", "4201482:sub_401c0a": null, "4201609:sub_401c89": null, "4201973:sub_401df5": null, "4201984:sub_401e00": "int sub_401e00(unsigned int *v5, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_18;  // tmp #18\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ecx\n
    struct struct_0 **v10;  // ebx\n
    unsigned int *v11;  // edi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebp\n
    void* v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v16;  // ecx\n
    char v17;  // dl\n
    char v18;  // dl\n
    unsigned int v19;  // eax\n
\n
    v3 = &v4;\n
    v2 = v6;\n
    v1 = v7;\n
    v0 = v8;\n
    v14 = a3;\n
    v9 = a2;\n
    v13 = a1;\n
    v10 = a0;\n
    v11 = v5;\n
    v15 = 0;\n
    if (v13 >= v9)\n
    {\n
        v12 = (0 CONCAT v13) /m v9;\n
        v13 = (0 CONCAT v13) /m v9 >> 32;\n
        v14 = a3;\n
        v15 = sub_401e00(v11, v10, v12, v9, a3 - 1, a4);\n
    }\n
    if (v14 > 0 && !v15)\n
    {\n
        v16 = v14 - 1;\n
        if (v14 != 1)\n
        {\n
            if ((v16 & 1))\n
            {\n
                *(v10)->field_0 = ((a4 & 1) * 16) | 32;\n
                *(v10) = *(v10) + 1;\n
                *(v11) = *(v11) + 1;\n
                v16 = v14 - 2;\n
            }\n
            if (v14 != 2)\n
            {\n
                v17 = ((a4 & 1) * 16) | 32;\n
                do\n
                {\n
                    *(v10)->field_0 = v17;\n
                    *(v10) = *(v10) + 1;\n
                    *(v11) = *(v11) + 1;\n
                    *(v10)->field_0 = v17;\n
                    *(v10) = *(v10) + 1;\n
                    *(v11) = *(v11) + 1;\n
                    tmp_18 = v16;\n
                    v16 -= 2;\n
                } while (tmp_18 != 2);\n
            }\n
        }\n
    }\n
    if (v13 < 10)\n
        v18 = 48;\n
    else\n
        v18 = (!(a4 & 2)) * 32 + 55;\n
    *(v10)->field_0 = v18 + v13;\n
    *(v10) = *(v10) + 1;\n
    *(v11) = *(v11) + 1;\n
    v19 = v15 + 1;\n
    return v19;\n
}\n
", "4202181:sub_401ec5": null, "4202192:sub_401ed0": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int sub_401ed0(char *v10, struct_0 *a0)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct struct_1 **v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    char v11;  // [bp+0xc]\n
    struct_0 *v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx, Other Possible Types: unsigned int\n
    void* v14;  // eax, Other Possible Types: unsigned int\n
    char v15;  // al\n
    char *v16;  // ecx\n
    unsigned int v17;  // ebx\n
    struct_0 *v18;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // edi\n
    struct_0 *v22;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v23;  // edi\n
    void* v24;  // eax, Other Possible Types: unsigned int\n
    struct struct_1 **v25;  // eax\n
    char *v26;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v27;  // edi\n
    struct struct_1 **v28;  // ecx\n
    char *v29;  // ecx, Other Possible Types: unsigned int\n
    char *v30;  // eax, Other Possible Types: unsigned int\n
    struct struct_1 **v31;  // ecx\n
    char *v32;  // edx\n
    unsigned int v33;  // edi\n
\n
    v8 = &v9;\n
    v12 = a0;\n
    v13 = v10;\n
    v4 = 0;\n
    v5 = &v11;\n
    if (!v12->field_-1)\n
    {\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        v6 = 3;\n
        do\n
        {\n
            v22 = v12 + 1;\n
            a0 = v22;\n
            v15 = *(v12);\n
            if (v15 != 37)\n
            {\n
                v16 = v10;\n
                *(v16) = v15;\n
                v10 = v16 + 1;\n
            }\n
            else\n
            {\n
                v24 = 0;\n
                v23 = 0;\n
                while (true)\n
                {\n
                    a0 = v22 + 1;\n
                    v19 = *(v22);\n
                    v17 = v19;\n
                    if (v17 - 49 >= 9)\n
                        break;\n
LABEL_401f50:\n
                    v24 = sub_402450(v22, &a0);\n
                    v22 = a0;\n
                }\n
                if (v17 != 48)\n
                {\n
                    switch (v17)\n
                    {\n
                    case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 99: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 117: case 118: case 119:\n
LABEL_402085:\n
                        v30 = v10;\n
                        *(v30) = v19;\n
                        goto LABEL_40208b;\n
                    case 100:\n
LABEL_402021:\n
                        v28 = v5;\n
                        v5 = v28 + 1;\n
                        v29 = *(v28);\n
                        if (v29 < 0)\n
                        {\n
                            v32 = v10;\n
                            *(v32) = 45;\n
                            v10 = v32 + 1;\n
                            v4 += 1;\n
                            v29 = -(v29);\n
                        }\n
                        v3 = v23;\n
                        v2 = v24;\n
                        v1 = 10;\n
                        v0 = v29;\n
                        goto LABEL_402060;\n
                    case 115:\n
LABEL_401fc5:\n
                        v25 = v5;\n
                        v5 = v25 + 1;\n
                        v26 = v10;\n
                        v27 = v4;\n
                        if (sub_4022b0())\n
                        {\n
                            v7 = v27;\n
                            v33 = 0;\n
                            do\n
                            {\n
                                v26[v33] = (*(v25))[v33].field_0;\n
                                v33 += 1;\n
                            } while (v33 < sub_4022b0());\n
                            v26 = &v26[v33];\n
                            v27 = v7 + v33;\n
                        }\n
                        v10 = v26;\n
                        v4 = v27;\n
                        break;\n
                    case 88:\n
                        v23 |= 2;\n
                    case 120:\n
LABEL_40204f:\n
                        v31 = v5;\n
                        v5 = v31 + 1;\n
                        v3 = v23;\n
                        v2 = v24;\n
                        v1 = 16;\n
                        v0 = &*(v31)->field_0;\n
LABEL_402060:\n
                        sub_401e00(&v4, &v10, v0, v1, v2, v3);\n
                        break;\n
                    default:\n
                        if (v17 == 37)\n
                            goto LABEL_40207c;\n
                        else\n
                            goto LABEL_402085;\n
                    }\n
                }\n
                else\n
                {\n
                    v18 = v22 + 2;\n
                    do\n
                    {\n
                        a0 = v18;\n
                        v19 = *((v18 - 1));\n
                        v20 = v19;\n
                        v18 += 1;\n
                    } while (v20 == 48);\n
                    switch (v20)\n
                    {\n
                    case 37:\n
LABEL_40207c:\n
                        v30 = v10;\n
                        *(v30) = 37;\n
LABEL_40208b:\n
                        v10 = v30 + 1;\n
                        goto LABEL_401f1b;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v22 = v18 - 2;\n
                        v23 = 1;\n
                        goto LABEL_401f50;\n
                    case 88:\n
                        v23 = v6;\n
                        goto LABEL_40204f;\n
                    case 100:\n
                        v23 = 1;\n
                        goto LABEL_402021;\n
                    case 115:\n
                        goto LABEL_401fc5;\n
                    case 120:\n
                        v23 = 1;\n
                        goto LABEL_40204f;\n
                    }\n
                }\n
            }\n
LABEL_401f1b:\n
            v4 += 1;\n
            v12 = a0;\n
        } while (*(v12));\n
        v13 = v10;\n
        v14 = v4;\n
    }\n
    *(v13) = 0;\n
    return v14;\n
}\n
", "4202249:sub_401f09": null, "4202672:sub_4020b0": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int sub_4020b0(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebx\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return sub_401210(v1);\n
    if (!v1)\n
    {\n
        sub_4011c0(v2);\n
    }\n
    else\n
    {\n
        v3 = sub_401210(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 >= v1)\n
                v4 = v1;\n
            sub_4017d0(v5, v2, v4);\n
            sub_4011c0(v2);\n
            goto LABEL_402109;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_402109:\n
    return v5;\n
}\n
", "4202768:sub_402110": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int sub_402110(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char *v2;  // ebx\n
    char v3;  // cl\n
    struct_0 *v4;  // ebx, Other Possible Types: unsigned int\n
    void* v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (v5)\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return sub_401180(v5) - sub_401180(*(v1));\n
            if (v5 != v3 && sub_401180(v5) != sub_401180(*(v1)))\n
                return sub_401180(*((v4 - 1))) - sub_401180(*(v1));\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return sub_401180(0) - sub_401180(*(v1));\n
}\n
", "4202789:sub_402125": null, "4202896:sub_402190": "int sub_402190(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    sub_402230(sub_4022b0(v3, v0) + v3);\n
    return v1;\n
}\n
", "4202944:sub_4021c0": "int sub_4021c0(char v0[2], unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    char v2[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // edx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v2[0];\n
    if (v3)\n
    {\n
        do\n
        {\n
            if (v3 == v1)\n
                return v2;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
        } while (v3);\n
    }\n
    if (!v1)\n
        return v2;\n
    return 0;\n
}\n
", "4202992:sub_4021f0": "int sub_4021f0(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (v5)\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4203056:sub_402230": "int sub_402230(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!v3)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4203120:sub_402270": "int sub_402270(unsigned int v3)\n
{\n
    char v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned int v4;  // ebx\n
    char *v5;  // ebx\n
    char *v6;  // edi\n
    char *v7;  // eax\n
\n
    v2 = v4;\n
    v5 = v3;\n
    v6 = sub_4022b0(v5, *(&v0), *(&v1)) + 1;\n
    v7 = sub_401210(v6);\n
    if (v7)\n
    {\n
        sub_4017d0(v7, v5, v6);\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4203184:sub_4022b0": "int sub_4022b0(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4203216:sub_4022d0": "int sub_4022d0(char v0[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char v4;  // cl\n
    char v5[2];  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return a1;\n
    v2 = a0;\n
    v5 = v0;\n
    if (v1 != 1)\n
    {\n
        for (v3 = v5[0]; v3; v5 += 1)\n
        {\n
            v4 = *(v2);\n
            if (!v4)\n
                break;\n
            if (v3 != v4 && sub_401180(v3) != sub_401180(*(v2)))\n
                break;\n
            v2 += 1;\n
            v3 = *((v5 + 1));\n
        }\n
    }\n
    v1 = sub_401180(*(v5)) - sub_401180(*(v2));\n
    return v1;\n
}\n
", "4203279:sub_40230f": null, "4203344:sub_402350": "int sub_402350(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx, Other Possible Types: unsigned int\n
    char *v3;  // esi\n
    char *v4;  // edi\n
    char v5;  // bl\n
    unsigned int v6;  // edx\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    v7 = v0;\n
    v6 = v1 - 1;\n
    if (v6)\n
    {\n
        v3 = &v2[v6];\n
        v4 = &v7[v6];\n
        while (true)\n
        {\n
            v5 = *(v7);\n
            if (!v5)\n
                break;\n
            if (!*(v2))\n
                break;\n
            if (v5 != *(v2))\n
                break;\n
            v7 += 1;\n
            v2 += 1;\n
            v6 -= 1;\n
            if (!v6)\n
            {\n
                v2 = v3;\n
                v7 = v4;\n
                break;\n
            }\n
        }\n
    }\n
    v8 = *(v7) - *(v2);\n
    return v8;\n
}\n
", "4203424:sub_4023a0": "int sub_4023a0(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // ecx\n
    char v5;  // bl\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v2 = a1;\n
    v3 = v1;\n
    if (!v2)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v5 = *((a0 + v4));\n
            v3[v4] = v5;\n
            if (!v5)\n
                break;\n
            v4 += 1;\n
            if (v2 == v4)\n
                return v1;\n
        }\n
    }\n
    tmp_2 = v2;\n
    v6 = v2 - v4;\n
    if (tmp_2 > v4)\n
    {\n
        v7 = &v3[v4];\n
        v0 = v6;\n
        memset(v7, 0);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4203504:sub_4023f0": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int sub_4023f0(struct struct_0 **v2, char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct struct_0 **v3;  // esi\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    struct_1 *v6;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v7;  // edi, Other Possible Types: unsigned int\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    v4 = *(v3);\n
    if (!v4)\n
        return 0;\n
    v5 = *(v4);\n
    v7 = 0;\n
    if (v5)\n
    {\n
        v6 = v4 + 1;\n
        do\n
        {\n
            if (sub_4021c0(a0, v5))\n
            {\n
                v4 = *(v3);\n
                if (*((v6 - 1)))\n
                {\n
                    *((v6 - 1)) = 0;\n
                    v7 = v6;\n
                    goto LABEL_40243f;\n
                }\n
            }\n
            v5 = *(v6);\n
            v6 += 1;\n
        } while (v5);\n
        v4 = *(v3);\n
    }\n
LABEL_40243f:\n
    *(v3) = v7;\n
    return v4;\n
}\n
", "4203600:sub_402450": "int sub_402450(char *v5, unsigned int *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ebp\n
    unsigned int *v7;  // ecx, Other Possible Types: unsigned int\n
    char *v8;  // ebx, Other Possible Types: unsigned int\n
    void* v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // eax\n
    char *v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    void* v14;  // ecx\n
    unsigned int v15;  // eax\n
    char v16;  // eax\n
    void* v17;  // ecx, Other Possible Types: unsigned int\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    void* v19;  // eax, Other Possible Types: unsigned int\n
    unsigned int v20;  // edx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // ecx\n
    char *v23;  // esi, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v6 = a1;\n
    v7 = a0;\n
    v8 = v5;\n
    v9 = 0;\n
    if (a1 == 1)\n
    {\n
        v18 = 0;\n
        v23 = v8;\n
    }\n
    else\n
    {\n
        v18 = 0;\n
        v23 = v8;\n
        if (v6 <= 36)\n
        {\n
            v12 = v8;\n
            while (true)\n
            {\n
                v10 = *(v12);\n
                v11 = v10;\n
                if (v11 - 9 >= 4 && v11 != 32)\n
                    break;\n
                v12 += 1;\n
            }\n
            v13 = 0;\n
            *(&v13) = v10 == 45;\n
            v14 = 0;\n
            *(&v14) = *((v12 + v13)) == 43;\n
            v0 = v12 + v13 + v14;\n
            if (!v6)\n
            {\n
                v6 = 10;\n
                v1 = *(v0);\n
                if (!(v1 == 48))\n
                    goto LABEL_402547;\n
                v15 = v13 + v14;\n
                v1 = *((v12 + v15 + 1));\n
                if ((v1 | 32) == 120)\n
                {\n
                    v0 = v15 + v12 + 2;\n
                    v6 = 16;\n
                }\n
                else\n
                {\n
                    v0 = v15 + v12 + 1;\n
                    v6 = 8;\n
LABEL_402547:\n
                    v17 = 0;\n
                    v18 = 0;\n
                    v23 = v0;\n
                    if ([D] x86g_calculate_condition(0xc<32>, 0x4<32>, Conv(8->32, Load(addr=stack_base-24, size=1, endness=Iend_LE)), 0x30<32>, 0x0<32>))\n
                        goto LABEL_4025e2;\n
                    goto LABEL_40255c;\n
                }\n
LABEL_40253d:\n
                v1 = *(v0);\n
                goto LABEL_402547;\n
            }\n
            else\n
            {\n
                if (!(v6 == 16))\n
                    goto LABEL_40253d;\n
                v6 = 16;\n
                v1 = *(v0);\n
                if (!(v1 == 48))\n
                    goto LABEL_402547;\n
                v16 = v13 + v14;\n
                if ((*((v12 + v16 + 1)) | 32) == 120)\n
                {\n
                    v0 = v16 + v12 + 2;\n
                    goto LABEL_40253d;\n
                }\n
                else\n
                {\n
                    v16 = 48;\n
                    *(&v1) = v16;\n
LABEL_40255c:\n
                    v18 = 0;\n
                    v23 = v0;\n
                    v19 = 0;\n
                    v20 = v1;\n
                    v2 = v6;\n
                    do\n
                    {\n
                        if ([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, dl<1>), 0x2f<32>, 0x0<32>))\n
                        {\n
                            v21 = v20 - 48;\n
                            if (!(v21 < v6))\n
                                goto LABEL_4025db;\n
                        }\n
                        else\n
                        {\n
                            v22 = -65;\n
                            if (!([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, dl<1>), 0x2f<32>, 0x0<32>)))\n
                            {\n
                                v22 = -97;\n
                                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x61<8>)), 0x1a<32>, 0x0<32>)))\n
                                    goto LABEL_4025e0;\n
                            }\n
                            v21 = v22 + v20 + 10;\n
                            v6 = v2;\n
                            if (v21 >= v2)\n
                            {\n
LABEL_4025db:\n
                                v23 = v0 + v18;\n
LABEL_4025e0:\n
                                v17 = v19;\n
                                goto LABEL_4025e2;\n
                            }\n
                        }\n
                        v17 = v21 + v6 * v19;\n
                        v23 += 1;\n
                        v20 = *((v0 + v18 + 1));\n
                        v18 += 1;\n
                        v19 = v17;\n
                    } while (!([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, dl<1>), 0x2f<32>, 0x0<32>)));\n
                    v23 = v0 + v18;\n
                }\n
            }\n
LABEL_4025e2:\n
            v9 = -(v17);\n
            if (v10 != 45)\n
                v9 = v17;\n
            v7 = a0;\n
            v8 = v5;\n
        }\n
    }\n
    if (!v7)\n
        return v9;\n
    if (!v18)\n
        v23 = v8;\n
    *(v7) = v23;\n
    return v9;\n
}\n
", "4203650:sub_402482": null, "4203905:sub_402581": null, "4204066:sub_402622": null, "4204080:sub_402630": "int sub_402630(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return sub_402450(v0, a0, a1);\n
}\n
", "4204096:sub_402640": "typedef struct struct_1 {\n
    char padding_0[612];\n
    unsigned int field_264;\n
} struct_1;\n
\n
extern struct_0 *g_40d198;\n
\n
int sub_402640()\n
{\n
    unsigned int v1;  // eax\n
\n
    if (g_40d198)\n
    {\n
        sub_4011c0(g_40d198->field_264);\n
        v1 = sub_4011c0(g_40d198);\n
        g_40d198 = 0;\n
        return v1;\n
    }\n
    return g_40d198;\n
}\n
", "4204144:sub_402670": "extern struct_0 *g_40d198;\n
extern char g_40d1a0;\n
extern char g_40d3a0;\n
extern char g_40d3a4;\n
extern unsigned int g_40d5a0;\n
\n
int sub_402670()\n
{\n
    unsigned int v0[1062122];  // [bp-0x60], Other Possible Types: unsigned int\n
    int tmp_1;  // tmp #1\n
    int tmp_3;  // tmp #3\n
    int tmp_68;  // tmp #68\n
    int tmp_12;  // tmp #12\n
    int tmp_41;  // tmp #41\n
    unsigned int *v1;  // [bp-0x5c]\n
    unsigned int *v2;  // [bp-0x58]\n
    unsigned int *v3;  // [bp-0x54], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c], Other Possible Types: char\n
    unsigned int v6[1062122];  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned int *v8;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x3c]\n
    unsigned int v10;  // [bp-0x38]\n
    unsigned int v11;  // [bp-0x34]\n
    unsigned int v12[1062122];  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x2c]\n
    unsigned int *v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    unsigned int v16;  // [bp-0x20]\n
    unsigned int v17;  // [bp-0x1c]\n
    unsigned int v18;  // [bp-0x18]\n
    unsigned int v19;  // [bp-0x14]\n
    unsigned int v20;  // [bp-0x4]\n
    char v21;  // [bp+0x0]\n
    void* v23;  // eax, Other Possible Types: unsigned int\n
    unsigned int v24;  // edx\n
    unsigned int *v25;  // ecx, Other Possible Types: unsigned int\n
    unsigned int *v26;  // esi\n
    unsigned int v27[1062122];  // edx\n
    void* v28;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v29;  // ecx\n
    unsigned int v30;  // ebx\n
    unsigned int v31;  // eax\n
    void* v32;  // esi, Other Possible Types: unsigned int\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // eax\n
    unsigned int v35;  // esi\n
    unsigned int v36;  // ebp\n
    unsigned int *v37;  // ebx, Other Possible Types: unsigned int\n
    void* v38;  // edi, Other Possible Types: unsigned int\n
    unsigned int v39;  // ebp\n
    unsigned int *v40;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v41;  // ecx\n
    unsigned int *v42;  // edx\n
    char v43;  // al\n
    void* v44;  // eax, Other Possible Types: unsigned int\n
    unsigned int v45;  // cc_dep1\n
    char v46;  // al\n
    unsigned int v47;  // eax\n
    void* v48;  // edx, Other Possible Types: unsigned int\n
    unsigned int v49;  // cc_dep1\n
    char v50;  // cl\n
    char v51;  // al\n
    unsigned int v52;  // edx\n
    unsigned int *v53;  // eax\n
    void* v54;  // edi, Other Possible Types: unsigned int\n
    unsigned int v55;  // esi\n
    unsigned int v56;  // cc_dep1\n
    unsigned int *v57;  // ebx, Other Possible Types: unsigned int\n
    void* v58;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v59;  // edi, Other Possible Types: unsigned int\n
    void* v60;  // edx, Other Possible Types: unsigned int\n
    unsigned int v61;  // eax\n
    void* v62;  // edx, Other Possible Types: unsigned int\n
    unsigned int v63;  // ecx\n
    unsigned int *v64;  // eax\n
    unsigned int *v65;  // ecx, Other Possible Types: unsigned int, char\n
    unsigned int v66;  // ebp\n
    unsigned int v67;  // ebx\n
    unsigned int v68;  // eax\n
    void* v69;  // edi, Other Possible Types: unsigned int\n
    char v70;  // bl\n
    unsigned int v71;  // edx\n
    void* v72;  // esi, Other Possible Types: unsigned int\n
    void* v73;  // ebp, Other Possible Types: unsigned int [1062122], unsigned int\n
    void* v74;  // eax, Other Possible Types: unsigned int\n
    char v75;  // dl\n
    unsigned int v76[1062122];  // eax, Other Possible Types: unsigned int\n
    unsigned int v77[1062122];  // edi, Other Possible Types: unsigned int\n
    char v78;  // bl\n
    unsigned int v79[1062122];  // esi, Other Possible Types: unsigned int\n
    char v80;  // dl\n
    unsigned int v82;  // edx\n
    void* v83;  // esi, Other Possible Types: unsigned int\n
    unsigned int v84;  // cc_dep1\n
    unsigned int v85[1062122];  // eax, Other Possible Types: unsigned int\n
    unsigned int v86;  // ebx\n
    unsigned int v87;  // esi\n
    void* v88;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v89;  // cc_dep1\n
    unsigned int *v90;  // edx\n
    unsigned int v91;  // ebx\n
    void* v92;  // edi, Other Possible Types: unsigned int\n
    unsigned int v93;  // edx\n
    unsigned int v94;  // ebx\n
    unsigned int v95;  // edi\n
    void* v96;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v98;  // ecx\n
    unsigned int v99;  // esi\n
    void* v100;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v102;  // esi\n
    unsigned int v104;  // ebp\n
    unsigned int v105[1062122];  // eax\n
    void* v107;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v108;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v109;  // edx, Other Possible Types: unsigned int\n
    unsigned int *v110;  // ecx\n
    unsigned int v111;  // eax\n
    unsigned int v112[1062122];  // esi, Other Possible Types: unsigned int, void*\n
    unsigned int v113;  // ebx\n
    unsigned int v114[1062122];  // ebx, Other Possible Types: unsigned int\n
    void* v115;  // ecx, Other Possible Types: unsigned int\n
    char v116;  // cl\n
    unsigned int v117;  // cc_dep1\n
    unsigned int v118;  // ebx\n
    void* v119;  // edx, Other Possible Types: unsigned int\n
    unsigned int v120[1062122];  // ecx, Other Possible Types: unsigned int\n
    char v121;  // cl\n
    unsigned int v122[1062122];  // eax\n
    unsigned int v123;  // cc_dep1\n
    char v124;  // al\n
    unsigned int v125;  // edi\n
    unsigned int v126[1062122];  // ebp, Other Possible Types: unsigned int\n
    void* v127;  // eax, Other Possible Types: unsigned int\n
    unsigned int v128;  // cc_dep1\n
    char v129;  // cl\n
    unsigned int v130;  // cc_dep1\n
    unsigned int v131;  // esi\n
    unsigned int v132[1062122];  // edx\n
    char v133;  // al\n
    unsigned int v134;  // eax\n
    void* v135;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v136;  // cc_dep1\n
    void* v137;  // edi, Other Possible Types: unsigned int\n
    unsigned int v138;  // eax\n
    unsigned int v139;  // ebx\n
    unsigned int *v140;  // ecx\n
    unsigned int *v141;  // ebp, Other Possible Types: unsigned int\n
    void* v142;  // edx, Other Possible Types: unsigned int\n
    unsigned int v143;  // edx\n
    void* v144;  // esi, Other Possible Types: unsigned int\n
    unsigned int v145;  // edx\n
    unsigned int v146;  // edi\n
    unsigned int *v147;  // ebx, Other Possible Types: unsigned int\n
    void* v148;  // eax, Other Possible Types: unsigned int\n
    void* v149;  // esi, Other Possible Types: unsigned int\n
    unsigned int v150;  // eax\n
    char v151;  // al\n
    unsigned int v152;  // eax\n
    void* v153;  // esi, Other Possible Types: unsigned int\n
    unsigned int v154;  // cc_dep1\n
    unsigned int v155;  // esi\n
    unsigned int v156;  // eax\n
    void* v157;  // edx, Other Possible Types: unsigned int\n
    void* v158;  // edi, Other Possible Types: unsigned int\n
    unsigned int v159;  // edi\n
    unsigned int v160;  // edx\n
    void* v161;  // edi, Other Possible Types: unsigned int\n
    unsigned int v162;  // edi\n
    unsigned int v163;  // edx\n
    void* v164;  // eax, Other Possible Types: unsigned int\n
    void* v165;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v166;  // ebp, Other Possible Types: unsigned int\n
    void* v167;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v168;  // esi\n
    unsigned int v169;  // edx\n
    unsigned int v170;  // edi\n
    unsigned int v171;  // eax\n
    unsigned int *v172;  // ebp\n
    unsigned int v173;  // ecx\n
\n
    v20 = &v21;\n
    g_40d198 = sub_401210(808);\n
    if (!g_40d198)\n
        return 0;\n
    sub_401ad0(g_40d198, 0, 808);\n
    sub_401ad0(&g_40d198[1].padding_0[8], 6, 64);\n
    v10 = &g_40d1a0;\n
    v8 = 0;\n
    v23 = 0;\n
    do\n
    {\n
        v24 = v23 - 1;\n
        v9 = v23 * 8;\n
        v11 = v23;\n
        v7 = v23 + 1;\n
        v25 = 54;\n
        v5 = v24;\n
        do\n
        {\n
            *(&v3) = v24 < 8;\n
            v26 = v25;\n
            v27 = v8 + v25;\n
            v30 = (0 CONCAT 1) << (v27 - 71 & 31) >> 32;\n
            *(&v23) = v25 == 54 | v11 < 2;\n
            v38 = 0;\n
            v28 = 1 << (v27 - 71 & 31);\n
            if ((v27 - 71 & 32))\n
                v30 = v28;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v28 = 0;\n
            v2 = v26;\n
            v29 = &v26[13] + 2;\n
            if (v23)\n
                v30 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v28 = 0;\n
            v1 = v29;\n
            *(&v29) = !(v29 < 2);\n
            v0[0] = v27;\n
            v31 = (0 CONCAT 1) << (v27[0] - 64 & 31) >> 32;\n
            v32 = 1 << (v27[0] - 64 & 31);\n
            if ((v27[0] - 64 & 32))\n
                v31 = v32;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v32 = 0;\n
            v33 = v11;\n
            if (!(v29 & v3))\n
                v31 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v32 = 0;\n
            v34 = v31 | v30;\n
            v35 = v32 | v28;\n
            v36 = 0;\n
            v37 = 0;\n
            if (v33 < 2)\n
            {\n
LABEL_402971:\n
                v39 = v36 | v35;\n
                v40 = v37 | v34;\n
                if (v5 <= 7 && v1 < 6)\n
                {\n
                    v43 = v0;\n
                    tmp_1 = v43 - 60;\n
                    v44 = (0 CONCAT 1) << (v43 - 60 & 31) >> 32;\n
                    v38 = 1 << (tmp_1 & 31);\n
                    v45 = tmp_1 & 32;\n
                    if ((tmp_1 & 32))\n
                        v44 = v38;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v38 = 0;\n
                    goto LABEL_4029c8;\n
                }\n
            }\n
            else if (v1 <= 6)\n
            {\n
                *(&v29) = v0 - 69;\n
                v37 = (0 CONCAT 1) << (*(&v29) & 31) >> 32;\n
                v33 = v11;\n
                v36 = 1 << (*(&v29) & 31);\n
                if ((v29 & 32))\n
                    v37 = v36;\n
                if (!([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>)))\n
                {\n
                    goto LABEL_402971;\n
                }\n
                else\n
                {\n
                    v36 = 0;\n
                    goto LABEL_402971;\n
                }\n
            }\n
            else\n
            {\n
                v38 = 0;\n
                if (v5 >= 8)\n
                {\n
                    v41 = v10;\n
                    v42 = v2;\n
                    *((v41 + v42 * 8 - 432)) = v35;\n
                    *((v41 + v42 * 8 - 428)) = v34;\n
                    v65 = v42;\n
                    v69 = 0;\n
                    v12[0] = 79;\n
                    v75 = 72;\n
                    v4 = 10;\n
                    v74 = 0;\n
                    v3 = 0;\n
                    goto LABEL_402c16;\n
                }\n
                else\n
                {\n
                    v39 = v35;\n
                    v40 = v34;\n
                }\n
                v44 = 0;\n
LABEL_4029c8:\n
                v57 = v40 | v44;\n
                v58 = v39 | v38;\n
                if (v33 >= 6)\n
                {\n
                    if (!([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>)))\n
                    {\n
                        v3 = 0;\n
                        v4 = v7;\n
                        v60 = 0;\n
                        v54 = 0;\n
                        goto LABEL_402b80;\n
                    }\n
                    v63 = 7;\n
                    v59 = v1;\n
                    if (v59 < 2)\n
                        goto LABEL_402aac;\n
                    v50 = v2;\n
                    v61 = (0 CONCAT 1) << (v50 & 31) >> 32;\n
                    v62 = 1 << (v50 & 31);\n
                    if ((v50 & 32))\n
                        v61 = v62;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v62 = 0;\n
                    v63 = 7;\n
LABEL_402aa3:\n
                    v57 |= v61;\n
                    v58 |= v62;\n
                    if (v59 > 5)\n
                    {\n
                        v4 = v63;\n
                        v60 = 0;\n
                        *(&v61) = 1;\n
                        v3 = v61;\n
                        v54 = 0;\n
                        goto LABEL_402b80;\n
                    }\n
LABEL_402aac:\n
                    v64 = v2;\n
                    v4 = v63;\n
                    *(&v63) = &v64[2 * v63] - 52;\n
                    v54 = (0 CONCAT 1) << (*(&v63) & 31) >> 32;\n
                    v60 = 1 << (*(&v63) & 31);\n
                    if ((*(&v63) & 32))\n
                        v54 = v60;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v60 = 0;\n
                    v65 = v2;\n
                    *(&v64) = 1;\n
                    v3 = v64;\n
                    goto LABEL_402b84;\n
                }\n
                v46 = v0;\n
                tmp_1 = v43 - 39;\n
                v47 = (0 CONCAT 1) << (v43 - 39 & 31) >> 32;\n
                v48 = 1 << (tmp_1 & 31);\n
                v49 = tmp_1 & 32;\n
                if ((tmp_1 & 32))\n
                    v47 = v48;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v48 = 0;\n
                if (v2 == 54)\n
                    v47 = 0;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v48 = 0;\n
                v57 |= v47;\n
                v58 |= v48;\n
                v59 = v1;\n
                if (v59 <= 1)\n
                {\n
LABEL_402a41:\n
                    v61 = v57;\n
                    v29 = v0 - 37;\n
                    v57 = (0 CONCAT 1) << (v29 & 31) >> 32;\n
                    v62 = v58;\n
                    v58 = 1 << (v29 & 31);\n
                    if ((v29 & 32))\n
                        v57 = v58;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v58 = 0;\n
                    v63 = v7;\n
                    goto LABEL_402aa3;\n
                }\n
                else\n
                {\n
                    v51 = v0;\n
                    tmp_1 = v43 - 48;\n
                    v52 = (0 CONCAT 1) << (v43 - 48 & 31) >> 32;\n
                    v53 = v59;\n
                    v54 = 0;\n
                    v55 = 1 << (tmp_1 & 31);\n
                    v56 = tmp_1 & 32;\n
                    if ((tmp_1 & 32))\n
                        v52 = v55;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v55 = 0;\n
                    v57 |= v52;\n
                    v58 |= v55;\n
                    if (v53 <= 6)\n
                    {\n
                        v59 = v53;\n
                        goto LABEL_402a41;\n
                    }\n
                    else\n
                    {\n
                        *(&v53) = 1;\n
                        v3 = v53;\n
                        v4 = v7;\n
                        v60 = 0;\n
LABEL_402b80:\n
                        v65 = v2;\n
LABEL_402b84:\n
                        v66 = v58 | v60;\n
                        v67 = v57 | v54;\n
                        v68 = v10;\n
                        *((v68 + v65 * 8 - 432)) = v66;\n
                        v69 = 0;\n
                        *((v68 + v65 * 8 - 428)) = v67;\n
                        v12[0] = -54 + v8 + v65;\n
                        if (v5 > 7)\n
                        {\n
                            v74 = 0;\n
                            v75 = v9;\n
                        }\n
                        else\n
                        {\n
                            v70 = v0;\n
                            v71 = (0 CONCAT 1) << (v70 - 63 & 31) >> 32;\n
                            v72 = 1 << (v70 - 63 & 31);\n
                            v73 = 0;\n
                            if ((v70 - 63 & 32))\n
                                v71 = v72;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v72 = 0;\n
                            if (v65 == 54)\n
                                v71 = 0;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v72 = 0;\n
                            v76 = (0 CONCAT 1) << (v70 - 62 & 31) >> 32;\n
                            v77 = 1 << (v70 - 62 & 31);\n
                            if ((v70 - 62 & 32))\n
                                v76 = v77;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v77 = 0;\n
                            v74 = v76 | v71;\n
                            v69 = v77 | v72;\n
                            if (v1 > 6)\n
                            {\n
                                v75 = v9;\n
                                v0[0] = 0;\n
                            }\n
                            else\n
                            {\n
                                v78 -= 61;\n
                                v79 = (0 CONCAT 1) << (v70 & 31) >> 32;\n
                                v73 = 1 << (v70 & 31);\n
                                if ((v78 - 61 & 32))\n
                                    v79 = v73;\n
                                v0[0] = v79;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v73 = 0;\n
                                v75 = v9;\n
                            }\n
                            v65 = v2;\n
                            continue;\n
                        }\n
LABEL_402c16:\n
                        v73 = 0;\n
                        v0[0] = 0;\n
                    }\n
                }\n
            }\n
            v80 = v75 + v65;\n
            tmp_3 = v75 - 55;\n
            v82 = (0 CONCAT 1) << (v75 - 55 & 31) >> 32;\n
            v6[0] = v74 | v0;\n
            v83 = 1 << (tmp_3 & 31);\n
            v0[0] = v69 | v73;\n
            v84 = tmp_3 & 32;\n
            v85 = ((tmp_3 & 32) ? v82 : v83);\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v83 = 0;\n
            if (v2 == 54)\n
                v85 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v83 = 0;\n
            *(&v65) = [D] x86g_calculate_condition(0x5<32>, 0x6<32>, Load(addr=stack_base-88, size=4, endness=Iend_LE), 0x36<32>, 0x0<32>);\n
            *(&v82) = v80 - 53;\n
            v86 = (0 CONCAT 1) << (*(&v82) & 31) >> 32;\n
            v6[0] = v85 | v6;\n
            v87 = v83 | v0;\n
            v88 = 1 << (v75 & 31);\n
            if ((v75 & 32))\n
                v86 = v88;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v88 = 0;\n
            v89 = v1;\n
            if (v1 >= 7)\n
                v86 = 0;\n
            v13 = v86;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v88 = 0;\n
            v90 = &v2[2 * v4];\n
            v1 = v90;\n
            *(&v0[0]) = [D] x86g_calculate_condition(0x2<32>, 0x6<32>, cc_dep1<4>, 0x7<32>, 0x0<32>);\n
            v91 = (0 CONCAT 1) << (v90 - 55 & 31) >> 32;\n
            v92 = 1 << (v90 - 55 & 31);\n
            if ((v90 - 55 & 32))\n
                v91 = v92;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v92 = 0;\n
            if (!(v65 & v3))\n
                v91 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v92 = 0;\n
            *(&v65) = v1 - 54;\n
            v93 = (0 CONCAT 1) << (*(&v65) & 31) >> 32;\n
            v94 = v91 | v13 | v6;\n
            v95 = v92 | v88;\n
            v96 = 1 << (*(&v65) & 31);\n
            if ((*(&v65) & 32))\n
                v93 = v96;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v96 = 0;\n
            if (!v3)\n
                v93 = 0;\n
            v6[0] = v93;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v96 = 0;\n
            v98 = v1;\n
            *(&v98) = v98 - 53;\n
            v1 = v98;\n
            v99 = (0 CONCAT 1) << (v1 & 31) >> 32;\n
            v100 = 1 << (v1 & 31);\n
            if ((v1 & 32))\n
                v99 = v100;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v100 = 0;\n
            if (!(v3 & v0))\n
                v99 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v100 = 0;\n
            v102 = v99 | v6;\n
            v104 = v100 | v96 | v95 | v87;\n
            v105 = v12;\n
            *((0x8 * v105 + &g_40d3a4)) = v102 | v94;\n
            *((0x8 * v105 + &g_40d3a0)) = v104;\n
            v25 = v2 + 1;\n
            v24 = v5;\n
        } while (v25 != 62);\n
        v8 += 2;\n
        v10 += 64;\n
        v23 = v7;\n
    } while (v23 != 8);\n
    v8 = &g_40d5a0;\n
    v107 = 0;\n
    v108 = 0;\n
    do\n
    {\n
        v9 = v108 - 1;\n
        v14 = v108 + 1;\n
        v7 = v108 - 2;\n
        v19 = v108 - 3;\n
        v18 = v108 - 4;\n
        v17 = v108 - 5;\n
        v16 = v108 - 6;\n
        v15 = v108 - 7;\n
        v4 = v107 - 1;\n
        v109 = 0;\n
        v10 = v107;\n
        v3 = v108;\n
        do\n
        {\n
            v110 = v107 + v109;\n
            v111 = (0 CONCAT 1) << (v110 & 31) >> 32;\n
            v112 = 0;\n
            v113 = 1 << (v110 & 31);\n
            v2 = v110;\n
            if ((v110 & 32))\n
                v111 = v113;\n
            v5 = v111;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v113 = 0;\n
            v11 = v113;\n
            v114 = 0;\n
            v115 = 0;\n
            if (v9 <= 7)\n
            {\n
                v114 = 0;\n
                if (v109 - 1 <= 7)\n
                {\n
                    v116 = v4 + v109;\n
                    v114 = 1 << (v116 - 8 & 31);\n
                    v117 = v116 - 8 & 32;\n
                    v115 = ((v116 - 8 & 32) ? (0 CONCAT 1) << (v116 - 8 & 31) >> 32 : v114);\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v114 = 0;\n
                }\n
            }\n
            v13 = v115;\n
            v6[0] = v114;\n
            *(&v111) = v108 < 7;\n
            *(&v111) = v109 < 7;\n
            *(&v115) = v2 + 9;\n
            v1 = v109;\n
            v118 = (0 CONCAT 1) << (*(&v115) & 31) >> 32;\n
            v119 = 1 << (*(&v115) & 31);\n
            if ((*(&v115) & 32))\n
                v118 = v119;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v119 = 0;\n
            if (!(v111 & v111))\n
                v118 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v119 = 0;\n
            v120 = 0;\n
            if (v7 <= 7)\n
            {\n
                v120 = 0;\n
                v112 = 0;\n
                if (v1 + 2 <= 7)\n
                {\n
                    v121 = (v1 + v4);\n
                    v112 = (0 CONCAT 1) << (v121 - 17 & 31) >> 32;\n
                    v122 = 1 << (v121 - 17 & 31);\n
                    tmp_68 = v121 - 17 & 32;\n
                    v123 = v121 - 17 & 32;\n
                    v120 = v122;\n
                    if (tmp_68)\n
                        v112 = v122;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v120 = 0;\n
                }\n
            }\n
            v12[0] = v120;\n
            *(&v0[0]) = v108 < 6;\n
            v124 = v2;\n
            tmp_12 = v124 + 18;\n
            v125 = (0 CONCAT 1) << (v124 + 18 & 31) >> 32;\n
            v126 = 0;\n
            v127 = 1 << (v124 + 18 & 31);\n
            v128 = tmp_12 & 32;\n
            if ((tmp_12 & 32))\n
                v125 = v127;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v127 = 0;\n
            if (!(v1 < 6 & v0))\n
                v125 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v127 = 0;\n
            v0[0] = 0;\n
            if (v19 <= 7)\n
            {\n
                v126 = 0;\n
                v0 = 0;\n
                if (v1 + 3 <= 7)\n
                {\n
                    v129 = (v4 + v1);\n
                    v0[0] = 0;\n
                    v0[0] = (v0 CONCAT 1) << (v129 - 26 & 31) >> 32;\n
                    v126 = 1 << (v129 - 26 & 31);\n
                    tmp_68 = v129 - 26 & 32;\n
                    v130 = v129 - 26 & 32;\n
                    v120 = v0;\n
                    if (tmp_68)\n
                        v120 = v126;\n
                    v0 = v120;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v126 = 0;\n
                }\n
            }\n
            v131 = v112 | v125 | v13 | v5 | v118;\n
            v132 = v12 | v127 | v6 | v11 | v119;\n
            v5 = v3 < 5;\n
            v133 = v2;\n
            tmp_41 = v133 + 27;\n
            v134 = (0 CONCAT 1) << (v133 + 27 & 31) >> 32;\n
            v135 = 1 << (tmp_41 & 31);\n
            v136 = tmp_41 & 32;\n
            if ((tmp_41 & 32))\n
                v134 = v135;\n
            v137 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v135 = 0;\n
            if (!(v1 < 5 & v5))\n
                v134 = 0;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v135 = 0;\n
            v138 = v134 | v0 | v131;\n
            v139 = v135 | v126 | v132;\n
            if (v18 <= 7)\n
            {\n
                v140 = v1;\n
                v141 = v140;\n
                v120 = v140 + 1;\n
                v142 = 0;\n
                if (v120 <= 7)\n
                {\n
                    *(&v120) = (v4 + v141) - 35;\n
                    v137 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                    v142 = 1 << (*(&v120) & 31);\n
                    if ((*(&v120) & 32))\n
                        v137 = v142;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v142 = 0;\n
                }\n
            }\n
            else\n
            {\n
                v141 = v1;\n
                v142 = 0;\n
                if (v3 <= 3)\n
                {\n
                    *(&v120) = v2 + 36;\n
                    v143 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                    v144 = 1 << (*(&v120) & 31);\n
                    if ((*(&v120) & 32))\n
                        v143 = v144;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v144 = 0;\n
                    if (v141 >= 4)\n
                        v143 = 0;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v144 = 0;\n
                    v150 = v138 | v143;\n
                    v145 = v139 | v144;\n
                    v146 = v150;\n
                    goto LABEL_402ff0;\n
                }\n
            }\n
            v145 = v142 | v139;\n
            v146 = v137 | v138;\n
            if (v17 <= 7)\n
            {\n
                v147 = v141;\n
                v148 = 0;\n
                if (v141 - 5 > 7)\n
                {\n
                    v149 = 0;\n
                    goto LABEL_403048;\n
                }\n
                else\n
                {\n
                    *(&v120) = (v4 + v141) - 44;\n
                    v149 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                    v148 = 1 << (*(&v120) & 31);\n
                    if ((*(&v120) & 32))\n
                        v149 = v148;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v148 = 0;\n
                    goto LABEL_403048;\n
                }\n
            }\n
LABEL_402ff0:\n
            v148 = 0;\n
            if (v3 > 2)\n
            {\n
                v149 = 0;\n
                v147 = v141;\n
            }\n
            else\n
            {\n
                v151 = v2;\n
                tmp_1 = v43 + 45;\n
                v152 = (0 CONCAT 1) << (v43 + 45 & 31) >> 32;\n
                v153 = 1 << (tmp_1 & 31);\n
                v154 = tmp_1 & 32;\n
                if ((tmp_1 & 32))\n
                    v152 = v153;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v153 = 0;\n
                v147 = v141;\n
                if (v141 >= 3)\n
                    v152 = 0;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v153 = 0;\n
                v159 = v146 | v152;\n
                v156 = v145 | v153;\n
                v155 = v159;\n
                goto LABEL_403090;\n
            }\n
LABEL_403048:\n
            v155 = v149 | v146;\n
            v156 = v148 | v145;\n
            if (v16 <= 7)\n
            {\n
                v157 = 0;\n
                if (v147 - 6 > 7)\n
                {\n
                    v158 = 0;\n
                    goto LABEL_4030aa;\n
                }\n
                else\n
                {\n
                    *(&v120) = (v4 + v147) - 53;\n
                    v158 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                    v157 = 1 << (*(&v120) & 31);\n
                    if ((*(&v120) & 32))\n
                        v158 = v157;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v157 = 0;\n
                    goto LABEL_4030aa;\n
                }\n
            }\n
LABEL_403090:\n
            v157 = 0;\n
            if (v3 > 1)\n
            {\n
                v158 = 0;\n
            }\n
            else\n
            {\n
                *(&v120) = v2 + 54;\n
                v160 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                v161 = 1 << (*(&v120) & 31);\n
                if ((*(&v120) & 32))\n
                    v160 = v161;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v161 = 0;\n
                if (v147 >= 2)\n
                    v160 = 0;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v161 = 0;\n
                v168 = v155 | v160;\n
                v163 = v156 | v161;\n
                v162 = v168;\n
                goto LABEL_402ce2;\n
            }\n
LABEL_4030aa:\n
            v162 = v158 | v155;\n
            v163 = v157 | v156;\n
            if (v15 <= 7)\n
            {\n
                v164 = 0;\n
                if (v147 - 7 > 7)\n
                {\n
                    v165 = 0;\n
                    v166 = v147;\n
                    v167 = 0;\n
                }\n
                else\n
                {\n
                    *(&v120) = (v4 + v147) - 62;\n
                    v165 = (0 CONCAT 1) << (*(&v120) & 31) >> 32;\n
                    v164 = 1 << (*(&v120) & 31);\n
                    v166 = v147;\n
                    if ((*(&v120) & 32))\n
                        v165 = v164;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v164 = 0;\n
                    v167 = 0;\n
                }\n
            }\n
            else\n
            {\n
LABEL_402ce2:\n
                v167 = (!v3 && !v147) * 0x80000000;\n
                v164 = 0;\n
                v165 = 0;\n
                v166 = v147;\n
                continue;\n
            }\n
            v169 = v163 | v164;\n
            v170 = v162 | v167 | v165;\n
            v171 = v8;\n
            *((v171 + v166 * 8)) = v169;\n
            *((v171 + v166 * 8 + 4)) = v170;\n
            v172 = v166 + 1;\n
            v107 = v10;\n
            v108 = v3;\n
            v109 = v172;\n
        } while (v172 != 8);\n
        v107 += 8;\n
        v8 += 16;\n
        v108 = v14;\n
    } while (v108 != 8);\n
    v173 = sub_401210(0x4000);\n
    g_40d198->field_264 = v173;\n
    if (v173)\n
        return 1;\n
    sub_4011c0(g_40d198);\n
}\n
", "4204237:sub_4026cd": null, "4204302:sub_40270e": null, "4204972:sub_4029ac": null, "4205163:sub_402a6b": null, "4205285:sub_402ae5": null, "4205318:sub_402b06": null, "4205582:sub_402c0e": null, "4205623:sub_402c37": null, "4205733:sub_402ca5": null, "4206415:sub_402f4f": null, "4206481:sub_402f91": null, "4206566:sub_402fe6": null, "4206641:sub_403031": null, "4206727:sub_403087": null, "4206897:sub_403131": null, "4206912:sub_403140": "typedef struct struct_0 {\n
    char padding_0[4240344];\n
    unsigned int field_40b3d8;\n
} struct_0;\n
\n
extern struct_1 *g_40d198;\n
\n
int sub_403140()\n
{\n
    char *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    void* v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    char v10;  // cl\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // edx\n
    struct_0 *v13;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx, Other Possible Types: unsigned int\n
    unsigned int *v15;  // edx, Other Possible Types: unsigned int\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ebp\n
\n
    v5 = &v6;\n
    g_40d198->field_14 = 3;\n
    g_40d198->field_10 = 1;\n
    g_40d198->field_18 = 0;\n
    *(&g_40d198->field_2d0) = 0x4200ff000000000000;\n
    *(&g_40d198->field_2e0) = 0x244200000000000000;\n
    *(&g_40d198->field_2f0) = 0x812400000000000000;\n
    *(&g_40d198->field_300) = 0x88100000000000000;\n
    *(&g_40d198->field_310) = 0x100800000000000000;\n
    g_40d198->field_324 = 0x10000000;\n
    g_40d198->field_320 = 0;\n
    g_40d198->field_2c0 = 0xff00ffff000000000000;\n
    g_40d198->field_2b0 = 1208925819333154198061055;\n
    g_40d198->field_0 = 1;\n
    sub_401ad0(&g_40d198->padding_270, 6, 64);\n
    v4 = &g_40d198->field_0 + 4;\n
    v3 = &g_40d198->field_0 + 8;\n
    v0 = &g_40d198->padding_270[0];\n
    v1 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v2 = v8;\n
        v9 = 0;\n
        do\n
        {\n
            v10 = (v1 + v9);\n
            v11 = (0 CONCAT 1) << (v10 & 31) >> 32;\n
            v12 = 1 << (v10 & 31);\n
            v14 = 0;\n
            if ((v10 & 32))\n
                v11 = v12;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v12 = 0;\n
            if (!(!(*((&g_40d198->field_2c0 + 8)) & v12)) || !(!(*((&g_40d198->field_2c0 + 12)) & v11)))\n
            {\n
                v13 = v14;\n
                v15 = v4;\n
                goto LABEL_40329f;\n
            }\n
            else\n
            {\n
                v13 = 0;\n
                if (!(!(*(&g_40d198->padding_2d4[0]) & v11)) || !(!(g_40d198->field_2d0 & v12)))\n
                {\n
LABEL_403296:\n
                    *(&v14) = v13 | 128;\n
                    v15 = v3;\n
LABEL_40329f:\n
                    v0[v9] = v14;\n
                    *(v15) = *(v15) + *((4240344 + 4 * v13));\n
                }\n
                else\n
                {\n
                    v14 = 1;\n
                    if (!(*(&g_40d198->padding_2d4[8]) & v11) && !(*(&g_40d198->padding_2d4[4]) & v12))\n
                    {\n
                        v13 = 1;\n
                        if (!(!(*(&g_40d198->padding_2e4[0]) & v11)) || !(!(g_40d198->field_2e0 & v12)))\n
                            goto LABEL_403296;\n
                        v14 = 2;\n
                        if (!(*(&g_40d198->padding_2e4[8]) & v11) && !(*(&g_40d198->padding_2e4[4]) & v12))\n
                        {\n
                            v13 = 2;\n
                            if (!(!(*(&g_40d198->padding_2f4[0]) & v11)) || !(!(g_40d198->field_2f0 & v12)))\n
                                goto LABEL_403296;\n
                            v14 = 3;\n
                            if (!(*(&g_40d198->padding_2f4[8]) & v11) && !(*(&g_40d198->padding_2f4[4]) & v12))\n
                            {\n
                                v13 = 3;\n
                                if (!(!(*(&g_40d198->padding_304[0]) & v11)) || !(!(g_40d198->field_300 & v12)))\n
                                    goto LABEL_403296;\n
                                v14 = 4;\n
                                if (!(*(&g_40d198->padding_304[8]) & v11) && !(*(&g_40d198->padding_304[4]) & v12))\n
                                {\n
                                    v13 = 4;\n
                                    if (!(!(*(&g_40d198->padding_314[0]) & v11)) || !(!(g_40d198->field_310 & v12)))\n
                                        goto LABEL_403296;\n
                                    v14 = 5;\n
                                    if (!(*(&g_40d198->padding_314[8]) & v11) && !(*(&g_40d198->padding_314[4]) & v12))\n
                                    {\n
                                        v16 = v12 & g_40d198->field_320;\n
                                        v17 = v11 & g_40d198->field_324;\n
                                        v13 = 5;\n
                                        if (!v17 && !v16)\n
                                            continue;\n
                                        goto LABEL_403296;\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
            v9 += 1;\n
        } while (v9 != 8);\n
        v8 = v2 + 1;\n
        v0 += 8;\n
        v1 += 8;\n
    } while (v8 != 8);\n
    g_40d198->field_21 = 6;\n
    sub_401ad0(&g_40d198->padding_22[2], 0, 64);\n
    g_40d198->field_26c = 0;\n
    g_40d198->field_268 = 0;\n
    return g_40d198;\n
}\n
", "4207131:sub_40321b": null, "4207225:sub_403279": null, "4207625:sub_403409": null, "4207632:sub_403410": "extern struct_0 *g_40d198;\n
\n
int sub_403410()\n
{\n
    unsigned long long v0;  // [bp-0x14]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
\n
    if (!g_40d198->field_0)\n
        return;\n
    if (!sub_4034c0())\n
    {\n
        v0 = *(&v2);\n
    }\n
    else\n
    {\n
        sub_403ac0();\n
        if (!sub_404b80())\n
        {\n
            sub_404bc0();\n
            v0 = *(&v2);\n
        }\n
        else if (!g_40d198->field_10)\n
        {\n
            return;\n
        }\n
        else\n
        {\n
            sub_403f00();\n
            return;\n
        }\n
    }\n
    sub_407590(*(&v1));\n
    return;\n
}\n
", "4207793:sub_4034b1": null, "4207808:sub_4034c0": "extern char g_402010;\n
extern struct_0 *g_40d198;\n
\n
int sub_4034c0()\n
{\n
    void* v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    int tmp_2;  // tmp #2\n
    int tmp_13;  // tmp #13\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7[174];  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v13;  // [bp+0x4]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // ebp\n
    unsigned int v17;  // edi\n
    unsigned int v18[174];  // edx\n
    unsigned int v19[174];  // eax, Other Possible Types: unsigned int\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // edx\n
    char v28;  // cl\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ebx\n
    unsigned int v31;  // esi\n
    char v32;  // ecx\n
    unsigned int v33;  // esi\n
    unsigned int v34;  // eax\n
    unsigned int v35;  // edx\n
    unsigned int v36;  // ecx\n
    unsigned int v37;  // cc_dep1\n
    unsigned int v38;  // cc_dep2\n
    unsigned int v40;  // esi\n
    unsigned int v41;  // edi\n
    unsigned int v42;  // eax\n
    unsigned int v43;  // ebx\n
    unsigned int v44;  // ecx\n
    unsigned int v45;  // edx\n
    unsigned int v46;  // eax\n
    unsigned int v47;  // cc_op\n
    unsigned int v48;  // cc_dep1\n
    unsigned int v49;  // ebx\n
    unsigned int v50;  // eax\n
    unsigned int v51;  // cc_op\n
    unsigned int v52;  // cc_dep1\n
    unsigned int v53;  // cc_dep1\n
    unsigned int v54;  // cc_dep2\n
    unsigned int v55;  // edx\n
    unsigned int v56;  // eax\n
    unsigned int v57;  // cc_op\n
    unsigned int v58;  // cc_dep1\n
    char v59;  // cl\n
    char v60;  // cl\n
    char v61;  // bl\n
    char v62;  // dl\n
    unsigned int v63;  // esi\n
    char v64;  // dl\n
    void* v65;  // eax, Other Possible Types: unsigned int\n
    unsigned int v66;  // bl, Other Possible Types: char\n
    unsigned int v67;  // ebx\n
    unsigned int v68;  // esi\n
    unsigned int v69;  // edx\n
    unsigned int v70;  // eax\n
    void* v71;  // edx, Other Possible Types: unsigned int\n
    unsigned int v72;  // esi\n
    unsigned int v73;  // ebx\n
    char v74;  // dl\n
    unsigned int v75;  // ebp\n
    unsigned int v76;  // eax\n
    char v77;  // al\n
    unsigned int v78;  // eax\n
    unsigned int v79;  // edx\n
    unsigned int v80;  // edi\n
    unsigned int v81;  // cc_dep1\n
    unsigned int v82;  // edx\n
    unsigned int v83;  // ebp\n
    unsigned int v84;  // edi\n
    unsigned int v85;  // edi\n
    char v86;  // dl\n
    unsigned int v87;  // ebp\n
    unsigned int v88;  // eax\n
    unsigned int v89;  // eax\n
    unsigned int v90;  // edx\n
    unsigned int v91;  // cc_op\n
    unsigned int v92;  // cc_dep1\n
    unsigned int v93;  // ebp\n
    unsigned int v94;  // eax\n
    unsigned int v95;  // ebp\n
    unsigned int v96;  // eax\n
    unsigned int v97;  // cc_op\n
    unsigned int v98;  // cc_dep1\n
    char v99;  // cl\n
    unsigned int v100;  // ebp\n
    unsigned int v101;  // ebx\n
    unsigned int v102;  // ebx\n
    unsigned int v103;  // eax\n
    unsigned int v104;  // ecx\n
    unsigned int v105;  // ebp\n
    unsigned int v106;  // eax\n
    unsigned int v107;  // ebp\n
    unsigned int v108;  // eax\n
    unsigned int v109;  // cc_op\n
    unsigned int v110;  // cc_dep1\n
    unsigned int v111;  // ebp\n
    unsigned int v112;  // ebx\n
    unsigned int v113[174];  // esi, Other Possible Types: unsigned int\n
    unsigned int v114;  // ebx\n
    unsigned int v115;  // eax\n
    char v116;  // al\n
    unsigned int v117;  // eax\n
    unsigned int v118;  // edi\n
    unsigned int v119;  // cc_dep1\n
    unsigned int v120;  // ebx\n
    unsigned int v121;  // edx\n
    unsigned int v122;  // cc_op\n
    unsigned int v123;  // cc_dep1\n
    unsigned int v124;  // ebp\n
\n
    v11 = &v12;\n
    v14 = *(&v13 + 2);\n
    v15 = v13;\n
    v16 = v15;\n
    v17 = v14;\n
    v18 = v14 - v15;\n
    v19 = -(v18);\n
    if (!(v18) < 0)\n
        v19 = v18;\n
    v7[0] = v19;\n
    v4 = v20;\n
    v21 = *(&v13 + 1);\n
    v22 = *(&v13 + 3);\n
    v23 = v22 - v21;\n
    v25 = -(v23);\n
    if (!(v23) < 0)\n
        v25 = v23;\n
    v10 = v25;\n
    v2 = v17;\n
    v9 = ([D] x86g_calculate_condition(0xc<32>, 0x4<32>, Conv(8->32, cl<1>), edi<4>, 0x0<32>) ? v17 : v16);\n
    v5 = (v21 < v22 ? v22 : v21);\n
    v0 = 0;\n
    v3 = v21;\n
    v6 = v22;\n
    if (v22 == v21 && v2 == v16)\n
    {\n
        v124 = v11;\n
        return;\n
    }\n
    v1 = v16;\n
    v28 = v6 + v2 * 8;\n
    v29 = (0 CONCAT 1) << (v28 & 31) >> 32;\n
    v30 = 1 << (v28 & 31);\n
    v31 = v4 >> 7;\n
    if ((v28 & 32))\n
        v29 = v30;\n
    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
        v30 = 0;\n
    v0 = 0;\n
    if (!(!(*(&g_40d198[1].padding_0[8 * v31]) & v30)) || !(!(*(&g_40d198[1].padding_0[4 + 8 * v31]) & v29)))\n
    {\n
        v124 = v11;\n
        return;\n
    }\n
    v8 = v29;\n
    if (v31 != g_40d198->field_c)\n
    {\n
LABEL_403a9e:\n
        v0 = 0;\n
        goto LABEL_403aa5__0;\n
    }\n
    else\n
    {\n
        v32 = v4 & 15;\n
        switch (v32)\n
        {\n
        case 0:\n
            v35 = v34;\n
            if ((v4 >> 7 & 1 ^ 1) == [D] x86g_calculate_condition(0xc<32>, 0x4<32>, Conv(8->32, Load(addr=stack_base-52, size=1, endness=Iend_LE)), Load(addr=stack_base-56, size=4, endness=Iend_LE), 0x0<32>))\n
                goto LABEL_403a9e;\n
            v89 = v6;\n
            if (v89 == v3 && v33 == 1)\n
            {\n
                v49 = v30 & g_40d198->field_2b0;\n
                v50 = v8 & g_40d198->field_2b4;\n
                v51 = 15;\n
                v52 = v50 | v49;\n
                v89 = v50 | v49;\n
                break;\n
            }\n
            if (v89 == v3 && v33 == 2)\n
            {\n
                v61 = v1;\n
                if (v4 >= 0 && v61 == 1)\n
                {\n
                    v62 = v3;\n
                    v63 = (0 CONCAT 1) << (v62 + 16 & 31) >> 32;\n
                    v67 = 1 << (v62 + 16 & 31);\n
                    if ((v62 + 16 & 32))\n
                        v63 = v67;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v67 = 0;\n
                    v74 += 24;\n
                    v75 = (0 CONCAT 1) << (v62 & 31) >> 32;\n
                    v76 = 1 << (v62 & 31);\n
                    if ((v74 + 24 & 32))\n
                        v75 = v76;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v76 = 0;\n
                    v93 = v75 | v63;\n
                    v94 = v76 | v67;\n
                    v95 = v93 & g_40d198->field_2b4;\n
                    v96 = v94 & g_40d198->field_2b0;\n
                    v97 = 15;\n
                    v98 = v96 | v95;\n
                    v89 = v96 | v95;\n
                    break;\n
                }\n
                if (v4 < 0)\n
                {\n
                    v0 = 0;\n
                    if (v61 != 6)\n
                    {\n
                        v124 = v11;\n
                        return;\n
                    }\n
                    v64 = v3;\n
                    v68 = (0 CONCAT 1) << (v62 + 40 & 31) >> 32;\n
                    v85 = 1 << (v62 + 40 & 31);\n
                    if ((v62 + 40 & 32))\n
                        v68 = v85;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v85 = 0;\n
                    v86 += 32;\n
                    v87 = (0 CONCAT 1) << (v62 & 31) >> 32;\n
                    v88 = 1 << (v62 & 31);\n
                    if ((v86 + 32 & 32))\n
                        v87 = v88;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v88 = 0;\n
                    v105 = v87 | v68;\n
                    v106 = v88 | v85;\n
                    v107 = v105 & g_40d198->field_2b4;\n
                    v108 = v106 & g_40d198->field_2b0;\n
                    v109 = 15;\n
                    v110 = v108 | v107;\n
                    v89 = v108 | v107;\n
                    break;\n
LABEL_40396c:\n
                    *(&v89) = [D] x86g_calculate_condition(0x4<32>, cc_op<4>, cc_dep1<4>, 0x0<32>, 0x0<32>);\n
                    goto LABEL_40396f;\n
                }\n
            }\n
            if (v35 == 1)\n
            {\n
                v0 = 0;\n
                if (v33 != 1)\n
                {\n
                    v124 = v11;\n
                    return;\n
                }\n
                *(&v89) = (v8 & g_40d198->field_2b4) || (v30 & g_40d198->field_2b0);\n
LABEL_40396f:\n
                v0 = v89;\n
                v124 = v11;\n
                return;\n
            }\n
            goto LABEL_403a9e;\n
        case 1:\n
            v36 = v33 ^ 2 | v34 ^ 1;\n
            *(&v36) = (!(v33 ^ 1) && !(v34 ^ 2)) | !v36;\n
            v0 = v36;\n
            v124 = v11;\n
            return;\n
        case 2:\n
            if (!(v34 == v33))\n
                goto LABEL_403a9e;\n
            *(&v34) = [D] x86g_calculate_condition(0xc<32>, 0x4<32>, Load(addr=stack_base-36, size=4, endness=Iend_LE), Conv(8->32, Load(addr=stack_base-48, size=1, endness=Iend_LE)), 0x0<32>);\n
            v37 = v2;\n
            v38 = v1;\n
            goto LABEL_4038ea;\n
        case 3:\n
            v0 = v34;\n
            if (v6 == v3)\n
            {\n
                v40 = g_40d198->field_2b0;\n
                v41 = g_40d198->field_2b4;\n
                v42 = sub_404170(v33);\n
                goto LABEL_403845;\n
            }\n
            else\n
            {\n
                if (!(v2 == v1))\n
                    goto LABEL_403a9e;\n
                v40 = g_40d198->field_2b0;\n
                v41 = g_40d198->field_2b4;\n
                goto LABEL_403838;\n
            }\n
        case 4:\n
            v0 = v34;\n
            v34 = v6;\n
            if (v34 == v3)\n
            {\n
                v45 = v29 & g_40d198->field_2b4;\n
                v46 = sub_404170(v33) & g_40d198->field_2b0;\n
                v47 = 15;\n
                v48 = v46 | v45;\n
                v89 = v46 | v45;\n
                break;\n
            }\n
            v43 = v1;\n
            v44 = v2;\n
            if (v44 == v43)\n
            {\n
                v40 = g_40d198->field_2b0;\n
                v41 = g_40d198->field_2b4;\n
                goto LABEL_403838;\n
            }\n
            else\n
            {\n
                if (!(v33 == v0))\n
                    goto LABEL_403a9e;\n
                *(&v34) = [D] x86g_calculate_condition(0xc<32>, 0x4<32>, Conv(8->32, al<1>), Conv(8->32, Load(addr=stack_base-48, size=1, endness=Iend_LE)), 0x0<32>);\n
                v53 = v44;\n
                v54 = v43;\n
LABEL_4038ea:\n
                v59 = 64 - v33 * 8;\n
                v66 = v9 * 8;\n
                if (!([D] x86g_calculate_condition(0xc<32>, 0x4<32>, cc_dep1<4>, cc_dep2<4>, 0x0<32>) ^ v34))\n
                {\n
                    v69 = (&g_402010 CONCAT 134480385) >> (v59 & 31);\n
                    v65 = &g_402010 >> (v59 & 31);\n
                    if ((v59 & 32))\n
                        v69 = v65;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v65 = 0;\n
                    v66 = (v66 | 1) + v5 + v33;\n
                }\n
                else\n
                {\n
                    v69 = (132104 CONCAT 270549120) >> (v59 & 31);\n
                    v65 = 132104 >> (v59 & 31);\n
                    if ((v59 & 32))\n
                        v69 = v65;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v65 = 0;\n
                    *(&v66) = (v66 + v5) + 8;\n
                }\n
                v70 = (v65 CONCAT v69) << (v66 & 31) >> 32;\n
                v71 = v69 << (v66 & 31);\n
                if ((v66 & 32))\n
                    v70 = v71;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v71 = 0;\n
                v89 = v70 & g_40d198->field_2b4;\n
                v90 = v71 & g_40d198->field_2b0;\n
                v91 = 15;\n
                v92 = v90 | v89;\n
                break;\n
            }\n
        case 5:\n
            if (v34 <= 1)\n
            {\n
                v32 = 1;\n
                *(&v0) = v32;\n
                if (v33 < 2)\n
                {\n
                    v124 = v11;\n
                    return;\n
                }\n
            }\n
            v7[0] = g_40d198;\n
            if (!(v3 == 4))\n
                goto LABEL_403a9e;\n
            if (!(v34 == 2))\n
                goto LABEL_403a9e;\n
            v60 = v2;\n
            v0 = 0;\n
            if (v60 != v1)\n
            {\n
                v124 = v11;\n
                return;\n
            }\n
            if (v4 >= 0 && !v60)\n
                goto LABEL_40372e;\n
            if (!(v4 < 0))\n
                goto LABEL_403a9e;\n
            v0 = 0;\n
            if (v2 != 7)\n
            {\n
                v124 = v11;\n
                return;\n
            }\n
LABEL_40372e:\n
            v2 = sub_4041f0();\n
            v72 = v29;\n
            v73 = v1 * 8;\n
            if (v6 == 2)\n
            {\n
                v1 = v73;\n
                v77 = v1;\n
                tmp_2 = v77 | 1;\n
                v78 = (0 CONCAT 1) << ((v77 | 1) & 31) >> 32;\n
                v79 = 0;\n
                v80 = 1 << (tmp_2 & 31);\n
                v81 = tmp_2 & 32;\n
                if ((tmp_2 & 32))\n
                    v78 = v80;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v80 = 0;\n
                v99 = v1 | 2;\n
                v100 = (0 CONCAT 1) << (v99 & 31) >> 32;\n
                v101 = 1 << (v99 & 31);\n
                if ((v99 & 32))\n
                    v100 = v101;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v101 = 0;\n
                v111 = v100 | v78;\n
                v112 = v101 | v80;\n
                tmp_13 = v2 & v112 | v72 & v111;\n
                v0 = 0;\n
                v113 = v7;\n
                if (tmp_13)\n
                {\n
                    v124 = v11;\n
                    return;\n
                }\n
                v116 = v1;\n
                tmp_1 = v77 | 3;\n
                v117 = (0 CONCAT 1) << ((v77 | 3) & 31) >> 32;\n
                v118 = 1 << (tmp_1 & 31);\n
                v119 = tmp_1 & 32;\n
                v104 = v1;\n
                if ((tmp_1 & 32))\n
                    v117 = v118;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v118 = 0;\n
                v120 = (v112 | v118) & v113[172] | (v111 | v117) & v113[173];\n
                v0 = 0;\n
                if (v120)\n
                {\n
                    v124 = v11;\n
                    return;\n
                }\n
            }\n
            else\n
            {\n
                v82 = v73;\n
                v83 = (0 CONCAT 1) << ((v73 | 5) & 31) >> 32;\n
                v84 = 1 << ((v73 | 5) & 31);\n
                if (((v73 | 5) & 32))\n
                    v83 = v84;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v84 = 0;\n
                v102 = (0 CONCAT 1) << ((v73 | 6) & 31) >> 32;\n
                v103 = 1 << ((v82 | 6) & 31);\n
                v104 = v82;\n
                if (((v82 | 6) & 32))\n
                    v102 = v103;\n
                v0 = 0;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v103 = 0;\n
                v114 = v102 | v83;\n
                v115 = v103 | v84;\n
                tmp_13 = v2 & v115 | v72 & v114;\n
                v113 = v7;\n
                if (tmp_13)\n
                {\n
                    v124 = v11;\n
                    return;\n
                }\n
                if (!(!(v114 & *((v113 + 692)))) || !(!(v115 & *((v113 + 688)))))\n
                    goto LABEL_403a9e;\n
                v79 = 7;\n
            }\n
            v89 = v3 + v104;\n
            if (!*((v113 + v89 + 36)))\n
            {\n
                v121 = v79 | v104;\n
                v122 = 4;\n
                v123 = *((v113 + v121 + 36));\n
                break;\n
            }\n
        default:\n
LABEL_403a9e:\n
            v0 = 0;\n
LABEL_403aa5__0:\n
            v124 = v11;\n
            return;\n
        }\n
LABEL_403838:\n
        v42 = sub_4041c0();\n
LABEL_403845:\n
        v55 = v29 & v41;\n
        v56 = v42 & v40;\n
        v57 = 15;\n
        v58 = v56 | v55;\n
        v89 = v56 | v55;\n
        goto LABEL_40396c;\n
    }\n
}\n
", "4209329:sub_403ab1": null, "4209344:sub_403ac0": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4240344];\n
    unsigned int field_40b3d8;\n
} struct_1;\n
\n
extern struct_2 *g_40d198;\n
\n
int sub_403ac0()\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3[174];  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4[174];  // [bp-0x2c]\n
    unsigned int v5[174];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v13;  // [bp+0x4]\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edx\n
    unsigned int v19[174];  // ecx\n
    unsigned int v20;  // ebp\n
    unsigned int v21;  // eax\n
    unsigned int v23;  // ebx\n
    unsigned int v24[174];  // edi, Other Possible Types: unsigned int\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // esi\n
    void* v29;  // eax\n
    unsigned int v30;  // ebp\n
    struct_0 *v31;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v32;  // ecx, Other Possible Types: char, unsigned int\n
    unsigned int v33;  // edi\n
    struct_1 *v34;  // esi\n
    unsigned int v35;  // ebx\n
    unsigned int v36;  // edx\n
    char v39;  // dl\n
    unsigned int v40[174];  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // esi\n
    unsigned int v43;  // ebx\n
    unsigned int v44[174];  // edx\n
    unsigned int v45;  // esi\n
    unsigned int v46;  // ebx\n
    unsigned int v47;  // esi\n
    unsigned int v48;  // ebx\n
    unsigned int v49[174];  // ecx\n
    unsigned int v50;  // ebp\n
    unsigned int v51;  // edx\n
    unsigned int v52[174];  // eax\n
    unsigned int v53;  // ecx\n
    unsigned int v54;  // edx\n
    unsigned int v55;  // eax\n
    unsigned int v56;  // edx\n
    unsigned int v57;  // esi\n
    unsigned int v58;  // eax\n
    unsigned int v59;  // ecx\n
    unsigned int v61;  // edx\n
    unsigned int v62;  // ebp\n
\n
    v11 = &v12;\n
    v15 = v14;\n
    v3[0] = *(&v13 + 2);\n
    v8 = *(&v13 + 3);\n
    v16 = v8 + v3 * 8;\n
    v17 = (0 CONCAT 1) << (v16 & 31) >> 32;\n
    v18 = 1 << (v16 & 31);\n
    v1 = v16;\n
    if ((v16 & 32))\n
        v17 = v18;\n
    v0 = v17;\n
    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
        v18 = 0;\n
    v9 = *(&v13 + 1);\n
    v19 = v9 + v13 * 8;\n
    v20 = (0 CONCAT 1) << (v19[0] & 31) >> 32;\n
    v21 = 1 << (v19[0] & 31);\n
    v5[0] = v19;\n
    if ((v19[0] & 32))\n
        v20 = v21;\n
    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
        v21 = 0;\n
    v6 = v15;\n
    v23 = v15 / 128;\n
    v2 = v15 & 15;\n
    v24 = g_40d198;\n
    v25 = &(&g_40d198->field_0)[4 * v2];\n
    v26 = ~(v20);\n
    *((v25 + v23 * 8 + 716)) = *((v25 + v23 * 8 + 716)) & v26 | v0;\n
    v27 = ~(v21);\n
    *((v25 + v23 * 8 + 712)) = *((v25 + v23 * 8 + 712)) & v27 | v18;\n
    v28 = v0;\n
    *(&(&g_40d198[1].padding_4)[v23]) = *(&(&g_40d198[1].padding_4)[v23]) & v26 | v28;\n
    v7 = v23;\n
    (&g_40d198[1].field_0)[2 * v7] = (&g_40d198[1].field_0)[2 * v7] & v27 | v18;\n
    g_40d198->field_2b0 = v27 & g_40d198->field_2b0 | v18;\n
    g_40d198->field_2b4 = v26 & g_40d198->field_2b4 | v28;\n
    v29 = 0;\n
    *(&v29) = v6 >> 7 & 1 ^ 1;\n
    v10 = *((700 + &g_40d198->field_0 + 0x8 * v29));\n
    v30 = *((696 + &g_40d198->field_0 + 0x8 * v29));\n
    v31 = &v13;\n
    if (!(*((696 + &g_40d198->field_0 + 0x8 * v29)) & v18) && !(v10 & v28))\n
    {\n
        v32 = 0;\n
    }\n
    else\n
    {\n
        v32 = g_40d198->padding_270[v1] & 15;\n
        v4[0] = g_40d198;\n
        v33 = ~(v0);\n
        v34 = v32 * 16;\n
        v35 = v4 + 0x8 * v29;\n
        *(&v34->padding_0[716 + v35]) = *(&v34->padding_0[716 + v35]) & v33;\n
        v36 = ~(v18);\n
        *(&v34->padding_0[712 + v35]) = *(&v34->padding_0[712 + v35]) & v36;\n
        v31 = &v13;\n
        v24 = v4;\n
        *((v24 + v29 * 8 + 700)) = v10 & v33;\n
        *((v24 + v29 * 8 + 696)) = v30 & v36;\n
        *((v24 + v29 * 4 + 4)) = *((v24 + v29 * 4 + 4)) - *((4240344 + 0x4 * v32));\n
        *(&v32) = v32 | 64;\n
    }\n
    *((v31 + 6)) = v32;\n
    v39 = v6;\n
    *((v24 + v1 + 624)) = v39;\n
    *(624 + v24 + &v5[0]) = 6;\n
    if (v2 == 5 && !(v8 - v9 + 2 & -5))\n
    {\n
        v40 = v3 * 8;\n
        v41 = v7;\n
        v0 = *((v24 + v41 * 8 + 760));\n
        v1 = *((v24 + v41 * 8 + 764));\n
        if (v8 != 2)\n
        {\n
            v44 = v40 | 7;\n
            v4[0] = v44;\n
            v45 = (0 CONCAT 1) << (v44 & 31) >> 32;\n
            v46 = 1 << (v44 & 31);\n
            if ((v44[0] & 32))\n
                v45 = v46;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v46 = 0;\n
            v47 = ~(v45);\n
            v52 = v40 | 5;\n
            v2 = (0 CONCAT 1) << (v52 & 31) >> 32;\n
            v48 = ~(v46);\n
            v0 &= v48;\n
            v53 = 1 << (v52 & 31);\n
            v5 = v52;\n
            v54 = v2;\n
            if ((v5 & 32))\n
                v54 = v53;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v53 = 0;\n
            v2 = v53;\n
            v55 = v54;\n
            v1 = v1 & v47 | v54;\n
            v0 |= v53;\n
            v3 = v4;\n
        }\n
        else\n
        {\n
            v42 = (0 CONCAT 1) << (v40 & 31) >> 32;\n
            v43 = 1 << (v40 & 31);\n
            if ((v40[0] & 32))\n
                v42 = v43;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v43 = 0;\n
            v47 = ~(v42);\n
            v48 = ~(v43);\n
            v1 &= v47;\n
            v49 = v40 | 3;\n
            v3[0] = v40;\n
            v50 = (0 CONCAT 1) << (v49[0] & 31) >> 32;\n
            v51 = 1 << (v49[0] & 31);\n
            v5[0] = v49;\n
            if ((v49[0] & 32))\n
                v50 = v51;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v51 = 0;\n
            v1 |= v50;\n
            v2 = v51;\n
            v0 = v0 & v48 | v51;\n
            v55 = v50;\n
        }\n
        *((v24 + v7 * 8 + 760)) = v0;\n
        *((v24 + v7 * 8 + 764)) = v1;\n
        v56 = v2;\n
        *((v24 + v7 * 8 + 696)) = *((v24 + v7 * 8 + 696)) & v48 | v56;\n
        *((v24 + v7 * 8 + 700)) = *((v24 + v7 * 8 + 700)) & v47 | v55;\n
        v57 = v47 & *((v24 + 692)) | v55;\n
        *((v24 + 688)) = v48 & *((v24 + 688)) | v56;\n
        *((v24 + 692)) = v57;\n
        *((v24 + v3 + 624)) = 6;\n
        v39 = v6;\n
        *((v24 + v5 + 624)) = v39 & 128 | 3;\n
        v31 = &v13;\n
    }\n
    v58 = *(v31);\n
    v59 = *((v31 + 4));\n
    *((v24 + 32)) = v59;\n
    *((v24 + 28)) = v58;\n
    *((v24 + 33)) = v39;\n
    *((v24 + v9 + v58 * 8 + 36)) = *((v24 + v9 + v58 * 8 + 36)) + 1;\n
    v61 = *((v24 + 620));\n
    if (v61 == 64)\n
    {\n
        *(v24) = 0;\n
        v62 = v11;\n
        return;\n
    }\n
    *((v24 + 620)) = v61 + 1;\n
    *((v24 + v61 * 8 + 104)) = v59;\n
    *((v24 + v61 * 8 + 100)) = v58;\n
    *((v24 + 12)) = !*((v24 + 12));\n
    v62 = v11;\n
    return;\n
}\n
", "4210265:sub_403e59": null, "4210272:sub_403e60": "extern struct_0 *g_40d198;\n
\n
int sub_403e60(unsigned int v0)\n
{\n
    if (g_40d198->field_0)\n
        g_40d198->field_c = v0;\n
    return g_40d198;\n
}\n
", "4210290:sub_403e72": null, "4210304:sub_403e80": "extern struct_0 *g_40d198;\n
\n
int sub_403e80(unsigned int v0)\n
{\n
    if (g_40d198->field_0)\n
        g_40d198->field_10 = v0;\n
    return g_40d198;\n
}\n
", "4210322:sub_403e92": null, "4210336:sub_403ea0": "extern struct_0 *g_40d198;\n
\n
int sub_403ea0(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // ecx\n
\n
    if (!g_40d198->field_0)\n
        return g_40d198;\n
    v2 = v1;\n
    if (v2 <= 0)\n
    {\n
        v0 = \"sd\";\n
        return sub_4075f0(v1);\n
    }\n
    else if (v2 >= 9)\n
    {\n
        v0 = \"sd\";\n
        return sub_4075f0(v1);\n
    }\n
    else\n
    {\n
        g_40d198->field_14 = v2;\n
        return g_40d198;\n
    }\n
}\n
", "4210394:sub_403eda": null, "4210400:sub_403ee0": "extern struct_0 *g_40d198;\n
\n
int sub_403ee0(unsigned int v0)\n
{\n
    if (g_40d198->field_0)\n
        g_40d198->field_18 = v0;\n
    return g_40d198;\n
}\n
", "4210418:sub_403ef2": null, "4210432:sub_403f00": "extern struct_0 *g_40d198;\n
\n
int sub_403f00()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned int v5;  // eax\n
\n
    if (!g_40d198->field_0)\n
        return g_40d198;\n
    v0 = &v1;\n
    v5 = sub_403f90(10000000);\n
    g_40d198->field_268 = v5 < -199;\n
    if (v5 == -10000000)\n
    {\n
        v2 = \"resign\\n
\";\n
        return sub_407480();\n
    }\n
    sub_4074a0();\n
    return sub_403ac0();\n
}\n
", "4210571:sub_403f8b": null, "4210576:sub_403f90": "extern struct_0 *g_40d198;\n
\n
int sub_403f90(unsigned int v11, unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int *v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // edi\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // eax\n
    unsigned int *v23;  // ebx, Other Possible Types: unsigned int\n
\n
    v9 = &v10;\n
    v13 = v12;\n
    v4 = 0;\n
    v6 = v14 * 0x800 + g_40d198->field_264;\n
    sub_405000();\n
    v5 = v4;\n
    if (!v5)\n
        return -10000000;\n
    v2 = -(v11);\n
    v3 = v14;\n
    v1 = v14 + 1;\n
    v21 = -10000000;\n
    v23 = 0;\n
    while (true)\n
    {\n
        v15 = v6;\n
        v16 = *((v15 + v23 * 8));\n
        v17 = *((v15 + v23 * 8 + 4));\n
        v8 = v17;\n
        v7 = v16;\n
        if ((g_40d198[1].padding_0[8 + (v7 << 8 >> 21 & -8) + (v7 >> 24)] & 15) == 5)\n
            return 10000000;\n
        sub_403ac0();\n
        if (g_40d198->field_14 != v3)\n
        {\n
            v0 = v0;\n
            v18 = sub_403f90(v0, NULL);\n
        }\n
        else\n
        {\n
            v0 = -(v13);\n
            v18 = sub_406f00();\n
        }\n
        v19 = v18;\n
        sub_404bc0(v0);\n
        if (!v3)\n
        {\n
            v22 = (!g_40d198->field_18 ? sub_4070d0() - 2 : 0) - v19;\n
            if (v22 > v21)\n
                v21 = v22;\n
            if (!([D] x86g_calculate_condition(0xe<32>, 0x6<32>, eax<4>, ebp<4>, 0x0<32>)))\n
            {\n
                *(a0) = *(&v7);\n
                v21 = v22;\n
            }\n
        }\n
        else if (v21 <= v21)\n
        {\n
            v21 = -(v18);\n
        }\n
        if (v21 > v13)\n
            v13 = v21;\n
        if (v13 >= v11)\n
            return v13;\n
        v23 += 1;\n
        if (v5 == v23)\n
            return v21;\n
    }\n
}\n
", "4210802:sub_404072": null, "4210863:sub_4040af": null, "4210962:sub_404112": null, "4210976:sub_404120": "extern struct_0 *g_40d198;\n
\n
int sub_404120()\n
{\n
    g_40d198->field_0 = 0;\n
    return g_40d198;\n
}\n
", "4210988:sub_40412c": null, "4210992:sub_404130": "extern struct_0 *g_40d198;\n
\n
int sub_404130()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    if (!g_40d198->field_0)\n
    {\n
        return g_40d198;\n
    }\n
    else if (!g_40d198->field_268)\n
    {\n
        return g_40d198;\n
    }\n
    else\n
    {\n
        v0 = \"offer draw\\n
\";\n
        return sub_407480();\n
    }\n
}\n
", "4211016:sub_404148": null, "4211024:sub_404150": "extern struct_0 *g_40d198;\n
\n
int sub_404150()\n
{\n
    if (!(!g_40d198->field_0))\n
        goto LABEL_0x404bc0;\n
    return g_40d198;\n
}\n
", "4211039:sub_40415f": null, "4211040:sub_404160": "extern struct_0 *g_40d198;\n
\n
int sub_404160()\n
{\n
    return g_40d198->field_18;\n
}\n
", "4211049:sub_404169": null, "4211056:sub_404170": "int sub_404170(char v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // ebx\n
    char v8;  // cl\n
    char v9;  // cl\n
    unsigned int v10;  // cc_dep1\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    char v14;  // bl\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = v6;\n
    v7 = 8 - v3;\n
    v9 = v8 + v7 * 8;\n
    v11 = (16843009 CONCAT 0x1010100) << (v9 & 31) >> 32;\n
    v12 = 0x1010100 << (v9 & 31);\n
    v10 = v9 & 32;\n
    if ((v9 & 32))\n
        v11 = v12;\n
    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (bl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
        v12 = 0;\n
    v14 = (v7 - v13) * 8;\n
    v15 = (v11 CONCAT v12) >> (v14 & 31);\n
    v16 = v11 >> (v14 & 31);\n
    if ((v14 & 32))\n
        v15 = v16;\n
    return v15;\n
}\n
", "4211127:sub_4041b7": null, "4211136:sub_4041c0": "int sub_4041c0(char v1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // esi\n
    char v3;  // dl\n
    char v4;  // cl\n
    char v6;  // cl\n
\n
    v0 = v2;\n
    v6 = v3 + v4 * 8 + 1;\n
    if (!([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>)))\n
        return 127 >> (8 - v1 & 31) << (v6 & 31);\n
    return 0;\n
}\n
", "4211177:sub_4041e9": null, "4211184:sub_4041f0": "typedef struct struct_0 {\n
    char padding_0[4248480];\n
    unsigned int field_40d3a0;\n
} struct_0;\n
\n
extern char g_400000;\n
extern struct_1 *g_40d198;\n
extern char g_40d1a0;\n
extern char g_40d1a4;\n
extern char g_40d3a0;\n
\n
int sub_4041f0()\n
{\n
    int tmp_8;  // tmp #8\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_13;  // tmp #13\n
    int tmp_17;  // tmp #17\n
    int tmp_29;  // tmp #29\n
    int tmp_18;  // tmp #18\n
    int tmp_20;  // tmp #20\n
    int tmp_14;  // tmp #14\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6[182];  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12[182];  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    unsigned int v19;  // ebx\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // ecx\n
    unsigned int v23;  // edx\n
    unsigned int v25;  // edx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // ebp\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // esi\n
    void* v33;  // edi, Other Possible Types: unsigned int\n
    unsigned int v34;  // ecx\n
    unsigned int v35[1061994];  // ebx, Other Possible Types: unsigned int\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // ecx\n
    unsigned int v38;  // ecx\n
    char v39;  // cl\n
    unsigned int v40;  // eax\n
    unsigned int v41[182];  // ecx\n
    unsigned int v42[182];  // esi, Other Possible Types: unsigned int\n
    unsigned int v43;  // ebx\n
    unsigned int v44[182];  // ebx, Other Possible Types: unsigned int\n
    unsigned int v45;  // eax\n
    unsigned int v46;  // ecx\n
    unsigned int v47;  // edi\n
    unsigned int v48[182];  // eax\n
    unsigned int v49;  // eax\n
    unsigned int v50;  // edx\n
    unsigned int v51;  // ebx\n
    unsigned int v52;  // esi\n
    unsigned int v53;  // ebx\n
    unsigned int v54;  // ebp\n
    unsigned int v55[182];  // eax\n
    unsigned int v56;  // eax\n
    unsigned int v57;  // esi\n
    unsigned int v58;  // esi\n
    unsigned int v59;  // ecx, Other Possible Types: char\n
    unsigned int v60;  // ebp\n
    unsigned int v61;  // edi\n
    unsigned int v62;  // ebx\n
    unsigned int v63;  // eax\n
    unsigned int v64[182];  // eax\n
    unsigned int v65;  // ebp\n
    unsigned int v66;  // edi\n
    unsigned int v67;  // ecx\n
    unsigned int v68[182];  // eax\n
    unsigned int v69;  // ecx\n
    char v70;  // cl\n
    unsigned int v71;  // ebx\n
    unsigned int v72;  // edi\n
    void* v73;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v74;  // ecx\n
    unsigned int v75;  // eax\n
    unsigned int v76[182];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v77;  // ebx\n
    void* v78;  // esi, Other Possible Types: unsigned int\n
    unsigned int v79;  // edi\n
    unsigned int v80;  // eax\n
    unsigned int v81[182];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v82;  // edi\n
    unsigned int v83[182];  // edi, Other Possible Types: unsigned int\n
    unsigned int v84;  // ecx\n
    unsigned int v85;  // eax\n
    unsigned int v86;  // edi\n
    unsigned int v87;  // ecx\n
    unsigned int v88;  // ebp\n
    char v89;  // cl\n
    unsigned int v90;  // edi\n
    unsigned int v91;  // ebx\n
    unsigned int v92;  // ecx\n
    unsigned int v93[182];  // eax\n
    unsigned int v94;  // esi\n
    unsigned int v95;  // eax\n
    char v96;  // cl\n
    unsigned int v97;  // edi\n
    unsigned int v98;  // ebx\n
    unsigned int v99[182];  // eax\n
    unsigned int v101;  // esi\n
    unsigned int v102;  // ebp\n
    unsigned int v103;  // eax\n
    unsigned int v104;  // edx\n
    unsigned int v105;  // ebp\n
    unsigned int v106;  // ecx\n
    unsigned int v107;  // edi\n
    unsigned int v108;  // ebx\n
    unsigned int v109;  // esi\n
    unsigned int v110[182];  // eax\n
    unsigned int v111;  // ebp\n
    unsigned int v112;  // cc_dep1\n
    unsigned int v113;  // ecx\n
    unsigned int v115;  // esi\n
    char v116;  // cl\n
    unsigned int v117;  // edi\n
    unsigned int v118;  // ebx\n
    unsigned int v119;  // edi\n
    unsigned int v120;  // ebp\n
    char v121;  // cl\n
    unsigned int v122;  // edi\n
    unsigned int v123;  // ebx\n
    char v124;  // cl\n
    unsigned int v125;  // edi\n
    unsigned int v126;  // ebx\n
    char v127;  // cl\n
    unsigned int v128;  // edi\n
    unsigned int v129;  // ebx\n
    unsigned int v130;  // eax\n
    unsigned int v131;  // ebx\n
    unsigned int v132;  // esi\n
    unsigned int v133;  // ebp\n
    unsigned int v134;  // edi\n
    char v135;  // cl\n
    void* v136;  // eax, Other Possible Types: unsigned int\n
    unsigned int v137;  // edi\n
    void* v138;  // eax, Other Possible Types: unsigned int\n
    char v139;  // cl\n
    unsigned int v140;  // esi\n
    unsigned int v141;  // ebp\n
    unsigned int v142[182];  // eax\n
    unsigned int v143;  // ebx\n
    unsigned int v144;  // edi\n
    unsigned int v145;  // eax\n
    unsigned int v146;  // edx\n
    unsigned int v147;  // eax\n
    unsigned int v148;  // edx\n
    unsigned int v149;  // ebp\n
    unsigned int v150;  // eax\n
    unsigned int v152;  // ebx\n
    unsigned int v153;  // eax\n
    unsigned int v154;  // eax\n
    unsigned int v155;  // edi\n
    unsigned int v156[182];  // ebx\n
    unsigned int v157;  // esi\n
    struct_0 *v158;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v159;  // edi\n
    struct_0 *v160;  // edi, Other Possible Types: unsigned int\n
    unsigned int v161;  // eax\n
\n
    v16 = &v17;\n
    v15 = v19;\n
    v14 = v20;\n
    v13 = v21;\n
    v11 = v22;\n
    if (!v22)\n
    {\n
        v25 = g_40d198->field_2c8;\n
        v26 = g_40d198->field_2cc;\n
        v27 = ((v26 CONCAT v25) * 0x200 >> 32) & -16843010;\n
        v50 = v25 * 128 & 0x7f7f7f00 | v25 * 0x200 & -0x1010200;\n
        v29 = ((v26 CONCAT v25) * 128 >> 32) & 2139062143;\n
    }\n
    else\n
    {\n
        v23 = g_40d198->field_2d4;\n
        v27 = v23 / 128 & 16711422;\n
        v50 = ((g_40d198->field_2d4 CONCAT g_40d198->field_2d0) * 0x800000 >> 32) & 2139062143 | ((g_40d198->field_2d4 CONCAT g_40d198->field_2d0) * 0x2000000 >> 32) & -16843010;\n
        v29 = v23 / 0x200 & 8355711;\n
    }\n
    v30 = v29 | v27;\n
    v31 = v11;\n
    v32 = *(&g_40d198[1].padding_0[8 * v31]);\n
    v6[0] = g_40d198;\n
    v33 = *(&g_40d198[1].padding_0[4 + 8 * v31]);\n
    v34 = v32 | v33;\n
    if (!v32 && !v33)\n
    {\n
        v36 = v30;\n
    }\n
    else\n
    {\n
        v35 = -1;\n
        v36 = v30;\n
        while (true)\n
        {\n
            if (!(ExpCmpNE(v157, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v30 = (ExpCmpNE(v32, 0) ? tmp_8 : v30);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v30 = (ExpCmpNE(v32, 0) ? tmp_8 : v30);\n
            }\n
            if (!(ExpCmpNE(v72, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v37 = (ExpCmpNE(v33, 0) ? tmp_8 : v34);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v37 = (ExpCmpNE(v33, 0) ? tmp_8 : v34);\n
            }\n
            v38 = v37 + 32;\n
            if (v32)\n
                v38 = v30;\n
            v35 = v35 + v38 + 1;\n
            v36 |= *((0x8 * v35 + &g_40d1a4));\n
            v39 = v38 + 1;\n
            v50 |= *((0x8 * v35 + &g_40d1a0));\n
            v32 = (v33 CONCAT v32) >> (v39 & 31);\n
            v33 >>= v39 & 31;\n
            if ((v39 & 32))\n
                v32 = v33;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v33 = 0;\n
            v34 = v32 | v33;\n
            if (!v32 && !v33)\n
                break;\n
            if (v35 >= 63)\n
                break;\n
        }\n
    }\n
    v5 = v36;\n
    v40 = v11;\n
    v41 = v6;\n
    v58 = v41[1 + 12 + 2 * v40];\n
    v0 = v41[1 + 13 + 2 * v40];\n
    v73 = v41[1 + 9 + 2 * v40] | v0;\n
    v1 = v58;\n
    v72 = v41[1 + 8 + 2 * v40] | v58;\n
    if (!(!v72) || !(!v73))\n
    {\n
        v74 = -1;\n
        do\n
        {\n
            if (!(ExpCmpNE(v72, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v42 = (ExpCmpNE(v72, 0) ? tmp_8 : v58);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v42 = (ExpCmpNE(v72, 0) ? tmp_8 : v58);\n
            }\n
            v2 = v73;\n
            if (ExpCmpNE(v77, 0))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v43 = (ExpCmpNE(v73, 0) ? tmp_8 : v73);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v43 = (ExpCmpNE(v73, 0) ? tmp_8 : v73);\n
            }\n
            v44 = v43 + 32;\n
            v3 = v72;\n
            if (v72)\n
                v44 = v42;\n
            v45 = v44 + v74 + 1;\n
            v12[0] = v44;\n
            v46 = v74 + v44 + 8;\n
            if ((v45 >> 31 & 1 ^ 1))\n
                v46 = v45;\n
            v7 = v46;\n
            v52 = v45 - (v46 & -8);\n
            v9 = v45;\n
            v8 = v52;\n
            if (v52 <= 6)\n
            {\n
                v51 = (0 CONCAT 1) << (v45 + 1 & 31) >> 32;\n
                v47 = 1 << (v45 + 1 & 31);\n
                if ((v45 + 1 & 32))\n
                    v51 = v47;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v47 = 0;\n
                v48 = v6;\n
                v4 = v48[172];\n
                v10 = v48[173];\n
                v49 = v5;\n
                while (true)\n
                {\n
                    v50 |= v47;\n
                    v49 |= v51;\n
                    if (!(!(v10 & v51)) || !(!(v4 & v47)))\n
                        break;\n
                    v51 = (v51 CONCAT v47) * 2 >> 32;\n
                    v47 *= 2;\n
                    tmp_13 = v52;\n
                    v52 += 1;\n
                    if (tmp_13 >= 6)\n
                        break;\n
                }\n
                v5 = v49;\n
                if (v8 <= 0)\n
                    goto LABEL_404454;\n
            }\n
            v53 = (0 CONCAT 1) << (v9 - 1 & 31) >> 32;\n
            v54 = 1 << (v9 - 1 & 31);\n
            if ((v9 - 1 & 32))\n
                v53 = v54;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v54 = 0;\n
            v55 = v6;\n
            v4 = v55[172];\n
            v56 = v55[173];\n
            v57 = v8;\n
            while (true)\n
            {\n
                v50 |= v54;\n
                v5 |= v53;\n
                if (!(!(v56 & v53)) || !(!(v4 & v54)))\n
                    break;\n
                v54 = (v53 CONCAT v54) >> 1;\n
                v53 /= 2;\n
                tmp_17 = v57;\n
                v57 -= 1;\n
                if (tmp_17 <= 1)\n
                    break;\n
            }\n
LABEL_404454:\n
            v58 = v7 >> 3;\n
            v59 = v8 + v58 * 8;\n
            if (v9 > 55)\n
            {\n
                v62 = v58;\n
                v63 = v5;\n
            }\n
            else\n
            {\n
                v8 = v59;\n
                *(&v59) = v59 + 8;\n
                v60 = (0 CONCAT 1) << (*(&v59) & 31) >> 32;\n
                v61 = 1 << (*(&v59) & 31);\n
                if ((*(&v59) & 32))\n
                    v60 = v61;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v61 = 0;\n
                v64 = v6;\n
                v4 = v64[172];\n
                v10 = v64[173];\n
                v62 = v58;\n
                while (true)\n
                {\n
                    v50 |= v61;\n
                    v5 |= v60;\n
                    if (!(!(v10 & v60)) || !(!(v4 & v61)))\n
                        break;\n
                    v60 = (v60 CONCAT v61) * 0x100 >> 32;\n
                    v61 *= 0x100;\n
                    v58 += 1;\n
                    if (v58 >= 7)\n
                        break;\n
                }\n
                v63 = v5;\n
                v59 = v8;\n
                if (v9 < 8)\n
                    goto LABEL_404574;\n
            }\n
            *(&v59) = v59 - 8;\n
            v65 = (0 CONCAT 1) << (*(&v59) & 31) >> 32;\n
            v66 = 1 << (*(&v59) & 31);\n
            if ((*(&v59) & 32))\n
                v65 = v66;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v66 = 0;\n
            v67 = v63;\n
            v68 = v6;\n
            v5 = v68[172];\n
            v4 = v68[173];\n
            v63 = v67;\n
            do\n
            {\n
                v58 = v50 | v66;\n
                v69 = v63 | v65;\n
                if (!(!(v4 & v65)) || !(!(v5 & v66)))\n
                {\n
                    v50 = v58;\n
                    v63 = v69;\n
                    break;\n
                }\n
                v66 = (v65 CONCAT v66) >> 8;\n
                tmp_29 = v65 / 128;\n
                v65 /= 0x100;\n
                v62 -= 1;\n
                v50 = v58;\n
                v63 = v69;\n
            } while (!([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>)));\n
LABEL_404574:\n
            v5 = v63;\n
            v70 = (&v12[0] + 1);\n
            v71 = v2;\n
            v72 = (v71 CONCAT v3) >> (v70 & 31);\n
            v73 = v71 >> (v70 & 31);\n
            if ((v70 & 32))\n
                v72 = v73;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v73 = 0;\n
            if (!v72 && !v73)\n
                break;\n
            continue;\n
            v74 = v9;\n
        } while (v74 < 63);\n
    }\n
    v75 = v11;\n
    v76 = v6;\n
    v77 = v1 | v76[1 + 4 + 2 * v75];\n
    v78 = v0 | v76[1 + 5 + 2 * v75];\n
    if (!(!v77) || !(!v78))\n
    {\n
        v79 = -1;\n
        do\n
        {\n
            v80 = v79;\n
            if (ExpCmpNE(v77, 0))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v81 = (ExpCmpNE(v77, 0) ? tmp_8 : v76);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v81 = (ExpCmpNE(v77, 0) ? tmp_8 : v76);\n
            }\n
            if (!(ExpCmpNE(v157, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v82 = (ExpCmpNE(v78, 0) ? tmp_8 : v79);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v82 = (ExpCmpNE(v78, 0) ? tmp_8 : v79);\n
            }\n
            v83 = v82 + 32;\n
            if (v77)\n
                v83 = v81;\n
            v84 = v83 + v80 + 8;\n
            v12[0] = v83;\n
            v85 = v80 + v83 + 1;\n
            v2 = v85;\n
            if ((v85 >> 31 & 1 ^ 1))\n
                v84 = v85;\n
            v86 = v85 - (v84 & -8);\n
            v10 = v86 + 1;\n
            v4 = v84 >> 3;\n
            v87 = (v84 >> 3) * 8 + 8;\n
            v3 = v86;\n
            v1 = v77;\n
            v0 = v78;\n
            v7 = v87;\n
            if (v85 <= 55 && v3 <= 6)\n
            {\n
                v88 = v10;\n
                v89 = v7 + v10;\n
                v90 = (0 CONCAT 1) << (v89 & 31) >> 32;\n
                v91 = 1 << (v89 & 31);\n
                if ((v89 & 32))\n
                    v90 = v91;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v91 = 0;\n
                v92 = v4 + 1;\n
                v93 = v6;\n
                v9 = v93[172];\n
                v8 = v93[173];\n
                do\n
                {\n
                    v94 = v50 | v91;\n
                    v5 |= v90;\n
                    if (!(!(v8 & v90)) || !(!(v9 & v91)))\n
                    {\n
LABEL_4046d0:\n
                        v50 = v94;\n
                        break;\n
                    }\n
                    else if (!(v92 <= 6))\n
                    {\n
                        goto LABEL_4046d0;\n
                    }\n
                    v92 += 1;\n
                    v90 = (v90 CONCAT v91) * 0x200 >> 32;\n
                    v91 *= 0x200;\n
                    tmp_18 = v88;\n
                    v88 += 1;\n
                    v50 = v94;\n
                } while (tmp_18 < 7);\n
            }\n
            v95 = v5;\n
            v8 = v4 * 8 - 8;\n
            if (v2 >= 8 && v3 <= 6)\n
            {\n
                v96 = v8 + v10;\n
                v97 = (0 CONCAT 1) << (v96 & 31) >> 32;\n
                v98 = 1 << (v96 & 31);\n
                v4 -= 1;\n
                if ((v96 & 32))\n
                    v97 = v98;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v98 = 0;\n
                v99 = v6;\n
                v9 = v99[172];\n
                v95 = v5;\n
                do\n
                {\n
                    v101 = v50 | v98;\n
                    v102 = v95 | v97;\n
                    if (!(!(v99[173] & v97)) || !(!(v9 & v98)))\n
                    {\n
LABEL_404780:\n
                        v50 = v101;\n
                        v95 = v102;\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v103 = v4;\n
                        if (v103 <= 0)\n
                            goto LABEL_404780;\n
                    }\n
                    v4 = v103 - 1;\n
                    v98 = (v97 CONCAT v98) >> 7;\n
                    v104 = v10;\n
                    v97 /= 128;\n
                    tmp_20 = v104;\n
                    v10 = v104 + 1;\n
                    v50 = v101;\n
                    v95 = v102;\n
                } while (tmp_20 < 7);\n
            }\n
            v105 = v3;\n
            v79 = v2;\n
            v4 = v3 - 1;\n
            if (v79 > 55)\n
            {\n
LABEL_404970:\n
                v131 = v1;\n
                v132 = v0;\n
                goto LABEL_404977;\n
            }\n
            if (v105 <= 0)\n
                goto LABEL_404970;\n
            v106 = v7 + v4;\n
            v107 = (0 CONCAT 1) << (v106 & 31) >> 32;\n
            v108 = 1 << (v106 & 31);\n
            v109 = v95;\n
            v110 = v6;\n
            v111 = v110[172];\n
            v7 = v106;\n
            v112 = v106 & 32;\n
            if ((v106 & 32))\n
                v107 = v108;\n
            v113 = v110[173];\n
            v115 = v113;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v108 = 0;\n
            v95 = v109 | v107;\n
            v50 |= v108;\n
            if (!(!(v108 & v111)) || !(!(v107 & v113)))\n
            {\n
LABEL_4047ef:\n
                v131 = v1;\n
                v132 = v0;\n
                v79 = v2;\n
                v105 = v3;\n
                goto LABEL_404977;\n
            }\n
            else\n
            {\n
                v5 = v111;\n
                v79 = v2;\n
                if (v79 <= 47 && v3 >= 2)\n
                {\n
                    v116 = v7;\n
                    v117 = (0 CONCAT 128) << (v116 & 31) >> 32;\n
                    v118 = 128 << (v116 & 31);\n
                    if ((v116 & 32))\n
                        v117 = v118;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v118 = 0;\n
                    v95 |= v117;\n
                    v50 |= v118;\n
                    v119 = v117 & v115;\n
                    v120 = v5;\n
                    if (!(!(v118 & v5)) || !(!v119))\n
                        goto LABEL_4047ef;\n
                    v79 = v2;\n
                    if (v79 <= 39 && v3 >= 3)\n
                    {\n
                        v121 = v7;\n
                        v122 = (0 CONCAT 0x4000) << (v121 & 31) >> 32;\n
                        v123 = 0x4000 << (v121 & 31);\n
                        if ((v121 & 32))\n
                            v122 = v123;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v123 = 0;\n
                        v95 |= v122;\n
                        v50 |= v123;\n
                        if (!(!(v123 & v120)) || !(!(v122 & v115)))\n
                            goto LABEL_4047ef;\n
                        v79 = v2;\n
                        if (v79 <= 31 && v3 >= 4)\n
                        {\n
                            v124 = v7;\n
                            v125 = (0 CONCAT 0x200000) << (v124 & 31) >> 32;\n
                            v126 = 0x200000 << (v124 & 31);\n
                            if ((v124 & 32))\n
                                v125 = v126;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v126 = 0;\n
                            v95 |= v125;\n
                            v50 |= v126;\n
                            if (!(!(v126 & v120)) || !(!(v125 & v115)))\n
                                goto LABEL_4047ef;\n
                            v79 = v2;\n
                            if (v79 <= 23 && v3 >= 5)\n
                            {\n
                                v127 = v7;\n
                                v128 = (0 CONCAT 0x10000000) << (v127 & 31) >> 32;\n
                                v129 = v95;\n
                                v130 = 0x10000000 << (v127 & 31);\n
                                if ((v127 & 32))\n
                                    v128 = v130;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v130 = 0;\n
                                v50 |= v130;\n
                                v133 = v120 & v130;\n
                                v95 = v129 | v128;\n
                                if (!v133 && !(v128 & v115))\n
                                {\n
                                    v79 = v2;\n
                                    v105 = v3;\n
                                    if (v79 <= 15 && v105 >= 6)\n
                                    {\n
                                        v134 = v95;\n
                                        v135 = v7;\n
                                        v136 = (8 CONCAT 0) << (v135 & 31) >> 32;\n
                                        if ((v135 & 32))\n
                                            v136 = 0;\n
                                        v137 = v134 | v136;\n
                                        if ((v136 & v115))\n
                                        {\n
                                            v95 = v137;\n
                                            v131 = v1;\n
                                            v132 = v0;\n
                                        }\n
                                        else\n
                                        {\n
                                            v131 = v1;\n
                                            v132 = v0;\n
                                            if (v2 <= 7 && v105 >= 7)\n
                                            {\n
                                                v138 = (0x400 CONCAT 0) << (v135 & 31) >> 32;\n
                                                if ((v135 & 32))\n
                                                    v138 = 0;\n
                                                v105 = v3;\n
                                                v137 |= v138;\n
                                            }\n
                                            v95 = v137;\n
                                        }\n
                                        v79 = v2;\n
                                        goto LABEL_404977;\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
                v131 = v1;\n
                v132 = v0;\n
                v105 = v3;\n
LABEL_404977:\n
                v12[0] = &v12[0] + 1;\n
                v5 = v95;\n
                if (v79 < 8)\n
                {\n
LABEL_4049e0:\n
                    v76 = v12;\n
                    v77 = (v132 CONCAT v131) >> (v76 & 31);\n
                    v78 = v132 >> (v76 & 31);\n
                    if ((v76 & 32))\n
                        v77 = v78;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v78 = 0;\n
                    if (!v77 && !v78)\n
                        break;\n
                    continue;\n
                }\n
                else\n
                {\n
                    if (v105 <= 0)\n
                        goto LABEL_4049e0;\n
                    v139 = v8 + v4;\n
                    v140 = (0 CONCAT 1) << (v139 & 31) >> 32;\n
                    v141 = 1 << (v139 & 31);\n
                    if ((v139 & 32))\n
                        v140 = v141;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v141 = 0;\n
                    v142 = v6;\n
                    v143 = v142[173];\n
                    v5 |= v140;\n
                    v144 = v50 | v141;\n
                    if (!(v4 & v141) && !(v143 & v140))\n
                    {\n
                        v4 = v142[172];\n
                        if (v2 >= 16 && v3 >= 2)\n
                        {\n
                            v145 = (v140 CONCAT v141) * 0x800000 >> 32;\n
                            v146 = v140 / 0x200;\n
                            v5 |= v146;\n
                            v144 |= v145;\n
                            if (!(v145 & v4) && !(v146 & v143) && v2 >= 24 && v3 >= 3)\n
                            {\n
                                v147 = (v140 CONCAT v141) * 0x4000 >> 32;\n
                                v148 = v140 / 0x40000;\n
                                v5 |= v148;\n
                                v144 |= v147;\n
                                if (!(v147 & v4) && !(v148 & v143) && v2 >= 32)\n
                                {\n
                                    v50 = v144;\n
                                    if (v3 >= 4)\n
                                    {\n
                                        v149 = (v140 CONCAT v141) >> 27;\n
                                        v150 = v140 / 0x8000000;\n
                                        v5 |= v150;\n
                                        v50 = v144 | v149;\n
                                        v79 = v2;\n
                                        if (!(v149 & v4 | v143 & v150) && v79 >= 40)\n
                                        {\n
                                            v152 = v3;\n
                                            if (v152 >= 5)\n
                                            {\n
                                                v153 = v140 / 16;\n
                                                v50 |= v153;\n
                                                if (!(v153 & v4) && v79 >= 48 && v152 >= 6)\n
                                                {\n
                                                    v154 = v140 / 0x2000;\n
                                                    v50 |= v154;\n
                                                    if (!(v154 & v4) && v79 >= 56 && v152 >= 7)\n
                                                        v50 |= v140 / &g_400000;\n
                                                }\n
                                            }\n
                                        }\n
                                        v131 = v1;\n
                                        v132 = v0;\n
                                        goto LABEL_4049e0;\n
                                    }\n
LABEL_4049d5:\n
                                    v131 = v1;\n
                                    v132 = v0;\n
                                    v79 = v2;\n
                                    goto LABEL_4049e0;\n
                                }\n
                            }\n
                        }\n
                    }\n
                    v50 = v144;\n
                    goto LABEL_4049d5;\n
                }\n
            }\n
        } while (v79 < 63);\n
    }\n
    v155 = v11;\n
    v156 = v6;\n
    v157 = v156[1 + 16 + 2 * v155];\n
    if (!(ExpCmpNE(v157, 0)))\n
    {\n
        tmp_8 = UnaryOp Ctz;\n
        v158 = (ExpCmpNE(v157, 0) ? tmp_8 : v76);\n
    }\n
    else\n
    {\n
        tmp_8 = UnaryOp Ctz;\n
        v158 = (ExpCmpNE(v157, 0) ? tmp_8 : v76);\n
    }\n
    if (!(ExpCmpNE(v156[1 + 17 + 2 * v155], 0)))\n
    {\n
        tmp_14 = UnaryOp Ctz;\n
        v159 = (ExpCmpNE(v156[1 + 17 + 2 * v155], 0) ? tmp_14 : v155);\n
    }\n
    else\n
    {\n
        tmp_14 = UnaryOp Ctz;\n
        v159 = (ExpCmpNE(v156[1 + 17 + 2 * v155], 0) ? tmp_14 : v155);\n
    }\n
    v160 = v159 + 32;\n
    if (v157)\n
        v160 = v158;\n
    v161 = v50 | *(&(&g_40d3a0)[8 * v160]);\n
    return v161;\n
}\n
", "4211947:sub_4044eb": null, "4212072:sub_404568": null, "4212419:sub_4046c3": null, "4213096:sub_404968": null, "4213619:sub_404b73": null, "4213632:sub_404b80": "extern struct_0 *g_40d198;\n
\n
int sub_404b80()\n
{\n
    unsigned int v1;  // edx\n
\n
    return !(sub_4041f0() & *(&g_40d198[49].padding_0[8 + 8 * (!g_40d198->field_c)])) && !(v1 & (&g_40d198[49].field_c)[2 * (!g_40d198->field_c)]);\n
}\n
", "4213681:sub_404bb1": null, "4213696:sub_404bc0": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[12];\n
    char field_1c;\n
    char padding_1d[591];\n
    unsigned int field_26c;\n
    char padding_270[64];\n
    unsigned int field_2b0;\n
    unsigned int field_2b4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4240344];\n
    unsigned int field_40b3d8;\n
} struct_1;\n
\n
extern struct_0 *g_40d198;\n
\n
int sub_404bc0()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    unsigned int v3;  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x44]\n
    unsigned int v5;  // [bp-0x40]\n
    struct_1 *v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    struct_0 *v20;  // edi\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // ebp\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // esi\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // ecx\n
    unsigned int v32;  // eax\n
    unsigned int v33;  // ebp\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // ebp\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // ebp\n
    char v39;  // cl\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // edx\n
    unsigned int v42;  // eax\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // eax\n
    unsigned int v45;  // eax\n
    unsigned int v46;  // ecx\n
    unsigned int v47;  // eax\n
    unsigned int v48;  // edx\n
    unsigned int v49;  // eax\n
    unsigned int v50;  // ebx\n
    unsigned int v51;  // ecx\n
    unsigned int v52;  // eax\n
    unsigned int v53;  // edx\n
    unsigned int v54;  // ebx\n
    unsigned int v55;  // eax\n
    unsigned int v56;  // ebp\n
    struct_1 *v57;  // edx\n
    void* v59;  // ecx, Other Possible Types: unsigned int\n
    struct_1 *v60;  // edx\n
    unsigned int v61;  // ebx\n
    unsigned int v62;  // esi\n
    unsigned int v63;  // eax\n
    unsigned int v64;  // eax\n
    void* v65;  // edx\n
    char v66;  // cl\n
    unsigned int v67;  // edx\n
    unsigned int v68;  // esi\n
    unsigned int v69;  // ebp\n
    unsigned int v71;  // eax\n
    void* v72;  // eax, Other Possible Types: unsigned int\n
\n
    v17 = &v18;\n
    v20 = g_40d198;\n
    v5 = g_40d198->padding_1d[2];\n
    v14 = g_40d198->padding_1d[1];\n
    v21 = v5 + v14 * 8;\n
    v22 = (0 CONCAT 1) << (v21 & 31) >> 32;\n
    v23 = 1 << (v21 & 31);\n
    if ((v21 & 32))\n
        v22 = v23;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
        v23 = 0;\n
    v15 = v23;\n
    v72 = g_40d198->padding_1d[0];\n
    v24 = v72 + g_40d198->field_1c * 8;\n
    v25 = (0 CONCAT 1) << (v24 & 31) >> 32;\n
    v26 = 1 << (v24 & 31);\n
    v16 = v24;\n
    if ((v24 & 32))\n
        v25 = v26;\n
    v3 = v25;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
        v26 = 0;\n
    v7 = v26;\n
    if (g_40d198->field_26c <= 0)\n
        return v72;\n
    v6 = g_40d198->padding_1d[5];\n
    v27 = g_40d198->padding_270[v21];\n
    v28 = v27 / 128;\n
    v1 = v27;\n
    v29 = v27 & 15;\n
    v9 = v21;\n
    v13 = v22;\n
    if (v29 == 5)\n
    {\n
        v21 = v9;\n
        if (!(v5 - v72 + 2 & -5))\n
        {\n
            v30 = v14 * 8;\n
            v4 = *(&g_40d198[1].padding_1d[35 + 8 * v28]);\n
            v2 = *(&g_40d198[1].padding_1d[39 + 8 * v28]);\n
            v0 = v30;\n
            if (v5 != 2)\n
            {\n
                v34 = v30 | 5;\n
                v35 = (0 CONCAT 1) << (v34 & 31) >> 32;\n
                v36 = 1 << (v34 & 31);\n
                v12 = v34;\n
                if ((v34 & 32))\n
                    v35 = v36;\n
                if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
                    v36 = 0;\n
                v42 = ~(v35);\n
                v38 = ~(v36);\n
                v11 = v42;\n
                v2 &= v11;\n
                v43 = v0 | 7;\n
                v44 = (0 CONCAT 1) << (v43 & 31) >> 32;\n
                v41 = 1 << (v43 & 31);\n
                v4 &= v38;\n
                v0 = v43;\n
                if ((v43 & 32))\n
                    v44 = v41;\n
                if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
                    v41 = 0;\n
                v46 = v4;\n
                v10 = v44;\n
                v2 |= v44;\n
                v45 = v2;\n
                v8 = v41;\n
            }\n
            else\n
            {\n
                v31 = v30 | 3;\n
                v32 = (0 CONCAT 1) << (v31 & 31) >> 32;\n
                v33 = 1 << (v31 & 31);\n
                v12 = v31;\n
                if ((v31 & 32))\n
                    v32 = v33;\n
                if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
                    v33 = 0;\n
                v37 = ~(v32);\n
                v38 = ~(v33);\n
                v11 = v37;\n
                v2 &= v11;\n
                v39 = v0;\n
                v40 = (0 CONCAT 1) << (v39 & 31) >> 32;\n
                v41 = 1 << (v39 & 31);\n
                v4 &= v38;\n
                if ((v39 & 32))\n
                    v40 = v41;\n
                if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
                    v41 = 0;\n
                v10 = v40;\n
                v45 = v2 | v40;\n
                v8 = v41;\n
                v46 = v4;\n
            }\n
            *(&g_40d198[1].padding_1d[35 + 8 * v28]) = v46 | v41;\n
            *(&g_40d198[1].padding_1d[39 + 8 * v28]) = v45;\n
            *(&g_40d198[1].padding_0[8 * v28]) = *(&g_40d198[1].padding_0[8 * v28]) & v38 | v8;\n
            v47 = v11;\n
            v48 = v10;\n
            *(&g_40d198[1].padding_0[4 + 8 * v28]) = *(&g_40d198[1].padding_0[4 + 8 * v28]) & v47 | v48;\n
            v49 = v47 & g_40d198->field_2b4 | v48;\n
            v20->field_2b0 = v38 & v20->field_2b0 | v8;\n
            g_40d198->field_2b4 = v49;\n
            g_40d198->padding_270[v12] = 6;\n
            g_40d198->padding_270[v0] = v1 & 128 | 3;\n
            v21 = v9;\n
            v22 = v13;\n
        }\n
    }\n
    g_40d198->padding_270[v21] = 6;\n
    g_40d198->padding_270[v16] = v1;\n
    v50 = v29 * 16;\n
    v0 = ~(v22);\n
    v51 = &g_40d198->padding_0[8 * v28];\n
    *((v50 + v51 + 716)) = *((v50 + v51 + 716)) & v0 | v3;\n
    v52 = ~(v15);\n
    *((v50 + v51 + 712)) = *((v50 + v51 + 712)) & v52 | v7;\n
    v53 = v3;\n
    *(&g_40d198[1].padding_0[4 + 8 * v28]) = *(&g_40d198[1].padding_0[4 + 8 * v28]) & v0 | v53;\n
    v54 = v7;\n
    *(&g_40d198[1].padding_0[8 * v28]) = *(&g_40d198[1].padding_0[8 * v28]) & v52 | v54;\n
    v55 = v52 & g_40d198->field_2b0 | v54;\n
    v56 = v0 & g_40d198->field_2b4 | v53;\n
    v20->field_2b4 = v0 & v20->field_2b4 | v53;\n
    v3 = v55;\n
    g_40d198->field_2b0 = v3;\n
    v57 = v6;\n
    if (!([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>)))\n
    {\n
        if (v57 >= 0)\n
        {\n
            v59 = 0;\n
            *(&v59) = v1 >> 7 & 1 ^ 1;\n
            v6 = v57 & 15;\n
            v60 = v6 * 16;\n
            v61 = g_40d198 + 0x8 * v59;\n
            v62 = v13;\n
            *(&v60->padding_0[716 + v61]) = *(&v60->padding_0[716 + v61]) | v62;\n
            v63 = v15;\n
            *(&v60->padding_0[712 + v61]) = *(&v60->padding_0[712 + v61]) | v63;\n
            *((700 + &v20->padding_0[0] + 0x8 * v59)) = *((700 + &v20->padding_0[0] + 0x8 * v59)) | v62;\n
            *((696 + &v20->padding_0[0] + 0x8 * v59)) = *((696 + &v20->padding_0[0] + 0x8 * v59)) | v63;\n
            g_40d198->field_2b4 = v56 | v62;\n
            g_40d198->field_2b0 = v3 | v63;\n
            g_40d198->padding_270[v9] = (v6 | v1 & 128) - 128;\n
            v64 = *((4240344 + 0x4 * v6));\n
        }\n
        else\n
        {\n
            v65 = 0;\n
            *(&v65) = v14 != 2;\n
            v7 = v65;\n
            v66 = (v5 + v65 * 8) + 24;\n
            v67 = (0 CONCAT 1) << (v66 & 31) >> 32;\n
            v68 = 1 << (v66 & 31);\n
            if ((v66 & 32))\n
                v67 = v68;\n
            if ([D] x86g_calculate_condition(0x4<32>, 0xd<32>, Conv(8->32, (dl<1> & 0x40<8>)), 0x0<32>, 0x0<32>))\n
                v68 = 0;\n
            v59 = 0;\n
            *(&v59) = v1 >> 7 & 1 ^ 1;\n
            *(&v20[1].padding_10[8 * v59]) = *(&v20[1].padding_10[8 * v59]) | v68;\n
            *(&v20[1].padding_10[4 + 8 * v59]) = *(&v20[1].padding_10[4 + 8 * v59]) | v67;\n
            *(&v20[1].padding_0[8 * v59]) = *(&v20[1].padding_0[8 * v59]) | v68;\n
            *(&v20[1].padding_0[4 + 8 * v59]) = *(&v20[1].padding_0[4 + 8 * v59]) | v67;\n
            v69 = v56 | v67;\n
            g_40d198->field_2b0 = v3 | v68;\n
            g_40d198->field_2b4 = v69;\n
            g_40d198->padding_270[24 + 8 * v7 + v5] = ~(v1) & 128;\n
            v64 = 100;\n
        }\n
        *(&v20->padding_0[4 + 4 * v59]) = *(&v20->padding_0[4 + 4 * v59]) + v64;\n
    }\n
    v20->padding_1d[7 + v16] = v20->padding_1d[7 + v16] - 1;\n
    v71 = g_40d198->field_26c;\n
    g_40d198->field_26c = v71 - 1;\n
    if (v71 < 2)\n
        g_40d198->padding_1d[4] = 6;\n
    else\n
        *(&g_40d198->field_1c) = *(&g_40d198->padding_1d[55 + 8 * v71]);\n
    v72 = 0;\n
    *(&v72) = !g_40d198->field_c;\n
    g_40d198->field_c = v72;\n
    return !g_40d198->field_c;\n
}\n
", "4214772:sub_404ff4": null, "4214784:sub_405000": "extern struct_0 *g_40d198;\n
\n
int sub_405000()\n
{\n
    int tmp_24;  // tmp #24\n
    int tmp_8;  // tmp #8\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0x68]\n
    int tmp_18;  // tmp #18\n
    int tmp_16;  // tmp #16\n
    int tmp_14;  // tmp #14\n
    char *v1;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x60]\n
    void* v3;  // [bp-0x5c], Other Possible Types: unsigned int, unsigned int [174]\n
    unsigned int v4;  // [bp-0x58], Other Possible Types: char\n
    unsigned int v5;  // [bp-0x54]\n
    unsigned int v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x48]\n
    char *v9;  // [bp-0x44]\n
    unsigned int v10;  // [bp-0x40]\n
    unsigned int v11[174];  // [bp-0x3c]\n
    unsigned int v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    unsigned int v16;  // [bp-0x28]\n
    unsigned int *v17;  // [bp-0x24]\n
    unsigned int v18;  // [bp-0x20]\n
    unsigned int v19;  // [bp-0x1c]\n
    unsigned int v20;  // [bp-0x18]\n
    unsigned int v21;  // [bp-0x14]\n
    unsigned int v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v24;  // [bp-0x4]\n
    char v25;  // [bp+0x0]\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    char *v29;  // edx\n
    unsigned int *v30;  // ecx\n
    unsigned int v31;  // esi\n
    void* v32;  // ecx\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // esi\n
    unsigned int v36;  // ecx\n
    unsigned int v37;  // edi\n
    unsigned int v38;  // edi\n
    unsigned int v39;  // edx\n
    char v40;  // cl\n
    unsigned int v41;  // esi\n
    unsigned int v42;  // edi\n
    char v43;  // cl\n
    unsigned int v44;  // esi\n
    unsigned int v45;  // edi\n
    char *v46;  // ecx\n
    unsigned int v47;  // esi\n
    unsigned int v48;  // ebx\n
    char *v49;  // ecx\n
    unsigned int v50;  // esi\n
    unsigned int v51;  // ebx\n
    char v52;  // cl\n
    unsigned int v53;  // esi\n
    unsigned int v54;  // edi\n
    char v55;  // cl\n
    unsigned int v56;  // esi\n
    unsigned int v57;  // edi\n
    unsigned int v58;  // edi\n
    unsigned int v59;  // edi\n
    char *v60;  // edi\n
    unsigned int v61;  // esi\n
    char *v62;  // edi\n
    unsigned int v63;  // esi\n
    unsigned int v64;  // cl, Other Possible Types: char\n
    unsigned int v65;  // ecx, Other Possible Types: char\n
    unsigned int v66;  // ebx\n
    char *v67;  // cl, Other Possible Types: char, unsigned int\n
    unsigned int v68;  // esi\n
    char *v69;  // edi, Other Possible Types: unsigned int\n
    char *v70;  // cl, Other Possible Types: char, unsigned int\n
    unsigned int v71;  // esi\n
    unsigned int v72;  // ebx\n
    char *v73;  // edx, Other Possible Types: unsigned int, char\n
    unsigned int v74;  // ebx\n
    unsigned int v75;  // ebp\n
    unsigned int v76;  // ebp\n
    unsigned int v77[174];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v78;  // esi\n
    unsigned int v79;  // esi\n
    unsigned int v80;  // esi\n
    char *v81;  // esi\n
    unsigned int v82;  // edi\n
    char v83;  // cl\n
    void* v84;  // eax, Other Possible Types: unsigned int\n
    unsigned int v85;  // ecx\n
    unsigned int v86;  // eax\n
    void* v87;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v88;  // ebx\n
    unsigned int v89;  // ecx\n
    unsigned int v90;  // edx\n
    unsigned int v91;  // esi\n
    unsigned int v92;  // eax\n
    unsigned int v93;  // eax\n
    unsigned int v94;  // ebp\n
    unsigned int v95;  // edx\n
    unsigned int v96;  // edi\n
    unsigned int v97;  // esi\n
    unsigned int v98;  // ecx\n
    unsigned int v100;  // eax\n
    unsigned int v101;  // ebp\n
    unsigned int v102;  // ebx\n
    char v104;  // cl\n
    unsigned int v105;  // edx\n
    unsigned int v106;  // esi\n
    unsigned int v107;  // esi\n
    unsigned int v108;  // edx\n
    unsigned int v109;  // ecx\n
    char *v111;  // edx\n
    unsigned int v112;  // esi\n
    unsigned int v113;  // ecx\n
    unsigned int v115;  // ebx\n
    char v116;  // cl\n
    unsigned int v117;  // esi\n
    unsigned int v118;  // edx\n
    unsigned int v119;  // esi\n
    char v120;  // bl\n
    unsigned int v121;  // esi\n
    unsigned int v122;  // edi\n
    char v123;  // cl\n
    unsigned int v124;  // edx\n
    unsigned int v125;  // esi\n
    unsigned int v126;  // esi\n
    unsigned int v127;  // edx\n
    unsigned int v128;  // ecx\n
    char *v129;  // edx\n
    unsigned int v130;  // esi\n
    unsigned int v131;  // ecx\n
    char v133;  // cl\n
    unsigned int v134;  // esi\n
    unsigned int v135;  // edx\n
    unsigned int v136;  // esi\n
    char v137;  // dil\n
    unsigned int v138;  // esi\n
    unsigned int v139;  // edi\n
    char v140;  // cl\n
    unsigned int v141;  // esi\n
    unsigned int v142;  // edx\n
    unsigned int v143;  // edx\n
    unsigned int v144;  // esi\n
    unsigned int v145;  // ecx\n
    char *v146;  // edx\n
    unsigned int v147;  // esi\n
    unsigned int v148;  // ecx\n
    char v150;  // cl\n
    unsigned int v151;  // esi\n
    unsigned int v152;  // edi\n
    unsigned int v153;  // edi\n
    unsigned int v154;  // esi\n
    char v155;  // cl\n
    unsigned int v156;  // esi\n
    unsigned int v157;  // edi\n
    char v158;  // cl\n
    unsigned int v159;  // esi\n
    unsigned int v160;  // edx\n
    unsigned int v161;  // edx\n
    unsigned int v162;  // esi\n
    unsigned int v163;  // ecx\n
    char *v164;  // edx\n
    unsigned int v165;  // esi\n
    unsigned int v166;  // ecx\n
    char v168;  // cl\n
    unsigned int v169;  // esi\n
    unsigned int v170;  // edi\n
    unsigned int v171;  // edi\n
    unsigned int v172;  // esi\n
    char v173;  // cl\n
    unsigned int v174;  // esi\n
    char v175;  // cl\n
    unsigned int v176;  // edx\n
    unsigned int v177;  // esi\n
    unsigned int v178;  // eax\n
    unsigned int v179;  // edx\n
    unsigned int v180;  // ecx\n
    unsigned int v181;  // esi\n
    unsigned int v182;  // esi\n
    unsigned int v183[174];  // ecx, Other Possible Types: unsigned int, char\n
    unsigned int v184;  // edx\n
    unsigned int v185;  // edi\n
    unsigned int v186;  // ebp\n
    unsigned int v187;  // edx\n
    unsigned int v188[174];  // ebx\n
    unsigned int v189;  // esi\n
    unsigned int v190;  // ebx\n
    unsigned int v191;  // eax\n
    unsigned int v192;  // esi\n
    unsigned int v193;  // esi\n
    unsigned int v194;  // eax\n
    char *v195;  // eax\n
    unsigned int v196;  // esi\n
    char v197;  // bl\n
    unsigned int v198;  // eax\n
    unsigned int v199;  // esi\n
    char *v200;  // eax\n
    char v201;  // bl\n
    unsigned int v202;  // edx\n
    unsigned int v203;  // edi\n
    unsigned int v204;  // ebp\n
    unsigned int v205;  // esi\n
    unsigned int v206;  // edx\n
    unsigned int v207;  // eax\n
    unsigned int v208;  // esi\n
    unsigned int v209;  // esi\n
    unsigned int v210;  // eax\n
    char *v211;  // eax\n
    unsigned int v212;  // esi\n
    char v213;  // bl\n
    unsigned int v214;  // eax\n
    unsigned int v215;  // esi\n
    char *v216;  // eax\n
    char v217;  // bl\n
    unsigned int v218;  // edx\n
    unsigned int v219;  // esi\n
    char v220;  // cl\n
    unsigned int v221;  // edi\n
    unsigned int v222;  // ebp\n
    unsigned int v223;  // eax\n
    unsigned int v224;  // ebx\n
    unsigned int v225[174];  // edx\n
    unsigned int v226;  // eax\n
    unsigned int v227;  // eax\n
    unsigned int v228;  // edx\n
    unsigned int v229;  // edx\n
    unsigned int v230;  // eax\n
    unsigned int v231;  // esi\n
    char *v232;  // eax\n
    unsigned int v233;  // edx\n
    unsigned int v234;  // eax\n
    char *v235;  // eax\n
    char v236;  // dl\n
    unsigned int v237;  // esi\n
    unsigned int v238;  // edi\n
    unsigned int v239;  // edx\n
    unsigned int v240;  // eax\n
    unsigned int v241;  // ecx\n
    unsigned int v242;  // eax\n
    unsigned int v243;  // eax\n
    unsigned int v244;  // esi\n
    unsigned int v245;  // eax\n
    unsigned int v246;  // ebx\n
    unsigned int v247;  // eax\n
    unsigned int v248;  // ebx\n
    unsigned int v249;  // eax\n
    unsigned int v250;  // edx\n
    char *v251;  // eax\n
    unsigned int v252;  // ecx\n
    char v253;  // bl\n
    char v254;  // cl\n
    unsigned int v255;  // edi\n
    unsigned int v256;  // ecx\n
    unsigned int v257;  // edi\n
    unsigned int v258;  // edi\n
    unsigned int v259;  // ecx\n
    unsigned int v260;  // eax\n
    unsigned int v261;  // ebx\n
    unsigned int v262;  // edx\n
    char v263;  // cl\n
    unsigned int v264;  // ebx\n
    unsigned int v265;  // esi\n
    unsigned int v266[174];  // ebx\n
    unsigned int v267;  // ebp\n
    unsigned int v268;  // eax\n
    unsigned int v270;  // ebx\n
    unsigned int v271;  // ebx\n
    char v272;  // al\n
    unsigned int v273;  // ebp\n
    unsigned int v274;  // esi\n
    void* v275;  // edi, Other Possible Types: unsigned int\n
    unsigned int v276[174];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v277;  // ebx\n
    unsigned int v278;  // edx\n
    unsigned int v279;  // ebp\n
    unsigned int v280;  // esi\n
    char v281;  // al\n
    unsigned int v282;  // esi\n
    unsigned int v283;  // esi\n
    unsigned int v284;  // edx\n
    unsigned int v285;  // eax\n
    unsigned int v286;  // esi\n
    unsigned int v287;  // ecx\n
    unsigned int v288;  // esi\n
    unsigned int v289;  // eax\n
    char *v290;  // eax\n
    unsigned int v291;  // ecx\n
    unsigned int v292;  // eax\n
    unsigned int v293;  // edx\n
    char v294;  // cl\n
    unsigned int v295;  // ebp\n
    unsigned int v296;  // ecx\n
    unsigned int v297;  // ebx\n
    unsigned int v298[174];  // edx\n
    unsigned int v299;  // esi\n
    unsigned int v300;  // ebx\n
    unsigned int v301;  // ebx\n
    unsigned int v302;  // esi\n
    unsigned int v303;  // eax\n
    char *v304;  // eax\n
    unsigned int v305;  // esi\n
    unsigned int v306;  // edx\n
    unsigned int v307;  // edx\n
    unsigned int v308;  // esi\n
    unsigned int v309;  // eax\n
    char *v310;  // eax\n
    unsigned int v311;  // ecx\n
    unsigned int v312;  // edx\n
    unsigned int v313;  // esi\n
    char v314;  // cl\n
    unsigned int v315;  // ebp\n
    unsigned int v316;  // ecx\n
    unsigned int v317[174];  // eax\n
    unsigned int v318;  // esi\n
    unsigned int v319;  // esi\n
    unsigned int v320;  // ebx\n
    unsigned int v321;  // ebx\n
    unsigned int v322;  // esi\n
    unsigned int v323;  // eax\n
    char *v324;  // eax\n
    unsigned int v325;  // edx\n
    unsigned int v326;  // ebx\n
    unsigned int v327;  // edx\n
    unsigned int v328;  // esi\n
    unsigned int v329;  // edx\n
    char *v330;  // eax\n
    unsigned int v331;  // ecx\n
    unsigned int v332;  // edx\n
    char v333;  // cl\n
    unsigned int v334;  // ebx\n
    unsigned int v335;  // ecx\n
    unsigned int v336;  // eax\n
    unsigned int v337;  // esi\n
    unsigned int v338;  // edx\n
    unsigned int v339;  // edx\n
    unsigned int v340;  // esi\n
    unsigned int v341;  // eax\n
    unsigned int v342;  // esi\n
    unsigned int v343;  // edx\n
    unsigned int v344;  // esi\n
    unsigned int v345;  // edx\n
    char *v346;  // eax\n
    unsigned int v347;  // ecx\n
    unsigned int v348;  // ecx\n
    unsigned int v349;  // esi\n
    unsigned int v350;  // edx\n
    void* v351;  // esi, Other Possible Types: unsigned int\n
    unsigned int v352;  // eax\n
    unsigned int v353;  // eax\n
    unsigned int v354;  // ecx\n
    unsigned int v355;  // edx\n
    unsigned int v356;  // eax\n
    unsigned int v357;  // eax\n
    void* v358;  // ecx, Other Possible Types: unsigned int, unsigned int [174]\n
    unsigned int v359;  // ebx, Other Possible Types: char\n
    unsigned int v360;  // ebp, Other Possible Types: char\n
    unsigned int v361;  // ecx, Other Possible Types: char\n
    char v362;  // cl\n
    char v363;  // dil\n
    unsigned int v364;  // esi\n
    unsigned int v365;  // edx\n
    char v366;  // dl\n
    char v367;  // ebp\n
    char *v368;  // edx\n
    unsigned int v369;  // esi\n
    char v370;  // cl\n
    unsigned int v371;  // esi\n
    unsigned int v372;  // edx\n
    char v373;  // cl\n
    char *v374;  // edx\n
    unsigned int v375;  // esi\n
    unsigned int v376;  // ecx\n
    unsigned int v377;  // edi\n
    unsigned int v378;  // edx\n
    unsigned int v379;  // esi\n
    char *v380;  // ebp\n
    unsigned int v381;  // edx\n
    char v382;  // dl\n
    char v383;  // al\n
    char v384;  // cl\n
    unsigned int v385;  // edi\n
    unsigned int v386;  // edx\n
    unsigned int v387;  // ebx\n
    unsigned int v388;  // ecx, Other Possible Types: char\n
    unsigned int v389;  // edx\n
    char *v391;  // edx\n
    unsigned int v392;  // esi\n
    char v393;  // bl\n
    unsigned int v394[174];  // eax\n
    unsigned int v395;  // eax\n
    char v396;  // sil\n
    char v397;  // al\n
    unsigned int v398;  // edi\n
    unsigned int v399;  // esi\n
    unsigned int v400[174];  // ebx, Other Possible Types: unsigned int\n
    char v401;  // al\n
    char *v402;  // ecx\n
    unsigned int v403;  // edx\n
    char v404;  // dil\n
    char v405;  // al\n
    char v406;  // cl\n
    unsigned int v407;  // ebp\n
    unsigned int v408;  // edi\n
    unsigned int v409;  // edx\n
    char v410;  // ebp\n
    char v411;  // sil\n
    char *v412;  // eax\n
    unsigned int v413;  // edi\n
    char v415;  // cl\n
    unsigned int v416;  // esi\n
    unsigned int v417;  // edx\n
    char v418;  // ebp\n
    char v419;  // cl\n
    char *v420;  // edx\n
    unsigned int v421;  // esi\n
    char v422;  // al\n
    char v423;  // cl\n
    unsigned int v424;  // edi\n
    unsigned int v425;  // edx\n
    unsigned int v426;  // ecx\n
    char *v427;  // ebp\n
    unsigned int v428;  // edx\n
    char v429;  // al\n
\n
    v24 = &v25;\n
    v23 = v27;\n
    v22 = v28;\n
    v9 = v29;\n
    v17 = v30;\n
    v31 = g_40d198->field_c;\n
    v32 = 0;\n
    *(&v32) = !v31;\n
    v84 = *(&g_40d198[1].padding_10[4 + 8 * v31]);\n
    v33 = *(&g_40d198[1].padding_10[8 * v31]);\n
    v69 = v33;\n
    tmp_24 = v33 | v84;\n
    v73 = *((696 + &g_40d198->padding_0[0] + 0x8 * v32));\n
    v5 = v73;\n
    v6 = *((700 + &g_40d198->padding_0[0] + 0x8 * v32));\n
    v8 = *(&g_40d198[1].padding_0[8 * v31]);\n
    v16 = v31;\n
    v34 = *(&g_40d198[1].padding_0[4 + 8 * v31]);\n
    v7 = v34;\n
    v11[0] = g_40d198;\n
    if (!tmp_24)\n
    {\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        v66 = -1;\n
        v1 = 0;\n
        v35 = v69;\n
        do\n
        {\n
            v3 = v35;\n
            if (!(ExpCmpNE(v351, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v36 = (ExpCmpNE(v35, 0) ? tmp_8 : v34);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v36 = (ExpCmpNE(v35, 0) ? tmp_8 : v34);\n
            }\n
            if (ExpCmpNE(v86, 0))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v37 = (ExpCmpNE(v84, 0) ? tmp_8 : v69);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v37 = (ExpCmpNE(v84, 0) ? tmp_8 : v69);\n
            }\n
            v38 = v37 + 32;\n
            if (v35)\n
                v38 = v36;\n
            v39 = v38 + v66 + 8;\n
            v10 = v38;\n
            v66 = v66 + v38 + 1;\n
            if ((v66 >> 31 & 1 ^ 1))\n
                v39 = v66;\n
            v0 = v66 - (v39 & -8);\n
            v73 = v39 >> 3;\n
            v2 = v66;\n
            if (!v16)\n
            {\n
                v4 = v73 + 1;\n
                if (v66 - 56 < -71)\n
                {\n
LABEL_4050f3:\n
                    v64 = v0;\n
                    goto LABEL_405470;\n
                }\n
                v64 = v0;\n
                if (v64 > 0)\n
                {\n
                    v12 = v64 - 1;\n
                    v43 = v12 + v4 * 8;\n
                    v44 = (0 CONCAT 1) << (v43 & 31) >> 32;\n
                    v45 = 1 << (v43 & 31);\n
                    if ((v43 & 32))\n
                        v44 = v45;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v45 = 0;\n
                    if (!(v45 & v8) && !(v44 & v7) && (!(!(v45 & v5)) || !(!(v44 & v6))))\n
                    {\n
                        v49 = v9;\n
                        v50 = v1;\n
                        v49[8 * v50] = v73;\n
                        v51 = v0;\n
                        v49[1 + 8 * v50] = v51;\n
                        v49[2 + 8 * v50] = v4;\n
                        v49[3 + 8 * v50] = v12;\n
                        v49[7 + 8 * v50] = 100;\n
                        v64 = v51;\n
                        v1 = v50 + 1;\n
                        v66 = v2;\n
                        goto LABEL_4053d6;\n
                    }\n
                    v66 = v2;\n
                    v64 = v0;\n
                }\n
LABEL_4053d6:\n
                if (v64 - 7 < -8)\n
                    goto LABEL_405470;\n
                v12 = v64 + 1;\n
                v55 = v12 + v4 * 8;\n
                v56 = (0 CONCAT 1) << (v55 & 31) >> 32;\n
                v57 = 1 << (v55 & 31);\n
                if ((v55 & 32))\n
                    v56 = v57;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v57 = 0;\n
                if (!(!(v57 & v8)) || !(!(v56 & v7)))\n
                {\n
                    v66 = v2;\n
                    goto LABEL_4050f3;\n
                }\n
                else\n
                {\n
                    v59 = v57 & v5 | v56 & v6;\n
                    v66 = v2;\n
                    if (!v59)\n
                        goto LABEL_4050f3;\n
                    v62 = v9;\n
                    v63 = v1;\n
                    v62[8 * v63] = v73;\n
                    v62[1 + 8 * v63] = v0;\n
                    v62[2 + 8 * v63] = v4;\n
                    v62[3 + 8 * v63] = v12;\n
                    v62[7 + 8 * v63] = 100;\n
                    v64 = v0;\n
                    v1 = v63 + 1;\n
LABEL_405470:\n
                    v70 = v64 + (v4 * 8);\n
                    v71 = (0 CONCAT 1) << (v70 & 31) >> 32;\n
                    v69 = 1 << (v70 & 31);\n
                    if ((v70 & 32))\n
                        v71 = v69;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v69 = 0;\n
                    if (v66 >= -15)\n
                    {\n
                        if (!(v69 & v5) && !(v71 & v6))\n
                        {\n
                            v66 = v2;\n
                            if (!(v66 <= 55))\n
                                goto LABEL_4054f5;\n
                            if (v0 - 0 < 0)\n
                                goto LABEL_4054f5;\n
                            if (!(v71 & v7) && !(v69 & v8))\n
                            {\n
                                v70 = v9;\n
                                v74 = v1;\n
                                v70[8 * v74] = v73;\n
                                v73 = v0;\n
                                v70[1 + 8 * v74] = v73;\n
                                v70[2 + 8 * v74] = v4;\n
                                v70[3 + 8 * v74] = v73;\n
                                v70[7 + 8 * v74] = 0;\n
                                v1 = v74 + 1;\n
                            }\n
                        }\n
                        v66 = v2;\n
                    }\n
LABEL_4054f5:\n
                    if (!((v66 & -8) == 8))\n
                        goto LABEL_4055a0;\n
                    *(&v70) = v0 + 24;\n
                    v76 = (0 CONCAT 1) << (*(&v70) & 31) >> 32;\n
                    v73 = 1 << (*(&v70) & 31);\n
                    if ((*(&v70) & 32))\n
                        v76 = v73;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v73 = 0;\n
                    if (!(!(v73 & v5)) || !(!(v76 & v6)))\n
                    {\n
                        v79 = v3;\n
                        v66 = v2;\n
                        goto LABEL_4055a4;\n
                    }\n
                    else\n
                    {\n
                        v77 = v11;\n
                        v69 &= *((v77 + 688));\n
                        v80 = v71 & *((v77 + 692)) | v69;\n
                        v66 = v2;\n
                        if (!(!v80))\n
                            goto LABEL_4055a0;\n
                        v79 = v3;\n
                        if (v0 - 0 < 0)\n
                            goto LABEL_4055a4;\n
                        v73 &= v8;\n
                        if (!(!(v76 & v7)) || !(!v73))\n
                            goto LABEL_4055a4;\n
                        *(&v77) = 3;\n
                        *(&v73) = 1;\n
LABEL_40556f:\n
                        v81 = v9;\n
                        v82 = v1;\n
                        v81[8 * v82] = v73;\n
                        v73 = v0;\n
                        v81[1 + 8 * v82] = v73;\n
                        v81[2 + 8 * v82] = v77;\n
                        v81[3 + 8 * v82] = v73;\n
                        v81[7 + 8 * v82] = 0;\n
                        v69 = v82 + 1;\n
                        v1 = v69;\n
LABEL_4055a0:\n
                        v79 = v3;\n
LABEL_4055a4:\n
                        v83 = v10 + 1;\n
                        v35 = (v84 CONCAT v79) >> (v83 & 31);\n
                        v84 >>= v83 & 31;\n
                        if ((v83 & 32))\n
                            v35 = v84;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v84 = 0;\n
                        v34 = v35 | v84;\n
                        if (!v35 && !v84)\n
                            break;\n
                        continue;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                v4 = v73 - 1;\n
                if (v66 - 72 < -64)\n
                {\n
LABEL_4050d1:\n
                    v65 = v0;\n
                    goto LABEL_4052c0;\n
                }\n
                v65 = v0;\n
                if (v65 > 0)\n
                {\n
                    v12 = v65 - 1;\n
                    v40 = v12 + v4 * 8;\n
                    v41 = (0 CONCAT 1) << (v40 & 31) >> 32;\n
                    v42 = 1 << (v40 & 31);\n
                    if ((v40 & 32))\n
                        v41 = v42;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v42 = 0;\n
                    if (!(v42 & v8) && !(v41 & v7) && (!(!(v42 & v5)) || !(!(v41 & v6))))\n
                    {\n
                        v46 = v9;\n
                        v47 = v1;\n
                        v46[8 * v47] = v73;\n
                        v48 = v0;\n
                        v46[1 + 8 * v47] = v48;\n
                        v46[2 + 8 * v47] = v4;\n
                        v46[3 + 8 * v47] = v12;\n
                        v46[7 + 8 * v47] = 100;\n
                        v65 = v48;\n
                        v1 = v47 + 1;\n
                        v66 = v2;\n
                        goto LABEL_405227;\n
                    }\n
                    v66 = v2;\n
                    v65 = v0;\n
                }\n
LABEL_405227:\n
                if (v65 - 7 < -8)\n
                {\n
                    goto LABEL_4052c0;\n
                }\n
                else\n
                {\n
                    v12 = v65 + 1;\n
                    v52 = v12 + v4 * 8;\n
                    v53 = (0 CONCAT 1) << (v52 & 31) >> 32;\n
                    v54 = 1 << (v52 & 31);\n
                    if ((v52 & 32))\n
                        v53 = v54;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v54 = 0;\n
                    if (!(!(v54 & v8)) || !(!(v53 & v7)))\n
                    {\n
                        v66 = v2;\n
                        goto LABEL_4050d1;\n
                    }\n
                    else\n
                    {\n
                        v58 = v54 & v5 | v53 & v6;\n
                        v66 = v2;\n
                        if (v58)\n
                        {\n
                            v60 = v9;\n
                            v61 = v1;\n
                            v60[8 * v61] = v73;\n
                            v60[1 + 8 * v61] = v0;\n
                            v60[2 + 8 * v61] = v4;\n
                            v60[3 + 8 * v61] = v12;\n
                            v60[7 + 8 * v61] = 100;\n
                            v65 = v0;\n
                            v1 = v61 + 1;\n
LABEL_4052c0:\n
                            v67 = v65 + (v4 * 8);\n
                            v68 = (0 CONCAT 1) << (v67 & 31) >> 32;\n
                            v69 = 1 << (v67 & 31);\n
                            if ((v67 & 32))\n
                                v68 = v69;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v69 = 0;\n
                            if (v66 >= 8)\n
                            {\n
                                if (!(v69 & v5) && !(v68 & v6))\n
                                {\n
                                    v66 = v2;\n
                                    if (!(v66 <= 71))\n
                                        goto LABEL_405345;\n
                                    if (v0 - 0 < 0)\n
                                        goto LABEL_405345;\n
                                    if (!(v68 & v7) && !(v69 & v8))\n
                                    {\n
                                        v67 = v9;\n
                                        v72 = v1;\n
                                        v67[8 * v72] = v73;\n
                                        v73 = v0;\n
                                        v67[1 + 8 * v72] = v73;\n
                                        v67[2 + 8 * v72] = v4;\n
                                        v67[3 + 8 * v72] = v73;\n
                                        v67[7 + 8 * v72] = 0;\n
                                        v1 = v72 + 1;\n
                                    }\n
                                }\n
                                v66 = v2;\n
                            }\n
LABEL_405345:\n
                            if (!((v66 & -8) == 48))\n
                                goto LABEL_4055a0;\n
                            *(&v67) = v0 + 32;\n
                            v73 = (0 CONCAT 1) << (*(&v67) & 31) >> 32;\n
                            v75 = 1 << (*(&v67) & 31);\n
                            if ((*(&v67) & 32))\n
                                v73 = v75;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v75 = 0;\n
                            if (!(v75 & v5) && !(v73 & v6))\n
                            {\n
                                v77 = v11;\n
                                v69 &= v77[172];\n
                                v78 = v68 & v77[173] | v69;\n
                                v66 = v2;\n
                                if (!(!v78))\n
                                    goto LABEL_4055a0;\n
                                v79 = v3;\n
                                if (v0 - 0 < 0)\n
                                    goto LABEL_4055a4;\n
                                v73 = v73 & v7 | v75 & v8;\n
                                if (!(!v73))\n
                                    goto LABEL_4055a4;\n
                                *(&v77[0]) = 4;\n
                                v73 = 6;\n
                                goto LABEL_40556f;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        } while (v66 < 63);\n
    }\n
    v85 = v16;\n
    v86 = v11[1 + 8 + 2 * v85];\n
    v87 = v11[1 + 9 + 2 * v85];\n
    if (!(!v86) || !(!v11[1 + 9 + 2 * v85]))\n
    {\n
        v88 = -1;\n
        do\n
        {\n
            v89 = v88;\n
            if (!(ExpCmpNE(v86, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v90 = (ExpCmpNE(v86, 0) ? tmp_8 : v73);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v90 = (ExpCmpNE(v86, 0) ? tmp_8 : v73);\n
            }\n
            v91 = v86;\n
            v4 = v87;\n
            if (!(ExpCmpNE(v87, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v92 = (ExpCmpNE(v87, 0) ? tmp_8 : v86);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v92 = (ExpCmpNE(v87, 0) ? tmp_8 : v86);\n
            }\n
            v93 = v92 + 32;\n
            v94 = v91;\n
            if (v91)\n
                v93 = v90;\n
            v95 = v93 + v88 + 8;\n
            v88 = v88 + v93 + 1;\n
            if ((v88 >> 31 & 1 ^ 1))\n
                v95 = v88;\n
            v96 = v95;\n
            v73 = v95 & -8;\n
            v97 = v88 - v73;\n
            v10 = v93;\n
            v98 = v89 + v93 - 47;\n
            v3 = v88;\n
            v2 = v96 >> 3;\n
            v0 = v97;\n
            if (v98 < -71)\n
            {\n
                v100 = v94;\n
                v101 = v4;\n
                goto LABEL_4057b4;\n
            }\n
            v73 = v97;\n
            v102 = v2 + 2;\n
            v100 = v94;\n
            if (v97 - 7 < -8)\n
            {\n
LABEL_4056bc:\n
                v101 = v4;\n
                if (v73 <= 0)\n
                    goto LABEL_4057b0;\n
                goto LABEL_4056c8;\n
            }\n
            else\n
            {\n
                v104 = v102 * 8 + v97 + 1;\n
                v105 = (0 CONCAT 1) << (v104 & 31) >> 32;\n
                v106 = 1 << (v104 & 31);\n
                if ((v104 & 32))\n
                    v105 = v106;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v106 = 0;\n
                if (!(!(v106 & v8)) || !(!(v105 & v7)))\n
                {\n
                    v73 = v0;\n
                    goto LABEL_4056bc;\n
                }\n
                else\n
                {\n
                    v12 = v97 + 1;\n
                    v107 = v106 & v5;\n
                    v108 = v105 & v6;\n
                    v109 = 0;\n
                    v101 = v4;\n
                    if ((v108 | v107))\n
                        v109 = 100;\n
                    v13 = v109;\n
                    v111 = v9;\n
                    v112 = v1;\n
                    v111[8 * v112] = v2;\n
                    v113 = v0;\n
                    v111[1 + 8 * v112] = v113;\n
                    v111[2 + 8 * v112] = v102;\n
                    v111[3 + 8 * v112] = v12;\n
                    v111[7 + 8 * v112] = v13;\n
                    v73 = v113;\n
                    v1 = v112 + 1;\n
                    if (v113 <= 0)\n
                        goto LABEL_4057b0;\n
LABEL_4056c8:\n
                    v115 = v73 - 1;\n
                    v4 = v102;\n
                    v116 = v115 + v4 * 8;\n
                    v117 = (0 CONCAT 1) << (v116 & 31) >> 32;\n
                    v73 = 1 << (v116 & 31);\n
                    if ((v116 & 32))\n
                        v117 = v73;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v73 = 0;\n
                    if (!(v73 & v8) && !(v117 & v7))\n
                    {\n
                        v12 = v115;\n
                        v118 = v73 & v5;\n
                        v119 = v117 & v6;\n
                        v120 = 0;\n
                        if (!(!v119) || !(!v118))\n
                            v120 = 100;\n
                        v73 = v9;\n
                        v121 = v1;\n
                        v73[8 * v121] = v2;\n
                        v73[1 + 8 * v121] = v0;\n
                        v73[2 + 8 * v121] = v4;\n
                        v73[3 + 8 * v121] = v12;\n
                        v73[7 + 8 * v121] = v120;\n
                        v1 = v121 + 1;\n
                    }\n
LABEL_4057b0:\n
                    v88 = v3;\n
LABEL_4057b4:\n
                    if (v88 - 80 < -64)\n
                    {\n
LABEL_405893:\n
                        if (v88 - 56 < -71)\n
                        {\n
LABEL_40597e:\n
                            if (v88 - 72 < -64)\n
                            {\n
LABEL_405a69:\n
                                v175 = v10 + 1;\n
                                v86 = (v101 CONCAT v100) >> (v175 & 31);\n
                                v87 = v101 >> (v175 & 31);\n
                                if ((v175 & 32))\n
                                    v86 = v87;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v87 = 0;\n
                                if (v88 > 62)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                v157 = v2 - 1;\n
                                v73 = v0;\n
                                if (v73 - 6 >= -8)\n
                                {\n
                                    v4 = v73 + 2;\n
                                    v158 = v4 + v157 * 8;\n
                                    v159 = (0 CONCAT 1) << (v158 & 31) >> 32;\n
                                    v160 = 1 << (v158 & 31);\n
                                    if ((v158 & 32))\n
                                        v159 = v160;\n
                                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                        v160 = 0;\n
                                    if (!(!(v160 & v8)) || !(!(v159 & v7)))\n
                                    {\n
                                        v88 = v3;\n
                                        v73 = v0;\n
                                    }\n
                                    else\n
                                    {\n
                                        v161 = v160 & v5;\n
                                        v162 = v159 & v6;\n
                                        v163 = 0;\n
                                        if (!(!v162) || !(!v161))\n
                                            v163 = 100;\n
                                        v12 = v163;\n
                                        v164 = v9;\n
                                        v165 = v1;\n
                                        v164[8 * v165] = v2;\n
                                        v166 = v0;\n
                                        v164[1 + 8 * v165] = v166;\n
                                        v164[2 + 8 * v165] = v157;\n
                                        v164[3 + 8 * v165] = v4;\n
                                        v164[7 + 8 * v165] = v12;\n
                                        v73 = v166;\n
                                        v1 = v165 + 1;\n
                                        v88 = v3;\n
                                        if (v166 < 2)\n
                                            goto LABEL_405a69;\n
LABEL_4059e8:\n
                                        v4 = v73 - 2;\n
                                        v168 = v4 + v157 * 8;\n
                                        v169 = (0 CONCAT 1) << (v168 & 31) >> 32;\n
                                        v170 = 1 << (v168 & 31);\n
                                        if ((v168 & 32))\n
                                            v169 = v170;\n
                                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                            v170 = 0;\n
                                        v73 = v170 & v8 | v169 & v7;\n
                                        if (!v73)\n
                                        {\n
                                            v171 = v170 & v5;\n
                                            v172 = v169 & v6;\n
                                            v173 = 0;\n
                                            if (!(!v172) || !(!v171))\n
                                                v173 = 100;\n
                                            v73 = v9;\n
                                            v174 = v1;\n
                                            v73[8 * v174] = v2;\n
                                            v73[1 + 8 * v174] = v0;\n
                                            v73[2 + 8 * v174] = v157;\n
                                            v73[3 + 8 * v174] = v4;\n
                                            v73[7 + 8 * v174] = v173;\n
                                            v1 = v174 + 1;\n
                                        }\n
                                        v88 = v3;\n
                                        goto LABEL_405a69;\n
                                    }\n
                                }\n
                                if (v73 < 2)\n
                                    goto LABEL_405a69;\n
                                goto LABEL_4059e8;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            v139 = v2 + 1;\n
                            v73 = v0;\n
                            if (v73 - 6 >= -8)\n
                            {\n
                                v4 = v73 + 2;\n
                                v140 = v4 + v139 * 8;\n
                                v141 = (0 CONCAT 1) << (v140 & 31) >> 32;\n
                                v142 = 1 << (v140 & 31);\n
                                if ((v140 & 32))\n
                                    v141 = v142;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v142 = 0;\n
                                if (!(!(v142 & v8)) || !(!(v141 & v7)))\n
                                {\n
                                    v88 = v3;\n
                                    v73 = v0;\n
                                }\n
                                else\n
                                {\n
                                    v143 = v142 & v5;\n
                                    v144 = v141 & v6;\n
                                    v145 = 0;\n
                                    if (!(!v144) || !(!v143))\n
                                        v145 = 100;\n
                                    v12 = v145;\n
                                    v146 = v9;\n
                                    v147 = v1;\n
                                    v146[8 * v147] = v2;\n
                                    v148 = v0;\n
                                    v146[1 + 8 * v147] = v148;\n
                                    v146[2 + 8 * v147] = v139;\n
                                    v146[3 + 8 * v147] = v4;\n
                                    v146[7 + 8 * v147] = v12;\n
                                    v73 = v148;\n
                                    v1 = v147 + 1;\n
                                    v88 = v3;\n
                                    if (v148 < 2)\n
                                        goto LABEL_40597e;\n
LABEL_4058fd:\n
                                    v4 = v73 - 2;\n
                                    v150 = v4 + v139 * 8;\n
                                    v151 = (0 CONCAT 1) << (v150 & 31) >> 32;\n
                                    v152 = 1 << (v150 & 31);\n
                                    if ((v150 & 32))\n
                                        v151 = v152;\n
                                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                        v152 = 0;\n
                                    v73 = v152 & v8 | v151 & v7;\n
                                    if (!v73)\n
                                    {\n
                                        v153 = v152 & v5;\n
                                        v154 = v151 & v6;\n
                                        v155 = 0;\n
                                        if (!(!v154) || !(!v153))\n
                                            v155 = 100;\n
                                        v73 = v9;\n
                                        v156 = v1;\n
                                        v73[8 * v156] = v2;\n
                                        v73[1 + 8 * v156] = v0;\n
                                        v73[2 + 8 * v156] = v139;\n
                                        v73[3 + 8 * v156] = v4;\n
                                        v73[7 + 8 * v156] = v173;\n
                                        v1 = v156 + 1;\n
                                    }\n
                                    v88 = v3;\n
                                    goto LABEL_40597e;\n
                                }\n
                            }\n
                            if (v73 < 2)\n
                                goto LABEL_40597e;\n
                            goto LABEL_4058fd;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v122 = v2 - 2;\n
                        v73 = v0;\n
                        if (v73 - 7 >= -8)\n
                        {\n
                            v4 = v73 + 1;\n
                            v123 = v4 + v122 * 8;\n
                            v124 = (0 CONCAT 1) << (v123 & 31) >> 32;\n
                            v125 = 1 << (v123 & 31);\n
                            if ((v123 & 32))\n
                                v124 = v125;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v125 = 0;\n
                            if (!(!(v125 & v8)) || !(!(v124 & v7)))\n
                            {\n
                                v88 = v3;\n
                                v73 = v0;\n
                            }\n
                            else\n
                            {\n
                                v126 = v125 & v5;\n
                                v127 = v124 & v6;\n
                                v128 = 0;\n
                                if (!(!v127) || !(!v126))\n
                                    v128 = 100;\n
                                v12 = v128;\n
                                v129 = v9;\n
                                v130 = v1;\n
                                v129[8 * v130] = v2;\n
                                v131 = v0;\n
                                v129[1 + 8 * v130] = v131;\n
                                v129[2 + 8 * v130] = v122;\n
                                v129[3 + 8 * v130] = v4;\n
                                v129[7 + 8 * v130] = v12;\n
                                v73 = v131;\n
                                v1 = v130 + 1;\n
                                v88 = v3;\n
                                if (v131 <= 0)\n
                                    goto LABEL_405893;\n
LABEL_405819:\n
                                v4 = v73 - 1;\n
                                v133 = v4 + v122 * 8;\n
                                v134 = (0 CONCAT 1) << (v133 & 31) >> 32;\n
                                v73 = 1 << (v133 & 31);\n
                                if ((v133 & 32))\n
                                    v134 = v73;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v73 = 0;\n
                                if (!(v73 & v8) && !(v134 & v7))\n
                                {\n
                                    v135 = v73 & v5;\n
                                    v136 = v134 & v6;\n
                                    v137 = 0;\n
                                    if (!(!v136) || !(!v135))\n
                                        v137 = 100;\n
                                    v73 = v9;\n
                                    v138 = v1;\n
                                    v73[8 * v138] = v2;\n
                                    v73[1 + 8 * v138] = v0;\n
                                    v73[2 + 8 * v138] = v122;\n
                                    v73[3 + 8 * v138] = v4;\n
                                    v73[7 + 8 * v138] = v137;\n
                                    v1 = v138 + 1;\n
                                }\n
                                v88 = v3;\n
                                goto LABEL_405893;\n
                            }\n
                        }\n
                        if (v73 <= 0)\n
                            goto LABEL_405893;\n
                        goto LABEL_405819;\n
                    }\n
                }\n
            }\n
        } while (!(!v86) || !(!v87));\n
    }\n
    v276 = v11;\n
    v348 = v16;\n
    v176 = v11[1 + 20 + 2 * v348];\n
    v177 = v11[1 + 21 + 2 * v348];\n
    v275 = v11[1 + 17 + 2 * v348] | v177;\n
    if (!(!v176) || !(!v275))\n
    {\n
        v178 = -1;\n
        v176 = v11[1 + 16 + 2 * v348] | v176;\n
        do\n
        {\n
            if (ExpCmpNE(v350, 0))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v180 = (ExpCmpNE(v179, 0) ? tmp_8 : v348);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v180 = (ExpCmpNE(v179, 0) ? tmp_8 : v348);\n
            }\n
            v13 = v275;\n
            if (ExpCmpNE(v275, 0))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v181 = (ExpCmpNE(v275, 0) ? tmp_8 : v177);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v181 = (ExpCmpNE(v275, 0) ? tmp_8 : v177);\n
            }\n
            v182 = v181 + 32;\n
            v14 = v179;\n
            if (v179)\n
                v182 = v180;\n
            v183 = v182 + v178 + 1;\n
            v15 = v182;\n
            v184 = v182 + v178 + 8;\n
            if ((v183 >> 31 & 1 ^ 1))\n
                v184 = v183;\n
            v0 = v184 >> 3;\n
            v10 = v184 & -8;\n
            v12 = v183;\n
            v2 = v183 - v10;\n
            if (v2 <= 6)\n
            {\n
                v185 = (0 CONCAT 1) << (v183 + 1 & 31) >> 32;\n
                v186 = 1 << (v183 + 1 & 31);\n
                if ((v183 + 1 & 32))\n
                    v185 = v186;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v186 = 0;\n
                v3 = v183 - 64;\n
                v187 = v2 + 1;\n
                do\n
                {\n
                    v188 = v11;\n
                    v189 = v188[172] & v186;\n
                    v190 = v188[173] & v185;\n
                    *(&v178) = v187 - 1 < -1 | v3 < -71;\n
                    if ((!(!v190) || !(!v189)) && !v178)\n
                    {\n
                        v183 = v10 + v187;\n
                        v198 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                        v199 = 1 << (v183 & 31);\n
                        if ((v183 & 32))\n
                            v198 = v199;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v199 = 0;\n
                        if (!(v199 & v8) && !(v198 & v7) && (!(!(v199 & v5)) || !(!(v198 & v6))))\n
                        {\n
                            v200 = v9;\n
                            v183 = v1;\n
                            v201 = v0;\n
                            v200[8 * v183] = v201;\n
                            v200[1 + 8 * v183] = v2;\n
                            v200[2 + 8 * v183] = v201;\n
                            v200[3 + 8 * v183] = v187;\n
                            v200[7 + 8 * v183] = 100;\n
                            v1 = v183 + 1;\n
                            break;\n
                        }\n
                    }\n
                    if (!v178)\n
                    {\n
                        v183 = v10 + v187;\n
                        v191 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                        v192 = 1 << (v183 & 31);\n
                        if ((v183 & 32))\n
                            v191 = v192;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v192 = 0;\n
                        if (!(v192 & v8) && !(v191 & v7))\n
                        {\n
                            v193 = v192 & v5;\n
                            v194 = v191 & v6;\n
                            v183 = 0;\n
                            if (!(!v194) || !(!v193))\n
                                v183 = 100;\n
                            v4 = v183;\n
                            v195 = v9;\n
                            v196 = v1;\n
                            v197 = v0;\n
                            v195[8 * v196] = v197;\n
                            v195[1 + 8 * v196] = v2;\n
                            v195[2 + 8 * v196] = v197;\n
                            v195[3 + 8 * v196] = v187;\n
                            v195[7 + 8 * v196] = v4;\n
                            v1 = v196 + 1;\n
                        }\n
                    }\n
                    v185 = (v185 CONCAT v186) * 2 >> 32;\n
                    v186 *= 2;\n
                    v187 += 1;\n
                } while (v187 != 8);\n
                if (v2 <= 0)\n
                    goto LABEL_405f20;\n
            }\n
            v202 = v12;\n
            v203 = (0 CONCAT 1) << (v202 - 1 & 31) >> 32;\n
            v204 = 1 << (v202 - 1 & 31);\n
            if ((v202 - 1 & 32))\n
                v203 = v204;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v204 = 0;\n
            v205 = v202 - 64;\n
            v206 = v2 - 1;\n
            v3 = v205;\n
            do\n
            {\n
                v183 = v11;\n
                if ((!(!(v183[173] & v203)) || !(!(v183[172] & v204))) && v205 >= -71)\n
                {\n
                    v183 = v10 + v206;\n
                    v214 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                    v215 = 1 << (v183 & 31);\n
                    if ((v183 & 32))\n
                        v214 = v215;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v215 = 0;\n
                    if (!(v215 & v8) && !(v214 & v7) && (!(!(v215 & v5)) || !(!(v214 & v6))))\n
                    {\n
                        v216 = v9;\n
                        v183 = v1;\n
                        v217 = v0;\n
                        v216[8 * v183] = v217;\n
                        v216[1 + 8 * v183] = v2;\n
                        v216[2 + 8 * v183] = v201;\n
                        v216[3 + 8 * v183] = v206;\n
                        v216[7 + 8 * v183] = 100;\n
                        v1 = v183 + 1;\n
                        break;\n
                    }\n
                }\n
                if (v205 >= -71)\n
                {\n
                    v183 = v10 + v206;\n
                    v207 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                    v208 = 1 << (v183 & 31);\n
                    if ((v183 & 32))\n
                        v207 = v208;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v208 = 0;\n
                    if (!(v208 & v8) && !(v207 & v7))\n
                    {\n
                        v209 = v208 & v5;\n
                        v210 = v207 & v6;\n
                        v183 = 0;\n
                        if (!(!v210) || !(!v209))\n
                            v183 = 100;\n
                        v4 = v183;\n
                        v211 = v9;\n
                        v212 = v1;\n
                        v213 = v0;\n
                        v211[8 * v212] = v213;\n
                        v211[1 + 8 * v212] = v2;\n
                        v211[2 + 8 * v212] = v213;\n
                        v211[3 + 8 * v212] = v206;\n
                        v211[7 + 8 * v212] = v4;\n
                        v1 = v212 + 1;\n
                    }\n
                    v205 = v3;\n
                }\n
                v204 = (v203 CONCAT v204) >> 1;\n
                v203 /= 2;\n
                tmp_18 = v206 + 1;\n
                v206 -= 1;\n
            } while (tmp_18 > 1);\n
LABEL_405f20:\n
            if (v12 > 55)\n
            {\n
                v276 = v11;\n
                v223 = v0;\n
            }\n
            else\n
            {\n
                v218 = v0;\n
                v219 = v2;\n
                v220 = v219 + v218 * 8 + 8;\n
                v221 = (0 CONCAT 1) << (v220 & 31) >> 32;\n
                v222 = 1 << (v220 & 31);\n
                if ((v220 & 32))\n
                    v221 = v222;\n
                v224 = v218 + 1;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v222 = 0;\n
                v183 = v219 + v10 + 8;\n
                do\n
                {\n
                    v225 = v11;\n
                    v177 = v225[172] & v222;\n
                    v3 = v224;\n
                    v226 = v224 | v2;\n
                    if ((!(!(v225[173] & v221)) || !(!v177)) && v226 >= 0)\n
                    {\n
                        v234 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                        v177 = 1 << (v183 & 31);\n
                        if ((v183 & 32))\n
                            v234 = v177;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v177 = 0;\n
                        if (!(v177 & v8) && !(v234 & v7))\n
                        {\n
                            v177 = v177 & v5 | v234 & v6;\n
                            if (v177)\n
                            {\n
                                v235 = v9;\n
                                v183 = v1;\n
                                v235[8 * v183] = v0;\n
                                v236 = v2;\n
                                v235[1 + 8 * v183] = v236;\n
                                v235[2 + 8 * v183] = v3;\n
                                v235[3 + 8 * v183] = v236;\n
                                v235[7 + 8 * v183] = 100;\n
                                v1 = v183 + 1;\n
                                break;\n
                            }\n
                        }\n
                    }\n
                    if (v226 < 0)\n
                    {\n
LABEL_405f70:\n
                        v177 = v3;\n
                        continue;\n
                    }\n
                    else\n
                    {\n
                        v227 = (0 CONCAT 1) << (v183 & 31) >> 32;\n
                        v228 = 1 << (v183 & 31);\n
                        if ((v183 & 32))\n
                            v227 = v228;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v228 = 0;\n
                        if (!(!(v228 & v8)) || !(!(v227 & v7)))\n
                            goto LABEL_405f70;\n
                        v229 = v228 & v5;\n
                        v230 = v227 & v6;\n
                        v231 = 0;\n
                        if (!(!v230) || !(!v229))\n
                            v231 = 100;\n
                        v4 = v231;\n
                        v232 = v9;\n
                        v233 = v1;\n
                        v232[8 * v233] = v0;\n
                        v232[1 + 8 * v233] = v2;\n
                        v177 = v3;\n
                        v232[2 + 8 * v233] = v177;\n
                        v232[3 + 8 * v233] = v2;\n
                        v232[7 + 8 * v233] = v4;\n
                        v1 = v233 + 1;\n
                    }\n
                    v224 = v177 + 1;\n
                    v221 = (v221 CONCAT v222) * 0x100 >> 32;\n
                    v222 *= 0x100;\n
                    v183 += 8;\n
                } while (v177 < 7);\n
                v276 = v11;\n
                v223 = v0;\n
                if (v12 < 8)\n
                    goto LABEL_406250;\n
            }\n
            v237 = v2;\n
            *(&v183) = (v237 + v223 * 8) - 8;\n
            v238 = (0 CONCAT 1) << (*(&v183) & 31) >> 32;\n
            v239 = 1 << (*(&v183) & 31);\n
            if ((*(&v183) & 32))\n
                v238 = v239;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v239 = 0;\n
            v240 = v0;\n
            v4 = v240;\n
            v241 = v10 + v237 - 8;\n
            do\n
            {\n
                v0 = v240;\n
                v242 = v240 - 1;\n
                v177 = *((v276 + 688)) & v239;\n
                if (!(!(!(*((v276 + 692)) & v238)) || !(!v177)))\n
                {\n
                    if (v242 <= 7 && v2 >= 0)\n
                    {\n
                        v243 = (0 CONCAT 1) << (v241 & 31) >> 32;\n
                        v177 = 1 << (v241 & 31);\n
                        if ((v241 & 32))\n
                            v243 = v177;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v177 = 0;\n
                        if (!(!(v177 & v8)) || !(!(v243 & v7)))\n
                        {\n
                            v276 = v11;\n
                        }\n
                        else\n
                        {\n
                            v244 = v177 & v5;\n
                            v245 = v243 & v6;\n
                            v246 = 0;\n
                            if (!(!v245) || !(!v244))\n
                                v246 = 100;\n
                            v3 = v246;\n
                            v177 = v9;\n
                            *((v177 + v1 * 8)) = v4;\n
                            *((v177 + v1 * 8 + 1)) = v2;\n
                            v248 = v0;\n
                            *((v177 + v1 * 8 + 2)) = v248 - 1;\n
                            v247 = v248;\n
                            *((v177 + v1 * 8 + 3)) = v2;\n
                            *((v177 + v1 * 8 + 7)) = v3;\n
                            v1 += 1;\n
                            v276 = v11;\n
                            continue;\n
                        }\n
                    }\n
                    v247 = v0;\n
                }\n
                else if (v242 <= 7 && v2 >= 0)\n
                {\n
                    v249 = (0 CONCAT 1) << (v241 & 31) >> 32;\n
                    v250 = 1 << (v241 & 31);\n
                    if ((v241 & 32))\n
                        v249 = v250;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v250 = 0;\n
                    v177 = v250 & v8 | v249 & v7;\n
                    if (!v177 && (!(!(v250 & v5)) || !(!(v249 & v6))))\n
                    {\n
                        v251 = v9;\n
                        v252 = v1;\n
                        v251[8 * v252] = v4;\n
                        v253 = v2;\n
                        v251[1 + 8 * v252] = v253;\n
                        v251[2 + 8 * v252] = v0 - 1;\n
                        v251[3 + 8 * v252] = v253;\n
                        v251[7 + 8 * v252] = 100;\n
                        v1 = v252 + 1;\n
                        break;\n
                    }\n
                }\n
                v239 = (v238 CONCAT v239) >> 8;\n
                v238 /= 0x100;\n
                tmp_16 = v241;\n
                v241 -= 8;\n
                v240 = v247 - 1;\n
            } while (!([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>)));\n
LABEL_406250:\n
            v254 = v15 + 1;\n
            v255 = v13;\n
            v179 = (v255 CONCAT v14) >> (v254 & 31);\n
            v275 = v255 >> (v254 & 31);\n
            if ((v254 & 32))\n
                v179 = v275;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v275 = 0;\n
            if (!v179 && !v275)\n
                break;\n
            continue;\n
            v348 = v12;\n
            v178 = v348;\n
        } while (v348 < 63);\n
        v348 = v16;\n
        v176 = *((v276 + v348 * 8 + 776));\n
        v177 = *((v276 + v348 * 8 + 780));\n
    }\n
    v350 = v176 | *((v276 + v348 * 8 + 744));\n
    v351 = v177 | *((v276 + v348 * 8 + 748));\n
    if (!(!v350) || !(!v351))\n
    {\n
        v352 = -1;\n
        while (true)\n
        {\n
            if (!(ExpCmpNE(v350, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v256 = (ExpCmpNE(v350, 0) ? tmp_8 : v348);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v256 = (ExpCmpNE(v350, 0) ? tmp_8 : v348);\n
            }\n
            if (!(ExpCmpNE(v351, 0)))\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v257 = (ExpCmpNE(v351, 0) ? tmp_8 : v275);\n
            }\n
            else\n
            {\n
                tmp_8 = UnaryOp Ctz;\n
                v257 = (ExpCmpNE(v351, 0) ? tmp_8 : v275);\n
            }\n
            v258 = v257 + 32;\n
            if (v350)\n
                v258 = v256;\n
            v259 = v258 + v352 + 8;\n
            v19 = v258;\n
            v260 = v352 + v258 + 1;\n
            v15 = v260;\n
            if ((v260 >> 31 & 1 ^ 1))\n
                v259 = v260;\n
            v275 = v259 >> 3;\n
            v261 = v260 - (v259 & -8);\n
            v2 = v275 + 1;\n
            v0 = v261 + 1;\n
            v13 = v275;\n
            v14 = v261;\n
            v21 = v350;\n
            v20 = v351;\n
            v18 = v275 * 8 + 8;\n
            if (v260 <= 55 && v14 <= 6)\n
            {\n
                v262 = v0;\n
                v263 = v18 + v262;\n
                v286 = (0 CONCAT 1) << (v263 & 31) >> 32;\n
                v275 = 1 << (v263 & 31);\n
                if ((v263 & 32))\n
                    v286 = v275;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v275 = 0;\n
                v287 = v14 + v13 * 8 + 9;\n
                v285 = v262;\n
                v284 = v2;\n
                do\n
                {\n
                    v264 = v275;\n
                    v275 = v286;\n
                    v4 = v264;\n
                    v265 = *((v276 + 688)) & v4;\n
                    v266 = v276;\n
                    v267 = v285;\n
                    v268 = v284;\n
                    v270 = v266[173];\n
                    v12 = v275;\n
                    v271 = v270 & v275;\n
                    v10 = v268;\n
                    v3 = v267;\n
                    v272 = (v10 | v3) >> 31;\n
                    if (!(!v271) || !(!v265))\n
                    {\n
                        if (!v272)\n
                        {\n
                            v288 = (0 CONCAT 1) << (v287 & 31) >> 32;\n
                            v289 = 1 << (v287 & 31);\n
                            if ((v287 & 32))\n
                                v288 = v289;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v289 = 0;\n
                            v275 = v289 & v8 | v288 & v7;\n
                            if (!v275 && (!(!(v289 & v5)) || !(!(v288 & v6))))\n
                            {\n
                                v290 = v9;\n
                                v291 = v1;\n
                                v290[8 * v291] = v13;\n
                                v290[1 + 8 * v291] = v14;\n
                                v290[2 + 8 * v291] = v10;\n
                                v290[3 + 8 * v291] = v3;\n
                                v290[7 + 8 * v291] = 100;\n
                                v1 = v291 + 1;\n
                                break;\n
                            }\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (!v272)\n
                        {\n
                            v274 = (0 CONCAT 1) << (v287 & 31) >> 32;\n
                            v273 = 1 << (v287 & 31);\n
                            if ((v287 & 32))\n
                                v274 = v273;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v273 = 0;\n
                            v275 = v4;\n
                            if (!(!(v273 & v8)) || !(!(v274 & v7)))\n
                            {\n
                                v276 = v11;\n
                                v277 = v3;\n
                                v278 = v10;\n
                            }\n
                            else\n
                            {\n
                                v279 = v273 & v5;\n
                                v280 = v274 & v6;\n
                                v281 = 0;\n
                                if (!(!v280) || !(!v279))\n
                                    v281 = 100;\n
                                v282 = v1;\n
                                v9[8 * v282] = v13;\n
                                v9[1 + 8 * v282] = v14;\n
                                v278 = v10;\n
                                v9[2 + 8 * v282] = v278;\n
                                v277 = v3;\n
                                v9[3 + 8 * v282] = v277;\n
                                v9[7 + 8 * v282] = v281;\n
                                v1 = v282 + 1;\n
                                v276 = v11;\n
                            }\n
                            v283 = v12;\n
                            if (v278 > 6)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v277 = v3;\n
                            v276 = v266;\n
                            v278 = v10;\n
                            v283 = v12;\n
                            v275 = v4;\n
                            if (v278 > 6)\n
                                break;\n
                            continue;\n
                        }\n
                    }\n
                    v284 = v278 + 1;\n
                    v285 = v277 + 1;\n
                    v286 = (v283 CONCAT v275) * 0x200 >> 32;\n
                    v275 *= 0x200;\n
                    v287 += 9;\n
                } while (v277 < 7);\n
            }\n
            v292 = v13;\n
            v3 = v292 - 1;\n
            v12 = v292 * 8 - 8;\n
            if (v15 >= 8)\n
            {\n
                v293 = v14;\n
                if (v293 <= 6)\n
                {\n
                    v294 = v0 + v12;\n
                    v295 = (0 CONCAT 1) << (v294 & 31) >> 32;\n
                    v275 = 1 << (v294 & 31);\n
                    if ((v294 & 32))\n
                        v295 = v275;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v275 = 0;\n
                    v296 = v293 + v13 * 8 - 7;\n
                    v297 = v3;\n
                    do\n
                    {\n
                        v298 = v11;\n
                        if (!(!(!(v298[173] & v295)) || !(!(v298[172] & v275))))\n
                        {\n
                            if (v297 <= 7 && v0 >= 0)\n
                            {\n
                                v10 = v297;\n
                                v299 = (0 CONCAT 1) << (v296 & 31) >> 32;\n
                                v300 = 1 << (v296 & 31);\n
                                if ((v296 & 32))\n
                                    v299 = v300;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v300 = 0;\n
                                if (!(!(v300 & v8)) || !(!(v299 & v7)))\n
                                {\n
                                    v297 = v10;\n
                                }\n
                                else\n
                                {\n
                                    v301 = v300 & v5;\n
                                    v302 = v299 & v6;\n
                                    v303 = 0;\n
                                    if (!(!v302) || !(!v301))\n
                                        v303 = 100;\n
                                    v4 = v303;\n
                                    v304 = v9;\n
                                    v305 = v1;\n
                                    v304[8 * v305] = v13;\n
                                    v304[1 + 8 * v305] = v14;\n
                                    v306 = v10;\n
                                    v304[2 + 8 * v305] = v306;\n
                                    v304[3 + 8 * v305] = v0;\n
                                    v297 = v306;\n
                                    v304[7 + 8 * v305] = v4;\n
                                    v1 = v305 + 1;\n
                                    if (v306 <= 0)\n
                                        break;\n
                                    continue;\n
                                }\n
                            }\n
                            if (v297 <= 0)\n
                                break;\n
                            continue;\n
                        }\n
                        else if (v297 <= 7 && v0 >= 0)\n
                        {\n
                            v308 = (0 CONCAT 1) << (v296 & 31) >> 32;\n
                            v309 = 1 << (v296 & 31);\n
                            if ((v296 & 32))\n
                                v308 = v309;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v309 = 0;\n
                            if (!(v309 & v8) && !(v308 & v7) && (!(!(v309 & v5)) || !(!(v308 & v6))))\n
                            {\n
                                v310 = v9;\n
                                v311 = v1;\n
                                v310[8 * v311] = v13;\n
                                v310[1 + 8 * v311] = v14;\n
                                v310[2 + 8 * v311] = v297;\n
                                v310[3 + 8 * v311] = v0;\n
                                v310[7 + 8 * v311] = 100;\n
                                v1 = v311 + 1;\n
                                break;\n
                            }\n
                        }\n
                        v297 -= 1;\n
                        v307 = v0;\n
                        v275 = (v295 CONCAT v275) >> 7;\n
                        v295 /= 128;\n
                        v296 -= 7;\n
                        v0 = v307 + 1;\n
                    } while (v307 < 7);\n
                }\n
            }\n
            v312 = v14;\n
            v0 = v312 - 1;\n
            if (v15 <= 55 && v312 > 0)\n
            {\n
                v313 = v0;\n
                v314 = v18 + v313;\n
                v275 = (0 CONCAT 1) << (v314 & 31) >> 32;\n
                v315 = 1 << (v314 & 31);\n
                if ((v314 & 32))\n
                    v275 = v315;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v315 = 0;\n
                v316 = v312 + v13 * 8 + 7;\n
                v10 = v313;\n
                do\n
                {\n
                    v317 = v11;\n
                    if (!(!(!(v317[173] & v275)) || !(!(v317[172] & v315))))\n
                    {\n
                        v318 = v2;\n
                        if (v318 >= 0)\n
                        {\n
                            v319 = (0 CONCAT 1) << (v316 & 31) >> 32;\n
                            v320 = 1 << (v316 & 31);\n
                            if ((v316 & 32))\n
                                v319 = v320;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v320 = 0;\n
                            if (!(!(v320 & v8)) || !(!(v319 & v7)))\n
                            {\n
                                v318 = v2;\n
                            }\n
                            else\n
                            {\n
                                v321 = v320 & v5;\n
                                v322 = v319 & v6;\n
                                v323 = 0;\n
                                if (!(!v322) || !(!v321))\n
                                    v323 = 100;\n
                                v4 = v323;\n
                                v324 = v9;\n
                                v325 = v1;\n
                                v324[8 * v325] = v13;\n
                                v324[1 + 8 * v325] = v14;\n
                                v326 = v2;\n
                                v324[2 + 8 * v325] = v326;\n
                                v318 = v326;\n
                                v324[3 + 8 * v325] = v10;\n
                                v324[7 + 8 * v325] = v4;\n
                                v1 = v325 + 1;\n
                                if (v326 > 6)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        if (v318 > 6)\n
                            break;\n
                        continue;\n
                    }\n
                    else if (v2 >= 0)\n
                    {\n
                        v328 = (0 CONCAT 1) << (v316 & 31) >> 32;\n
                        v329 = 1 << (v316 & 31);\n
                        if ((v316 & 32))\n
                            v328 = v329;\n
                        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                            v329 = 0;\n
                        v275 = v329 & v8 | v328 & v7;\n
                        if (!v275 && (!(!(v329 & v5)) || !(!(v328 & v6))))\n
                        {\n
                            v330 = v9;\n
                            v331 = v1;\n
                            v330[8 * v331] = v13;\n
                            v330[1 + 8 * v331] = v14;\n
                            v330[2 + 8 * v331] = v2;\n
                            v330[3 + 8 * v331] = v10;\n
                            v330[7 + 8 * v331] = 100;\n
                            v1 = v331 + 1;\n
                            break;\n
                        }\n
                    }\n
                    v2 = v318 + 1;\n
                    v327 = v10;\n
                    v275 = (v275 CONCAT v315) * 128 >> 32;\n
                    v315 *= 128;\n
                    v316 += 7;\n
                    v10 = v327 - 1;\n
                } while (v327 > 0);\n
            }\n
            if (v15 < 8)\n
            {\n
                v276 = v11;\n
            }\n
            else\n
            {\n
                v332 = v14;\n
                v276 = v11;\n
                if (v332 > 0)\n
                {\n
                    v333 = v12 + v0;\n
                    v275 = (0 CONCAT 1) << (v333 & 31) >> 32;\n
                    v334 = 1 << (v333 & 31);\n
                    if ((v333 & 32))\n
                        v275 = v334;\n
                    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                        v334 = 0;\n
                    v335 = v332 + v13 * 8 - 9;\n
                    do\n
                    {\n
                        if (!(!(!(*((v276 + 692)) & v275)) || !(!(*((v276 + 688)) & v334))))\n
                        {\n
                            v336 = v3;\n
                            if (v336 <= 7)\n
                            {\n
                                v337 = (0 CONCAT 1) << (v335 & 31) >> 32;\n
                                v338 = 1 << (v335 & 31);\n
                                if ((v335 & 32))\n
                                    v337 = v338;\n
                                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                    v338 = 0;\n
                                if (!(!(v338 & v8)) || !(!(v337 & v7)))\n
                                {\n
                                    v276 = v11;\n
                                    v336 = v3;\n
                                }\n
                                else\n
                                {\n
                                    v339 = v338 & v5;\n
                                    v340 = v337 & v6;\n
                                    v341 = 0;\n
                                    if (!(!v340) || !(!v339))\n
                                        v341 = 100;\n
                                    v2 = v341;\n
                                    v342 = v9;\n
                                    *((v342 + v1 * 8)) = v13;\n
                                    *((v342 + v1 * 8 + 1)) = v14;\n
                                    v336 = v3;\n
                                    *((v342 + v1 * 8 + 2)) = v336;\n
                                    *((v342 + v1 * 8 + 3)) = v0;\n
                                    *((v342 + v1 * 8 + 7)) = v2;\n
                                    v1 += 1;\n
                                    v276 = v11;\n
                                    if (v336 <= 0)\n
                                        break;\n
                                    continue;\n
                                }\n
                            }\n
                            if (v336 <= 0)\n
                                break;\n
                            continue;\n
                        }\n
                        else if (v3 <= 7)\n
                        {\n
                            v344 = (0 CONCAT 1) << (v335 & 31) >> 32;\n
                            v345 = 1 << (v335 & 31);\n
                            if ((v335 & 32))\n
                                v344 = v345;\n
                            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                                v345 = 0;\n
                            if (!(v345 & v8) && !(v344 & v7) && (!(!(v345 & v5)) || !(!(v344 & v6))))\n
                            {\n
                                v346 = v9;\n
                                v347 = v1;\n
                                v346[8 * v347] = v13;\n
                                v346[1 + 8 * v347] = v14;\n
                                v346[2 + 8 * v347] = v3;\n
                                v346[3 + 8 * v347] = v0;\n
                                v346[7 + 8 * v347] = 100;\n
                                v1 = v347 + 1;\n
                                break;\n
                            }\n
                        }\n
                        v3 = v336 - 1;\n
                        v343 = v0;\n
                        v334 = (v275 CONCAT v334) >> 9;\n
                        v275 /= 0x200;\n
                        v335 -= 9;\n
                        v0 = v343 - 1;\n
                    } while (v343 > 0);\n
                }\n
            }\n
            v348 = v19 + 1;\n
            v349 = v20;\n
            v350 = (v349 CONCAT v21) >> (v348 & 31);\n
            v351 = v349 >> (v348 & 31);\n
            if ((v348 & 32))\n
                v350 = v351;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v351 = 0;\n
            if (!v350 && !v351)\n
                break;\n
            v352 = v15;\n
            if (v352 >= 63)\n
                break;\n
        }\n
    }\n
    v353 = v16;\n
    v354 = *((v276 + v353 * 8 + 792));\n
    if (!(ExpCmpNE(v354, 0)))\n
    {\n
        tmp_8 = UnaryOp Ctz;\n
        v355 = (ExpCmpNE(v354, 0) ? tmp_8 : v350);\n
    }\n
    else\n
    {\n
        tmp_8 = UnaryOp Ctz;\n
        v355 = (ExpCmpNE(v354, 0) ? tmp_8 : v350);\n
    }\n
    if (!(ExpCmpNE(*((v276 + (v353 << 3) + 796)), 0)))\n
    {\n
        tmp_14 = UnaryOp Ctz;\n
        v356 = (ExpCmpNE(*((v276 + (v353 << 3) + 796)), 0) ? tmp_14 : v353);\n
    }\n
    else\n
    {\n
        tmp_14 = UnaryOp Ctz;\n
        v356 = (ExpCmpNE(*((v276 + (v353 << 3) + 796)), 0) ? tmp_14 : v353);\n
    }\n
    v357 = v356 + 32;\n
    if (v354)\n
        v357 = v355;\n
    v358 = v357 / 8;\n
    v359 = v357 & 7;\n
    v360 = v359 - 1;\n
    v11[0] = v358;\n
    v0 = v359;\n
    if (v357 >= 8)\n
    {\n
        v3 = &v358[0] + 1;\n
        v361 = v3 * 8;\n
        v2 = v361;\n
        v10 = v360;\n
        if (v359)\n
        {\n
            v362 = v361 + v360;\n
            v363 = v360;\n
            v364 = (0 CONCAT 1) << (v362 & 31) >> 32;\n
            v365 = 1 << (v362 & 31);\n
            if ((v362 & 32))\n
                v364 = v365;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v365 = 0;\n
            if (!(v365 & v8) && !(v364 & v7))\n
            {\n
                if (!(!(v364 & v6)) || !(!(v365 & v5)))\n
                    v366 = 100;\n
                else\n
                    v366 = 0;\n
                v367 = v366;\n
                v368 = v9;\n
                v369 = v1;\n
                v368[8 * v369] = v11;\n
                v359 = v0;\n
                v368[1 + 8 * v369] = v359;\n
                v368[2 + 8 * v369] = v3;\n
                v368[3 + 8 * v369] = v137;\n
                v368[7 + 8 * v369] = v367;\n
                v1 = v369 + 1;\n
            }\n
            v361 = v2;\n
        }\n
        v370 = v361 | v359;\n
        v371 = (0 CONCAT 1) << (v370 & 31) >> 32;\n
        v372 = 1 << (v370 & 31);\n
        if ((v370 & 32))\n
            v371 = v372;\n
        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
            v372 = 0;\n
        if (!(v372 & v8) && !(v371 & v7))\n
        {\n
            if (!(!(v371 & v6)) || !(!(v372 & v5)))\n
                v373 = 100;\n
            else\n
                v373 = 0;\n
            v374 = v9;\n
            v375 = v1;\n
            v374[8 * v375] = v11;\n
            v359 = v0;\n
            v374[1 + 8 * v375] = v359;\n
            v374[2 + 8 * v375] = v3;\n
            v374[3 + 8 * v375] = v359;\n
            v374[7 + 8 * v375] = v173;\n
            v1 = v375 + 1;\n
        }\n
        v376 = v2;\n
        v360 = 6;\n
        if (v359 == 7)\n
            goto LABEL_406c09;\n
        v2 = v359 + 1;\n
        v358 = v376 + v2;\n
        v377 = (0 CONCAT 1) << (v358 & 31) >> 32;\n
        v378 = 1 << (v358 & 31);\n
        if ((v358 & 32))\n
            v377 = v378;\n
        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
            v378 = 0;\n
        if (!(v378 & v8) && !(v377 & v7))\n
        {\n
            v379 = v9;\n
            v380 = v1;\n
            *((v379 + v1 * 8)) = v11;\n
            v359 = v0;\n
            *((v379 + v1 * 8 + 1)) = v359;\n
            *((v379 + v1 * 8 + 2)) = v3;\n
            v381 = v378 & v5;\n
            *((v379 + v1 * 8 + 3)) = v2;\n
            v358 = 0;\n
            v382 = (!(v377 & v6) && !v381 ? 100 : 0);\n
            *((v379 + v380 * 8 + 7)) = v382;\n
            v1 = v380 + 1;\n
        }\n
        v360 = v10;\n
    }\n
    if (!v359)\n
    {\n
        v383 = v357 & 56;\n
        *(&v358) = 1;\n
        v3[0] = v358;\n
        v360 = 255;\n
        v387 = 1;\n
        goto LABEL_406cd0;\n
    }\n
LABEL_406c09:\n
    v383 = v357 & 56;\n
    v384 = v383 + v367;\n
    v385 = (0 CONCAT 1) << (v384 & 31) >> 32;\n
    v386 = 1 << (v384 & 31);\n
    if ((v384 & 32))\n
        v385 = v386;\n
    if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
        v386 = 0;\n
    v388 = v385 & v7;\n
    if (!(!(v386 & v8)) || !(!v388))\n
    {\n
        if (!(v359 == 7))\n
            goto LABEL_406cc7;\n
        goto LABEL_406c3f;\n
    }\n
    else\n
    {\n
        v389 = (!(v385 & v6) && !(v386 & v5) ? 100 : 0);\n
        v391 = v9;\n
        v392 = v1;\n
        v393 = v11;\n
        v391[8 * v392] = v393;\n
        v391[1 + 8 * v392] = v0;\n
        v391[2 + 8 * v392] = v393;\n
        v359 = v0;\n
        v391[3 + 8 * v392] = v367;\n
        v388 = v389;\n
        v391[7 + 8 * v392] = v388;\n
        v1 = v392 + 1;\n
        if (v359 == 7)\n
        {\n
LABEL_406c3f:\n
            v394 = v11;\n
            if (v394 == 7)\n
                goto LABEL_406eea;\n
            v395 = &v394[0] + 1;\n
            v2 = 8;\n
            *(&v388) = 1;\n
            v3 = v388;\n
            v396 = v360;\n
            goto LABEL_406d88;\n
        }\n
        else\n
        {\n
LABEL_406cc7:\n
            v387 = v359 + 1;\n
            v3 = 0;\n
LABEL_406cd0:\n
            v397 = v383 + v387;\n
            v398 = (0 CONCAT 1) << (v397 & 31) >> 32;\n
            v399 = 1 << (v397 & 31);\n
            if ((v397 & 32))\n
                v398 = v399;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v399 = 0;\n
            v2 = v387;\n
            if (!(!(v399 & v8)) || !(!(v398 & v7)))\n
            {\n
                v400 = v11;\n
                if (v400 == 7)\n
                    goto LABEL_406eea;\n
            }\n
            else\n
            {\n
                if (!(!(v398 & v6)) || !(!(v399 & v5)))\n
                    v401 = 100;\n
                else\n
                    v401 = 0;\n
                v402 = v9;\n
                v403 = v1;\n
                v404 = v387;\n
                v400 = v11;\n
                v402[8 * v403] = v400;\n
                v402[1 + 8 * v403] = v0;\n
                v402[2 + 8 * v403] = v400;\n
                v402[3 + 8 * v403] = v137;\n
                v402[7 + 8 * v403] = v397;\n
                v1 = v403 + 1;\n
                if (v400 == 7)\n
                    goto LABEL_406eea;\n
            }\n
            v395 = v400 + 1;\n
            if (!v3)\n
            {\n
                v396 = v360;\n
                v3 = 0;\n
                v359 = v0;\n
            }\n
            else\n
            {\n
                v10 = v395;\n
                v405 = v395 * 8;\n
                v3 = 0;\n
                v359 = v0;\n
                goto LABEL_406e02;\n
            }\n
LABEL_406d88:\n
            v406 = v396 + v395 * 8;\n
            v407 = (0 CONCAT 1) << (v406 & 31) >> 32;\n
            v408 = 1 << (v406 & 31);\n
            if ((v406 & 32))\n
                v407 = v408;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v408 = 0;\n
            v409 = v395;\n
            v405 = v395 * 8;\n
            v10 = v409;\n
            if (!(v408 & v8) && !(v407 & v7))\n
            {\n
                tmp_8 = v407 & v6 | v408 & v5;\n
                v410 = v396;\n
                v411 = v405;\n
                v412 = v9;\n
                v413 = v1;\n
                v412[8 * v413] = v11;\n
                v412[1 + 8 * v413] = v359;\n
                v412[2 + 8 * v413] = v10;\n
                v412[3 + 8 * v413] = v367;\n
                *(&v412[7 + 8 * v413]) = (!tmp_8 ? 100 : 0);\n
                v405 = v411;\n
                v1 = v413 + 1;\n
            }\n
LABEL_406e02:\n
            v415 = v397 | v359;\n
            v416 = (0 CONCAT 1) << (v415 & 31) >> 32;\n
            v417 = 1 << (v415 & 31);\n
            if ((v415 & 32))\n
                v416 = v417;\n
            if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                v417 = 0;\n
            if (!(!(v417 & v8)) || !(!(v416 & v7)))\n
            {\n
                v418 = v405;\n
            }\n
            else\n
            {\n
                v418 = v405;\n
                v419 = (!(v416 & v6) && !(v417 & v5) ? 100 : 0);\n
                v420 = v9;\n
                v421 = v1;\n
                v420[8 * v421] = v11;\n
                v359 = v0;\n
                v420[1 + 8 * v421] = v359;\n
                v420[2 + 8 * v421] = v10;\n
                v420[3 + 8 * v421] = v359;\n
                v420[7 + 8 * v421] = v419;\n
                v1 = v421 + 1;\n
            }\n
            if (!v3)\n
            {\n
                v422 = v2;\n
                v423 = v367 + v422;\n
                v424 = (0 CONCAT 1) << (v423 & 31) >> 32;\n
                v425 = 1 << (v423 & 31);\n
                if ((v423 & 32))\n
                    v424 = v425;\n
                if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
                    v425 = 0;\n
                if (!(v8 & v425) && !(v7 & v424))\n
                {\n
                    v426 = v9;\n
                    v427 = v1;\n
                    *((v426 + v1 * 8)) = v11;\n
                    *((v426 + v1 * 8 + 1)) = v359;\n
                    *((v426 + v1 * 8 + 2)) = v10;\n
                    v428 = v425 & v5;\n
                    *((v426 + v1 * 8 + 3)) = v422;\n
                    v429 = (!(v424 & v6) && !v428 ? 100 : 0);\n
                    *((v426 + v427 * 8 + 7)) = v429;\n
                    v1 = v427 + 1;\n
                }\n
            }\n
        }\n
    }\n
LABEL_406eea:\n
    *(v17) = v1;\n
    return v17;\n
}\n
", "4215001:sub_4050d9": null, "4215035:sub_4050fb": null, "4216424:sub_405668": null, "4218172:sub_405d3c": null, "4218532:sub_405ea4": null, "4218726:sub_405f66": null, "4218927:sub_40602f": null, "4218940:sub_40603c": null, "4219135:sub_4060ff": null, "4219332:sub_4061c4": null, "4220007:sub_406467": null, "4220438:sub_406616": null, "4220787:sub_406773": null, "4220891:sub_4067db": null, "4221320:sub_406988": null, "4221444:sub_406a04": null, "4222716:sub_406efc": null, "4222720:sub_406f00": "extern struct_0 *g_40d198;\n
\n
int sub_406f00(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int *v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    char v8;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // ecx\n
    unsigned int *v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // edi\n
    void* v23;  // eax\n
    unsigned int v24;  // ebx\n
    unsigned int v25;  // edx\n
    unsigned int v26;  // esi\n
    unsigned int *v27;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // ebx\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // esi\n
    unsigned int v35;  // ebx\n
\n
    v11 = &v12;\n
    v4 = 0;\n
    v1 = v14;\n
    v15 = v14 * 0x800 + g_40d198->field_264;\n
    v16 = sub_407100();\n
    v20 = v17;\n
    v18 = g_40d198->field_c;\n
    v21 = -(v16);\n
    if (v18 != 1)\n
        v21 = v16;\n
    v19 = v13;\n
    if (v21 > v17)\n
        v20 = v21;\n
    if (v20 >= v19)\n
        return v19;\n
    v0 = v20;\n
    v2 = v15;\n
    v23 = 0;\n
    *(&v20) = !v18;\n
    v24 = v1;\n
    if (v24 > 7)\n
        return v21;\n
    *(&v23) = v20;\n
    v25 = v17 & *((700 + &g_40d198->padding_0[0] + 0x8 * v23));\n
    v26 = sub_4041f0() & *((696 + &g_40d198->padding_0[0] + 0x8 * v23));\n
    if (!v26 && !*(&v8))\n
        return v21;\n
    v8 = v25;\n
    sub_405000();\n
    v6 = v4;\n
    if (!v6)\n
        return v21;\n
    v7 = v26;\n
    v5 = -(v13);\n
    v1 = v24 + 1;\n
    v27 = 0;\n
    while (true)\n
    {\n
        v3 = v21;\n
        v28 = v2;\n
        v29 = *((v28 + v27 * 8));\n
        v30 = (v29 >> 24) + (v29 * 0x100 >> 21 & -8);\n
        v31 = (0 CONCAT 1) << (v30 & 31) >> 32;\n
        v32 = 1 << (v30 & 31);\n
        if ((v30 & 32))\n
            v31 = v32;\n
        if ([D] x86g_calculate_condition(0x5<32>, 0xd<32>, Conv(8->32, (cl<1> & 0x20<8>)), 0x0<32>, 0x0<32>))\n
            v32 = 0;\n
        v33 = v31 & v8;\n
        v10 = *((v28 + v27 * 8 + 4));\n
        v9 = v29;\n
        if (!(v32 & v7) && !v33)\n
        {\n
            v21 = v3;\n
        }\n
        else if ((g_40d198[1].padding_0[8 + v30] & 15) != 5)\n
        {\n
            sub_403ac0();\n
            v34 = v0;\n
            v35 = -(sub_406f00(-(v34)));\n
            sub_404bc0();\n
            v21 = v3;\n
            if (v21 <= v35)\n
                v21 = v35;\n
            if (v21 > v34)\n
                v34 = v21;\n
            v0 = v34;\n
            if (v34 >= v13)\n
                break;\n
        }\n
        else\n
        {\n
            v0 = 10000000;\n
            break;\n
        }\n
        v27 += 1;\n
        if (v6 == v27)\n
            return v21;\n
    }\n
    return v0;\n
}\n
", "4222914:sub_406fc2": null, "4223174:sub_4070c6": null, "4223184:sub_4070d0": "int sub_4070d0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    char v2;  // [bp-0x4]\n
\n
    v0 = &v2;\n
    cgc_random(&v1, 4);\n
    return *(&v1) - (*(&v1) * 3435973837 >> 32 >> 2) * 5;\n
}\n
", "4223231:sub_4070ff": null, "4223232:sub_407100": "int sub_407100()\n
{\n
    int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebp\n
\n
    v4 = &v5;\n
    v3 = v7;\n
    v2 = v8;\n
    v1 = v9;\n
    sub_4041f0();\n
    *(&v0) = 0 CONCAT sub_4041f0();\n
    v10 = v1;\n
    v11 = v2;\n
    v12 = v3;\n
    v13 = v4;\n
    return;\n
}\n
", "4223792:sub_407330": "extern unsigned int g_40d7a0;\n
extern char g_40f72a;\n
extern char g_41090c;\n
extern char g_410987;\n
extern char g_410a12;\n
extern char g_410b0f;\n
extern char g_410b8f;\n
extern unsigned int g_410e51;\n
extern unsigned int g_410e55;\n
extern unsigned int g_410ed1;\n
extern unsigned int g_410ed5;\n
extern char g_410f05;\n
extern unsigned int g_410f51;\n
extern unsigned int g_410f55;\n
extern unsigned int g_410fd1;\n
extern unsigned int g_410fd5;\n
extern unsigned int g_411051;\n
extern unsigned int g_411055;\n
extern char g_411095;\n
extern unsigned int g_4110d1;\n
extern unsigned int g_4110d5;\n
extern char g_411101;\n
extern char g_411105;\n
extern unsigned int g_411151;\n
extern unsigned int g_411155;\n
extern char g_411184;\n
extern unsigned int g_4111d1;\n
extern unsigned int g_4111d5;\n
extern char g_41128e;\n
extern char g_411388;\n
\n
int sub_407330()\n
{\n
    g_410e55 = 33686018;\n
    g_410e51 = 33686018;\n
    g_410ed5 = 33686018;\n
    g_410ed1 = 33686018;\n
    g_410f55 = 33686018;\n
    g_410f51 = 33686018;\n
    g_410fd5 = 33686018;\n
    g_410fd1 = 33686018;\n
    g_411055 = 33686018;\n
    g_411051 = 33686018;\n
    g_4110d5 = 33686018;\n
    g_4110d1 = 33686018;\n
    g_411155 = 33686018;\n
    g_411151 = 33686018;\n
    g_4111d5 = 33686018;\n
    g_4111d1 = 33686018;\n
    g_41090c = 6;\n
    g_410987 = 10;\n
    g_410a12 = 17;\n
    g_410b0f = 20;\n
    g_410b8f = 24;\n
    g_410f05 = 25;\n
    g_411095 = 27;\n
    g_411101 = 30;\n
    g_411105 = 43;\n
    g_411184 = 35;\n
    g_41128e = 36;\n
    g_411388 = 39;\n
    g_40f72a = 52;\n
    return sub_401ad0(&g_40d7a0, 1, 0x4000);\n
}\n
", "4224064:sub_407440": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407440(unsigned int v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v1 = v3;\n
    v4 = a0;\n
    while (true)\n
    {\n
        if (!v4)\n
            return 1;\n
        v0 = &v1;\n
        cgc_receive(0, v2, v4);\n
        v5 = v1;\n
        v4 -= v5;\n
        if (!v5)\n
            return 0;\n
    }\n
}\n
", "4224122:sub_40747a": null, "4224128:sub_407480": "int sub_407480(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    unsigned int v7;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    v7 = v1;\n
    return cgc_transmit(1, v5, sub_4022b0(v5));\n
}\n
", "4224160:sub_4074a0": "int sub_4074a0(char a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = sub_401210(32);\n
    if (v1)\n
    {\n
        sub_402230(v1, \"move \");\n
        sub_407500();\n
        sub_402190(v1, \"\\n
\");\n
        sub_407480(v1);\n
        v1 = sub_4011c0(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4224256:sub_407500": "int sub_407500(unsigned int v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_7;  // tmp #7\n
    int tmp_6;  // tmp #6\n
    unsigned int v2;  // esi\n
    int v5;  // xmm0\n
    unsigned int *v6;  // ecx\n
    char v7;  // dl\n
    char v8;  // cl\n
    unsigned int v9;  // esi\n
\n
    v0 = v2;\n
    tmp_5 = ShrNV(tmp_4, 8);\n
    tmp_7 = ShlNV(tmp_6, 8);\n
    v5 = tmp_7 | tmp_5;\n
    *(v6) = v5;\n
    v7 = a0 - 1;\n
    v8 = ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, dl<1>), 0x4<32>, 0x0<32>) ? 0 : (1903321707 >> (v7 * 8 & 31)));\n
    *((*(&v8) + 4)) = v8;\n
    *((*(&v8) + 5)) = 0;\n
    v9 = v0;\n
    return *(&v8);\n
}\n
", "4224332:sub_40754c": null, "4224336:sub_407550": "typedef struct struct_0 {\n
    char padding_0[4240892];\n
    unsigned int field_40b5fc;\n
} struct_0;\n
\n
extern char g_40b5fc;\n
\n
int sub_407550(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (v1 <= 3)\n
    {\n
        v1 = sub_407480(*((0x4 * v1 + &g_40b5fc)));\n
        return v1;\n
    }\n
    return v0;\n
}\n
", "4224361:sub_407569": null, "4224382:sub_40757e": null, "4224398:sub_40758e": null, "4224400:sub_407590": null, "4224489:sub_4075e9": null, "4224496:sub_4075f0": "int sub_4075f0(unsigned int v0, unsigned int a0)\n
{\n
    sub_407480(\"Error (\");\n
    sub_407480(v0);\n
    sub_407480(\"): \");\n
    sub_407480(a0);\n
    return sub_407480(\"\\n
\");\n
}\n
", "4224566:sub_407636": null, "4224576:sub_407640": "int sub_407640(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v2 = v4;\n
    v0 = v5;\n
    v6 = v3;\n
    v7 = sub_4022b0(v6);\n
    sub_407480(\"Error (invalid command): \");\n
    sub_407480(v6);\n
    if (v7 && *((v7 + v6 - 1)) == 10)\n
        return 1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!sub_407440(&v0, 1))\n
            return 0;\n
        sub_407480(&v0);\n
        if (*(&v0 + 2) == 10)\n
            return 1;\n
    }\n
}\n
", "4224702:sub_4076be": null, "4224704:sub_4076c0": "extern char g_40d7a0;\n
\n
int sub_4076c0(char v5[3], unsigned int a0)\n
{\n
    char v0;  // [bp-0x15]\n
    char v1[3];  // [bp-0x14], Other Possible Types: char\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // ebp\n
    char v8[3];  // edi\n
    unsigned int v9;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // esi\n
\n
    v3 = &v4;\n
    v2 = v6;\n
    v7 = a0;\n
    v8 = v5;\n
    sub_401ad0(v8, 0, a0);\n
    if (!sub_407440(v8, 2))\n
        return 0;\n
    v9 = (&g_40d7a0)[v8[1] | v8[0] * 128];\n
    if (v9 == 1)\n
    {\n
        return sub_407640(v5);\n
    }\n
    else if (v9 == 52)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v18 = v9;\n
        v17 = 2;\n
        if (*(&v1) >= 3)\n
        {\n
            *(&v1) = v7 - 1;\n
        }\n
        else\n
        {\n
LABEL_407abf:\n
            if (v18 != 1)\n
            {\n
LABEL_407ad1:\n
                v8[v17] = 0;\n
                return v18;\n
            }\n
            v18 = sub_407640(v8);\n
            return v18;\n
        }\n
        while (true)\n
        {\n
            if (!sub_407440(&v0, 1))\n
                return 0;\n
            v11 = v0;\n
            v8[v17] = v11;\n
            v12 = 1;\n
            v13 = v18 - 2;\n
            switch (v13)\n
            {\n
            case 0:\n
                *(&v11) = v11 - 109;\n
                v18 = 3;\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, cl<1>), 0x8<32>, 0x0<32>))\n
                    break;\n
                goto LABEL_407abd;\n
            case 1:\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (al<1> - 0x39<8>)), 0xf8<32>, 0x0<32>))\n
                    goto LABEL_407abd;\n
                v15 = sub_401080(v11);\n
                v12 = 1;\n
                v18 = 4;\n
                goto LABEL_4077e5;\n
            case 2:\n
                if (v11 != 10)\n
                {\n
                    v15 = sub_401090(v14);\n
                    v12 = 1;\n
                    v18 = 5;\n
                }\n
                else\n
                {\n
                    v12 = 5;\n
                    goto LABEL_407abd;\n
                }\n
LABEL_4077e5:\n
                if (!(!v15))\n
                    break;\n
                goto LABEL_407abd;\n
            case 3:\n
                v12 = (v14 == 10) * 4 + 1;\n
                goto LABEL_407abd;\n
            case 4:\n
                v18 = 7;\n
                goto LABEL_407834;\n
            case 5:\n
                v18 = 8;\n
                goto LABEL_407805;\n
            case 6:\n
                v18 = 9;\n
                if (v11 == 107)\n
                    break;\n
                goto LABEL_407abd;\n
            case 7:\n
                v12 = (v14 == 10) * 8 + 1;\n
                goto LABEL_407abd;\n
            case 8:\n
                v18 = 11;\n
LABEL_407805:\n
                if (v14 == 99)\n
                    break;\n
                goto LABEL_407abd;\n
            case 9:\n
                v18 = 12;\n
                if (v11 == 98)\n
                    break;\n
                goto LABEL_407abd;\n
            case 10:\n
                v18 = 13;\n
                goto LABEL_4078e6;\n
            case 11:\n
                v18 = 14;\n
LABEL_407834:\n
                if (v11 == 97)\n
                    break;\n
                goto LABEL_407abd;\n
            case 12:\n
                v18 = 15;\n
                goto LABEL_407871;\n
            case 13:\n
                v18 = 16;\n
                goto LABEL_4078d3;\n
            case 14:\n
                v12 = (v11 == 10 ? 1 : 16);\n
                goto LABEL_407abd;\n
            case 15:\n
                v18 = 18;\n
                if (v14 == 97)\n
                    break;\n
                goto LABEL_407abd;\n
            case 16:\n
                v18 = 19;\n
                goto LABEL_4078a0;\n
            case 17:\n
                v12 = (v14 == 10 ? 1 : 19);\n
                goto LABEL_407abd;\n
            case 18:\n
                v18 = 21;\n
LABEL_407871:\n
                if (v14 == 114)\n
                    break;\n
                goto LABEL_407abd;\n
            case 19:\n
                v18 = 22;\n
                if (v11 == 99)\n
                    break;\n
                goto LABEL_407abd;\n
            case 20:\n
                v18 = 23;\n
                goto LABEL_407949;\n
            case 21:\n
                v12 = (v11 == 10 ? 1 : 23);\n
                goto LABEL_407abd;\n
            case 22:\n
                v12 = (v14 == 10 ? 1 : 24);\n
                goto LABEL_407abd;\n
            case 23:\n
                v18 = 26;\n
LABEL_4078a0:\n
                if (v11 == 119)\n
                    break;\n
                goto LABEL_407abd;\n
            case 24:\n
                v12 = (v11 == 10 ? 1 : 26);\n
                goto LABEL_407abd;\n
            case 25:\n
                v18 = 28;\n
                goto LABEL_407924;\n
            case 26:\n
                v18 = 29;\n
                goto LABEL_407936;\n
            case 27:\n
                v12 = (v14 == 10 ? 1 : 29);\n
                goto LABEL_407abd;\n
            case 28:\n
                v18 = 31;\n
                if (v14 == 110)\n
                    break;\n
                goto LABEL_407abd;\n
            case 29:\n
                v18 = 32;\n
LABEL_4078d3:\n
                if (v11 == 100)\n
                    break;\n
                goto LABEL_407abd;\n
            case 30:\n
                v18 = 33;\n
LABEL_4078e6:\n
                if (v14 == 111)\n
                    break;\n
                goto LABEL_407abd;\n
            case 31:\n
                v18 = 34;\n
                if (v11 == 109)\n
                    break;\n
                goto LABEL_407abd;\n
            case 32:\n
                v12 = (v11 == 10 ? 1 : 34);\n
                goto LABEL_407abd;\n
            case 33:\n
                v12 = (v14 == 32 ? 1 : 35);\n
                goto LABEL_407abd;\n
            case 34:\n
                v18 = 37;\n
                if (v14 == 100)\n
                    break;\n
                goto LABEL_407abd;\n
            case 35:\n
                v18 = 38;\n
                goto LABEL_40797c;\n
            case 36:\n
                v12 = (v11 == 10 ? 1 : 38);\n
                goto LABEL_407abd;\n
            case 37:\n
                v18 = 40;\n
LABEL_407924:\n
                if (v14 == 105)\n
                    break;\n
                goto LABEL_407abd;\n
            case 38:\n
                v18 = 41;\n
LABEL_407936:\n
                if (v11 == 116)\n
                    break;\n
                goto LABEL_407abd;\n
            case 39:\n
                v18 = 42;\n
LABEL_407949:\n
                if (v14 == 101)\n
                    break;\n
                goto LABEL_407abd;\n
            case 40:\n
                v12 = (v14 == 10 ? 1 : 42);\n
                goto LABEL_407abd;\n
            case 41:\n
                v18 = 44;\n
                if (v11 != 109 && v11 == 115)\n
                {\n
                    v18 = 48;\n
                    break;\n
                }\n
                v16 = v17 + -(v7) + 1;\n
                v17 += 1;\n
                if (v16 == -1)\n
                {\n
                    v17 = v1;\n
                    goto LABEL_407ad1;\n
                }\n
            case 42:\n
                v18 = 45;\n
LABEL_40797c:\n
                if (v11 == 111)\n
                    break;\n
                goto LABEL_407abd;\n
            case 43:\n
                v18 = 46;\n
                if (v14 == 118)\n
                    break;\n
                goto LABEL_407abd;\n
            case 44:\n
                v18 = 47;\n
                if (v11 == 101)\n
                    break;\n
                goto LABEL_407abd;\n
            case 45:\n
                v12 = (v11 == 10 ? 1 : 47);\n
                goto LABEL_407abd;\n
            case 46:\n
                v18 = 49;\n
                if (v14 == 117)\n
                    break;\n
                goto LABEL_407abd;\n
            case 47:\n
                v18 = 50;\n
                if (v11 == 108)\n
                    break;\n
                goto LABEL_407abd;\n
            case 48:\n
                v18 = 51;\n
                if (v14 == 116)\n
                    break;\n
                goto LABEL_407abd;\n
            case 49:\n
                v12 = (v14 == 32 ? 1 : 51);\n
                goto LABEL_407abd;\n
            default:\n
LABEL_407abd:\n
                v18 = v12;\n
                goto LABEL_407abf;\n
            }\n
        }\n
    }\n
}\n
", "4225759:sub_407adf": null, "4225760:sub_407ae0": "int sub_407ae0(char v0[5])\n
{\n
    char v1[5];  // edx\n
    char v2;  // cl\n
    char v3;  // al\n
    char v4;  // ch\n
    char v5;  // ah\n
\n
    v1 = v0;\n
    v2 = v1[0];\n
    v3 = v1[1];\n
    v4 = v1[2];\n
    v5 = v1[3];\n
    switch (v1[4])\n
    {\n
    case 98:\n
        return v3 - 49 | (v2 - 109) * 0x100 | (v5 - 49) * 0x10000 | (v4 - 109) * 0x1000000;\n
    case 107:\n
        return v3 - 49 | (v2 - 109) * 0x100 | (v5 - 49) * 0x10000 | (v4 - 109) * 0x1000000;\n
    case 113:\n
        return v3 - 49 | (v2 - 109) * 0x100 | (v5 - 49) * 0x10000 | (v4 - 109) * 0x1000000;\n
    case 114:\n
        return v3 - 49 | (v2 - 109) * 0x100 | (v5 - 49) * 0x10000 | (v4 - 109) * 0x1000000;\n
    default:\n
        return v3 - 49 | (v2 - 109) * 0x100 | (v5 - 49) * 0x10000 | (v4 - 109) * 0x1000000;\n
    }\n
}\n
", "4225872:sub_407b50": "int sub_407b50()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // edx\n
\n
    if (!sub_402670())\n
        return 1;\n
    sub_407330();\n
LABEL_407b90:\n
    v5 = sub_4076c0(&v2, 16);\n
    while (true)\n
    {\n
        switch (v5)\n
        {\n
        case 0:\n
            sub_402640();\n
            break;\n
        case 5:\n
            v1 = v7;\n
            v0 = sub_407ae0(&v2);\n
            sub_403410();\n
            goto LABEL_407b90;\n
        case 9:\n
            sub_403e60(1);\n
            goto LABEL_407b90;\n
        case 16:\n
            sub_407480(\"\\n
\");\n
            goto LABEL_407b90;\n
        case 19:\n
            sub_404130();\n
            goto LABEL_407b90;\n
        case 23:\n
            sub_403e80(0);\n
            goto LABEL_407b90;\n
        case 24:\n
            sub_403e80(1);\n
            goto LABEL_407b90;\n
        case 26:\n
            sub_403140();\n
            goto LABEL_407b90;\n
        case 29:\n
            sub_407480(\"bye\\n
\");\n
        case 34:\n
            sub_403ee0(!sub_404160());\n
            goto LABEL_407b90;\n
        case 35:\n
            v6 = sub_408070();\n
        case 38:\n
            sub_404150();\n
            goto LABEL_407b90;\n
        case 42:\n
            sub_403e60(0);\n
            goto LABEL_407b90;\n
        case 47:\n
            sub_404150();\n
            sub_404150();\n
            goto LABEL_407b90;\n
        case 51:\n
            v6 = sub_407c80();\n
        case 52:\n
            sub_403f00();\n
            goto LABEL_407b90;\n
        default:\n
LABEL_407b90:\n
            v5 = sub_4076c0(&v2, 16);\n
            continue;\n
        }\n
    }\n
}\n
", "4226161:sub_407c71": null, "4226176:sub_407c80": "int sub_407c80()\n
{\n
    char v0;  // [bp-0x21]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1f]\n
    char v3;  // [bp-0x1e]\n
    char v4;  // [bp-0x1d]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x1b]\n
    char v7;  // [bp-0x1a]\n
    char v8;  // [bp-0x19]\n
    char v9;  // [bp-0x18]\n
    char v10;  // [bp-0x17]\n
    char v11;  // [bp-0x16]\n
    char v12;  // [bp-0x15]\n
    char v13;  // [bp-0x14]\n
    char v14;  // [bp-0x13]\n
    char v15;  // [bp-0x12]\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ebx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // eax\n
    unsigned int v33;  // eax\n
    unsigned int v34;  // eax\n
    void* v37;  // ecx, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    sub_401ad0(&v1, 0, 16);\n
    if (!sub_407440(&v1, 1))\n
        return 0;\n
    v19 = v1;\n
    v20 = 0;\n
    if (v19 != 10 && v19 != 32)\n
    {\n
        if (!sub_407440(&v2, 1))\n
            return 0;\n
        v22 = v2;\n
        v20 = 1;\n
        if (v22 != 10 && v22 != 32)\n
        {\n
            if (!sub_407440(&v3, 1))\n
                return 0;\n
            v23 = v3;\n
            v20 = 2;\n
            if (v23 != 10 && v23 != 32)\n
            {\n
                if (!sub_407440(&v4, 1))\n
                    return 0;\n
                v24 = v4;\n
                v20 = 3;\n
                if (v24 != 10 && v24 != 32)\n
                {\n
                    if (!sub_407440(&v5, 1))\n
                        return 0;\n
                    v25 = v5;\n
                    v20 = 4;\n
                    if (v25 != 10 && v25 != 32)\n
                    {\n
                        if (!sub_407440(&v6, 1))\n
                            return 0;\n
                        v26 = v6;\n
                        v20 = 5;\n
                        if (v26 != 10 && v26 != 32)\n
                        {\n
                            if (!sub_407440(&v7, 1))\n
                                return 0;\n
                            v27 = v7;\n
                            v20 = 6;\n
                            if (v27 != 10 && v27 != 32)\n
                            {\n
                                if (!sub_407440(&v8, 1))\n
                                    return 0;\n
                                v28 = v8;\n
                                v20 = 7;\n
                                if (v28 != 10 && v28 != 32)\n
                                {\n
                                    if (!sub_407440(&v9, 1))\n
                                        return 0;\n
                                    v29 = v9;\n
                                    v20 = 8;\n
                                    if (v29 != 10 && v29 != 32)\n
                                    {\n
                                        if (!sub_407440(&v10, 1))\n
                                            return 0;\n
                                        v30 = v10;\n
                                        v20 = 9;\n
                                        if (v30 != 10 && v30 != 32)\n
                                        {\n
                                            if (!sub_407440(&v11, 1))\n
                                                return 0;\n
                                            v31 = v11;\n
                                            v20 = 10;\n
                                            if (v31 != 10 && v31 != 32)\n
                                            {\n
                                                if (!sub_407440(&v12, 1))\n
                                                    return 0;\n
                                                v32 = v12;\n
                                                v20 = 11;\n
                                                if (v32 != 10 && v32 != 32)\n
                                                {\n
                                                    if (!sub_407440(&v13, 1))\n
                                                        return 0;\n
                                                    v33 = v13;\n
                                                    v20 = 12;\n
                                                    if (v33 != 10 && v33 != 32)\n
                                                    {\n
                                                        if (!sub_407440(&v14, 1))\n
                                                            return 0;\n
                                                        v34 = v14;\n
                                                        v20 = 13;\n
                                                        if (v34 != 10 && v34 != 32)\n
                                                        {\n
                                                            if (sub_407440(&v15, 1))\n
                                                                v20 = (v15 == 10 | v15 == 32) ^ 15;\n
                                                            else\n
                                                                return 0;\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    do\n
    {\n
        if ((&v1)[v20] == 10)\n
        {\n
            if (sub_402350(&v1, \"1-0\", 3) && sub_402350(&v1, \"0-1\", 3) && sub_402350(&v1, \"1/2-1/2\", 7) && sub_402350(&v1, \"*\", 1))\n
            {\n
                sub_407480(\"Error (invalid command): result\\n
\");\n
                goto LABEL_408057;\n
            }\n
            sub_404120();\n
LABEL_408057:\n
            return 1;\n
        }\n
        v37 = 6;\n
        if (v0 != 10)\n
            v37 = 0;\n
        if (!sub_407440(&v0, 1))\n
            v37 = 1;\n
    } while (!v37);\n
}\n
", "4226251:sub_407ccb": null, "4227177:sub_408069": null, "4227184:sub_408070": "int sub_408070()\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x17]\n
    char v2;  // [bp-0x16]\n
    char v3;  // [bp-0x15]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x13]\n
    char v6;  // [bp-0x12]\n
    char v7;  // [bp-0x11]\n
    char v8;  // [bp-0x10]\n
    char v9;  // [bp-0xf]\n
    char v10;  // [bp-0xe]\n
    char v11;  // [bp-0xd]\n
    char v12;  // [bp-0xc]\n
    char v13;  // [bp-0xb]\n
    char v14;  // [bp-0xa]\n
\n
    sub_401ad0(&v0, 0, 16);\n
    if (!sub_407440(&v0, 1))\n
        return 0;\n
    if (v0 != 10)\n
    {\n
        if (!sub_407440(&v1, 1))\n
        {\n
            return 0;\n
        }\n
        else if (v1 != 10)\n
        {\n
            if (!sub_407440(&v2, 1))\n
            {\n
                return 0;\n
            }\n
            else if (v2 != 10)\n
            {\n
                if (!sub_407440(&v3, 1))\n
                {\n
                    return 0;\n
                }\n
                else if (v3 != 10)\n
                {\n
                    if (!sub_407440(&v4, 1))\n
                    {\n
                        return 0;\n
                    }\n
                    else if (v4 != 10)\n
                    {\n
                        if (!sub_407440(&v5, 1))\n
                        {\n
                            return 0;\n
                        }\n
                        else if (v5 != 10)\n
                        {\n
                            if (!sub_407440(&v6, 1))\n
                            {\n
                                return 0;\n
                            }\n
                            else if (v6 != 10)\n
                            {\n
                                if (!sub_407440(&v7, 1))\n
                                {\n
                                    return 0;\n
                                }\n
                                else if (v7 != 10)\n
                                {\n
                                    if (!sub_407440(&v8, 1))\n
                                    {\n
                                        return 0;\n
                                    }\n
                                    else if (v8 != 10)\n
                                    {\n
                                        if (!sub_407440(&v9, 1))\n
                                        {\n
                                            return 0;\n
                                        }\n
                                        else if (v9 != 10)\n
                                        {\n
                                            if (!sub_407440(&v10, 1))\n
                                            {\n
                                                return 0;\n
                                            }\n
                                            else if (v10 != 10)\n
                                            {\n
                                                if (!sub_407440(&v11, 1))\n
                                                {\n
                                                    return 0;\n
                                                }\n
                                                else if (v11 != 10)\n
                                                {\n
                                                    if (!sub_407440(&v12, 1))\n
                                                    {\n
                                                        return 0;\n
                                                    }\n
                                                    else if (v12 != 10)\n
                                                    {\n
                                                        if (!sub_407440(&v13, 1))\n
                                                        {\n
                                                            return 0;\n
                                                        }\n
                                                        else if (v13 != 10 && !sub_407440(&v14, 1))\n
                                                        {\n
                                                            return 0;\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    sub_403ea0(sub_402450(&v0, NULL, 10));\n
    return 1;\n
}\n
", "4227712:sub_408280": "int sub_408280()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4083a0();\n
    sub_4083b0();\n
    sub_4083d0();\n
    v0 = 1;\n
    if (!sub_4089a0())\n
    {\n
        v0 = 7;\n
        sub_409080();\n
    }\n
    sub_409250();\n
    v1 = sub_409280;\n
    sub_408670();\n
    if (sub_408370())\n
    {\n
        v1 = 7;\n
        sub_409080();\n
    }\n
    sub_408e10();\n
    if (sub_408f10())\n
    {\n
        v1 = sub_408db0;\n
        __setusermatherr();\n
    }\n
    sub_408e90();\n
    sub_408ea0();\n
    sub_408e60();\n
    v1 = sub_408e00();\n
    _configthreadlocale();\n
    if (sub_408e50())\n
        sub_408390();\n
    sub_409040();\n
    if (sub_409050())\n
    {\n
        v1 = 7;\n
        sub_409080();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4227904:sub_408340": "int sub_408340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408eb0();\n
    return 0;\n
}\n
", "4227920:sub_408350": "int sub_408350()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409060();\n
    v0 = sub_408df0();\n
    return _set_new_mode();\n
}\n
", "4227952:sub_408370": "int sub_408370()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_408dc0());\n
}\n
", "4227984:sub_408390": "int sub_408390()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4228000:sub_4083a0": "int sub_4083a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4228016:sub_4083b0": "int sub_4083b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_408de0());\n
}\n
", "4228048:sub_4083d0": "int sub_4083d0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_408dd0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4228080:sub_4083f0": "int sub_4083f0()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v5 = _get_initial_narrow_environment();\n
    v4 = *(__p___argv());\n
    v3 = *(__p___argc());\n
    v2 = v5;\n
    v1 = v4;\n
    v0 = v3;\n
    return sub_407b50();\n
}\n
", "4228144:sub_408430": "extern char g_40b974;\n
extern char g_40b97c;\n
extern char g_40b980;\n
extern struct_0 *g_40b98c;\n
extern char g_40bff0;\n
extern unsigned int g_40d0c0;\n
extern unsigned int g_4117a0;\n
\n
int sub_408430()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40bff0;\n
    v13 = sub_4092b0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40d0c0;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_408910(1, g_40d0c0 ^ &v16, v22, v23))\n
        sub_409080();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_408890();\n
    if (g_4117a0 == 1)\n
    {\n
        v16 = 7;\n
        sub_409080();\n
    }\n
    else if (g_4117a0)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4117a0 = 1;\n
        v16 = &g_40b98c;\n
        v15 = &g_40b980;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_408639;\n
        }\n
        else\n
        {\n
            v16 = &g_40b97c;\n
            v15 = &g_40b974;\n
            _initterm(*(&v17));\n
            g_4117a0 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_4088e0();\n
    v8 = sub_408f40();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_408760())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_4092f0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_408f50();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_408760())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_4083f0();\n
    if (!sub_408fb0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_408960(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_408639:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4228559:sub_4085cf": "int sub_4085cf()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4228568:sub_4085d8": "int sub_4085d8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4228595:sub_4085f3": "extern char g_408601;\n
\n
int sub_4085f3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_408601;\n
    if (!sub_408fb0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4228658:sub_408632": "int sub_408632()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4228688:sub_408650": "int sub_408650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408cc0();\n
    return sub_408430();\n
}\n
", "4228704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408650();\n
}\n
", "4228720:sub_408670": "int sub_408670(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4086a0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4228768:sub_4086a0": "extern unsigned int g_4117ac;\n
\n
int sub_4086a0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4117ac;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4117ac))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4228824:sub_4086d8": "int sub_4086d8()\n
{\n
}\n
", "4228880:sub_408710": "extern unsigned int g_4117b8;\n
\n
int sub_408710(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4117b8;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4117b8);\n
    return v6;\n
}\n
", "4228914:sub_408732": "int sub_408732()\n
{\n
}\n
", "4228944:sub_408750": "int sub_408750()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4228960:sub_408760": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40c010;\n
extern unsigned int g_40d0c0;\n
\n
int sub_408760(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40c010;\n
    v13 = sub_4092b0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40d0c0;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_408bc0(v6, g_40d0c0 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_408c30(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4229165:sub_40882d": "int sub_40882d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4229174:sub_408836": "int sub_408836()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4229213:sub_40885d": "int sub_40885d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4229232:sub_408870": "int sub_408870()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4229264:sub_408890": "extern unsigned int g_4117a4;\n
\n
int sub_408890()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_409ad0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_408750() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4117a4 = v6;\n
        if (!g_4117a4)\n
        {\n
            tmp_0 = 0;\n
            g_4117a4 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4117a4 = v6;\n
            v5 = g_4117a4;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4229344:sub_4088e0": "extern void* g_4117a4;\n
\n
int sub_4088e0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409ad0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4117a4;\n
        g_4117a4 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x4088ff;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4229392:sub_408910": "extern char g_4117a8;\n
\n
int sub_408910(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4117a8 = 1;\n
    sub_409640();\n
    v4 = sub_409e70();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_409e70();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_409e80();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4229472:sub_408960": "extern char g_4117a8;\n
\n
int sub_408960(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4117a8 && a0)\n
        return 1;\n
    sub_409e80(v2);\n
    v3 = sub_409e80();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229536:sub_4089a0": "extern char g_4117a9;\n
extern unsigned int g_4117ac;\n
extern unsigned int g_4117b0;\n
extern unsigned int g_4117b4;\n
extern unsigned int g_4117b8;\n
extern unsigned int g_4117bc;\n
extern unsigned int g_4117c0;\n
\n
int sub_4089a0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4117a9)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_409080();\n
    }\n
    if (sub_409ad0() && !v10)\n
    {\n
        v8 = &g_4117ac;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4117b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_408a66;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4117ac = v4;\n
    g_4117b0 = v5;\n
    g_4117b4 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4117b8 = v1;\n
    g_4117bc = v2;\n
    v11 = v3;\n
    g_4117c0 = v11;\n
LABEL_408a66:\n
    g_4117a9 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4229760:sub_408a80": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_408a80(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_409ad0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_4092f0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4229840:sub_408ad0": "int sub_408ad0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4089a0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4229872:sub_408af0": "int sub_408af0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_409ad0())\n
    {\n
        v3 = sub_409640();\n
    }\n
    else\n
    {\n
        v3 = sub_408370();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_408390();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229920:sub_408b20": "extern char g_4117ac;\n
\n
int sub_408b20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_409ad0())\n
    {\n
        v0 = &g_4117ac;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_409ec0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4229968:sub_408b50": "int sub_408b50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409e90(0);\n
    return sub_409e90();\n
}\n
", "4230000:sub_408b70": "int sub_408b70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_409ea0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_409ea0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_409eb0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4230048:sub_408ba0": "char sub_408ba0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409eb0();\n
    sub_409eb0();\n
    return 1;\n
}\n
", "4230080:sub_408bc0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_408bc0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4230192:sub_408c30": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_408c30(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 != v0)\n
        {\n
            if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
                return v5;\n
            v5 = &v5[2 + 2];\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
}\n
", "4230336:sub_408cc0": "extern unsigned int g_40d0c0;\n
extern unsigned int g_40d100;\n
\n
int sub_408cc0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40d0c0 != 3141592654)\n
    {\n
        v4 = g_40d0c0 & -0x10000;\n
        if (v4)\n
        {\n
            g_40d100 = ~(g_40d0c0);\n
            return g_40d0c0 & -0x10000;\n
        }\n
    }\n
    v4 = sub_408d40(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40d0c0 = v0;\n
    g_40d100 = ~(v0);\n
    return v4;\n
}\n
", "4230464:sub_408d40": "int sub_408d40()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4230576:sub_408db0": "int sub_408db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230592:sub_408dc0": "int sub_408dc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4230608:sub_408dd0": "int sub_408dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230624:sub_408de0": "int sub_408de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4230640:sub_408df0": "int sub_408df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230656:sub_408e00": "int sub_408e00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4230672:sub_408e10": "extern void g_4117c8;\n
\n
int sub_408e10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4117c8);\n
}\n
", "4230704:sub_408e30": "extern unsigned int g_4117c8;\n
\n
int sub_408e30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4117c8);\n
}\n
", "4230736:sub_408e50": "char sub_408e50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4230752:sub_408e60": "int sub_408e60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_409080();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4230800:sub_408e90": "int sub_408e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4230816:sub_408ea0": "int sub_408ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4230832:sub_408eb0": "int sub_408eb0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_408ef0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_408f00(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4230896:sub_408ef0": "extern char g_4117d0;\n
\n
int sub_408ef0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4117d0;\n
}\n
", "4230912:sub_408f00": "extern char g_4117d8;\n
\n
int sub_408f00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4117d8;\n
}\n
", "4230928:sub_408f10": "extern unsigned int g_40d084;\n
\n
int sub_408f10()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40d084)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4230976:sub_408f40": "extern char g_4117e4;\n
\n
int sub_408f40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4117e4;\n
}\n
", "4230992:sub_408f50": "extern char g_4117e8;\n
\n
int sub_408f50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4117e8;\n
}\n
", "4231008:sub_408f60": "extern void* g_4117ec;\n
\n
int sub_408f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4117ec = 0;\n
    return v3;\n
}\n
", "4231024:sub_408f70": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_408f70()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4231088:sub_408fb0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_408fb0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4231232:sub_409040": "int sub_409040()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231248:sub_409050": "int sub_409050()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4091c0();\n
}\n
", "4231264:sub_409060": "int sub_409060()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_4091d0);\n
}\n
", "4231296:sub_409080": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409080()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_408f60();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_408f60();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4231321:sub_409099": "int sub_409099()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231321\n
}\n
", "4231616:sub_4091c0": "int sub_4091c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231632:sub_4091d0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_4091d0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4231760:sub_409250": "extern struct_0 *g_40bfe4;\n
\n
int sub_409250()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bfe4;\n
    v3 = &g_40bfe4;\n
    return &g_40bfe4;\n
}\n
", "4231808:sub_409280": "extern struct_0 *g_40bfec;\n
\n
int sub_409280()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bfec;\n
    v3 = &g_40bfec;\n
    return &g_40bfec;\n
}\n
", "4231856:sub_4092b0": "extern unsigned int g_40d0c0;\n
\n
int sub_4092b0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_409ed0(*(v2));\n
    return _except_handler4_common(&g_40d0c0, sub_409b00, v2, a0, a1);\n
}\n
", "4231920:sub_4092f0": "int sub_4092f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4231936:sub_409300": "int sub_409300(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x409309;\n
    return tmp_4;\n
}\n
", "4231952:sub_409310": "int sub_409310(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4231984:sub_409330": "int sub_409330(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409310(v2);\n
}\n
", "4232016:sub_409350": "extern unsigned int g_4117f0;\n
\n
int sub_409350(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_409300(&g_4117f0, v3);\n
    return v0;\n
}\n
", "4232048:sub_409370": "extern char g_4092f0;\n
extern unsigned int g_412000;\n
\n
int sub_409370()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_409330(&g_412000) != sub_4092f0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4232096:sub_4093a0": "extern char g_40b8c0;\n
\n
int sub_4093a0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40b8c0;\n
    v1 = &g_40b8c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4232160:sub_4093e0": "extern unsigned int g_412008;\n
\n
int sub_4093e0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_409330(&g_412008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4232208:sub_409410": "extern unsigned int g_4117f0;\n
\n
int sub_409410(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_409330(&g_4117f0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_4092f0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4232272:sub_409450": "int sub_409450()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232288:sub_409460": "int sub_409460(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4093a0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4232307\n
}\n
", "4232320:sub_409480": "int sub_409480(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4093a0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4232345:sub_409499": "int sub_409499()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232345\n
}\n
", "4232352:sub_4094a0": "int sub_4094a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4093a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4093e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232400:sub_4094d0": "int sub_4094d0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4093a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409410(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232448:sub_409500": "extern char g_40b8c0;\n
\n
int sub_409500(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40b8c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4232512:sub_409540": "int sub_409540(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4093a0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4232555\n
}\n
", "4232560:sub_409570": "int sub_409570(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4093a0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4232609:sub_4095a1": "int sub_4095a1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232609\n
}\n
", "4232624:sub_4095b0": "int sub_4095b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232640:sub_4095c0": "int sub_4095c0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4093a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4093e0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232704:sub_409600": "int sub_409600(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409500(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4093a0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409410(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232768:sub_409640": "extern unsigned int g_40d0c0;\n
extern unsigned int g_40d108;\n
extern unsigned int g_40d10c;\n
extern unsigned int g_40d110;\n
extern unsigned int g_4117f4;\n
extern unsigned int g_4117f8;\n
extern unsigned int g_4117fc;\n
\n
int sub_409640()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40d0c0 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4117f8 = 0;\n
    g_40d110 = g_40d110 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_409b00();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40978b;\n
        g_4117fc = g_4117fc | 1;\n
    }\n
LABEL_40978b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4117fc = g_4117fc | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4117f8 = 1;\n
    g_40d110 = g_40d110 | 2;\n
    g_40d108 = g_40d108 & -2;\n
    g_40d10c = g_40d10c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4117f8 = 2;\n
        g_40d110 = g_40d110 | 4;\n
        g_40d108 = g_40d108 & -17;\n
        g_40d10c = g_40d10c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4117f8 = 3;\n
                g_40d110 = g_40d110 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4117f8 = 5;\n
                    g_40d110 = g_40d110 | 32;\n
                    g_40d108 = g_40d108 & -3;\n
                    g_40d10c = g_40d10c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4117f8 = 6;\n
                            g_40d110 = g_40d110 | 64;\n
                            g_40d108 = g_40d108 & -37;\n
                            g_40d10c = g_40d10c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40d108 = g_40d108 & -16777217;\n
                    g_40d10c = g_40d10c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4117f4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40d108 = ~(v2 | 16777256) & g_40d108;\n
                        g_40d10c = ~(v3) & g_40d10c;\n
                        if (g_4117f4 > 1)\n
                        {\n
                            g_40d108 = g_40d108 & -65;\n
                            g_40d10c = g_40d10c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4233936:sub_409ad0": "extern unsigned int g_40d114;\n
\n
int sub_409ad0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40d114)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4233984:sub_409b00": "extern unsigned int g_40d0c0;\n
extern unsigned int g_40d100;\n
extern unsigned int g_411808;\n
extern unsigned int g_41180c;\n
extern unsigned int g_411814;\n
extern unsigned int g_411818;\n
extern unsigned int g_41181c;\n
extern unsigned int g_411858;\n
extern unsigned short g_4118e4;\n
extern unsigned short g_4118e8;\n
extern unsigned short g_4118ec;\n
extern unsigned short g_4118f0;\n
extern unsigned int g_4118f4;\n
extern unsigned int g_4118f8;\n
extern unsigned int g_4118fc;\n
extern unsigned int g_411900;\n
extern unsigned int g_411904;\n
extern unsigned int g_411908;\n
extern unsigned int g_41190c;\n
extern unsigned int g_411910;\n
extern unsigned short g_411914;\n
extern unsigned int g_411918;\n
extern unsigned int g_41191c;\n
extern unsigned short g_411920;\n
\n
int sub_409b00()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40d0c0)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_411908 = v7;\n
        g_411904 = v6;\n
        g_411900 = v8;\n
        g_4118fc = v9;\n
        g_4118f8 = v10;\n
        g_4118f4 = v11;\n
        g_411920 = v12;\n
        g_411914 = v13;\n
        g_4118f0 = v14;\n
        g_4118ec = v15;\n
        g_4118e8 = v16;\n
        g_4118e4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_411918 = v0;\n
        g_41190c = v3;\n
        g_411910 = *(&v4);\n
        g_41191c = &v5;\n
        g_411858 = 65537;\n
        g_411814 = g_411910;\n
        g_411808 = 3221226505;\n
        g_41180c = 1;\n
        g_411818 = 1;\n
        g_41181c = 2;\n
        v1 = g_40d0c0;\n
        v2 = g_40d100;\n
        sub_409e40();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4234000:sub_409b10": "extern unsigned int g_411808;\n
extern unsigned int g_41180c;\n
extern unsigned int g_411814;\n
extern unsigned int g_411818;\n
extern unsigned int g_41181c;\n
extern unsigned short g_4118e4;\n
extern unsigned short g_4118e8;\n
extern unsigned short g_4118ec;\n
extern unsigned short g_4118f0;\n
extern unsigned int g_4118f4;\n
extern unsigned int g_4118f8;\n
extern unsigned int g_4118fc;\n
extern unsigned int g_411900;\n
extern unsigned int g_411904;\n
extern unsigned int g_411908;\n
extern unsigned int g_41190c;\n
extern unsigned int g_411910;\n
extern unsigned short g_411914;\n
extern unsigned int g_411918;\n
extern unsigned int g_41191c;\n
extern unsigned short g_411920;\n
\n
int sub_409b10()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_411908 = v4;\n
        g_411904 = v5;\n
        g_411900 = v6;\n
        g_4118fc = v7;\n
        g_4118f8 = v8;\n
        g_4118f4 = v9;\n
        g_411920 = v10;\n
        g_411914 = v11;\n
        g_4118f0 = v12;\n
        g_4118ec = v13;\n
        g_4118e8 = v14;\n
        g_4118e4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_411918 = v0;\n
        g_41190c = v1;\n
        g_411910 = *(&v2);\n
        g_41191c = &v3;\n
        g_411814 = g_411910;\n
        g_411808 = 3221226505;\n
        g_41180c = 1;\n
        g_411818 = 1;\n
        g_41181c = v3;\n
        sub_409e40();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4234025:sub_409b29": "int sub_409b29()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234025\n
}\n
", "4234224:sub_409bf0": "extern unsigned int g_411808;\n
extern unsigned int g_41180c;\n
extern unsigned int g_411814;\n
extern unsigned int g_411818;\n
extern unsigned int g_41181c;\n
extern char g_411820;\n
extern unsigned short g_4118e4;\n
extern unsigned short g_4118e8;\n
extern unsigned short g_4118ec;\n
extern unsigned short g_4118f0;\n
extern unsigned int g_4118f4;\n
extern unsigned int g_4118f8;\n
extern unsigned int g_4118fc;\n
extern unsigned int g_411900;\n
extern unsigned int g_411904;\n
extern unsigned int g_411908;\n
extern unsigned int g_41190c;\n
extern unsigned int g_411910;\n
extern unsigned short g_411914;\n
extern unsigned int g_411918;\n
extern unsigned int g_41191c;\n
extern unsigned short g_411920;\n
\n
int sub_409bf0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1066505];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_411908 = v7;\n
        g_411904 = v8;\n
        g_411900 = v9;\n
        g_4118fc = v10;\n
        g_4118f8 = v11;\n
        g_4118f4 = v12;\n
        g_411920 = v13;\n
        g_411914 = v14;\n
        g_4118f0 = v15;\n
        g_4118ec = v16;\n
        g_4118e8 = v17;\n
        g_4118e4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_411918 = v0;\n
        g_41190c = v2;\n
        g_411910 = *(&v3);\n
        g_41191c = &v4;\n
        g_411814 = g_411910;\n
        g_411808 = 3221226505;\n
        g_41180c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_411818 = v5 + 1;\n
        g_41181c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_411820)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_409e40();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4234249:sub_409c09": "int sub_409c09()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234249\n
}\n
", "4234528:sub_409d20": "int sub_409d20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409b10(8);\n
}\n
", "4234571:sub_409d4b": "int sub_409d4b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234571\n
}\n
", "4234816:sub_409e40": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409e40(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4234864:sub_409e70": "char sub_409e70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234880:sub_409e80": "char sub_409e80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234896:sub_409e90": "char sub_409e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234912:sub_409ea0": "char sub_409ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234928:sub_409eb0": "char sub_409eb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4234944:sub_409ec0": "int sub_409ec0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4234960:sub_409ed0": "extern unsigned int g_4117f8;\n
\n
int sub_409ed0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4117f8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4235268:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4235274:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4235280:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4235286:cgc_random": "int cgc_random()\n
{\n
    return ::kernel32.dll::cgc_random();\n
}\n
", "4235292:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4235298:sub_40a022": "int sub_40a022(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4235304:sub_40a028": "int sub_40a028()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4235310:sub_40a02e": "int sub_40a02e()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4235316:sub_40a034": "int sub_40a034(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4235322:sub_40a03a": "int sub_40a03a(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4235328:sub_40a040": "int sub_40a040()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4235334:sub_40a046": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40a046(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4235340:sub_40a04c": "int sub_40a04c(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4235346:sub_40a052": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40a052(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4235352:sub_40a058": "int sub_40a058(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4235358:sub_40a05e": "int sub_40a05e(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4235364:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4235370:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4235376:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4235382:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4235388:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4235394:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4235400:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4235406:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4235412:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4235418:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4235424:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4235430:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4235436:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4235442:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4235448:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4235454:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4235460:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4235466:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4235472:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4235478:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4235484:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4235490:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4235496:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4235502:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4235508:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4235514:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4235520:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4235526:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4235532:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4235538:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4235544:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4235550:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4235556:sub_40a124": "int sub_40a124()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4235562:sub_40a12a": "int sub_40a12a(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc_allocate": null, "5242884:cgc_deallocate": null, "5242888:cgc_random": null, "5242892:cgc_receive": null, "5242896:cgc_transmit": null, "5242900:GetCurrentProcess": null, "5242904:GetCurrentProcessId": null, "5242908:GetCurrentThreadId": null, "5242912:GetModuleHandleW": null, "5242916:GetStartupInfoW": null, "5242920:GetSystemTimeAsFileTime": null, "5242924:InitializeSListHead": null, "5242928:IsDebuggerPresent": null, "5242932:IsProcessorFeaturePresent": null, "5242936:QueryPerformanceCounter": null, "5242940:SetUnhandledExceptionFilter": null, "5242944:TerminateProcess": null, "5242948:UnhandledExceptionFilter": null, "5242952:__current_exception": null, "5242956:__current_exception_context": null, "5242960:__std_type_info_destroy_list": null, "5242964:_except_handler4_common": null, "5242968:memset": null, "5242972:__p___argc": null, "5242976:__p___argv": null, "5242980:__p__commode": null, "5242984:__setusermatherr": null, "5242988:_c_exit": null, "5242992:_cexit": null, "5242996:_configthreadlocale": null, "5243000:_configure_narrow_argv": null, "5243004:_controlfp_s": null, "5243008:_crt_at_quick_exit": null, "5243012:_crt_atexit": null, "5243016:_execute_onexit_table": null, "5243020:_exit": null, "5243024:_get_initial_narrow_environment": null, "5243028:_initialize_narrow_environment": null, "5243032:_initialize_onexit_table": null, "5243036:_initterm": null, "5243040:_initterm_e": null, "5243044:_register_onexit_function": null, "5243048:_register_thread_local_exe_atexit_callback": null, "5243052:_seh_filter_dll": null, "5243056:_seh_filter_exe": null, "5243060:_set_app_type": null, "5243064:_set_fmode": null, "5243068:_set_new_mode": null, "5243072:exit": null, "5243076:terminate": null, "6295596:UnresolvableCallTarget": null}