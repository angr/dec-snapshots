{"4198400:sub_401000": "extern unsigned int g_40add8;\n
\n
int sub_401000(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = a0 * v6;\n
    if (v6 * a0 >> 32)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = sub_4020a0(&g_40add8);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    sub_403120(v1, 0);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4198560:sub_4010a0": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_4010a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 1;\n
}\n
", "4198587:sub_4010bb": null, "4198592:sub_4010c0": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_4010c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 2;\n
}\n
", "4198619:sub_4010db": null, "4198624:sub_4010e0": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_4010e0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 16;\n
}\n
", "4198651:sub_4010fb": null, "4198656:sub_401100": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_401100(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 14;\n
}\n
", "4198683:sub_40111b": null, "4198688:sub_401120": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_401120(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 12;\n
}\n
", "4198715:sub_40113b": null, "4198720:sub_401140": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_401140(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 4;\n
}\n
", "4198747:sub_40115b": null, "4198752:sub_401160": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_401160(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 8;\n
}\n
", "4198779:sub_40117b": null, "4198784:sub_401180": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_401180(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 64;\n
}\n
", "4198811:sub_40119b": null, "4198816:sub_4011a0": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_4011a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 32;\n
}\n
", "4198843:sub_4011bb": null, "4198848:sub_4011c0": "typedef struct struct_0 {\n
    char padding_0[4235264];\n
    char field_40a000;\n
} struct_0;\n
\n
extern char g_40a000;\n
\n
int sub_4011c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40a000)) & 128;\n
}\n
", "4198877:sub_4011dd": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x6]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v4 = sub_401240();\n
    v1 = 1;\n
    if (sub_4010c0(v4))\n
        return v1 & 1;\n
    v0 = 0;\n
    if (v4 >= 65)\n
        v0 = v4 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4198974:sub_40123e": null, "4198976:sub_401240": "int sub_401240(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199047:sub_401287": null, "4199056:sub_401290": "int sub_401290(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = sub_401240(v3);\n
    if (sub_4010c0(v3))\n
    {\n
        v0 = v3 - 48;\n
        return v0;\n
    }\n
    if (v3 >= 65 && v3 <= 70)\n
    {\n
        v0 = v3 + -55;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4199165:sub_4012fd": null, "4199168:sub_401300": "int sub_401300(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199248:sub_401350": "int sub_401350(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    cgc__terminate(v2);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4199266\n
}\n
", "4199280:sub_401370": "int sub_401370(unsigned int v5[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == -1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v5[1] != 1)\n
    {\n
        v1 = 0;\n
        v0 = v5[3] - v5[2];\n
        sub_401460(v5[4], &v5[1 + 1] + v5[2]);\n
        v0 = v5[3] - v5[2];\n
        if (sub_4014d0(v5[0], &v5[1 + 1] + v5[2]))\n
            v1 = -1;\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4199507:sub_401453": null, "4199520:sub_401460": "int sub_401460(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199619:sub_4014c3": null, "4199632:sub_4014d0": "int sub_4014d0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4199762:sub_401552": null, "4199776:sub_401560": "int sub_401560(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (v2[2] != -1)\n
        sub_401370(v2);\n
    if (a0)\n
        v2[2] = 0;\n
    else\n
        v2[2] = -1;\n
    v2[3] = 0;\n
    return v2;\n
}\n
", "4199872:sub_4015c0": "int sub_4015c0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2[6];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1048;\n
    v1[0] = sub_402070();\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = v5;\n
    v1[1] = (a0 ? 1 : 2);\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4200016:sub_401650": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401650(unsigned int v7, unsigned int a0, unsigned int a1[6])\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[6];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] == a1[3])\n
        sub_4017b0();\n
    if (a1[2] != -1)\n
    {\n
        v1 = a1[3] - a1[2];\n
        if (v1 > a0)\n
            v1 = a0;\n
        sub_403010(v3, 1 + a1 + a1[2]);\n
        v2 = v1 + v2;\n
        v8 = a1;\n
        v8[2] = v1 + v8[2];\n
        if (a1[2] == a1[3])\n
        {\n
            a1[3] = 0;\n
            a1[2] = 0;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_receive(a1[0], v3 + v2, a0 - v2))\n
            break;\n
        if (!v1)\n
            break;\n
        sub_401870(a1[5], v3 + v2);\n
        v2 = v1 + v2;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4200366:sub_4017ae": null, "4200368:sub_4017b0": "int sub_4017b0(unsigned int v5[6])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == v5[3])\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
    }\n
    v0 = &v1;\n
    if (!cgc_receive(v5[0], 1 + v5 + v5[3], 0x400 - v5[3]) && *(&v1))\n
    {\n
        v5[3] = *(&v1);\n
        sub_401870(v5[5], v5 + 1);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200556:sub_40186c": null, "4200560:sub_401870": "int sub_401870(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200659:sub_4018d3": null, "4200672:sub_4018e0": "int sub_4018e0(unsigned int v7, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    for (v3 = 0; v3 < a0 - 1; v3 += 1)\n
    {\n
        v0 = a2;\n
        v2 = sub_4019e0();\n
        if (v2 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (v2 == a1)\n
            break;\n
        v3[v7] = v2;\n
    }\n
    if (v3 == a0 - 1)\n
    {\n
        do\n
        {\n
            v0 = a2;\n
            v1 = sub_4019e0();\n
            if (v1 == -1)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        } while (v1 != a1);\n
    }\n
    v3[v7] = 0;\n
    v4 = v3;\n
    return v4;\n
}\n
", "4200915:sub_4019d3": null, "4200928:sub_4019e0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char *field_14;\n
} struct_0;\n
\n
int sub_4019e0(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[6];  // edx\n
    unsigned int v8;  // ecx\n
\n
    v4 = &v5;\n
    if (v6->field_8 == -1)\n
    {\n
        v0 = &v1;\n
        if (!cgc_receive(v6->field_0, &v2, 1) && *(&v1))\n
        {\n
            sub_401870(v6->field_14, &v2, 1);\n
            v3 = v2;\n
            return v3;\n
        }\n
        v3 = -1;\n
        return v3;\n
    }\n
    else\n
    {\n
        if (v6->field_8 == v6->field_c && sub_4017b0(v6) < 0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v7 = v6;\n
        v8 = v7[2];\n
        v7[2] = v8 + 1;\n
        v3 = *(24 + &v6->field_0 + v8);\n
        return v3;\n
    }\n
}\n
", "4201152:sub_401ac0": "extern unsigned int g_40add8;\n
\n
int sub_401ac0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4024c0(&g_40add8, v2);\n
}\n
", "4201200:sub_401af0": "int sub_401af0(unsigned int v7, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[5];  // eax\n
    unsigned int v9[5];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] != -1)\n
    {\n
        if (a0 >= 0x400)\n
        {\n
            sub_401370(a1);\n
        }\n
        else\n
        {\n
            if (a1[3] + a0 >= 0x400)\n
            {\n
                v1 = 0x400 - a1[3];\n
                sub_403010(&a1[1 + 1] + a1[3], v3);\n
                v8 = a1;\n
                v8[3] = v1 + v8[3];\n
                v2 = v1 + v2;\n
                sub_401370(a1);\n
            }\n
            if (v2 < a0)\n
            {\n
                v1 = a0 - v2;\n
                sub_403010(&a1[1 + 1] + a1[3], v3 + v2);\n
                v9 = a1;\n
                v9[3] = v1 + v9[3];\n
                v2 = v1 + v2;\n
            }\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    if (a1[4])\n
    {\n
        v0 = a0;\n
        if (sub_401d20(a1[0], a1[4], v7))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    else if (sub_401c90(a1[0], v7))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = a0;\n
    return v4;\n
}\n
", "4201610:sub_401c8a": null, "4201616:sub_401c90": "int sub_401c90(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4201746:sub_401d12": null, "4201760:sub_401d20": "int sub_401d20(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x414]\n
    void* v1;  // [bp-0x410], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x40c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = a2 - v1;\n
            if (v0 > 0x400)\n
                v0 = 0x400;\n
            sub_403010(&v2, v3 + v1);\n
            sub_401e20(a0, &v2);\n
            if (sub_401c90(v7, &v2, v0))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4202014:sub_401e1e": null, "4202016:sub_401e20": "int sub_401e20(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4202128:sub_401e90": "int sub_401e90(unsigned int v9[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // eax\n
    char *v11;  // eax, Other Possible Types: unsigned int, unsigned int [6]\n
    char *v12;  // eax\n
\n
    v7 = &v8;\n
    if (!a0)\n
    {\n
        sub_401ac0(v9[4]);\n
        v9[4] = 0;\n
        v11 = v9;\n
        v11[5] = 0;\n
        return v9;\n
    }\n
    v0 = 0x100;\n
    v10 = sub_403dc0(v9[4]);\n
    v9[4] = v10;\n
    v4 = v10;\n
    v0 = 0x100;\n
    v12 = sub_403dc0(v9[5]);\n
    v9[5] = v12;\n
    v3 = v12;\n
    v11 = sub_402000(a0);\n
    v6 = v11;\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v4[v5] = v5;\n
        v11 = v5 + 1;\n
    }\n
    for (v5 = 255; v5 >= 1; v5 = v11)\n
    {\n
        v2 = (0 CONCAT v6) /m v5 >> 32;\n
        v6 *= 3;\n
        v6 = v6 * 0x2000 ^ v6 >> 19 ^ v6 >> 21;\n
        v1 = v4[v5];\n
        v4[v5] = v4[v2];\n
        v4[v2] = v1;\n
        v11 = v5 - 1;\n
    }\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v3[v4[v5]] = v5;\n
        v11 = v5 + 1;\n
    }\n
    return v11;\n
}\n
", "4202494:sub_401ffe": null, "4202496:sub_402000": "int sub_402000(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 826981510;\n
    for (v1 = 0; *((v4 + v1)); v1 += 1)\n
    {\n
        v0 *= 37;\n
        v0 = *((v4 + v1)) ^ v0;\n
        v0 = v0 * 0x2000 ^ v0 >> 19;\n
    }\n
    return v0;\n
}\n
", "4202608:sub_402070": "extern unsigned int g_40add8;\n
\n
int sub_402070(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4020a0(&g_40add8, v2);\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a0 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    a0 = a0 - -3 & -0x4;\n
    if (a0 < 4)\n
    {\n
        v0 = 4;\n
        v1 = sub_402180(v5);\n
    }\n
    else if (a0 < 16)\n
    {\n
        v0 = a0;\n
        v1 = sub_402180(v5);\n
    }\n
    else if (a0 < 0x20000)\n
    {\n
        v0 = a0;\n
        v1 = sub_402310(v5);\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v1 = sub_402440(v5);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4202865:sub_402171": null, "4202880:sub_402180": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4628];\n
    unsigned int field_1218;\n
    unsigned int field_121c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_402180(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned short v2[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc]\n
    unsigned int *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned short v9[2];  // eax\n
    struct_0 *v10;  // eax\n
    unsigned short v11[2];  // eax\n
\n
    v6 = &v7;\n
    v4 = sub_402a90();\n
    v3 = *((v8 + v4 * 4));\n
    if (v3)\n
    {\n
        *((v8 + v4 * 4)) = *(v3);\n
        v5 = v3;\n
        return v5;\n
    }\n
    *(&v2[0]) = *((v8 + v4 * 4 + 4620));\n
    if (!v2)\n
    {\n
        if (!*((v8 + 4632)))\n
        {\n
            v0 = 1;\n
            *((v8 + 4632)) = sub_402b40(v8);\n
            if (!*((v8 + 4632)))\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            *((v8 + 4636)) = 0;\n
        }\n
        v9 = *((v8 + 4632)) + *((v8 + 4636));\n
        *((v8 + v4 * 4 + 4620)) = v9;\n
        v2 = v9;\n
        *(v2) = a0;\n
        *((v2 + 2)) = a0;\n
        v10 = v8;\n
        v10->field_121c = v10->field_121c + 0x1000;\n
        if (*((v8 + 4636)) == 0x100000)\n
            *((v8 + 4632)) = 0;\n
    }\n
    v1 = v2 + *((v2 + 2));\n
    v11 = v2;\n
    v11[1] = v11[1] + a0;\n
    if (*((v2 + 2)) + *(v2) > 0x1000)\n
        *((v8 + v4 * 4 + 4620)) = 0;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4203271:sub_402307": null, "4203280:sub_402310": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_402310(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = a0 - -23 & -0x10;\n
    for (v3 = sub_402a90(); v3 < 131; v3 = v3 + 1)\n
    {\n
        for (v1 = *((v7 + v3 * 4)); v1; v1 = v1->field_c)\n
        {\n
            if (v1->field_4 >= v2)\n
                break;\n
        }\n
        if (v1)\n
            break;\n
    }\n
    if (v3 == 131)\n
    {\n
        if (!sub_402c30())\n
        {\n
            v3 = 130;\n
            v1 = *((v7 + v3 * 4));\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v0 = v1;\n
    sub_402cf0(v7, v3);\n
    if (*((v1 + 4)) - v2 > 32)\n
    {\n
        v0 = v2;\n
        sub_402db0(v7, v1);\n
    }\n
    v4 = v1 + 8;\n
    return v4;\n
}\n
", "4203581:sub_40243d": null, "4203584:sub_402440": "int sub_402440(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0 - -4103 & -0x1000;\n
    v0 = &v2;\n
    if (cgc_allocate(v3, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v7;\n
    v1[1] = v3;\n
    v4 = v1 + 1;\n
    return v4;\n
}\n
", "4203707:sub_4024bb": null, "4203712:sub_4024c0": "int sub_4024c0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v5 = *((v4 + (a0 >> 20) + 524));\n
    v1 = v5;\n
    if (!a0)\n
    {\n
        return *((v4 + (a0 >> 20) + 524));\n
    }\n
    else if (v1)\n
    {\n
        if (v1 == 2)\n
        {\n
            v0 = a0;\n
            v5 = sub_402660(v4);\n
        }\n
        else if (v1 == 1)\n
        {\n
            v0 = a0;\n
            v5 = sub_4028a0(v4);\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v5 = sub_402570(v4);\n
        return v5;\n
    }\n
}\n
", "4203888:sub_402570": "int sub_402570(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0;\n
    if ((v2 & 4095) != 8)\n
        sub_402ed0(\"BAD FREE: large address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    v1[0] = a0 - 8;\n
    if (v1[0] != v5)\n
    {\n
        v0 = v5;\n
        sub_402ed0(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", v2, v1[0]); /* do not return */\n
    }\n
    if (!(v1[1] >= 0x20000 && v1[1] <= 2147487743 && !(v1[1] & 4095)))\n
        sub_402ed0(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v2); /* do not return */\n
    return cgc_deallocate(v1);\n
}\n
", "4204115:sub_402653": null, "4204128:sub_402660": "int sub_402660(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    unsigned int v3[2];  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5[2];  // [bp-0x14]\n
    unsigned int v6[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12[2];  // eax\n
    unsigned int v13[2];  // eax\n
\n
    v9 = &v10;\n
    v8 = a0;\n
    v7[0] = v8 - 8;\n
    v4 = v8 & -0x100000;\n
    if ((v8 & 7))\n
    {\n
        sub_402ed0(\"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    }\n
    else if ((v7[1] & 1))\n
    {\n
        sub_402ed0(\"BAD SMALL FREE: double free ptr=%08x\\n
\"); /* do not return */\n
    }\n
    else\n
    {\n
        if (!(v7[1] <= 0x20000 && v7[1] >= 16))\n
            sub_402ed0(\"BAD SMALL FREE: corrupted size ptr=%08x\\n
\"); /* do not return */\n
        if (!v7[0])\n
            v6[0] = 0;\n
        else\n
            v6 = v7 - v7[0];\n
        v5[0] = v7 + v7[1];\n
        if (v6 && (*((v6 + 4)) & -2) != v7[0])\n
        {\n
            v0 = v8;\n
            sub_402ed0(\"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\", v6); /* do not return */\n
        }\n
        if (v5[0] != v7[1])\n
        {\n
            v0 = v8;\n
            sub_402ed0(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v5); /* do not return */\n
        }\n
        if (v6 && (*((v6 + 4)) & 1))\n
        {\n
            v3[0] = v6;\n
            v0[0] = v3;\n
            sub_402cf0(v11, sub_402a90());\n
            v12 = v6;\n
            v12[1] = v7[1] + v12[1];\n
            v7 = v6;\n
            v5[0] = *((v7 + 4));\n
        }\n
        if (!(v5[1] & 1))\n
        {\n
            v1[0] = v7;\n
            v0[0] = v1;\n
            return sub_402e40(v11, sub_402a90());\n
        }\n
        v2[0] = v5;\n
        v0[0] = v2;\n
        sub_402cf0(v11, sub_402a90());\n
        v13 = v7;\n
        v13[1] = v5[1] + v13[1];\n
        v5[0] = v7 + v7[1];\n
        v5[0] = *((v7 + 4));\n
    }\n
}\n
", "4204700:sub_40289c": null, "4204704:sub_4028a0": "int sub_4028a0(unsigned int v5, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x10]\n
    unsigned short *v1;  // [bp-0xc]\n
    unsigned int *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = a0 & -0x1000;\n
    v0 = a0;\n
    v2 = sub_402a90(*(v1), v0);\n
    *(&v0) = *((v5 + v2 * 4));\n
    *((v5 + v2 * 4)) = v0;\n
    return v5;\n
}\n
", "4204781:sub_4028ed": null, "4204784:sub_4028f0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_4028f0(unsigned int v6, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = *((v6 + (a0 >> 20) + 524));\n
    if (v2 != 2 && v2)\n
    {\n
        if (v2 == 1)\n
        {\n
            v0 = a0 & -0x1000;\n
            v3 = *(v0);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &a0[4];\n
    v3 = v1->field_4 - 8;\n
    return v3;\n
}\n
", "4204922:sub_40297a": null, "4204928:sub_402980": "int sub_402980(unsigned int v5, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a1 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_4024c0(v5, a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v2 = sub_4020a0(v5, a1);\n
        return v2;\n
    }\n
    else if (sub_4028f0(v5, a0) < a1)\n
    {\n
        v1 = sub_4020a0(v5, a1);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = sub_4028f0(v5, a0);\n
        sub_403010(v1, a0);\n
        sub_4024c0(v5, a0);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4205197:sub_402a8d": null, "4205200:sub_402a90": "int sub_402a90(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < 16)\n
    {\n
        v0 = (v3 >> 2) - 1;\n
        return v0;\n
    }\n
    else if (v3 <= 0x200)\n
    {\n
        v0 = (v3 >> 4) - -2;\n
        return v0;\n
    }\n
    else if (v3 <= 0x1200)\n
    {\n
        v0 = (v3 - 0x200 >> 7) - -34;\n
        return v0;\n
    }\n
    else if (v3 <= 0x20000)\n
    {\n
        v0 = (v3 - 0x1200 >> 11) - -66;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 130;\n
        return v0;\n
    }\n
}\n
", "4205363:sub_402b33": null, "4205376:sub_402b40": "int sub_402b40(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = &v1;\n
    if (cgc_allocate(0x200000, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = *(&v1);\n
    v2 = v3 - -1048575 & -0x100000;\n
    if (v3 < v2)\n
        cgc_deallocate(v3);\n
    if (v2 + 0x100000 < v3 + 0x200000)\n
        cgc_deallocate(v2 + 0x100000);\n
    *((v7 + (v2 >> 20) + 524)) = a0;\n
    v4 = v2;\n
    return v4;\n
}\n
", "4205606:sub_402c26": null, "4205616:sub_402c30": "int sub_402c30(unsigned int v7)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = sub_402b40(v7, 2);\n
    if (!v1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v3[0] = v1 - -19 & -0x10;\n
    v3[0] = 0;\n
    v3[1] = 1048560 + -0x1 * v3 + v1;\n
    v2[0] = v3 + v3[1];\n
    v2[0] = v3[1];\n
    v2[1] = 0;\n
    v0[0] = v3;\n
    sub_402e40(v7, 130);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205794:sub_402ce2": null, "4205808:sub_402cf0": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int sub_402cf0(unsigned int *v3, unsigned int a0, struct_2 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_2 *v4;  // eax\n
\n
    v1 = &v2;\n
    if (!(a1->field_4 & 1))\n
    {\n
        v0 = a1;\n
        sub_402ed0(\"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    v4->field_4 = v4->field_4 & -2;\n
    if (a1->field_8)\n
        a1->field_8->field_c = a1->field_c;\n
    if (a1->field_c)\n
        a1->field_c->field_8 = a1->field_8;\n
    if (v3[a0] != a1)\n
    {\n
        a1->field_8 = 0;\n
        a1->field_c = 0;\n
        return a1;\n
    }\n
    v3[a0] = a1->field_c;\n
}\n
", "4205988:sub_402da4": null, "4206000:sub_402db0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402db0(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = a0->field_4 - a1;\n
    v3[0] = &a0->padding_0[a1];\n
    v2 = &a0->padding_0[a0->field_4];\n
    a0->field_4 = a1;\n
    v3[0] = a0->field_4;\n
    v3[1] = v4;\n
    *(v2) = v4;\n
    v1[0] = v3;\n
    v0[0] = v1;\n
    return sub_402e40(v7, sub_402a90(v4));\n
}\n
", "4206131:sub_402e33": null, "4206144:sub_402e40": "int sub_402e40(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    if ((*((a1 + 4)) & 1) == 1)\n
    {\n
        v0 = a1;\n
        sub_402ed0(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    *((v4 + 4)) = *((v4 + 4)) | 1;\n
    *((a1 + 8)) = 0;\n
    *((a1 + 12)) = *((v3 + a0 * 4));\n
    *((v3 + a0 * 4)) = a1;\n
    v5 = a1;\n
    if (!*((v5 + 12)))\n
        return v5;\n
    v5 = *((a1 + 12));\n
    *((v5 + 8)) = a1;\n
}\n
", "4206277:sub_402ec5": null, "4206288:sub_402ed0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40a930;\n
\n
int sub_402ed0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0x8]\n
\n
    v3 = &v4;\n
    v2 = &v6;\n
    v0 = v5;\n
    v1 = v2;\n
    sub_403210(&g_40a930, v0, v1, &v6);\n
    cgc__terminate(1, v0, v1, &v6);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4206343\n
}\n
", "4206352:sub_402f10": "int sub_402f10(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1[v0] == a0)\n
        {\n
            v2 = &v1[v0];\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206464:sub_402f80": "int sub_402f80(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = v6;\n
    v0 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1[v2] == *((v0 + v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = v1[v2] - *((v0 + v2));\n
            return v3;\n
        }\n
    }\n
}\n
", "4206608:sub_403010": "int sub_403010(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v5;\n
}\n
", "4206704:sub_403070": "int sub_403070(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    if (v5 > a0)\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            *((v2 + -1 + a1 - v0)) = *(-1 + v1 + a1 - v0);\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v2[v0] = *((v1 + v0));\n
        }\n
        return v5;\n
    }\n
}\n
", "4206880:sub_403120": "int sub_403120(char *v4, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v4;\n
}\n
", "4206960:sub_403170": "int sub_403170(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v0 = &v5;\n
    v1 = sub_4031a0(v4, v0);\n
    return v1;\n
}\n
", "4207004:sub_40319c": null, "4207008:sub_4031a0": "extern unsigned int g_40a518;\n
\n
int sub_4031a0(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_403210(&g_40a518, v2, a0);\n
}\n
", "4207053:sub_4031cd": null, "4207056:sub_4031d0": "int sub_4031d0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_403210(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207111:sub_403207": null, "4207120:sub_403210": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_403210(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 1;\n
    if (v5->field_8 == -1)\n
    {\n
        v1 = 0;\n
        v5->field_8 = 0;\n
    }\n
    v0 = 2147483647;\n
    v2 = sub_403330(a0, a1, v5, 0);\n
    if (!v1)\n
    {\n
        sub_401370(v5);\n
        v5->field_8 = -1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207259:sub_40329b": null, "4207264:sub_4032a0": "int sub_4032a0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_4032e0(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207319:sub_4032d7": null, "4207328:sub_4032e0": "int sub_4032e0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    return sub_403330(a0, a1, 0, v3, 2147483647, *(&v0));\n
}\n
", "4207393:sub_403321": null, "4207408:sub_403330": "int sub_403330(char *v31, unsigned int *a0, unsigned int a1[5], unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    void* v2;  // [bp-0xb0], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xac]\n
    unsigned int v4;  // [bp-0xa8]\n
    unsigned int v5;  // [bp-0xa4]\n
    char v6;  // [bp-0x9d]\n
    unsigned int v7;  // [bp-0x9c]\n
    unsigned int v8;  // [bp-0x98]\n
    char v9;  // [bp-0x91]\n
    unsigned int v10;  // [bp-0x90]\n
    unsigned int v11;  // [bp-0x8c]\n
    char v12;  // [bp-0x85]\n
    unsigned int v13;  // [bp-0x84]\n
    unsigned int v14;  // [bp-0x80]\n
    unsigned int v15;  // [bp-0x7c]\n
    unsigned int v16;  // [bp-0x78]\n
    char v17;  // [bp-0x71]\n
    unsigned int v18;  // [bp-0x70]\n
    unsigned int v19;  // [bp-0x6c]\n
    char *v20;  // [bp-0x68]\n
    char *v21;  // [bp-0x64]\n
    char v22;  // [bp-0x5d]\n
    unsigned int v23;  // [bp-0x5c]\n
    char v24;  // [bp-0x58]\n
    char *v25;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v26;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v27;  // [bp-0x10]\n
    char v28;  // [bp-0x9]\n
    unsigned int v29;  // [bp-0x4]\n
    char v30;  // [bp+0x0]\n
    char *v32;  // eax\n
    char *v33;  // eax\n
    char *v34;  // eax\n
    char *v35;  // eax\n
    char *v36;  // eax\n
    char *v37;  // eax\n
    unsigned int *v38;  // eax\n
    char *v39;  // eax\n
    unsigned int *v40;  // eax\n
    unsigned int *v41;  // eax\n
    unsigned int *v42;  // eax\n
    unsigned int v43;  // ecx\n
    char *v44;  // eax\n
    char *v45;  // eax\n
\n
    v29 = &v30;\n
    v25 = 0;\n
    while (true)\n
    {\n
        v32 = v31;\n
        v31 = v32 + 1;\n
        v28 = *(v32);\n
        if (!v28)\n
            break;\n
        v22 = 32;\n
        while (v28 != 37)\n
        {\n
            if (v25 >= a3)\n
            {\n
                v33 = v25;\n
                v25 = v33 + 1;\n
                if (v33 == -1)\n
                    cgc__terminate();\n
            }\n
            else\n
            {\n
                v17 = v28;\n
                if (a1)\n
                    sub_401af0(&v17, 1, a1);\n
                if (a2)\n
                    v25[a2] = v17;\n
                v25 += 1;\n
            }\n
            v34 = v31;\n
            v31 = v34 + 1;\n
            v28 = *(v34);\n
            if (!v28)\n
                goto LABEL_403be6;\n
        }\n
        v21 = v31;\n
        v27 = 4;\n
        v26 = 0;\n
        v35 = v31;\n
        v31 = v35 + 1;\n
        v5 = *(v35);\n
        v28 = v5;\n
        if (!v5)\n
            break;\n
        if (v5 == 32)\n
        {\n
            v22 = 32;\n
        }\n
        else if (v5 != 48)\n
        {\n
            v31 += 1;\n
        }\n
        else\n
        {\n
            v22 = 48;\n
        }\n
        if (*(v31) >= 48 && *(v31) <= 57)\n
            v26 = sub_4047c0(v31, &v31);\n
        v36 = v31;\n
        v31 = v36 + 1;\n
        v4 = *(v36);\n
        v28 = v4;\n
        if (!v4)\n
            break;\n
        if (v4 == 104)\n
        {\n
            if (*(v31) != 104)\n
            {\n
                v27 = 2;\n
            }\n
            else\n
            {\n
                v31 += 1;\n
                v27 = 1;\n
            }\n
        }\n
        else\n
        {\n
            if (v4 != 108)\n
            {\n
                v31 += 1;\n
            }\n
            else if (*(v31) == 108)\n
            {\n
                v31 += 1;\n
                v27 = 8;\n
            }\n
            else\n
            {\n
                v27 = 4;\n
            }\n
        }\n
        v37 = v31;\n
        v31 = v37 + 1;\n
        v3 = *(v37);\n
        v28 = v3;\n
        if (!v3)\n
        {\n
            v16 = v31 - v21;\n
            if (v25 < a3)\n
            {\n
                v15 = a3 - v25;\n
                if (v15 > v16)\n
                    v15 = v16;\n
                if (a1)\n
                    sub_401af0(v21, v15, a1);\n
                if (a2)\n
                    sub_403010(a2 + v25, v21, v15);\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            else\n
            {\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            break;\n
        }\n
        if (v3 == 88)\n
        {\n
LABEL_4037cf:\n
            if (v28 == 100)\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v41 = a0;\n
                a0 = v41 + 1;\n
                v18 = *(v41);\n
                v0 = v18;\n
                v1 = 10;\n
                v2 = 0;\n
                sub_403c80(&v24, v0, 10);\n
            }\n
            else\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v42 = a0;\n
                a0 = v42 + 1;\n
                v19 = *(v42);\n
                v43 = (v28 == 117 ? 16 : 10);\n
                v0 = v19;\n
                v1 = v43;\n
                v2 = v28 == 88;\n
                sub_403ce0();\n
            }\n
            v23 = sub_4040f0(&v24, v0, v1);\n
            if (v23 < v26)\n
            {\n
                v26 -= v23;\n
                do\n
                {\n
                    if (v25 >= a3)\n
                    {\n
                        v44 = v25;\n
                        v25 = v44 + 1;\n
                        if (v44 == -1)\n
                            cgc__terminate();\n
                    }\n
                    else\n
                    {\n
                        v12 = v22;\n
                        if (a1)\n
                            sub_401af0(&v12, 1, a1);\n
                        if (a2)\n
                            v25[a2] = v12;\n
                        v25 += 1;\n
                    }\n
                    v26 -= 1;\n
                } while (v26 > 0);\n
            }\n
            v11 = v23;\n
            if (v25 < a3)\n
            {\n
                v10 = a3 - v25;\n
                if (v10 > v11)\n
                    v10 = v11;\n
                if (a1)\n
                    sub_401af0(&v24, v10, a1);\n
                if (a2)\n
                    sub_403010(a2 + v25, &v24, v10);\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            else\n
            {\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            goto LABEL_403bd7;\n
        }\n
        else\n
        {\n
            if (v3 == 99)\n
            {\n
                v38 = a0;\n
                a0 = v38 + 1;\n
                v28 = *(v38);\n
                if (v25 >= a3)\n
                {\n
                    v39 = v25;\n
                    v25 = v39 + 1;\n
                    if (v39 == -1)\n
                        cgc__terminate();\n
                }\n
                else\n
                {\n
                    v9 = v28;\n
                    if (a1)\n
                        sub_401af0(&v9, 1, a1);\n
                    if (a2)\n
                        v25[a2] = v9;\n
                    v25 += 1;\n
                }\n
                goto LABEL_403bd7;\n
            }\n
            if (v3 == 100)\n
                goto LABEL_4037cf;\n
            if (v3 == 115)\n
            {\n
                v40 = a0;\n
                a0 = v40 + 1;\n
                v20 = *(v40);\n
                v8 = sub_4040f0();\n
                if (v25 >= a3)\n
                {\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
                else\n
                {\n
                    v7 = a3 - v25;\n
                    if (v7 > v8)\n
                        v7 = v8;\n
                    if (a1)\n
                        sub_401af0(v20, v7, a1);\n
                    if (a2)\n
                        sub_403010(a2 + v25, v20, v7);\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
LABEL_403bd7:\n
            }\n
            else if (v3 != 117 && v3 != 120)\n
            {\n
                v14 = v31 - v21;\n
                if (v25 >= a3)\n
                {\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                else\n
                {\n
                    v13 = a3 - v25;\n
                    if (v13 > v14)\n
                        v13 = v14;\n
                    if (a1)\n
                        sub_401af0(v21, v13, a1);\n
                    if (a2)\n
                        sub_403010(a2 + v25, v21, v13);\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                goto LABEL_403bd7;\n
            }\n
        }\n
    }\n
LABEL_403be6:\n
    a1 = 0;\n
    if (v25 >= a3)\n
    {\n
        v45 = v25;\n
        v25 = v45 + 1;\n
        if (v45 != -1)\n
            return v25 - 1;\n
        cgc__terminate();\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        if (a1)\n
            sub_401af0(&v6, 1, a1);\n
        if (a2)\n
            v25[a2] = v6;\n
        v25 += 1;\n
        return v25 - 1;\n
    }\n
}\n
", "4209789:sub_403c7d": null, "4209792:sub_403c80": "int sub_403c80(char *v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    if (a0 < 0)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = 45;\n
        a0 = -(a0);\n
    }\n
    v0 = a2;\n
    return sub_403ce0(v3, a0, a1);\n
}\n
", "4209881:sub_403cd9": null, "4209888:sub_403ce0": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
int sub_403ce0(char *v5, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v5[20];\n
    if (a2)\n
        v2 = \"0123456789ABCDEF\";\n
    else\n
        v2 = \"0123456789abcdef\";\n
    v6 = v1;\n
    v1 = v6 + 1;\n
    if (!a0)\n
    {\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v7[1].field_-1 = *(v2);\n
        return sub_403070(v5, v1, 20 + -0x1 * &v5[-1 * v1]);\n
    }\n
    for (v6[1].field_-1 = 0; a0; a0 = (0 CONCAT a0) /m a1)\n
    {\n
        v0 = v2;\n
        v8 = v1;\n
        v1 = v8 + 1;\n
        v8[1].field_-1 = v0[(0 CONCAT a0) /m a1 >> 32];\n
    }\n
    return sub_403070(v5, v1, 20 + -0x1 * &v5[-1 * v1]);\n
}\n
", "4210112:sub_403dc0": "extern unsigned int g_40add8;\n
\n
int sub_403dc0(unsigned short *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402980(&g_40add8, v2, a0);\n
}\n
", "4210160:sub_403df0": "int sub_403df0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v4));\n
                v1 = v0 == sub_401300(*(a0));\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210320:sub_403e90": "int sub_403e90(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = sub_4040f0();\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v6 + v2)))\n
        {\n
            v0 = v1;\n
            if (!sub_404130(v6 + v2, a0))\n
            {\n
                v3 = v6 + v2;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4210464:sub_403f20": "int sub_403f20(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    for (v0 = 0; v0[v4]; v0 += 1)\n
    {\n
        if (v0[v4] == a0)\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v4 + v0;\n
    return v1;\n
}\n
", "4210608:sub_403fb0": "int sub_403fb0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v4) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210736:sub_404030": "int sub_404030(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); v0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        a0 += 1;\n
    }\n
    *(v0) = 0;\n
    return v3;\n
}\n
", "4210816:sub_404080": "int sub_404080(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4040f0();\n
    v0 = sub_402070(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403010(v0, v5, v1);\n
    v1[v0] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4210928:sub_4040f0": "int sub_4040f0(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4210992:sub_404130": "int sub_404130(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = &v6[a1];\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v6))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v6));\n
                v1 = 0;\n
                if (v0 == sub_401300(*(a0)))\n
                    v1 = v6 < v2;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v6 += 1;\n
        a0 += 1;\n
    }\n
    if (v6 == v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(v6) - *(a0);\n
    return v3;\n
}\n
", "4211216:sub_404210": "int sub_404210(char *v4, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(a0))\n
            v0 = v1 - v4 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        a0 += 1;\n
        v1 += 1;\n
    }\n
    for (; v1 - v4 < a1; v1 += 1)\n
    {\n
        *(v1) = 0;\n
    }\n
    return v4;\n
}\n
", "4211376:sub_4042b0": "int sub_4042b0(char *v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4040f0(v5);\n
    if (v1 > a0)\n
        v1 = a0;\n
    v0 = sub_402070(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403010(v0, v5, v1);\n
    *((v0 + v1)) = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211520:sub_404340": "int sub_404340(struct struct_0 **v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &*(v5)->field_0;\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v0[v1]; v1 += 1)\n
    {\n
        if (sub_403f20(a0, v0[v1]))\n
            break;\n
    }\n
    if (!v0[v1])\n
        *(v5) = 0;\n
    else\n
        *(v5) = &v0[1 + v1];\n
    v0[v1] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211728:sub_404410": "int sub_404410(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v4])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!sub_403fb0(&v0[v4], a0))\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4211856:sub_404490": "int sub_404490(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2[2];  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char v8[2];  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    *(&v8) = v12;\n
    v7 = 1;\n
    v6 = 1;\n
    v5 = 0;\n
    for (v4 = 0; sub_401180(*(v12)); v12 += 1)\n
    {\n
        if (!*(v12))\n
            goto LABEL_404633;\n
    }\n
    if (*(v12) == 43)\n
    {\n
        v7 = 1;\n
        v12 += 1;\n
    }\n
    else if (*(v12) == 45)\n
    {\n
        v7 = -1;\n
        v12 += 1;\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
            v12 += 2;\n
        goto LABEL_404642;\n
    }\n
    if (a1)\n
    {\n
LABEL_404642:\n
        for (; *(v12); v12 += 1)\n
        {\n
            if (sub_4010c0(*(v12)))\n
            {\n
                v3 = *(v12) - 48;\n
            }\n
            else if (sub_401140(*(v12)))\n
            {\n
                v3 = *(v12) + -87;\n
            }\n
            else\n
            {\n
                if (!sub_401160(*(v12)))\n
                    break;\n
                v3 = *(v12) + -55;\n
            }\n
            if (v3 >= a1)\n
                break;\n
            v6 = 0;\n
            v4 = a1 * v4 + v3;\n
            if (v4 > 2147483647)\n
                v5 = 1;\n
        }\n
    }\n
    if (*(v12) == 48 && *((v12 + 1)) >= 48 && *((v12 + 1)) <= 55)\n
    {\n
        *(&v12) = v12 + 1;\n
        a1 = 8;\n
        goto LABEL_404633;\n
    }\n
    if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
    {\n
        v12 += 2;\n
        a1 = 16;\n
        goto LABEL_404633;\n
    }\n
    if (!sub_4010c0(*(v12)))\n
        goto LABEL_404633;\n
    a1 = 10;\n
LABEL_404633:\n
    if (a0)\n
    {\n
        if (v6)\n
            *(&v2) = v8;\n
        else\n
            v2 = v12;\n
        *(a0) = v2;\n
    }\n
    if (v7 >= 0)\n
    {\n
        if (v5)\n
            v0 = 2147483647;\n
        else\n
            v0 = v4;\n
        v9 = v0;\n
        return v9;\n
    }\n
    else\n
    {\n
        if (v5)\n
            v1 = 0x80000000;\n
        else\n
            v1 = -(v4);\n
        v9 = v1;\n
        return v9;\n
    }\n
}\n
", "4212672:sub_4047c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4047c0(char v8[2], unsigned int *a0, char a1[2])\n
{\n
    char <0x4047c0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x30]\n
    int tmp_41;  // tmp #41\n
    void* v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    char v5[2];  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x4]\n
    unsigned int v7;  // [bp+0x0]\n
    unsigned int v9;  // [bp+0x10]\n
    unsigned int v10;  // [bp+0x14]\n
    char v11[2];  // [bp+0x18], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp+0x1c], Other Possible Types: char\n
    unsigned int v13;  // [bp+0x24]\n
    void* v14;  // [bp+0x28]\n
    unsigned int v15;  // [bp+0x2c]\n
    char v16;  // [bp+0x30]\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // eax\n
\n
    v6 = &<0x4047c0[is_2]|Stack bp, 1 B>;\n
    *(&v5) = v8;\n
    v4 = 1;\n
    v3 = 1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v7 = v8[0];\n
        if (!sub_401180(v8[0]))\n
            break;\n
        if (!v8[0])\n
            goto LABEL_404978;\n
        v8 = &v8[1];\n
    }\n
    if (*(v8) == 43)\n
    {\n
        v15 = 1;\n
        v8 = &v8[1];\n
    }\n
    else if (*(v8) == 45)\n
    {\n
        v15 = -1;\n
        v8 = &v8[1];\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v8) == 48)\n
        {\n
            v7 = *((v8 + 1));\n
            if (sub_401300(*((v8 + 1))) == 120)\n
                v8 += 2;\n
        }\n
        goto LABEL_404987;\n
    }\n
    if (a1)\n
    {\n
LABEL_404987:\n
        for (; *(v8); v8 = &v8[1])\n
        {\n
            v7 = *(v8);\n
            if (sub_4010c0(*(v8)))\n
            {\n
                v10 = *(v8) - 48;\n
            }\n
            else\n
            {\n
                v7 = *(v8);\n
                if (sub_401140(*(v8)))\n
                {\n
                    v10 = *(v8) + -87;\n
                }\n
                else\n
                {\n
                    v7 = *(v8);\n
                    if (!sub_401160(*(v8)))\n
                        break;\n
                    v10 = *(v8) + -55;\n
                }\n
            }\n
            if (v10 >= a1)\n
                break;\n
            v14 = 0;\n
            v9 = *(&v12);\n
            v17 = v11 * a1;\n
            tmp_41 = v17;\n
            v19 = (v11 * a1 >> 32) + (a1 >> 31) * v11 + a1 * v9 + (v10 >> 31) + (tmp_41 + v10 < tmp_41);\n
            *(&v11) = v17 + v10;\n
            v12 = v19;\n
            if (v12)\n
                v13 = 1;\n
        }\n
    }\n
    if (*(v8) == 48 && *((v8 + 1)) >= 48 && *((v8 + 1)) <= 55)\n
    {\n
        v8 = &v8[1];\n
        a1 = 8;\n
        goto LABEL_404978;\n
    }\n
    if (*(v8) == 48)\n
    {\n
        v7 = *((v8 + 1));\n
        if (sub_401300(*((v8 + 1))) == 120)\n
        {\n
            v8 += 2;\n
            a1 = 16;\n
            goto LABEL_404978;\n
        }\n
    }\n
    v7 = *(v8);\n
    if (!sub_4010c0(*(v8)))\n
        goto LABEL_404978;\n
    a1 = 10;\n
LABEL_404978:\n
    if (a0)\n
    {\n
        if (v14)\n
            *(&a1) = *(&v16);\n
        else\n
            a1 = v8;\n
        *(a0) = a1;\n
    }\n
    if (v15 < 0)\n
    {\n
        if ((!(!v11 >> 31) || !(!v12)) && (!(v11 == 0x80000000) || !(!v12)))\n
            v13 = 1;\n
        v11 = -(v11);\n
        v12 = -(v12) - (0 < v11);\n
    }\n
    if (v13)\n
    {\n
        *(&v8) = -1;\n
        a0 = 0;\n
        return v8;\n
    }\n
    v8 = v11;\n
    a0 = v12;\n
    return v8;\n
}\n
", "4213632:sub_404b80": "int sub_404b80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_403170(\"1. Compress\\n
\");\n
    sub_403170(\"2. Decompress\\n
\");\n
    return sub_403170(\"3. Quit\\n
\");\n
}\n
", "4213683:sub_404bb3": null, "4213696:sub_404bc0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40a100[6];\n
extern unsigned int g_40a518[5];\n
\n
int sub_404bc0()\n
{\n
    char v0;  // [bp-0x1075]\n
    int tmp_25;  // tmp #25\n
    unsigned int v1[26];  // [bp-0x1074], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x1070]\n
    char v3;  // [bp-0x106c]\n
    void* v4;  // [bp-0x6c]\n
    unsigned int v5;  // [bp-0x67]\n
    struct_0 *v6;  // [bp-0x8], Other Possible Types: unsigned int\n
    char v8;  // [bp+0x1080]\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ebp\n
\n
    sub_4068e0();\n
    v4 = 0;\n
    v2 = 0;\n
    v1[0] = 0;\n
    sub_403170(\"Key?\\n
\");\n
    if (sub_401650(&v5, 95, &g_40a100[0]) == 95)\n
    {\n
        sub_403120(&v3, 0, 0x1000);\n
        v6 = 0;\n
        while (true)\n
        {\n
            if (v6 >= 95)\n
            {\n
                sub_403170(\"Data?\\n
\");\n
                sub_403120(&v3, 0, 0x1000);\n
                sub_401370(&g_40a518[0]);\n
                if (sub_4018e0(&v3, 0x1000, 0, &g_40a100[0]) < 0)\n
                    goto LABEL_404e9b;\n
                v1[0] = sub_405710();\n
                v1[24] = &v3;\n
                v1[25] = sub_4040f0(&v3);\n
                if (sub_405780(v1, &v4) < 0)\n
                    goto LABEL_404e9b;\n
                sub_403170(\"Original Size: %d\\n
\");\n
                sub_403170(\"Compressed Size: %d (%d%%)\\n
\");\n
                sub_403170(\"Compressed Data: \");\n
                v6 = 0;\n
                while (true)\n
                {\n
                    v0 = 0;\n
                    if (v6 < v2)\n
                        v0 = v6 < 32;\n
                    if (!(v0 & 1))\n
                        break;\n
                    sub_403170(\"%02X\");\n
                    v6 += 1;\n
                }\n
                sub_403170(\"\\n
\");\n
                goto LABEL_404ea9;\n
            }\n
            if (*(&v5 + v6) < 32)\n
            {\n
LABEL_404c73:\n
                goto LABEL_404e9b;\n
            }\n
            else\n
            {\n
                if (!(*(&v5 + v6) <= 126))\n
                    goto LABEL_404c73;\n
                v9 = *(&v5 + v6);\n
                tmp_25 = (&v3)[v9];\n
                (&v3)[v9] = (&v3)[v9] + 1;\n
                if (!(tmp_25 <= 0))\n
                    goto LABEL_404e9b;\n
                v6 += 1;\n
            }\n
        }\n
    }\n
LABEL_404e9b:\n
    sub_403170(\"error.\\n
\");\n
LABEL_404ea9:\n
    if (v1)\n
        sub_401ac0(v1);\n
    if (v4)\n
        sub_401ac0(v4);\n
    v11 = *(&v8);\n
    return;\n
}\n
", "4214497:sub_404ee1": null, "4214512:sub_404ef0": "extern unsigned int g_40a100[6];\n
extern unsigned int g_40a518[5];\n
\n
int sub_404ef0()\n
{\n
    unsigned int v0[26];  // [bp-0x1078], Other Possible Types: unsigned int\n
    int tmp_25;  // tmp #25\n
    void* v1;  // [bp-0x1074], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x1070]\n
    char v3;  // [bp-0x106c]\n
    void* v4;  // [bp-0x6c]\n
    unsigned int v5;  // [bp-0x67]\n
    unsigned int v6;  // [bp-0x8]\n
    char v8;  // [bp+0x1080]\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ebp\n
\n
    sub_4068e0();\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0[0] = 0;\n
    sub_403170(\"Key?\\n
\");\n
    if (sub_401650(&v5, 95, &g_40a100[0]) == 95)\n
    {\n
        sub_403120(&v3, 0, 0x1000);\n
        v6 = 0;\n
        while (true)\n
        {\n
            if (v6 >= 95)\n
            {\n
                sub_403170(\"Length?\\n
\");\n
                sub_403120(&v3, 0, 0x1000);\n
                sub_401370(&g_40a518[0]);\n
                if (sub_4018e0(&v3, 0x1000, 10, &g_40a100[0]) < 0)\n
                    goto LABEL_4051dd;\n
                v1 = sub_4047c0(&v3, NULL, 0xa);\n
                if (v1 > 0x1000)\n
                    goto LABEL_4051dd;\n
                sub_403170(\"Data?\\n
\");\n
                sub_403120(&v3, 0, 0x1000);\n
                if (sub_401650(&v3, v1, &g_40a100[0]) < 0)\n
                    goto LABEL_4051dd;\n
                v0[0] = sub_405710();\n
                v0[24] = &v3;\n
                v0[25] = v1;\n
                if (sub_406380(v0, &v4) < 0)\n
                    goto LABEL_4051dd;\n
                sub_403170(\"Compressed Size: %d\\n
\");\n
                sub_4040f0(v4);\n
                sub_403170(\"Original Size: %d\\n
\");\n
                sub_403170(\"Original Data: \");\n
                sub_401af0(v4, v2, &g_40a518[0]);\n
                sub_401af0(\"\\n
\", 1, &g_40a518[0]);\n
                goto LABEL_4051eb;\n
            }\n
            if (*(&v5 + v6) < 32)\n
            {\n
LABEL_404fad:\n
                goto LABEL_4051dd;\n
            }\n
            else\n
            {\n
                if (!(*(&v5 + v6) <= 126))\n
                    goto LABEL_404fad;\n
                v9 = *(&v5 + v6);\n
                tmp_25 = (&v3)[v9];\n
                (&v3)[v9] = (&v3)[v9] + 1;\n
                if (!(tmp_25 <= 0))\n
                    goto LABEL_4051dd;\n
                v6 += 1;\n
            }\n
        }\n
    }\n
LABEL_4051dd:\n
    sub_403170(\"error.\\n
\");\n
LABEL_4051eb:\n
    if (v0)\n
        sub_401ac0(v0);\n
    if (v4)\n
        sub_401ac0(v4);\n
    v11 = *(&v8);\n
    return;\n
}\n
", "4215331:sub_405223": null, "4215344:sub_405230": "extern unsigned int g_40a100[4];\n
extern unsigned int g_40a518[5];\n
\n
int sub_405230(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2[2];  // [bp-0x10]\n
    void* v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    sub_401560(&g_40a100[0], 1);\n
    for (v1 = 0; v1 < 8; v1 += 2)\n
    {\n
        sub_403170(\"%02X\");\n
    }\n
    sub_403170(\"\\n
\");\n
    while (true)\n
    {\n
        sub_404b80();\n
        sub_401370(&g_40a518[0]);\n
        if (sub_4018e0(v2, 8, 10, &g_40a100[0]) < 0)\n
            return -1;\n
        v0 = sub_4047c0(v2, NULL, 0xa);\n
        if (v0 == 1)\n
        {\n
            sub_404bc0();\n
        }\n
        else if (v0 == 2)\n
        {\n
            sub_404ef0();\n
        }\n
        else if (v0 != 3)\n
        {\n
            sub_403170(\"Invalid menu.\\n
\");\n
        }\n
        else\n
        {\n
            sub_403170(\"Bye.\\n
\");\n
            sub_401370(&g_40a518[0]);\n
            sub_401350(0); /* do not return */\n
        }\n
    }\n
}\n
", "4215677:sub_40537d": "int sub_40537d()\n
{\n
}\n
", "4215712:sub_4053a0": "int sub_4053a0(unsigned int v3)\n
{\n
    unsigned int v0[3];  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0[0] = sub_402070(12);\n
    v0[0] = v3;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    return v0;\n
}\n
", "4215772:sub_4053dc": null, "4215776:sub_4053e0": "int sub_4053e0(unsigned int v6[3], unsigned int a0)\n
{\n
    char v0;  // [bp-0xf]\n
    char v1;  // [bp-0xe]\n
    char v2;  // [bp-0xd]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8[3];  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10[3];  // eax\n
\n
    v4 = &v5;\n
    v2 = *((v6[0] + v6[1]));\n
    v1 = 0;\n
    for (v3 = 0; v3 < a0; v3 += 1)\n
    {\n
        if (v6[2] == 8)\n
        {\n
            v7 = v6[0];\n
            v8 = v6;\n
            v9 = v8[1];\n
            v8[1] = v9 + 1;\n
            v2 = *((v7 + v9 + 1));\n
            v6[2] = 0;\n
        }\n
        v0 = (v2 & 1 << ((8 - v6[2]) - 1 & 31)) >> ((8 - v6[2]) - 1 & 31);\n
        v1 |= v0 << ((a0 - v3) - 1 & 31);\n
        v10 = v6;\n
        v10[2] = v10[2] + 1;\n
    }\n
    return v1;\n
}\n
", "4215988:sub_4054b4": null, "4216000:sub_4054c0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_4054c0(struct_0 *v5, char a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    struct_0 *v7;  // edx\n
    unsigned int v8;  // ecx\n
    struct_0 *v9;  // eax\n
    char *v10;  // eax\n
\n
    v3 = &v4;\n
    v1 = v5->field_0[v5->field_4].field_0;\n
    for (v2 = 0; v2 < a1; v2 += 1)\n
    {\n
        if (v5->field_8 == 8)\n
        {\n
            v5->field_0[v5->field_4].field_0 = v1;\n
            v6 = v5->field_0;\n
            v7 = v5;\n
            v8 = v7->field_4;\n
            v7->field_4 = v8 + 1;\n
            v1 = v6[1 + v8];\n
            v5->field_8 = 0;\n
        }\n
        v0 = (a0 & 1 << ((8 - v2) - 1 & 31)) >> ((8 - v2) - 1 & 31);\n
        v1 |= v0 << ((8 - v5->field_8) - 1 & 31);\n
        v9 = v5;\n
        v9->field_8 = v9->field_8 + 1;\n
    }\n
    v10 = v5->field_0;\n
    v10[v5->field_4] = v1;\n
    return v10;\n
}\n
", "4216240:sub_4055b0": "int sub_4055b0(char *v5, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = v5;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v0[v1] != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &v0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4216350:sub_40561e": null, "4216352:sub_405620": "int sub_405620(char *v6, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v2[a0] != v2[a1])\n
            break;\n
        v2 += 1;\n
    }\n
    v1 = sub_4055b0(v6, *((a0 + v2)), a2);\n
    v0 = sub_4055b0(v6, *((a1 + v2)), a2);\n
    if (v1 && v0)\n
    {\n
        v3 = v1 - v0;\n
        return v3;\n
    }\n
    v3 = *((a0 + v2)) - *((a1 + v2));\n
    return v3;\n
}\n
", "4216591:sub_40570f": null, "4216592:sub_405710": "typedef struct struct_0 {\n
    char padding_0[104];\n
    unsigned int field_68;\n
} struct_0;\n
\n
int sub_405710(char *v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_402070(108);\n
    sub_403120(v0, 0, 108);\n
    sub_403010(v0, v3, 95);\n
    v0->field_68 = sub_405620;\n
    return v0;\n
}\n
", "4216691:sub_405773": null, "4216704:sub_405780": "int sub_405780(unsigned int v7[26], unsigned int *a0, unsigned int *a1)\n
{\n
    unsigned int *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 && a0 && a1)\n
    {\n
        v3 = v7[25];\n
        v2 = 0;\n
        v1 = v7[24];\n
        v0 = a1;\n
        v2 = sub_405890(v7, 0);\n
        if (!v2)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v7[24] = v2;\n
        v7[25] = *(a1);\n
        v0 = a1;\n
        *(a0) = sub_405e10(v7, 0);\n
        sub_401ac0(v2);\n
        v7[24] = v1;\n
        v7[25] = v3;\n
        if (!*(a0))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4216962:sub_405882": null, "4216976:sub_405890": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405890(unsigned int v14[26], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x438]\n
    unsigned int v1;  // [bp-0x434]\n
    char *v2;  // [bp-0x430]\n
    char **v3;  // [bp-0x42c]\n
    char v4;  // [bp-0x228]\n
    void* v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned short *v7;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned short v8;  // [bp-0x1a]\n
    unsigned int v9;  // [bp-0x14]\n
    struct_0 *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int *v15;  // eax\n
\n
    v12 = &v13;\n
    if (v14[25] > 0x1000)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v5 = (v14[25] >> 9) + (((v14[25] & 511) ^ 255 ^ 255) & 1);\n
    *(a1) = v5 * 2 + v14[25];\n
    v5 = 0;\n
    v3 = sub_402070(0x800);\n
    v2 = sub_402070(*(a1));\n
    sub_403120(v2, 0, *(a1));\n
    for (v10 = 0; v10 < 0x200; v10 += 1)\n
    {\n
        v3[v10] = sub_402070(0x200);\n
        sub_403120(v3[v10], 0, 0x200);\n
    }\n
    if (a0)\n
    {\n
        for (*(a1) = 0; v7 < v14[25]; v7 = v6 + v7)\n
        {\n
            v8 = *((v14[24] + v7));\n
            v7 += 2;\n
            if (v14[25] - v7 > 0x200)\n
                v0 = 0x200;\n
            else\n
                v0 = v14[25] - v7;\n
            v6 = v0;\n
            v15 = a1;\n
            *(v15) = v6 + *(v15);\n
            sub_403120(&v4, 0, 0x200);\n
            sub_403010(&v4, v14[24] + v7, v6);\n
            for (v10 = 0; v10 < 0x200; v10 += 1)\n
            {\n
                sub_403120(v3[v10], 0, 0x200);\n
            }\n
            for (v10 = v6 - 1; v10 >= 0; v10 += 1)\n
            {\n
                for (v9 = 0; v9 < v6; v9 += 1)\n
                {\n
                    *((v3[v9] + v10)) = (&v4)[v9];\n
                }\n
                sub_406880(v3, v6);\n
            }\n
            v5 += 1;\n
            for (v10 = 0; v10 < v6; v10 += 1)\n
            {\n
                *((v2 + v7 + v10 + -2 * v5)) = (v3[v8])[v10];\n
            }\n
        }\n
    }\n
    else\n
    {\n
        for (; v7 < v14[25]; v7 = v6 + v7)\n
        {\n
            if (v14[25] - v7 <= 0x200)\n
                v1 = v14[25] - v7;\n
            else\n
                v1 = 0x200;\n
            v6 = v1;\n
            sub_403120(&v4, 0, 0x200);\n
            sub_403010(&v4, v14[24] + v7, v6);\n
            for (v10 = 0; v10 < v6; v10 += 1)\n
            {\n
                sub_403010(v3[v10], &v4, v6);\n
                sub_406560(v3[v10], v6);\n
            }\n
            sub_406880(v3, v6);\n
            for (v8 = 0; v8 < v6; v8 += 1)\n
            {\n
                if (!sub_402f80(v3[v8], &v4, v6))\n
                    break;\n
            }\n
            *((v2 + v7 + 0x2 * v5)) = v8;\n
            v5 += 1;\n
            for (v10 = 0; v10 < v6; v10 += 1)\n
            {\n
                *((v2 + v7 + v10 + 2 * v5)) = (v3[v10])[1 + v6];\n
            }\n
        }\n
    }\n
    for (v10 = 0; v10 < 0x200; v10 += 1)\n
    {\n
        sub_401ac0(v3[v10]);\n
    }\n
    sub_401ac0(v3);\n
    v11 = v2;\n
    return v11;\n
}\n
", "4218374:sub_405e06": null, "4218384:sub_405e10": "typedef struct struct_1 {\n
    char padding_0[96];\n
    struct struct_2 *field_60;\n
    unsigned int field_64;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_405e10(struct_1 *v15, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0[3];  // [bp-0x92c], Other Possible Types: void*\n
    struct_0 *v1;  // [bp-0x928]\n
    unsigned int v2;  // [bp-0x924]\n
    char v3;  // [bp-0x920]\n
    void* v4;  // [bp-0x120], Other Possible Types: unsigned int [3]\n
    struct_0 *v5;  // [bp-0x11c]\n
    char *v6;  // [bp-0x118], Other Possible Types: void*\n
    char v7;  // [bp-0x114]\n
    char v8;  // [bp-0x113]\n
    char v9;  // [bp-0xf4]\n
    unsigned int v10;  // [bp-0x10]\n
    struct_0 *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v12;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x4]\n
    char v14;  // [bp+0x0]\n
\n
    v13 = &v14;\n
    if (!a0)\n
    {\n
        v6 = sub_402070(v15->field_64);\n
        v5 = sub_402070(v15->field_64 * 2 + 4);\n
        *(&v5) = v15->field_64;\n
        sub_403120(v6, 0, v15->field_64);\n
        for (v11 = 0; v11 < 32; v11 += 1)\n
        {\n
            (&v7)[v11] = v11;\n
        }\n
        sub_403010(&v9, v15, 95);\n
        for (v11 = 127; v11 < 0x100; v11 += 1)\n
        {\n
            (&v7)[v11] = v11;\n
        }\n
        for (v11 = 0; v11 < v15->field_64; v11 += 1)\n
        {\n
            for (v10 = 0; v10 < 0x100; v10 += 1)\n
            {\n
                if (*(&v15->field_60->field_0 + v11) == (&v7)[v10])\n
                {\n
                    v6[v11] = v10;\n
                    break;\n
                }\n
            }\n
            sub_403070(&v8, &v7, v10);\n
            v7 = *(&v15->field_60->field_0 + v11);\n
        }\n
        sub_403120(v5 + 4, 0, v15->field_64 * 2);\n
        v4[0] = sub_4053a0(v5 + 4);\n
        for (v11 = 0; v11 < v15->field_64; v11 += 1)\n
        {\n
            if (v6[v11] <= 15)\n
            {\n
                sub_4054c0(v4, 128, 1);\n
                sub_4054c0(v4, v6[v11] * 16, 4);\n
            }\n
            else\n
            {\n
                sub_4054c0(v4, 0, 1);\n
                sub_4054c0(v4, v6[v11], 8);\n
            }\n
        }\n
        *(a1) = v4[1] + 4 + !(v4[2] <= 0);\n
        sub_401ac0(v4);\n
        sub_401ac0(v6);\n
        v4 = 0;\n
        v6 = 0;\n
        v12 = v5;\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = v15->field_60->field_0;\n
        if (v2 > 0x1000)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        v1 = sub_402070(v2);\n
        sub_403120(&v3, 0, 0x800);\n
        v0[0] = sub_4053a0(v15->field_60 + 1);\n
        for (v11 = 0; v11 < v2; v11 += 1)\n
        {\n
            if (!sub_4053e0(v0, 1))\n
                (&v3)[v11] = sub_4053e0(v0, 8);\n
            else\n
                (&v3)[v11] = sub_4053e0(v0, 4);\n
        }\n
        for (v11 = 0; v11 < 32; v11 += 1)\n
        {\n
            (&v7)[v11] = v11;\n
        }\n
        sub_403010(&v9, v15, 95);\n
        for (v11 = 127; v11 < 0x100; v11 += 1)\n
        {\n
            (&v7)[v11] = v11;\n
        }\n
        for (v11 = 0; v11 < v2; v11 += 1)\n
        {\n
            v1[v11].field_0 = (&v7)[(&v3)[v11]];\n
            sub_403070(&v8, &v7, (&v3)[v11]);\n
            v7 = v1[v11].field_0;\n
        }\n
        *(a1) = v2;\n
        sub_401ac0(v0);\n
        v0 = 0;\n
        v12 = v1;\n
        return v12;\n
    }\n
}\n
", "4219763:sub_406373": null, "4219776:sub_406380": "int sub_406380(unsigned int v6[26], unsigned int *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0 && a1)\n
    {\n
        v2 = v6[25];\n
        v1 = 0;\n
        v0 = v6[24];\n
        v1 = sub_405e10(v6, 1, a1);\n
        if (!v1)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v6[24] = v1;\n
        v6[25] = *(a1);\n
        *(a0) = sub_405890(v6, 1, a1);\n
        sub_401ac0(v1);\n
        v6[24] = v0;\n
        v6[25] = v2;\n
        if (!*(a0))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4220030:sub_40647e": null, "4220032:sub_406480": "typedef struct struct_0 {\n
    char padding_0[96];\n
    char *field_60;\n
    unsigned int field_64;\n
} struct_0;\n
\n
int sub_406480(struct_0 *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!v3)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    if (v3->field_60)\n
        sub_401ac0(v3->field_60);\n
    v3->field_60 = sub_402070(a1);\n
    sub_403010(v3->field_60, a0, a1);\n
    v3->field_64 = a1;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4220167:sub_406507": null, "4220176:sub_406510": "int sub_406510(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!a0)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = sub_406510(a0, (v3 >> 31 CONCAT v3) /m a0 >> 32);\n
    return v0;\n
}\n
", "4220242:sub_406552": null, "4220256:sub_406560": "int sub_406560(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x12]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 >= sub_406510(a1, a0))\n
            break;\n
        v3 = v4;\n
        v1 = *((v7 + v4));\n
        while (true)\n
        {\n
            v2 = v3 + a1;\n
            if (v2 >= a0)\n
                v2 -= a0;\n
            if (v2 == v4)\n
                break;\n
            *((v7 + v3)) = *((v7 + v2));\n
            v3 = v2;\n
        }\n
        *((v7 + v3)) = v1;\n
        v4 += 1;\n
    }\n
    return v0;\n
}\n
", "4220442:sub_40661a": null, "4220448:sub_406620": "typedef struct struct_1 {\n
    char padding_0[104];\n
    struct struct_0 *field_68;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406620(unsigned int v7, unsigned int a0, unsigned int *a1, unsigned int *a2, unsigned int a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // ecx\n
\n
    v5 = &v6;\n
    v4 = a1;\n
    v3 = a2;\n
    v2 = a1;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4 < a2)\n
            v1 = v3 < a3;\n
        if (!(v1 & 1))\n
            break;\n
        v0 = 0x200;\n
        if (a4->field_68(a4, *((v7 + (v4 << 2))), *((v7 + (v3 << 2)))) >= 0)\n
        {\n
            v8 = v3;\n
            v3 = v8 + 1;\n
        }\n
        else\n
        {\n
            v8 = v4;\n
            v4 = v8 + 1;\n
        }\n
        *((a0 + v2 * 4)) = *((v7 + v8 * 4));\n
        v2 += 1;\n
    }\n
    for (; v4 < a2; v2 += 1)\n
    {\n
        *((a0 + v2 * 4)) = *((v7 + v4 * 4));\n
        v4 += 1;\n
    }\n
    for (; v3 < a3; v2 += 1)\n
    {\n
        *((a0 + v2 * 4)) = *((v7 + v3 * 4));\n
        v3 += 1;\n
    }\n
    return sub_403010(v7 + a1 * 4, a0 + a1 * 4, (a3 - a1) * 4);\n
}\n
", "4220838:sub_4067a6": null, "4220848:sub_4067b0": "int sub_4067b0(unsigned int v4, unsigned int a0, unsigned int *a1, unsigned int a2, void* a3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = &v3;\n
    v5 = a2 - a1;\n
    if (v5 > 1)\n
    {\n
        v0 = a1;\n
        v6 = a2 - a1;\n
        v1 = v0 + (v6 >> 31 CONCAT v6) /m 2;\n
        sub_4067b0(v4, a0, a1, v1, a3);\n
        sub_4067b0(v4, a0, v1, a2, a3);\n
        v5 = sub_406620(v4, a0, a1, v1, a2, a3);\n
        return v5;\n
    }\n
    return a2 - a1;\n
}\n
", "4221049:sub_406879": null, "4221056:sub_406880": "int sub_406880(unsigned int v3, unsigned int a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_402070(a0 * 4);\n
    sub_4067b0(v3, v0, NULL, a0, a1);\n
    return sub_401ac0(v0);\n
}\n
", "4221152:sub_4068e0": "int sub_4068e0()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4221200:sub_406910": "int sub_406910()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_406a30();\n
    sub_406a40();\n
    sub_406a60();\n
    v0 = 1;\n
    if (!sub_407030())\n
    {\n
        v0 = 7;\n
        sub_407710();\n
    }\n
    sub_4078e0();\n
    v1 = sub_407910;\n
    sub_406d00();\n
    if (sub_406a00())\n
    {\n
        v1 = 7;\n
        sub_407710();\n
    }\n
    sub_4074a0();\n
    if (sub_4075a0())\n
    {\n
        v1 = sub_407440;\n
        __setusermatherr();\n
    }\n
    sub_407520();\n
    sub_407530();\n
    sub_4074f0();\n
    v1 = sub_407490();\n
    _configthreadlocale();\n
    if (sub_4074e0())\n
        sub_406a20();\n
    sub_4076d0();\n
    if (sub_4076e0())\n
    {\n
        v1 = 7;\n
        sub_407710();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4221392:sub_4069d0": "int sub_4069d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407540();\n
    return 0;\n
}\n
", "4221408:sub_4069e0": "int sub_4069e0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4076f0();\n
    v0 = sub_407480();\n
    return _set_new_mode();\n
}\n
", "4221440:sub_406a00": "int sub_406a00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_407450());\n
}\n
", "4221472:sub_406a20": "int sub_406a20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4221488:sub_406a30": "int sub_406a30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4221504:sub_406a40": "int sub_406a40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_407470());\n
}\n
", "4221536:sub_406a60": "int sub_406a60()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_407460(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4221568:sub_406a80": "int sub_406a80()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_405230(v1, v2);\n
}\n
", "4221632:sub_406ac0": "extern char g_4094c0;\n
extern char g_4094c8;\n
extern char g_4094cc;\n
extern struct_0 *g_4094d8;\n
extern char g_409b40;\n
extern unsigned int g_40ad80;\n
extern unsigned int g_40bff8;\n
\n
int sub_406ac0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409b40;\n
    v13 = sub_407940;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40ad80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_406fa0(1, g_40ad80 ^ &v16, v22, v23))\n
        sub_407710();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_406f20();\n
    if (g_40bff8 == 1)\n
    {\n
        v16 = 7;\n
        sub_407710();\n
    }\n
    else if (g_40bff8)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40bff8 = 1;\n
        v16 = &g_4094d8;\n
        v15 = &g_4094cc;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_406cc9;\n
        }\n
        else\n
        {\n
            v16 = &g_4094c8;\n
            v15 = &g_4094c0;\n
            _initterm(*(&v17));\n
            g_40bff8 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_406f70();\n
    v8 = sub_4075d0();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_406df0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_407980(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_4075e0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_406df0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_406a80();\n
    if (!sub_407640())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_406ff0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_406cc9:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4222047:sub_406c5f": "int sub_406c5f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4222056:sub_406c68": "int sub_406c68()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4222083:sub_406c83": "extern char g_406c91;\n
\n
int sub_406c83()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_406c91;\n
    if (!sub_407640())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4222146:sub_406cc2": "int sub_406cc2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4222176:sub_406ce0": "int sub_406ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407350();\n
    return sub_406ac0();\n
}\n
", "4222192:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406ce0();\n
}\n
", "4222208:sub_406d00": "int sub_406d00(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_406d30(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4222256:sub_406d30": "extern unsigned int g_40c004;\n
\n
int sub_406d30(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40c004;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40c004))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4222312:sub_406d68": "int sub_406d68()\n
{\n
}\n
", "4222368:sub_406da0": "extern unsigned int g_40c010;\n
\n
int sub_406da0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40c010;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40c010);\n
    return v6;\n
}\n
", "4222402:sub_406dc2": "int sub_406dc2()\n
{\n
}\n
", "4222432:sub_406de0": "int sub_406de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4222448:sub_406df0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_409b60;\n
extern unsigned int g_40ad80;\n
\n
int sub_406df0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409b60;\n
    v13 = sub_407940;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40ad80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_407250(v6, g_40ad80 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_4072c0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4222653:sub_406ebd": "int sub_406ebd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4222662:sub_406ec6": "int sub_406ec6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4222701:sub_406eed": "int sub_406eed()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4222720:sub_406f00": "int sub_406f00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4222752:sub_406f20": "extern unsigned int g_40bffc;\n
\n
int sub_406f20()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_408160();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_406de0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40bffc = v6;\n
        if (!g_40bffc)\n
        {\n
            tmp_0 = 0;\n
            g_40bffc = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40bffc = v6;\n
            v5 = g_40bffc;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4222832:sub_406f70": "extern void* g_40bffc;\n
\n
int sub_406f70(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408160();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40bffc;\n
        g_40bffc = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x406f8f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4222880:sub_406fa0": "extern char g_40c000;\n
\n
int sub_406fa0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40c000 = 1;\n
    sub_407cd0();\n
    v4 = sub_408500();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_408500();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_408510();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4222960:sub_406ff0": "extern char g_40c000;\n
\n
int sub_406ff0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40c000 && a0)\n
        return 1;\n
    sub_408510(v2);\n
    v3 = sub_408510();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4223024:sub_407030": "extern char g_40c001;\n
extern unsigned int g_40c004;\n
extern unsigned int g_40c008;\n
extern unsigned int g_40c00c;\n
extern unsigned int g_40c010;\n
extern unsigned int g_40c014;\n
extern unsigned int g_40c018;\n
\n
int sub_407030(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40c001)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_407710();\n
    }\n
    if (sub_408160() && !v10)\n
    {\n
        v8 = &g_40c004;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40c010;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_4070f6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40c004 = v4;\n
    g_40c008 = v5;\n
    g_40c00c = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40c010 = v1;\n
    g_40c014 = v2;\n
    v11 = v3;\n
    g_40c018 = v11;\n
LABEL_4070f6:\n
    g_40c001 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4223248:sub_407110": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_407110(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_408160() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_407980(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4223328:sub_407160": "int sub_407160()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407030(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4223360:sub_407180": "int sub_407180()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_408160())\n
    {\n
        v3 = sub_407cd0();\n
    }\n
    else\n
    {\n
        v3 = sub_406a00();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_406a20();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4223408:sub_4071b0": "extern char g_40c004;\n
\n
int sub_4071b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_408160())\n
    {\n
        v0 = &g_40c004;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_408550();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4223456:sub_4071e0": "int sub_4071e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408520(0);\n
    return sub_408520();\n
}\n
", "4223488:sub_407200": "int sub_407200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_408530();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_408530();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_408540();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4223536:sub_407230": "char sub_407230()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408540();\n
    sub_408540();\n
    return 1;\n
}\n
", "4223568:sub_407250": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_407250(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4223680:sub_4072c0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_4072c0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4223824:sub_407350": "extern unsigned int g_40ad80;\n
extern unsigned int g_40adc0;\n
\n
int sub_407350()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40ad80 != 3141592654)\n
    {\n
        v4 = g_40ad80 & -0x10000;\n
        if (v4)\n
        {\n
            g_40adc0 = ~(g_40ad80);\n
            return g_40ad80 & -0x10000;\n
        }\n
    }\n
    v4 = sub_4073d0(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40ad80 = v0;\n
    g_40adc0 = ~(v0);\n
    return v4;\n
}\n
", "4223952:sub_4073d0": "int sub_4073d0()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4224064:sub_407440": "int sub_407440()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224080:sub_407450": "int sub_407450()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224096:sub_407460": "int sub_407460()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224112:sub_407470": "int sub_407470()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4224128:sub_407480": "int sub_407480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224144:sub_407490": "int sub_407490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224160:sub_4074a0": "extern void g_40c020;\n
\n
int sub_4074a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40c020);\n
}\n
", "4224192:sub_4074c0": "extern unsigned int g_40c020;\n
\n
int sub_4074c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40c020);\n
}\n
", "4224224:sub_4074e0": "char sub_4074e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4224240:sub_4074f0": "int sub_4074f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_407710();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224288:sub_407520": "int sub_407520()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4224304:sub_407530": "int sub_407530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4224320:sub_407540": "int sub_407540()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_407580();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_407590(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4224384:sub_407580": "extern char g_40c028;\n
\n
int sub_407580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c028;\n
}\n
", "4224400:sub_407590": "extern char g_40c030;\n
\n
int sub_407590()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c030;\n
}\n
", "4224416:sub_4075a0": "extern unsigned int g_40ad58;\n
\n
int sub_4075a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40ad58)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4224464:sub_4075d0": "extern char g_40c03c;\n
\n
int sub_4075d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c03c;\n
}\n
", "4224480:sub_4075e0": "extern char g_40c040;\n
\n
int sub_4075e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c040;\n
}\n
", "4224496:sub_4075f0": "extern void* g_40c044;\n
\n
int sub_4075f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40c044 = 0;\n
    return v3;\n
}\n
", "4224512:sub_407600": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_407600()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4224576:sub_407640": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_407640()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4224720:sub_4076d0": "int sub_4076d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4224736:sub_4076e0": "int sub_4076e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407850();\n
}\n
", "4224752:sub_4076f0": "int sub_4076f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_407860);\n
}\n
", "4224784:sub_407710": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407710()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_4075f0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_4075f0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4224809:sub_407729": "int sub_407729()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224809\n
}\n
", "4225104:sub_407850": "int sub_407850()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4225120:sub_407860": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_407860(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4225248:sub_4078e0": "extern struct_0 *g_409b34;\n
\n
int sub_4078e0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409b34;\n
    v3 = &g_409b34;\n
    return &g_409b34;\n
}\n
", "4225296:sub_407910": "extern struct_0 *g_409b3c;\n
\n
int sub_407910()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409b3c;\n
    v3 = &g_409b3c;\n
    return &g_409b3c;\n
}\n
", "4225344:sub_407940": "extern unsigned int g_40ad80;\n
\n
int sub_407940(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_408560(*(v2));\n
    return _except_handler4_common(&g_40ad80, sub_408190, v2, a0, a1);\n
}\n
", "4225408:sub_407980": "int sub_407980()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4225424:sub_407990": "int sub_407990(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x407999;\n
    return tmp_4;\n
}\n
", "4225440:sub_4079a0": "int sub_4079a0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4225472:sub_4079c0": "int sub_4079c0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4079a0(v2);\n
}\n
", "4225504:sub_4079e0": "extern unsigned int g_40c048;\n
\n
int sub_4079e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_407990(&g_40c048, v3);\n
    return v0;\n
}\n
", "4225536:sub_407a00": "extern char g_407980;\n
extern unsigned int g_40d000;\n
\n
int sub_407a00()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_4079c0(&g_40d000) != sub_407980)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4225584:sub_407a30": "extern char g_409400;\n
\n
int sub_407a30(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_409400;\n
    v1 = &g_409400;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4225648:sub_407a70": "extern unsigned int g_40d008;\n
\n
int sub_407a70(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_4079c0(&g_40d008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4225696:sub_407aa0": "extern unsigned int g_40c048;\n
\n
int sub_407aa0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_4079c0(&g_40c048);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_407980();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4225760:sub_407ae0": "int sub_407ae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4225776:sub_407af0": "int sub_407af0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407a30(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4225795\n
}\n
", "4225808:sub_407b10": "int sub_407b10(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407a30(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4225833:sub_407b29": "int sub_407b29()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4225833\n
}\n
", "4225840:sub_407b30": "int sub_407b30(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407a30(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407a70(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4225888:sub_407b60": "int sub_407b60(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407a30(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407aa0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4225936:sub_407b90": "extern char g_409400;\n
\n
int sub_407b90(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_409400;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4226000:sub_407bd0": "int sub_407bd0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407b90(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_407a30(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4226043\n
}\n
", "4226048:sub_407c00": "int sub_407c00(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407b90(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_407a30(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4226097:sub_407c31": "int sub_407c31()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226097\n
}\n
", "4226112:sub_407c40": "int sub_407c40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4226128:sub_407c50": "int sub_407c50(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407b90(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_407a30(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407a70(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4226192:sub_407c90": "int sub_407c90(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407b90(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_407a30(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407aa0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4226256:sub_407cd0": "extern unsigned int g_40ad80;\n
extern unsigned int g_40adc8;\n
extern unsigned int g_40adcc;\n
extern unsigned int g_40add0;\n
extern unsigned int g_40c04c;\n
extern unsigned int g_40c050;\n
extern unsigned int g_40c054;\n
\n
int sub_407cd0()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40ad80 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40c050 = 0;\n
    g_40add0 = g_40add0 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_408190();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_407e1b;\n
        g_40c054 = g_40c054 | 1;\n
    }\n
LABEL_407e1b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40c054 = g_40c054 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40c050 = 1;\n
    g_40add0 = g_40add0 | 2;\n
    g_40adc8 = g_40adc8 & -2;\n
    g_40adcc = g_40adcc;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40c050 = 2;\n
        g_40add0 = g_40add0 | 4;\n
        g_40adc8 = g_40adc8 & -17;\n
        g_40adcc = g_40adcc;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40c050 = 3;\n
                g_40add0 = g_40add0 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40c050 = 5;\n
                    g_40add0 = g_40add0 | 32;\n
                    g_40adc8 = g_40adc8 & -3;\n
                    g_40adcc = g_40adcc;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40c050 = 6;\n
                            g_40add0 = g_40add0 | 64;\n
                            g_40adc8 = g_40adc8 & -37;\n
                            g_40adcc = g_40adcc;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40adc8 = g_40adc8 & -16777217;\n
                    g_40adcc = g_40adcc;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40c04c = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40adc8 = ~(v2 | 16777256) & g_40adc8;\n
                        g_40adcc = ~(v3) & g_40adcc;\n
                        if (g_40c04c > 1)\n
                        {\n
                            g_40adc8 = g_40adc8 & -65;\n
                            g_40adcc = g_40adcc;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4227424:sub_408160": "extern unsigned int g_40add4;\n
\n
int sub_408160()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40add4)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4227472:sub_408190": "extern unsigned int g_40ad80;\n
extern unsigned int g_40adc0;\n
extern unsigned int g_40c060;\n
extern unsigned int g_40c064;\n
extern unsigned int g_40c06c;\n
extern unsigned int g_40c070;\n
extern unsigned int g_40c074;\n
extern unsigned int g_40c0b0;\n
extern unsigned short g_40c13c;\n
extern unsigned short g_40c140;\n
extern unsigned short g_40c144;\n
extern unsigned short g_40c148;\n
extern unsigned int g_40c14c;\n
extern unsigned int g_40c150;\n
extern unsigned int g_40c154;\n
extern unsigned int g_40c158;\n
extern unsigned int g_40c15c;\n
extern unsigned int g_40c160;\n
extern unsigned int g_40c164;\n
extern unsigned int g_40c168;\n
extern unsigned short g_40c16c;\n
extern unsigned int g_40c170;\n
extern unsigned int g_40c174;\n
extern unsigned short g_40c178;\n
\n
int sub_408190()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40ad80)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c160 = v7;\n
        g_40c15c = v6;\n
        g_40c158 = v8;\n
        g_40c154 = v9;\n
        g_40c150 = v10;\n
        g_40c14c = v11;\n
        g_40c178 = v12;\n
        g_40c16c = v13;\n
        g_40c148 = v14;\n
        g_40c144 = v15;\n
        g_40c140 = v16;\n
        g_40c13c = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40c170 = v0;\n
        g_40c164 = v3;\n
        g_40c168 = *(&v4);\n
        g_40c174 = &v5;\n
        g_40c0b0 = 65537;\n
        g_40c06c = g_40c168;\n
        g_40c060 = 3221226505;\n
        g_40c064 = 1;\n
        g_40c070 = 1;\n
        g_40c074 = 2;\n
        v1 = g_40ad80;\n
        v2 = g_40adc0;\n
        sub_4084d0();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4227488:sub_4081a0": "extern unsigned int g_40c060;\n
extern unsigned int g_40c064;\n
extern unsigned int g_40c06c;\n
extern unsigned int g_40c070;\n
extern unsigned int g_40c074;\n
extern unsigned short g_40c13c;\n
extern unsigned short g_40c140;\n
extern unsigned short g_40c144;\n
extern unsigned short g_40c148;\n
extern unsigned int g_40c14c;\n
extern unsigned int g_40c150;\n
extern unsigned int g_40c154;\n
extern unsigned int g_40c158;\n
extern unsigned int g_40c15c;\n
extern unsigned int g_40c160;\n
extern unsigned int g_40c164;\n
extern unsigned int g_40c168;\n
extern unsigned short g_40c16c;\n
extern unsigned int g_40c170;\n
extern unsigned int g_40c174;\n
extern unsigned short g_40c178;\n
\n
int sub_4081a0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40c160 = v4;\n
        g_40c15c = v5;\n
        g_40c158 = v6;\n
        g_40c154 = v7;\n
        g_40c150 = v8;\n
        g_40c14c = v9;\n
        g_40c178 = v10;\n
        g_40c16c = v11;\n
        g_40c148 = v12;\n
        g_40c144 = v13;\n
        g_40c140 = v14;\n
        g_40c13c = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40c170 = v0;\n
        g_40c164 = v1;\n
        g_40c168 = *(&v2);\n
        g_40c174 = &v3;\n
        g_40c06c = g_40c168;\n
        g_40c060 = 3221226505;\n
        g_40c064 = 1;\n
        g_40c070 = 1;\n
        g_40c074 = v3;\n
        sub_4084d0();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4227513:sub_4081b9": "int sub_4081b9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4227513\n
}\n
", "4227712:sub_408280": "extern unsigned int g_40c060;\n
extern unsigned int g_40c064;\n
extern unsigned int g_40c06c;\n
extern unsigned int g_40c070;\n
extern unsigned int g_40c074;\n
extern char g_40c078;\n
extern unsigned short g_40c13c;\n
extern unsigned short g_40c140;\n
extern unsigned short g_40c144;\n
extern unsigned short g_40c148;\n
extern unsigned int g_40c14c;\n
extern unsigned int g_40c150;\n
extern unsigned int g_40c154;\n
extern unsigned int g_40c158;\n
extern unsigned int g_40c15c;\n
extern unsigned int g_40c160;\n
extern unsigned int g_40c164;\n
extern unsigned int g_40c168;\n
extern unsigned short g_40c16c;\n
extern unsigned int g_40c170;\n
extern unsigned int g_40c174;\n
extern unsigned short g_40c178;\n
\n
int sub_408280()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1060895];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c160 = v7;\n
        g_40c15c = v8;\n
        g_40c158 = v9;\n
        g_40c154 = v10;\n
        g_40c150 = v11;\n
        g_40c14c = v12;\n
        g_40c178 = v13;\n
        g_40c16c = v14;\n
        g_40c148 = v15;\n
        g_40c144 = v16;\n
        g_40c140 = v17;\n
        g_40c13c = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40c170 = v0;\n
        g_40c164 = v2;\n
        g_40c168 = *(&v3);\n
        g_40c174 = &v4;\n
        g_40c06c = g_40c168;\n
        g_40c060 = 3221226505;\n
        g_40c064 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40c070 = v5 + 1;\n
        g_40c074 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_40c078)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_4084d0();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4227737:sub_408299": "int sub_408299()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4227737\n
}\n
", "4228016:sub_4083b0": "int sub_4083b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4081a0(8);\n
}\n
", "4228059:sub_4083db": "int sub_4083db()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4228059\n
}\n
", "4228304:sub_4084d0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4084d0(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4228352:sub_408500": "char sub_408500()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228368:sub_408510": "char sub_408510()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228384:sub_408520": "char sub_408520()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228400:sub_408530": "char sub_408530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228416:sub_408540": "char sub_408540()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228432:sub_408550": "int sub_408550()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228448:sub_408560": "extern unsigned int g_40c050;\n
\n
int sub_408560(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40c050 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4228756:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4228762:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4228768:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4228774:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4228780:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4228786:sub_4086b2": "int sub_4086b2(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4228792:sub_4086b8": "int sub_4086b8()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4228798:sub_4086be": "int sub_4086be()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4228804:sub_4086c4": "int sub_4086c4(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4228810:sub_4086ca": "int sub_4086ca(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4228816:sub_4086d0": "int sub_4086d0()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4228822:sub_4086d6": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4086d6(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4228828:sub_4086dc": "int sub_4086dc(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4228834:sub_4086e2": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_4086e2(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4228840:sub_4086e8": "int sub_4086e8(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4228846:sub_4086ee": "int sub_4086ee(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4228852:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4228858:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4228864:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4228870:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4228876:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4228882:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4228888:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4228894:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4228900:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4228906:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4228912:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4228918:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4228924:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4228930:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4228936:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4228942:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4228948:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4228954:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4228960:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4228966:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4228972:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4228978:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4228984:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4228990:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4228996:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4229002:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4229008:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4229014:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4229020:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4229026:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4229032:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4229038:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4229044:sub_4087b4": "int sub_4087b4()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4229050:sub_4087ba": "int sub_4087ba(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_receive": null, "5242896:cgc_transmit": null, "5242900:GetCurrentProcess": null, "5242904:GetCurrentProcessId": null, "5242908:GetCurrentThreadId": null, "5242912:GetModuleHandleW": null, "5242916:GetStartupInfoW": null, "5242920:GetSystemTimeAsFileTime": null, "5242924:InitializeSListHead": null, "5242928:IsDebuggerPresent": null, "5242932:IsProcessorFeaturePresent": null, "5242936:QueryPerformanceCounter": null, "5242940:SetUnhandledExceptionFilter": null, "5242944:TerminateProcess": null, "5242948:UnhandledExceptionFilter": null, "5242952:__current_exception": null, "5242956:__current_exception_context": null, "5242960:__std_type_info_destroy_list": null, "5242964:_except_handler4_common": null, "5242968:memset": null, "5242972:__p___argc": null, "5242976:__p___argv": null, "5242980:__p__commode": null, "5242984:__setusermatherr": null, "5242988:_c_exit": null, "5242992:_cexit": null, "5242996:_configthreadlocale": null, "5243000:_configure_narrow_argv": null, "5243004:_controlfp_s": null, "5243008:_crt_at_quick_exit": null, "5243012:_crt_atexit": null, "5243016:_execute_onexit_table": null, "5243020:_exit": null, "5243024:_get_initial_narrow_environment": null, "5243028:_initialize_narrow_environment": null, "5243032:_initialize_onexit_table": null, "5243036:_initterm": null, "5243040:_initterm_e": null, "5243044:_register_onexit_function": null, "5243048:_register_thread_local_exe_atexit_callback": null, "5243052:_seh_filter_dll": null, "5243056:_seh_filter_exe": null, "5243060:_set_app_type": null, "5243064:_set_fmode": null, "5243068:_set_new_mode": null, "5243072:exit": null, "5243076:terminate": null, "6295596:UnresolvableCallTarget": null}