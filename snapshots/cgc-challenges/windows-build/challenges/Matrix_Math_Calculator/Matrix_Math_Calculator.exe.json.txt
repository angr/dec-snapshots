{"4198400:sub_401000": "extern unsigned int g_40bdd8;\n
\n
int sub_401000(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = a0 * v6;\n
    if (v6 * a0 >> 32)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = sub_4020a0(&g_40bdd8);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    sub_403120(v1, 0);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4198560:sub_4010a0": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_4010a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 1;\n
}\n
", "4198587:sub_4010bb": null, "4198592:sub_4010c0": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_4010c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 2;\n
}\n
", "4198619:sub_4010db": null, "4198624:sub_4010e0": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_4010e0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 16;\n
}\n
", "4198651:sub_4010fb": null, "4198656:sub_401100": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401100(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 14;\n
}\n
", "4198683:sub_40111b": null, "4198688:sub_401120": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401120(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 12;\n
}\n
", "4198715:sub_40113b": null, "4198720:sub_401140": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401140(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 4;\n
}\n
", "4198747:sub_40115b": null, "4198752:sub_401160": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401160(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 8;\n
}\n
", "4198779:sub_40117b": null, "4198784:sub_401180": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_401180(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 64;\n
}\n
", "4198811:sub_40119b": null, "4198816:sub_4011a0": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_4011a0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 32;\n
}\n
", "4198843:sub_4011bb": null, "4198848:sub_4011c0": "typedef struct struct_0 {\n
    char padding_0[4239360];\n
    char field_40b000;\n
} struct_0;\n
\n
extern char g_40b000;\n
\n
int sub_4011c0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_40b000)) & 128;\n
}\n
", "4198877:sub_4011dd": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x6]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v4 = sub_401240();\n
    v1 = 1;\n
    if (sub_4010c0(v4))\n
        return v1 & 1;\n
    v0 = 0;\n
    if (v4 >= 65)\n
        v0 = v4 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4198974:sub_40123e": null, "4198976:sub_401240": "int sub_401240(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199047:sub_401287": null, "4199056:sub_401290": "int sub_401290(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = sub_401240(v3);\n
    if (sub_4010c0(v3))\n
    {\n
        v0 = v3 - 48;\n
        return v0;\n
    }\n
    if (v3 >= 65 && v3 <= 70)\n
    {\n
        v0 = v3 + -55;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4199165:sub_4012fd": null, "4199168:sub_401300": "int sub_401300(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v3 = v3;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v3 ^= 32;\n
    v0 = v3;\n
    return v0;\n
}\n
", "4199248:sub_401350": "int sub_401350(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    cgc__terminate(v2);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4199266\n
}\n
", "4199280:sub_401370": "int sub_401370(unsigned int v5[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == -1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v5[1] != 1)\n
    {\n
        v1 = 0;\n
        v0 = v5[3] - v5[2];\n
        sub_401460(v5[4], &v5[1 + 1] + v5[2]);\n
        v0 = v5[3] - v5[2];\n
        if (sub_4014d0(v5[0], &v5[1 + 1] + v5[2]))\n
            v1 = -1;\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4199507:sub_401453": null, "4199520:sub_401460": "int sub_401460(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199619:sub_4014c3": null, "4199632:sub_4014d0": "int sub_4014d0(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4199762:sub_401552": null, "4199776:sub_401560": "int sub_401560(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    if (v2[2] != -1)\n
        sub_401370(v2);\n
    if (a0)\n
        v2[2] = 0;\n
    else\n
        v2[2] = -1;\n
    v2[3] = 0;\n
    return v2;\n
}\n
", "4199872:sub_4015c0": "int sub_4015c0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2[6];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = 1048;\n
    v1[0] = sub_402070();\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = v5;\n
    v1[1] = (a0 ? 1 : 2);\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4200016:sub_401650": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401650(unsigned int v7, unsigned int a0, unsigned int a1[6])\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[6];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] == a1[3])\n
        sub_4017b0();\n
    if (a1[2] != -1)\n
    {\n
        v1 = a1[3] - a1[2];\n
        if (v1 > a0)\n
            v1 = a0;\n
        sub_403010(v3, 1 + a1 + a1[2]);\n
        v2 = v1 + v2;\n
        v8 = a1;\n
        v8[2] = v1 + v8[2];\n
        if (a1[2] == a1[3])\n
        {\n
            a1[3] = 0;\n
            a1[2] = 0;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_receive(a1[0], v3 + v2, a0 - v2))\n
            break;\n
        if (!v1)\n
            break;\n
        sub_401870(a1[5], v3 + v2);\n
        v2 = v1 + v2;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4200366:sub_4017ae": null, "4200368:sub_4017b0": "int sub_4017b0(unsigned int v5[6])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5[2] == v5[3])\n
    {\n
        v5[3] = 0;\n
        v5[2] = 0;\n
    }\n
    v0 = &v1;\n
    if (!cgc_receive(v5[0], 1 + v5 + v5[3], 0x400 - v5[3]) && *(&v1))\n
    {\n
        v5[3] = *(&v1);\n
        sub_401870(v5[5], v5 + 1);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200556:sub_40186c": null, "4200560:sub_401870": "int sub_401870(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200659:sub_4018d3": null, "4200672:sub_4018e0": "int sub_4018e0(unsigned int v7, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    for (v3 = 0; v3 < a0 - 1; v3 += 1)\n
    {\n
        v0 = a2;\n
        v2 = sub_4019e0();\n
        if (v2 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (v2 == a1)\n
            break;\n
        *((v7 + v3)) = v2;\n
    }\n
    if (v3 == a0 - 1)\n
    {\n
        do\n
        {\n
            v0 = a2;\n
            v1 = sub_4019e0();\n
            if (v1 == -1)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        } while (v1 != a1);\n
    }\n
    *((v7 + v3)) = 0;\n
    v4 = v3;\n
    return v4;\n
}\n
", "4200915:sub_4019d3": null, "4200928:sub_4019e0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char *field_14;\n
} struct_0;\n
\n
int sub_4019e0(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[6];  // edx\n
    unsigned int v8;  // ecx\n
\n
    v4 = &v5;\n
    if (v6->field_8 == -1)\n
    {\n
        v0 = &v1;\n
        if (!cgc_receive(v6->field_0, &v2, 1) && *(&v1))\n
        {\n
            sub_401870(v6->field_14, &v2, 1);\n
            v3 = v2;\n
            return v3;\n
        }\n
        v3 = -1;\n
        return v3;\n
    }\n
    else\n
    {\n
        if (v6->field_8 == v6->field_c && sub_4017b0(v6) < 0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v7 = v6;\n
        v8 = v7[2];\n
        v7[2] = v8 + 1;\n
        v3 = *(24 + &v6->field_0 + v8);\n
        return v3;\n
    }\n
}\n
", "4201152:sub_401ac0": "extern unsigned int g_40bdd8;\n
\n
int sub_401ac0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4024c0(&g_40bdd8, v2);\n
}\n
", "4201200:sub_401af0": "int sub_401af0(unsigned int v7, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[5];  // eax\n
    unsigned int v9[5];  // eax\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    v2 = 0;\n
    if (a1[2] != -1)\n
    {\n
        if (a0 >= 0x400)\n
        {\n
            sub_401370(a1);\n
        }\n
        else\n
        {\n
            if (a1[3] + a0 >= 0x400)\n
            {\n
                v1 = 0x400 - a1[3];\n
                sub_403010(&a1[1 + 1] + a1[3], v3);\n
                v8 = a1;\n
                v8[3] = v1 + v8[3];\n
                v2 = v1 + v2;\n
                sub_401370(a1);\n
            }\n
            if (v2 < a0)\n
            {\n
                v1 = a0 - v2;\n
                sub_403010(&a1[1 + 1] + a1[3], v3 + v2);\n
                v9 = a1;\n
                v9[3] = v1 + v9[3];\n
                v2 = v1 + v2;\n
            }\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    if (a1[4])\n
    {\n
        v0 = a0;\n
        if (sub_401d20(a1[0], a1[4], v7))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    else if (sub_401c90(a1[0], v7))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = a0;\n
    return v4;\n
}\n
", "4201610:sub_401c8a": null, "4201616:sub_401c90": "int sub_401c90(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v1;\n
        if (cgc_transmit(v7, v3 + v2, a1 - v2))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = *(&v1) + v2;\n
    }\n
}\n
", "4201746:sub_401d12": null, "4201760:sub_401d20": "int sub_401d20(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x414]\n
    void* v1;  // [bp-0x410], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x40c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = a2 - v1;\n
            if (v0 > 0x400)\n
                v0 = 0x400;\n
            sub_403010(&v2, v3 + v1);\n
            sub_401e20(a0, &v2);\n
            if (sub_401c90(v7, &v2, v0))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4202014:sub_401e1e": null, "4202016:sub_401e20": "int sub_401e20(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0;\n
    v1 = v5;\n
    if (!v4)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v0;\n
        if (v5 >= a1)\n
            break;\n
        v1[v0] = v4[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4202128:sub_401e90": "int sub_401e90(unsigned int v9[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // eax\n
    char *v11;  // eax, Other Possible Types: unsigned int, unsigned int [6]\n
    char *v12;  // eax\n
\n
    v7 = &v8;\n
    if (!a0)\n
    {\n
        sub_401ac0(v9[4]);\n
        v9[4] = 0;\n
        v11 = v9;\n
        v11[5] = 0;\n
        return v9;\n
    }\n
    v0 = 0x100;\n
    v10 = sub_403dc0(v9[4]);\n
    v9[4] = v10;\n
    v4 = v10;\n
    v0 = 0x100;\n
    v12 = sub_403dc0(v9[5]);\n
    v9[5] = v12;\n
    v3 = v12;\n
    v11 = sub_402000(a0);\n
    v6 = v11;\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v4[v5] = v5;\n
        v11 = v5 + 1;\n
    }\n
    for (v5 = 255; v5 >= 1; v5 = v11)\n
    {\n
        v2 = (0 CONCAT v6) /m v5 >> 32;\n
        v6 *= 3;\n
        v6 = v6 * 0x2000 ^ v6 >> 19 ^ v6 >> 21;\n
        v1 = v4[v5];\n
        v4[v5] = v4[v2];\n
        v4[v2] = v1;\n
        v11 = v5 - 1;\n
    }\n
    for (v5 = 0; v5 < 0x100; v5 = v11)\n
    {\n
        v3[v4[v5]] = v5;\n
        v11 = v5 + 1;\n
    }\n
    return v11;\n
}\n
", "4202494:sub_401ffe": null, "4202496:sub_402000": "int sub_402000(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 826981510;\n
    for (v1 = 0; *((v4 + v1)); v1 += 1)\n
    {\n
        v0 *= 37;\n
        v0 = *((v4 + v1)) ^ v0;\n
        v0 = v0 * 0x2000 ^ v0 >> 19;\n
    }\n
    return v0;\n
}\n
", "4202608:sub_402070": "extern unsigned int g_40bdd8;\n
\n
int sub_402070(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4020a0(&g_40bdd8, v2);\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a0 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    a0 = a0 - -3 & -0x4;\n
    if (a0 < 4)\n
    {\n
        v0 = 4;\n
        v1 = sub_402180(v5);\n
    }\n
    else if (a0 < 16)\n
    {\n
        v0 = a0;\n
        v1 = sub_402180(v5);\n
    }\n
    else if (a0 < 0x20000)\n
    {\n
        v0 = a0;\n
        v1 = sub_402310(v5);\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v1 = sub_402440(v5);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4202865:sub_402171": null, "4202880:sub_402180": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4628];\n
    unsigned int field_1218;\n
    unsigned int field_121c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int sub_402180(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned short v2[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc]\n
    unsigned int *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned short v9[2];  // eax\n
    struct_0 *v10;  // eax\n
    unsigned short v11[2];  // eax\n
\n
    v6 = &v7;\n
    v4 = sub_402a90();\n
    v3 = *((v8 + v4 * 4));\n
    if (v3)\n
    {\n
        *((v8 + v4 * 4)) = *(v3);\n
        v5 = v3;\n
        return v5;\n
    }\n
    *(&v2[0]) = *((v8 + v4 * 4 + 4620));\n
    if (!v2)\n
    {\n
        if (!*((v8 + 4632)))\n
        {\n
            v0 = 1;\n
            *((v8 + 4632)) = sub_402b40(v8);\n
            if (!*((v8 + 4632)))\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            *((v8 + 4636)) = 0;\n
        }\n
        v9 = *((v8 + 4632)) + *((v8 + 4636));\n
        *((v8 + v4 * 4 + 4620)) = v9;\n
        v2 = v9;\n
        *(v2) = a0;\n
        *((v2 + 2)) = a0;\n
        v10 = v8;\n
        v10->field_121c = v10->field_121c + 0x1000;\n
        if (*((v8 + 4636)) == 0x100000)\n
            *((v8 + 4632)) = 0;\n
    }\n
    v1 = v2 + *((v2 + 2));\n
    v11 = v2;\n
    v11[1] = v11[1] + a0;\n
    if (*((v2 + 2)) + *(v2) > 0x1000)\n
        *((v8 + v4 * 4 + 4620)) = 0;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4203271:sub_402307": null, "4203280:sub_402310": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_402310(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = a0 - -23 & -0x10;\n
    for (v3 = sub_402a90(); v3 < 131; v3 = v3 + 1)\n
    {\n
        for (v1 = *((v7 + v3 * 4)); v1; v1 = *((v1 + 12)))\n
        {\n
            if (*((v1 + 4)) >= v2)\n
                break;\n
        }\n
        if (v1)\n
            break;\n
    }\n
    if (v3 == 131)\n
    {\n
        if (!sub_402c30())\n
        {\n
            v3 = 130;\n
            v1 = *((v7 + v3 * 4));\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v0 = v1;\n
    sub_402cf0(v7, v3);\n
    if (*((v1 + 4)) - v2 > 32)\n
    {\n
        v0 = v2;\n
        sub_402db0(v7, v1);\n
    }\n
    v4 = v1 + 8;\n
    return v4;\n
}\n
", "4203581:sub_40243d": null, "4203584:sub_402440": "int sub_402440(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = a0 - -4103 & -0x1000;\n
    v0 = &v2;\n
    if (cgc_allocate(v3, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v7;\n
    v1[1] = v3;\n
    v4 = v1 + 1;\n
    return v4;\n
}\n
", "4203707:sub_4024bb": null, "4203712:sub_4024c0": "int sub_4024c0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v5 = *((v4 + (a0 >> 20) + 524));\n
    v1 = v5;\n
    if (!a0)\n
    {\n
        return *((v4 + (a0 >> 20) + 524));\n
    }\n
    else if (v1)\n
    {\n
        if (v1 == 2)\n
        {\n
            v0 = a0;\n
            v5 = sub_402660(v4);\n
        }\n
        else if (v1 == 1)\n
        {\n
            v0 = a0;\n
            v5 = sub_4028a0(v4);\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v5 = sub_402570(v4);\n
        return v5;\n
    }\n
}\n
", "4203888:sub_402570": "int sub_402570(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0;\n
    if ((v2 & 4095) != 8)\n
        sub_402ed0(\"BAD FREE: large address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    v1[0] = a0 - 8;\n
    if (v1[0] != v5)\n
    {\n
        v0 = v5;\n
        sub_402ed0(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", v2, v1[0]); /* do not return */\n
    }\n
    if (!(v1[1] >= 0x20000 && v1[1] <= 2147487743 && !(v1[1] & 4095)))\n
        sub_402ed0(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v2); /* do not return */\n
    return cgc_deallocate(v1);\n
}\n
", "4204115:sub_402653": null, "4204128:sub_402660": "int sub_402660(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    unsigned int v3[2];  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5[2];  // [bp-0x14]\n
    unsigned int v6[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12[2];  // eax\n
    unsigned int v13[2];  // eax\n
\n
    v9 = &v10;\n
    v8 = a0;\n
    v7[0] = v8 - 8;\n
    v4 = v8 & -0x100000;\n
    if ((v8 & 7))\n
    {\n
        sub_402ed0(\"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\"); /* do not return */\n
    }\n
    else if ((v7[1] & 1))\n
    {\n
        sub_402ed0(\"BAD SMALL FREE: double free ptr=%08x\\n
\"); /* do not return */\n
    }\n
    else\n
    {\n
        if (!(v7[1] <= 0x20000 && v7[1] >= 16))\n
            sub_402ed0(\"BAD SMALL FREE: corrupted size ptr=%08x\\n
\"); /* do not return */\n
        if (!v7[0])\n
            v6[0] = 0;\n
        else\n
            v6 = v7 - v7[0];\n
        v5[0] = v7 + v7[1];\n
        if (v6 && (*((v6 + 4)) & -2) != v7[0])\n
        {\n
            v0 = v8;\n
            sub_402ed0(\"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\", v6); /* do not return */\n
        }\n
        if (v5[0] != v7[1])\n
        {\n
            v0 = v8;\n
            sub_402ed0(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v5); /* do not return */\n
        }\n
        if (v6 && (*((v6 + 4)) & 1))\n
        {\n
            v3[0] = v6;\n
            v0[0] = v3;\n
            sub_402cf0(v11, sub_402a90());\n
            v12 = v6;\n
            v12[1] = v7[1] + v12[1];\n
            v7 = v6;\n
            v5[0] = *((v7 + 4));\n
        }\n
        if (!(v5[1] & 1))\n
        {\n
            v1[0] = v7;\n
            v0[0] = v1;\n
            return sub_402e40(v11, sub_402a90());\n
        }\n
        v2[0] = v5;\n
        v0[0] = v2;\n
        sub_402cf0(v11, sub_402a90());\n
        v13 = v7;\n
        v13[1] = v5[1] + v13[1];\n
        v5[0] = v7 + v7[1];\n
        v5[0] = *((v7 + 4));\n
    }\n
}\n
", "4204700:sub_40289c": null, "4204704:sub_4028a0": "int sub_4028a0(unsigned int v5, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x10]\n
    unsigned short *v1;  // [bp-0xc]\n
    unsigned int *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = a0 & -0x1000;\n
    v0 = a0;\n
    v2 = sub_402a90(*(v1), v0);\n
    *(&v0) = *((v5 + v2 * 4));\n
    *((v5 + v2 * 4)) = v0;\n
    return v5;\n
}\n
", "4204781:sub_4028ed": null, "4204784:sub_4028f0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_4028f0(unsigned int v6, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = *((v6 + (a0 >> 20) + 524));\n
    if (v2 != 2 && v2)\n
    {\n
        if (v2 == 1)\n
        {\n
            v0 = a0 & -0x1000;\n
            v3 = *(v0);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &a0[4];\n
    v3 = v1->field_4 - 8;\n
    return v3;\n
}\n
", "4204922:sub_40297a": null, "4204928:sub_402980": "int sub_402980(unsigned int v5, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (a1 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        sub_4024c0(v5, a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v2 = sub_4020a0(v5, a1);\n
        return v2;\n
    }\n
    else if (sub_4028f0(v5, a0) < a1)\n
    {\n
        v1 = sub_4020a0(v5, a1);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = sub_4028f0(v5, a0);\n
        sub_403010(v1, a0);\n
        sub_4024c0(v5, a0);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4205197:sub_402a8d": null, "4205200:sub_402a90": "int sub_402a90(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < 16)\n
    {\n
        v0 = (v3 >> 2) - 1;\n
        return v0;\n
    }\n
    else if (v3 <= 0x200)\n
    {\n
        v0 = (v3 >> 4) - -2;\n
        return v0;\n
    }\n
    else if (v3 <= 0x1200)\n
    {\n
        v0 = (v3 - 0x200 >> 7) - -34;\n
        return v0;\n
    }\n
    else if (v3 <= 0x20000)\n
    {\n
        v0 = (v3 - 0x1200 >> 11) - -66;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 130;\n
        return v0;\n
    }\n
}\n
", "4205363:sub_402b33": null, "4205376:sub_402b40": "int sub_402b40(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = &v1;\n
    if (cgc_allocate(0x200000, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = *(&v1);\n
    v2 = v3 - -1048575 & -0x100000;\n
    if (v3 < v2)\n
        cgc_deallocate(v3);\n
    if (v2 + 0x100000 < v3 + 0x200000)\n
        cgc_deallocate(v2 + 0x100000);\n
    *((v7 + (v2 >> 20) + 524)) = a0;\n
    v4 = v2;\n
    return v4;\n
}\n
", "4205606:sub_402c26": null, "4205616:sub_402c30": "int sub_402c30(unsigned int v7)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = sub_402b40(v7, 2);\n
    if (!v1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v3[0] = v1 - -19 & -0x10;\n
    v3[0] = 0;\n
    v3[1] = 1048560 + -0x1 * v3 + v1;\n
    v2[0] = v3 + v3[1];\n
    v2[0] = v3[1];\n
    v2[1] = 0;\n
    v0[0] = v3;\n
    sub_402e40(v7, 130);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205794:sub_402ce2": null, "4205808:sub_402cf0": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int sub_402cf0(unsigned int *v3, unsigned int a0, struct_2 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_2 *v4;  // eax\n
\n
    v1 = &v2;\n
    if (!(a1->field_4 & 1))\n
    {\n
        v0 = a1;\n
        sub_402ed0(\"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    v4->field_4 = v4->field_4 & -2;\n
    if (a1->field_8)\n
        a1->field_8->field_c = a1->field_c;\n
    if (a1->field_c)\n
        a1->field_c->field_8 = a1->field_8;\n
    if (v3[a0] != a1)\n
    {\n
        a1->field_8 = 0;\n
        a1->field_c = 0;\n
        return a1;\n
    }\n
    v3[a0] = a1->field_c;\n
}\n
", "4205988:sub_402da4": null, "4206000:sub_402db0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402db0(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = a0->field_4 - a1;\n
    v3[0] = &a0->padding_0[a1];\n
    v2 = &a0->padding_0[a0->field_4];\n
    a0->field_4 = a1;\n
    v3[0] = a0->field_4;\n
    v3[1] = v4;\n
    *(v2) = v4;\n
    v1[0] = v3;\n
    v0[0] = v1;\n
    return sub_402e40(v7, sub_402a90(v4));\n
}\n
", "4206131:sub_402e33": null, "4206144:sub_402e40": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_402e40(unsigned int *v3, unsigned int a0, struct_0 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    if ((a1->field_4 & 1) == 1)\n
    {\n
        v0 = a1;\n
        sub_402ed0(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\"); /* do not return */\n
    }\n
    v4 = a1;\n
    v4->field_4 = v4->field_4 | 1;\n
    a1->field_8 = 0;\n
    a1->field_c = v3[a0];\n
    v3[a0] = a1;\n
    v5 = a1;\n
    if (!v5->field_c)\n
        return v5;\n
    v5 = a1->field_c;\n
    *((v5 + 8)) = a1;\n
}\n
", "4206277:sub_402ec5": null, "4206288:sub_402ed0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40b930;\n
\n
int sub_402ed0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0x8]\n
\n
    v3 = &v4;\n
    v2 = &v6;\n
    v0 = v5;\n
    v1 = v2;\n
    sub_403210(&g_40b930, v0, v1, &v6);\n
    cgc__terminate(1, v0, v1, &v6);\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4206343\n
}\n
", "4206352:sub_402f10": "int sub_402f10(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1[v0] == a0)\n
        {\n
            v2 = &v1[v0];\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206464:sub_402f80": "int sub_402f80(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = v6;\n
    v0 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1[v2] == *((v0 + v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = v1[v2] - *((v0 + v2));\n
            return v3;\n
        }\n
    }\n
}\n
", "4206608:sub_403010": "int sub_403010(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v5;\n
}\n
", "4206704:sub_403070": "int sub_403070(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    if (v5 > a0)\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v2[1 + a1 + -1 * v0] = *((v1 + a1 - v0 - 1));\n
        }\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v2[v0] = *((v1 + v0));\n
        }\n
        return v5;\n
    }\n
}\n
", "4206880:sub_403120": "int sub_403120(char *v4, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v4;\n
}\n
", "4206960:sub_403170": "int sub_403170(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v0 = &v5;\n
    v1 = sub_4031a0(v4, v0);\n
    return v1;\n
}\n
", "4207004:sub_40319c": null, "4207008:sub_4031a0": "extern unsigned int g_40b518;\n
\n
int sub_4031a0(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_403210(&g_40b518, v2, a0);\n
}\n
", "4207053:sub_4031cd": null, "4207056:sub_4031d0": "int sub_4031d0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_403210(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207111:sub_403207": null, "4207120:sub_403210": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_403210(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 1;\n
    if (v5->field_8 == -1)\n
    {\n
        v1 = 0;\n
        v5->field_8 = 0;\n
    }\n
    v0 = 2147483647;\n
    v2 = sub_403330(a0, a1, v5, 0);\n
    if (!v1)\n
    {\n
        sub_401370(v5);\n
        v5->field_8 = -1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207259:sub_40329b": null, "4207264:sub_4032a0": "int sub_4032a0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
\n
    v3 = &v4;\n
    v2 = v7;\n
    v0 = &v6;\n
    v1 = sub_4032e0(v5, a0, v0);\n
    v8 = v2;\n
    return v1;\n
}\n
", "4207319:sub_4032d7": null, "4207328:sub_4032e0": "int sub_4032e0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    return sub_403330(a0, a1, 0, v3, 2147483647, *(&v0));\n
}\n
", "4207393:sub_403321": null, "4207408:sub_403330": "int sub_403330(char *v31, unsigned int *a0, unsigned int a1[5], unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    void* v2;  // [bp-0xb0], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xac]\n
    unsigned int v4;  // [bp-0xa8]\n
    unsigned int v5;  // [bp-0xa4]\n
    char v6;  // [bp-0x9d]\n
    unsigned int v7;  // [bp-0x9c]\n
    unsigned int v8;  // [bp-0x98]\n
    char v9;  // [bp-0x91]\n
    unsigned int v10;  // [bp-0x90]\n
    unsigned int v11;  // [bp-0x8c]\n
    char v12;  // [bp-0x85]\n
    unsigned int v13;  // [bp-0x84]\n
    unsigned int v14;  // [bp-0x80]\n
    unsigned int v15;  // [bp-0x7c]\n
    unsigned int v16;  // [bp-0x78]\n
    char v17;  // [bp-0x71]\n
    unsigned int v18;  // [bp-0x70]\n
    unsigned int v19;  // [bp-0x6c]\n
    char *v20;  // [bp-0x68]\n
    char *v21;  // [bp-0x64]\n
    char v22;  // [bp-0x5d]\n
    unsigned int v23;  // [bp-0x5c]\n
    char v24;  // [bp-0x58]\n
    char *v25;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v26;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v27;  // [bp-0x10]\n
    char v28;  // [bp-0x9]\n
    unsigned int v29;  // [bp-0x4]\n
    char v30;  // [bp+0x0]\n
    char *v32;  // eax\n
    char *v33;  // eax\n
    char *v34;  // eax\n
    char *v35;  // eax\n
    char *v36;  // eax\n
    char *v37;  // eax\n
    unsigned int *v38;  // eax\n
    char *v39;  // eax\n
    unsigned int *v40;  // eax\n
    unsigned int *v41;  // eax\n
    unsigned int *v42;  // eax\n
    unsigned int v43;  // ecx\n
    char *v44;  // eax\n
    char *v45;  // eax\n
\n
    v29 = &v30;\n
    v25 = 0;\n
    while (true)\n
    {\n
        v32 = v31;\n
        v31 = v32 + 1;\n
        v28 = *(v32);\n
        if (!v28)\n
            break;\n
        v22 = 32;\n
        while (v28 != 37)\n
        {\n
            if (v25 >= a3)\n
            {\n
                v33 = v25;\n
                v25 = v33 + 1;\n
                if (v33 == -1)\n
                    cgc__terminate();\n
            }\n
            else\n
            {\n
                v17 = v28;\n
                if (a1)\n
                    sub_401af0(&v17, 1, a1);\n
                if (a2)\n
                    *((a2 + v25)) = v17;\n
                v25 += 1;\n
            }\n
            v34 = v31;\n
            v31 = v34 + 1;\n
            v28 = *(v34);\n
            if (!v28)\n
                goto LABEL_403be6;\n
        }\n
        v21 = v31;\n
        v27 = 4;\n
        v26 = 0;\n
        v35 = v31;\n
        v31 = v35 + 1;\n
        v5 = *(v35);\n
        v28 = v5;\n
        if (!v5)\n
            break;\n
        if (v5 == 32)\n
        {\n
            v22 = 32;\n
        }\n
        else if (v5 != 48)\n
        {\n
            v31 += 1;\n
        }\n
        else\n
        {\n
            v22 = 48;\n
        }\n
        if (*(v31) >= 48 && *(v31) <= 57)\n
            v26 = sub_4047c0(v31, &v31);\n
        v36 = v31;\n
        v31 = v36 + 1;\n
        v4 = *(v36);\n
        v28 = v4;\n
        if (!v4)\n
            break;\n
        if (v4 == 104)\n
        {\n
            if (*(v31) != 104)\n
            {\n
                v27 = 2;\n
            }\n
            else\n
            {\n
                v31 += 1;\n
                v27 = 1;\n
            }\n
        }\n
        else\n
        {\n
            if (v4 != 108)\n
            {\n
                v31 += 1;\n
            }\n
            else if (*(v31) != 108)\n
            {\n
                v27 = 4;\n
            }\n
            else\n
            {\n
                v31 += 1;\n
                v27 = 8;\n
            }\n
        }\n
        v37 = v31;\n
        v31 = v37 + 1;\n
        v3 = *(v37);\n
        v28 = v3;\n
        if (!v3)\n
        {\n
            v16 = v31 - v21;\n
            if (v25 < a3)\n
            {\n
                v15 = a3 - v25;\n
                if (v15 > v16)\n
                    v15 = v16;\n
                if (a1)\n
                    sub_401af0(v21, v15, a1);\n
                if (a2)\n
                    sub_403010(a2 + v25, v21, v15);\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            else\n
            {\n
                if (v25 + v16 < v25)\n
                    cgc__terminate();\n
                v25 = v16 + v25;\n
            }\n
            break;\n
        }\n
        if (v3 == 88)\n
        {\n
LABEL_4037cf:\n
            if (v28 == 100)\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v41 = a0;\n
                a0 = v41 + 1;\n
                v18 = *(v41);\n
                v0 = v18;\n
                v1 = 10;\n
                v2 = 0;\n
                sub_403c80(&v24, v0, 10);\n
            }\n
            else\n
            {\n
                if (!(v27 <= 4))\n
                    break;\n
                v42 = a0;\n
                a0 = v42 + 1;\n
                v19 = *(v42);\n
                v43 = (v28 == 117 ? 16 : 10);\n
                v0 = v19;\n
                v1 = v43;\n
                v2 = v28 == 88;\n
                sub_403ce0();\n
            }\n
            v23 = sub_4040f0(&v24, v0, v1);\n
            if (v23 < v26)\n
            {\n
                v26 -= v23;\n
                do\n
                {\n
                    if (v25 >= a3)\n
                    {\n
                        v44 = v25;\n
                        v25 = v44 + 1;\n
                        if (v44 == -1)\n
                            cgc__terminate();\n
                    }\n
                    else\n
                    {\n
                        v12 = v22;\n
                        if (a1)\n
                            sub_401af0(&v12, 1, a1);\n
                        if (a2)\n
                            *((a2 + v25)) = v12;\n
                        v25 += 1;\n
                    }\n
                    v26 -= 1;\n
                } while (v26 > 0);\n
            }\n
            v11 = v23;\n
            if (v25 < a3)\n
            {\n
                v10 = a3 - v25;\n
                if (v10 > v11)\n
                    v10 = v11;\n
                if (a1)\n
                    sub_401af0(&v24, v10, a1);\n
                if (a2)\n
                    sub_403010(a2 + v25, &v24, v10);\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            else\n
            {\n
                if (v25 + v11 < v25)\n
                    cgc__terminate();\n
                v25 = v11 + v25;\n
            }\n
            goto LABEL_403bd7;\n
        }\n
        else\n
        {\n
            if (v3 == 99)\n
            {\n
                v38 = a0;\n
                a0 = v38 + 1;\n
                v28 = *(v38);\n
                if (v25 >= a3)\n
                {\n
                    v39 = v25;\n
                    v25 = v39 + 1;\n
                    if (v39 == -1)\n
                        cgc__terminate();\n
                }\n
                else\n
                {\n
                    v9 = v28;\n
                    if (a1)\n
                        sub_401af0(&v9, 1, a1);\n
                    if (a2)\n
                        *((a2 + v25)) = v9;\n
                    v25 += 1;\n
                }\n
                goto LABEL_403bd7;\n
            }\n
            if (v3 == 100)\n
                goto LABEL_4037cf;\n
            if (v3 == 115)\n
            {\n
                v40 = a0;\n
                a0 = v40 + 1;\n
                v20 = *(v40);\n
                v8 = sub_4040f0();\n
                if (v25 < a3)\n
                {\n
                    v7 = a3 - v25;\n
                    if (v7 > v8)\n
                        v7 = v8;\n
                    if (a1)\n
                        sub_401af0(v20, v7, a1);\n
                    if (a2)\n
                        sub_403010(a2 + v25, v20, v7);\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
                else\n
                {\n
                    if (v25 + v8 < v25)\n
                        cgc__terminate();\n
                    v25 = v8 + v25;\n
                }\n
LABEL_403bd7:\n
            }\n
            else if (v3 != 117 && v3 != 120)\n
            {\n
                v14 = v31 - v21;\n
                if (v25 >= a3)\n
                {\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                else\n
                {\n
                    v13 = a3 - v25;\n
                    if (v13 > v14)\n
                        v13 = v14;\n
                    if (a1)\n
                        sub_401af0(v21, v13, a1);\n
                    if (a2)\n
                        sub_403010(a2 + v25, v21, v13);\n
                    if (v25 + v14 < v25)\n
                        cgc__terminate();\n
                    v25 = v14 + v25;\n
                }\n
                goto LABEL_403bd7;\n
            }\n
        }\n
    }\n
LABEL_403be6:\n
    a1 = 0;\n
    if (v25 >= a3)\n
    {\n
        v45 = v25;\n
        v25 = v45 + 1;\n
        if (v45 != -1)\n
            return v25 - 1;\n
        cgc__terminate();\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        if (a1)\n
            sub_401af0(&v6, 1, a1);\n
        if (a2)\n
            *((a2 + v25)) = v6;\n
        v25 += 1;\n
        return v25 - 1;\n
    }\n
}\n
", "4209789:sub_403c7d": null, "4209792:sub_403c80": "int sub_403c80(char *v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    if (a0 < 0)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = 45;\n
        a0 = -(a0);\n
    }\n
    v0 = a2;\n
    return sub_403ce0(v3, a0, a1);\n
}\n
", "4209881:sub_403cd9": null, "4209888:sub_403ce0": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
int sub_403ce0(char *v5, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v5[20];\n
    if (a2)\n
        v2 = \"0123456789ABCDEF\";\n
    else\n
        v2 = \"0123456789abcdef\";\n
    v6 = v1;\n
    v1 = v6 + 1;\n
    v6[1].field_-1 = 0;\n
    if (!a0)\n
    {\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v7[1].field_-1 = *(v2);\n
        return sub_403070(v5, v1, 20 + -0x1 * &v5[-1 * v1]);\n
    }\n
    while (true)\n
    {\n
        v0 = v2;\n
        v8 = v1;\n
        v1 = v8 + 1;\n
        v8[1].field_-1 = v0[(0 CONCAT a0) /m a1 >> 32];\n
        a0 = (0 CONCAT a0) /m a1;\n
    }\n
}\n
", "4210112:sub_403dc0": "extern unsigned int g_40bdd8;\n
\n
int sub_403dc0(unsigned short *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402980(&g_40bdd8, v2, a0);\n
}\n
", "4210160:sub_403df0": "int sub_403df0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v4));\n
                v1 = v0 == sub_401300(*(a0));\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210320:sub_403e90": "int sub_403e90(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v1 = sub_4040f0();\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2[v6])\n
        {\n
            v0 = v1;\n
            if (!sub_404130(&v2[v6], a0))\n
            {\n
                v3 = v6 + v2;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4210464:sub_403f20": "int sub_403f20(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    for (v0 = 0; *((v4 + v0)); v0 += 1)\n
    {\n
        if (*((v4 + v0)) == a0)\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v4 + v0;\n
    return v1;\n
}\n
", "4210608:sub_403fb0": "int sub_403fb0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v4) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4210736:sub_404030": "int sub_404030(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); v0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        a0 += 1;\n
    }\n
    *(v0) = 0;\n
    return v3;\n
}\n
", "4210816:sub_404080": "int sub_404080(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4040f0();\n
    v0 = sub_402070(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403010(v0, v5, v1);\n
    v1[v0] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4210928:sub_4040f0": "int sub_4040f0(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4210992:sub_404130": "int sub_404130(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = &v6[a1];\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v6))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = sub_401300(*(v6));\n
                v1 = 0;\n
                if (v0 == sub_401300(*(a0)))\n
                    v1 = v6 < v2;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v6 += 1;\n
        a0 += 1;\n
    }\n
    if (v6 == v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(v6) - *(a0);\n
    return v3;\n
}\n
", "4211216:sub_404210": "int sub_404210(char *v4, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(a0))\n
            v0 = v1 - v4 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        a0 += 1;\n
        v1 += 1;\n
    }\n
    for (; v1 - v4 < a1; v1 += 1)\n
    {\n
        *(v1) = 0;\n
    }\n
    return v4;\n
}\n
", "4211376:sub_4042b0": "int sub_4042b0(char *v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4040f0(v5);\n
    if (v1 > a0)\n
        v1 = a0;\n
    v0 = sub_402070(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403010(v0, v5, v1);\n
    *((v0 + v1)) = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211520:sub_404340": "int sub_404340(struct struct_0 **v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &*(v5)->field_0;\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v0[v1]; v1 += 1)\n
    {\n
        if (sub_403f20(a0, v0[v1]))\n
            break;\n
    }\n
    if (!v0[v1])\n
        *(v5) = 0;\n
    else\n
        *(v5) = &v0[1 + v1];\n
    v0[v1] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211728:sub_404410": "int sub_404410(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v4 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (sub_403fb0(v4 + v0, a0))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4211856:sub_404490": "int sub_404490(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2[2];  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char v8[2];  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    *(&v8) = v12;\n
    v7 = 1;\n
    v6 = 1;\n
    v5 = 0;\n
    for (v4 = 0; sub_401180(v12[0]); v12 = &v12[1])\n
    {\n
        if (!v12[0])\n
            goto LABEL_404633;\n
    }\n
    if (*(v12) == 43)\n
    {\n
        v7 = 1;\n
        v12 = &v12[1];\n
    }\n
    else if (*(v12) == 45)\n
    {\n
        v7 = -1;\n
        v12 = &v12[1];\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
            v12 += 2;\n
        goto LABEL_404642;\n
    }\n
    if (a1)\n
    {\n
LABEL_404642:\n
        for (; *(v12); v12 = &v12[1])\n
        {\n
            if (sub_4010c0(*(v12)))\n
            {\n
                v3 = *(v12) - 48;\n
            }\n
            else if (sub_401140(*(v12)))\n
            {\n
                v3 = *(v12) + -87;\n
            }\n
            else\n
            {\n
                if (!sub_401160(*(v12)))\n
                    break;\n
                v3 = *(v12) + -55;\n
            }\n
            if (v3 >= a1)\n
                break;\n
            v6 = 0;\n
            v4 = a1 * v4 + v3;\n
            if (v4 > 2147483647)\n
                v5 = 1;\n
        }\n
    }\n
    if (*(v12) == 48 && *((v12 + 1)) >= 48 && *((v12 + 1)) <= 55)\n
    {\n
        *(&v12) = &v12[1];\n
        a1 = 8;\n
        goto LABEL_404633;\n
    }\n
    if (*(v12) == 48 && sub_401300(*((v12 + 1))) == 120)\n
    {\n
        v12 += 2;\n
        a1 = 16;\n
        goto LABEL_404633;\n
    }\n
    if (!sub_4010c0(*(v12)))\n
        goto LABEL_404633;\n
    a1 = 10;\n
LABEL_404633:\n
    if (a0)\n
    {\n
        if (v6)\n
            *(&v2) = v8;\n
        else\n
            v2 = v12;\n
        *(a0) = v2;\n
    }\n
    if (v7 >= 0)\n
    {\n
        if (v5)\n
            v0 = 2147483647;\n
        else\n
            v0 = v4;\n
        v9 = v0;\n
        return v9;\n
    }\n
    else\n
    {\n
        if (v5)\n
            v1 = 0x80000000;\n
        else\n
            v1 = -(v4);\n
        v9 = v1;\n
        return v9;\n
    }\n
}\n
", "4212672:sub_4047c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4047c0(char v8[2], unsigned int *a0, char a1[2])\n
{\n
    char <0x4047c0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x30]\n
    int tmp_41;  // tmp #41\n
    void* v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    char v5[2];  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x4]\n
    unsigned int v7;  // [bp+0x0]\n
    unsigned int v9;  // [bp+0x10]\n
    unsigned int v10;  // [bp+0x14]\n
    char v11[2];  // [bp+0x18], Other Possible Types: unsigned int, char\n
    unsigned int v12;  // [bp+0x1c]\n
    unsigned int v13;  // [bp+0x24]\n
    void* v14;  // [bp+0x28]\n
    unsigned int v15;  // [bp+0x2c]\n
    char v16;  // [bp+0x30]\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // eax\n
\n
    v6 = &<0x4047c0[is_2]|Stack bp, 1 B>;\n
    *(&v5) = v8;\n
    v4 = 1;\n
    v3 = 1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v7 = v8[0];\n
        if (!sub_401180(v8[0]))\n
            break;\n
        if (!v8[0])\n
            goto LABEL_404978;\n
        v8 = &v8[1];\n
    }\n
    if (*(v8) == 43)\n
    {\n
        v15 = 1;\n
        v8 = &v8[1];\n
    }\n
    else if (*(v8) == 45)\n
    {\n
        v15 = -1;\n
        v8 = &v8[1];\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v8) == 48)\n
        {\n
            v7 = *((v8 + 1));\n
            if (sub_401300(*((v8 + 1))) == 120)\n
                v8 += 2;\n
        }\n
        goto LABEL_404987;\n
    }\n
    if (a1)\n
    {\n
LABEL_404987:\n
        for (; *(v8); *(&v8) = &v8[1])\n
        {\n
            v7 = *(v8);\n
            if (sub_4010c0(*(v8)))\n
            {\n
                v10 = *(v8) - 48;\n
            }\n
            else\n
            {\n
                v7 = *(v8);\n
                if (sub_401140(*(v8)))\n
                {\n
                    v10 = *(v8) + -87;\n
                }\n
                else\n
                {\n
                    v7 = *(v8);\n
                    if (!sub_401160(*(v8)))\n
                        break;\n
                    v10 = *(v8) + -55;\n
                }\n
            }\n
            if (v10 >= a1)\n
                break;\n
            v14 = 0;\n
            v9 = v12;\n
            v17 = *(&v11) * a1;\n
            tmp_41 = v17;\n
            v19 = (*(&v11) * a1 >> 32) + (a1 >> 31) * *(&v11) + a1 * v9 + (v10 >> 31) + (tmp_41 + v10 < tmp_41);\n
            *(&v11) = v17 + v10;\n
            v12 = v19;\n
            if (v12)\n
                v13 = 1;\n
        }\n
    }\n
    if (*(v8) == 48 && *((v8 + 1)) >= 48 && *((v8 + 1)) <= 55)\n
    {\n
        v8 = &v8[1];\n
        a1 = 8;\n
        goto LABEL_404978;\n
    }\n
    if (*(v8) == 48)\n
    {\n
        v7 = *((v8 + 1));\n
        if (sub_401300(*((v8 + 1))) == 120)\n
        {\n
            v8 += 2;\n
            a1 = 16;\n
            goto LABEL_404978;\n
        }\n
    }\n
    v7 = *(v8);\n
    if (!sub_4010c0(*(v8)))\n
        goto LABEL_404978;\n
    a1 = 10;\n
LABEL_404978:\n
    if (a0)\n
    {\n
        if (v14)\n
            *(&a1) = *(&v16);\n
        else\n
            a1 = v8;\n
        *(a0) = a1;\n
    }\n
    if (v15 < 0)\n
    {\n
        if ((!(!v11 >> 31) || !(!v12)) && (!(v11 == 0x80000000) || !(!v12)))\n
            v13 = 1;\n
        v11 = -(v11);\n
        v12 = -(v12) - (0 < v11);\n
    }\n
    if (v13)\n
    {\n
        *(&v8) = -1;\n
        a0 = 0;\n
        return v8;\n
    }\n
    v8 = v11;\n
    a0 = v12;\n
    return v8;\n
}\n
", "4213632:sub_404b80": "int sub_404b80()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0x4347c000;\n
    v1 = sub_402070(0x800);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < 0x400; v0 += 1)\n
    {\n
        *((v1 + v0 * 2)) = v2[3 * v0];\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4213755:sub_404bfb": null, "4213760:sub_404c00": "extern struct_0 *g_40cff8;\n
\n
int sub_404c00(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned short *v3;  // ecx\n
\n
    v0 = &v1;\n
    if (g_40cff8 >= 0x400)\n
        g_40cff8 = 0;\n
    v3 = g_40cff8;\n
    g_40cff8 = &g_40cff8->field_0 + 1;\n
    return *((v2 + v3 * 2));\n
}\n
", "4213818:sub_404c3a": null, "4213824:sub_404c40": "int sub_404c40(char *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5 && a0 >= 2)\n
    {\n
        v1 = 0;\n
        for (v1 = 0; v1 < a0; v1 += 1)\n
        {\n
            v0 = sub_405bf0();\n
            if (v0 == -1)\n
            {\n
                v2 = 1;\n
                return v2;\n
            }\n
            v5[v1] = v0;\n
            if (v5[v1] == 10)\n
            {\n
                v5[v1] = 0;\n
                break;\n
            }\n
        }\n
        if (v1 != a0 && v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4214045:sub_404d1d": null, "4214048:sub_404d20": "int sub_404d20(char *v3, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_404c40(v3, a0);\n
    if (v0)\n
    {\n
        *(a1) = 0;\n
        return v0;\n
    }\n
    *(a1) = sub_404490(v3, NULL, 10);\n
    return v0;\n
}\n
", "4214152:sub_404d88": null, "4214160:sub_404d90": "int sub_404d90(char *v4, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    sub_403170(\"Make a selection: \\n
1. Input Matrix\\n
2. Print Matrix\\n
3. Add Matrices\\n
4. Subtract Matrices\\n
5. Multiply Matrices\\n
6. Swap Matrix Row\\n
7. Swap Matrix Col\\n
8. Transpose Matrix\\n
9. Perform Reduced Row Echelon Form on Matrix\\n
10. Randomize Matrix\\n
11. Exit\\n
>> \");\n
    if (sub_404d20(v4, a0, &v0) == 1)\n
    {\n
        v1 = 11;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4214253:sub_404ded": null, "4214256:sub_404df0": "int sub_404df0(unsigned int v6, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    sub_403170(\"Select Matrix 1 or Matrix 2\\n
>> \");\n
    v1 = sub_404d20(a1, a2, &v2);\n
    if (v1 == 1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v2 == 2)\n
        v0 = a0;\n
    else\n
        v0 = v6;\n
    v3 = v0;\n
    return v3;\n
}\n
", "4214393:sub_404e79": null, "4214400:sub_404e80": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_404e80(struct_1 *v5, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        sub_403170(\"New Row Size (0 to stay the same): \");\n
        if (sub_404d20(a0, a1, &v1) == 1)\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (!v1)\n
            v1 = v5->field_0;\n
        sub_403170(\"New Column Size (0 to stay the same): \");\n
        if (sub_404d20(a0, a1, &v0) == 1)\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (!v0)\n
            v0 = v5->field_4;\n
        if (!v5->field_20(v5, v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        sub_403170(\"Row and Column Sizes must be between 1-16\\n
\");\n
    }\n
}\n
", "4214669:sub_404f8d": null, "4214672:sub_404f90": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[16];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_404f90(struct_1 *v12, void* a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20], Other Possible Types: char [2]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    if (sub_404e80(v12, a0, a1) == 1)\n
    {\n
        v9 = 1;\n
        return v9;\n
    }\n
    v8 = v12->field_4 * v12->field_0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v6 = sub_404c40(a0, a1);\n
    if (v6 != 1 && v6 != -1)\n
    {\n
        v4 = 1;\n
        v3 = 0;\n
        while (true)\n
        {\n
            v1 = v3;\n
            if (v1 >= sub_4040f0(a0))\n
                break;\n
            if (*(a0 + v3) == 32)\n
                v4 += 1;\n
            v3 += 1;\n
        }\n
        if (v4 != v8)\n
        {\n
            sub_403170(\"Bad Input\\n
\");\n
            v9 = -1;\n
            return v9;\n
        }\n
        for (v3 = 0; v3 < v12->field_0; v3 += 1)\n
        {\n
            for (v2 = 0; v2 < v12->field_4; v2 += 1)\n
            {\n
                *(&v5) = sub_404340(&a0, \" \");\n
                if (!v5)\n
                {\n
                    v9 = 1;\n
                    return v9;\n
                }\n
                v7 = sub_404490(v5, NULL, 10);\n
                v0 = v7;\n
                v12->field_18(v12, v3, v2);\n
            }\n
        }\n
        v9 = 0;\n
        return v9;\n
    }\n
    sub_403170(\"Bad Input\\n
\");\n
    v9 = v6;\n
    return v9;\n
}\n
", "4215172:sub_405184": null, "4215184:sub_405190": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[16];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_405190(struct_1 *v7, char *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct struct_0 **v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (sub_404e80(v7, a0, a1) == 1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < v7->field_0; v3 += 1)\n
    {\n
        for (v2 = 0; v2 < v7->field_4; v2 += 1)\n
        {\n
            v1 = &v7->field_18->field_0;\n
            v0 = sub_404c00(a2);\n
            v1(v7, v3, v2);\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4215398:sub_405266": null, "4215408:sub_405270": "typedef struct struct_1 {\n
    char padding_0[36];\n
    struct struct_0 *field_24;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_405270(unsigned int v2, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_403170(\"%s\\n
\");\n
    return a0->field_24(a0, v2);\n
}\n
", "4215460:sub_4052a4": null, "4215472:sub_4052b0": "int sub_4052b0(void* v2, void* a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405270(\"-Matrix 1-\", v2);\n
    sub_403170(\"\\n
\");\n
    sub_405270(\"-Matrix 2-\", a0);\n
    sub_403170(\"\\n
\");\n
    return sub_405270(\"-Resultant Matrix-\", a1);\n
}\n
", "4215583:sub_40531f": null, "4215584:sub_405320": "int sub_405320(unsigned int v2, unsigned int a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (!sub_4065b0(v2, a0, a1))\n
    {\n
        v3 = sub_405270(\"Result:\", a1);\n
        return v3;\n
    }\n
    v3 = sub_403170(\"Could not add matrices together. Check sizes\\n
\");\n
    return v3;\n
}\n
", "4215678:sub_40537e": null, "4215680:sub_405380": "int sub_405380(unsigned int v2, unsigned int a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (!sub_406710(v2, a0, a1))\n
    {\n
        v3 = sub_405270(\"Result:\", a1);\n
        return v3;\n
    }\n
    v3 = sub_403170(\"Could not subtract matrices. Check sizes\\n
\");\n
    return v3;\n
}\n
", "4215774:sub_4053de": null, "4215776:sub_4053e0": "int sub_4053e0(unsigned int v2, unsigned int a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (!sub_406870(v2, a0, a1))\n
    {\n
        v3 = sub_405270(\"Result:\", a1);\n
        return v3;\n
    }\n
    v3 = sub_403170(\"Could not multiply matrices together. Check sizes\\n
\");\n
    return v3;\n
}\n
", "4215870:sub_40543e": null, "4215872:sub_405440": "int sub_405440(unsigned int v7[2], unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (a0 == 1)\n
    {\n
        v0 = \"Row\";\n
        v1 = v7[0];\n
    }\n
    else if (a0 == 2)\n
    {\n
        v0 = \"Column\";\n
        v1 = v7[1];\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    sub_403170(\"Enter %s Index 1: \");\n
    if (sub_404d20(a1, a2, &v3) == 1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    else if (v3 < v1)\n
    {\n
        sub_403170(\"Enter %s Index 2: \");\n
        if (sub_404d20(a1, a2, &v2) == 1)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        else if (v2 < v1)\n
        {\n
            sub_405270(\"Original Matrix\", v7);\n
            if (a0 == 1)\n
            {\n
                v4 = sub_4069f0(v7, v3);\n
                return v4;\n
            }\n
            else if (a0 == 2)\n
            {\n
                v4 = sub_406b20(v7, v3);\n
                return v4;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            sub_403170(\"Bad Input\\n
\");\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        sub_403170(\"Bad Input\\n
\");\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4216325:sub_405605": null, "4216336:sub_405610": "int sub_405610(void* v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    sub_405270(\"Original Matrix\", v0);\n
    sub_406c40(v3, v0);\n
    return sub_405270(\"Transposed Matrix\", v3);\n
}\n
", "4216403:sub_405653": null, "4216416:sub_405660": "int sub_405660(unsigned int v2, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (!sub_406e30(v2, a0))\n
    {\n
        v3 = sub_405270(\"RREF Result:\", a0);\n
        return v3;\n
    }\n
    v3 = sub_403170(\"Could not complete reduced row echelon form\\n
\");\n
    return v3;\n
}\n
", "4216500:sub_4056b4": null, "4216512:sub_4056c0": "int sub_4056c0(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x428]\n
    void* v1;  // [bp-0x424]\n
    void* v2;  // [bp-0x420]\n
    void* v3;  // [bp-0x41c]\n
    void* v4;  // [bp-0x418]\n
    void* v5;  // [bp-0x414], Other Possible Types: unsigned int [2], unsigned int\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = sub_404b80();\n
    v4 = sub_405c90(1);\n
    v3 = sub_405c90(1);\n
    v2 = sub_405c90(2);\n
    v1 = sub_402070(0x800);\n
    sub_403170(\"Matrix math is fun!\\n
\");\n
    sub_403170(\"-------------------\\n
\");\n
    while (true)\n
    {\n
        v7 = sub_404d90(v1, 0x800);\n
        v0 = v7 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            sub_403170(\"Inputting Matrix Values:\\n
\");\n
            v5 = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            if (sub_404f90(v5, v1, 0x800) == 1)\n
                break;\n
        case 1:\n
            sub_403170(\"Print Matrices:\\n
\");\n
            sub_4052b0(v4, v3, v2);\n
            goto LABEL_405bcf;\n
        case 2:\n
            sub_403170(\"Adding Matrices:\\n
\");\n
            sub_405320(v4, v3, v2);\n
            goto LABEL_405bcf;\n
        case 3:\n
            sub_403170(\"Subtracting Matrices:\\n
\");\n
            sub_405380(v4, v3, v2);\n
            goto LABEL_405bcf;\n
        case 4:\n
            sub_403170(\"Multiplying Matrices:\\n
\");\n
            sub_4053e0(v4, v3, v2);\n
            goto LABEL_405bcf;\n
        case 5:\n
            sub_403170(\"Swap Rows in a  Matrix:\\n
\");\n
            v5[0] = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            v8 = sub_405440(v5, 1, v1, 0x800);\n
            if (v8 == 1)\n
                break;\n
            if (!v8)\n
                sub_405270(\"Swapped Rows\", v5);\n
            goto LABEL_405bcf;\n
        case 6:\n
            sub_403170(\"Swap Columns in a  Matrix:\\n
\");\n
            v5[0] = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            v8 = sub_405440(v5, 2, v1, 0x800);\n
            if (v8 == 1)\n
                break;\n
            if (!v8)\n
                sub_405270(\"Swapped Columns\", v5);\n
            goto LABEL_405bcf;\n
        case 7:\n
            sub_403170(\"Transpose a Matrix:\\n
\");\n
            v5 = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            sub_405610(v5);\n
            goto LABEL_405bcf;\n
        case 8:\n
            sub_403170(\"Perform Reduced Row Echelon Form on Matrix\\n
\");\n
            v5 = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            sub_405660(v5, v2);\n
            goto LABEL_405bcf;\n
        case 9:\n
            sub_403170(\"Create a Random Matrix:\\n
\");\n
            v5 = sub_404df0(v4, v3, v1, 0x800);\n
            if (!v5)\n
                break;\n
            if (sub_405190(v5, v1, 0x800, v6) == 1)\n
                break;\n
        case 10:\n
            break;\n
        default:\n
            sub_403170(\"Bad Selection\\n
\");\n
        }\n
LABEL_405bcf:\n
    }\n
    sub_403170(\"Exiting...\\n
\");\n
    return 0;\n
}\n
", "4217836:sub_405bec": null, "4217840:sub_405bf0": "typedef struct struct_0 {\n
    char padding_0[4247548];\n
    char field_40cffc;\n
} struct_0;\n
\n
extern unsigned int g_40cffc;\n
extern struct_0 *g_40d03c;\n
extern unsigned int g_40d040;\n
\n
int sub_405bf0()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_0 *v6;  // eax\n
\n
    v3 = &v4;\n
    if (g_40d03c != g_40d040)\n
    {\n
LABEL_405c5f:\n
        v6 = g_40d03c;\n
        g_40d03c = &g_40d03c->padding_0[1];\n
        v2 = *((v6 + &g_40cffc));\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (!cgc_receive(0, &g_40cffc, 64) && *(&v1))\n
    {\n
        g_40d040 = *(&v1);\n
        g_40d03c = 0;\n
        goto LABEL_405c5f;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4218000:sub_405c90": "int sub_405c90(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[10];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[10];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2[0] = 0;\n
    if (!a0)\n
    {\n
        v0 = v6;\n
        if (v0 == 1)\n
        {\n
            v1 = 0x200;\n
        }\n
        else if (v0 == 2)\n
        {\n
            v1 = 0x400;\n
        }\n
        else if (v0 == 4)\n
        {\n
            v1 = 0x400;\n
        }\n
        v2 = sub_401000(1, v1 + 40);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        *((v2 + 12)) = v2 + 40;\n
    }\n
    else\n
    {\n
        v2[0] = sub_401000(1, 40);\n
        if (!v2)\n
        {\n
            v3[0] = 0;\n
            return v3;\n
        }\n
        *((v2 + 12)) = a0;\n
    }\n
    *(v2) = 1;\n
    *((v2 + 4)) = 1;\n
    *((v2 + 8)) = v6;\n
    *((v2 + 16)) = sub_405df0;\n
    *((v2 + 20)) = sub_405ee0;\n
    *((v2 + 24)) = sub_405ff0;\n
    *((v2 + 28)) = sub_4060f0;\n
    *((v2 + 32)) = sub_406200;\n
    *((v2 + 36)) = sub_406270;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4218346:sub_405dea": null, "4218352:sub_405df0": "int sub_405df0(unsigned int v4[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (a0 <= v4[0] && a1 <= v4[1])\n
    {\n
        v0 = v4[2];\n
        if (v0 == 1)\n
        {\n
            v1 = *((v4[3] + (v4[1] * a0 + a1) * 2));\n
            return v1;\n
        }\n
        else if (v0 != 2)\n
        {\n
            if (v0 != 4)\n
                return v1;\n
            v1 = *((v4[3] + (v4[1] * a0 + a1) * 4));\n
        }\n
        else\n
        {\n
            v1 = *((v4[3] + (v4[1] * a0 + a1) * 4));\n
            return v1;\n
        }\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4218583:sub_405ed7": null, "4218592:sub_405ee0": "int sub_405ee0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_3;  // tmp #3\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v6 = v5;\n
    if (!v5)\n
    {\n
        v2 = 0x3f800000;\n
    }\n
    else\n
    {\n
        v6 = a0;\n
        if (v6 > *(v5))\n
        {\n
LABEL_405f28:\n
            v2 = 0xbf800000;\n
        }\n
        else\n
        {\n
            v6 = a1;\n
            if (!(v6 <= *((v5 + 4))))\n
                goto LABEL_405f28;\n
            v0 = *((v5 + 8));\n
            if (v0 == 1)\n
            {\n
                v7 = v5;\n
                v6 = *((*((v7 + 12)) + (*((v7 + 4)) * a0 + a1) * 2));\n
                v2 = v6;\n
            }\n
            else if (v0 == 2)\n
            {\n
                v6 = *((v5 + 12));\n
                v2 = *((v6 + (*((v5 + 4)) * a0 + a1) * 4));\n
            }\n
            else\n
            {\n
                v8 = v0;\n
                tmp_3 = v8;\n
                v6 = v8 - 4;\n
                if (tmp_3 == 4)\n
                {\n
                    v6 = *((v5 + 12));\n
                    v2 = *((v6 + (*((v5 + 4)) * a0 + a1) * 4));\n
                }\n
            }\n
        }\n
    }\n
    v1 = v2;\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v6;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v6;\n
}\n
", "4218858:sub_405fea": null, "4218864:sub_405ff0": "int sub_405ff0(unsigned int v4[4], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (a0 <= v4[0] && a1 <= v4[1])\n
    {\n
        v0 = v4[2];\n
        if (v0 == 1)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 2)) = a2;\n
        }\n
        else if (v0 == 2)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 4)) = a2;\n
        }\n
        else if (v0 == 4)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 4)) = a2;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4219112:sub_4060e8": null, "4219120:sub_4060f0": "int sub_4060f0(unsigned int v4[4], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (a0 <= v4[0] && a1 <= v4[1])\n
    {\n
        v0 = v4[2];\n
        if (v0 == 1)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 2)) = a2;\n
        }\n
        else if (v0 == 2)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 4)) = a2;\n
        }\n
        else if (v0 == 4)\n
        {\n
            *((v4[3] + (v4[1] * a0 + a1) * 4)) = a2;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4219378:sub_4061f2": null, "4219392:sub_406200": "int sub_406200(unsigned int v3[2], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (a0 <= 16 && a1 <= 16)\n
    {\n
        v3[0] = a0;\n
        v3[1] = a1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4219491:sub_406263": null, "4219504:sub_406270": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char g_40d044;\n
\n
int sub_406270(struct_1 *v13)\n
{\n
    char *v0;  // [bp-0x34]\n
    int tmp_52;  // tmp #52\n
    int tmp_54;  // tmp #54\n
    int tmp_53;  // tmp #53\n
    int tmp_75;  // tmp #75\n
    int tmp_77;  // tmp #77\n
    int tmp_76;  // tmp #76\n
    int tmp_23;  // tmp #23\n
    int tmp_25;  // tmp #25\n
    int tmp_24;  // tmp #24\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    char *v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v16;  // ftop\n
    unsigned long long v18;  // 168\n
    void* v19;  // 164\n
    unsigned int v20;  // xmm0\n
    unsigned long long v23;  // 184\n
    void* v24;  // 180\n
    unsigned int v25;  // xmm1\n
    int v26;  // xmm0\n
    unsigned long long v28;  // 184\n
    void* v29;  // 180\n
    unsigned int v30;  // xmm1\n
    int v31;  // xmm0\n
    unsigned long long v33;  // 184\n
    void* v34;  // 180\n
    unsigned int v35;  // xmm1\n
    int v36;  // xmm0\n
\n
    v11 = &v12;\n
    if (!v13)\n
        return v13;\n
    g_40d044 = 0;\n
    for (v10 = 0; v10 < v13->field_0; v10 += 1)\n
    {\n
        v0 = &g_40d044;\n
        sub_4032a0(&g_40d044, \"%s|\");\n
        for (v9 = 0; v9 < v13->field_4; v9 += 1)\n
        {\n
            if (sub_4040f0(&g_40d044) > 7192)\n
            {\n
                sub_4040f0(&g_40d044);\n
                sub_4074c0(&g_40d044);\n
                g_40d044 = 0;\n
            }\n
            if (v13->field_8 != 4)\n
            {\n
                v0 = v9;\n
                v0 = &g_40d044;\n
                v1 = v13->field_10(v13, v10);\n
                sub_4032a0(&g_40d044, \"%s %d |\");\n
            }\n
            else\n
            {\n
                v0 = v9;\n
                v13->field_14(v13, v10);\n
                if ([D] GetI(136:I8x8)[t7,0])\n
                {\n
                    v4 = [D] GetI(72:F64x8)[t7,0];\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v16 += 1;\n
                }\n
                else\n
                {\n
                    v4 = nan;\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v16 += 1;\n
                }\n
                v8 = v4;\n
                if ((CmpF(v8, 0) & 1) != 1)\n
                {\n
                    v3 = v8;\n
                }\n
                else\n
                {\n
                    v18 = 0;\n
                    v19 = 0;\n
                    v20 = 0xbf800000;\n
                    s_28 =L (xmm0<16> * Conv(32->128, Load(addr=stack_base-20, size=4, endness=Iend_LE)))<4>\n
                }\n
                v7 = v3;\n
                v6 = v7;\n
                tmp_52 = SubV(tmp_54, tmp_53);\n
                v23 = 0;\n
                v24 = 0;\n
                v25 = 0x42c80000;\n
                v26 = tmp_52 * xmm1<16>;\n
                v5 = v26;\n
                tmp_75 = SubV(tmp_77, tmp_76);\n
                v28 = 0;\n
                v29 = 0;\n
                v30 = 0x461c4000;\n
                v31 = tmp_75 * xmm1<16>;\n
                if (v31 == 9999)\n
                {\n
                    v6 += 1;\n
                    v5 = 0;\n
                }\n
                else\n
                {\n
                    tmp_23 = SubV(tmp_25, tmp_24);\n
                    v33 = 0;\n
                    v34 = 0;\n
                    v35 = 0x461c4000;\n
                    v36 = tmp_23 * xmm1<16>;\n
                    if (v36 == 1)\n
                        v5 = 0;\n
                }\n
                if (((CmpF(4576918229304087675, v7) & 69 | ((CmpF(4576918229304087675, v7) & 69) >> 6)) & 1) != 1)\n
                {\n
                    v0 = &g_40d044;\n
                    sub_4032a0(&g_40d044, \"%s 0.0 |\");\n
                }\n
                else if ((CmpF(v8, 13785580428911960874) & 1) == 1)\n
                {\n
                    v0 = &g_40d044;\n
                    v1 = v6;\n
                    v2 = v5;\n
                    sub_4032a0(&g_40d044, \"%s -%d.%d |\");\n
                }\n
                else\n
                {\n
                    v0 = &g_40d044;\n
                    v1 = v6;\n
                    v2 = v5;\n
                    sub_4032a0(&g_40d044, \"%s %d.%d |\");\n
                }\n
            }\n
        }\n
        v0 = &g_40d044;\n
        sub_4032a0(&g_40d044, \"%s\\n
\");\n
    }\n
    if (g_40d044)\n
    {\n
        sub_4040f0(&g_40d044);\n
        g_40d044 = 0;\n
        return sub_4074c0(&g_40d044);\n
    }\n
    return g_40d044;\n
}\n
", "4220324:sub_4065a4": null, "4220336:sub_4065b0": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    char padding_1c[4];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_4065b0(struct_2 *v8, struct_2 *a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x1a]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (v8 && a0 && a1)\n
    {\n
        if (v8->field_0 == a0->field_0 && v8->field_4 == a0->field_4)\n
        {\n
            a1->field_8 = 1;\n
            a1->field_20(a1, v8->field_0);\n
            for (v4 = 0; v4 < a1->field_0; v4 += 1)\n
            {\n
                for (v3 = 0; v3 < a1->field_4; v3 += 1)\n
                {\n
                    v2 = v8->field_10(v8, v4);\n
                    v1 = a0->field_10(a0, v4);\n
                    v0 = v2 + v1;\n
                    a1->field_18(a1, v4, v3);\n
                }\n
            }\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = -1;\n
        return v5;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4220683:sub_40670b": null, "4220688:sub_406710": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    char padding_1c[4];\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406710(struct_1 *v8, struct_1 *a0, struct_2 *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x1a]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (v8 && a0 && a1)\n
    {\n
        if (v8->field_0 == a0->field_0 && v8->field_4 == a0->field_4)\n
        {\n
            a1->field_8 = 1;\n
            a1->field_20(a1, v8->field_0);\n
            for (v4 = 0; v4 < a1->field_0; v4 += 1)\n
            {\n
                for (v3 = 0; v3 < a1->field_4; v3 += 1)\n
                {\n
                    v2 = v8->field_10(v8, v4);\n
                    v1 = a0->field_10(a0, v4);\n
                    v0 = v2 - v1;\n
                    a1->field_18(a1, v4, v3);\n
                }\n
            }\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = -1;\n
        return v5;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4221035:sub_40686b": null, "4221040:sub_406870": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    char padding_1c[4];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406870(struct_2 *v9, struct_2 *a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    if (v9 && a0 && a1)\n
    {\n
        if (v9->field_4 == a0->field_0)\n
        {\n
            a1->field_8 = 2;\n
            a1->field_20(a1, v9->field_0);\n
            for (v5 = 0; v5 < v9->field_0; v5 += 1)\n
            {\n
                for (v3 = 0; v3 < a0->field_4; v3 += 1)\n
                {\n
                    v2 = 0;\n
                    for (v4 = 0; v4 < v9->field_4; v4 += 1)\n
                    {\n
                        v1 = v9->field_10(v9, v5);\n
                        v2 = a0->field_10(a0, v4) * v1 + v2;\n
                    }\n
                    v0 = v2;\n
                    a1->field_18(a1, v5, v3);\n
                }\n
            }\n
            v6 = 0;\n
            return v6;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = 1;\n
    return v6;\n
}\n
", "4221415:sub_4069e7": null, "4221424:sub_4069f0": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[12];\n
    struct struct_0 *field_14;\n
    char padding_18[4];\n
    struct struct_0 *field_1c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_4069f0(struct_1 *v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v11;  // ftop\n
    unsigned int v13;  // ftop\n
\n
    v7 = &v8;\n
    if (!v9)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    if (a0 <= v9->field_0 && a1 <= v9->field_0)\n
    {\n
        for (v3 = 0; v3 < v9->field_4; v3 += 1)\n
        {\n
            v9->field_14(v9, a0);\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v1 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v11 = v13 + 1;\n
            }\n
            else\n
            {\n
                v1 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v11 = v13 + 1;\n
            }\n
            v5 = v1;\n
            v9->field_14();\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v2 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v13 = v11 + 1;\n
            }\n
            else\n
            {\n
                v2 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v13 = v11 + 1;\n
            }\n
            v4 = v2;\n
            v0 = v4;\n
            v9->field_1c();\n
            v0 = v5;\n
            v9->field_1c(v9, a1, v3);\n
        }\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = -1;\n
    return v6;\n
}\n
", "4221714:sub_406b12": null, "4221728:sub_406b20": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    char padding_14[4];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406b20(struct_1 *v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (a0 <= v7->field_4 && a1 <= v7->field_4)\n
    {\n
        for (v1 = 0; v1 < v7->field_0; v1 += 1)\n
        {\n
            v3 = v7->field_10(v7, v1);\n
            v2 = v7->field_10(v7, v1);\n
            v0 = v2;\n
            v7->field_18(v7, v1, a0);\n
            v0 = v3;\n
            v7->field_18(v7, v1, a1);\n
        }\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4222009:sub_406c39": null, "4222016:sub_406c40": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    char padding_14[12];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406c40(struct_1 *v12)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct struct_0 *v5[9];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
\n
    v10 = &v11;\n
    if (!v12)\n
    {\n
        v9 = 1;\n
        return v9;\n
    }\n
    v8 = v12->field_0;\n
    v7 = v12->field_4;\n
    v5[0] = 0;\n
    v1 = v12->field_8;\n
    if (v1 == 1)\n
    {\n
        v5 = sub_405c90(1, 0);\n
        v6 = 2;\n
    }\n
    else if (v1 == 2)\n
    {\n
        v5 = sub_405c90(2, 0);\n
        v6 = 4;\n
    }\n
    else if (v1 == 4)\n
    {\n
        v5[8](v5, v7);\n
        v6 = 4;\n
    }\n
    *((v5 + 32))(v5, v7);\n
    for (v4 = 0; v4 < v12->field_0; v4 += 1)\n
    {\n
        for (v3 = 0; v3 < v12->field_4; v3 += 1)\n
        {\n
            v2 = v12->field_10(v12, v4);\n
            v0 = v2;\n
            *((v5 + 24))(v5, v3, v4);\n
        }\n
    }\n
    v12->field_20(v12, v7);\n
    sub_403010(&v12[1].field_4, v5 + 40, v6 * v8 * v7);\n
    sub_401ac0(v5);\n
    v9 = 0;\n
    return v9;\n
}\n
", "4222504:sub_406e28": null, "4222512:sub_406e30": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_0 *field_14;\n
    char padding_18[4];\n
    struct struct_0 *field_1c;\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_406e30(struct_1 *v15, struct_2 *a0)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    unsigned int v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x35]\n
    struct struct_0 **v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x4]\n
    char v14;  // [bp+0x0]\n
    unsigned int v17;  // ftop\n
    int v19;  // xmm0, Other Possible Types: void*\n
\n
    v13 = &v14;\n
    if (v15 && a0)\n
    {\n
        a0->field_8 = 4;\n
        a0->field_20(a0, v15->field_0);\n
        for (v11 = 0; v11 < v15->field_0; v11 += 1)\n
        {\n
            for (v10 = 0; v10 < v15->field_4; v10 += 1)\n
            {\n
                v2 = &a0->field_1c->field_0;\n
                v15->field_10(v15, v11);\n
                v2(a0, v11, v10);\n
            }\n
        }\n
        v9 = 0x3f800000;\n
        v8 = 0;\n
        v11 = 0;\n
        v10 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v11 < a0->field_0)\n
                v1 = v10 < a0->field_4;\n
            if (!(v1 & 1))\n
                break;\n
            if ((CmpF(4562208392057185066, v9) & 1) != 1 && (CmpF(v9, 13785580428911960874) & 1) != 1)\n
                v11 -= 1;\n
            sub_407230(a0, v11);\n
            a0->field_14(a0, v11);\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v5 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v17 += 1;\n
            }\n
            else\n
            {\n
                v5 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v17 += 1;\n
            }\n
            v9 = v5;\n
            for (v8 = v10; v8 < a0->field_4; v8 += 1)\n
            {\n
                if ((CmpF(4562208392057185066, v9) & 1) != 1 && (CmpF(v9, 13785580428911960874) & 1) != 1)\n
                    break;\n
                tmp_10 = SubV(tmp_12, tmp_11);\n
                v19 = tmp_10;\n
                if ((CmpF(4562208392057185066, v19) & 1) != 1)\n
                {\n
                    tmp_10 = SubV(tmp_12, tmp_11);\n
                    v19 = tmp_10;\n
                    if ((CmpF(*(&v19), 13785580428911960874) & 1) != 1)\n
                        break;\n
                }\n
                a0->field_14(a0, v11);\n
                if ([D] GetI(136:I8x8)[t7,0])\n
                {\n
                    v4 = [D] GetI(72:F64x8)[t7,0];\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v17 += 1;\n
                }\n
                else\n
                {\n
                    v4 = nan;\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v17 += 1;\n
                }\n
                v7 = v4;\n
                a0->field_1c();\n
            }\n
            v8 = 0;\n
            while (v8 < a0->field_0)\n
            {\n
                if ((CmpF(4562208392057185066, v9) & 1) != 1 && (CmpF(v9, 13785580428911960874) & 1) != 1)\n
                    break;\n
                if (v8 == v11)\n
                {\n
LABEL_4071e9:\n
                    v8 += 1;\n
                }\n
                else\n
                {\n
                    a0->field_14(a0, v8);\n
                    if ([D] GetI(136:I8x8)[t7,0])\n
                    {\n
                        v3 = [D] GetI(72:F64x8)[t7,0];\n
                        [D] PutI(136:I8x8)[t7,0] = 0x00\n
                        v17 += 1;\n
                    }\n
                    else\n
                    {\n
                        v3 = nan;\n
                        [D] PutI(136:I8x8)[t7,0] = 0x00\n
                        v17 += 1;\n
                    }\n
                    v6 = v3;\n
                    *(&v19) = 0;\n
                    *(&v19) = v6;\n
                    if (((CmpF(v19, 4562208392057185066) & 69 | ((CmpF(v19, 4562208392057185066) & 69) >> 6)) & 1) == 1 && ((CmpF(13785580428911960874, v6) & 69 | (CmpF(13785580428911960874, v6) & 69) >> 6) & 1) == 1)\n
                        goto LABEL_4071e4;\n
                    v0 = v6;\n
                    sub_4073b0(a0, v11, v8, v10);\n
LABEL_4071e4:\n
                    goto LABEL_4071e9;\n
                }\n
            }\n
            v11 += 1;\n
            v10 += 1;\n
        }\n
        v12 = 0;\n
        return v12;\n
    }\n
    v12 = 1;\n
    return v12;\n
}\n
", "4223523:sub_407223": null, "4223536:sub_407230": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_407230(struct_1 *v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // ftop\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    void* v12;  // 164\n
    unsigned int v13;  // xmm0\n
    unsigned long long v14;  // xmm1\n
    unsigned int v15;  // ftop\n
    void* v16;  // 164\n
    unsigned int v17;  // xmm0\n
    unsigned int v18;  // ftop\n
    unsigned long long v19;  // xmm1\n
\n
    v6 = &v7;\n
    if (!v8)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    v8->field_14(v8, a0);\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        v3 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v10 = v9 + 1;\n
    }\n
    else\n
    {\n
        v3 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v10 = v11 + 1;\n
    }\n
    v12 = 0;\n
    v13 = v3;\n
    if (((CmpF(xmm0<8>, 4562208392057185066) & 69 | ((CmpF(xmm0<8>, 4562208392057185066) & 69) >> 6)) & 1) == 1)\n
    {\n
        v8->field_14(v8, a0);\n
        if ([D] GetI(136:I8x8)[t7,0])\n
        {\n
            v2 = [D] GetI(72:F64x8)[t7,0];\n
            [D] PutI(136:I8x8)[t7,0] = 0x00\n
            v18 = v10 + 1;\n
        }\n
        else\n
        {\n
            v2 = nan;\n
            [D] PutI(136:I8x8)[t7,0] = 0x00\n
            v18 = v10 + 1;\n
        }\n
        v14 = v2;\n
        if (((CmpF(13785580428911960874, v14) & 69 | ((CmpF(13785580428911960874, v14) & 69) >> 6)) & 1) == 1)\n
        {\n
            v4 = a0;\n
            a0 += 1;\n
            while (true)\n
            {\n
                if (a0 >= v8->field_0)\n
                {\n
                    v5 = -1;\n
                    return v5;\n
                }\n
                v8->field_14(v8, a0);\n
                if ([D] GetI(136:I8x8)[t7,0])\n
                {\n
                    v1 = [D] GetI(72:F64x8)[t7,0];\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v15 = v18 + 1;\n
                }\n
                else\n
                {\n
                    v1 = nan;\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v15 = v18 + 1;\n
                }\n
                v16 = 0;\n
                v17 = v1;\n
                if (((CmpF(xmm0<8>, 4562208392057185066) & 69 | ((CmpF(xmm0<8>, 4562208392057185066) & 69) >> 6)) & 1) != 1)\n
                    break;\n
                v8->field_14(v8, a0);\n
                if (![D] GetI(136:I8x8)[t7,0])\n
                {\n
                    v0 = nan;\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v18 = v15 + 1;\n
                }\n
                else\n
                {\n
                    v0 = [D] GetI(72:F64x8)[t7,0];\n
                    [D] PutI(136:I8x8)[t7,0] = 0x00\n
                    v18 = v15 + 1;\n
                }\n
                v19 = v0;\n
                if (((CmpF(13785580428911960874, v14) & 69 | ((CmpF(13785580428911960874, v14) & 69) >> 6)) & 1) != 1)\n
                    break;\n
                a0 += 1;\n
            }\n
            v5 = sub_4069f0(v8, v4, a0);\n
            return v5;\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4223915:sub_4073ab": null, "4223920:sub_4073b0": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[12];\n
    struct struct_0 *field_14;\n
    char padding_18[4];\n
    struct struct_0 *field_1c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int sub_4073b0(struct_1 *v10, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    int tmp_35;  // tmp #35\n
    int tmp_36;  // tmp #36\n
    int tmp_33;  // tmp #33\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v12;  // ftop\n
    unsigned long long v14;  // 168\n
    void* v15;  // 164\n
    unsigned int v16;  // xmm0\n
    unsigned int v18;  // ftop\n
\n
    v8 = &v9;\n
    if (!v10)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    if (a0 <= v10->field_0 && a1 <= v10->field_0)\n
    {\n
        for (v4 = a2; v4 < v10->field_4; v4 += 1)\n
        {\n
            v0 = v4;\n
            v10->field_14(v10, a0);\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v2 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v12 = v18 + 1;\n
            }\n
            else\n
            {\n
                v2 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v12 = v18 + 1;\n
            }\n
            v14 = 0;\n
            v15 = 0;\n
            v16 = v2;\n
            s_10 =L (xmm0<16> * Conv(32->128, Load(addr=stack_base+20, size=4, endness=Iend_LE)))<4>\n
            v0 = v4;\n
            v10->field_14();\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v3 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v18 = v12 + 1;\n
            }\n
            else\n
            {\n
                v3 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v18 = v12 + 1;\n
            }\n
            v5 = v3;\n
            tmp_35 = SubV(tmp_36, tmp_33);\n
            v0 = v4;\n
            *(&v1) = tmp_35;\n
            v10->field_1c();\n
        }\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = -1;\n
    return v7;\n
}\n
", "4224188:sub_4074bc": null, "4224192:sub_4074c0": "int sub_4074c0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v6 = v1;\n
        if (v6 >= a0)\n
            return v1;\n
        v0 = &v2;\n
        v6 = cgc_transmit(1, v5 + v1, a0 - v1);\n
        if (v6)\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v1 = *(&v2) + v1;\n
    }\n
    return v6;\n
}\n
", "4224320:sub_407540": "int sub_407540()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_407660();\n
    sub_407670();\n
    sub_407690();\n
    v0 = 1;\n
    if (!sub_407c60())\n
    {\n
        v0 = 7;\n
        sub_408340();\n
    }\n
    sub_408510();\n
    v1 = sub_408540;\n
    sub_407930();\n
    if (sub_407630())\n
    {\n
        v1 = 7;\n
        sub_408340();\n
    }\n
    sub_4080d0();\n
    if (sub_4081d0())\n
    {\n
        v1 = sub_408070;\n
        __setusermatherr();\n
    }\n
    sub_408150();\n
    sub_408160();\n
    sub_408120();\n
    v1 = sub_4080c0();\n
    _configthreadlocale();\n
    if (sub_408110())\n
        sub_407650();\n
    sub_408300();\n
    if (sub_408310())\n
    {\n
        v1 = 7;\n
        sub_408340();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4224512:sub_407600": "int sub_407600()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_408170();\n
    return 0;\n
}\n
", "4224528:sub_407610": "int sub_407610()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_408320();\n
    v0 = sub_4080b0();\n
    return _set_new_mode();\n
}\n
", "4224560:sub_407630": "int sub_407630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_408080());\n
}\n
", "4224592:sub_407650": "int sub_407650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4224608:sub_407660": "int sub_407660()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4224624:sub_407670": "int sub_407670()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_4080a0());\n
}\n
", "4224656:sub_407690": "int sub_407690()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_408090(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4224688:sub_4076b0": "int sub_4076b0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_4056c0(v1, v2);\n
}\n
", "4224752:sub_4076f0": "extern char g_40a8c8;\n
extern char g_40a8d0;\n
extern char g_40a8d4;\n
extern struct_0 *g_40a8e0;\n
extern char g_40af48;\n
extern unsigned int g_40bd80;\n
extern unsigned int g_40f044;\n
\n
int sub_4076f0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40af48;\n
    v13 = sub_408570;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40bd80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_407bd0(1, g_40bd80 ^ &v16, v22, v23))\n
        sub_408340();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_407b50();\n
    if (g_40f044 == 1)\n
    {\n
        v16 = 7;\n
        sub_408340();\n
    }\n
    else if (g_40f044)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40f044 = 1;\n
        v16 = &g_40a8e0;\n
        v15 = &g_40a8d4;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_4078f9;\n
        }\n
        else\n
        {\n
            v16 = &g_40a8d0;\n
            v15 = &g_40a8c8;\n
            _initterm(*(&v17));\n
            g_40f044 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_407ba0();\n
    v8 = sub_408200();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_407a20())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_4085b0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_408210();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_407a20())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_4076b0();\n
    if (!sub_408270())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_407c20(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_4078f9:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4225167:sub_40788f": "int sub_40788f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4225176:sub_407898": "int sub_407898()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4225203:sub_4078b3": "extern char g_4078c1;\n
\n
int sub_4078b3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_4078c1;\n
    if (!sub_408270())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4225266:sub_4078f2": "int sub_4078f2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4225296:sub_407910": "int sub_407910()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407f80();\n
    return sub_4076f0();\n
}\n
", "4225312:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407910();\n
}\n
", "4225328:sub_407930": "int sub_407930(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_407960(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4225376:sub_407960": "extern unsigned int g_40f050;\n
\n
int sub_407960(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40f050;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40f050))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4225432:sub_407998": "int sub_407998()\n
{\n
}\n
", "4225488:sub_4079d0": "extern unsigned int g_40f05c;\n
\n
int sub_4079d0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40f05c;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40f05c);\n
    return v6;\n
}\n
", "4225522:sub_4079f2": "int sub_4079f2()\n
{\n
}\n
", "4225552:sub_407a10": "int sub_407a10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4225568:sub_407a20": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40af68;\n
extern unsigned int g_40bd80;\n
\n
int sub_407a20(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40af68;\n
    v13 = sub_408570;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40bd80;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_407e80(v6, g_40bd80 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_407ef0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4225773:sub_407aed": "int sub_407aed()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4225782:sub_407af6": "int sub_407af6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4225821:sub_407b1d": "int sub_407b1d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4225840:sub_407b30": "int sub_407b30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4225872:sub_407b50": "extern unsigned int g_40f048;\n
\n
int sub_407b50()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_408d90();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_407a10() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40f048 = v6;\n
        if (!g_40f048)\n
        {\n
            tmp_0 = 0;\n
            g_40f048 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40f048 = v6;\n
            v5 = g_40f048;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4225952:sub_407ba0": "extern void* g_40f048;\n
\n
int sub_407ba0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408d90();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40f048;\n
        g_40f048 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x407bbf;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4226000:sub_407bd0": "extern char g_40f04c;\n
\n
int sub_407bd0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40f04c = 1;\n
    sub_408900();\n
    v4 = sub_409130();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_409130();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_409140();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4226080:sub_407c20": "extern char g_40f04c;\n
\n
int sub_407c20(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40f04c && a0)\n
        return 1;\n
    sub_409140(v2);\n
    v3 = sub_409140();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4226144:sub_407c60": "extern char g_40f04d;\n
extern unsigned int g_40f050;\n
extern unsigned int g_40f054;\n
extern unsigned int g_40f058;\n
extern unsigned int g_40f05c;\n
extern unsigned int g_40f060;\n
extern unsigned int g_40f064;\n
\n
int sub_407c60(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40f04d)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_408340();\n
    }\n
    if (sub_408d90() && !v10)\n
    {\n
        v8 = &g_40f050;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40f05c;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_407d26;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40f050 = v4;\n
    g_40f054 = v5;\n
    g_40f058 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40f05c = v1;\n
    g_40f060 = v2;\n
    v11 = v3;\n
    g_40f064 = v11;\n
LABEL_407d26:\n
    g_40f04d = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4226368:sub_407d40": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407d40(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_1 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_1 **v1;  // [bp-0xc]\n
    struct struct_1 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_408d90() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_4085b0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4226448:sub_407d90": "int sub_407d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407c60(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4226480:sub_407db0": "int sub_407db0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_408d90())\n
    {\n
        v3 = sub_408900();\n
    }\n
    else\n
    {\n
        v3 = sub_407630();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_407650();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4226528:sub_407de0": "extern char g_40f050;\n
\n
int sub_407de0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_408d90())\n
    {\n
        v0 = &g_40f050;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_409180();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4226576:sub_407e10": "int sub_407e10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409150(0);\n
    return sub_409150();\n
}\n
", "4226608:sub_407e30": "int sub_407e30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_409160();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_409160();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_409170();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4226656:sub_407e60": "char sub_407e60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409170();\n
    sub_409170();\n
    return 1;\n
}\n
", "4226688:sub_407e80": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_407e80(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4226800:sub_407ef0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_407ef0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4226944:sub_407f80": "extern unsigned int g_40bd80;\n
extern unsigned int g_40bdc0;\n
\n
int sub_407f80()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40bd80 != 3141592654)\n
    {\n
        v4 = g_40bd80 & -0x10000;\n
        if (v4)\n
        {\n
            g_40bdc0 = ~(g_40bd80);\n
            return g_40bd80 & -0x10000;\n
        }\n
    }\n
    v4 = sub_408000(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40bd80 = v0;\n
    g_40bdc0 = ~(v0);\n
    return v4;\n
}\n
", "4227072:sub_408000": "int sub_408000()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4227184:sub_408070": "int sub_408070()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227200:sub_408080": "int sub_408080()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227216:sub_408090": "int sub_408090()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227232:sub_4080a0": "int sub_4080a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4227248:sub_4080b0": "int sub_4080b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227264:sub_4080c0": "int sub_4080c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227280:sub_4080d0": "extern void g_40f068;\n
\n
int sub_4080d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40f068);\n
}\n
", "4227312:sub_4080f0": "extern unsigned int g_40f068;\n
\n
int sub_4080f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40f068);\n
}\n
", "4227344:sub_408110": "char sub_408110()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4227360:sub_408120": "int sub_408120()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_408340();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4227408:sub_408150": "int sub_408150()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4227424:sub_408160": "int sub_408160()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4227440:sub_408170": "int sub_408170()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_4081b0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_4081c0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4227504:sub_4081b0": "extern char g_40f070;\n
\n
int sub_4081b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40f070;\n
}\n
", "4227520:sub_4081c0": "extern char g_40f078;\n
\n
int sub_4081c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40f078;\n
}\n
", "4227536:sub_4081d0": "extern unsigned int g_40bd54;\n
\n
int sub_4081d0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40bd54)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4227584:sub_408200": "extern char g_40f084;\n
\n
int sub_408200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40f084;\n
}\n
", "4227600:sub_408210": "extern char g_40f088;\n
\n
int sub_408210()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40f088;\n
}\n
", "4227616:sub_408220": "extern void* g_40f08c;\n
\n
int sub_408220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40f08c = 0;\n
    return v3;\n
}\n
", "4227632:sub_408230": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_408230()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4227696:sub_408270": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_408270()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4227840:sub_408300": "int sub_408300()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4227856:sub_408310": "int sub_408310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408480();\n
}\n
", "4227872:sub_408320": "int sub_408320()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_408490);\n
}\n
", "4227904:sub_408340": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_408340()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_408220();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_408220();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4227929:sub_408359": "int sub_408359()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4227929\n
}\n
", "4228224:sub_408480": "int sub_408480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228240:sub_408490": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_408490(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4228368:sub_408510": "extern struct_0 *g_40af3c;\n
\n
int sub_408510()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40af3c;\n
    v3 = &g_40af3c;\n
    return &g_40af3c;\n
}\n
", "4228416:sub_408540": "extern struct_0 *g_40af44;\n
\n
int sub_408540()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40af44;\n
    v3 = &g_40af44;\n
    return &g_40af44;\n
}\n
", "4228464:sub_408570": "extern unsigned int g_40bd80;\n
\n
int sub_408570(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_409190(*(v2));\n
    return _except_handler4_common(&g_40bd80, sub_408dc0, v2, a0, a1);\n
}\n
", "4228528:sub_4085b0": "int sub_4085b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4228544:sub_4085c0": "int sub_4085c0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x4085c9;\n
    return tmp_4;\n
}\n
", "4228560:sub_4085d0": "int sub_4085d0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4228592:sub_4085f0": "int sub_4085f0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4085d0(v2);\n
}\n
", "4228624:sub_408610": "extern unsigned int g_40f090;\n
\n
int sub_408610(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_4085c0(&g_40f090, v3);\n
    return v0;\n
}\n
", "4228656:sub_408630": "extern char g_4085b0;\n
extern unsigned int g_410000;\n
\n
int sub_408630()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_4085f0(&g_410000) != sub_4085b0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4228704:sub_408660": "extern char g_40a800;\n
\n
int sub_408660(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40a800;\n
    v1 = &g_40a800;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4228768:sub_4086a0": "extern unsigned int g_410008;\n
\n
int sub_4086a0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_4085f0(&g_410008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4228816:sub_4086d0": "extern unsigned int g_40f090;\n
\n
int sub_4086d0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_4085f0(&g_40f090);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_4085b0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4228880:sub_408710": "int sub_408710()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4228896:sub_408720": "int sub_408720(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408660(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4228915\n
}\n
", "4228928:sub_408740": "int sub_408740(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408660(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4228953:sub_408759": "int sub_408759()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4228953\n
}\n
", "4228960:sub_408760": "int sub_408760(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408660(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4086a0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229008:sub_408790": "int sub_408790(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408660(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4086d0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229056:sub_4087c0": "extern char g_40a800;\n
\n
int sub_4087c0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40a800;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4229120:sub_408800": "int sub_408800(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4087c0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408660(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4229163\n
}\n
", "4229168:sub_408830": "int sub_408830(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4087c0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408660(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4229217:sub_408861": "int sub_408861()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4229217\n
}\n
", "4229232:sub_408870": "int sub_408870()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4229248:sub_408880": "int sub_408880(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4087c0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408660(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4086a0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229312:sub_4088c0": "int sub_4088c0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4087c0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408660(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4086d0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229376:sub_408900": "extern unsigned int g_40bd80;\n
extern unsigned int g_40bdc8;\n
extern unsigned int g_40bdcc;\n
extern unsigned int g_40bdd0;\n
extern unsigned int g_40f094;\n
extern unsigned int g_40f098;\n
extern unsigned int g_40f09c;\n
\n
int sub_408900()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40bd80 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40f098 = 0;\n
    g_40bdd0 = g_40bdd0 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_408dc0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_408a4b;\n
        g_40f09c = g_40f09c | 1;\n
    }\n
LABEL_408a4b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40f09c = g_40f09c | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40f098 = 1;\n
    g_40bdd0 = g_40bdd0 | 2;\n
    g_40bdc8 = g_40bdc8 & -2;\n
    g_40bdcc = g_40bdcc;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40f098 = 2;\n
        g_40bdd0 = g_40bdd0 | 4;\n
        g_40bdc8 = g_40bdc8 & -17;\n
        g_40bdcc = g_40bdcc;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40f098 = 3;\n
                g_40bdd0 = g_40bdd0 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40f098 = 5;\n
                    g_40bdd0 = g_40bdd0 | 32;\n
                    g_40bdc8 = g_40bdc8 & -3;\n
                    g_40bdcc = g_40bdcc;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40f098 = 6;\n
                            g_40bdd0 = g_40bdd0 | 64;\n
                            g_40bdc8 = g_40bdc8 & -37;\n
                            g_40bdcc = g_40bdcc;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40bdc8 = g_40bdc8 & -16777217;\n
                    g_40bdcc = g_40bdcc;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40f094 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40bdc8 = ~(v2 | 16777256) & g_40bdc8;\n
                        g_40bdcc = ~(v3) & g_40bdcc;\n
                        if (g_40f094 > 1)\n
                        {\n
                            g_40bdc8 = g_40bdc8 & -65;\n
                            g_40bdcc = g_40bdcc;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4230544:sub_408d90": "extern unsigned int g_40bdd4;\n
\n
int sub_408d90()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40bdd4)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4230592:sub_408dc0": "extern unsigned int g_40bd80;\n
extern unsigned int g_40bdc0;\n
extern unsigned int g_40f0a8;\n
extern unsigned int g_40f0ac;\n
extern unsigned int g_40f0b4;\n
extern unsigned int g_40f0b8;\n
extern unsigned int g_40f0bc;\n
extern unsigned int g_40f0f8;\n
extern unsigned short g_40f184;\n
extern unsigned short g_40f188;\n
extern unsigned short g_40f18c;\n
extern unsigned short g_40f190;\n
extern unsigned int g_40f194;\n
extern unsigned int g_40f198;\n
extern unsigned int g_40f19c;\n
extern unsigned int g_40f1a0;\n
extern unsigned int g_40f1a4;\n
extern unsigned int g_40f1a8;\n
extern unsigned int g_40f1ac;\n
extern unsigned int g_40f1b0;\n
extern unsigned short g_40f1b4;\n
extern unsigned int g_40f1b8;\n
extern unsigned int g_40f1bc;\n
extern unsigned short g_40f1c0;\n
\n
int sub_408dc0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40bd80)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40f1a8 = v7;\n
        g_40f1a4 = v6;\n
        g_40f1a0 = v8;\n
        g_40f19c = v9;\n
        g_40f198 = v10;\n
        g_40f194 = v11;\n
        g_40f1c0 = v12;\n
        g_40f1b4 = v13;\n
        g_40f190 = v14;\n
        g_40f18c = v15;\n
        g_40f188 = v16;\n
        g_40f184 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40f1b8 = v0;\n
        g_40f1ac = v3;\n
        g_40f1b0 = *(&v4);\n
        g_40f1bc = &v5;\n
        g_40f0f8 = 65537;\n
        g_40f0b4 = g_40f1b0;\n
        g_40f0a8 = 3221226505;\n
        g_40f0ac = 1;\n
        g_40f0b8 = 1;\n
        g_40f0bc = 2;\n
        v1 = g_40bd80;\n
        v2 = g_40bdc0;\n
        sub_409100();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4230608:sub_408dd0": "extern unsigned int g_40f0a8;\n
extern unsigned int g_40f0ac;\n
extern unsigned int g_40f0b4;\n
extern unsigned int g_40f0b8;\n
extern unsigned int g_40f0bc;\n
extern unsigned short g_40f184;\n
extern unsigned short g_40f188;\n
extern unsigned short g_40f18c;\n
extern unsigned short g_40f190;\n
extern unsigned int g_40f194;\n
extern unsigned int g_40f198;\n
extern unsigned int g_40f19c;\n
extern unsigned int g_40f1a0;\n
extern unsigned int g_40f1a4;\n
extern unsigned int g_40f1a8;\n
extern unsigned int g_40f1ac;\n
extern unsigned int g_40f1b0;\n
extern unsigned short g_40f1b4;\n
extern unsigned int g_40f1b8;\n
extern unsigned int g_40f1bc;\n
extern unsigned short g_40f1c0;\n
\n
int sub_408dd0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40f1a8 = v4;\n
        g_40f1a4 = v5;\n
        g_40f1a0 = v6;\n
        g_40f19c = v7;\n
        g_40f198 = v8;\n
        g_40f194 = v9;\n
        g_40f1c0 = v10;\n
        g_40f1b4 = v11;\n
        g_40f190 = v12;\n
        g_40f18c = v13;\n
        g_40f188 = v14;\n
        g_40f184 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40f1b8 = v0;\n
        g_40f1ac = v1;\n
        g_40f1b0 = *(&v2);\n
        g_40f1bc = &v3;\n
        g_40f0b4 = g_40f1b0;\n
        g_40f0a8 = 3221226505;\n
        g_40f0ac = 1;\n
        g_40f0b8 = 1;\n
        g_40f0bc = v3;\n
        sub_409100();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4230633:sub_408de9": "int sub_408de9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4230633\n
}\n
", "4230832:sub_408eb0": "extern unsigned int g_40f0a8;\n
extern unsigned int g_40f0ac;\n
extern unsigned int g_40f0b4;\n
extern unsigned int g_40f0b8;\n
extern unsigned int g_40f0bc;\n
extern char g_40f0c0;\n
extern unsigned short g_40f184;\n
extern unsigned short g_40f188;\n
extern unsigned short g_40f18c;\n
extern unsigned short g_40f190;\n
extern unsigned int g_40f194;\n
extern unsigned int g_40f198;\n
extern unsigned int g_40f19c;\n
extern unsigned int g_40f1a0;\n
extern unsigned int g_40f1a4;\n
extern unsigned int g_40f1a8;\n
extern unsigned int g_40f1ac;\n
extern unsigned int g_40f1b0;\n
extern unsigned short g_40f1b4;\n
extern unsigned int g_40f1b8;\n
extern unsigned int g_40f1bc;\n
extern unsigned short g_40f1c0;\n
\n
int sub_408eb0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1063985];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40f1a8 = v7;\n
        g_40f1a4 = v8;\n
        g_40f1a0 = v9;\n
        g_40f19c = v10;\n
        g_40f198 = v11;\n
        g_40f194 = v12;\n
        g_40f1c0 = v13;\n
        g_40f1b4 = v14;\n
        g_40f190 = v15;\n
        g_40f18c = v16;\n
        g_40f188 = v17;\n
        g_40f184 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40f1b8 = v0;\n
        g_40f1ac = v2;\n
        g_40f1b0 = *(&v3);\n
        g_40f1bc = &v4;\n
        g_40f0b4 = g_40f1b0;\n
        g_40f0a8 = 3221226505;\n
        g_40f0ac = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40f0b8 = v5 + 1;\n
        g_40f0bc = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_40f0c0)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_409100();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4230857:sub_408ec9": "int sub_408ec9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4230857\n
}\n
", "4231136:sub_408fe0": "int sub_408fe0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408dd0(8);\n
}\n
", "4231179:sub_40900b": "int sub_40900b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231179\n
}\n
", "4231424:sub_409100": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409100(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4231472:sub_409130": "char sub_409130()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231488:sub_409140": "char sub_409140()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231504:sub_409150": "char sub_409150()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231520:sub_409160": "char sub_409160()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231536:sub_409170": "char sub_409170()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4231552:sub_409180": "int sub_409180()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4231568:sub_409190": "extern unsigned int g_40f098;\n
\n
int sub_409190(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40f098 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4231876:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4231882:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4231888:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4231894:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4231900:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4231906:sub_4092e2": "int sub_4092e2(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4231912:sub_4092e8": "int sub_4092e8()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4231918:sub_4092ee": "int sub_4092ee()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4231924:sub_4092f4": "int sub_4092f4(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4231930:sub_4092fa": "int sub_4092fa(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4231936:sub_409300": "int sub_409300()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4231942:sub_409306": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409306(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4231948:sub_40930c": "int sub_40930c(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4231954:sub_409312": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_409312(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4231960:sub_409318": "int sub_409318(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4231966:sub_40931e": "int sub_40931e(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4231972:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4231978:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4231984:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4231990:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4231996:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4232002:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4232008:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4232014:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4232020:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4232026:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4232032:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4232038:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4232044:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4232050:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4232056:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4232062:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4232068:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4232074:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4232080:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4232086:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4232092:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4232098:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4232104:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4232110:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4232116:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4232122:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4232128:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4232134:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4232140:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4232146:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4232152:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4232158:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4232164:sub_4093e4": "int sub_4093e4()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4232170:sub_4093ea": "int sub_4093ea(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_receive": null, "5242896:cgc_transmit": null, "5242900:GetCurrentProcess": null, "5242904:GetCurrentProcessId": null, "5242908:GetCurrentThreadId": null, "5242912:GetModuleHandleW": null, "5242916:GetStartupInfoW": null, "5242920:GetSystemTimeAsFileTime": null, "5242924:InitializeSListHead": null, "5242928:IsDebuggerPresent": null, "5242932:IsProcessorFeaturePresent": null, "5242936:QueryPerformanceCounter": null, "5242940:SetUnhandledExceptionFilter": null, "5242944:TerminateProcess": null, "5242948:UnhandledExceptionFilter": null, "5242952:__current_exception": null, "5242956:__current_exception_context": null, "5242960:__std_type_info_destroy_list": null, "5242964:_except_handler4_common": null, "5242968:memset": null, "5242972:__p___argc": null, "5242976:__p___argv": null, "5242980:__p__commode": null, "5242984:__setusermatherr": null, "5242988:_c_exit": null, "5242992:_cexit": null, "5242996:_configthreadlocale": null, "5243000:_configure_narrow_argv": null, "5243004:_controlfp_s": null, "5243008:_crt_at_quick_exit": null, "5243012:_crt_atexit": null, "5243016:_execute_onexit_table": null, "5243020:_exit": null, "5243024:_get_initial_narrow_environment": null, "5243028:_initialize_narrow_environment": null, "5243032:_initialize_onexit_table": null, "5243036:_initterm": null, "5243040:_initterm_e": null, "5243044:_register_onexit_function": null, "5243048:_register_thread_local_exe_atexit_callback": null, "5243052:_seh_filter_dll": null, "5243056:_seh_filter_exe": null, "5243060:_set_app_type": null, "5243064:_set_fmode": null, "5243068:_set_new_mode": null, "5243072:exit": null, "5243076:terminate": null, "6295596:UnresolvableCallTarget": null}