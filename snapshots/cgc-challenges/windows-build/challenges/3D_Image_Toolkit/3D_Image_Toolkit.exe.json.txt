{"4198400:sub_401000": "int sub_401000(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198454:sub_401036": null, "4198464:sub_401040": "int sub_401040(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198518:sub_401076": null, "4198528:sub_401080": "int sub_401080(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198582:sub_4010b6": null, "4198592:sub_4010c0": "int sub_4010c0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3) && !sub_401080(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198668:sub_40110c": null, "4198672:sub_401110": "int sub_401110(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_4010c0(v3) && !sub_401000(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4198748:sub_40115c": null, "4198752:sub_401160": "int sub_401160(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 32 && v3 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4198806:sub_401196": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401080(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + -32;\n
    return v0;\n
}\n
", "4198876:sub_4011dc": null, "4198880:sub_4011e0": "int sub_4011e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401040(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 + 32;\n
    return v0;\n
}\n
", "4198940:sub_40121c": null, "4198944:sub_401220": "int sub_401220(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4199040:sub_401280": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401280(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v1 = 0;\n
            v0 = &v1;\n
            if (cgc_receive(0, v6 + v2, a0 - v2))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (!v1)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4199196:sub_40131c": null, "4199200:sub_401320": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401320(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            return v3;\n
        v3[v6] = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2)\n
        {\n
            if (v1 == a0)\n
                return v3;\n
            v3[v6] = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4199408:sub_4013f0": "extern char g_40a098;\n
\n
int sub_4013f0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = g_40a098;\n
    if (!v6)\n
        return g_40a098;\n
    v7 = v6;\n
    if (*(v7) <= 1016)\n
    {\n
        if (*(v6) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v6) >> 3;\n
        *((v6 + 4)) = (&g_40a098)[v2];\n
        v1 = v6;\n
        if (*(v6) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v6) >> 3;\n
        v7 = v0;\n
        (&g_40a098)[v7] = v1;\n
        return v0;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v7;\n
        if (!*((v3 + 4)))\n
        {\n
            *((v3 + 4)) = v6;\n
            *((v6 + 8)) = v3;\n
            v7 = v6;\n
            *((v7 + 4)) = 0;\n
            return v6;\n
        }\n
        else if (*(v6) >= *(*((v3 + 4))))\n
        {\n
            v7 = *((v3 + 4));\n
            v3 = v7;\n
        }\n
        else\n
        {\n
            *((v6 + 4)) = *((v3 + 4));\n
            *((v6 + 8)) = v3;\n
            *((*((v3 + 4)) + 8)) = v6;\n
            v7 = v3;\n
            *((v7 + 4)) = v6;\n
            return v3;\n
        }\n
    }\n
}\n
", "4199723:sub_40152b": null, "4199728:sub_401530": "extern struct_0 *g_40a098;\n
\n
int sub_401530(unsigned int v3)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    v3 += 4;\n
    v3 = v3 + 4095 & -0x1000;\n
    if (cgc_allocate(v3, 0, &v0, 0, 0))\n
    {\n
        sub_402700(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
        cgc__terminate(-1);\n
    }\n
    sub_4042d0(v0);\n
    *(v0) = v3 - 4;\n
    if (!g_40a098)\n
    {\n
        v4 = v0;\n
        g_40a098 = v4;\n
        return v0;\n
    }\n
    v4 = sub_4013f0(v0);\n
    return v4;\n
}\n
", "4199917:sub_4015ed": null, "4199920:sub_4015f0": "int sub_4015f0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v4 = v3;\n
    v0 = 0;\n
    if (v3)\n
    {\n
        v0 = v3 - 4;\n
        v4 = sub_4013f0(v0);\n
    }\n
    return v4;\n
}\n
", "4199971:sub_401623": null, "4199984:sub_401630": "extern struct_0 *g_40a098;\n
\n
int sub_401630()\n
{\n
    unsigned int v0[3];  // [bp-0xc]\n
    unsigned int v1[3];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (cgc_allocate(0x1000, 0, &g_40a098, 0, 0))\n
    {\n
        sub_402700();\n
        cgc__terminate();\n
    }\n
    sub_4042d0(g_40a098);\n
    v1[0] = g_40a098;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4080;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4200170:sub_4016ea": null, "4200176:sub_4016f0": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_4016f0(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    v0 = &v1;\n
    if (!v2)\n
        return v2;\n
    if (v2->field_8)\n
        v2->field_8->field_4 = v2->field_4;\n
    v3 = v2;\n
    if (!v3->field_4)\n
        return v3;\n
    v3 = v2->field_4;\n
    v3->field_8 = v2->field_8;\n
}\n
", "4200260:sub_401744": null, "4200272:sub_401750": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_0 *g_40a098;\n
\n
int sub_401750(unsigned int v5)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!g_40a098)\n
        sub_401630();\n
    for (v1 = g_40a098; v1; v1 = v1->field_4)\n
    {\n
        if (v1->field_0 >= v5)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        sub_401530(v5);\n
        v2 = sub_401750(v5);\n
        return v2;\n
    }\n
    sub_4016f0(v1);\n
    if (*(v1) - v5 < 12)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + v5;\n
    *(v0) = *(v1) - (v5 + 4);\n
    *(v1) = v5;\n
    sub_4013f0(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4200517:sub_401845": null, "4200528:sub_401850": "int sub_401850(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4018b0();\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    sub_4042d0(v1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4200616:sub_4018a8": null, "4200624:sub_4018b0": "typedef struct struct_1 {\n
    char padding_0[4235416];\n
    struct struct_0 *field_40a098;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40a098[4];\n
\n
int sub_4018b0(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_401750(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if (g_40a098[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40a098[v2];\n
        g_40a098[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_401750(v6);\n
    return v3;\n
}\n
", "4200880:sub_4019b0": "typedef struct struct_1 {\n
    char padding_0[4235416];\n
    struct struct_0 *field_40a098;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_40a098[4];\n
\n
int sub_4018b0(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v6 < 8)\n
        v6 = 8;\n
    v6 = v6 + 7 & -8;\n
    if (v6 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v6 >> 3;\n
    if (!v2)\n
    {\n
        v3 = sub_401750(v6);\n
        return v3;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if (g_40a098[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = g_40a098[v2];\n
        g_40a098[v2] = v1->field_4;\n
        v3 = &v1->field_4;\n
        return v3;\n
    }\n
    v3 = sub_401750(v6);\n
    return v3;\n
}\n
", "4201060:sub_401a64": null, "4201072:sub_401a70": null, "4201280:sub_401b40": "extern unsigned int g_40a298;\n
extern void* g_40a318;\n
\n
int sub_401b40(unsigned int v5, unsigned int a0[1058983])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2[1058983];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[1058983];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 128;\n
    sub_4042d0(&g_40a298);\n
    g_40a318 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2[0] = 0; v2 < a0; v2 += 1)\n
    {\n
        (&g_40a298)[v2] = *((v5 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2[0] = v6;\n
        if (v2 >= 32)\n
            break;\n
        v1 = (&g_40a298)[&v2[0] + 1 & 31];\n
        (&g_40a298)[v2] = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4201477:sub_401c05": null, "4201488:sub_401c10": "int sub_401c10(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401b40(&v2, 0x1);\n
}\n
", "4201521:sub_401c31": null, "4201536:sub_401c40": "extern char g_40a298;\n
extern struct_0 *g_40a318;\n
\n
int sub_401c40()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = *((0x4 * g_40a318 + &g_40a298));\n
    v7 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[3] & 31)]);\n
    v6 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[24] & 31)]);\n
    v5 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[10] & 31)]);\n
    v4 = *(&(&g_40a298)[4 * (&g_40a318->padding_0[31] & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *((0x4 * g_40a318 + &g_40a298)) = v1;\n
    *(&(&g_40a298)[4 * (&g_40a318->padding_0[31] & 31)]) = v0;\n
    g_40a318 = &g_40a318->padding_0[31] & 31;\n
    return v0;\n
}\n
", "4201796:sub_401d44": null, "4201808:sub_401d50": "int sub_401d50(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (v7 > a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v7 != a0)\n
    {\n
        v2 = a0 - v7 + 1;\n
        if (!v2)\n
        {\n
            v4 = sub_401c40();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = sub_401c40();\n
        } while (v3 >= v2 * v1);\n
        v0 = v7;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v7;\n
        return v4;\n
    }\n
}\n
", "4201984:sub_401e00": "int sub_401e00(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4202071:sub_401e57": null, "4202080:sub_401e60": "int sub_401e60(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4202114:sub_401e82": null, "4202128:sub_401e90": "int sub_401e90(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
\n
    v5 = &v6;\n
    v3 = v7;\n
    if (*((v3 + 0x100)) >= 0x100)\n
    {\n
        for (v2 = v3; *((v3 + 0x100)) > 0; v2 = *(&v1) + v2)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(1, v2, *((v3 + 0x100))))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v1))\n
            {\n
                v8 = v3;\n
                v9 = *((v8 + 0x100)) - *(&v1);\n
                *((v8 + 0x100)) = v9;\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v10 = v3;\n
    *(&v9) = *((v10 + 0x100));\n
    *((v10 + 0x100)) = v9 + 1;\n
    *((v3 + v9)) = a0;\n
    v4 = a1 + 1;\n
    return v4;\n
}\n
", "4202378:sub_401f8a": null, "4202384:sub_401f90": "int sub_401f90(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v5, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4202462:sub_401fde": null, "4202464:sub_401fe0": "int sub_401fe0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    v2 = sub_404290();\n
    while (true)\n
    {\n
        if (v1 != v2)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v7 + v1, v2 - v1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            if (!*(&v3))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = *(&v3) + v1;\n
        }\n
        else\n
        {\n
            sub_401f90(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4202629:sub_402085": null, "4202640:sub_402090": "int sub_402090(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x130]\n
    char v1;  // [bp-0x12c]\n
    unsigned int v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x124]\n
    void* v4;  // [bp-0x120]\n
    unsigned int v5;  // [bp-0x11c]\n
    char v6;  // [bp-0x116]\n
    unsigned short v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v12 = &v13;\n
    v11 = v15;\n
    v10 = v16;\n
    v8 = sub_401e90;\n
    v7 = 0;\n
    v5 = &v6;\n
    v4 = 0;\n
    v0 = a0;\n
    v3 = sub_4021b0(v5, v8, v4, v14);\n
    v2 = &v6;\n
    while (true)\n
    {\n
        if (v7 <= 0)\n
        {\n
            v9 = v3;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v2, v7))\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
        else if (*(&v1))\n
        {\n
            v7 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
    }\n
    return v9;\n
}\n
", "4202917:sub_4021a5": null, "4202928:sub_4021b0": "int sub_4021b0(struct struct_0 **v6, struct struct_0 **a0, struct struct_0 **a1, struct struct_0 **a2, struct struct_0 **a3)\n
{\n
    struct struct_0 **<0x4021b0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct struct_0 **v5;  // [bp+0x0]\n
    struct struct_0 **v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x1c]\n
    struct struct_0 **v9;  // [bp+0x20]\n
    struct struct_0 **v10;  // [bp+0x24]\n
    struct struct_0 **v11;  // [bp+0x28]\n
    struct struct_0 **v12;  // [bp+0x2c]\n
    struct struct_0 **v13;  // [bp+0x30]\n
    unsigned int v14;  // [bp+0x34]\n
    char v15;  // [bp+0x39]\n
    char v16;  // [bp+0x3a]\n
    char v17;  // [bp+0x3b]\n
    struct struct_0 **v18;  // [bp+0x3c]\n
    struct struct_0 **v19;  // [bp+0x40]\n
    struct struct_0 **v20;  // [bp+0x48]\n
    struct struct_0 **v21;  // [bp+0x50]\n
    struct struct_0 **v22;  // [bp+0x54]\n
    struct struct_0 **v23;  // [bp+0x58]\n
    struct struct_0 **v24;  // [bp+0x5c]\n
    struct struct_0 **v25;  // [bp+0x60]\n
    struct struct_0 **v26;  // [bp+0x64]\n
    char v27;  // [bp+0x6b]\n
    struct struct_0 **v28;  // [bp+0x6c], Other Possible Types: unsigned int\n
    void* v29;  // [bp+0x70]\n
    struct struct_0 **v30;  // [bp+0x74], Other Possible Types: unsigned int\n
    struct struct_0 **v31;  // [bp+0x78], Other Possible Types: unsigned int\n
    struct struct_0 **v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    struct struct_0 **v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    struct struct_0 **v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    struct struct_0 **v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    struct struct_0 **v41;  // eax\n
\n
    v4 = &<0x4021b0[is_2]|Stack bp, 1 B>;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(a2))\n
            return a1;\n
        v27 = *(a2);\n
        a2 += 1;\n
        if (v27 != 36)\n
        {\n
            v32 = a0;\n
            v5 = v6;\n
            v6 = v27;\n
            a0 = a1;\n
            a1 = v32(v6, a0);\n
        }\n
        else\n
        {\n
            v28 = 0;\n
            v29 = 0;\n
            v30 = 0;\n
            v31 = 0;\n
            if (!*(a2))\n
                return a1;\n
            if (*(a2) != 36)\n
            {\n
                if (*(a2) == 45)\n
                {\n
                    v31 |= 1;\n
                    a2 += 1;\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v5 = *(a2);\n
                if (sub_401000(*(a2)))\n
                {\n
                    if (*(a2) == 48)\n
                        v31 |= 4;\n
                    v26 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 += 1;\n
                    }\n
                    v5 = v26;\n
                    v30 = sub_403c20();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                if (*(a2) == 46)\n
                {\n
                    a2 += 1;\n
                    if (!*(a2))\n
                        return a1;\n
                    v25 = a2;\n
                    while (true)\n
                    {\n
                        v5 = *(a2);\n
                        if (!sub_401000(*(a2)))\n
                            break;\n
                        a2 += 1;\n
                    }\n
                    v5 = v25;\n
                    v28 = sub_403c20();\n
                    if (!*(a2))\n
                        return a1;\n
                }\n
                v14 = *(a2) - 88;\n
                switch (v14)\n
                {\n
                case 0:\n
                    v31 |= 8;\n
                    v37 = a3;\n
                    a3 = v37 + 1;\n
                    v21 = &*(v37)->field_0;\n
                    v10 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v21;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v10;\n
                    a1 = sub_402900(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 11:\n
                    v41 = a3;\n
                    a3 = v41 + 1;\n
                    v17 = *(v41);\n
                    v15 = v17;\n
                    v16 = 0;\n
                    v9 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = &v15;\n
                    a2 = v30;\n
                    a3 = 0;\n
                    v7 = v9;\n
                    a1 = sub_4039d0(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 12:\n
                    v35 = a3;\n
                    a3 = v35 + 1;\n
                    v23 = &*(v35)->field_0;\n
                    v12 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v23;\n
                    a2 = 10;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v12;\n
                    a1 = sub_402900(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                case 13:\n
                    v31 |= 16;\n
                    v39 = a3;\n
                    a3 = v39 + 2;\n
                    *(&v19) = *(&v39);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v19);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_403720(v6, a0, a1);\n
                    break;\n
                case 14:\n
                    v38 = a3;\n
                    a3 = v38 + 2;\n
                    *(&v20) = *(&v38);\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    *(&a1) = *(&v20);\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v31;\n
                    a1 = sub_403720(v6, a0, a1);\n
                    break;\n
                case 22:\n
                    v40 = a3;\n
                    a3 = v40 + 1;\n
                    v18 = &*(v40)->field_0;\n
                    *(v18) = a1;\n
                    break;\n
                case 27:\n
                    v34 = a3;\n
                    a3 = v34 + 1;\n
                    v24 = &*(v34)->field_0;\n
                    v13 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v24;\n
                    a2 = v30;\n
                    a3 = v28;\n
                    v7 = v13;\n
                    a1 = sub_4039d0(v6, a0, a1, a2, a3, v7);\n
                    break;\n
                case 32:\n
                    v36 = a3;\n
                    a3 = v36 + 1;\n
                    v22 = &*(v36)->field_0;\n
                    v11 = v31;\n
                    v5 = v6;\n
                    v6 = a0;\n
                    a0 = a1;\n
                    a1 = v22;\n
                    a2 = 16;\n
                    a3 = v30;\n
                    v7 = v28;\n
                    v8 = v11;\n
                    a1 = sub_402900(v6, a0, a1, a2, a3, v7, v8);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                a2 += 1;\n
            }\n
            else\n
            {\n
                v33 = a0;\n
                v5 = v6;\n
                v6 = 36;\n
                a0 = a1;\n
                a1 = v33(v6, a0);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4204283:sub_4026fb": null, "4204288:sub_402700": "int sub_402700(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_402090(v4, v1);\n
    return v0;\n
}\n
", "4204332:sub_40272c": null, "4204336:sub_402730": "int sub_402730(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
\n
    v4 = &v5;\n
    v3 = v8;\n
    v2 = &v7;\n
    v0 = v2;\n
    v1 = sub_402770(v6, a0);\n
    v9 = v3;\n
    return v1;\n
}\n
", "4204391:sub_402767": null, "4204400:sub_402770": "int sub_402770(unsigned int v8, void* **a0, void* **a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* **v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
\n
    v6 = &v7;\n
    v5 = v9;\n
    v4 = v10;\n
    v3 = &sub_401e60;\n
    v2 = v8;\n
    v1 = 0;\n
    v0 = sub_4021b0(v2, v3, v1, a0, a1);\n
    v3(v2, 0);\n
    v11 = v4;\n
    v12 = v5;\n
    return v0;\n
}\n
", "4204519:sub_4027e7": null, "4204528:sub_4027f0": "int sub_4027f0(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m a0 >> 32;\n
        v5 = (0 CONCAT v5) /m a0;\n
        if (a0 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a1[v9] = v0 + 87;\n
        }\n
        else\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a1[v8] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4204800:sub_402900": "int sub_402900(unsigned int v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    struct struct_0 **v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v3 = 1;\n
        a2 = -(a2);\n
        v5 += 1;\n
    }\n
    v2 = sub_4027f0(a2, a3, &v1, a6);\n
    v5 = v2 + v5;\n
    if (a4 > 0 && v5 < a4)\n
        v4 = a4 - v5;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < a5)\n
            v4 = a5 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v8, 45);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v8, 32);\n
            else\n
                a1 = a0(v8, 48);\n
        }\n
    }\n
    if (v3)\n
    {\n
        a1 = a0(v8, 45);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        a1 = a0(v8, *(&v0 + v0));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v10 = v4;\n
        v4 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        a1 = a0(v8, 32);\n
    }\n
    return a1;\n
}\n
", "4205418:sub_402b6a": null, "4205424:sub_402b70": null, "4208407:sub_403717": null, "4208416:sub_403720": "int sub_403720()\n
{\n
    int <0x403720[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
    unsigned long v6;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xc]\n
    char v10;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x14]\n
    char v12;  // [bp+0x18]\n
    char v13;  // [bp+0x1c]\n
    char v14;  // [bp+0x20]\n
    unsigned int v15;  // [bp+0x38]\n
    char v16;  // [bp+0x3f]\n
    unsigned int v17;  // [bp+0x40]\n
    unsigned int v18;  // [bp+0x44], Other Possible Types: char\n
    char v19;  // [bp+0x48], Other Possible Types: unsigned long\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ebp\n
\n
    v5 = &<0x403720[is_2]|Stack bp, 1 B>;\n
    *(&v4) = *(&v10);\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (((CmpF(0, *(&v4)) & 69 | ((CmpF(0, *(&v4)) & 69) >> 6)) & 1) != 1)\n
    {\n
        *(&v19) = (0 CONCAT *(&v19)) ^ 0x80000000000000008000000000000000;\n
        v16 = 1;\n
        v18 = *(&v18) + 1;\n
    }\n
    if (!*(&v13))\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = 6;\n
    }\n
    else\n
    {\n
        *(&v6) = *(&v19);\n
        v8 = *(&v13);\n
    }\n
    v9 = &v12;\n
    v10 = *(&v14);\n
    v15 = sub_402b70();\n
    v18 = v15 + v18;\n
    if (*(&v12) > 0 && v18 < *(&v12))\n
        v17 = *(&v12) - v18;\n
    if (!(*(&v14) & 1))\n
    {\n
        if (v16 && v17 > 0 && (*(&v14) & 4))\n
        {\n
            v20 = v8;\n
            v6 = (&v6)[1];\n
            v7 = 45;\n
            v8 = v9;\n
            v9 = v20(v7, v8);\n
            v16 = 0;\n
        }\n
        while (true)\n
        {\n
            v21 = v17;\n
            v17 = v21 - 1;\n
            if (v21 <= 0)\n
                break;\n
            if ((*(&v14) & 4))\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 48;\n
            }\n
            else\n
            {\n
                v22 = v8;\n
                v6 = (&v6)[1];\n
                v7 = 32;\n
            }\n
            v8 = v9;\n
            v9 = v22(v7, v8);\n
        }\n
    }\n
    if (v16)\n
    {\n
        v23 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 45;\n
        v8 = v9;\n
        v9 = v23(v7, v8);\n
        v16 = 0;\n
    }\n
    for (v11 = 0; v11 < v15; v11 += 1)\n
    {\n
        v24 = v8;\n
        v6 = (&v6)[1];\n
        v7 = (&v12)[v11];\n
        v8 = v9;\n
        v9 = v24(v7, v8);\n
    }\n
    if (!(*(&v14) & 1))\n
    {\n
        v27 = v5;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v25 = v17;\n
        v17 = v25 - 1;\n
        if (v25 <= 0)\n
            break;\n
        v26 = v8;\n
        v6 = (&v6)[1];\n
        v7 = 32;\n
        v8 = v9;\n
        v9 = v26(v7, v8);\n
    }\n
    v27 = v5;\n
    return;\n
}\n
", "4209103:sub_4039cf": null, "4209104:sub_4039d0": "int sub_4039d0(unsigned int v6, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // edx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v4 = &v5; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v6, *(a2));\n
        }\n
        v3 = a1;\n
        return v3;\n
    }\n
    v2 = sub_404290();\n
    v1 = 0;\n
    if (a4 > 0 && v2 > a4)\n
        v2 = a4;\n
    if (a3 > 0 && v2 < a3)\n
        v1 = a3 - v2;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v7 = v1;\n
            v1 = v7 - 1;\n
            if (v7 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v6, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v9 = a2;\n
        a2 = v9 + 1;\n
        v10 = *(v9);\n
        v0 = a1;\n
        a1 = a0(v6, v10);\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v1;\n
            v1 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v6, 32);\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4209616:sub_403bd0": "int sub_403bd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401d50(0, 2147483646);\n
}\n
", "4209649:sub_403bf1": null, "4209664:sub_403c00": "int sub_403c00(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_401c10(v2);\n
}\n
", "4209687:sub_403c17": null, "4209696:sub_403c20": "int sub_403c20(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    for (v0 = 0; sub_401220(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = 1;\n
        v5 += 1;\n
    }\n
    for (; sub_401000(*(v5)); v1 = v1 * 10 + *(v6) - 48)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
    }\n
    if (v0)\n
    {\n
        v2 = -(v1);\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209910:sub_403cf6": null, "4209920:sub_403d00": "int sub_403d00(char *v5)\n
{\n
    int <0x403d00[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x1c]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x18]\n
    unsigned long long v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    char *v4;  // [bp+0x0]\n
    char *v6;  // [bp+0x7], Other Possible Types: char\n
    unsigned long v7;  // [bp+0x8]\n
    char *v8;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char v9;  // [bp+0x14]\n
    unsigned long v10;  // [bp+0x18]\n
    unsigned long v11;  // [bp+0x20]\n
    char *v12;  // eax, Other Possible Types: unsigned int, void*\n
\n
    v3 = &<0x403d00[is_2]|Stack bp, 1 B>;\n
    v2 = 0;\n
    v1 = v5;\n
    for (v0 = v5; *(*(&v8)); v8 = *(&v8) + 1)\n
    {\n
        if (*(*(&v8)) == 46)\n
        {\n
            *(v8) = 0;\n
            v8 = *(&v8) + 1;\n
            break;\n
        }\n
    }\n
    v4 = *(&v9);\n
    *(&v11) = sub_403c20(*(&v9));\n
    v12 = *(v8);\n
    if (v12)\n
    {\n
        v4 = v8;\n
        *(&v10) = sub_403c20(v8);\n
        while (true)\n
        {\n
            v12 = 0;\n
            *(&v6) = 0;\n
            if (v8)\n
            {\n
                v4 = *(v8);\n
                v12 = sub_401000(*(v8));\n
                v6 = v12;\n
            }\n
            *(&v12) = v6;\n
            if (!(v6 & 1))\n
                break;\n
            tmp_12 = DivV(tmp_14, tmp_13);\n
            *(&v10) = tmp_12;\n
            v8 = *(&v8) + 1;\n
        }\n
    }\n
    *(&v7) = (0 CONCAT *(&v11)) + (0 CONCAT *(&v10));\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v12;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v12;\n
}\n
", "4210220:sub_403e2c": null, "4210224:sub_403e30": "int sub_403e30(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(a0); *(v6) = tmp_19)\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    *(v3) = 0;\n
    return v0;\n
}\n
", "4210300:sub_403e7c": null, "4210304:sub_403e80": "int sub_403e80(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v3] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v3] = 0;\n
    }\n
    return v3;\n
}\n
", "4210441:sub_403f09": null, "4210448:sub_403f10": "int sub_403f10(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v3) = *(a0);\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4210584:sub_403f98": null, "4210592:sub_403fa0": "int sub_403fa0(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; sub_401220(*(v8)); v8 += 1);\n
    if (*(v8) == 45)\n
    {\n
        v3 = 1;\n
        *(&v8) = v8 + 1;\n
    }\n
    else if (*(v8) == 43)\n
    {\n
        *(&v8) = v8 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_4040a7;\n
    if (*(v8) != 48)\n
    {\n
LABEL_4040a7:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4040fa;\n
        if (*(v8) == 48)\n
        {\n
            if (*((v8 + 1)) != 98 && !(*((v8 + 1)) == 66))\n
                goto LABEL_4040fa;\n
            *(&v8) = v8 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4040fa:\n
    }\n
    else\n
    {\n
        if (*((v8 + 1)) != 120 && !(*((v8 + 1)) == 88))\n
            goto LABEL_4040a7;\n
        *(&v8) = v8 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v8) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = 0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m a1 >> 32;\n
    v2 = (0 CONCAT v2) /m a1;\n
    while (*(v8))\n
    {\n
        v0 = *(v8);\n
        if (sub_401000(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!sub_4010c0(v0))\n
                break;\n
            if (!sub_401040(v0))\n
                v0 -= 87;\n
            else\n
                v0 -= 55;\n
        }\n
        if (v0 >= a1)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_404229:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_40422e:\n
            v4 *= a1;\n
            v4 = v0 + v4;\n
            *(&v8) = v8 + 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_40422e;\n
            goto LABEL_404229;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v8;\n
    if (v3)\n
    {\n
        v5 = -(v4);\n
        return v5;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4211344:sub_404290": "int sub_404290(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211403:sub_4042cb": null, "4211408:sub_4042d0": "int sub_4042d0(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char *v3;  // ecx\n
\n
    for (v0 = &v1; a0; v3[1 + v2] = 0)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
    }\n
    *((v2 + a0)) = 0;\n
    return v2;\n
}\n
", "4211463:sub_404307": null, "4211472:sub_404310": "int sub_404310(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v5) = v0;\n
        v5 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(v6) = v1;\n
    }\n
    return v2;\n
}\n
", "4211627:sub_4043ab": null, "4211632:sub_4043b0": "int sub_4043b0(char *v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_404290(v5))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v5[v1] == a0)\n
        {\n
            v2 = &v5[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4211770:sub_40443a": null, "4211776:sub_404440": "extern struct_0 *g_40a420;\n
\n
int sub_404440(char *v7, char *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v7)\n
    {\n
        if (g_40a420)\n
        {\n
            v7 = g_40a420;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (sub_4043b0(a0, *(v7)))\n
            v0 = *(v7);\n
        if (!(v0 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (!*(v7))\n
    {\n
        g_40a420 = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = sub_404290(v7);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            g_40a420 = 0;\n
            v4 = v7;\n
            return v4;\n
        }\n
        if (sub_4043b0(a0, *((v7 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v7 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (sub_4043b0(a0, *((v7 + v2))))\n
        {\n
            *((v7 + v2)) = 0;\n
        }\n
        else\n
        {\n
            g_40a420 = v7 + v2;\n
            v4 = v7;\n
            return v4;\n
        }\n
    }\n
    if (v2 == v1)\n
        g_40a420 = 0;\n
    v4 = v7;\n
    return v4;\n
}\n
", "4212246:sub_404616": null, "4212256:sub_404620": "int sub_404620(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v4 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v4 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v4))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v4) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (*(v4) < *(a0))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v4) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v4) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4212606:sub_40477e": null, "4212608:sub_404780": "int sub_404780(char *v6, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = sub_404290(v6);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= sub_404290(a0))\n
                break;\n
            v6[v2] = a0[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v6[v2] = 0;\n
        v3 = v6;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212768:sub_404820": "int sub_404820(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v6];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4212928:sub_4048c0": "int sub_4048c0(unsigned int *v4, char *a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    if (!a0)\n
    {\n
        return v4;\n
    }\n
    else if (!v4)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v0 = sub_4018b0(10);\n
        v5 = sub_403f10(v0, a0, 10);\n
        for (v1 = 0; v1 <= 409; v1 = v5)\n
        {\n
            if (*((v4 + 0x4 * v1)))\n
            {\n
                v5 = v1 + 1;\n
            }\n
            else\n
            {\n
                v5 = v4;\n
                *((v5 + v1 * 4)) = v0;\n
                break;\n
            }\n
        }\n
        return v5;\n
    }\n
}\n
", "4213093:sub_404965": null, "4213104:sub_404970": "int sub_404970(unsigned int *v5, struct struct_0 **a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xe], Other Possible Types: unsigned short\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned short v7;  // si\n
\n
    v3 = &v4;\n
    v6 = v5;\n
    *(&v2) = 409;\n
    v1 = 0;\n
    while (true)\n
    {\n
        *(&v6) = v2;\n
        v2 = v6 - 1;\n
        if (!v6)\n
            break;\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v0 = a1;\n
        v6 = a0(v5[v7]);\n
    }\n
    return v6;\n
}\n
", "4213214:sub_4049de": null, "4213216:sub_4049e0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
int sub_4049e0(unsigned int *v5)\n
{\n
    void* v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = 0x1000;\n
    v6 = sub_401c10(*(0x4347c000));\n
    v0 = 0;\n
    while (v2 > 0)\n
    {\n
        v1 = sub_4018b0(10);\n
        v1->field_0 = sub_401c40();\n
        v1->field_2 = sub_401c40();\n
        v1->field_4 = sub_401c40();\n
        v1->field_6 = sub_401c40();\n
        v1->field_7 = sub_401c40();\n
        v1->field_8 = sub_401c40();\n
        v1->field_9 = sub_401c40();\n
        sub_4048c0(v5, v1);\n
        v2 -= 10;\n
        v6 = sub_4015f0(v1);\n
    }\n
    return v6;\n
}\n
", "4213423:sub_404aaf": null, "4213424:sub_404ab0": "int sub_404ab0(unsigned int v6, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xa], Other Possible Types: unsigned short\n
    unsigned short v2;  // [bp-0x8]\n
    unsigned short v3;  // [bp-0x6]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int *v7;  // ecx\n
\n
    v4 = &v5;\n
    v3 = 4090;\n
    sub_402700(\"Please submit your new file data ($d bytes):\\n
\");\n
    sub_401280(a0, v3);\n
    v2 = 0;\n
    *(&v1) = 0;\n
    while (true)\n
    {\n
        v7 = v3;\n
        if (v2 >= v7)\n
            break;\n
        *(&v7) = v1;\n
        v1 = v7 + 1;\n
        v0 = *((v6 + v7 * 4));\n
        sub_403f10(v0, a0 + v2, 2);\n
        v2 += 2;\n
        sub_403f10(v0 + 2, a0 + v2, 2);\n
        v2 += 2;\n
        sub_403f10(v0 + 4, a0 + v2, 2);\n
        v2 += 2;\n
        sub_403f10(v0 + 6, a0 + v2, 1);\n
        v2 += 1;\n
        sub_403f10(v0 + 7, a0 + v2, 1);\n
        v2 += 1;\n
        sub_403f10(v0 + 8, a0 + v2, 1);\n
        v2 += 1;\n
        sub_403f10(v0 + 9, a0 + v2, 1);\n
        v2 += 1;\n
    }\n
    return sub_402700(\"New file loaded\\n
\");\n
}\n
", "4213881:sub_404c79": null, "4213888:sub_404c80": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
int sub_404c80(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v0 = v6->field_0;\n
    v1 = v6->field_2;\n
    v2 = v6->field_4;\n
    sub_402700(\"XYZ:  ($d, $d, $d)\\n
\");\n
    v0 = v6->field_6;\n
    v1 = v6->field_7;\n
    v2 = v6->field_8;\n
    v3 = v6->field_9;\n
    sub_402700(\"RGBA: (#$02x$02x$02x$02x)\\n
\");\n
    return sub_402700(\"\\n
\");\n
}\n
", "4214024:sub_404d08": null, "4214032:sub_404d10": "int sub_404d10(struct struct_0 **v7, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
        return v7;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a0)\n
            break;\n
        v0 = v7[v4]->field_0;\n
        v1 = v7[v4]->field_2;\n
        v2 = v7[v4]->field_4;\n
        sub_402700(\"XYZ:  ($d, $d, $d)\\n
\");\n
        v0 = v7[v4]->field_6;\n
        v1 = v7[v4]->field_7;\n
        v2 = v7[v4]->field_8;\n
        v3 = v7[v4]->field_9;\n
        sub_402700(\"RGBA: (#$02x$02x$02x$02x)\\n
\");\n
        sub_402700(\"\\n
\");\n
        v4 += 1;\n
    }\n
    return v4;\n
}\n
", "4214265:sub_404df9": null, "4214272:sub_404e00": null, "4214541:sub_404f0d": null, "4214544:sub_404f10": "int sub_404f10(unsigned short v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4053e0(1413754136, 1074340347, 0, 0x40668000);\n
    return sub_404f60();\n
}\n
", "4214623:sub_404f5f": null, "4214624:sub_404f60": "int sub_404f60()\n
{\n
    unsigned long long v0;  // [bp-0x14]\n
    unsigned long long v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v5);\n
    v0 = *(&v4);\n
    v6 = v2;\n
    return;\n
}\n
", "4214673:sub_404f91": null, "4214688:sub_404fa0": null, "4214954:sub_4050aa": null, "4214960:sub_4050b0": null, "4215226:sub_4051ba": null, "4215232:sub_4051c0": "int sub_4051c0(unsigned short *v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = a0 + *(v2);\n
    return v2;\n
}\n
", "4215265:sub_4051e1": null, "4215280:sub_4051f0": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
int sub_4051f0(struct_0 *v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    v3->field_2 = v3->field_2 + a0;\n
    return v2;\n
}\n
", "4215309:sub_40520d": null, "4215312:sub_405210": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int sub_405210(struct_0 *v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    v3->field_4 = v3->field_4 + a0;\n
    return v2;\n
}\n
", "4215341:sub_40522d": null, "4215344:sub_405230": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int sub_405230(unsigned int v2, unsigned short a0)\n
{\n
    char <0x405230[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct struct_1 **v0;  // [bp-0x4]\n
    unsigned short *v1;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0xc]\n
    unsigned int v4;  // [bp+0x14]\n
    unsigned int v5;  // [bp+0x18]\n
    unsigned int v6;  // [bp+0x1c]\n
    unsigned long v7;  // [bp+0x20]\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &<0x405230[is_2]|Stack bp, 1 B>;\n
    v8 = a0;\n
    if (v8 < 1)\n
        return v8;\n
    v8 = a0;\n
    if (v8 <= 200)\n
    {\n
        *(&v1) = a0;\n
        v3 = 0x40590000;\n
        a0 = 0;\n
        *(&v7) = sub_4053e0();\n
        *(&a0) = *(&v7);\n
        *(&v1) = *((&v1)[1]);\n
        v6 = sub_404f60();\n
        *(&a0) = *(&v7);\n
        *(&v1) = ((&v1)[1])[1];\n
        v5 = sub_404f60();\n
        *(&v1) = ((&v1)[1])[2];\n
        *(&a0) = *(&v7);\n
        v4 = sub_404f60();\n
        if (v6 <= 65535)\n
        {\n
            *((&v1)[1]) = v6;\n
        }\n
        else if (*((&v1)[1]) < 0)\n
        {\n
            *((&v1)[1]) = 0x8000;\n
        }\n
        else\n
        {\n
            *((&v1)[1]) = 32767;\n
        }\n
        if (v5 <= 65535)\n
        {\n
            ((&v1)[1])[1] = v5;\n
        }\n
        else if (((&v1)[1])[1] < 0)\n
        {\n
            ((&v1)[1])[1] = 0x8000;\n
        }\n
        else\n
        {\n
            ((&v1)[1])[1] = 32767;\n
        }\n
        if (v4 <= 65535)\n
        {\n
            v8 = (&v1)[1];\n
            *((v8 + 4)) = v4;\n
            return (&v1)[1];\n
        }\n
        if (((&v1)[1])[2] < 0)\n
        {\n
            v8 = (&v1)[1];\n
            v8->field_4 = 0x8000;\n
        }\n
        else\n
        {\n
            v8 = (&v1)[1];\n
            v8->field_4 = 32767;\n
        }\n
        return v8;\n
    }\n
}\n
", "4215763:sub_4053d3": null, "4215776:sub_4053e0": "int sub_4053e0()\n
{\n
    unsigned long long v0;  // [bp-0x14]\n
    unsigned long long v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // ebp\n
\n
    v2 = &v3;\n
    v1 = *(&v5);\n
    v0 = *(&v4);\n
    v6 = v2;\n
    return;\n
}\n
", "4215830:sub_405416": null, "4215840:sub_405420": "int sub_405420(char v5[9], unsigned short a0)\n
{\n
    unsigned short v0;  // [bp-0xa]\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char v6[9];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v6 = a0;\n
    if (v6 < -255)\n
        return v6;\n
    v6 = a0;\n
    if (v6 <= 255)\n
    {\n
        v2 = v5[6] + a0;\n
        v1 = v5[7] + a0;\n
        v0 = v5[8] + a0;\n
        if (v2 > 255)\n
        {\n
            v5[6] = 255;\n
        }\n
        else if (v2 < 0)\n
        {\n
            v5[6] = 0;\n
        }\n
        else\n
        {\n
            v5[6] = v2;\n
        }\n
        if (v1 > 255)\n
        {\n
            v5[7] = 255;\n
        }\n
        else if (v1 < 0)\n
        {\n
            v5[7] = 0;\n
        }\n
        else\n
        {\n
            v5[7] = v1;\n
        }\n
        if (v0 > 255)\n
        {\n
            v6 = v5;\n
            v6[8] = 255;\n
        }\n
        else if (v0 < 0)\n
        {\n
            v6 = v5;\n
            v6[8] = 0;\n
        }\n
        else\n
        {\n
            v6 = v5;\n
            v6[8] = v0;\n
        }\n
        return v6;\n
    }\n
}\n
", "4216156:sub_40555c": null, "4216160:sub_405560": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
int sub_405560(struct_0 *v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2->field_9 = a0;\n
    return v2;\n
}\n
", "4216184:sub_405578": null, "4216192:sub_405580": null, "4216238:sub_4055ae": null, "4216240:sub_4055b0": null, "4216288:sub_4055e0": "extern unsigned int g_40a000[4];\n
extern unsigned int g_40a020[4];\n
\n
int sub_4055e0(char v10, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3[1058825];  // [bp-0xc], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x8]\n
    char v5;  // [bp-0x7]\n
    char v6;  // [bp-0x6]\n
    char v7;  // [bp-0x5]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v7 = 255;\n
    v6 = 0;\n
    v2 = 1;\n
    if (v10)\n
        v2 = v10 == 2;\n
    *(&v5) = ((v2 & 1) ? 4 : 8);\n
    v4 = v5;\n
    v3[0] = 0;\n
    while (v3 < v5)\n
    {\n
        if (!v10)\n
        {\n
LABEL_405660:\n
            if (a0 - g_40a000[v3] < 0)\n
                v1 = -(a0 - g_40a000[v3]);\n
            else\n
                v1 = a0 - g_40a000[v3];\n
            v6 = v1;\n
            goto LABEL_4056f5;\n
        }\n
        else\n
        {\n
            if (v10 == 2)\n
                goto LABEL_405660;\n
            if (a0 - g_40a020[v3] < 0)\n
                v0 = -(a0 - g_40a020[v3]);\n
            else\n
                v0 = a0 - g_40a020[v3];\n
            v6 = v0;\n
LABEL_4056f5:\n
            if (v6 < v7)\n
            {\n
                v7 = v6;\n
                v4 = v3;\n
            }\n
            v3 = &v3[0] + 1;\n
        }\n
    }\n
    return v4;\n
}\n
", "4216621:sub_40572d": null, "4216624:sub_405730": "int sub_405730(struct struct_0 **v8, unsigned int a0, char *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned short v1;  // [bp-0x10], Other Possible Types: char\n
    unsigned short v2;  // [bp-0xe]\n
    char v3[9];  // [bp-0xc]\n
    char v4;  // [bp-0x6]\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v10;  // ecx\n
\n
    v6 = &v7;\n
    if (!v8)\n
        return v8;\n
    v5 = 0;\n
    v4 = 0;\n
    *(&v3[0]) = 0;\n
    v2 = 2863;\n
    v1 = 0;\n
    for (v0 = 0; v1 < v2; v1 = *(&v1) + 1)\n
    {\n
        v5 = 0;\n
        v10 = v0;\n
        v0 = v10 + 1;\n
        *(&v3[0]) = v8[v10];\n
        v5 += (sub_4055e0(0, v3[6]) * 32);\n
        v5 += (sub_4055e0(1, v3[7]) * 8);\n
        v5 += sub_4055e0(2, v3[8]);\n
        sub_403f10(a0 + v1, v3, 2);\n
        *(&v1) = v1 + 2;\n
        sub_403f10(a0 + v1, &v3[2], 2);\n
        *(&v1) = v1 + 2;\n
        sub_403f10(a0 + v1, &v3[4], 2);\n
        *(&v1) = v1 + 2;\n
        sub_403f10(a0 + v1, &v5, 1);\n
    }\n
    return sub_403f10(a1, &v1, 2);\n
}\n
", "4217062:sub_4058e6": null, "4217072:sub_4058f0": "extern char g_40a000;\n
extern char g_40a020;\n
\n
int sub_4058f0(char *v9, char *a0, unsigned short *a1)\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x17]\n
    char v2;  // [bp-0x16]\n
    char v3;  // [bp-0x15]\n
    void* v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // ecx\n
\n
    v7 = &v8;\n
    v6 = 0;\n
    v5 = 0;\n
    for (v4 = 0; v6 < *(a1); a0[v14] = 255)\n
    {\n
        sub_403f10(a0 + v5, v9 + v6, 2);\n
        v5 += 2;\n
        v6 += 2;\n
        sub_403f10(a0 + v5, v9 + v6, 2);\n
        v5 += 2;\n
        v6 += 2;\n
        sub_403f10(a0 + v5, v9 + v6, 2);\n
        v5 += 2;\n
        v6 += 2;\n
        v10 = v6;\n
        v6 = v10 + 1;\n
        v3 = v9[v10];\n
        v2 = (v3 & 224) >> 5;\n
        v1 = (v3 & 24) >> 3;\n
        v0 = v3 & 7;\n
        v11 = v5;\n
        v5 = v11 + 1;\n
        a0[v11] = *(&(&g_40a000)[4 * v2]);\n
        v12 = v5;\n
        v5 = v12 + 1;\n
        a0[v12] = *(&(&g_40a020)[4 * v1]);\n
        v13 = v5;\n
        v5 = v13 + 1;\n
        a0[v13] = *(&(&g_40a000)[4 * v0]);\n
        v14 = v5;\n
        v5 = v14 + 1;\n
    }\n
    return sub_403f10(a1, &v5, 2);\n
}\n
", "4217482:sub_405a8a": null, "4217488:sub_405a90": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
int sub_405a90(struct struct_0 **v5, unsigned int a0, unsigned short a1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
        return v5;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
            break;\n
        v0 = v5[v1];\n
        v2 += 6;\n
        sub_403f10(&v0->padding_0[6], a0 + v2, 1);\n
        v2 += 1;\n
        sub_403f10(&v0->padding_0[7], a0 + v2, 1);\n
        v2 += 1;\n
        sub_403f10(&v0->padding_0[8], a0 + v2, 1);\n
        v2 += 1;\n
        v0->field_9 = 255;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4217760:sub_405ba0": "int sub_405ba0()\n
{\n
    unsigned int v0;  // [bp-0x282c]\n
    unsigned int v1;  // [bp-0x2828]\n
    unsigned int v2;  // [bp-0x2824]\n
    void* v3;  // [bp-0x2820]\n
    char *v4;  // [bp-0x281c]\n
    char **v5;  // [bp-0x2818]\n
    unsigned short v6;  // [bp-0x2812]\n
    char v7;  // [bp-0x280f]\n
    unsigned short v8;  // [bp-0x280e]\n
    char v9;  // [bp-0x280c]\n
    char v10;  // [bp-0x1c0c]\n
    void* v11;  // [bp-0x100c], Other Possible Types: unsigned int\n
    char v12;  // [bp-0x1008]\n
    char v13;  // [bp-0x8]\n
    char v14;  // [bp-0x6]\n
    char v15;  // [bp-0x5]\n
    char v17;  // [bp+0x2830]\n
    unsigned int v18;  // ebp\n
\n
    sub_406260();\n
    v11 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 409;\n
    v5 = sub_4018b0(v6 * 4);\n
    sub_404310(v5, 0, v6 * 4);\n
    sub_4049e0(v5);\n
    while (true)\n
    {\n
        if (!v15)\n
        {\n
            sub_4015f0(v5);\n
            v18 = *(&v17);\n
            return;\n
        }\n
        sub_401280(&v15, 1);\n
        v2 = v15 - 1;\n
        switch (v2)\n
        {\n
        case 0:\n
            sub_402700(\"NEW_FILE selected\\n
\");\n
            sub_404310(&v12, 0, 0x1000);\n
            sub_404ab0(v5, &v12);\n
            break;\n
        case 1:\n
            sub_402700(\"CHECK_FILE selected\\n
\");\n
            sub_404d10(v5, 409);\n
            break;\n
        case 2:\n
            sub_402700(\"SKEW_IMAGE selected\\n
\");\n
            sub_401280(&v14, 1);\n
            sub_401280(&v13, 2);\n
            v1 = v14;\n
            if (!v1)\n
            {\n
                sub_404970(v5, sub_4051c0, *(&v13));\n
            }\n
            else if (v1 == 1)\n
            {\n
                sub_404970(v5, sub_4051f0, *(&v13));\n
            }\n
            else if (v1 == 2)\n
            {\n
                sub_404970(v5, sub_405210, *(&v13));\n
            }\n
            else\n
            {\n
                sub_402700(\"Incorrect coordinate provided.\\n
\");\n
            }\n
            break;\n
        case 3:\n
            sub_402700(\"ROTATE_IMAGE selected\\n
\");\n
            sub_401280(&v14, 1);\n
            sub_401280(&v13, 2);\n
            v0 = v14;\n
            if (!v0)\n
            {\n
                sub_404970(v5, sub_404e00, *(&v13));\n
            }\n
            else if (v0 == 1)\n
            {\n
                sub_404970(v5, sub_404fa0, *(&v13));\n
            }\n
            else if (v0 != 2)\n
            {\n
                sub_402700(\"Incorrect coordinate provided.\\n
\");\n
            }\n
            else\n
            {\n
                sub_404970(v5, sub_4050b0, *(&v13));\n
            }\n
            break;\n
        case 4:\n
            sub_402700(\"BRIGHTNESS selected\\n
\");\n
            sub_401280(&v13, 2);\n
            sub_404970(v5, sub_405420, *(&v13));\n
            break;\n
        case 5:\n
            sub_402700(\"OPACITY selected\\n
\");\n
            sub_401280(&v13, 1);\n
            sub_404970(v5, sub_405560, *(&v13));\n
            break;\n
        case 6:\n
            sub_402700(\"COMPRESS selected\\n
\");\n
            sub_405730(v5, &v9, &v8);\n
            v7 = 0;\n
            break;\n
        case 7:\n
            sub_402700(\"DECOMPRESS selected\\n
\");\n
            if (!v8)\n
            {\n
                sub_402700(\"No compressed data.\\n
\");\n
                break;\n
            }\n
            else if (v7)\n
            {\n
                sub_402700(\"You have already decompressed the latest data.\\n
\");\n
                break;\n
            }\n
            else\n
            {\n
                v4 = sub_4018b0(4090);\n
                sub_4058f0(&v9, v4, &v8);\n
                sub_405a90(v5, v4, v8);\n
                sub_403f10(&v10, v4, v8);\n
                sub_4015f0(v4);\n
                v7 = 1;\n
                break;\n
            }\n
        case 8:\n
            sub_402700(\"SHOW_PIXEL selected\\n
\");\n
            sub_402700(\"Select the pixel to view:\\n
\");\n
            sub_401280(&v13, 2);\n
            if (*(&v13) < v6 && *(&v13) >= 0)\n
            {\n
                v3 = sub_4018b0(10);\n
                sub_403f10(v3, v5[*(&v13)], 10);\n
                sub_404c80(v3);\n
                v11 = v5[*(&v13)];\n
                sub_4015f0(v3);\n
                goto LABEL_4061b4;\n
            }\n
            if (!v11)\n
            {\n
                sub_402700(\"No pixel to show.\\n
\\n
\\n
\\n
\");\n
            }\n
            else\n
            {\n
                sub_402700(\"Out of range. Showing last displayed pixel.\\n
\");\n
                sub_404c80(v11);\n
            }\n
LABEL_4061b4:\n
            continue;\n
        case 9:\n
            sub_402700(\"SCALE_IMAGE selected\\n
\");\n
            sub_401280(&v13, 2);\n
            sub_404970(v5, sub_405230, *(&v13));\n
            break;\n
        case 10:\n
            sub_402700(\"EXIT selected\\n
\");\n
            v15 = 0;\n
            sub_4015f0(v5);\n
            v18 = *(&v17);\n
            return;\n
        default:\n
            sub_402700(\"UNKNOWN command\\n
\");\n
            v15 = 0;\n
            sub_4015f0(v5);\n
            v18 = *(&v17);\n
            return;\n
        }\n
    }\n
}\n
", "4219427:sub_406223": null, "4219440:sub_406230": "int sub_406230(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_402700(\"3D Coordinates (3DC) Image File Format Tools\\n
\");\n
    sub_405ba0(v2, a0);\n
    return 0;\n
}\n
", "4219488:sub_406260": "int sub_406260()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4219536:sub_406290": "int sub_406290()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4063b0();\n
    sub_4063c0();\n
    sub_4063e0();\n
    v0 = 1;\n
    if (!sub_4069b0())\n
    {\n
        v0 = 7;\n
        sub_407090();\n
    }\n
    sub_407260();\n
    v1 = sub_407290;\n
    sub_406680();\n
    if (sub_406380())\n
    {\n
        v1 = 7;\n
        sub_407090();\n
    }\n
    sub_406e20();\n
    if (sub_406f20())\n
    {\n
        v1 = sub_406dc0;\n
        __setusermatherr();\n
    }\n
    sub_406ea0();\n
    sub_406eb0();\n
    sub_406e70();\n
    v1 = sub_406e10();\n
    _configthreadlocale();\n
    if (sub_406e60())\n
        sub_4063a0();\n
    sub_407050();\n
    if (sub_407060())\n
    {\n
        v1 = 7;\n
        sub_407090();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4219728:sub_406350": "int sub_406350()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406ec0();\n
    return 0;\n
}\n
", "4219744:sub_406360": "int sub_406360()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_407070();\n
    v0 = sub_406e00();\n
    return _set_new_mode();\n
}\n
", "4219776:sub_406380": "int sub_406380()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_406dd0());\n
}\n
", "4219808:sub_4063a0": "int sub_4063a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4219824:sub_4063b0": "int sub_4063b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4219840:sub_4063c0": "int sub_4063c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_406df0());\n
}\n
", "4219872:sub_4063e0": "int sub_4063e0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_406de0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4219904:sub_406400": "int sub_406400()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_406230(v1, v2);\n
}\n
", "4219968:sub_406440": "extern char g_40957c;\n
extern char g_409584;\n
extern char g_409588;\n
extern struct_0 *g_409594;\n
extern char g_409c40;\n
extern unsigned int g_40a040;\n
extern unsigned int g_40a42c;\n
\n
int sub_406440()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409c40;\n
    v13 = sub_4072c0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40a040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_406920(1, g_40a040 ^ &v16, v22, v23))\n
        sub_407090();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_4068a0();\n
    if (g_40a42c == 1)\n
    {\n
        v16 = 7;\n
        sub_407090();\n
    }\n
    else if (g_40a42c)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40a42c = 1;\n
        v16 = &g_409594;\n
        v15 = &g_409588;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_406649;\n
        }\n
        else\n
        {\n
            v16 = &g_409584;\n
            v15 = &g_40957c;\n
            _initterm(*(&v17));\n
            g_40a42c = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_4068f0();\n
    v8 = sub_406f50();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_406770())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_407300(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_406f60();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_406770())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_406400();\n
    if (!sub_406fc0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_406970(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_406649:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4220383:sub_4065df": "int sub_4065df()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4220392:sub_4065e8": "int sub_4065e8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4220419:sub_406603": "extern char g_406611;\n
\n
int sub_406603()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_406611;\n
    if (!sub_406fc0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4220482:sub_406642": "int sub_406642()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4220512:sub_406660": "int sub_406660()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406cd0();\n
    return sub_406440();\n
}\n
", "4220528:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_406660();\n
}\n
", "4220544:sub_406680": "int sub_406680(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_4066b0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4220592:sub_4066b0": "extern unsigned int g_40a438;\n
\n
int sub_4066b0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40a438;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40a438))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4220648:sub_4066e8": "int sub_4066e8()\n
{\n
}\n
", "4220704:sub_406720": "extern unsigned int g_40a444;\n
\n
int sub_406720(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40a444;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40a444);\n
    return v6;\n
}\n
", "4220738:sub_406742": "int sub_406742()\n
{\n
}\n
", "4220768:sub_406760": "int sub_406760()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4220784:sub_406770": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_409c60;\n
extern unsigned int g_40a040;\n
\n
int sub_406770(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_409c60;\n
    v13 = sub_4072c0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40a040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_406bd0(v6, g_40a040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_406c40(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4220989:sub_40683d": "int sub_40683d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4220998:sub_406846": "int sub_406846()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4221037:sub_40686d": "int sub_40686d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4221056:sub_406880": "int sub_406880()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4221088:sub_4068a0": "extern unsigned int g_40a430;\n
\n
int sub_4068a0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_407ae0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_406760() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40a430 = v6;\n
        if (!g_40a430)\n
        {\n
            tmp_0 = 0;\n
            g_40a430 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40a430 = v6;\n
            v5 = g_40a430;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221168:sub_4068f0": "extern void* g_40a430;\n
\n
int sub_4068f0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407ae0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40a430;\n
        g_40a430 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40690f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4221216:sub_406920": "extern char g_40a434;\n
\n
int sub_406920(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40a434 = 1;\n
    sub_407650();\n
    v4 = sub_407e80();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_407e80();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_407e90();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4221296:sub_406970": "extern char g_40a434;\n
\n
int sub_406970(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40a434 && a0)\n
        return 1;\n
    sub_407e90(v2);\n
    v3 = sub_407e90();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4221360:sub_4069b0": "extern char g_40a435;\n
extern unsigned int g_40a438;\n
extern unsigned int g_40a43c;\n
extern unsigned int g_40a440;\n
extern unsigned int g_40a444;\n
extern unsigned int g_40a448;\n
extern unsigned int g_40a44c;\n
\n
int sub_4069b0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40a435)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_407090();\n
    }\n
    if (sub_407ae0() && !v10)\n
    {\n
        v8 = &g_40a438;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40a444;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_406a76;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40a438 = v4;\n
    g_40a43c = v5;\n
    g_40a440 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40a444 = v1;\n
    g_40a448 = v2;\n
    v11 = v3;\n
    g_40a44c = v11;\n
LABEL_406a76:\n
    g_40a435 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4221584:sub_406a90": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_406a90(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_407ae0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_407300(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4221664:sub_406ae0": "int sub_406ae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4069b0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4221696:sub_406b00": "int sub_406b00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_407ae0())\n
    {\n
        v3 = sub_407650();\n
    }\n
    else\n
    {\n
        v3 = sub_406380();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_4063a0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4221744:sub_406b30": "extern char g_40a438;\n
\n
int sub_406b30()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_407ae0())\n
    {\n
        v0 = &g_40a438;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_407ed0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4221792:sub_406b60": "int sub_406b60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407ea0(0);\n
    return sub_407ea0();\n
}\n
", "4221824:sub_406b80": "int sub_406b80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_407eb0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_407eb0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_407ec0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4221872:sub_406bb0": "char sub_406bb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_407ec0();\n
    sub_407ec0();\n
    return 1;\n
}\n
", "4221904:sub_406bd0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406bd0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4222016:sub_406c40": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_406c40(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4222160:sub_406cd0": "extern unsigned int g_40a040;\n
extern unsigned int g_40a080;\n
\n
int sub_406cd0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40a040 != 3141592654)\n
    {\n
        v4 = g_40a040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40a080 = ~(g_40a040);\n
            return g_40a040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_406d50(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40a040 = v0;\n
    g_40a080 = ~(v0);\n
    return v4;\n
}\n
", "4222288:sub_406d50": "int sub_406d50()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4222400:sub_406dc0": "int sub_406dc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222416:sub_406dd0": "int sub_406dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222432:sub_406de0": "int sub_406de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222448:sub_406df0": "int sub_406df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4222464:sub_406e00": "int sub_406e00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222480:sub_406e10": "int sub_406e10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4222496:sub_406e20": "extern void g_40a450;\n
\n
int sub_406e20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40a450);\n
}\n
", "4222528:sub_406e40": "extern unsigned int g_40a450;\n
\n
int sub_406e40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40a450);\n
}\n
", "4222560:sub_406e60": "char sub_406e60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4222576:sub_406e70": "int sub_406e70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_407090();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4222624:sub_406ea0": "int sub_406ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4222640:sub_406eb0": "int sub_406eb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4222656:sub_406ec0": "int sub_406ec0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_406f00();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_406f10(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4222720:sub_406f00": "extern char g_40a458;\n
\n
int sub_406f00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a458;\n
}\n
", "4222736:sub_406f10": "extern char g_40a460;\n
\n
int sub_406f10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a460;\n
}\n
", "4222752:sub_406f20": "extern unsigned int g_40a038;\n
\n
int sub_406f20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40a038)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4222800:sub_406f50": "extern char g_40a46c;\n
\n
int sub_406f50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a46c;\n
}\n
", "4222816:sub_406f60": "extern char g_40a470;\n
\n
int sub_406f60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40a470;\n
}\n
", "4222832:sub_406f70": "extern void* g_40a474;\n
\n
int sub_406f70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40a474 = 0;\n
    return v3;\n
}\n
", "4222848:sub_406f80": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_406f80()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4222912:sub_406fc0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_406fc0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4223056:sub_407050": "int sub_407050()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223072:sub_407060": "int sub_407060()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4071d0();\n
}\n
", "4223088:sub_407070": "int sub_407070()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_4071e0);\n
}\n
", "4223120:sub_407090": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_407090()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    unsigned int v1;  // [bp-0x330], Other Possible Types: char\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_406f70();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_406f70();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4223145:sub_4070a9": "int sub_4070a9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4223145\n
}\n
", "4223440:sub_4071d0": "int sub_4071d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4223456:sub_4071e0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_4071e0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4223584:sub_407260": "extern struct_0 *g_409c34;\n
\n
int sub_407260()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409c34;\n
    v3 = &g_409c34;\n
    return &g_409c34;\n
}\n
", "4223632:sub_407290": "extern struct_0 *g_409c3c;\n
\n
int sub_407290()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_409c3c;\n
    v3 = &g_409c3c;\n
    return &g_409c3c;\n
}\n
", "4223680:sub_4072c0": "extern unsigned int g_40a040;\n
\n
int sub_4072c0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_407ee0(*(v2));\n
    return _except_handler4_common(&g_40a040, sub_407b10, v2, a0, a1);\n
}\n
", "4223744:sub_407300": "int sub_407300()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4223760:sub_407310": "int sub_407310(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x407319;\n
    return tmp_4;\n
}\n
", "4223776:sub_407320": "int sub_407320(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4223808:sub_407340": "int sub_407340(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407320(v2);\n
}\n
", "4223840:sub_407360": "extern unsigned int g_40a478;\n
\n
int sub_407360(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_407310(&g_40a478, v3);\n
    return v0;\n
}\n
", "4223872:sub_407380": "extern char g_407300;\n
extern unsigned int g_40b000;\n
\n
int sub_407380()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_407340(&g_40b000) != sub_407300)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4223920:sub_4073b0": "extern char g_4094c0;\n
\n
int sub_4073b0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_4094c0;\n
    v1 = &g_4094c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4223984:sub_4073f0": "extern unsigned int g_40b008;\n
\n
int sub_4073f0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_407340(&g_40b008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4224032:sub_407420": "extern unsigned int g_40a478;\n
\n
int sub_407420(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_407340(&g_40a478);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_407300();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4224096:sub_407460": "int sub_407460()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4224112:sub_407470": "int sub_407470(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4073b0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4224131\n
}\n
", "4224144:sub_407490": "int sub_407490(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4073b0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4224169:sub_4074a9": "int sub_4074a9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224169\n
}\n
", "4224176:sub_4074b0": "int sub_4074b0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4073b0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4073f0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224224:sub_4074e0": "int sub_4074e0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4073b0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407420(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224272:sub_407510": "extern char g_4094c0;\n
\n
int sub_407510(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_4094c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4224336:sub_407550": "int sub_407550(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407510(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4073b0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4224379\n
}\n
", "4224384:sub_407580": "int sub_407580(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407510(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4073b0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4224433:sub_4075b1": "int sub_4075b1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224433\n
}\n
", "4224448:sub_4075c0": "int sub_4075c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4224464:sub_4075d0": "int sub_4075d0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407510(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4073b0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4073f0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224528:sub_407610": "int sub_407610(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407510(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_4073b0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_407420(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4224592:sub_407650": "extern unsigned int g_40a040;\n
extern unsigned int g_40a088;\n
extern unsigned int g_40a08c;\n
extern unsigned int g_40a090;\n
extern unsigned int g_40a47c;\n
extern unsigned int g_40a480;\n
extern unsigned int g_40a484;\n
\n
int sub_407650()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40a040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40a480 = 0;\n
    g_40a090 = g_40a090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_407b10();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40779b;\n
        g_40a484 = g_40a484 | 1;\n
    }\n
LABEL_40779b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40a484 = g_40a484 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40a480 = 1;\n
    g_40a090 = g_40a090 | 2;\n
    g_40a088 = g_40a088 & -2;\n
    g_40a08c = g_40a08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40a480 = 2;\n
        g_40a090 = g_40a090 | 4;\n
        g_40a088 = g_40a088 & -17;\n
        g_40a08c = g_40a08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40a480 = 3;\n
                g_40a090 = g_40a090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40a480 = 5;\n
                    g_40a090 = g_40a090 | 32;\n
                    g_40a088 = g_40a088 & -3;\n
                    g_40a08c = g_40a08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40a480 = 6;\n
                            g_40a090 = g_40a090 | 64;\n
                            g_40a088 = g_40a088 & -37;\n
                            g_40a08c = g_40a08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40a088 = g_40a088 & -16777217;\n
                    g_40a08c = g_40a08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40a47c = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40a088 = ~(v2 | 16777256) & g_40a088;\n
                        g_40a08c = ~(v3) & g_40a08c;\n
                        if (g_40a47c > 1)\n
                        {\n
                            g_40a088 = g_40a088 & -65;\n
                            g_40a08c = g_40a08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4225760:sub_407ae0": "extern unsigned int g_40a094;\n
\n
int sub_407ae0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40a094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4225808:sub_407b10": "extern unsigned int g_40a040;\n
extern unsigned int g_40a080;\n
extern unsigned int g_40a490;\n
extern unsigned int g_40a494;\n
extern unsigned int g_40a49c;\n
extern unsigned int g_40a4a0;\n
extern unsigned int g_40a4a4;\n
extern unsigned int g_40a4e0;\n
extern unsigned short g_40a56c;\n
extern unsigned short g_40a570;\n
extern unsigned short g_40a574;\n
extern unsigned short g_40a578;\n
extern unsigned int g_40a57c;\n
extern unsigned int g_40a580;\n
extern unsigned int g_40a584;\n
extern unsigned int g_40a588;\n
extern unsigned int g_40a58c;\n
extern unsigned int g_40a590;\n
extern unsigned int g_40a594;\n
extern unsigned int g_40a598;\n
extern unsigned short g_40a59c;\n
extern unsigned int g_40a5a0;\n
extern unsigned int g_40a5a4;\n
extern unsigned short g_40a5a8;\n
\n
int sub_407b10()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40a040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40a590 = v7;\n
        g_40a58c = v6;\n
        g_40a588 = v8;\n
        g_40a584 = v9;\n
        g_40a580 = v10;\n
        g_40a57c = v11;\n
        g_40a5a8 = v12;\n
        g_40a59c = v13;\n
        g_40a578 = v14;\n
        g_40a574 = v15;\n
        g_40a570 = v16;\n
        g_40a56c = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40a5a0 = v0;\n
        g_40a594 = v3;\n
        g_40a598 = *(&v4);\n
        g_40a5a4 = &v5;\n
        g_40a4e0 = 65537;\n
        g_40a49c = g_40a598;\n
        g_40a490 = 3221226505;\n
        g_40a494 = 1;\n
        g_40a4a0 = 1;\n
        g_40a4a4 = 2;\n
        v1 = g_40a040;\n
        v2 = g_40a080;\n
        sub_407e50();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4225824:sub_407b20": "extern unsigned int g_40a490;\n
extern unsigned int g_40a494;\n
extern unsigned int g_40a49c;\n
extern unsigned int g_40a4a0;\n
extern unsigned int g_40a4a4;\n
extern unsigned short g_40a56c;\n
extern unsigned short g_40a570;\n
extern unsigned short g_40a574;\n
extern unsigned short g_40a578;\n
extern unsigned int g_40a57c;\n
extern unsigned int g_40a580;\n
extern unsigned int g_40a584;\n
extern unsigned int g_40a588;\n
extern unsigned int g_40a58c;\n
extern unsigned int g_40a590;\n
extern unsigned int g_40a594;\n
extern unsigned int g_40a598;\n
extern unsigned short g_40a59c;\n
extern unsigned int g_40a5a0;\n
extern unsigned int g_40a5a4;\n
extern unsigned short g_40a5a8;\n
\n
int sub_407b20()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40a590 = v4;\n
        g_40a58c = v5;\n
        g_40a588 = v6;\n
        g_40a584 = v7;\n
        g_40a580 = v8;\n
        g_40a57c = v9;\n
        g_40a5a8 = v10;\n
        g_40a59c = v11;\n
        g_40a578 = v12;\n
        g_40a574 = v13;\n
        g_40a570 = v14;\n
        g_40a56c = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40a5a0 = v0;\n
        g_40a594 = v1;\n
        g_40a598 = *(&v2);\n
        g_40a5a4 = &v3;\n
        g_40a49c = g_40a598;\n
        g_40a490 = 3221226505;\n
        g_40a494 = 1;\n
        g_40a4a0 = 1;\n
        g_40a4a4 = v3;\n
        sub_407e50();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4225849:sub_407b39": "int sub_407b39()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4225849\n
}\n
", "4226048:sub_407c00": "extern unsigned int g_40a490;\n
extern unsigned int g_40a494;\n
extern unsigned int g_40a49c;\n
extern unsigned int g_40a4a0;\n
extern unsigned int g_40a4a4;\n
extern char g_40a4a8;\n
extern unsigned short g_40a56c;\n
extern unsigned short g_40a570;\n
extern unsigned short g_40a574;\n
extern unsigned short g_40a578;\n
extern unsigned int g_40a57c;\n
extern unsigned int g_40a580;\n
extern unsigned int g_40a584;\n
extern unsigned int g_40a588;\n
extern unsigned int g_40a58c;\n
extern unsigned int g_40a590;\n
extern unsigned int g_40a594;\n
extern unsigned int g_40a598;\n
extern unsigned short g_40a59c;\n
extern unsigned int g_40a5a0;\n
extern unsigned int g_40a5a4;\n
extern unsigned short g_40a5a8;\n
\n
int sub_407c00()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1059115];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40a590 = v7;\n
        g_40a58c = v8;\n
        g_40a588 = v9;\n
        g_40a584 = v10;\n
        g_40a580 = v11;\n
        g_40a57c = v12;\n
        g_40a5a8 = v13;\n
        g_40a59c = v14;\n
        g_40a578 = v15;\n
        g_40a574 = v16;\n
        g_40a570 = v17;\n
        g_40a56c = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40a5a0 = v0;\n
        g_40a594 = v2;\n
        g_40a598 = *(&v3);\n
        g_40a5a4 = &v4;\n
        g_40a49c = g_40a598;\n
        g_40a490 = 3221226505;\n
        g_40a494 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40a4a0 = v5 + 1;\n
        g_40a4a4 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_40a4a8)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_407e50();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4226073:sub_407c19": "int sub_407c19()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226073\n
}\n
", "4226352:sub_407d30": "int sub_407d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407b20(8);\n
}\n
", "4226395:sub_407d5b": "int sub_407d5b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4226395\n
}\n
", "4226640:sub_407e50": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_407e50(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4226688:sub_407e80": "char sub_407e80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4226704:sub_407e90": "char sub_407e90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4226720:sub_407ea0": "char sub_407ea0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4226736:sub_407eb0": "char sub_407eb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4226752:sub_407ec0": "char sub_407ec0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4226768:sub_407ed0": "int sub_407ed0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4226784:sub_407ee0": "extern unsigned int g_40a480;\n
\n
int sub_407ee0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40a480 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4227092:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4227098:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4227104:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4227110:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4227116:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4227122:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4227128:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4227134:cgc_cos": "int cgc_cos()\n
{\n
    return ::kernel32.dll::cgc_cos();\n
}\n
", "4227140:cgc_sin": "int cgc_sin()\n
{\n
    return ::kernel32.dll::cgc_sin();\n
}\n
", "4227146:sub_40804a": "int sub_40804a(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4227152:sub_408050": "int sub_408050()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4227158:sub_408056": "int sub_408056()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4227164:sub_40805c": "int sub_40805c(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4227170:sub_408062": "int sub_408062(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4227176:sub_408068": "int sub_408068()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4227182:sub_40806e": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40806e(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4227188:sub_408074": "int sub_408074(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4227194:sub_40807a": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40807a(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4227200:sub_408080": "int sub_408080(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4227206:sub_408086": "int sub_408086(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4227212:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4227218:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4227224:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4227230:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4227236:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4227242:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4227248:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4227254:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4227260:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4227266:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4227272:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4227278:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4227284:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4227290:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4227296:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4227302:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4227308:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4227314:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4227320:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4227326:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4227332:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4227338:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4227344:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4227350:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4227356:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4227362:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4227368:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4227374:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4227380:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4227386:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4227392:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4227398:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4227404:sub_40814c": "int sub_40814c()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4227410:sub_408152": "int sub_408152(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_cos": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_sin": null, "5242912:cgc_transmit": null, "5242916:GetCurrentProcess": null, "5242920:GetCurrentProcessId": null, "5242924:GetCurrentThreadId": null, "5242928:GetModuleHandleW": null, "5242932:GetStartupInfoW": null, "5242936:GetSystemTimeAsFileTime": null, "5242940:InitializeSListHead": null, "5242944:IsDebuggerPresent": null, "5242948:IsProcessorFeaturePresent": null, "5242952:QueryPerformanceCounter": null, "5242956:SetUnhandledExceptionFilter": null, "5242960:TerminateProcess": null, "5242964:UnhandledExceptionFilter": null, "5242968:__current_exception": null, "5242972:__current_exception_context": null, "5242976:__std_type_info_destroy_list": null, "5242980:_except_handler4_common": null, "5242984:memset": null, "5242988:__p___argc": null, "5242992:__p___argv": null, "5242996:__p__commode": null, "5243000:__setusermatherr": null, "5243004:_c_exit": null, "5243008:_cexit": null, "5243012:_configthreadlocale": null, "5243016:_configure_narrow_argv": null, "5243020:_controlfp_s": null, "5243024:_crt_at_quick_exit": null, "5243028:_crt_atexit": null, "5243032:_execute_onexit_table": null, "5243036:_exit": null, "5243040:_get_initial_narrow_environment": null, "5243044:_initialize_narrow_environment": null, "5243048:_initialize_onexit_table": null, "5243052:_initterm": null, "5243056:_initterm_e": null, "5243060:_register_onexit_function": null, "5243064:_register_thread_local_exe_atexit_callback": null, "5243068:_seh_filter_dll": null, "5243072:_seh_filter_exe": null, "5243076:_set_app_type": null, "5243080:_set_fmode": null, "5243084:_set_new_mode": null, "5243088:exit": null, "5243092:terminate": null, "6295596:UnresolvableCallTarget": null}