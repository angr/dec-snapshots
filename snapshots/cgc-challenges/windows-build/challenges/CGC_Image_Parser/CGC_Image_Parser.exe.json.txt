{"4198400:sub_401000": "int sub_401000(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 1; a0; a0 -= 1)\n
    {\n
        v0 *= v3;\n
    }\n
    return v0;\n
}\n
", "4198459:sub_40103b": null, "4198464:sub_401040": null, "4198665:sub_401109": null, "4198672:sub_401110": null, "4198849:sub_4011c1": null, "4198864:sub_4011d0": null, "4199072:sub_4012a0": "int sub_4012a0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4199144:sub_4012e8": null, "4199152:sub_4012f0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4012f0(unsigned int v5, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v5 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v5 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v7 = v5;\n
        v5 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v5);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4199361:sub_4013c1": null, "4199376:sub_4013d0": null, "4200258:sub_401742": null, "4200272:sub_401750": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_401750(struct struct_0 **v3, struct struct_0 **a0)\n
{\n
    char <0x401750[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    void* v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp+0xc]\n
    char *v5;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v6;  // [bp+0x14], Other Possible Types: unsigned int\n
    unsigned long v7;  // [bp+0x18]\n
    struct struct_0 **v8;  // [bp+0x20], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp+0x24]\n
    char v10;  // [bp+0x2b]\n
    unsigned int v11;  // [bp+0x2c]\n
    char v12;  // [bp+0x30]\n
    unsigned int v13;  // [bp+0x70], Other Possible Types: char\n
    unsigned int v14;  // [bp+0x74]\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
    struct struct_0 **v17;  // eax\n
    struct struct_0 **v18;  // eax\n
\n
    v1 = &<0x401750[is_2]|Stack bp, 1 B>;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v14 = -1;\n
        return v14;\n
    }\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v14 = v13;\n
            return v14;\n
        }\n
        else if (*(v3) != 64)\n
        {\n
            v2 = *(v3);\n
            sub_4012a0(*(v3));\n
            v3 += 1;\n
            v13 = *(&v13) + 1;\n
        }\n
        else\n
        {\n
            v3 += 1;\n
            v4 = *(v3);\n
            if (!v4)\n
            {\n
                v14 = -1;\n
                return v14;\n
            }\n
            if (v4 == 64)\n
            {\n
                v2 = 64;\n
                sub_4012a0(64);\n
            }\n
            else if (v4 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v11 = *(v15);\n
                v10 = v11;\n
                v2 = v10;\n
                sub_4012a0(v10);\n
            }\n
            else if (v4 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = *(v16);\n
                v2 = v9;\n
                v3 = &v12;\n
                sub_4012f0(v3, a0);\n
                for (v8 = &v12; *(v8); v8 += 1)\n
                {\n
                    v2 = *(v8);\n
                    sub_4012a0(*(v8));\n
                    v13 = *(&v13) + 1;\n
                }\n
            }\n
            else if (v4 == 102)\n
            {\n
                v17 = a0;\n
                a0 = v17 + 2;\n
                *(&v7) = *(&v17);\n
                *(&v2) = *(&v7);\n
                a0 = &v12;\n
                sub_4013d0();\n
                for (v6 = &v12; *(v6); v6 += 1)\n
                {\n
                    v2 = *(v6);\n
                    sub_4012a0(*(v6));\n
                    v13 = *(&v13) + 1;\n
                }\n
            }\n
            else if (v4 == 115)\n
            {\n
                v18 = a0;\n
                a0 = v18 + 1;\n
                for (v5 = &*(v18)->field_0; *(v5); v5 += 1)\n
                {\n
                    v2 = *(v5);\n
                    sub_4012a0(*(v5));\n
                    v13 = *(&v13) + 1;\n
                }\n
            }\n
            else\n
            {\n
                v14 = -1;\n
                return v14;\n
            }\n
            v3 += 1;\n
        }\n
    }\n
}\n
", "4200920:sub_4019d8": null, "4200928:sub_4019e0": "int sub_4019e0(char **v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_401750(v4, v1);\n
    return v0;\n
}\n
", "4200976:sub_401a10": "int sub_401a10(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4201048:sub_401a58": null, "4201056:sub_401a60": "int sub_401a60(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201110:sub_401a96": null, "4201120:sub_401aa0": "int sub_401aa0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201174:sub_401ad6": null, "4201184:sub_401ae0": "int sub_401ae0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_401a60(v3);\n
    return v0 | sub_401aa0(v3);\n
}\n
", "4201230:sub_401b0e": null, "4201232:sub_401b10": "int sub_401b10(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_401ae0(v3);\n
    return v0 | sub_401b40(v3, v0);\n
}\n
", "4201278:sub_401b3e": null, "4201280:sub_401b40": "int sub_401b40(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201334:sub_401b76": null, "4201344:sub_401b80": "int sub_401b80(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4201438:sub_401bde": null, "4201440:sub_401be0": null, "4201480:sub_401c08": null, "4201488:sub_401c10": null, "4201552:sub_401c50": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401c50()\n
{\n
    char <0x401c50[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    struct_0 *v0;  // [bp-0x4]\n
    int tmp_37;  // tmp #37\n
    int tmp_39;  // tmp #39\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp+0x0]\n
    char *v2;  // [bp+0x4], Other Possible Types: unsigned int\n
    unsigned long v3;  // [bp+0x8]\n
    void* v4;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp+0x14]\n
    unsigned long v6;  // [bp+0x18], Other Possible Types: unsigned long long\n
    unsigned long v7;  // [bp+0x20], Other Possible Types: unsigned long long\n
    unsigned long v8;  // [bp+0x28], Other Possible Types: unsigned long long\n
    int v9;  // 168, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // xmm0\n
    int v11;  // xmm0\n
    int v13;  // xmm0\n
    struct_0 *v14;  // ebp\n
\n
    v0 = &<0x401c50[is_2]|Stack bp, 1 B>;\n
    if (!v2)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v9 = 0;\n
        v6 = 4591870180066957722;\n
        v5 = 1;\n
        while (true)\n
        {\n
            v1 = *(v2);\n
            if (!sub_401b80(*(v2)))\n
                break;\n
            v2 += 1;\n
        }\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v2))\n
            {\n
LABEL_401e78:\n
                *(&v9) = v5;\n
                xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE)))\n
                *(&v8) = v13;\n
                break;\n
            }\n
            else\n
            {\n
                if (*(v2) == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_401e51;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_401e51;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v2) == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_401e51;\n
                }\n
                v1 = *(v2);\n
                if (!sub_401b40(*(v2)))\n
                    goto LABEL_401e78;\n
                if (!v4)\n
                {\n
LABEL_401db9:\n
                    v4 = 1;\n
                    v9 = (0 CONCAT *(&v7)) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v2) - 48);\n
                    *(&v7) = v9;\n
                    goto LABEL_401e51;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_401db9;\n
                    if (v4 == 2)\n
                    {\n
                        v10 = *(v2) - 48;\n
                        v11 = v9 * (0 CONCAT *(&v6));\n
                        *(&v7) = v11 + (0 CONCAT *(&v7));\n
                        tmp_37 = DivV(tmp_39, tmp_38);\n
                        v9 = tmp_37;\n
                        *(&v6) = v9;\n
                    }\n
                    else\n
                    {\n
                        *(&v8) = 0;\n
                        break;\n
                    }\n
LABEL_401e51:\n
                    v2 += 1;\n
                }\n
            }\n
        }\n
    }\n
    *(&v3) = *(&v8);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v14 = v0;\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v14 = v0;\n
    return;\n
}\n
", "4202142:sub_401e9e": null, "4202144:sub_401ea0": "int sub_401ea0(char *v7)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; sub_401b80(*(v7)); v7 += 1);\n
    for (v1 = 0; *(v7); v7 += 1)\n
    {\n
        if (*(v7) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v7) != 43)\n
            {\n
                if (!sub_401b40(*(v7)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v7) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = v3 * v2;\n
    return v4;\n
}\n
", "4202525:sub_40201d": null, "4202528:sub_402020": "int sub_402020(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4202634:sub_40208a": null, "4202640:sub_402090": "int sub_402090(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4202731:sub_4020eb": null, "4202736:sub_4020f0": "int sub_4020f0(char *v4, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v5 = v4;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!a1)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v5 = v1;\n
            if (v5 >= a1)\n
                break;\n
            v0[v1] = a0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4202849:sub_402161": null, "4202864:sub_402170": "int sub_402170(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v5 = v4;\n
    v0 = v5;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!a0)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v5 = v1;\n
            if (v5 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4202972:sub_4021dc": null, "4202976:sub_4021e0": "int sub_4021e0(char *v6, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = v6;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v2) == *(v1))\n
                v0 = a1;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
        a1 -= 1;\n
    }\n
    v2 -= 1;\n
    v1 -= 1;\n
    v3 = *(v2) - *(v1);\n
    return v3;\n
}\n
", "4203176:sub_4022a8": null, "4203184:sub_4022b0": "int sub_4022b0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(v4) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4203292:sub_40231c": null, "4203296:sub_402320": "int sub_402320(char *v7, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v0 = v7;\n
    v3 = sub_4023e0();\n
    if (v7 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v7[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v7[v2 + v3] = 0;\n
        v4 = v7;\n
        return v4;\n
    }\n
    v4 = v7;\n
    return v4;\n
}\n
", "4203477:sub_4023d5": null, "4203488:sub_4023e0": "int sub_4023e0(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
        return v0;\n
    for (v0 = 0; *((v3 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4203565:sub_40242d": null, "4203568:sub_402430": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402430(unsigned int v6, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            return v3;\n
        *((v6 + v3)) = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1 != a0)\n
        {\n
            *((v6 + v3)) = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            return v3;\n
        }\n
    }\n
}\n
", "4203740:sub_4024dc": null, "4203744:sub_4024e0": "int sub_4024e0(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (v4 && a0)\n
    {\n
        for (v0 = sub_4023e0(v4); *((a0 + v1)); v1 += 1)\n
        {\n
            v4[v0] = *((a0 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4203883:sub_40256b": null, "4203888:sub_402570": "int sub_402570(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v5)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v5 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v5 + v2)) = 0;\n
    return v2;\n
}\n
", "4204087:sub_402637": null, "4204096:sub_402640": "int sub_402640(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    return cgc_transmit(1, v4, sub_4023e0(v4));\n
}\n
", "4204160:sub_402680": "int sub_402680(unsigned int v8[7], char *a0, unsigned int a1, unsigned int a2, char a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v11;  // eax\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (a0)\n
    {\n
        v0 = v8[6] - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            v4 = v8[4] * -(a2) + a1;\n
            break;\n
        case 1:\n
            v4 = v8[4] * -(a2) + v8[4] - 1 + a1;\n
            break;\n
        case 2:\n
            v4 = v8[4] * (v8[5] - 1 - a2) + a1;\n
            break;\n
        case 3:\n
            v4 = v8[4] * (v8[5] - 1 - a2) + v8[4] - 1 + a1;\n
            break;\n
        case 6:\n
            v9 = v8[4];\n
            v3 = (v9 >> 31 CONCAT v9) /m 2;\n
            v11 = v8[5];\n
            v2 = (v11 >> 31 CONCAT v11) /m 2;\n
            v1 = v8[4] * v2 + v3;\n
            v4 = v1 + v8[4] * -(a2) + a1;\n
            break;\n
        default:\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (v4 > v8[5] * v8[4])\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        a0[v4] = a3;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4204544:sub_402800": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_402800(struct_0 *v16)\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0xa0]\n
    void* v2;  // [bp-0x9c], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x98]\n
    char v4;  // [bp-0x93]\n
    void* v5;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v9;  // [bp-0x24]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x18]\n
    char v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0x4]\n
    char v15;  // [bp+0x0]\n
    unsigned int v17;  // eax\n
    char *v19;  // eax\n
    unsigned int v21;  // eax\n
    char *v23;  // eax\n
\n
    v14 = &v15;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    memcpy(&v4, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Checksum failed\\n
\");\n
    if (!v16)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_402cd0())\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_402df0())\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_402e70())\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_402f10())\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_402fd0(v16))\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_403060(v16, 1))\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!sub_403140())\n
    {\n
        sub_4019e0(\"[ERROR] Checksum failed\\n
\");\n
        v13 = 0;\n
        return v13;\n
    }\n
    else\n
    {\n
        v1 = v16->field_18 - 1;\n
        switch (v1)\n
        {\n
        case 0:\n
            v8 = 0;\n
            v7 = -(v16->field_14) + 1;\n
            v5 = v16->field_10 - 1;\n
            v6 = 0;\n
            break;\n
        case 1:\n
            v8 = -(v16->field_10) + 1;\n
            v7 = -(v16->field_14) + 1;\n
            v5 = 0;\n
            v6 = 0;\n
            break;\n
        case 2:\n
            v8 = 0;\n
            v7 = 0;\n
            v5 = v16->field_10 - 1;\n
            v6 = v16->field_14 + 1;\n
            break;\n
        case 3:\n
            v8 = -(v16->field_10) + 1;\n
            v7 = 0;\n
            v5 = 0;\n
            v6 = v16->field_14 + 1;\n
            break;\n
        case 6:\n
            v17 = -(v16->field_10);\n
            v8 = (v17 >> 31 CONCAT v17) /m 2;\n
            v19 = v16->field_14;\n
            v6 = (v19 >> 31 CONCAT v19) /m 2;\n
            v21 = v16->field_10;\n
            v0 = (v21 >> 31 CONCAT v21) /m 2;\n
            v5 = v0 - ((v16->field_10 + 1 >> 31 CONCAT v16->field_10 + 1) /m 2 >> 32);\n
            v23 = v16->field_14;\n
            v7 = -((v23 >> 31 CONCAT v23) /m 2 - ((v16->field_14 + 1 >> 31 CONCAT v16->field_14 + 1) /m 2 >> 32));\n
            break;\n
        default:\n
            v13 = 0;\n
            return v13;\n
        }\n
        v3 = v16->field_14 * v16->field_10;\n
        if (cgc_allocate(v3 + 1, 0))\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        sub_4020f0(*(&v9), 32, v3);\n
        v3[*(&v9)] = 0;\n
        while (true)\n
        {\n
            if (!sub_403250(v16, &v12, &v11))\n
            {\n
                for (v2 = 0; v2 < v3; v2 += 1)\n
                {\n
                    if (!(v2 >> 31 CONCAT v2) /m v16->field_10 >> 32 && v2)\n
                        sub_4019e0(\"\\n
\");\n
                    sub_4019e0(\"@c\");\n
                }\n
                sub_4019e0(\"\\n
\");\n
                v13 = 1;\n
                return v13;\n
            }\n
            if (*(&v12) < v8)\n
            {\n
LABEL_402b81:\n
                sub_4019e0(\"X out of bounds\\n
\");\n
                v13 = 0;\n
                return v13;\n
            }\n
            if (!(*(&v12) <= v5))\n
                goto LABEL_402b81;\n
            if (*(&v11) < v7)\n
            {\n
LABEL_402bb3:\n
                sub_4019e0(\"Y out of bounds\\n
\");\n
                v13 = 0;\n
                return v13;\n
            }\n
            if (!(*(&v11) <= v6))\n
                goto LABEL_402bb3;\n
            if (!sub_402680(v16, *(&v9), *(&v12), *(&v11), *(&v10)))\n
            {\n
                sub_4019e0(\"pixel placement failed\\n
\");\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
    }\n
}\n
", "4205761:sub_402cc1": null, "4205776:sub_402cd0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402cd0(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (sub_403490(v5))\n
    {\n
        v0 = &v1;\n
        if (!sub_403060(v5, 32))\n
        {\n
            v1 = 0;\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (v1 >> 24 != 222)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1 >> 16 != 182)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1 >> 8 != 217)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1 == 85)\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    else\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
}\n
", "4206051:sub_402de3": null, "4206064:sub_402df0": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_402df0(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_403490(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (!sub_403060(v5, 6))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v5->field_10 = *(&v1);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4206183:sub_402e67": null, "4206192:sub_402e70": "typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402e70(struct_1 *v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (sub_403490(v5))\n
    {\n
        v0 = &v1;\n
        if (!sub_403060(v5, 6))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v5->field_14 = v1;\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
}\n
", "4206339:sub_402f03": null, "4206352:sub_402f10": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int sub_402f10(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (sub_403490(v5))\n
    {\n
        v0 = &v1;\n
        if (!sub_403060(v5, 3))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*(&v1) != 5 && *(&v1) != 6 && *(&v1))\n
        {\n
            v5->field_18 = *(&v1);\n
            v2 = *(&v1);\n
            return v2;\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4206535:sub_402fc7": null, "4206544:sub_402fd0": "typedef struct struct_1 {\n
    char padding_0[28];\n
    unsigned short field_1c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402fd0(struct_1 *v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!sub_403490(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (!sub_403060(v5, 16))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v5->field_1c = v1;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4206678:sub_403056": null, "4206688:sub_403060": "int sub_403060(unsigned int v4[4], unsigned int a0, unsigned int *a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[4];  // eax\n
\n
    v2 = &v3;\n
    if (a0 > 32)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v4 && a1)\n
    {\n
        for (v0 = 0; a0; a0 -= 1)\n
        {\n
            v0 = v0 * 2 | *((v4[0] + v4[2])) >> ((7 - v4[3]) & 31) & 1;\n
            v4[3] = (v4[3] + 1 >> 31 CONCAT v4[3] + 1) /m 8 >> 32;\n
            if (!v4[3])\n
            {\n
                v5 = v4;\n
                v5[2] = v5[2] + 1;\n
            }\n
        }\n
        *(a1) = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4206906:sub_40313a": null, "4206912:sub_403140": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[12];\n
    unsigned short field_1c;\n
} struct_0;\n
\n
int sub_403140(struct_0 *v7)\n
{\n
    unsigned short *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0xe]\n
    unsigned short *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!v7->field_c)\n
    {\n
        v1 = v7->field_4 - v7->field_8;\n
        if ((v1 >> 31 CONCAT v1) /m 2 >> 32)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = v7->field_0 + v7->field_8;\n
        v8 = v1;\n
        for (v1 = (v8 >> 31 CONCAT v8) /m 2; v0 < v1; v0 += 1)\n
        {\n
            v2 += *((v3 + v0 * 2));\n
        }\n
        if (v2 == v7->field_1c)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        sub_4019e0(\"[ERROR] Checksum failed\\n
\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4207176:sub_403248": null, "4207184:sub_403250": "int sub_403250(unsigned int v8[4], unsigned int *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403490(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403060(v8, 1, &v4))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403490(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403060(v8, 6, &v3))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403490(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403060(v8, 1, &v2))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403490(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403060(v8, 6, &v1))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403490(v8))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!sub_403060(v8, 7, &v0))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v0 <= 94)\n
    {\n
        if (v4)\n
            v3 *= -1;\n
        if (v2)\n
            v1 *= -1;\n
        *(a0) = v3;\n
        *(a1) = v1;\n
        *(a2) = v0 + 32;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4207757:sub_40348d": null, "4207760:sub_403490": "int sub_403490(unsigned int v6[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v6[0])\n
    {\n
        v2 = v6[1] * 8;\n
        v1 = v6[2] * 8;\n
        v1 = v6[3] + v1;\n
        v0 = v2 - v1;\n
        if (a0 <= v0)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4207904:sub_403520": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
int sub_403520(struct_0 *v10, unsigned int a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    char *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v5;  // [bp-0xd]\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
\n
    v8 = &v9;\n
    v6 = 0;\n
    v5 = 0;\n
    if (!v10)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (a2)\n
    {\n
        if (a5 == 1)\n
        {\n
            v6 = a3 * -(a1) + a0;\n
        }\n
        else if (a5 == 2)\n
        {\n
            v6 = a3 * -(a1) + a3 - 1 + a0;\n
        }\n
        else if (a5 == 3)\n
        {\n
            v6 = a3 * (a4 - 1 - a1) + a0;\n
        }\n
        else if (a5 == 4)\n
        {\n
            v6 = a3 * (a4 - 1 - a1) + a3 - 1 + a0;\n
        }\n
        else if (a5 == 7)\n
        {\n
            v11 = a3;\n
            v4 = (v11 >> 31 CONCAT v11) /m 2;\n
            v13 = a4;\n
            v3 = (v13 >> 31 CONCAT v13) /m 2;\n
            v2 = a3 * v3 + v4;\n
            v6 = v2 + a3 * -(a1) + a0;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        if (!v10->field_10)\n
        {\n
            v5 = 46;\n
        }\n
        else if (v10->field_10 == 1)\n
        {\n
            v5 = 42;\n
        }\n
        else if (v10->field_10 == 2)\n
        {\n
            v5 = 35;\n
        }\n
        else if (v10->field_10 == 3)\n
        {\n
            v5 = 43;\n
        }\n
        if (v6 <= a4 * a3)\n
        {\n
            a2[v6] = v5;\n
            v7 = 1;\n
            return v7;\n
        }\n
        v0 = v6;\n
        v1 = a4 * a3;\n
        sub_4019e0(\"[ERROR] Pixel beyond image: @d > @d\\n
\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4208437:sub_403735": null, "4208448:sub_403740": "int sub_403740(void* v19)\n
{\n
    char *v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x44], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x40]\n
    void* v6;  // [bp-0x3c]\n
    void* v7;  // [bp-0x38]\n
    void* v8;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x28], Other Possible Types: unsigned int\n
    char *v12;  // [bp-0x24]\n
    char *v13;  // [bp-0x20]\n
    char *v14;  // [bp-0x1c]\n
    char *v15;  // [bp-0x18]\n
    char *v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
    char *v20;  // eax\n
    char *v22;  // eax\n
    char *v24;  // eax\n
    char *v26;  // eax\n
\n
    v17 = &v18;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v19)\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (sub_403bd0())\n
    {\n
        v15 = sub_403c60();\n
        if (!v15)\n
        {\n
            v16 = v15;\n
            return v16;\n
        }\n
        v14 = sub_403ce0();\n
        if (!v14)\n
        {\n
            v16 = v14;\n
            return v16;\n
        }\n
        else if (sub_403d60(v19))\n
        {\n
            v12 = sub_403e10();\n
            if (!v12)\n
            {\n
                v16 = v12;\n
                return v16;\n
            }\n
            else if (!sub_403e90(v19))\n
            {\n
                v16 = 0;\n
                return v16;\n
            }\n
            else if (sub_403f40(v19, 15))\n
            {\n
                v2 = v12 + 1;\n
                switch (v2)\n
                {\n
                case 0:\n
                    v11 = 0;\n
                    v10 = -(v14) + 1;\n
                    v8 = v15 + 1;\n
                    v9 = 0;\n
                    break;\n
                case 1:\n
                    v11 = -(v15) + 1;\n
                    v10 = -(v14) + 1;\n
                    v8 = 0;\n
                    v9 = 0;\n
                    break;\n
                case 2:\n
                    v11 = 0;\n
                    v10 = 0;\n
                    v8 = v15 + 1;\n
                    v9 = v14 + 1;\n
                    break;\n
                case 3:\n
                    v11 = -(v15) + 1;\n
                    v10 = 0;\n
                    v8 = 0;\n
                    v9 = v14 + 1;\n
                    break;\n
                case 6:\n
                    v20 = -(v15);\n
                    v11 = (v20 >> 31 CONCAT v20) /m 2;\n
                    v22 = v14;\n
                    v9 = (v22 >> 31 CONCAT v22) /m 2;\n
                    v24 = v15;\n
                    v1 = (v24 >> 31 CONCAT v24) /m 2;\n
                    v8 = v1 - ((v15 + 1 >> 31 CONCAT v15 + 1) /m 2 >> 32);\n
                    v26 = v14;\n
                    v10 = -((v26 >> 31 CONCAT v26) /m 2 - ((v14 + 1 >> 31 CONCAT v14 + 1) /m 2 >> 32));\n
                    break;\n
                default:\n
                    sub_4019e0(\"[ERROR] Invalid FPTI Axis Type\\n
\");\n
                    v16 = 0;\n
                    return v16;\n
                }\n
                v4 = v14 * v15;\n
                if (cgc_allocate(v4 + 1, 0))\n
                {\n
                    v16 = 0;\n
                    return v16;\n
                }\n
                sub_4020f0(v5, 32, v4);\n
                v5[v4] = 0;\n
                while (true)\n
                {\n
                    if (!sub_4040f0(v19, &v7))\n
                    {\n
                        for (v3 = 0; v3 < v4; v3 += 1)\n
                        {\n
                            if (!(v3 >> 31 CONCAT v3) /m v15 >> 32 && v3)\n
                                sub_4019e0(\"\\n
\");\n
                            sub_4019e0(\"@c\");\n
                        }\n
                        sub_4019e0(\"\\n
\");\n
                        v16 = 1;\n
                        return v16;\n
                    }\n
                    if (v7 < v11)\n
                        break;\n
                    if (v7 > v8)\n
                        break;\n
                    if (v6 < v10 && v6 > v9)\n
                    {\n
                        sub_4019e0(\"Y out of bounds: @d\\n
\");\n
                        v16 = 0;\n
                        return v16;\n
                    }\n
                    v0 = v12;\n
                    if (!sub_403520(v19, v7, v6, v5, v15, v14, v0))\n
                    {\n
                        v16 = 0;\n
                        return v16;\n
                    }\n
                }\n
                sub_4019e0(\"X out of bounds: @d\\n
\");\n
                v16 = 0;\n
                return v16;\n
            }\n
            else\n
            {\n
                v16 = 0;\n
                return v16;\n
            }\n
        }\n
        else\n
        {\n
            v13 = 0;\n
            v16 = v13;\n
            return v16;\n
        }\n
    }\n
    else\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
}\n
", "4209616:sub_403bd0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403bd0(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!sub_403e90(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (!sub_403f40(v5, 32))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v1 == 617082501)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4209759:sub_403c5f": null, "4209760:sub_403c60": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403c60(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        return v1;\n
    }\n
    else if (!sub_403e90(v4))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = &v1;\n
        if (!sub_403f40(v4, 6))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4209884:sub_403cdc": null, "4209888:sub_403ce0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403ce0(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        return v1;\n
    }\n
    else if (!sub_403e90(v4))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = &v1;\n
        if (!sub_403f40(v4, 6))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4210012:sub_403d5c": null, "4210016:sub_403d60": "typedef struct struct_1 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403d60(struct_1 *v6, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = sub_403e90(v6);\n
    if (!v1)\n
    {\n
        v3 = v1;\n
        return v3;\n
    }\n
    v0 = &v2;\n
    v1 = sub_403f40(v6, 2);\n
    if (!v1)\n
    {\n
        v3 = v1;\n
        return v3;\n
    }\n
    *(a0) = v2;\n
    v6->field_10 = v2;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4210190:sub_403e0e": null, "4210192:sub_403e10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403e10(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (!v4)\n
        return v1;\n
    v1 = sub_403e90(v4);\n
    if (!v1)\n
        return v1;\n
    v0 = &v1;\n
    if (!sub_403f40(v4, 3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4210320:sub_403e90": "int sub_403e90(unsigned int v5[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!v5[0])\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 <= 32)\n
    {\n
        v1 = v5[1] * 8;\n
        v0 = v5[2] * 8 + v5[3] + a0;\n
        if (v1 < v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210486:sub_403f36": null, "4210496:sub_403f40": "int sub_403f40(unsigned int v7[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[4];  // eax\n
    unsigned int v9[4];  // eax\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 > 32)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!sub_403e90(v7, a0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v1 > a0)\n
    {\n
        v0 = *((v7[0] + v7[2])) >> ((v1 - a0) & 31);\n
        v2 = v0 & sub_401000(2, a0) - 1;\n
        v7[3] = (v7[3] + a0 >> 31 CONCAT v7[3] + a0) /m 8 >> 32;\n
        if (!v7[3])\n
        {\n
            v9 = v7;\n
            v9[2] = v9[2] + 1;\n
        }\n
        *(a1) = v2;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        for (v1 = 8 - v7[3]; v3 < a0; v3 += 1)\n
        {\n
            v1 = *((v7[0] + v7[2]));\n
            v1 = v1 >> ((7 - v7[3]) & 31) & 1;\n
            v2 = v2 * 2 | v1;\n
            v7[3] = (v7[3] + 1 >> 31 CONCAT v7[3] + 1) /m 8 >> 32;\n
            if (!v7[3])\n
            {\n
                v8 = v7;\n
                v8[2] = v8[2] + 1;\n
            }\n
        }\n
        *(a1) = v2;\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4210920:sub_4040e8": null, "4210928:sub_4040f0": "int sub_4040f0(unsigned int v7[4], unsigned int *a0, unsigned int *a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v7)\n
        return v4;\n
    if (!(a0 && a1))\n
        return v4;\n
    if (!sub_403e90(v7, 14))\n
    {\n
        return v4;\n
    }\n
    else if (!sub_403f40(v7, 1, &v1))\n
    {\n
        return v4;\n
    }\n
    else if (!sub_403f40(v7, 6, &v2))\n
    {\n
        return v4;\n
    }\n
    else if (!sub_403f40(v7, 1, &v0))\n
    {\n
        return v4;\n
    }\n
    else if (!sub_403f40(v7, 6, &v3))\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        if (v1 == 1)\n
            v2 *= -1;\n
        if (v0 == 1)\n
            v3 *= -1;\n
        *(a0) = v2;\n
        *(a1) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4211280:sub_404250": "int sub_404250(char *v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
    unsigned int v11;  // eax\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v9 = a3;\n
    v3 = (v9 >> 31 CONCAT v9) /m 2;\n
    v11 = a4;\n
    v2 = (v11 >> 31 CONCAT v11) /m 2;\n
    v1 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = a2 - 1;\n
    switch (v0)\n
    {\n
    case 0:\n
        v4 = a3 * a1 * -1 + a0;\n
        break;\n
    case 1:\n
        v4 = a3 * a1 * -1 + a3 - 1 + a0;\n
        break;\n
    case 2:\n
        v4 = a3 * (a4 - 1 - a1) + a0;\n
        break;\n
    case 3:\n
        v4 = a3 * (a4 - 1 - a1) + a3 - 1 + a0;\n
        break;\n
    case 6:\n
        v1 = a3 * v2 + v3;\n
        v4 = v1 + a3 * -(a1) + a0;\n
        break;\n
    default:\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (v4 <= a4 * a3)\n
    {\n
        v8[v4] = 46;\n
        v5 = 1;\n
        return v5;\n
    }\n
    sub_4019e0(\"[ERROR] Pixel beyond image border\\n
\");\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211617:sub_4043a1": null, "4211632:sub_4043b0": "int sub_4043b0(unsigned int v22)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x54], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x50], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x4c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x48], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x44]\n
    void* v8;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x3c], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x38], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v14;  // [bp-0x28]\n
    void* v15;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v18;  // [bp-0x18]\n
    unsigned int v19;  // [bp-0x14]\n
    unsigned int v20;  // [bp-0x4]\n
    char v21;  // [bp+0x0]\n
    unsigned int v23;  // eax\n
    unsigned int v25;  // eax\n
    char *v27;  // eax\n
    char *v29;  // eax\n
\n
    v20 = &v21;\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!sub_404940())\n
    {\n
        sub_4019e0(\"RPTI magic fail\\n
\");\n
        v19 = 0;\n
        return v19;\n
    }\n
    v15 = sub_404a40();\n
    if (!v15)\n
    {\n
        sub_4019e0(\"rpti xlen fail\\n
\");\n
        v19 = 0;\n
        return v19;\n
    }\n
    v14 = sub_404ac0();\n
    if (!v14)\n
    {\n
        sub_4019e0(\"rpti ylen fail\\n
\");\n
        v19 = 0;\n
        return v19;\n
    }\n
    else if (!sub_404b10(v22))\n
    {\n
        sub_4019e0(\"rpti initx fail\\n
\");\n
        v19 = 0;\n
        return v19;\n
    }\n
    else if (sub_404c00(v22))\n
    {\n
        v16 = sub_404cf0();\n
        if (!v16)\n
        {\n
            sub_4019e0(\"axis type fail\\n
\");\n
            v19 = 0;\n
            return v19;\n
        }\n
        else if (sub_404d80(v22))\n
        {\n
            v1 = v16 - 1;\n
            switch (v1)\n
            {\n
            case 0:\n
                v9 = 0;\n
                v8 = -(v14) + 1;\n
                v11 = v15 - 1;\n
                v10 = 0;\n
                break;\n
            case 1:\n
                v9 = -(v15) + 1;\n
                v8 = -(v14) + 1;\n
                v11 = 0;\n
                v10 = 0;\n
                break;\n
            case 2:\n
                v9 = 0;\n
                v8 = 0;\n
                v11 = v15 - 1;\n
                v10 = v14 + 1;\n
                break;\n
            case 3:\n
                v9 = -(v15) + 1;\n
                v8 = 0;\n
                v11 = 0;\n
                v10 = v14 + 1;\n
                break;\n
            case 6:\n
                v23 = v15;\n
                v0 = (v23 >> 31 CONCAT v23) /m 2;\n
                v11 = v0 - ((v15 + 1 >> 31 CONCAT v15 + 1) /m 2 >> 32);\n
                v25 = -(v15);\n
                v9 = (v25 >> 31 CONCAT v25) /m 2;\n
                v27 = v14;\n
                v8 = -((v27 >> 31 CONCAT v27) /m 2 - ((v14 + 1 >> 31 CONCAT v14 + 1) /m 2 >> 32));\n
                v29 = v14;\n
                v10 = (v29 >> 31 CONCAT v29) /m 2;\n
                break;\n
            default:\n
                sub_4019e0(\"type switch fail\\n
\");\n
                v19 = 0;\n
                return v19;\n
            }\n
            v17 = v14 * v15;\n
            if (cgc_allocate(v17 + 1, 0))\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            sub_4020f0(v18, 32, v17);\n
            v18[v17] = 0;\n
            while (true)\n
            {\n
                if (!sub_404e40(v22))\n
                {\n
                    for (v2 = 0; v2 < v17; v2 += 1)\n
                    {\n
                        if (!(v2 >> 31 CONCAT v2) /m v15 >> 32 && v2)\n
                            sub_4019e0(\"\\n
\");\n
                        sub_4019e0(\"@c\");\n
                    }\n
                    cgc_deallocate(v18);\n
                    sub_4019e0(\"\\n
\");\n
                    v19 = 1;\n
                    return v19;\n
                }\n
                v6 = v7 >> 7;\n
                v5 = v7 & 127;\n
                if ((v6 & 64))\n
                    v6 = (v6 & 63) * -1;\n
                if ((v5 & 64))\n
                    v5 = (v5 & 63) * -1;\n
                v4 = v13 + v6;\n
                v3 = v12 + v5;\n
                if (v4 < v9)\n
                {\n
LABEL_4047ae:\n
                    sub_4019e0(\"X out of bounds\\n
\");\n
                    cgc_deallocate(v18);\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (!(v4 <= v11))\n
                    goto LABEL_4047ae;\n
                if (v3 < v8)\n
                {\n
LABEL_4047f5:\n
                    sub_4019e0(\"Y out of bounds\\n
\");\n
                    cgc_deallocate(v18);\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (!(v3 <= v10))\n
                    goto LABEL_4047f5;\n
                if (!sub_404250(v18, v4, v3, v16, v15, v14))\n
                {\n
                    cgc_deallocate(v18);\n
                    sub_4019e0(\"add pixel fail\\n
\");\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                v13 = v4;\n
                v12 = v3;\n
            }\n
        }\n
        else\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
    }\n
    else\n
    {\n
        sub_4019e0(\"rpti inity fail\\n
\");\n
        v19 = 0;\n
        return v19;\n
    }\n
}\n
", "4213045:sub_404935": null, "4213056:sub_404940": "int sub_404940(unsigned int v4[4])\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v4[0])\n
    {\n
        if (!v4[2] && !v4[3])\n
        {\n
            if (sub_405040(v4))\n
            {\n
                sub_401a10(&v0, v4[0], 4);\n
                if (v0 != 3276868051)\n
                {\n
                    v1 = 0;\n
                    return v1;\n
                }\n
                else if (sub_404d80(v4))\n
                {\n
                    v1 = 1;\n
                    return v1;\n
                }\n
                else\n
                {\n
                    v1 = 0;\n
                    return v1;\n
                }\n
            }\n
            else\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4213304:sub_404a38": null, "4213312:sub_404a40": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404a40(unsigned int *v5)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*(v5))\n
    {\n
        v0 = &v1;\n
        if (!sub_404f30(v5, 6))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4213435:sub_404abb": null, "4213440:sub_404ac0": "int sub_404ac0(unsigned int v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!sub_404f30(v4, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4213517:sub_404b0d": null, "4213520:sub_404b10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404b10(unsigned int *v6, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!*(v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v1;\n
        if (!sub_404f30(v6, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = &v2;\n
        if (!sub_404f30(v6, 6))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1 == 1)\n
            v2 *= -1;\n
        *(a0) = v2;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4213748:sub_404bf4": null, "4213760:sub_404c00": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404c00(unsigned int *v6, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!*(v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v1;\n
        if (!sub_404f30(v6, 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = &v2;\n
        if (!sub_404f30(v6, 6))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1 == 1)\n
            v2 *= -1;\n
        *(a0) = v2;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4213988:sub_404ce4": null, "4214000:sub_404cf0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404cf0(unsigned int *v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        return v1;\n
    }\n
    else if (!*(v4))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = &v1;\n
        if (!sub_404f30(v4, 3))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!(v1 > 4 && v1 < 7))\n
            return v1;\n
        v1 = 0;\n
    }\n
}\n
", "4214135:sub_404d77": null, "4214144:sub_404d80": "int sub_404d80(unsigned int v5[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    unsigned int v7[4];  // eax\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v5[0])\n
    {\n
        v0 = a0;\n
        if (!sub_405040(v5))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v6 = v5[3] + a0;\n
        v1 = (v6 >> 31 CONCAT v6) /m 8;\n
        if (v1 > 0)\n
        {\n
            v7 = v5;\n
            v7[2] = v1 + v7[2];\n
        }\n
        v5[3] = (v5[3] + a0 >> 31 CONCAT v5[3] + a0) /m 8 >> 32;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4214328:sub_404e38": null, "4214336:sub_404e40": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404e40(unsigned int *v7, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!*(v7))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v3;\n
        if (!sub_404f30(v7, 7))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (!sub_404f30(v7, 7))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v1 = v3 * 128 | v2;\n
        *(a0) = v1;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4214566:sub_404f26": null, "4214576:sub_404f30": "int sub_404f30(unsigned int v6[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[4];  // eax\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0 > 32)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (sub_405040(v6))\n
    {\n
        for (v0 = a0; a0; a0 -= 1)\n
        {\n
            v1 = *((v6[0] + v6[2]));\n
            v1 = (v1 >> ((7 - v6[3]) & 31)) & 1;\n
            v6[3] = (v6[3] + 1 >> 31 CONCAT v6[3] + 1) /m 8 >> 32;\n
            if (!v6[3])\n
            {\n
                v7 = v6;\n
                v7[2] = v7[2] + 1;\n
            }\n
            v2 = v2 * 2 | v1;\n
        }\n
        *(a1) = v2;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4214839:sub_405037": null, "4214848:sub_405040": "int sub_405040(unsigned int v3[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!v3)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!v3[0])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if ((v3[1] << 3) - ((v3[2] << 3) + v3[3]) < a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4214976:sub_4050c0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4050c0(unsigned int *v7)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v2;\n
    if (cgc_receive(0, &v3, 2))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3 > 0x800)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!cgc_allocate(v3, 0))\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, v1, v3))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 == v3)\n
        {\n
            *(v7) = v1;\n
            v4 = v2;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4215261:sub_4051dd": null, "4215264:sub_4051e0": "int sub_4051e0(unsigned int v16[6])\n
{\n
    char v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0xa4]\n
    char v2;  // [bp-0x88]\n
    unsigned int v3;  // [bp-0x84]\n
    char v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x54]\n
    unsigned int v6;  // [bp-0x48], Other Possible Types: char\n
    unsigned int v7;  // [bp-0x44]\n
    char v8;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    char v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v14;  // [bp-0x4]\n
    char v15;  // [bp+0x0]\n
\n
    v14 = &v15;\n
    if (!v16)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!v16[5])\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (v16[4] >= 4)\n
    {\n
        v11 = v16[5];\n
        v10 = v16[4];\n
        sub_401a10(&v12, v11, 4);\n
        if (*(&v12) == 1440331486)\n
        {\n
            sub_4020f0(&v8, 0, 32);\n
            v8 = v11;\n
            v9 = v10;\n
            if (!sub_402800(&v8))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 2247018276)\n
        {\n
            sub_4020f0(&v6, 0, 20);\n
            v6 = v11;\n
            v7 = v10;\n
            if (!sub_403740(&v6))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 3276868051)\n
        {\n
            sub_4020f0(&v4, 0, 16);\n
            *(&v4) = v11;\n
            v5 = v10;\n
            if (!sub_4043b0(&v4))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 1994376368)\n
        {\n
            sub_4020f0(&v2, 0, 48);\n
            *(&v2) = v11;\n
            v3 = v10;\n
            if (!sub_4067c0(&v2, 0))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) != 823089611)\n
        {\n
            sub_4019e0(\"[ERROR] Unknown Format\\n
\");\n
        }\n
        else\n
        {\n
            sub_4020f0(&v0, 0, 32);\n
            *(&v0) = v11;\n
            v1 = v10;\n
            if (!sub_407000(&v0, 0))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        v13 = 1;\n
        return v13;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
}\n
", "4215920:sub_405470": "int sub_405470()\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44], Other Possible Types: char\n
    char v4;  // [bp-0x40]\n
    char v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x18], Other Possible Types: char\n
    char v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
\n
    v11 = &v12;\n
    v9 = 0;\n
    v8 = 0;\n
    sub_402170(&v5, 28);\n
    while (true)\n
    {\n
        sub_4019e0(\"1- Upload Image\\n
\");\n
        sub_4019e0(\"2- List Images\\n
\");\n
        sub_4019e0(\"3- Remove Image\\n
\");\n
        sub_4019e0(\"4- Display Image\\n
\");\n
        sub_4019e0(\"5- Leave\\n
\");\n
        sub_4019e0(\"} \");\n
        v9 = 0;\n
        if (!sub_402430(&v9, 10, 2))\n
        {\n
            sub_4019e0(\"[ERROR] Failed to read choice\\n
\");\n
            v10 = 0;\n
            return v10;\n
        }\n
        v9 -= 48;\n
        v1 = v9 - 1;\n
        switch (v1)\n
        {\n
        case 0:\n
            if (cgc_allocate(28, 0))\n
            {\n
                sub_4019e0(\"[ERROR] Failed to allocate buffer\\n
\");\n
                v10 = 0;\n
                return v10;\n
            }\n
            sub_4020f0(v3, 0, 28);\n
            sub_4019e0(\"Image Name: \");\n
            if (!sub_402430(*(&v3), 10, 15))\n
            {\n
                sub_4019e0(\"[ERROR] Receive name failed\\n
\");\n
                cgc_deallocate(v3);\n
                v10 = 0;\n
                return v10;\n
            }\n
            v0 = &v7;\n
            if (cgc_receive(0, &v8, 2))\n
            {\n
                sub_4019e0(\"[ERROR] Receive length failed\\n
\");\n
                cgc_deallocate(v3);\n
                v10 = 0;\n
                return v10;\n
            }\n
            if (v8 <= 0x800)\n
            {\n
                if (cgc_allocate(v8 + 1, 0))\n
                {\n
                    sub_4019e0(\"[ERROR] Failed to allocate image buffer\\n
\");\n
                    cgc_deallocate(v3);\n
                    v10 = 0;\n
                    return v10;\n
                }\n
                v0 = &v7;\n
                if (cgc_receive(0, *((*(&v3) + 20)), v8))\n
                {\n
                    sub_4019e0(\"[ERROR] Failed to receive image data\\n
\");\n
                    cgc_deallocate(*((v3 + 20)));\n
                    cgc_deallocate(v3);\n
                    v10 = 0;\n
                    return v10;\n
                }\n
                *((*(&v3) + 16)) = v8;\n
                *((*(&v3) + 24)) = *(&v6);\n
                v6 = *(&v3);\n
                v3 = 0;\n
                break;\n
            }\n
            else\n
            {\n
                sub_4019e0(\"[ERROR] Image length to large\\n
\");\n
                cgc_deallocate(*(&v3));\n
                continue;\n
            }\n
        case 1:\n
            for (v3 = v6; v3; v3 = *((v3 + 24)))\n
            {\n
                sub_4019e0(\"@s\\n
\");\n
            }\n
        case 2:\n
            sub_4019e0(\"Image Name: \");\n
            sub_402170(&v4, 16);\n
            if (sub_402430(&v4, 10, 15))\n
            {\n
                v3 = *(&v6);\n
                v2 = &v5;\n
                while (v3)\n
                {\n
                    if (sub_4022b0(v3, &v4))\n
                    {\n
                        v2 = v3;\n
                        v3 = *((v3 + 24));\n
                    }\n
                    else\n
                    {\n
                        cgc_deallocate(*((v3 + 20)));\n
                        *((v2 + 24)) = *((*(&v3) + 24));\n
                        cgc_deallocate(v3);\n
                        v3 = 0;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                sub_4019e0(\"[ERROR] Failed to receive name\\n
\");\n
                continue;\n
            }\n
        case 3:\n
            sub_4019e0(\"Image Name: \");\n
            sub_402170(&v4, 16);\n
            if (sub_402430(&v4, 10, 15))\n
            {\n
                for (v3 = *(&v6); v3; v3 = *((v3 + 24)))\n
                {\n
                    if (!sub_4022b0(v3, &v4))\n
                        break;\n
                }\n
                if (!v3)\n
                {\n
                    sub_4019e0(\"[ERROR] Failed to locate image\\n
\");\n
                }\n
                else if (!sub_4051e0(v3))\n
                {\n
                    sub_4019e0(\"[ERROR] Failed to render image\\n
\");\n
                    v10 = 0;\n
                    return v10;\n
                }\n
                break;\n
            }\n
            else\n
            {\n
                sub_4019e0(\"[ERROR] Failed to receive name\\n
\");\n
                continue;\n
            }\n
        case 4:\n
            v10 = 0;\n
            return v10;\n
        default:\n
            sub_4019e0(\"[ERROR] Invalid option: @d\\n
\");\n
        }\n
    }\n
}\n
", "4217282:sub_4059c2": null, "4217296:sub_4059d0": "int sub_4059d0(unsigned int v6, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    sub_405470();\n
    return 0;\n
}\n
", "4217360:sub_405a10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405a10(unsigned int v5[12])\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[12];  // eax\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &v1;\n
    if (!sub_405ac0(v5, 32))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if ((v5[11] & 0x10000) && v5[10] != v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v5[10] = v1;\n
    v6 = v5;\n
    v6[11] = v6[11] | 0x100000;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4217536:sub_405ac0": "int sub_405ac0(unsigned int v6[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[4];  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11[4];  // eax\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (sub_406db0(v6))\n
    {\n
        v1 = 8 - v6[3];\n
        if (v1 > a0)\n
        {\n
            v2 = *((v6[0] + v6[2]));\n
            v2 >>= (v1 - a0) & 31;\n
            v0 = v2;\n
            v2 = v0 & sub_401000(2, a0) - 1;\n
            v7 = v6;\n
            v7[3] = a0 + v7[3];\n
            *(a1) = v2;\n
            v3 = 1;\n
            return v3;\n
        }\n
        for (v2 = 0; a0; a0 -= 1)\n
        {\n
            v2 *= 2;\n
            v2 |= *((v6[0] + v6[2])) >> ((7 - v6[3]) & 31) & 1;\n
            v8 = v6[3] + 1;\n
            v10 = (v8 >> 31 CONCAT v8) /m 8;\n
            v11 = v6;\n
            v11[2] = v10 + v11[2];\n
            v6[3] = (v6[3] + 1 >> 31 CONCAT v6[3] + 1) /m 8 >> 32;\n
        }\n
        *(a1) = v2;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4217896:sub_405c28": null, "4217904:sub_405c30": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char *field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int sub_405c30(struct_0 *v27)\n
{\n
    unsigned int v0;  // [bp-0x104]\n
    unsigned int v1;  // [bp-0x100]\n
    unsigned int v2;  // [bp-0xfc]\n
    unsigned int v3;  // [bp-0xf8]\n
    unsigned int v4;  // [bp-0xf4]\n
    unsigned int v5;  // [bp-0xf0]\n
    unsigned int v6;  // [bp-0xec]\n
    unsigned int v7;  // [bp-0xe8]\n
    unsigned int v8;  // [bp-0xe4]\n
    unsigned int v9;  // [bp-0xe0]\n
    unsigned int v10;  // [bp-0xdc]\n
    void* v11;  // [bp-0xd8], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0xd4]\n
    unsigned int v13;  // [bp-0xd0]\n
    unsigned int v14;  // [bp-0xcc]\n
    unsigned int v15;  // [bp-0xc8]\n
    char *v16;  // [bp-0xc4], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0xbc], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0xb8]\n
    unsigned int v19;  // [bp-0xb4]\n
    char v20;  // [bp-0xaf]\n
    char v21;  // [bp-0x50]\n
    char v22;  // [bp-0x12]\n
    char v23;  // [bp-0xe]\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x4]\n
    char v26;  // [bp+0x0]\n
    unsigned int v28[12];  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // eax\n
    unsigned int v32;  // eax\n
    unsigned int v34;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v38;  // eax\n
    unsigned int v39;  // eax\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // eax\n
\n
    v25 = &v26;\n
    strncpy(&v23, \" #*@ .\", 6);\n
    memcpy(&v21, \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~Dword count too hight: @d @d @d\\n
\");\n
    memcpy(&v20, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~Dword count too hight: @d @d @d\\n
\");\n
    v17 = 0;\n
    v16 = 0;\n
    if (!v27)\n
    {\n
        v24 = 0;\n
        return v24;\n
    }\n
    if ((v27->field_2c & 1) && (v27->field_2c & 16) && (v27->field_2c & 0x100) && (v27->field_2c & 0x1000))\n
    {\n
        if (!v27->field_c)\n
        {\n
            v28 = v27;\n
            v28[11] = v28[11] | 0x10000;\n
            v19 = v27->field_18 * v27->field_14 * v27->field_10;\n
            v14 = (v19 + 31 & -32) - v19;\n
            v29 = v19 + v14;\n
            v19 = (v29 >> 31 CONCAT v29) /m 32;\n
            if ((v19 << 2) + v27->field_8 > v27->field_4)\n
            {\n
                v0 = v27->field_4;\n
                sub_4019e0(\"Dword count too hight: @d @d @d\\n
\");\n
                v24 = 0;\n
                return v24;\n
            }\n
            for (v18 = v27->field_0 + v27->field_8; v16 < v19; v16 += 1)\n
            {\n
                v17 ^= *((v18 + v16 * 4));\n
            }\n
            if (!(v27->field_2c & 0x100000))\n
            {\n
                v27->field_28 = v17;\n
            }\n
            else if (v17 != v27->field_28)\n
            {\n
                v24 = 0;\n
                return v24;\n
            }\n
            v27->field_24 = v27->field_10 * v27->field_14;\n
            if (cgc_allocate(v27->field_24 + 1, 0))\n
            {\n
                v24 = 0;\n
                return v24;\n
            }\n
            sub_4020f0(v27->field_20, 32, v27->field_24);\n
            v27->field_20[v27->field_24] = 0;\n
            v11 = 0;\n
            v15 = 0;\n
            while (v11 < v27->field_24)\n
            {\n
                if (!sub_405ac0(v27, v27->field_18, &v15))\n
                {\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = 0;\n
                    return v24;\n
                }\n
                v10 = v27->field_1c;\n
                switch (v10)\n
                {\n
                case 0:\n
                    v30 = v11;\n
                    v12 = (v30 >> 31 CONCAT v30) /m v27->field_10;\n
                    v13 = (v11 >> 31 CONCAT v11) /m v27->field_10 >> 32;\n
                    break;\n
                case 1:\n
                    v32 = v11;\n
                    v12 = (v32 >> 31 CONCAT v32) /m v27->field_10;\n
                    v9 = v27->field_10 - 1;\n
                    v13 = v9 - ((v11 >> 31 CONCAT v11) /m v27->field_10 >> 32);\n
                    break;\n
                case 2:\n
                    v8 = v27->field_14 - 1;\n
                    v34 = v11;\n
                    v12 = v8 - (v34 >> 31 CONCAT v34) /m v27->field_10;\n
                    v13 = (v11 >> 31 CONCAT v11) /m v27->field_10 >> 32;\n
                    break;\n
                case 3:\n
                    v6 = v27->field_14 - 1;\n
                    v36 = v11;\n
                    v12 = v6 - (v36 >> 31 CONCAT v36) /m v27->field_10;\n
                    v7 = v27->field_10 - 1;\n
                    v13 = v7 - ((v11 >> 31 CONCAT v11) /m v27->field_10 >> 32);\n
                    break;\n
                case 4:\n
                    v12 = (v11 >> 31 CONCAT v11) /m v27->field_14 >> 32;\n
                    v38 = v11;\n
                    v13 = (v38 >> 31 CONCAT v38) /m v27->field_14;\n
                    break;\n
                case 5:\n
                    v12 = (v11 >> 31 CONCAT v11) /m v27->field_14 >> 32;\n
                    v5 = v27->field_10 - 1;\n
                    v39 = v11;\n
                    v13 = v5 - (v39 >> 31 CONCAT v39) /m v27->field_14;\n
                    break;\n
                case 6:\n
                    v4 = v27->field_14 - 1;\n
                    v12 = v4 - ((v11 >> 31 CONCAT v11) /m v27->field_14 >> 32);\n
                    v40 = v11;\n
                    v13 = (v40 >> 31 CONCAT v40) /m v27->field_14;\n
                    break;\n
                case 7:\n
                    v2 = v27->field_14 - 1;\n
                    v12 = v2 - ((v11 >> 31 CONCAT v11) /m v27->field_14 >> 32);\n
                    v3 = v27->field_10 - 1;\n
                    v41 = v11;\n
                    v13 = v3 - (v41 >> 31 CONCAT v41) /m v27->field_14;\n
                    break;\n
                default:\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = 0;\n
                    return v24;\n
                }\n
                v16 = v27->field_10 * v12 + v13;\n
                v1 = v27->field_18 - 1;\n
                switch (v1)\n
                {\n
                case 0:\n
                    if (v15 > 1)\n
                    {\n
                        cgc_deallocate(v27->field_20);\n
                        v27->field_20 = 0;\n
                        v27->field_24 = 0;\n
                        v24 = v27->field_24;\n
                        return v24;\n
                    }\n
                    if (v16 <= v27->field_24 + 1 && v16 >= 0)\n
                    {\n
                        *((v27->field_20 + v16)) = (&v23)[v15];\n
                        break;\n
                    }\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = v27->field_24;\n
                    return v24;\n
                case 1:\n
                    if (v15 > 3)\n
                    {\n
                        cgc_deallocate(v27->field_20);\n
                        v27->field_20 = 0;\n
                        v27->field_24 = 0;\n
                        v24 = v27->field_24;\n
                        return v24;\n
                    }\n
                    if (v16 <= v27->field_24 + 1 && v16 >= 0)\n
                    {\n
                        *((v27->field_20 + v16)) = (&v22)[v15];\n
                        break;\n
                    }\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = v27->field_24;\n
                    return v24;\n
                case 5:\n
                    if (v15 > 61)\n
                    {\n
                        cgc_deallocate(v27->field_20);\n
                        v24 = v27->field_24;\n
                        return v24;\n
                    }\n
                    if (v16 <= v27->field_24 + 1 && v16 >= 0)\n
                    {\n
                        *((v27->field_20 + v16)) = (&v21)[v15];\n
                        break;\n
                    }\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = v27->field_24;\n
                    return v24;\n
                case 6:\n
                    if (v15 > 94)\n
                    {\n
                        cgc_deallocate(v27->field_20);\n
                        v27->field_20 = 0;\n
                        v27->field_24 = 0;\n
                        v24 = v27->field_24;\n
                        return v24;\n
                    }\n
                    if (v16 > v27->field_24 + 1)\n
                    {\n
LABEL_4064e1:\n
                        cgc_deallocate(v27->field_20);\n
                        v27->field_20 = 0;\n
                        v27->field_24 = 0;\n
                        v24 = v27->field_24;\n
                        return v24;\n
                    }\n
                    if (v16 < 0)\n
                        goto LABEL_4064e1;\n
                    *((v27->field_20 + v16)) = (&v20)[v15];\n
                    v11 += 1;\n
                    continue;\n
                default:\n
                    sub_4019e0(\"[ERROR] Invalid pixel type\\n
\");\n
                    cgc_deallocate(v27->field_20);\n
                    v27->field_20 = 0;\n
                    v27->field_24 = 0;\n
                    v24 = v27->field_24;\n
                    return v24;\n
                }\n
            }\n
            if (sub_405ac0(v27, v14, &v16))\n
            {\n
                v24 = 1;\n
                return v24;\n
            }\n
            cgc_deallocate(v27->field_20);\n
            v27->field_20 = 0;\n
            v27->field_24 = 0;\n
            v24 = 0;\n
            return v24;\n
        }\n
        else\n
        {\n
            v24 = 0;\n
            return v24;\n
        }\n
    }\n
    v24 = 0;\n
    return v24;\n
}\n
", "4220436:sub_406614": null, "4220448:sub_406620": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int sub_406620(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    if (!sub_406690())\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = v4;\n
    if (!sub_406740())\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v5 = v4;\n
    v5->field_2c = v5->field_2c | 16;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4220548:sub_406684": null, "4220560:sub_406690": "int sub_406690(unsigned int v4[12])\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[12];  // eax\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        return v1;\n
    }\n
    else if (!sub_405ac0(v4, 4, &v0))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        if (v0 <= 7)\n
        {\n
            if (v0 > 2 && v0 < 6)\n
                goto LABEL_406706;\n
            if (v0)\n
            {\n
                v4[6] = v0;\n
                v5 = v4;\n
                v5[11] = v5[11] | 0x100;\n
                v1 = 1;\n
                return v1;\n
            }\n
        }\n
LABEL_406706:\n
        return v1;\n
    }\n
}\n
", "4220722:sub_406732": null, "4220736:sub_406740": "int sub_406740(unsigned int v4[12])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[12];  // eax\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!sub_405ac0(v4, 4, &v1))\n
    {\n
        return v0;\n
    }\n
    else if (v1 > 8)\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v4[7] = v1;\n
        v5 = v4;\n
        v5[11] = v5[11] | 0x1000;\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4220853:sub_4067b5": null, "4220864:sub_4067c0": "int sub_4067c0(unsigned int v7[12])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (sub_406b00())\n
    {\n
        v3 = sub_406b60();\n
        while (true)\n
        {\n
            if (!v3)\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1 = v3;\n
            if (v1 == 43690)\n
            {\n
                if ((v7[11] & 1))\n
                {\n
                    sub_4019e0(\"[ERROR] Only one header\\n
\");\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                else if (!sub_406c30())\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (v1 == 43707)\n
                {\n
                    if ((v7[11] & 16))\n
                    {\n
                        sub_4019e0(\"[ERROR] Only one flags field\\n
\");\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                    else if (!sub_406620(v7))\n
                    {\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v1 != 43724)\n
                    {\n
                        if (v1 != 43741)\n
                            break;\n
                        if ((v7[11] & 0x100000))\n
                        {\n
                            sub_4019e0(\"[ERROR] Only one checksum field\\n
\");\n
                            v4 = 0;\n
                            return v4;\n
                        }\n
                        if (!sub_405a10(v7))\n
                        {\n
                            v4 = 0;\n
                            return v4;\n
                        }\n
                    }\n
                    else if ((v7[11] & 0x10000))\n
                    {\n
                        sub_4019e0(\"[ERROR] Only one pixel set\\n
\");\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                    else if (!sub_405c30(v7))\n
                    {\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            v3 = sub_406b60();\n
        }\n
        if (v1 != 43758)\n
        {\n
            sub_4019e0(\"invalide field\\n
\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        if ((v7[11] & 1) && (v7[11] & 16) && (v7[11] & 0x10000) && (v7[11] & 0x100000))\n
        {\n
            for (v2 = 0; v2 < v7[9]; v2 += 1)\n
            {\n
                if (!(v2 >> 31 CONCAT v2) /m v7[4] >> 32 && v2)\n
                    sub_4019e0(\"\\n
\");\n
                v0 = *((v7[8] + v2));\n
                sub_4019e0(\"@c\");\n
            }\n
            sub_4019e0(\"\\n
\");\n
            v4 = 1;\n
            return v4;\n
        }\n
        sub_4019e0(\"[ERROR] Missing a required tag\\n
\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4221682:sub_406af2": null, "4221696:sub_406b00": "int sub_406b00(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!sub_405ac0(v4, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 2965692278)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4221792:sub_406b60": "int sub_406b60(unsigned int v5[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_405ac0(v5, 16, &v1))\n
    {\n
        sub_4019e0(\"da bits failed\\n
\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v1;\n
    if (v0 != 43690 && v0 != 43707 && v0 != 43724 && v0 != 43741 && v0 != 43758)\n
    {\n
        sub_4019e0(\"wrong one\\n
\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4222000:sub_406c30": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int sub_406c30(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = v4;\n
    if (!sub_406cb0())\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = v4;\n
    if (!sub_406d40())\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v5 = v4;\n
    v5->field_2c = v5->field_2c | 1;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4222122:sub_406caa": null, "4222128:sub_406cb0": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_406cb0(struct_0 *v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!sub_405ac0(v4, 8, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 <= 128)\n
    {\n
        v4->field_10 = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4222262:sub_406d36": null, "4222272:sub_406d40": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_406d40(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        return v0;\n
    }\n
    else if (!sub_405ac0(v3, 8, &v3->field_14))\n
    {\n
        return v0;\n
    }\n
    else if (v3->field_14 > 128)\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4222382:sub_406dae": null, "4222384:sub_406db0": "int sub_406db0(unsigned int v6[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v6)\n
    {\n
        return v3;\n
    }\n
    else if (!v6[0])\n
    {\n
        return v3;\n
    }\n
    else if (a0 > 32)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v2 = v6[1] * 8;\n
        v1 = v6[2] * 8 + v6[3];\n
        v0 = v2 - v1;\n
        if (a0 > v0)\n
            return v3;\n
        v3 = 1;\n
    }\n
}\n
", "4222544:sub_406e50": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_406e50(unsigned int v6, unsigned int *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x70], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x6c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x67]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v0 = 95;\n
    memcpy(&v2, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Pixel out of bounds\\n
\");\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = &v1;\n
    if (!sub_406f10(v6, 7))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v1 <= 95 && v1)\n
    {\n
        v1 += 1;\n
        *(a0) = (&v2)[v1];\n
        v3 = 1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4222730:sub_406f0a": null, "4222736:sub_406f10": "int sub_406f10(unsigned int v6[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[4];  // eax\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!sub_4077d0(v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = a0; a0 > 0; a0 -= 1)\n
    {\n
        v1 = *((v6[0] + v6[2]));\n
        v1 >>= (7 - v6[3]) & 31;\n
        v1 &= 1;\n
        v2 = v2 * 2 | v1;\n
        v6[3] = (v6[3] + 1 >> 31 CONCAT v6[3] + 1) /m 8 >> 32;\n
        if (!v6[3])\n
        {\n
            v7 = v6;\n
            v7[2] = v7[2] + 1;\n
        }\n
    }\n
    *(a1) = v2;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4222962:sub_406ff2": null, "4222976:sub_407000": "int sub_407000(unsigned int v19)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v17;  // [bp-0x4]\n
    char v18;  // [bp+0x0]\n
\n
    v17 = &v18;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    if (!v19)\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (!sub_407480())\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (!sub_407500())\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (!sub_407560())\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (!sub_4075c0(v19))\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (!sub_407640())\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
    else if (sub_4076b0())\n
    {\n
        v14 = *((v19 + 20)) * *((v19 + 16));\n
        if (cgc_allocate(v14 + 1, 0))\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        sub_4020f0(v15, 32, v14);\n
        *((v15 + v14)) = 0;\n
        while (true)\n
        {\n
            if (!sub_406e50(v19, &v13))\n
            {\n
                for (v12 = 0; v12 < v14; v12 += 1)\n
                {\n
                    if (!(0 CONCAT v12) /m *((v19 + 16)) >> 32 && v12)\n
                        sub_4019e0(\"\\n
\");\n
                    sub_4019e0(\"@c\");\n
                }\n
                sub_4019e0(\"\\n
\");\n
                cgc_deallocate(v15);\n
                v16 = 1;\n
                return v16;\n
            }\n
            v8 = *((v19 + 24));\n
            switch (v8)\n
            {\n
            case 0:\n
                v9 = (0 CONCAT v11) /m *((v19 + 16));\n
                v10 = (0 CONCAT v11) /m *((v19 + 16)) >> 32;\n
                break;\n
            case 1:\n
                v9 = (0 CONCAT v11) /m *((v19 + 16));\n
                v7 = *((v19 + 16)) - 1;\n
                v10 = v7 - ((0 CONCAT v11) /m *((v19 + 16)) >> 32);\n
                break;\n
            case 2:\n
                v6 = *((v19 + 20)) - 1;\n
                v9 = v6 - (0 CONCAT v11) /m *((v19 + 16));\n
                v10 = (0 CONCAT v11) /m *((v19 + 16)) >> 32;\n
                break;\n
            case 3:\n
                v4 = *((v19 + 20)) - 1;\n
                v9 = v4 - (0 CONCAT v11) /m *((v19 + 16));\n
                v5 = *((v19 + 16)) - 1;\n
                v10 = v5 - ((0 CONCAT v11) /m *((v19 + 16)) >> 32);\n
                break;\n
            case 4:\n
                v9 = (0 CONCAT v11) /m *((v19 + 20)) >> 32;\n
                v10 = (0 CONCAT v11) /m *((v19 + 20));\n
                break;\n
            case 5:\n
                v9 = (0 CONCAT v11) /m *((v19 + 20)) >> 32;\n
                v3 = *((v19 + 16)) - 1;\n
                v10 = v3 - (0 CONCAT v11) /m *((v19 + 20));\n
                break;\n
            case 6:\n
                v2 = *((v19 + 20)) - 1;\n
                v9 = v2 - ((0 CONCAT v11) /m *((v19 + 20)) >> 32);\n
                v10 = (0 CONCAT v11) /m *((v19 + 20));\n
                break;\n
            case 7:\n
                v0 = *((v19 + 20)) - 1;\n
                v9 = v0 - ((0 CONCAT v11) /m *((v19 + 20)) >> 32);\n
                v1 = *((v19 + 16)) - 1;\n
                v10 = v1 - (0 CONCAT v11) /m *((v19 + 20));\n
                break;\n
            default:\n
                cgc_deallocate(v15);\n
                v16 = 0;\n
                return v16;\n
            }\n
            v12 = *((v19 + 16)) * v9 + v10;\n
            if (v12 > v14)\n
            {\n
                sub_4019e0(\"[ERROR] Pixel out of bounds\\n
\");\n
                cgc_deallocate(v15);\n
                v16 = 0;\n
                return v16;\n
            }\n
            *((v15 + v12)) = v13;\n
            v11 += 1;\n
        }\n
    }\n
    else\n
    {\n
        v16 = 0;\n
        return v16;\n
    }\n
}\n
", "4224115:sub_407473": null, "4224128:sub_407480": "int sub_407480(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!sub_406f10(v4, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 3411611441)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4224246:sub_4074f6": null, "4224256:sub_407500": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int sub_407500(struct_0 *v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!sub_406f10(v4, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v4->field_10 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4224342:sub_407556": null, "4224352:sub_407560": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_407560(struct_0 *v4)\n
{\n
    void* v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!sub_406f10(v4, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v4->field_14 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4224438:sub_4075b6": null, "4224448:sub_4075c0": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int sub_4075c0(struct_0 *v4, unsigned int *a0)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (sub_406f10(v4, 3, &v0))\n
    {\n
        *(a0) = v0;\n
        v4->field_18 = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
}\n
", "4224576:sub_407640": "int sub_407640(unsigned int v4[4])\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!sub_406f10(v4, 17, &v0))\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!v0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4224682:sub_4076aa": null, "4224688:sub_4076b0": "int sub_4076b0(unsigned int v8[4])\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned short *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x12]\n
    unsigned short *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v8[3])\n
    {\n
        v4 = v8[1] - v8[2];\n
        if ((v4 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v9 = v4;\n
        v4 = (v9 >> 31 CONCAT v9) /m 2;\n
        v4 -= 1;\n
        if (v4 <= 0)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v3 = v8[0] + v8[2]; v1 < v4; v1 = v1 + 1)\n
        {\n
            v2 ^= *((v3 + v1 * 2));\n
        }\n
        if (*((v3 + (v4 << 1))) != v2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4224974:sub_4077ce": null, "4224976:sub_4077d0": "int sub_4077d0(unsigned int v4[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v4[0])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0 <= 32)\n
    {\n
        v0 = v4[3] + v4[2] * 8;\n
        if (v0 + a0 > v4[1] << 3)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4225136:sub_407870": "int sub_407870()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_407990();\n
    sub_4079a0();\n
    sub_4079c0();\n
    v0 = 1;\n
    if (!sub_407f90())\n
    {\n
        v0 = 7;\n
        sub_408670();\n
    }\n
    sub_408840();\n
    v1 = sub_408870;\n
    sub_407c60();\n
    if (sub_407960())\n
    {\n
        v1 = 7;\n
        sub_408670();\n
    }\n
    sub_408400();\n
    if (sub_408500())\n
    {\n
        v1 = sub_4083a0;\n
        __setusermatherr();\n
    }\n
    sub_408480();\n
    sub_408490();\n
    sub_408450();\n
    v1 = sub_4083f0();\n
    _configthreadlocale();\n
    if (sub_408440())\n
        sub_407980();\n
    sub_408630();\n
    if (sub_408640())\n
    {\n
        v1 = 7;\n
        sub_408670();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4225328:sub_407930": "int sub_407930()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4084a0();\n
    return 0;\n
}\n
", "4225344:sub_407940": "int sub_407940()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_408650();\n
    v0 = sub_4083e0();\n
    return _set_new_mode();\n
}\n
", "4225376:sub_407960": "int sub_407960()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_4083b0());\n
}\n
", "4225408:sub_407980": "int sub_407980()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4225424:sub_407990": "int sub_407990()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4225440:sub_4079a0": "int sub_4079a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_4083d0());\n
}\n
", "4225472:sub_4079c0": "int sub_4079c0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_4083c0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4225504:sub_4079e0": "int sub_4079e0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_4059d0(v1, v2);\n
}\n
", "4225568:sub_407a20": "extern char g_40a8fc;\n
extern char g_40a904;\n
extern char g_40a908;\n
extern struct_0 *g_40a914;\n
extern char g_40afc8;\n
extern unsigned int g_40c040;\n
extern unsigned int g_40c098;\n
\n
int sub_407a20()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40afc8;\n
    v13 = sub_4088a0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_40c040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_407f00(1, g_40c040 ^ &v16, v22, v23))\n
        sub_408670();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_407e80();\n
    if (g_40c098 == 1)\n
    {\n
        v16 = 7;\n
        sub_408670();\n
    }\n
    else if (g_40c098)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40c098 = 1;\n
        v16 = &g_40a914;\n
        v15 = &g_40a908;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_407c29;\n
        }\n
        else\n
        {\n
            v16 = &g_40a904;\n
            v15 = &g_40a8fc;\n
            _initterm(*(&v17));\n
            g_40c098 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_407ed0();\n
    v8 = sub_408530();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_407d50())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_4088e0(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_408540();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_407d50())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_4079e0();\n
    if (!sub_4085a0())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_407f50(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_407c29:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4225983:sub_407bbf": "int sub_407bbf()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4225992:sub_407bc8": "int sub_407bc8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4226019:sub_407be3": "extern char g_407bf1;\n
\n
int sub_407be3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_407bf1;\n
    if (!sub_4085a0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4226082:sub_407c22": "int sub_407c22()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4226112:sub_407c40": "int sub_407c40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4082b0();\n
    return sub_407a20();\n
}\n
", "4226128:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_407c40();\n
}\n
", "4226144:sub_407c60": "int sub_407c60(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_407c90(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4226192:sub_407c90": "extern unsigned int g_40c0a4;\n
\n
int sub_407c90(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_40c0a4;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_40c0a4))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4226248:sub_407cc8": "int sub_407cc8()\n
{\n
}\n
", "4226304:sub_407d00": "extern unsigned int g_40c0b0;\n
\n
int sub_407d00(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_40c0b0;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_40c0b0);\n
    return v6;\n
}\n
", "4226338:sub_407d22": "int sub_407d22()\n
{\n
}\n
", "4226368:sub_407d40": "int sub_407d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4226384:sub_407d50": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40afe8;\n
extern unsigned int g_40c040;\n
\n
int sub_407d50(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40afe8;\n
    v13 = sub_4088a0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40c040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_4081b0(v6, g_40c040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_408220(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4226589:sub_407e1d": "int sub_407e1d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4226598:sub_407e26": "int sub_407e26()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4226637:sub_407e4d": "int sub_407e4d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4226656:sub_407e60": "int sub_407e60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4226688:sub_407e80": "extern unsigned int g_40c09c;\n
\n
int sub_407e80()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_4090c0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_407d40() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_40c09c = v6;\n
        if (!g_40c09c)\n
        {\n
            tmp_0 = 0;\n
            g_40c09c = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_40c09c = v6;\n
            v5 = g_40c09c;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4226768:sub_407ed0": "extern void* g_40c09c;\n
\n
int sub_407ed0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_4090c0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_40c09c;\n
        g_40c09c = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x407eef;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4226816:sub_407f00": "extern char g_40c0a0;\n
\n
int sub_407f00(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_40c0a0 = 1;\n
    sub_408c30();\n
    v4 = sub_409460();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_409460();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_409470();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4226896:sub_407f50": "extern char g_40c0a0;\n
\n
int sub_407f50(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_40c0a0 && a0)\n
        return 1;\n
    sub_409470(v2);\n
    v3 = sub_409470();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4226960:sub_407f90": "extern char g_40c0a1;\n
extern unsigned int g_40c0a4;\n
extern unsigned int g_40c0a8;\n
extern unsigned int g_40c0ac;\n
extern unsigned int g_40c0b0;\n
extern unsigned int g_40c0b4;\n
extern unsigned int g_40c0b8;\n
\n
int sub_407f90(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_40c0a1)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_408670();\n
    }\n
    if (sub_4090c0() && !v10)\n
    {\n
        v8 = &g_40c0a4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_40c0b0;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_408056;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_40c0a4 = v4;\n
    g_40c0a8 = v5;\n
    g_40c0ac = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_40c0b0 = v1;\n
    g_40c0b4 = v2;\n
    v11 = v3;\n
    g_40c0b8 = v11;\n
LABEL_408056:\n
    g_40c0a1 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4227184:sub_408070": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_408070(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_4090c0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_4088e0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4227264:sub_4080c0": "int sub_4080c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_407f90(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4227296:sub_4080e0": "int sub_4080e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_4090c0())\n
    {\n
        v3 = sub_408c30();\n
    }\n
    else\n
    {\n
        v3 = sub_407960();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_407980();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4227344:sub_408110": "extern char g_40c0a4;\n
\n
int sub_408110()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_4090c0())\n
    {\n
        v0 = &g_40c0a4;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_4094b0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4227392:sub_408140": "int sub_408140()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409480(0);\n
    return sub_409480();\n
}\n
", "4227424:sub_408160": "int sub_408160()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_409490();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_409490();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_4094a0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4227472:sub_408190": "char sub_408190()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_4094a0();\n
    sub_4094a0();\n
    return 1;\n
}\n
", "4227504:sub_4081b0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_4081b0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4227616:sub_408220": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_408220(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4227760:sub_4082b0": "extern unsigned int g_40c040;\n
extern unsigned int g_40c080;\n
\n
int sub_4082b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40c040 != 3141592654)\n
    {\n
        v4 = g_40c040 & -0x10000;\n
        if (v4)\n
        {\n
            g_40c080 = ~(g_40c040);\n
            return g_40c040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_408330(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40c040 = v0;\n
    g_40c080 = ~(v0);\n
    return v4;\n
}\n
", "4227888:sub_408330": "int sub_408330()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4228000:sub_4083a0": "int sub_4083a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228016:sub_4083b0": "int sub_4083b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228032:sub_4083c0": "int sub_4083c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228048:sub_4083d0": "int sub_4083d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4228064:sub_4083e0": "int sub_4083e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228080:sub_4083f0": "int sub_4083f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228096:sub_408400": "extern void g_40c0c0;\n
\n
int sub_408400()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_40c0c0);\n
}\n
", "4228128:sub_408420": "extern unsigned int g_40c0c0;\n
\n
int sub_408420()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_40c0c0);\n
}\n
", "4228160:sub_408440": "char sub_408440()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4228176:sub_408450": "int sub_408450()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_408670();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4228224:sub_408480": "int sub_408480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4228240:sub_408490": "int sub_408490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4228256:sub_4084a0": "int sub_4084a0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_4084e0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_4084f0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4228320:sub_4084e0": "extern char g_40c0c8;\n
\n
int sub_4084e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c0c8;\n
}\n
", "4228336:sub_4084f0": "extern char g_40c0d0;\n
\n
int sub_4084f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c0d0;\n
}\n
", "4228352:sub_408500": "extern unsigned int g_40c008;\n
\n
int sub_408500()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40c008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4228400:sub_408530": "extern char g_40c0dc;\n
\n
int sub_408530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c0dc;\n
}\n
", "4228416:sub_408540": "extern char g_40c0e0;\n
\n
int sub_408540()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_40c0e0;\n
}\n
", "4228432:sub_408550": "extern void* g_40c0e4;\n
\n
int sub_408550()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_40c0e4 = 0;\n
    return v3;\n
}\n
", "4228448:sub_408560": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_408560()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4228512:sub_4085a0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_4085a0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4228656:sub_408630": "int sub_408630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4228672:sub_408640": "int sub_408640()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4087b0();\n
}\n
", "4228688:sub_408650": "int sub_408650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_4087c0);\n
}\n
", "4228720:sub_408670": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_408670()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_408550();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_408550();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4228745:sub_408689": "int sub_408689()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4228745\n
}\n
", "4229040:sub_4087b0": "int sub_4087b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4229056:sub_4087c0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_4087c0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4229184:sub_408840": "extern struct_0 *g_40afbc;\n
\n
int sub_408840()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40afbc;\n
    v3 = &g_40afbc;\n
    return &g_40afbc;\n
}\n
", "4229232:sub_408870": "extern struct_0 *g_40afc4;\n
\n
int sub_408870()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40afc4;\n
    v3 = &g_40afc4;\n
    return &g_40afc4;\n
}\n
", "4229280:sub_4088a0": "extern unsigned int g_40c040;\n
\n
int sub_4088a0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_4094c0(*(v2));\n
    return _except_handler4_common(&g_40c040, sub_4090f0, v2, a0, a1);\n
}\n
", "4229344:sub_4088e0": "int sub_4088e0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4229360:sub_4088f0": "int sub_4088f0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x4088f9;\n
    return tmp_4;\n
}\n
", "4229376:sub_408900": "int sub_408900(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4229408:sub_408920": "int sub_408920(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408900(v2);\n
}\n
", "4229440:sub_408940": "extern unsigned int g_40c0e8;\n
\n
int sub_408940(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_4088f0(&g_40c0e8, v3);\n
    return v0;\n
}\n
", "4229472:sub_408960": "extern char g_4088e0;\n
extern unsigned int g_40d000;\n
\n
int sub_408960()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_408920(&g_40d000) != sub_4088e0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4229520:sub_408990": "extern char g_40a840;\n
\n
int sub_408990(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40a840;\n
    v1 = &g_40a840;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4229584:sub_4089d0": "extern unsigned int g_40d008;\n
\n
int sub_4089d0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_408920(&g_40d008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4229632:sub_408a00": "extern unsigned int g_40c0e8;\n
\n
int sub_408a00(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_408920(&g_40c0e8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_4088e0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4229696:sub_408a40": "int sub_408a40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4229712:sub_408a50": "int sub_408a50(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408990(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4229731\n
}\n
", "4229744:sub_408a70": "int sub_408a70(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408990(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4229769:sub_408a89": "int sub_408a89()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4229769\n
}\n
", "4229776:sub_408a90": "int sub_408a90(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408990(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4089d0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229824:sub_408ac0": "int sub_408ac0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408990(v2);\n
    if (v3)\n
    {\n
        v3 = sub_408a00(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4229872:sub_408af0": "extern char g_40a840;\n
\n
int sub_408af0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40a840;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4229936:sub_408b30": "int sub_408b30(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408af0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408990(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4229979\n
}\n
", "4229984:sub_408b60": "int sub_408b60(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408af0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408990(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4230033:sub_408b91": "int sub_408b91()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4230033\n
}\n
", "4230048:sub_408ba0": "int sub_408ba0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4230064:sub_408bb0": "int sub_408bb0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408af0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408990(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4089d0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4230128:sub_408bf0": "int sub_408bf0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_408af0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_408990(v2);\n
    if (v3)\n
    {\n
        v3 = sub_408a00(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4230192:sub_408c30": "extern unsigned int g_40c040;\n
extern unsigned int g_40c088;\n
extern unsigned int g_40c08c;\n
extern unsigned int g_40c090;\n
extern unsigned int g_40c0ec;\n
extern unsigned int g_40c0f0;\n
extern unsigned int g_40c0f4;\n
\n
int sub_408c30()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40c040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_40c0f0 = 0;\n
    g_40c090 = g_40c090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_4090f0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_408d7b;\n
        g_40c0f4 = g_40c0f4 | 1;\n
    }\n
LABEL_408d7b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_40c0f4 = g_40c0f4 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_40c0f0 = 1;\n
    g_40c090 = g_40c090 | 2;\n
    g_40c088 = g_40c088 & -2;\n
    g_40c08c = g_40c08c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_40c0f0 = 2;\n
        g_40c090 = g_40c090 | 4;\n
        g_40c088 = g_40c088 & -17;\n
        g_40c08c = g_40c08c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_40c0f0 = 3;\n
                g_40c090 = g_40c090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_40c0f0 = 5;\n
                    g_40c090 = g_40c090 | 32;\n
                    g_40c088 = g_40c088 & -3;\n
                    g_40c08c = g_40c08c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_40c0f0 = 6;\n
                            g_40c090 = g_40c090 | 64;\n
                            g_40c088 = g_40c088 & -37;\n
                            g_40c08c = g_40c08c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40c088 = g_40c088 & -16777217;\n
                    g_40c08c = g_40c08c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_40c0ec = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40c088 = ~(v2 | 16777256) & g_40c088;\n
                        g_40c08c = ~(v3) & g_40c08c;\n
                        if (g_40c0ec > 1)\n
                        {\n
                            g_40c088 = g_40c088 & -65;\n
                            g_40c08c = g_40c08c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4231360:sub_4090c0": "extern unsigned int g_40c094;\n
\n
int sub_4090c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40c094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4231408:sub_4090f0": "extern unsigned int g_40c040;\n
extern unsigned int g_40c080;\n
extern unsigned int g_40c100;\n
extern unsigned int g_40c104;\n
extern unsigned int g_40c10c;\n
extern unsigned int g_40c110;\n
extern unsigned int g_40c114;\n
extern unsigned int g_40c150;\n
extern unsigned short g_40c1dc;\n
extern unsigned short g_40c1e0;\n
extern unsigned short g_40c1e4;\n
extern unsigned short g_40c1e8;\n
extern unsigned int g_40c1ec;\n
extern unsigned int g_40c1f0;\n
extern unsigned int g_40c1f4;\n
extern unsigned int g_40c1f8;\n
extern unsigned int g_40c1fc;\n
extern unsigned int g_40c200;\n
extern unsigned int g_40c204;\n
extern unsigned int g_40c208;\n
extern unsigned short g_40c20c;\n
extern unsigned int g_40c210;\n
extern unsigned int g_40c214;\n
extern unsigned short g_40c218;\n
\n
int sub_4090f0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40c040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c200 = v7;\n
        g_40c1fc = v6;\n
        g_40c1f8 = v8;\n
        g_40c1f4 = v9;\n
        g_40c1f0 = v10;\n
        g_40c1ec = v11;\n
        g_40c218 = v12;\n
        g_40c20c = v13;\n
        g_40c1e8 = v14;\n
        g_40c1e4 = v15;\n
        g_40c1e0 = v16;\n
        g_40c1dc = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_40c210 = v0;\n
        g_40c204 = v3;\n
        g_40c208 = *(&v4);\n
        g_40c214 = &v5;\n
        g_40c150 = 65537;\n
        g_40c10c = g_40c208;\n
        g_40c100 = 3221226505;\n
        g_40c104 = 1;\n
        g_40c110 = 1;\n
        g_40c114 = 2;\n
        v1 = g_40c040;\n
        v2 = g_40c080;\n
        sub_409430();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4231424:sub_409100": "extern unsigned int g_40c100;\n
extern unsigned int g_40c104;\n
extern unsigned int g_40c10c;\n
extern unsigned int g_40c110;\n
extern unsigned int g_40c114;\n
extern unsigned short g_40c1dc;\n
extern unsigned short g_40c1e0;\n
extern unsigned short g_40c1e4;\n
extern unsigned short g_40c1e8;\n
extern unsigned int g_40c1ec;\n
extern unsigned int g_40c1f0;\n
extern unsigned int g_40c1f4;\n
extern unsigned int g_40c1f8;\n
extern unsigned int g_40c1fc;\n
extern unsigned int g_40c200;\n
extern unsigned int g_40c204;\n
extern unsigned int g_40c208;\n
extern unsigned short g_40c20c;\n
extern unsigned int g_40c210;\n
extern unsigned int g_40c214;\n
extern unsigned short g_40c218;\n
\n
int sub_409100()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_40c200 = v4;\n
        g_40c1fc = v5;\n
        g_40c1f8 = v6;\n
        g_40c1f4 = v7;\n
        g_40c1f0 = v8;\n
        g_40c1ec = v9;\n
        g_40c218 = v10;\n
        g_40c20c = v11;\n
        g_40c1e8 = v12;\n
        g_40c1e4 = v13;\n
        g_40c1e0 = v14;\n
        g_40c1dc = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_40c210 = v0;\n
        g_40c204 = v1;\n
        g_40c208 = *(&v2);\n
        g_40c214 = &v3;\n
        g_40c10c = g_40c208;\n
        g_40c100 = 3221226505;\n
        g_40c104 = 1;\n
        g_40c110 = 1;\n
        g_40c114 = v3;\n
        sub_409430();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4231449:sub_409119": "int sub_409119()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231449\n
}\n
", "4231648:sub_4091e0": "extern unsigned int g_40c100;\n
extern unsigned int g_40c104;\n
extern unsigned int g_40c10c;\n
extern unsigned int g_40c110;\n
extern unsigned int g_40c114;\n
extern char g_40c118;\n
extern unsigned short g_40c1dc;\n
extern unsigned short g_40c1e0;\n
extern unsigned short g_40c1e4;\n
extern unsigned short g_40c1e8;\n
extern unsigned int g_40c1ec;\n
extern unsigned int g_40c1f0;\n
extern unsigned int g_40c1f4;\n
extern unsigned int g_40c1f8;\n
extern unsigned int g_40c1fc;\n
extern unsigned int g_40c200;\n
extern unsigned int g_40c204;\n
extern unsigned int g_40c208;\n
extern unsigned short g_40c20c;\n
extern unsigned int g_40c210;\n
extern unsigned int g_40c214;\n
extern unsigned short g_40c218;\n
\n
int sub_4091e0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1060935];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_40c200 = v7;\n
        g_40c1fc = v8;\n
        g_40c1f8 = v9;\n
        g_40c1f4 = v10;\n
        g_40c1f0 = v11;\n
        g_40c1ec = v12;\n
        g_40c218 = v13;\n
        g_40c20c = v14;\n
        g_40c1e8 = v15;\n
        g_40c1e4 = v16;\n
        g_40c1e0 = v17;\n
        g_40c1dc = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_40c210 = v0;\n
        g_40c204 = v2;\n
        g_40c208 = *(&v3);\n
        g_40c214 = &v4;\n
        g_40c10c = g_40c208;\n
        g_40c100 = 3221226505;\n
        g_40c104 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_40c110 = v5 + 1;\n
        g_40c114 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_40c118)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_409430();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4231673:sub_4091f9": "int sub_4091f9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231673\n
}\n
", "4231952:sub_409310": "int sub_409310()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409100(8);\n
}\n
", "4231995:sub_40933b": "int sub_40933b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4231995\n
}\n
", "4232240:sub_409430": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409430(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4232288:sub_409460": "char sub_409460()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232304:sub_409470": "char sub_409470()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232320:sub_409480": "char sub_409480()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232336:sub_409490": "char sub_409490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232352:sub_4094a0": "char sub_4094a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232368:sub_4094b0": "int sub_4094b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232384:sub_4094c0": "extern unsigned int g_40c0f0;\n
\n
int sub_4094c0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_40c0f0 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4232692:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4232698:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4232704:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4232710:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4232716:cgc_log10": "int cgc_log10()\n
{\n
    return ::kernel32.dll::cgc_log10();\n
}\n
", "4232722:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4232728:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4232734:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4232740:sub_409624": "int sub_409624(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4232746:sub_40962a": "int sub_40962a()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4232752:sub_409630": "int sub_409630()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4232758:sub_409636": "int sub_409636(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4232764:sub_40963c": "int sub_40963c(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4232770:sub_409642": "int sub_409642()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4232776:sub_409648": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_409648(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4232782:sub_40964e": "int sub_40964e(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4232788:sub_409654": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_409654(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4232794:sub_40965a": "int sub_40965a(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4232800:sub_409660": "int sub_409660(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4232806:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4232812:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4232818:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4232824:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4232830:memcpy": "int memcpy()\n
{\n
    return ::kernel32.dll::memcpy();\n
}\n
", "4232836:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4232842:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4232848:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4232854:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4232860:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4232866:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4232872:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4232878:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4232884:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4232890:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4232896:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4232902:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4232908:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4232914:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4232920:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4232926:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4232932:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4232938:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4232944:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4232950:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4232956:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4232962:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4232968:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4232974:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4232980:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4232986:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4232992:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4232998:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4233004:sub_40972c": "int sub_40972c()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4233010:sub_409732": "int sub_409732(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_deallocate": null, "5242892:cgc_log10": null, "5242896:cgc_pow": null, "5242900:cgc_receive": null, "5242904:cgc_rint": null, "5242908:cgc_transmit": null, "5242912:GetCurrentProcess": null, "5242916:GetCurrentProcessId": null, "5242920:GetCurrentThreadId": null, "5242924:GetModuleHandleW": null, "5242928:GetStartupInfoW": null, "5242932:GetSystemTimeAsFileTime": null, "5242936:InitializeSListHead": null, "5242940:IsDebuggerPresent": null, "5242944:IsProcessorFeaturePresent": null, "5242948:QueryPerformanceCounter": null, "5242952:SetUnhandledExceptionFilter": null, "5242956:TerminateProcess": null, "5242960:UnhandledExceptionFilter": null, "5242964:__current_exception": null, "5242968:__current_exception_context": null, "5242972:__std_type_info_destroy_list": null, "5242976:_except_handler4_common": null, "5242980:memcpy": null, "5242984:memset": null, "5242988:__p___argc": null, "5242992:__p___argv": null, "5242996:__p__commode": null, "5243000:__setusermatherr": null, "5243004:_c_exit": null, "5243008:_cexit": null, "5243012:_configthreadlocale": null, "5243016:_configure_narrow_argv": null, "5243020:_controlfp_s": null, "5243024:_crt_at_quick_exit": null, "5243028:_crt_atexit": null, "5243032:_execute_onexit_table": null, "5243036:_exit": null, "5243040:_get_initial_narrow_environment": null, "5243044:_initialize_narrow_environment": null, "5243048:_initialize_onexit_table": null, "5243052:_initterm": null, "5243056:_initterm_e": null, "5243060:_register_onexit_function": null, "5243064:_register_thread_local_exe_atexit_callback": null, "5243068:_seh_filter_dll": null, "5243072:_seh_filter_exe": null, "5243076:_set_app_type": null, "5243080:_set_fmode": null, "5243084:_set_new_mode": null, "5243088:exit": null, "5243092:terminate": null, "6295596:UnresolvableCallTarget": null}