{"4198400:sub_401000": "int sub_401000(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = a0 * v5;\n
    v1 = sub_401050();\n
    v0 = v2;\n
    sub_4020e0(v1, 0);\n
    return v1;\n
}\n
", "4198472:sub_401048": null, "4198480:sub_401050": "extern struct_0 *g_407098;\n
\n
int sub_401050(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_0 *v1[2];  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct struct_0 *v6[2];  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v9 = &v10;\n
    if (v11 < 8)\n
    {\n
        v11 = 8;\n
    }\n
    else if ((v11 & 3))\n
    {\n
        v11 = (v11 >> 2) + 1;\n
        v11 *= 4;\n
    }\n
    v8 = &g_407098->field_0;\n
    while (true)\n
    {\n
        if (!v8)\n
            v8 = sub_4012d0();\n
        v7 = v8;\n
        v6[0] = v8 + (*(v7) & -0x4) - 4;\n
        if (*(v7) >= v11)\n
            break;\n
        v8 = v6[0];\n
    }\n
    v5 = v8 + 4;\n
    v4 = *(v7) - v11;\n
    *(v7) = v11;\n
    v12 = v7;\n
    *(v12) = *(v12) | 1;\n
    if (v4 >= 12)\n
    {\n
        v3 = v8 + v11 + 4;\n
        v2 = v3;\n
        *(v2) = v4 - 4;\n
        v1[0] = &v6[0];\n
        if (-4 + v2 + (*(v2) & -0x4) != v6)\n
        {\n
            sub_401bc0();\n
            cgc__terminate();\n
        }\n
        if (g_407098 == v8)\n
        {\n
            g_407098 = v2;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v2;\n
        }\n
        else\n
        {\n
            if (v1[1])\n
                *((-4 + &v1[1]->field_0 + (v1[1]->field_0 & -0x4))) = v3;\n
            if (v1[0])\n
                *((&v1[0]->field_0 + (v1[0]->field_0 & -0x4))) = v3;\n
        }\n
        v13 = v7;\n
        *(v13) = *(v13) | 2;\n
    }\n
    else if (g_407098 == v8)\n
    {\n
        g_407098 = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v6[1])\n
            *((-4 + &v6[1]->field_0 + (v6[1]->field_0 & -0x4))) = v6[0];\n
        if (v6[0])\n
            *((&v6[0]->field_0 + (v6[0]->field_0 & -0x4))) = v6[1];\n
    }\n
    v0 = v11;\n
    sub_4020e0(v8 + 4, 0);\n
    return v8 + 4;\n
}\n
", "4199112:sub_4012c8": null, "4199120:sub_4012d0": "extern struct_0 *g_407098;\n
\n
int sub_4012d0(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = v7 + 4;\n
    if ((v4 & 4095))\n
    {\n
        v4 = (v4 >> 12) + 1;\n
        v4 *= 0x1000;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(v4, 0))\n
        cgc__terminate();\n
    v2 = *(&v3);\n
    v1[0] = *(&v3) + v4 - 8;\n
    *(v2) = v4 - 4;\n
    v1[1] = 0;\n
    v1[0] = g_407098;\n
    g_407098 = v2;\n
    return v2;\n
}\n
", "4199293:sub_40137d": null, "4199296:sub_401380": "extern struct_0 *g_407098;\n
\n
int sub_401380(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    struct struct_0 *v2[2];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int *v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax, Other Possible Types: unsigned int, struct struct_0 **, struct struct_0 *[2]\n
\n
    v7 = &v8;\n
    v6 = v9 - 4;\n
    if (!(*(v6) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v6) & 2))\n
    {\n
        v5 = v9 + (*(v6) & -0x4);\n
        if (!(*(v5) & 1))\n
        {\n
            v4 = (*(v6) & -0x4) + (*(v5) & -0x4) + 4;\n
            *(v6) = v4;\n
            if ((*(v5) & 2))\n
            {\n
                v11 = v6;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (g_407098 != v5)\n
            {\n
                v2[0] = -4 + v6 + v4;\n
                if (v2[1])\n
                    *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v6;\n
                v12 = v2;\n
                if (v12[0])\n
                {\n
                    v12 = v2[0];\n
                    *((v12 + (v2[0]->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            else\n
            {\n
                g_407098 = v6;\n
                v3 = -4 + v6 + v4;\n
                v12 = v3;\n
                if (*(v12))\n
                {\n
                    v12 = *(v3);\n
                    *((v12 + (*(v3)->field_0 & -0x4))) = v6;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v10 = v6;\n
    *(v10) = *(v10) & -2;\n
    v1[0] = -4 + v6 + (*(v6) & -0x4);\n
    v1[0] = g_407098;\n
    v1[1] = 0;\n
    if (g_407098)\n
        *((&g_407098->field_0 + (g_407098->field_0 & -0x4))) = v6;\n
    v12 = v6;\n
    g_407098 = v12;\n
    return v6;\n
}\n
", "4199728:sub_401530": "int sub_401530(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 1; a0; a0 -= 1)\n
    {\n
        v0 *= v3;\n
    }\n
    return v0;\n
}\n
", "4199787:sub_40156b": null, "4199792:sub_401570": null, "4199993:sub_401639": null, "4200000:sub_401640": null, "4200177:sub_4016f1": null, "4200192:sub_401700": null, "4200400:sub_4017d0": "int sub_4017d0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200472:sub_401818": null, "4200480:sub_401820": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_401820(char *v15, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    char *v1;  // [bp-0x6c]\n
    char *v2;  // [bp-0x68], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x64], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x60]\n
    unsigned int v5;  // [bp-0x40]\n
    struct_1 *v6;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x35]\n
    char v8;  // [bp-0x15]\n
    unsigned int v9;  // [bp-0x14]\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v13;  // [bp-0x4]\n
    char v14;  // [bp+0x0]\n
    struct struct_0 **v16;  // eax\n
    struct struct_0 **v17;  // eax\n
    struct struct_0 **v18;  // eax\n
    struct struct_0 **v19;  // eax\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    struct_1 *v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    struct_1 *v26;  // eax\n
\n
    v13 = &v14;\n
    v11 = 0;\n
    if (!v15)\n
    {\n
        v12 = -1;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        if (!*(v15))\n
        {\n
            v12 = v11;\n
            return v12;\n
        }\n
        if (*(v15) == 36)\n
            break;\n
        sub_4017d0(*(v15));\n
        v15 += 1;\n
        v11 += 1;\n
LABEL_401ba1:\n
    }\n
    v15 += 1;\n
    v0 = *(v15);\n
    if (!v0)\n
    {\n
        v12 = -1;\n
        return v12;\n
    }\n
    if (v0 == 36)\n
    {\n
        sub_4017d0(36);\n
        goto LABEL_401b73;\n
    }\n
    if (v0 != 88)\n
    {\n
        if (v0 == 99)\n
        {\n
            v16 = a0;\n
            a0 = v16 + 1;\n
            v9 = *(v16);\n
            v8 = v9;\n
            sub_4017d0(v8);\n
            goto LABEL_401b73;\n
        }\n
        if (v0 == 100)\n
        {\n
            v17 = a0;\n
            a0 = v17 + 1;\n
            v5 = *(v17);\n
            v6 = 0;\n
            if (v5 < 0)\n
            {\n
                v5 = -(v5);\n
                sub_4017d0(45);\n
                v11 += 1;\n
            }\n
            else\n
            {\n
                if (!v5)\n
                {\n
                    v6 = 1;\n
                    v7 = 48;\n
                }\n
            }\n
            while (v5)\n
            {\n
                v24 = v6;\n
                v6 = v24 + 1;\n
                (&v7)[v24] = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
                v25 = v5;\n
                v5 = (v25 >> 31 CONCAT v25) /m 10;\n
                if (v6 >= 32)\n
                    break;\n
            }\n
            while (true)\n
            {\n
                v26 = v6;\n
                v6 = v26 + 1;\n
                if (v26 <= 0)\n
                    break;\n
                sub_4017d0((&v7)[v6]);\n
                v11 += 1;\n
            }\n
            goto LABEL_401b73;\n
        }\n
        else if (v0 == 115)\n
        {\n
            v18 = a0;\n
            a0 = v18 + 1;\n
            v10 = &*(v18)->field_0;\n
            while (*(v10))\n
            {\n
                sub_4017d0(*(v10));\n
                v11 += 1;\n
                v10 += 1;\n
                if (!v10)\n
                    break;\n
            }\n
            goto LABEL_401b73;\n
        }\n
        else if (v0 != 120)\n
        {\n
            v12 = -1;\n
            return v12;\n
        }\n
    }\n
    v19 = a0;\n
    a0 = v19 + 1;\n
    v2 = &*(v19)->field_0;\n
    v3 = 0;\n
    while (v2)\n
    {\n
        v1 = v2 & 15;\n
        v2 >>= 4;\n
        if (v1 < 10)\n
        {\n
            v20 = v3;\n
            v3 = v20 + 1;\n
            (&v4)[v20] = v1 + 48;\n
        }\n
        else if (*(v15) != 120)\n
        {\n
            v22 = v3;\n
            v3 = v22 + 1;\n
            (&v4)[v22] = v1 + 55;\n
        }\n
        else\n
        {\n
            v21 = v3;\n
            v3 = v21 + 1;\n
            (&v4)[v21] = v1 + 87;\n
        }\n
        if (v3 >= 32)\n
            break;\n
    }\n
    while (true)\n
    {\n
        v23 = v3;\n
        v3 = v23 + 1;\n
        if (v23 <= 0)\n
            break;\n
        sub_4017d0((&v4)[v3]);\n
        v11 += 1;\n
    }\n
LABEL_401b73:\n
    v15 += 1;\n
    goto LABEL_401ba1;\n
}\n
", "4201396:sub_401bb4": null, "4201408:sub_401bc0": "int sub_401bc0(char *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v2 = &v3;\n
    v1 = &v5;\n
    v0 = sub_401820(v4, v1);\n
    return v0;\n
}\n
", "4201456:sub_401bf0": "int sub_401bf0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201510:sub_401c26": null, "4201520:sub_401c30": "int sub_401c30(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201574:sub_401c66": null, "4201584:sub_401c70": "int sub_401c70(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (32 <= v3 && v3 <= 126)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201642:sub_401caa": null, "4201648:sub_401cb0": "int sub_401cb0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401bf0(v3) && !sub_401c30(v3))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4201724:sub_401cfc": null, "4201728:sub_401d00": "int sub_401d00(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 != 32 && v3 != 9 && v3 != 10 && v3 != 11 && v3 != 12 && v3 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4201822:sub_401d5e": null, "4201824:sub_401d60": "int sub_401d60(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201878:sub_401d96": null, "4201888:sub_401da0": null, "4201928:sub_401dc8": null, "4201936:sub_401dd0": null, "4202000:sub_401e10": "int sub_401e10(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v0 = v3 + 32;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4202058:sub_401e4a": null, "4202064:sub_401e50": "int sub_401e50(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v0 = v3 + -32;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4202122:sub_401e8a": null, "4202128:sub_401e90": "int sub_401e90(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v4 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v4 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v4 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v4 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4202366:sub_401f7e": null, "4202368:sub_401f80": "int sub_401f80(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4202459:sub_401fdb": null, "4202464:sub_401fe0": "int sub_401fe0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4202570:sub_40204a": null, "4202576:sub_402050": "int sub_402050(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *(&v0[v3]) = *(&v0[a0]);\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    return v3;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *(&v2[v5]) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        v2[v5] = v1;\n
    }\n
    return v5;\n
}\n
", "4202889:sub_402189": null, "4202896:sub_402190": "int sub_402190(char *v7)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; sub_401d00(*(v7)); v7 += 1);\n
    for (v1 = 0; *(v7); v7 += 1)\n
    {\n
        if (*(v7) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v7) != 43)\n
            {\n
                if (!sub_401d60(*(v7)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v7) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = v3 * v2;\n
    return v4;\n
}\n
", "4203277:sub_40230d": null, "4203280:sub_402310": "int sub_402310(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[v3]; v0 += 1);\n
    return v0;\n
}\n
", "4203335:sub_402347": null, "4203344:sub_402350": "int sub_402350(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (v3 < 0)\n
    {\n
        v0 = -(v3);\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4203392:sub_402380": "int sub_402380(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (!v3)\n
        return v3;\n
    v4 = *(v3);\n
    v0 = v4;\n
    if (!v0)\n
        return *(v3);\n
    if (*(v0))\n
        sub_401380(*(v0));\n
    sub_401380(v0);\n
    v4 = v3;\n
    *(v4) = 0;\n
    return v3;\n
}\n
", "4203489:sub_4023e1": null, "4203504:sub_4023f0": "int sub_4023f0(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0[0] = 0;\n
    if (!v4)\n
    {\n
        v1[0] = v0;\n
        return v1;\n
    }\n
    else if (a0)\n
    {\n
        v0[0] = sub_401050(16);\n
        if (!v0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        sub_4020e0(v0, 0, 16);\n
        v0[0] = sub_401050(a0);\n
        if (!v0[0])\n
        {\n
            sub_401380(v0);\n
            v0[0] = 0;\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0[1] = a0;\n
        sub_402050(v0[0], v4, a0);\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
}\n
", "4203739:sub_4024db": null, "4203744:sub_4024e0": "int sub_4024e0(unsigned int v7[4], unsigned int a0, unsigned int *a1)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8[4];  // eax\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v0 = 0;\n
    if (v7 && a1 && a0)\n
    {\n
        if (!v7[0])\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        else if (a0 <= 32)\n
        {\n
            v3 = v7[2] * 8;\n
            if (v7[1] << 3 < v3)\n
            {\n
                v4 = v2;\n
                return v4;\n
            }\n
            for (v3 = v7[3] + a0 + v3; a0; v2 += 1)\n
            {\n
                v1 = *((v7[0] + v7[2]));\n
                v1 = (v1 >> ((7 - v7[3]) & 31)) & 1;\n
                v0 *= 2;\n
                v0 = v1 | v0;\n
                v7[3] = v7[3] + 1 & 7;\n
                if (!v7[3])\n
                {\n
                    v8 = v7;\n
                    v8[2] = v8[2] + 1;\n
                }\n
                a0 -= 1;\n
            }\n
            *(a1) = v0;\n
            v4 = v2;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4204096:sub_402640": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402640(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = v7;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v3 = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, v1 + v2, 1))\n
        {\n
            sub_401bc0(\"[ERROR] Read fail\\n
\");\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = v3 + v2;\n
    }\n
}\n
", "4204276:sub_4026f4": null, "4204288:sub_402700": "int sub_402700(unsigned int v3[149])\n
{\n
    struct struct_0 **v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!v3)\n
        return v3;\n
    for (v0 = 0; v0 < 8; v0 = v0 + 1)\n
    {\n
        if (*((528 + &v3[0] + 0x8 * v0)))\n
        {\n
            sub_401380(*((528 + &v3[0] + 0x8 * v0)));\n
            *((528 + &v3[0] + 0x8 * v0)) = 0;\n
            *((524 + &v3[0] + 0x8 * v0)) = 0;\n
        }\n
    }\n
    if (!v3[148])\n
        return sub_401380(v3);\n
    for (v0 = 0; v0 < v3[147]; v0 = v0 + 1)\n
    {\n
        if (*((v3[148] + (v0 << 2))))\n
        {\n
            if (*((*((v3[148] + (v0 << 2))) + 8)))\n
            {\n
                sub_401380(*((*((v3[148] + v0 * 4)) + 8)));\n
                *((*((v3[148] + v0 * 4)) + 8)) = 0;\n
                *(*((v3[148] + v0 * 4))) = 0;\n
                *((*((v3[148] + v0 * 4)) + 4)) = 0;\n
            }\n
            sub_401380(*((v3[148] + v0 * 4)));\n
            *((v3[148] + v0 * 4)) = 0;\n
        }\n
    }\n
    sub_401380(v3[148]);\n
    v3[148] = 0;\n
}\n
", "4204704:sub_4028a0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_4028a0(unsigned int v13[149])\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    struct_0 *v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
\n
    v11 = &v12;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 1;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v13)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    else if (v13[148])\n
    {\n
        v8 = v13[0] * v13[1];\n
        sub_401bc0(\"--------------------Playing video-------------------\\n
\");\n
        v0 = v13[1];\n
        v1 = v13[147];\n
        sub_401bc0(\"INFO: Height: $d Width: $d Frames: $d\\n
\");\n
        sub_401bc0(\"INFO: Set your terminal height so that only the '|'s show.\\n
\");\n
        sub_401bc0(\"INFO: This will provide a better viewing experience\\n
\");\n
        sub_401bc0(\"INFO: When ready press a key...\\n
\");\n
        for (v3 = 0; v3 < v13[0]; v3 += 1)\n
        {\n
            sub_401bc0(\"|\\n
\");\n
        }\n
        if (!sub_402640(&v5, 1))\n
        {\n
            v10 = 0;\n
            return v10;\n
        }\n
        while (true)\n
        {\n
            if (v9 < v13[147])\n
            {\n
                v7 = *((v13[148] + v9 * 4));\n
                if (!v7)\n
                {\n
                    v10 = 0;\n
                    return v10;\n
                }\n
                for (v2 = 0; v2 < v8; v2 += 1)\n
                {\n
                    if (v2 && !(0 CONCAT v2) /m v7->field_4 >> 32)\n
                        sub_401bc0(\"\\n
\");\n
                    sub_401bc0(\"$c\");\n
                }\n
                v9 = v9 + 1;\n
                sub_401bc0(\"\\n
\");\n
            }\n
            else\n
            {\n
                v10 = v6;\n
                return v10;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
}\n
", "4205231:sub_402aaf": null, "4205232:sub_402ab0": "int sub_402ab0(unsigned int v4)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    for (v0 = 0; v4; v4 >>= 1)\n
    {\n
        v0 += 1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4205321:sub_402b09": null, "4205328:sub_402b10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402b10(unsigned int v21[4], unsigned int a0[149])\n
{\n
    void* v0;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x3c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x34], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x28]\n
    void* v8;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11[2];  // [bp-0x18], Other Possible Types: struct_0 *, unsigned int\n
    void* v12;  // [bp-0x14], Other Possible Types: unsigned int [3]\n
    char v13;  // [bp-0x10]\n
    char v14;  // [bp-0xf]\n
    char v15;  // [bp-0xe]\n
    char v16;  // [bp-0xd]\n
    void* v17;  // [bp-0xc]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v19;  // [bp-0x4]\n
    char v20;  // [bp+0x0]\n
    unsigned int v22[149];  // eax\n
\n
    v19 = &v20;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12[0] = 0;\n
    v11[0] = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v21)\n
    {\n
        v18 = 0;\n
        return v18;\n
    }\n
    else if (!a0)\n
    {\n
        v18 = 0;\n
        return v18;\n
    }\n
    else if (!a0[0])\n
    {\n
        sub_401bc0(\"[ERROR] Header must be specified prior to frame rendering.\\n
\");\n
        v18 = 0;\n
        return v18;\n
    }\n
    else if (a0[2] <= a0[147])\n
    {\n
        sub_401bc0(\"[ERROR] Too many frames\\n
\");\n
        v18 = 0;\n
        return v18;\n
    }\n
    else if (sub_4024e0(v21, 8, &v17))\n
    {\n
        v16 = (v17 >> 7) & 1;\n
        v15 = (v17 >> 6) & 1;\n
        v14 = (v17 >> 3) & 7;\n
        v13 = v17 & 7;\n
        if (!a0[147] && v16)\n
        {\n
            sub_401bc0(\"[ERROR] First frame must be full\\n
\");\n
            v18 = 0;\n
            return v18;\n
        }\n
        if (v14)\n
        {\n
            if (v14 == 1)\n
            {\n
                v9 = 2;\n
                v10 = \" .\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 2)\n
            {\n
                v9 = 4;\n
                v10 = \" .|#\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 3)\n
            {\n
                v9 = 8;\n
                v10 = \" .|#@$()\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 4)\n
            {\n
                v9 = 16;\n
                v10 = \" .|#@$()*HOEWM%&\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 5)\n
            {\n
                v9 = 42;\n
                v10 = \" .|#@$()*HOEWM%&abcdefghijklmnopqrstuvwxyz\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 6)\n
            {\n
                v9 = 62;\n
                v10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n
                v11 = &v9;\n
            }\n
            else if (v14 == 7)\n
            {\n
                v9 = 95;\n
                v10 = \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\n
                v11 = &v9;\n
            }\n
        }\n
        else\n
        {\n
            if (a0[131 + 2 * v13])\n
            {\n
                v11[0] = &a0[131 + 2 * v13];\n
            }\n
            else\n
            {\n
                sub_401bc0(\"[ERROR] Custom Dictionary $d does not exist\\n
\");\n
                v18 = 0;\n
                return v18;\n
            }\n
        }\n
        v1 = sub_402ab0(*(v11) - 1);\n
        v12[0] = sub_401050(12);\n
        if (!v12)\n
        {\n
            v18 = 0;\n
            return v18;\n
        }\n
        v8 = a0[1] * a0[0];\n
        v12[0] = a0[0];\n
        v12[1] = a0[1];\n
        v12[2] = sub_401050(v8);\n
        if (!v12[2])\n
        {\n
            sub_401380(v12);\n
            v12 = 0;\n
            v18 = 0;\n
            return v18;\n
        }\n
        if (v16 != 1)\n
        {\n
            v3 = v8;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            v4 = sub_402ab0(v8);\n
            if (!sub_4024e0(v21, v4, &v3))\n
            {\n
                sub_401380(v12[2]);\n
                v12[2] = 0;\n
                sub_401380(v12);\n
                v12 = 0;\n
                v18 = 0;\n
                return v18;\n
            }\n
            if (!v3)\n
            {\n
                sub_401bc0(\"[ERROR] Empty frames not allowed\\n
\");\n
                sub_401380(v12[2]);\n
                v12[2] = 0;\n
                sub_401380(v12);\n
                v12 = 0;\n
                v18 = 0;\n
                return v18;\n
            }\n
            v2 = sub_402ab0(v8 - 1);\n
        }\n
        if (!v16)\n
        {\n
            sub_4020e0(v12[2], 32, v8);\n
            for (v6 = 0; v6 < v3; v6 += 1)\n
            {\n
                if (!sub_4024e0(v21, v1, &v5))\n
                {\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    v18 = 0;\n
                    return v18;\n
                }\n
                else if (v5 <= *(v11))\n
                {\n
                    v6[v12[2]] = v5[*((v11 + 4))];\n
                    v5 = 0;\n
                }\n
                else\n
                {\n
                    sub_401bc0(\"[ERROR] invalid pixel\\n
\");\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    v18 = 0;\n
                    return v18;\n
                }\n
            }\n
            v6 = 8 - (v1 * v3 & 7) & 7;\n
        }\n
        else\n
        {\n
            if (!*((a0[148] + (a0[147] - 1 << 2))))\n
            {\n
                sub_401380(v12[2]);\n
                v12[2] = 0;\n
                sub_401380(v12);\n
                v12 = 0;\n
                v18 = 0;\n
                return v18;\n
            }\n
            sub_402050(v12[2], *((*((a0[148] + (a0[147] - 1) * 4)) + 8)), v8);\n
            for (v0 = 0; v0 < v3; v0 += 1)\n
            {\n
                v6 = 0;\n
                v5 = 0;\n
                if (!sub_4024e0(v21, v2, &v6))\n
                {\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    sub_401bc0(\"[ERROR] Failed to read pixel index\\n
\");\n
                    v18 = 0;\n
                    return v18;\n
                }\n
                if (!sub_4024e0(v21, v1, &v5))\n
                {\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    sub_401bc0(\"[ERROR] Failed to read pixel value\\n
\");\n
                    v18 = 0;\n
                    return v18;\n
                }\n
                if (v6 >= v8)\n
                {\n
                    sub_401bc0(\"[ERROR] Index out of image bounds\\n
\");\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    v18 = 0;\n
                    return v18;\n
                }\n
                if (v5 >= *(v11))\n
                {\n
                    sub_401bc0(\"[ERROR] Pixel beyond dictionary bounds\\n
\");\n
                    sub_401380(v12[2]);\n
                    v12[2] = 0;\n
                    sub_401380(v12);\n
                    v12 = 0;\n
                    v18 = 0;\n
                    return v18;\n
                }\n
                v6[v12[2]] = v5[*((v11 + 4))];\n
            }\n
            v6 = v4;\n
            v6 = &v6[v3 * (v2 + v1)];\n
            v6 &= 7;\n
            v6 = 8 + -0x1 * v6 & 7;\n
        }\n
        if (v6 && !sub_4024e0(v21, v6, &v5))\n
        {\n
            sub_401380(v12[2]);\n
            v12[2] = 0;\n
            sub_401380(v12);\n
            v12 = 0;\n
            sub_401bc0(\"[ERROR] Failed to read padding bits\\n
\");\n
            v18 = 0;\n
            return v18;\n
        }\n
        *((a0[148] + a0[147] * 4)) = v12;\n
        v22 = a0;\n
        v22[147] = v22[147] + 1;\n
        v18 = 1;\n
        return v18;\n
    }\n
    else\n
    {\n
        v18 = 0;\n
        return v18;\n
    }\n
}\n
", "4207592:sub_4033e8": null, "4207600:sub_4033f0": "int sub_4033f0(unsigned int v7[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14], Other Possible Types: void*\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        if (a1 >= 0 && a1 <= 7)\n
        {\n
            if (*((a0 + (a1 << 3) + 524)))\n
            {\n
                sub_401bc0(\"[ERROR] Only one type %d pixel allowed.\\n
\");\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (!sub_4024e0(v7, 8, &v3))\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (v3)\n
            {\n
                v1 = sub_401050(v3 + 1);\n
                if (!v1)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                sub_4020e0(v1, 0, v3 + 1);\n
                v0 = 0;\n
                while (true)\n
                {\n
                    if (v0 >= v3)\n
                    {\n
                        sub_4020e0(a0 + 524 + a1 * 8, 0, 8);\n
                        *((a0 + a1 * 8 + 524)) = v3;\n
                        *((a0 + a1 * 8 + 528)) = v1;\n
                        v4 = 1;\n
                        return v4;\n
                    }\n
                    else if (sub_4024e0(v7, 8, &v2))\n
                    {\n
                        v1[v0] = v2;\n
                        v2 = 0;\n
                        v0 += 1;\n
                    }\n
                    else\n
                    {\n
                        sub_401bc0(\"[ERROR] Failed to read custom pixel dictionary\\n
\");\n
                        sub_401380(v1);\n
                        v1 = 0;\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                sub_401bc0(\"[ERROR] Zero length pixel dictionary not allowed.\\n
\");\n
                v4 = v3;\n
                return v4;\n
            }\n
        }\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4208137:sub_403609": null, "4208144:sub_403610": "typedef struct struct_0 {\n
    char padding_0[268];\n
    char field_10c;\n
} struct_0;\n
\n
int sub_403610(unsigned int v7[4], struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0->field_10c)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!sub_4024e0(v7, 8, &v3))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3 <= 255)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= v3)\n
            {\n
                v2 = 0;\n
                while (true)\n
                {\n
                    if (v2 < v3)\n
                    {\n
                        v1 = *((a0 + v2 + 268));\n
                        if (!sub_401cb0(v1) && !sub_401d60(v1) && !sub_401d00(v1))\n
                        {\n
                            sub_401bc0(\"[ERROR] Invalid character in description\\n
\");\n
                            v4 = 0;\n
                            return v4;\n
                        }\n
                        v2 += 1;\n
                    }\n
                    else\n
                    {\n
                        v4 = 1;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            else if (sub_4024e0(v7, 8, &v0))\n
            {\n
                *((a0 + v2 + 268)) = v0;\n
                v0 = 0;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4208585:sub_4037c9": null, "4208592:sub_4037d0": "typedef struct struct_0 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_0;\n
\n
int sub_4037d0(unsigned int v7[4], struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v7 && a0)\n
    {\n
        if (a0->field_c)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!sub_4024e0(v7, 8, &v3))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v3 <= 255)\n
        {\n
            v1 = 0;\n
            while (true)\n
            {\n
                if (v1 >= v3)\n
                {\n
                    v0 = 0;\n
                    while (true)\n
                    {\n
                        if (v0 >= v3)\n
                        {\n
                            v4 = 1;\n
                            return v4;\n
                        }\n
                        if (!sub_401c70(*((a0 + v0 + 12))))\n
                        {\n
                            sub_401bc0(\"[ERROR] Invalid value in name field\\n
\");\n
                            v4 = 0;\n
                            return v4;\n
                        }\n
                        v0 += 1;\n
                    }\n
                }\n
                else if (sub_4024e0(v7, 8, &v2))\n
                {\n
                    (&a0->field_c)[v1] = v2;\n
                    v2 = 0;\n
                    v1 += 1;\n
                }\n
                else\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4208964:sub_403944": null, "4208976:sub_403950": "int sub_403950(unsigned int v3[4], unsigned int a0[149])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!v3)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0[0])\n
    {\n
        sub_401bc0(\"[ERROR] Multiple header sections are not permitted.\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!sub_4024e0(v3, 8, a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0[0])\n
    {\n
        sub_401bc0(\"[ERROR] Zero length height is not permitted\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0[0] > 35)\n
    {\n
        sub_401bc0(\"[ERROR] Height must be less than 35\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!sub_4024e0(v3, 8, &a0[1]))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0[1])\n
    {\n
        sub_401bc0(\"[ERROR] Zero length width is not permitted\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0[1] > 128)\n
    {\n
        sub_401bc0(\"[ERROR] Width must be less than 128\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!sub_4024e0(v3, 16, &a0[2]))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0[2] > 0x800)\n
    {\n
        sub_401bc0(\"[ERROR] Maximum frame count is 2048\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0[2])\n
    {\n
        a0[148] = sub_401050(a0[2] * 4);\n
        if (!a0[148])\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        sub_4020e0(a0[148], 0, a0[2] * 4);\n
        v0 = 1;\n
        return v0;\n
    }\n
    else\n
    {\n
        sub_401bc0(\"[ERROR] Zero frame count is not permitted\\n
\");\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4209566:sub_403b9e": null, "4209568:sub_403ba0": "int sub_403ba0(unsigned int v5[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v5)\n
        return v5;\n
    v6 = sub_4024e0(v5, 32, &v2);\n
    if (!v6)\n
        return v6;\n
    if (v2 != 4412998)\n
    {\n
        v6 = sub_401bc0(\"[ERROR] Invalid magic: $d\\n
\");\n
        return v6;\n
    }\n
    v6 = sub_403e30();\n
    v1 = v6;\n
    if (!v1)\n
        return v6;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (sub_4024e0(v5, 16, &v2))\n
        {\n
            v0 = v2;\n
            if (v0 == 4369)\n
            {\n
                if (!sub_403950(v5, v1))\n
                {\n
                    v6 = sub_402700(v1);\n
                    v1 = 0;\n
                    return v6;\n
                }\n
            }\n
            else\n
            {\n
                if (v0 == 8738)\n
                {\n
                    if (!sub_4037d0(v5, v1))\n
                    {\n
                        v6 = sub_402700(v1);\n
                        v1 = 0;\n
                        return v6;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v0 == 13107)\n
                    {\n
                        if (!sub_403610(v5, v1))\n
                        {\n
                            v6 = sub_402700(v1);\n
                            v1 = 0;\n
                            return v6;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (v0 - 17476 < 8)\n
                        {\n
                            v2 -= 17476;\n
                            if (!sub_4033f0(v5, v1, v2))\n
                            {\n
                                v6 = sub_402700(v1);\n
                                v1 = 0;\n
                                return v6;\n
                            }\n
                        }\n
                        else if (v0 != 21845)\n
                        {\n
                            v6 = sub_401bc0(\"[ERROR] Invalid section type: $d\\n
\");\n
                            return v6;\n
                        }\n
                        else if (!sub_402b10(v5, v1))\n
                        {\n
                            v6 = sub_402700(v1);\n
                            v1 = 0;\n
                            return v6;\n
                        }\n
                    }\n
                }\n
            }\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            sub_4028a0(v1);\n
            v6 = sub_402700(v1);\n
            return v6;\n
        }\n
    }\n
}\n
", "4210209:sub_403e21": null, "4210224:sub_403e30": "int sub_403e30()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v0 = sub_401050(596);\n
    if (!v0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    sub_4020e0(v0, 0, 596);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4210320:sub_403e90": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_403e90(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = v7;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (0 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_receive(0, v2 + v1, a0))\n
            {\n
                sub_401bc0(\"[ERROR] Failed to receive\\n
\");\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1 = v3 + v1;\n
            a0 -= v3;\n
        }\n
        else\n
        {\n
            v4 = v1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4210502:sub_403f46": null, "4210512:sub_403f50": "int sub_403f50()\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    sub_401bc0(\"----------------Stream Me Your Video----------------\\n
\");\n
    v2 = sub_403e90(&v3, 4);\n
    if (v2 != 4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3 > 0x1000)\n
    {\n
        sub_401bc0(\"[ERROR] Image must be smaller than 4096 bytes\\n
\");\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3 >= 8)\n
    {\n
        v0 = sub_401050(v3);\n
        if (!v0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        sub_4020e0(v0, 0, v3);\n
        v2 = sub_403e90(v0, v3);\n
        if (v2 != v3)\n
        {\n
            sub_401380(v0);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v1 = sub_4023f0(v0, v3);\n
        sub_401380(v0);\n
        v0 = 0;\n
        v4 = v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        sub_401bc0(\"[ERROR] Image must be greater than 8 bytes\\n
\");\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4210852:sub_4040a4": null, "4210864:sub_4040b0": "int sub_4040b0(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0[0] = sub_403f50();\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_403ba0(v0);\n
    sub_402380(v0);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4210960:sub_404110": "int sub_404110()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404230();\n
    sub_404240();\n
    sub_404260();\n
    v0 = 1;\n
    if (!sub_404830())\n
    {\n
        v0 = 7;\n
        sub_404f10();\n
    }\n
    sub_4050e0();\n
    v1 = sub_405110;\n
    sub_404500();\n
    if (sub_404200())\n
    {\n
        v1 = 7;\n
        sub_404f10();\n
    }\n
    sub_404ca0();\n
    if (sub_404da0())\n
    {\n
        v1 = sub_404c40;\n
        __setusermatherr();\n
    }\n
    sub_404d20();\n
    sub_404d30();\n
    sub_404cf0();\n
    v1 = sub_404c90();\n
    _configthreadlocale();\n
    if (sub_404ce0())\n
        sub_404220();\n
    sub_404ed0();\n
    if (sub_404ee0())\n
    {\n
        v1 = 7;\n
        sub_404f10();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4211152:sub_4041d0": "int sub_4041d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404d40();\n
    return 0;\n
}\n
", "4211168:sub_4041e0": "int sub_4041e0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404ef0();\n
    v0 = sub_404c80();\n
    return _set_new_mode();\n
}\n
", "4211200:sub_404200": "int sub_404200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_404c50());\n
}\n
", "4211232:sub_404220": "int sub_404220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4211248:sub_404230": "int sub_404230()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4211264:sub_404240": "int sub_404240()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_404c70());\n
}\n
", "4211296:sub_404260": "int sub_404260()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_404c60(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4211328:sub_404280": "int sub_404280()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_4040b0(v1, v2);\n
}\n
", "4211392:sub_4042c0": "extern char g_4068a8;\n
extern char g_4068b0;\n
extern char g_4068b4;\n
extern struct_0 *g_4068c0;\n
extern char g_406f38;\n
extern unsigned int g_407040;\n
extern unsigned int g_40709c;\n
\n
int sub_4042c0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_406f38;\n
    v13 = sub_405140;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_407040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_4047a0(1, g_407040 ^ &v16, v22, v23))\n
        sub_404f10();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_404720();\n
    if (g_40709c == 1)\n
    {\n
        v16 = 7;\n
        sub_404f10();\n
    }\n
    else if (g_40709c)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_40709c = 1;\n
        v16 = &g_4068c0;\n
        v15 = &g_4068b4;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_4044c9;\n
        }\n
        else\n
        {\n
            v16 = &g_4068b0;\n
            v15 = &g_4068a8;\n
            _initterm(*(&v17));\n
            g_40709c = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_404770();\n
    v8 = sub_404dd0();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_4045f0())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_405180(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_404de0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_4045f0())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_404280();\n
    if (!sub_404e40())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_4047f0(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_4044c9:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4211807:sub_40445f": "int sub_40445f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4211816:sub_404468": "int sub_404468()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4211843:sub_404483": "extern char g_404491;\n
\n
int sub_404483()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_404491;\n
    if (!sub_404e40())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4211906:sub_4044c2": "int sub_4044c2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4211936:sub_4044e0": "int sub_4044e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404b50();\n
    return sub_4042c0();\n
}\n
", "4211952:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4044e0();\n
}\n
", "4211968:sub_404500": "int sub_404500(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_404530(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4212016:sub_404530": "extern unsigned int g_4070a8;\n
\n
int sub_404530(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4070a8;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4070a8))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4212072:sub_404568": "int sub_404568()\n
{\n
}\n
", "4212128:sub_4045a0": "extern unsigned int g_4070b4;\n
\n
int sub_4045a0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4070b4;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4070b4);\n
    return v6;\n
}\n
", "4212162:sub_4045c2": "int sub_4045c2()\n
{\n
}\n
", "4212192:sub_4045e0": "int sub_4045e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4212208:sub_4045f0": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_406f58;\n
extern unsigned int g_407040;\n
\n
int sub_4045f0(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_406f58;\n
    v13 = sub_405140;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_407040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_404a50(v6, g_407040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_404ac0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4212413:sub_4046bd": "int sub_4046bd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4212422:sub_4046c6": "int sub_4046c6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4212461:sub_4046ed": "int sub_4046ed()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4212480:sub_404700": "int sub_404700()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4212512:sub_404720": "extern unsigned int g_4070a0;\n
\n
int sub_404720()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_405960();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_4045e0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4070a0 = v6;\n
        if (!g_4070a0)\n
        {\n
            tmp_0 = 0;\n
            g_4070a0 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4070a0 = v6;\n
            v5 = g_4070a0;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4212592:sub_404770": "extern void* g_4070a0;\n
\n
int sub_404770(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405960();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4070a0;\n
        g_4070a0 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40478f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4212640:sub_4047a0": "extern char g_4070a4;\n
\n
int sub_4047a0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4070a4 = 1;\n
    sub_4054d0();\n
    v4 = sub_405d00();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_405d00();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_405d10();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4212720:sub_4047f0": "extern char g_4070a4;\n
\n
int sub_4047f0(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4070a4 && a0)\n
        return 1;\n
    sub_405d10(v2);\n
    v3 = sub_405d10();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4212784:sub_404830": "extern char g_4070a5;\n
extern unsigned int g_4070a8;\n
extern unsigned int g_4070ac;\n
extern unsigned int g_4070b0;\n
extern unsigned int g_4070b4;\n
extern unsigned int g_4070b8;\n
extern unsigned int g_4070bc;\n
\n
int sub_404830(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4070a5)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_404f10();\n
    }\n
    if (sub_405960() && !v10)\n
    {\n
        v8 = &g_4070a8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4070b4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_4048f6;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4070a8 = v4;\n
    g_4070ac = v5;\n
    g_4070b0 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4070b4 = v1;\n
    g_4070b8 = v2;\n
    v11 = v3;\n
    g_4070bc = v11;\n
LABEL_4048f6:\n
    g_4070a5 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4213008:sub_404910": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404910(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_1 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_1 **v1;  // [bp-0xc]\n
    struct struct_1 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_405960() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_405180(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4213088:sub_404960": "int sub_404960()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_404830(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4213120:sub_404980": "int sub_404980()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_405960())\n
    {\n
        v3 = sub_4054d0();\n
    }\n
    else\n
    {\n
        v3 = sub_404200();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_404220();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4213168:sub_4049b0": "extern char g_4070a8;\n
\n
int sub_4049b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_405960())\n
    {\n
        v0 = &g_4070a8;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_405d50();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4213216:sub_4049e0": "int sub_4049e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405d20(0);\n
    return sub_405d20();\n
}\n
", "4213248:sub_404a00": "int sub_404a00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_405d30();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_405d30();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_405d40();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4213296:sub_404a30": "char sub_404a30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405d40();\n
    sub_405d40();\n
    return 1;\n
}\n
", "4213328:sub_404a50": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_404a50(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4213440:sub_404ac0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_404ac0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 = &v5[2 + 2];\n
    }\n
}\n
", "4213584:sub_404b50": "extern unsigned int g_407040;\n
extern unsigned int g_407080;\n
\n
int sub_404b50()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_407040 != 3141592654)\n
    {\n
        v4 = g_407040 & -0x10000;\n
        if (v4)\n
        {\n
            g_407080 = ~(g_407040);\n
            return g_407040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_404bd0(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_407040 = v0;\n
    g_407080 = ~(v0);\n
    return v4;\n
}\n
", "4213712:sub_404bd0": "int sub_404bd0()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4213824:sub_404c40": "int sub_404c40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213840:sub_404c50": "int sub_404c50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4213856:sub_404c60": "int sub_404c60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213872:sub_404c70": "int sub_404c70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4213888:sub_404c80": "int sub_404c80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213904:sub_404c90": "int sub_404c90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4213920:sub_404ca0": "extern void g_4070c0;\n
\n
int sub_404ca0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4070c0);\n
}\n
", "4213952:sub_404cc0": "extern unsigned int g_4070c0;\n
\n
int sub_404cc0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4070c0);\n
}\n
", "4213984:sub_404ce0": "char sub_404ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4214000:sub_404cf0": "int sub_404cf0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_404f10();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4214048:sub_404d20": "int sub_404d20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4214064:sub_404d30": "int sub_404d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4214080:sub_404d40": "int sub_404d40()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_404d80();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_404d90(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4214144:sub_404d80": "extern char g_4070c8;\n
\n
int sub_404d80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4070c8;\n
}\n
", "4214160:sub_404d90": "extern char g_4070d0;\n
\n
int sub_404d90()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4070d0;\n
}\n
", "4214176:sub_404da0": "extern unsigned int g_407008;\n
\n
int sub_404da0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_407008)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214224:sub_404dd0": "extern char g_4070dc;\n
\n
int sub_404dd0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4070dc;\n
}\n
", "4214240:sub_404de0": "extern char g_4070e0;\n
\n
int sub_404de0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4070e0;\n
}\n
", "4214256:sub_404df0": "extern void* g_4070e4;\n
\n
int sub_404df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4070e4 = 0;\n
    return v3;\n
}\n
", "4214272:sub_404e00": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_404e00()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4214336:sub_404e40": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_404e40()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4214480:sub_404ed0": "int sub_404ed0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4214496:sub_404ee0": "int sub_404ee0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405050();\n
}\n
", "4214512:sub_404ef0": "int sub_404ef0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_405060);\n
}\n
", "4214544:sub_404f10": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_404f10()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_404df0();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_404df0();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4214569:sub_404f29": "int sub_404f29()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4214569\n
}\n
", "4214864:sub_405050": "int sub_405050()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4214880:sub_405060": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_405060(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4215008:sub_4050e0": "extern struct_0 *g_406f28;\n
\n
int sub_4050e0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_406f28;\n
    v3 = &g_406f28;\n
    return &g_406f28;\n
}\n
", "4215056:sub_405110": "extern struct_0 *g_406f30;\n
\n
int sub_405110()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_406f30;\n
    v3 = &g_406f30;\n
    return &g_406f30;\n
}\n
", "4215104:sub_405140": "extern unsigned int g_407040;\n
\n
int sub_405140(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_405d60(*(v2));\n
    return _except_handler4_common(&g_407040, sub_405990, v2, a0, a1);\n
}\n
", "4215168:sub_405180": "int sub_405180()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4215184:sub_405190": "int sub_405190(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x405199;\n
    return tmp_4;\n
}\n
", "4215200:sub_4051a0": "int sub_4051a0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4215232:sub_4051c0": "int sub_4051c0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4051a0(v2);\n
}\n
", "4215264:sub_4051e0": "extern unsigned int g_4070e8;\n
\n
int sub_4051e0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_405190(&g_4070e8, v3);\n
    return v0;\n
}\n
", "4215296:sub_405200": "extern char g_405180;\n
extern unsigned int g_408000;\n
\n
int sub_405200()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_4051c0(&g_408000) != sub_405180)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215344:sub_405230": "extern char g_4067c0;\n
\n
int sub_405230(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_4067c0;\n
    v1 = &g_4067c0;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215408:sub_405270": "extern unsigned int g_408008;\n
\n
int sub_405270(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_4051c0(&g_408008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4215456:sub_4052a0": "extern unsigned int g_4070e8;\n
\n
int sub_4052a0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_4051c0(&g_4070e8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_405180();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4215520:sub_4052e0": "int sub_4052e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215536:sub_4052f0": "int sub_4052f0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405230(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4215555\n
}\n
", "4215568:sub_405310": "int sub_405310(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405230(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4215593:sub_405329": "int sub_405329()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4215593\n
}\n
", "4215600:sub_405330": "int sub_405330(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405230(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405270(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215648:sub_405360": "int sub_405360(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405230(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4052a0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215696:sub_405390": "extern char g_4067c0;\n
\n
int sub_405390(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_4067c0;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215760:sub_4053d0": "int sub_4053d0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405390(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405230(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4215803\n
}\n
", "4215808:sub_405400": "int sub_405400(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405390(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405230(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4215857:sub_405431": "int sub_405431()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4215857\n
}\n
", "4215872:sub_405440": "int sub_405440()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4215888:sub_405450": "int sub_405450(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405390(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405230(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405270(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4215952:sub_405490": "int sub_405490(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405390(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405230(v2);\n
    if (v3)\n
    {\n
        v3 = sub_4052a0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4216016:sub_4054d0": "extern unsigned int g_407040;\n
extern unsigned int g_407088;\n
extern unsigned int g_40708c;\n
extern unsigned int g_407090;\n
extern unsigned int g_4070ec;\n
extern unsigned int g_4070f0;\n
extern unsigned int g_4070f4;\n
\n
int sub_4054d0()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_407040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4070f0 = 0;\n
    g_407090 = g_407090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_405990();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40561b;\n
        g_4070f4 = g_4070f4 | 1;\n
    }\n
LABEL_40561b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4070f4 = g_4070f4 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4070f0 = 1;\n
    g_407090 = g_407090 | 2;\n
    g_407088 = g_407088 & -2;\n
    g_40708c = g_40708c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4070f0 = 2;\n
        g_407090 = g_407090 | 4;\n
        g_407088 = g_407088 & -17;\n
        g_40708c = g_40708c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4070f0 = 3;\n
                g_407090 = g_407090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4070f0 = 5;\n
                    g_407090 = g_407090 | 32;\n
                    g_407088 = g_407088 & -3;\n
                    g_40708c = g_40708c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4070f0 = 6;\n
                            g_407090 = g_407090 | 64;\n
                            g_407088 = g_407088 & -37;\n
                            g_40708c = g_40708c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_407088 = g_407088 & -16777217;\n
                    g_40708c = g_40708c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4070ec = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_407088 = ~(v2 | 16777256) & g_407088;\n
                        g_40708c = ~(v3) & g_40708c;\n
                        if (g_4070ec > 1)\n
                        {\n
                            g_407088 = g_407088 & -65;\n
                            g_40708c = g_40708c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4217184:sub_405960": "extern unsigned int g_407094;\n
\n
int sub_405960()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_407094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4217232:sub_405990": "extern unsigned int g_407040;\n
extern unsigned int g_407080;\n
extern unsigned int g_407100;\n
extern unsigned int g_407104;\n
extern unsigned int g_40710c;\n
extern unsigned int g_407110;\n
extern unsigned int g_407114;\n
extern unsigned int g_407150;\n
extern unsigned short g_4071dc;\n
extern unsigned short g_4071e0;\n
extern unsigned short g_4071e4;\n
extern unsigned short g_4071e8;\n
extern unsigned int g_4071ec;\n
extern unsigned int g_4071f0;\n
extern unsigned int g_4071f4;\n
extern unsigned int g_4071f8;\n
extern unsigned int g_4071fc;\n
extern unsigned int g_407200;\n
extern unsigned int g_407204;\n
extern unsigned int g_407208;\n
extern unsigned short g_40720c;\n
extern unsigned int g_407210;\n
extern unsigned int g_407214;\n
extern unsigned short g_407218;\n
\n
int sub_405990()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_407040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_407200 = v7;\n
        g_4071fc = v6;\n
        g_4071f8 = v8;\n
        g_4071f4 = v9;\n
        g_4071f0 = v10;\n
        g_4071ec = v11;\n
        g_407218 = v12;\n
        g_40720c = v13;\n
        g_4071e8 = v14;\n
        g_4071e4 = v15;\n
        g_4071e0 = v16;\n
        g_4071dc = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_407210 = v0;\n
        g_407204 = v3;\n
        g_407208 = *(&v4);\n
        g_407214 = &v5;\n
        g_407150 = 65537;\n
        g_40710c = g_407208;\n
        g_407100 = 3221226505;\n
        g_407104 = 1;\n
        g_407110 = 1;\n
        g_407114 = 2;\n
        v1 = g_407040;\n
        v2 = g_407080;\n
        sub_405cd0();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4217248:sub_4059a0": "extern unsigned int g_407100;\n
extern unsigned int g_407104;\n
extern unsigned int g_40710c;\n
extern unsigned int g_407110;\n
extern unsigned int g_407114;\n
extern unsigned short g_4071dc;\n
extern unsigned short g_4071e0;\n
extern unsigned short g_4071e4;\n
extern unsigned short g_4071e8;\n
extern unsigned int g_4071ec;\n
extern unsigned int g_4071f0;\n
extern unsigned int g_4071f4;\n
extern unsigned int g_4071f8;\n
extern unsigned int g_4071fc;\n
extern unsigned int g_407200;\n
extern unsigned int g_407204;\n
extern unsigned int g_407208;\n
extern unsigned short g_40720c;\n
extern unsigned int g_407210;\n
extern unsigned int g_407214;\n
extern unsigned short g_407218;\n
\n
int sub_4059a0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_407200 = v4;\n
        g_4071fc = v5;\n
        g_4071f8 = v6;\n
        g_4071f4 = v7;\n
        g_4071f0 = v8;\n
        g_4071ec = v9;\n
        g_407218 = v10;\n
        g_40720c = v11;\n
        g_4071e8 = v12;\n
        g_4071e4 = v13;\n
        g_4071e0 = v14;\n
        g_4071dc = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_407210 = v0;\n
        g_407204 = v1;\n
        g_407208 = *(&v2);\n
        g_407214 = &v3;\n
        g_40710c = g_407208;\n
        g_407100 = 3221226505;\n
        g_407104 = 1;\n
        g_407110 = 1;\n
        g_407114 = v3;\n
        sub_405cd0();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4217273:sub_4059b9": "int sub_4059b9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217273\n
}\n
", "4217472:sub_405a80": "extern unsigned int g_407100;\n
extern unsigned int g_407104;\n
extern unsigned int g_40710c;\n
extern unsigned int g_407110;\n
extern unsigned int g_407114;\n
extern char g_407118;\n
extern unsigned short g_4071dc;\n
extern unsigned short g_4071e0;\n
extern unsigned short g_4071e4;\n
extern unsigned short g_4071e8;\n
extern unsigned int g_4071ec;\n
extern unsigned int g_4071f0;\n
extern unsigned int g_4071f4;\n
extern unsigned int g_4071f8;\n
extern unsigned int g_4071fc;\n
extern unsigned int g_407200;\n
extern unsigned int g_407204;\n
extern unsigned int g_407208;\n
extern unsigned short g_40720c;\n
extern unsigned int g_407210;\n
extern unsigned int g_407214;\n
extern unsigned short g_407218;\n
\n
int sub_405a80()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1055815];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_407200 = v7;\n
        g_4071fc = v8;\n
        g_4071f8 = v9;\n
        g_4071f4 = v10;\n
        g_4071f0 = v11;\n
        g_4071ec = v12;\n
        g_407218 = v13;\n
        g_40720c = v14;\n
        g_4071e8 = v15;\n
        g_4071e4 = v16;\n
        g_4071e0 = v17;\n
        g_4071dc = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_407210 = v0;\n
        g_407204 = v2;\n
        g_407208 = *(&v3);\n
        g_407214 = &v4;\n
        g_40710c = g_407208;\n
        g_407100 = 3221226505;\n
        g_407104 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_407110 = v5 + 1;\n
        g_407114 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_407118)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_405cd0();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4217497:sub_405a99": "int sub_405a99()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217497\n
}\n
", "4217776:sub_405bb0": "int sub_405bb0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4059a0(8);\n
}\n
", "4217819:sub_405bdb": "int sub_405bdb()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217819\n
}\n
", "4218064:sub_405cd0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_405cd0(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4218112:sub_405d00": "char sub_405d00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218128:sub_405d10": "char sub_405d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218144:sub_405d20": "char sub_405d20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218160:sub_405d30": "char sub_405d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218176:sub_405d40": "char sub_405d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4218192:sub_405d50": "int sub_405d50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4218208:sub_405d60": "extern unsigned int g_4070f0;\n
\n
int sub_405d60(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4070f0 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4218516:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4218522:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4218528:cgc_rint": "int cgc_rint()\n
{\n
    return ::kernel32.dll::cgc_rint();\n
}\n
", "4218534:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4218540:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4218546:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4218552:sub_405eb8": "int sub_405eb8(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4218558:sub_405ebe": "int sub_405ebe()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4218564:sub_405ec4": "int sub_405ec4()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4218570:sub_405eca": "int sub_405eca(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4218576:sub_405ed0": "int sub_405ed0(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4218582:sub_405ed6": "int sub_405ed6()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4218588:sub_405edc": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_405edc(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4218594:sub_405ee2": "int sub_405ee2(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4218600:sub_405ee8": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_405ee8(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4218606:sub_405eee": "int sub_405eee(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4218612:sub_405ef4": "int sub_405ef4(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4218618:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4218624:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4218630:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4218636:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4218642:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4218648:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4218654:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4218660:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4218666:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4218672:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4218678:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4218684:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4218690:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4218696:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4218702:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4218708:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4218714:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4218720:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4218726:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4218732:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4218738:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4218744:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4218750:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4218756:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4218762:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4218768:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4218774:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4218780:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4218786:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4218792:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4218798:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4218804:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4218810:sub_405fba": "int sub_405fba()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4218816:sub_405fc0": "int sub_405fc0(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_pow": null, "5242892:cgc_receive": null, "5242896:cgc_rint": null, "5242900:cgc_transmit": null, "5242904:GetCurrentProcess": null, "5242908:GetCurrentProcessId": null, "5242912:GetCurrentThreadId": null, "5242916:GetModuleHandleW": null, "5242920:GetStartupInfoW": null, "5242924:GetSystemTimeAsFileTime": null, "5242928:InitializeSListHead": null, "5242932:IsDebuggerPresent": null, "5242936:IsProcessorFeaturePresent": null, "5242940:QueryPerformanceCounter": null, "5242944:SetUnhandledExceptionFilter": null, "5242948:TerminateProcess": null, "5242952:UnhandledExceptionFilter": null, "5242956:__current_exception": null, "5242960:__current_exception_context": null, "5242964:__std_type_info_destroy_list": null, "5242968:_except_handler4_common": null, "5242972:memset": null, "5242976:__p___argc": null, "5242980:__p___argv": null, "5242984:__p__commode": null, "5242988:__setusermatherr": null, "5242992:_c_exit": null, "5242996:_cexit": null, "5243000:_configthreadlocale": null, "5243004:_configure_narrow_argv": null, "5243008:_controlfp_s": null, "5243012:_crt_at_quick_exit": null, "5243016:_crt_atexit": null, "5243020:_execute_onexit_table": null, "5243024:_exit": null, "5243028:_get_initial_narrow_environment": null, "5243032:_initialize_narrow_environment": null, "5243036:_initialize_onexit_table": null, "5243040:_initterm": null, "5243044:_initterm_e": null, "5243048:_register_onexit_function": null, "5243052:_register_thread_local_exe_atexit_callback": null, "5243056:_seh_filter_dll": null, "5243060:_seh_filter_exe": null, "5243064:_set_app_type": null, "5243068:_set_fmode": null, "5243072:_set_new_mode": null, "5243076:exit": null, "5243080:terminate": null, "6295596:UnresolvableCallTarget": null}