{"4198400:sub_401000": "int sub_401000(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = v2[v0];\n
    }\n
    return v0;\n
}\n
", "4198483:sub_401053": null, "4198496:sub_401060": "int sub_401060(unsigned int v4)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 65535)\n
        {\n
            v1 = 65535;\n
            return v1;\n
        }\n
        else if (v0[v4])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4198589:sub_4010bd": null, "4198592:sub_4010c0": "int sub_4010c0(char *v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = v6;\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2[v0] == *((v1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4198712:sub_401138": null, "4198720:sub_401140": "int sub_401140(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v1[v0] = 0;\n
    }\n
    return v0;\n
}\n
", "4198786:sub_401182": null, "4198800:sub_401190": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401190(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 1; v2 < v7; v2 += v3)\n
    {\n
        v0 = &v3;\n
        v1 = cgc_receive(0, a0 + v2, v7 - v2);\n
        if (v1)\n
        {\n
            v4 = v1;\n
            return v4;\n
        }\n
        if (!v3)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
    if (v2 != v7)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4198985:sub_401249": null, "4198992:sub_401250": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401250(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v0 = &v3;\n
            v1 = cgc_transmit(1, v7 + v2, a0 - v2);\n
            if (v1)\n
            {\n
                v4 = v1;\n
                return v4;\n
            }\n
            if (!v3)\n
            {\n
                v4 = 1;\n
                return v4;\n
            }\n
            v2 += v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199152:sub_4012f0": "extern char g_412098;\n
\n
int sub_4012f0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = &(&g_412098)[420 * v3];\n
    *(&v5) = a0;\n
    for (v0 = 0; v0 < 32; v0 = v5)\n
    {\n
        (&g_412098)[4 + 420 * v3 + v0] = *((a1 + v0));\n
        v5 = v0 + 1;\n
    }\n
    return v5;\n
}\n
", "4199258:sub_40135a": null, "4199264:sub_401360": "extern char g_412098;\n
\n
int sub_401360(unsigned int v4)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 32)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(40 + &(&g_412098)[420 * v4] + 0xc * v0))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&g_412098)[420 * v4 + 36 + 12 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4199393:sub_4013e1": null, "4199408:sub_4013f0": "extern char g_412098;\n
\n
int sub_4013f0(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = &(&g_412098)[36 + 420 * v3 + 12 * a0];\n
    *(v0) = a2;\n
    return sub_401000(a1, v0 + 1, sub_401060(a1));\n
}\n
", "4199502:sub_40144e": null, "4199504:sub_401450": "extern unsigned int g_402083;\n
extern unsigned int g_4056c5;\n
extern unsigned int g_40d9e1;\n
extern unsigned int g_41451e;\n
extern unsigned int g_41813f;\n
extern unsigned int g_41957f;\n
extern unsigned int g_41b09b;\n
extern unsigned int g_41be70;\n
extern unsigned int g_41e4a8;\n
extern unsigned int g_4217db;\n
extern unsigned int g_4237c4;\n
extern unsigned int g_42654a;\n
extern unsigned int g_428444;\n
extern char g_42b93f;\n
extern unsigned int g_42eb06;\n
extern char g_602aaa;\n
extern char g_6073e0;\n
\n
int sub_401450()\n
{\n
    char v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_4012f0(0, 0x48abd000, \"f97adfe8fa275092adf100d06900aed0\");\n
    sub_4012f0(1, 1227987120, \"11160ee476ee4d0e967bc19123306bb6\");\n
    sub_4012f0(2, 1231551904, \"0c5701cee646b0f3f87a0fe9db5a024b\");\n
    sub_4012f0(3, 0x482ed100, \"747bcc0e0f08aefb72860b6ec9c435cc\");\n
    sub_4012f0(4, 1227430432, \"e2cb96336c57f7b627157a85ed2703dd\");\n
    sub_4012f0(5, 1217089664, \"ccefe6f38a3b0dc38ad5b0522eb0e029\");\n
    sub_4012f0(6, 1224445120, \"1a0843b9fa65a1b261f2504c9e879f91\");\n
    sub_4012f0(7, 1211622208, \"43bf8cc93f259c6c468f6f49b02f8f86\");\n
    sub_4012f0(8, 1231795760, \"2d97f928e3f5147c39eddcd134675558\");\n
    sub_4012f0(9, 1226192144, \"18cdc243dc965537e08908cc7740f698\");\n
    sub_4012f0(10, 1229660032, \"824b37f224ed67d898cddd9144327522\");\n
    sub_4012f0(11, 1232120704, \"1a5bec5a98f816d4a9e2ed5ef764ec33\");\n
    sub_4012f0(12, 1221009504, \"ded4773c7efa13ca2f176735cf32f718\");\n
    sub_4012f0(13, 1230150576, \"57c02d796238b4a27093332f5757dd04\");\n
    sub_4012f0(14, 1230678624, \"4943cc5abda9e094a722a3127dbb9be3\");\n
    sub_4012f0(15, 1228195632, \"113ac07641cb7675d2dce9bf1ccf697e\");\n
    strncpy(&v0, \"`\\n
.I\", 4);\n
    sub_4012f0(16, 1228195632, \"2306dd49e6a25060e8f8aece11173fdb\");\n
    sub_4012f0(17, 1225402096, \"c122c416d1415d0cb34e9dba6dc18c87\");\n
    sub_4012f0(18, 1207937408, \"f163ff8824fac3c605d53f37e5e614b9\");\n
    sub_4012f0(19, 1224756592, \"7fb252b79b9d4b1c36ac952e7c647394\");\n
    sub_4012f0(20, 1212091072, \"0376ec02f502a3ae1a776494f67ad2bd\");\n
    sub_4012f0(21, 0x46f21200, \"c35b360d25bbb643a064315b05cbb761\");\n
    sub_4012f0(22, 1229863568, \"ec3603d1a80fc0a9c584ee82bfc0be67\");\n
    sub_4012f0(23, 1208955200, \"1500be58a39ce15068039c989a4a9caf\");\n
    sub_4012f0(24, 0x47c67e00, \"ea512ff327d39e37ddd7f5b169970469\");\n
    sub_4012f0(25, 1223604064, \"019fc054eac8fb229d6f79a7e33e7ce2\");\n
    sub_4012f0(26, 1225398064, \"5f8e90f5fb1f023a116032fc5aeba703\");\n
    sub_4012f0(27, 1226744960, \"d722a3ddd133b5170fb6fc5bfdacdcbc\");\n
    sub_4012f0(28, 1211447168, \"707bd2a4e33ca64c0bd14e8f77f1eea0\");\n
    sub_4012f0(29, 1220317632, \"eeacf644840aec168a972e22ab7ed436\");\n
    sub_4012f0(30, 1220942496, \"290b277185b2f6118f8748cd128b61ad\");\n
    sub_4012f0(31, 1222661280, \"51174b4b91682fa90c995b29c1d122cc\");\n
    sub_4012f0(32, 1227817392, \"241fe5c8bf8b3937860801e13759315b\");\n
    sub_4012f0(33, 1231588320, \"e68614df50cdb2377dcd34ab21d8e6c9\");\n
    sub_4012f0(34, 0x46aa3a00, \"819deb8ca551b6a9644f35750c37c231\");\n
    sub_4012f0(35, 0x48a8aa00, \"fdf1252401682267f80c76625403710d\");\n
    sub_4012f0(36, 1222761440, \"a8c9e2d05a8ef23cdc219d377d53e878\");\n
    sub_4012f0(37, 0x46cc3a00, \"aa5e73418a4d8ebcbf4242c08c78a415\");\n
    sub_4012f0(38, 1228030992, \"de153b1b106b6558dfa7260bc58525c0\");\n
    sub_4012f0(39, 0x47aef800, \"6cad7fb4bdc6971c41b568563e048c53\");\n
    sub_4012f0(40, 1226048496, \"b8809d33c0df937314815215820d9d65\");\n
    sub_4012f0(41, 1223838912, \"db5adad297a95000a7da8eb236d1cfe9\");\n
    sub_4012f0(42, 1208194112, \"424df7c2b9ef58790a33b52f67b5191f\");\n
    sub_4012f0(43, 0x476e6d00, \"336cfe590bd1bcd823899b14493cf23c\");\n
    sub_4012f0(44, 1220419392, \"66e360b7b285f86c994233c5ab38bea5\");\n
    strncpy(&v0, \"@~tH\", 4);\n
    sub_4012f0(45, 1220419392, \"56ce86e58a14fc504cf6998b870aa804\");\n
    sub_4012f0(46, 0x473f0c00, \"828606bf767986d4cc7b4ec8e9aff92a\");\n
    sub_4012f0(47, 1230908848, \"7179eff9bc72122b89beff120d2c8734\");\n
    sub_4012f0(48, 1227254240, \"6549b8e98be71bac2abd6996627bce4e\");\n
    sub_4012f0(49, 1231847984, \"acece5019f5ed9a0cacf2e0b1d431afd\");\n
    sub_4012f0(50, 1232142704, \"4d170b9c1c7031ef97163bbec3b80bbd\");\n
    sub_4012f0(51, 1229077904, \"9efb58f255f7ad220640a95f2a9c77f2\");\n
    sub_4012f0(52, 1231288784, \"9ef33ee3414ccd3b1eb43bc0b8ce49e2\");\n
    sub_4012f0(53, 0x49038200, \"34d94e3a5578082d38538c3424b77270\");\n
    strncpy(&v0, \"@\\reH\", 4);\n
    sub_4012f0(54, 0x49038200, \"79b7fa5d363e03383f11ecdd92d97447\");\n
    sub_4012f0(55, 1223719232, \"9079765c700058627dce99bafd54432a\");\n
    sub_4012f0(56, 1223903264, \"ff1d7b03b27d0a6870d60f9d4795e92b\");\n
    sub_4012f0(57, 1217295680, \"edb3c285ddfc94bd1afcd62832eca795\");\n
    sub_4012f0(58, 1230761024, \"4ab3d2acc0ab50efa85ebf5c684bd530\");\n
    sub_4012f0(59, 1229426032, \"72558d6c2d653b9082933d372ef1b269\");\n
    sub_4012f0(60, 1225129376, \"a0faff8d8717d436c7e8e8f522ed1803\");\n
    sub_4012f0(61, 1218799968, \"2232fd538ff3aafb810a5f688046dd17\");\n
    sub_4012f0(62, 1226148336, \"6a6d931e932772b36d61ddcc41dbc221\");\n
    sub_4012f0(63, 1215449280, \"ec577dba35a82e1b26f613ece6c6840d\");\n
    sub_4012f0(64, 1208378688, \"2e63fb8baa93b26763b6ca1ef3c8585d\");\n
    sub_4012f0(65, 1225979920, \"005b04f8c3b18b9fa4faa9b02e7baf73\");\n
    sub_4012f0(66, 0x495aa700, \"569cadedd7e85c73126b13f6a1d227e3\");\n
    sub_4012f0(67, 1229367872, \"257a1c63f6715d7fa2cb06a5650afb9f\");\n
    sub_4012f0(68, 1230792832, \"03b5c42113686b52870b485d1817fd85\");\n
    sub_4012f0(69, 1232038352, \"7018e4ac5d1268d370b2ca79da5057a0\");\n
    sub_4012f0(70, 1227831712, \"cf643ea74cdf6b26939ee46b4625b9ea\");\n
    sub_4012f0(71, 1219802304, \"ac6bf456bd7a791853878fb217774250\");\n
    sub_4012f0(72, 1231134112, \"6500045faaaa7b12bef294b0f0af0a09\");\n
    sub_4012f0(73, 1218055872, \"c3385a46c4adb2cdcbb1e25a3927ccb8\");\n
    strncpy(&v0, \"P&EI\", 4);\n
    sub_4012f0(74, 1218055872, \"bb2404390204fe5d8beb9cd13a526e9c\");\n
    sub_4012f0(75, 1228428240, \"5ab2beaec063d59802bcad0c5cd39b6d\");\n
    sub_4012f0(76, 1225498416, \"1142c827f4f3cc46e08866d9e88eedd1\");\n
    sub_4012f0(77, 1231016000, \"4c37e154220c50c1077493851d1011ea\");\n
    sub_4012f0(78, 1216301952, \"d5a1152a053af0b1f9b387346866d5b2\");\n
    strncpy(&v0, \"@)$I\", 4);\n
    sub_4012f0(79, 1216301952, \"512457dc65f54d89dc8706d032b45443\");\n
    sub_4012f0(80, 1229745584, \"26127ebcfa0b1669559784ea1824d250\");\n
    sub_4012f0(81, 0x4726e100, \"f186934fb856ca0110151ad296da653f\");\n
    sub_4012f0(82, 1221501920, \"76910c570029849e0eaaa589b26e3759\");\n
    sub_4012f0(83, 0x493d2200, \"0ef281a265db8cc1a2f26adce8f09539\");\n
    sub_4012f0(84, 1229867184, \"c168709a6158047f520dd8f1442a92a0\");\n
    sub_4012f0(85, 1221186272, \"d2663cd7f26b91bf2eb322e6025d1df4\");\n
    sub_4012f0(86, 1217910400, \"7118b3ce1daf916b9499f69024791473\");\n
    sub_4012f0(87, 1216374976, \"cc190a7badd466d6e430b2966429bcb5\");\n
    sub_4012f0(88, 0x47ecca00, \"799da893ad735b3a669e144d5aa67dab\");\n
    sub_4012f0(89, 1218327488, \"2932fb4aa9794a0caf3b263659419c26\");\n
    sub_4012f0(90, 0x47e86200, \"83796f2ba285775fc968c6061cd6a1c0\");\n
    sub_4012f0(91, 1210495296, \"0ab61be15e4ae36dd434cd6f104e2fc4\");\n
    sub_4012f0(92, 1217999232, \"5df66a4add8373aca93b06f6c982e0e3\");\n
    sub_4012f0(93, 1218591840, \"fbc29f5043a4e28c92312f32ff687511\");\n
    sub_4012f0(94, 1227985136, \"fcaf38921282e14608214823e0597e21\");\n
    sub_4012f0(95, 1221918400, \"cc5bac4d6c1e3f99b99a5792f19b15b4\");\n
    sub_4012f0(96, 1231681920, \"35f40bd506c8086a2569f2ca2dde1b29\");\n
    sub_4012f0(97, 0x47376200, \"3a37a6af6981bfa12cfae817c2231447\");\n
    sub_4012f0(98, 0x4865fe00, \"45629735ff7a20ca7c1aa375525be9e4\");\n
    sub_4012f0(99, 1229902272, \"d97236f062e48047aedd7957122c8238\");\n
    sub_4013f0(0, 0, \"GOOG\", 12697418);\n
    sub_4013f0(0, 1, \"SK3WL\", 13609627);\n
    sub_4013f0(0, 2, \"NRFIN\", 5962175);\n
    sub_4013f0(0, 3, \"KPRCA\", 2164075);\n
    sub_4013f0(0, 4, \"AAPL\", 7107186);\n
    sub_4013f0(0, 5, \"OAK\", 9147668);\n
    sub_4013f0(0, 6, \"DDTEK\", -1);\n
    sub_4013f0(0, 7, \"PALM\", 12454340);\n
    sub_4013f0(0, 8, \"CROMU\", 13645664);\n
    sub_4013f0(0, 9, \"PIRATE\", 9417541);\n
    sub_4013f0(0, 10, \"MAPLE\", 10179641);\n
    sub_4013f0(1, 0, \"GOOG\", 12929200);\n
    sub_4013f0(1, 1, \"SK3WL\", 14026567);\n
    sub_4013f0(1, 2, \"NRFIN\", 16257266);\n
    sub_4013f0(1, 3, \"KPRCA\", 1501564);\n
    sub_4013f0(1, 4, \"AAPL\", 6155379);\n
    sub_4013f0(1, 5, \"OAK\", 16460465);\n
    sub_4013f0(1, 6, \"DDTEK\", -1);\n
    sub_4013f0(1, 7, \"PALM\", 10590440);\n
    sub_4013f0(1, 8, \"CROMU\", 4065689);\n
    sub_4013f0(1, 9, \"PIRATE\", 12342544);\n
    sub_4013f0(1, 10, \"MAPLE\", 13571855);\n
    sub_4013f0(2, 0, \"GOOG\", 9562695);\n
    sub_4013f0(2, 1, \"SK3WL\", -1);\n
    sub_4013f0(2, 2, \"NRFIN\", 8335444);\n
    sub_4013f0(2, 3, \"KPRCA\", 3689543);\n
    sub_4013f0(2, 4, \"AAPL\", 11318699);\n
    sub_4013f0(2, 5, \"OAK\", 15206633);\n
    sub_4013f0(2, 6, \"DDTEK\", 6387741);\n
    sub_4013f0(2, 7, \"PALM\", 15315607);\n
    sub_4013f0(2, 8, \"CROMU\", 15930862);\n
    sub_4013f0(2, 9, \"PIRATE\", 1207764);\n
    sub_4013f0(2, 10, \"MAPLE\", 6822811);\n
    sub_4013f0(3, 0, \"GOOG\", 13230134);\n
    sub_4013f0(3, 1, \"SK3WL\", 6577574);\n
    sub_4013f0(3, 2, \"NRFIN\", 7860633);\n
    sub_4013f0(3, 3, \"KPRCA\", 6681541);\n
    sub_4013f0(3, 4, \"AAPL\", 4580790);\n
    sub_4013f0(3, 5, \"OAK\", 5084198);\n
    sub_4013f0(3, 6, \"DDTEK\", -1);\n
    sub_4013f0(3, 7, \"PALM\", 7264059);\n
    sub_4013f0(3, 8, \"CROMU\", 3060599);\n
    sub_4013f0(3, 9, \"PIRATE\", 4860182);\n
    sub_4013f0(3, 10, \"MAPLE\", 11247052);\n
    sub_4013f0(4, 0, \"GOOG\", 15570477);\n
    sub_4013f0(4, 1, \"SK3WL\", 3432318);\n
    sub_4013f0(4, 2, \"NRFIN\", 12741618);\n
    sub_4013f0(4, 3, \"KPRCA\", 3172918);\n
    sub_4013f0(4, 4, \"AAPL\", 7604478);\n
    sub_4013f0(4, 5, \"OAK\", 6492051);\n
    sub_4013f0(4, 6, \"DDTEK\", 6761905);\n
    sub_4013f0(4, 7, \"PALM\", -1);\n
    sub_4013f0(4, 8, \"CROMU\", 9215083);\n
    sub_4013f0(4, 9, \"PIRATE\", 11751177);\n
    sub_4013f0(4, 10, \"MAPLE\", 6121063);\n
    sub_4013f0(5, 0, \"GOOG\", 16767060);\n
    sub_4013f0(5, 1, \"SK3WL\", 3120718);\n
    sub_4013f0(5, 2, \"NRFIN\", 2222454);\n
    sub_4013f0(5, 3, \"KPRCA\", 15925974);\n
    sub_4013f0(5, 4, \"AAPL\", 9007607);\n
    sub_4013f0(5, 5, \"OAK\", 3734544);\n
    sub_4013f0(5, 6, \"DDTEK\", -1);\n
    sub_4013f0(5, 7, \"PALM\", 9858813);\n
    sub_4013f0(5, 8, \"CROMU\", 1140598);\n
    sub_4013f0(5, 9, \"PIRATE\", 14471737);\n
    sub_4013f0(5, 10, \"MAPLE\", 5019638);\n
    sub_4013f0(6, 0, \"GOOG\", 6875083);\n
    sub_4013f0(6, 1, \"SK3WL\", -1);\n
    sub_4013f0(6, 2, \"NRFIN\", 10347720);\n
    sub_4013f0(6, 3, \"KPRCA\", 3731967);\n
    sub_4013f0(6, 4, \"AAPL\", 13351890);\n
    sub_4013f0(6, 5, \"OAK\", 1050721);\n
    sub_4013f0(6, 6, \"DDTEK\", 1875851);\n
    sub_4013f0(6, 7, \"PALM\", &g_41b09b);\n
    sub_4013f0(6, 8, \"CROMU\", 16431291);\n
    sub_4013f0(6, 9, \"PIRATE\", 15860601);\n
    sub_4013f0(6, 10, \"MAPLE\", 6882954);\n
    sub_4013f0(7, 0, \"GOOG\", 16635781);\n
    sub_4013f0(7, 1, \"SK3WL\", 10306122);\n
    sub_4013f0(7, 2, \"NRFIN\", 7533549);\n
    sub_4013f0(7, 3, \"KPRCA\", 11826853);\n
    sub_4013f0(7, 4, \"AAPL\", 16602355);\n
    sub_4013f0(7, 5, \"OAK\", 5836793);\n
    sub_4013f0(7, 6, \"DDTEK\", -1);\n
    sub_4013f0(7, 7, \"PALM\", 11905535);\n
    sub_4013f0(7, 8, \"CROMU\", 12145804);\n
    sub_4013f0(7, 9, \"PIRATE\", 13676509);\n
    sub_4013f0(7, 10, \"MAPLE\", 10686102);\n
    sub_4013f0(8, 0, \"GOOG\", 11880185);\n
    sub_4013f0(8, 1, \"SK3WL\", 5848188);\n
    sub_4013f0(8, 2, \"NRFIN\", 3691309);\n
    sub_4013f0(8, 3, \"KPRCA\", 14501760);\n
    sub_4013f0(8, 4, \"AAPL\", 12428824);\n
    sub_4013f0(8, 5, \"OAK\", 4757678);\n
    sub_4013f0(8, 6, \"DDTEK\", 2714757);\n
    sub_4013f0(8, 7, \"PALM\", -1);\n
    sub_4013f0(8, 8, \"CROMU\", 13154036);\n
    sub_4013f0(8, 9, \"PIRATE\", 1984745);\n
    sub_4013f0(8, 10, \"MAPLE\", 10440271);\n
    sub_4013f0(9, 0, \"GOOG\", 2806291);\n
    sub_4013f0(9, 1, \"SK3WL\", 2472935);\n
    sub_4013f0(9, 2, \"NRFIN\", 10294218);\n
    sub_4013f0(9, 3, \"KPRCA\", 1667285);\n
    sub_4013f0(9, 4, \"AAPL\", 12327449);\n
    sub_4013f0(9, 5, \"OAK\", 5585729);\n
    sub_4013f0(9, 6, \"DDTEK\", -1);\n
    sub_4013f0(9, 7, \"PALM\", 7133955);\n
    sub_4013f0(9, 8, \"CROMU\", 3133595);\n
    sub_4013f0(9, 9, \"PIRATE\", 11437347);\n
    sub_4013f0(9, 10, \"MAPLE\", 2946842);\n
    sub_4013f0(10, 0, \"GOOG\", 15636185);\n
    sub_4013f0(10, 1, \"SK3WL\", 3810043);\n
    sub_4013f0(10, 2, \"NRFIN\", 1757482);\n
    sub_4013f0(10, 3, \"KPRCA\", 7349362);\n
    sub_4013f0(10, 4, \"AAPL\", 2772326);\n
    sub_4013f0(10, 5, \"OAK\", 6657587);\n
    sub_4013f0(10, 6, \"DDTEK\", 4557832);\n
    sub_4013f0(10, 7, \"PALM\", -1);\n
    sub_4013f0(10, 8, \"CROMU\", 1007084);\n
    sub_4013f0(10, 9, \"PIRATE\", 11768340);\n
    sub_4013f0(10, 10, \"MAPLE\", 14135472);\n
    sub_4013f0(11, 0, \"GOOG\", 8960182);\n
    sub_4013f0(11, 1, \"SK3WL\", -1);\n
    sub_4013f0(11, 2, \"NRFIN\", 12269480);\n
    sub_4013f0(11, 3, \"KPRCA\", 11421740);\n
    sub_4013f0(11, 4, \"AAPL\", 9016835);\n
    sub_4013f0(11, 5, \"OAK\", 11283725);\n
    sub_4013f0(11, 6, \"DDTEK\", 3155420);\n
    sub_4013f0(11, 7, \"PALM\", 14404065);\n
    sub_4013f0(11, 8, \"CROMU\", 6893048);\n
    sub_4013f0(11, 9, \"PIRATE\", 13478505);\n
    sub_4013f0(11, 10, \"MAPLE\", 14703193);\n
    sub_4013f0(12, 0, \"GOOG\", 11688733);\n
    sub_4013f0(12, 1, \"SK3WL\", 13295258);\n
    sub_4013f0(12, 2, \"NRFIN\", 15108918);\n
    sub_4013f0(12, 3, \"KPRCA\", 14035081);\n
    sub_4013f0(12, 4, \"AAPL\", 16044264);\n
    sub_4013f0(12, 5, \"OAK\", 16391840);\n
    sub_4013f0(12, 6, \"DDTEK\", -1);\n
    sub_4013f0(12, 7, \"PALM\", 12502629);\n
    sub_4013f0(12, 8, \"CROMU\", 12604407);\n
    sub_4013f0(12, 9, \"PIRATE\", 10121798);\n
    sub_4013f0(12, 10, \"MAPLE\", 9433220);\n
    sub_4013f0(13, 0, \"GOOG\", 11524495);\n
    sub_4013f0(13, 1, \"SK3WL\", 1168846);\n
    sub_4013f0(13, 2, \"NRFIN\", 3230299);\n
    sub_4013f0(13, 3, \"KPRCA\", 2193972);\n
    sub_4013f0(13, 4, \"AAPL\", 8841774);\n
    sub_4013f0(13, 5, \"OAK\", 5088434);\n
    sub_4013f0(13, 6, \"DDTEK\", -1);\n
    sub_4013f0(13, 7, \"PALM\", 11436443);\n
    sub_4013f0(13, 8, \"CROMU\", 6832703);\n
    sub_4013f0(13, 9, \"PIRATE\", 1615197);\n
    sub_4013f0(13, 10, \"MAPLE\", 14707618);\n
    sub_4013f0(14, 0, \"GOOG\", 11979219);\n
    sub_4013f0(14, 1, \"SK3WL\", -1);\n
    sub_4013f0(14, 2, \"NRFIN\", 4503091);\n
    sub_4013f0(14, 3, \"KPRCA\", 10393294);\n
    sub_4013f0(14, 4, \"AAPL\", 13581203);\n
    sub_4013f0(14, 5, \"OAK\", 15458811);\n
    sub_4013f0(14, 6, \"DDTEK\", 1351048);\n
    sub_4013f0(14, 7, \"PALM\", 11574131);\n
    sub_4013f0(14, 8, \"CROMU\", 9216316);\n
    sub_4013f0(14, 9, \"PIRATE\", 7530688);\n
    sub_4013f0(14, 10, \"MAPLE\", 1355327);\n
    sub_4013f0(15, 0, \"GOOG\", 3608426);\n
    sub_4013f0(15, 1, \"SK3WL\", -1);\n
    sub_4013f0(15, 2, \"NRFIN\", 6898679);\n
    sub_4013f0(15, 3, \"KPRCA\", 3984264);\n
    sub_4013f0(15, 4, \"AAPL\", 5892330);\n
    sub_4013f0(15, 5, \"OAK\", 16657794);\n
    sub_4013f0(15, 6, \"DDTEK\", 3241989);\n
    sub_4013f0(15, 7, \"PALM\", 1396362);\n
    sub_4013f0(15, 8, \"CROMU\", 5049554);\n
    sub_4013f0(15, 9, \"PIRATE\", 14805136);\n
    sub_4013f0(15, 10, \"MAPLE\", 15810129);\n
    sub_4013f0(16, 0, \"GOOG\", 10472799);\n
    sub_4013f0(16, 1, \"SK3WL\", 11170086);\n
    sub_4013f0(16, 2, \"NRFIN\", 13261757);\n
    sub_4013f0(16, 3, \"KPRCA\", &g_41451e);\n
    sub_4013f0(16, 4, \"AAPL\", 13749354);\n
    sub_4013f0(16, 5, \"OAK\", 5570437);\n
    sub_4013f0(16, 6, \"DDTEK\", -1);\n
    sub_4013f0(16, 7, \"PALM\", 10770226);\n
    sub_4013f0(16, 8, \"CROMU\", 6944056);\n
    sub_4013f0(16, 9, \"PIRATE\", 10885405);\n
    sub_4013f0(16, 10, \"MAPLE\", 7438621);\n
    sub_4013f0(17, 0, \"GOOG\", 1160878);\n
    sub_4013f0(17, 1, \"SK3WL\", 10548236);\n
    sub_4013f0(17, 2, \"NRFIN\", 1045249);\n
    sub_4013f0(17, 3, \"KPRCA\", 1080544);\n
    sub_4013f0(17, 4, \"AAPL\", 14443389);\n
    sub_4013f0(17, 5, \"OAK\", 15469281);\n
    sub_4013f0(17, 6, \"DDTEK\", -1);\n
    sub_4013f0(17, 7, \"PALM\", 5223098);\n
    sub_4013f0(17, 8, \"CROMU\", 9362632);\n
    sub_4013f0(17, 9, \"PIRATE\", 3557867);\n
    sub_4013f0(17, 10, \"MAPLE\", 3424844);\n
    sub_4013f0(18, 0, \"GOOG\", 10955106);\n
    sub_4013f0(18, 1, \"SK3WL\", 6616950);\n
    sub_4013f0(18, 2, \"NRFIN\", 12400890);\n
    sub_4013f0(18, 3, \"KPRCA\", 7731846);\n
    sub_4013f0(18, 4, \"AAPL\", 10431312);\n
    sub_4013f0(18, 5, \"OAK\", 7502579);\n
    sub_4013f0(18, 6, \"DDTEK\", 9146814);\n
    sub_4013f0(18, 7, \"PALM\", -1);\n
    sub_4013f0(18, 8, \"CROMU\", 5557237);\n
    sub_4013f0(18, 9, \"PIRATE\", 12472140);\n
    sub_4013f0(18, 10, \"MAPLE\", 10605366);\n
    sub_4013f0(19, 0, \"GOOG\", 11682743);\n
    sub_4013f0(19, 1, \"SK3WL\", 12213053);\n
    sub_4013f0(19, 2, \"NRFIN\", 13150087);\n
    sub_4013f0(19, 3, \"KPRCA\", 1058239);\n
    sub_4013f0(19, 4, \"AAPL\", 11739330);\n
    sub_4013f0(19, 5, \"OAK\", 8524322);\n
    sub_4013f0(19, 6, \"DDTEK\", -1);\n
    sub_4013f0(19, 7, \"PALM\", 6767717);\n
    sub_4013f0(19, 8, \"CROMU\", 16382912);\n
    sub_4013f0(19, 9, \"PIRATE\", 7020133);\n
    sub_4013f0(19, 10, \"MAPLE\", 10949651);\n
    sub_4013f0(20, 0, \"GOOG\", 6361454);\n
    sub_4013f0(20, 1, \"SK3WL\", 10624090);\n
    sub_4013f0(20, 2, \"NRFIN\", 9729863);\n
    sub_4013f0(20, 3, \"KPRCA\", 5489966);\n
    sub_4013f0(20, 4, \"AAPL\", 1644367);\n
    sub_4013f0(20, 5, \"OAK\", 13704543);\n
    sub_4013f0(20, 6, \"DDTEK\", 13296132);\n
    sub_4013f0(20, 7, \"PALM\", -1);\n
    sub_4013f0(20, 8, \"CROMU\", 12534300);\n
    sub_4013f0(20, 9, \"PIRATE\", 3314227);\n
    sub_4013f0(20, 10, \"MAPLE\", 8091103);\n
    sub_4013f0(21, 0, \"GOOG\", 15116102);\n
    sub_4013f0(21, 1, \"SK3WL\", -1);\n
    sub_4013f0(21, 2, \"NRFIN\", 7163303);\n
    sub_4013f0(21, 3, \"KPRCA\", 2411851);\n
    sub_4013f0(21, 4, \"AAPL\", 1282178);\n
    sub_4013f0(21, 5, \"OAK\", 3917628);\n
    sub_4013f0(21, 6, \"DDTEK\", 10812358);\n
    sub_4013f0(21, 7, \"PALM\", 15979282);\n
    sub_4013f0(21, 8, \"CROMU\", 9688700);\n
    sub_4013f0(21, 9, \"PIRATE\", 7870488);\n
    sub_4013f0(21, 10, \"MAPLE\", 6164509);\n
    sub_4013f0(22, 0, \"GOOG\", 4077423);\n
    sub_4013f0(22, 1, \"SK3WL\", -1);\n
    sub_4013f0(22, 2, \"NRFIN\", 9445055);\n
    sub_4013f0(22, 3, \"KPRCA\", 12406389);\n
    sub_4013f0(22, 4, \"AAPL\", 13620598);\n
    sub_4013f0(22, 5, \"OAK\", 3267007);\n
    sub_4013f0(22, 6, \"DDTEK\", 4471790);\n
    sub_4013f0(22, 7, \"PALM\", 13305435);\n
    sub_4013f0(22, 8, \"CROMU\", 4483329);\n
    sub_4013f0(22, 9, \"PIRATE\", 5539467);\n
    sub_4013f0(22, 10, \"MAPLE\", 16179529);\n
    sub_4013f0(23, 0, \"GOOG\", 15257167);\n
    sub_4013f0(23, 1, \"SK3WL\", 4086382);\n
    sub_4013f0(23, 2, \"NRFIN\", 10537523);\n
    sub_4013f0(23, 3, \"KPRCA\", 1924550);\n
    sub_4013f0(23, 4, \"AAPL\", 7884583);\n
    sub_4013f0(23, 5, \"OAK\", 7048308);\n
    sub_4013f0(23, 6, \"DDTEK\", -1);\n
    sub_4013f0(23, 7, \"PALM\", 6235064);\n
    sub_4013f0(23, 8, \"CROMU\", 2426566);\n
    sub_4013f0(23, 9, \"PIRATE\", 15526648);\n
    sub_4013f0(23, 10, \"MAPLE\", 6321120);\n
    sub_4013f0(24, 0, \"GOOG\", 1065341);\n
    sub_4013f0(24, 1, \"SK3WL\", 11509928);\n
    sub_4013f0(24, 2, \"NRFIN\", 2120379);\n
    sub_4013f0(24, 3, \"KPRCA\", 8701824);\n
    sub_4013f0(24, 4, \"AAPL\", 9024411);\n
    sub_4013f0(24, 5, \"OAK\", 16086740);\n
    sub_4013f0(24, 6, \"DDTEK\", -1);\n
    sub_4013f0(24, 7, \"PALM\", 11273924);\n
    sub_4013f0(24, 8, \"CROMU\", 8791335);\n
    sub_4013f0(24, 9, \"PIRATE\", 8773724);\n
    sub_4013f0(24, 10, \"MAPLE\", 15272393);\n
    sub_4013f0(25, 0, \"GOOG\", 4140026);\n
    sub_4013f0(25, 1, \"SK3WL\", 1454170);\n
    sub_4013f0(25, 2, \"NRFIN\", 5145732);\n
    sub_4013f0(25, 3, \"KPRCA\", 9224234);\n
    sub_4013f0(25, 4, \"AAPL\", 8689009);\n
    sub_4013f0(25, 5, \"OAK\", 16382073);\n
    sub_4013f0(25, 6, \"DDTEK\", -1);\n
    sub_4013f0(25, 7, \"PALM\", 6269156);\n
    sub_4013f0(25, 8, \"CROMU\", 13240935);\n
    sub_4013f0(25, 9, \"PIRATE\", 14765083);\n
    sub_4013f0(25, 10, \"MAPLE\", 4798408);\n
    sub_4013f0(26, 0, \"GOOG\", 2784024);\n
    sub_4013f0(26, 1, \"SK3WL\", 13549293);\n
    sub_4013f0(26, 2, \"NRFIN\", 2667817);\n
    sub_4013f0(26, 3, \"KPRCA\", 3492991);\n
    sub_4013f0(26, 4, \"AAPL\", 3847288);\n
    sub_4013f0(26, 5, \"OAK\", 5313095);\n
    sub_4013f0(26, 6, \"DDTEK\", 6009818);\n
    sub_4013f0(26, 7, \"PALM\", -1);\n
    sub_4013f0(26, 8, \"CROMU\", 8466828);\n
    sub_4013f0(26, 9, \"PIRATE\", 1507424);\n
    sub_4013f0(26, 10, \"MAPLE\", 14210083);\n
    sub_4013f0(27, 0, \"GOOG\", 8770132);\n
    sub_4013f0(27, 1, \"SK3WL\", -1);\n
    sub_4013f0(27, 2, \"NRFIN\", 7530052);\n
    sub_4013f0(27, 3, \"KPRCA\", 9274559);\n
    sub_4013f0(27, 4, \"AAPL\", 16244414);\n
    sub_4013f0(27, 5, \"OAK\", 13591144);\n
    sub_4013f0(27, 6, \"DDTEK\", 12820445);\n
    sub_4013f0(27, 7, \"PALM\", 7494192);\n
    sub_4013f0(27, 8, \"CROMU\", 3214744);\n
    sub_4013f0(27, 9, \"PIRATE\", 9732092);\n
    sub_4013f0(27, 10, \"MAPLE\", 5384540);\n
    sub_4013f0(28, 0, \"GOOG\", 14101661);\n
    sub_4013f0(28, 1, \"SK3WL\", 9880693);\n
    sub_4013f0(28, 2, \"NRFIN\", 4824828);\n
    sub_4013f0(28, 3, \"KPRCA\", 6640789);\n
    sub_4013f0(28, 4, \"AAPL\", 5985061);\n
    sub_4013f0(28, 5, \"OAK\", 12082003);\n
    sub_4013f0(28, 6, \"DDTEK\", -1);\n
    sub_4013f0(28, 7, \"PALM\", 11992980);\n
    sub_4013f0(28, 8, \"CROMU\", 6663090);\n
    sub_4013f0(28, 9, \"PIRATE\", 15536331);\n
    sub_4013f0(28, 10, \"MAPLE\", 1693762);\n
    sub_4013f0(29, 0, \"GOOG\", 2499199);\n
    sub_4013f0(29, 1, \"SK3WL\", 4406436);\n
    sub_4013f0(29, 2, \"NRFIN\", 14519628);\n
    sub_4013f0(29, 3, \"KPRCA\", 7419909);\n
    sub_4013f0(29, 4, \"AAPL\", 10165991);\n
    sub_4013f0(29, 5, \"OAK\", 4372799);\n
    sub_4013f0(29, 6, \"DDTEK\", 6544820);\n
    sub_4013f0(29, 7, \"PALM\", -1);\n
    sub_4013f0(29, 8, \"CROMU\", 16537451);\n
    sub_4013f0(29, 9, \"PIRATE\", 1716661);\n
    sub_4013f0(29, 10, \"MAPLE\", 5788997);\n
    sub_4013f0(30, 0, \"GOOG\", 6611019);\n
    sub_4013f0(30, 1, \"SK3WL\", 12997587);\n
    sub_4013f0(30, 2, \"NRFIN\", 1091133);\n
    sub_4013f0(30, 3, \"KPRCA\", 15135738);\n
    sub_4013f0(30, 4, \"AAPL\", 8348263);\n
    sub_4013f0(30, 5, \"OAK\", 4912346);\n
    sub_4013f0(30, 6, \"DDTEK\", &g_42eb06);\n
    sub_4013f0(30, 7, \"PALM\", -1);\n
    sub_4013f0(30, 8, \"CROMU\", 15877165);\n
    sub_4013f0(30, 9, \"PIRATE\", 15099072);\n
    sub_4013f0(30, 10, \"MAPLE\", 1874078);\n
    sub_4013f0(31, 0, \"GOOG\", 16304977);\n
    sub_4013f0(31, 1, \"SK3WL\", -1);\n
    sub_4013f0(31, 2, \"NRFIN\", 5052570);\n
    sub_4013f0(31, 3, \"KPRCA\", 2877027);\n
    sub_4013f0(31, 4, \"AAPL\", &g_41be70);\n
    sub_4013f0(31, 5, \"OAK\", 1627498);\n
    sub_4013f0(31, 6, \"DDTEK\", 3976235);\n
    sub_4013f0(31, 7, \"PALM\", 9268624);\n
    sub_4013f0(31, 8, \"CROMU\", 5030385);\n
    sub_4013f0(31, 9, \"PIRATE\", 3795706);\n
    sub_4013f0(31, 10, \"MAPLE\", 5022202);\n
    sub_4013f0(32, 0, \"GOOG\", 16145286);\n
    sub_4013f0(32, 1, \"SK3WL\", 15701401);\n
    sub_4013f0(32, 2, \"NRFIN\", 7052302);\n
    sub_4013f0(32, 3, \"KPRCA\", 8553136);\n
    sub_4013f0(32, 4, \"AAPL\", 14804565);\n
    sub_4013f0(32, 5, \"OAK\", 7324258);\n
    sub_4013f0(32, 6, \"DDTEK\", -1);\n
    sub_4013f0(32, 7, \"PALM\", 10434500);\n
    sub_4013f0(32, 8, \"CROMU\", 14462869);\n
    sub_4013f0(32, 9, \"PIRATE\", 13583913);\n
    sub_4013f0(32, 10, \"MAPLE\", 10595086);\n
    sub_4013f0(33, 0, \"GOOG\", 13202499);\n
    sub_4013f0(33, 1, \"SK3WL\", -1);\n
    sub_4013f0(33, 2, \"NRFIN\", 12766986);\n
    sub_4013f0(33, 3, \"KPRCA\", 12046145);\n
    sub_4013f0(33, 4, \"AAPL\", 11015974);\n
    sub_4013f0(33, 5, \"OAK\", 16370510);\n
    sub_4013f0(33, 6, \"DDTEK\", 3796352);\n
    sub_4013f0(33, 7, \"PALM\", 13760909);\n
    sub_4013f0(33, 8, \"CROMU\", 15326706);\n
    sub_4013f0(33, 9, \"PIRATE\", 1693165);\n
    sub_4013f0(33, 10, \"MAPLE\", 6146198);\n
    sub_4013f0(34, 0, \"GOOG\", 14201410);\n
    sub_4013f0(34, 1, \"SK3WL\", 8511288);\n
    sub_4013f0(34, 2, \"NRFIN\", 1063994);\n
    sub_4013f0(34, 3, \"KPRCA\", 6268552);\n
    sub_4013f0(34, 4, \"AAPL\", 15198355);\n
    sub_4013f0(34, 5, \"OAK\", 15873769);\n
    sub_4013f0(34, 6, \"DDTEK\", -1);\n
    sub_4013f0(34, 7, \"PALM\", 6637311);\n
    sub_4013f0(34, 8, \"CROMU\", 0xf88b00);\n
    sub_4013f0(34, 9, \"PIRATE\", 10642319);\n
    sub_4013f0(34, 10, \"MAPLE\", 7302469);\n
    sub_4013f0(35, 0, \"GOOG\", 16050794);\n
    sub_4013f0(35, 1, \"SK3WL\", -1);\n
    sub_4013f0(35, 2, \"NRFIN\", 3856488);\n
    sub_4013f0(35, 3, \"KPRCA\", 4569063);\n
    sub_4013f0(35, 4, \"AAPL\", 15567455);\n
    sub_4013f0(35, 5, \"OAK\", 2392423);\n
    sub_4013f0(35, 6, \"DDTEK\", 16498540);\n
    sub_4013f0(35, 7, \"PALM\", 5971020);\n
    sub_4013f0(35, 8, \"CROMU\", &g_4217db);\n
    sub_4013f0(35, 9, \"PIRATE\", 15865335);\n
    sub_4013f0(35, 10, \"MAPLE\", 11754313);\n
    sub_4013f0(36, 0, \"GOOG\", 2479175);\n
    sub_4013f0(36, 1, \"SK3WL\", -1);\n
    sub_4013f0(36, 2, \"NRFIN\", 3822240);\n
    sub_4013f0(36, 3, \"KPRCA\", 11635880);\n
    sub_4013f0(36, 4, \"AAPL\", 8990382);\n
    sub_4013f0(36, 5, \"OAK\", 1264252);\n
    sub_4013f0(36, 6, \"DDTEK\", 2171273);\n
    sub_4013f0(36, 7, \"PALM\", 9414321);\n
    sub_4013f0(36, 8, \"CROMU\", 14730966);\n
    sub_4013f0(36, 9, \"PIRATE\", 7244390);\n
    sub_4013f0(36, 10, \"MAPLE\", 8947020);\n
    sub_4013f0(37, 0, \"GOOG\", 15679785);\n
    sub_4013f0(37, 1, \"SK3WL\", 8646879);\n
    sub_4013f0(37, 2, \"NRFIN\", 8806663);\n
    sub_4013f0(37, 3, \"KPRCA\", 5198906);\n
    sub_4013f0(37, 4, \"AAPL\", 12170318);\n
    sub_4013f0(37, 5, \"OAK\", 8386977);\n
    sub_4013f0(37, 6, \"DDTEK\", -1);\n
    sub_4013f0(37, 7, \"PALM\", 11035897);\n
    sub_4013f0(37, 8, \"CROMU\", 7972249);\n
    sub_4013f0(37, 9, \"PIRATE\", 9495625);\n
    sub_4013f0(37, 10, \"MAPLE\", 14516338);\n
    sub_4013f0(38, 0, \"GOOG\", 15969557);\n
    sub_4013f0(38, 1, \"SK3WL\", 13218669);\n
    sub_4013f0(38, 2, \"NRFIN\", 6567289);\n
    sub_4013f0(38, 3, \"KPRCA\", 13161176);\n
    sub_4013f0(38, 4, \"AAPL\", 12798783);\n
    sub_4013f0(38, 5, \"OAK\", 4921208);\n
    sub_4013f0(38, 6, \"DDTEK\", -1);\n
    sub_4013f0(38, 7, \"PALM\", 6433043);\n
    sub_4013f0(38, 8, \"CROMU\", 14405305);\n
    sub_4013f0(38, 9, \"PIRATE\", 2158462);\n
    sub_4013f0(38, 10, \"MAPLE\", 13782478);\n
    sub_4013f0(39, 0, \"GOOG\", 4860109);\n
    sub_4013f0(39, 1, \"SK3WL\", -1);\n
    sub_4013f0(39, 2, \"NRFIN\", 1571076);\n
    sub_4013f0(39, 3, \"KPRCA\", 13933799);\n
    sub_4013f0(39, 4, \"AAPL\", 7004055);\n
    sub_4013f0(39, 5, \"OAK\", 12118951);\n
    sub_4013f0(39, 6, \"DDTEK\", 11810231);\n
    sub_4013f0(39, 7, \"PALM\", 14670828);\n
    sub_4013f0(39, 8, \"CROMU\", &g_41957f);\n
    sub_4013f0(39, 9, \"PIRATE\", 3730513);\n
    sub_4013f0(39, 10, \"MAPLE\", 3767108);\n
    sub_4013f0(40, 0, \"GOOG\", 4822938);\n
    sub_4013f0(40, 1, \"SK3WL\", 5772139);\n
    sub_4013f0(40, 2, \"NRFIN\", 7993294);\n
    sub_4013f0(40, 3, \"KPRCA\", 8806511);\n
    sub_4013f0(40, 4, \"AAPL\", 9141741);\n
    sub_4013f0(40, 5, \"OAK\", 2945848);\n
    sub_4013f0(40, 6, \"DDTEK\", -1);\n
    sub_4013f0(40, 7, \"PALM\", 16722448);\n
    sub_4013f0(40, 8, \"CROMU\", 12282640);\n
    sub_4013f0(40, 9, \"PIRATE\", 14585954);\n
    sub_4013f0(40, 10, \"MAPLE\", 9488914);\n
    sub_4013f0(41, 0, \"GOOG\", 16777118);\n
    sub_4013f0(41, 1, \"SK3WL\", 2552391);\n
    sub_4013f0(41, 2, \"NRFIN\", 10080659);\n
    sub_4013f0(41, 3, \"KPRCA\", 8860583);\n
    sub_4013f0(41, 4, \"AAPL\", 1356122);\n
    sub_4013f0(41, 5, \"OAK\", 4099862);\n
    sub_4013f0(41, 6, \"DDTEK\", 5354722);\n
    sub_4013f0(41, 7, \"PALM\", -1);\n
    sub_4013f0(41, 8, \"CROMU\", 6737652);\n
    sub_4013f0(41, 9, \"PIRATE\", 6075612);\n
    sub_4013f0(41, 10, \"MAPLE\", 15594271);\n
    sub_4013f0(42, 0, \"GOOG\", 13790057);\n
    sub_4013f0(42, 1, \"SK3WL\", 5159107);\n
    sub_4013f0(42, 2, \"NRFIN\", 5646950);\n
    sub_4013f0(42, 3, \"KPRCA\", 1164374);\n
    sub_4013f0(42, 4, \"AAPL\", 2481370);\n
    sub_4013f0(42, 5, \"OAK\", 2834358);\n
    sub_4013f0(42, 6, \"DDTEK\", 8643482);\n
    sub_4013f0(42, 7, \"PALM\", -1);\n
    sub_4013f0(42, 8, \"CROMU\", 1215390);\n
    sub_4013f0(42, 9, \"PIRATE\", 3940411);\n
    sub_4013f0(42, 10, \"MAPLE\", 9107762);\n
    sub_4013f0(43, 0, \"GOOG\", 7702169);\n
    sub_4013f0(43, 1, \"SK3WL\", -1);\n
    sub_4013f0(43, 2, \"NRFIN\", 10362436);\n
    sub_4013f0(43, 3, \"KPRCA\", 15077270);\n
    sub_4013f0(43, 4, \"AAPL\", 14129608);\n
    sub_4013f0(43, 5, \"OAK\", 14233452);\n
    sub_4013f0(43, 6, \"DDTEK\", 16448692);\n
    sub_4013f0(43, 7, \"PALM\", 9150686);\n
    sub_4013f0(43, 8, \"CROMU\", 10499415);\n
    sub_4013f0(43, 9, \"PIRATE\", 2691104);\n
    sub_4013f0(43, 10, \"MAPLE\", 15821369);\n
    sub_4013f0(44, 0, \"GOOG\", 9713656);\n
    sub_4013f0(44, 1, \"SK3WL\", 4753509);\n
    sub_4013f0(44, 2, \"NRFIN\", 14443410);\n
    sub_4013f0(44, 3, \"KPRCA\", 7617582);\n
    sub_4013f0(44, 4, \"AAPL\", 8641563);\n
    sub_4013f0(44, 5, \"OAK\", 11563330);\n
    sub_4013f0(44, 6, \"DDTEK\", 13496268);\n
    sub_4013f0(44, 7, \"PALM\", -1);\n
    sub_4013f0(44, 8, \"CROMU\", 16040095);\n
    sub_4013f0(44, 9, \"PIRATE\", 5411080);\n
    sub_4013f0(44, 10, \"MAPLE\", 9992150);\n
    sub_4013f0(45, 0, \"GOOG\", 9704535);\n
    sub_4013f0(45, 1, \"SK3WL\", 14950974);\n
    sub_4013f0(45, 2, \"NRFIN\", 3479247);\n
    sub_4013f0(45, 3, \"KPRCA\", 8800218);\n
    sub_4013f0(45, 4, \"AAPL\", 10062457);\n
    sub_4013f0(45, 5, \"OAK\", 12240112);\n
    sub_4013f0(45, 6, \"DDTEK\", -1);\n
    sub_4013f0(45, 7, \"PALM\", 5254871);\n
    sub_4013f0(45, 8, \"CROMU\", 12010930);\n
    sub_4013f0(45, 9, \"PIRATE\", 5428519);\n
    sub_4013f0(45, 10, \"MAPLE\", 3168296);\n
    sub_4013f0(46, 0, \"GOOG\", 15197400);\n
    sub_4013f0(46, 1, \"SK3WL\", -1);\n
    sub_4013f0(46, 2, \"NRFIN\", 12293353);\n
    sub_4013f0(46, 3, \"KPRCA\", 7231493);\n
    sub_4013f0(46, 4, \"AAPL\", 15038197);\n
    sub_4013f0(46, 5, \"OAK\", 7537714);\n
    sub_4013f0(46, 6, \"DDTEK\", 8976901);\n
    sub_4013f0(46, 7, \"PALM\", 5854179);\n
    sub_4013f0(46, 8, \"CROMU\", 13599544);\n
    sub_4013f0(46, 9, \"PIRATE\", 6037412);\n
    sub_4013f0(46, 10, \"MAPLE\", 1147968);\n
    sub_4013f0(47, 0, \"GOOG\", 14545414);\n
    sub_4013f0(47, 1, \"SK3WL\", -1);\n
    sub_4013f0(47, 2, \"NRFIN\", 12402620);\n
    sub_4013f0(47, 3, \"KPRCA\", 4575737);\n
    sub_4013f0(47, 4, \"AAPL\", 7790090);\n
    sub_4013f0(47, 5, \"OAK\", 3512099);\n
    sub_4013f0(47, 6, \"DDTEK\", 7019948);\n
    sub_4013f0(47, 7, \"PALM\", 4138803);\n
    sub_4013f0(47, 8, \"CROMU\", 6069633);\n
    sub_4013f0(47, 9, \"PIRATE\", 11084242);\n
    sub_4013f0(47, 10, \"MAPLE\", 11015884);\n
    sub_4013f0(48, 0, \"GOOG\", 4126452);\n
    sub_4013f0(48, 1, \"SK3WL\", -1);\n
    sub_4013f0(48, 2, \"NRFIN\", 11633903);\n
    sub_4013f0(48, 3, \"KPRCA\", 12098836);\n
    sub_4013f0(48, 4, \"AAPL\", 13406575);\n
    sub_4013f0(48, 5, \"OAK\", 5137850);\n
    sub_4013f0(48, 6, \"DDTEK\", 13244385);\n
    sub_4013f0(48, 7, \"PALM\", 16412901);\n
    sub_4013f0(48, 8, \"CROMU\", 6759125);\n
    sub_4013f0(48, 9, \"PIRATE\", &g_428444);\n
    sub_4013f0(48, 10, \"MAPLE\", 6563685);\n
    sub_4013f0(49, 0, \"GOOG\", 7100466);\n
    sub_4013f0(49, 1, \"SK3WL\", 13433096);\n
    sub_4013f0(49, 2, \"NRFIN\", 10989497);\n
    sub_4013f0(49, 3, \"KPRCA\", 2311380);\n
    sub_4013f0(49, 4, \"AAPL\", 7502571);\n
    sub_4013f0(49, 5, \"OAK\", 12389247);\n
    sub_4013f0(49, 6, \"DDTEK\", -1);\n
    sub_4013f0(49, 7, \"PALM\", 3104833);\n
    sub_4013f0(49, 8, \"CROMU\", 1310083);\n
    sub_4013f0(49, 9, \"PIRATE\", 1396315);\n
    sub_4013f0(49, 10, \"MAPLE\", 16022222);\n
    sub_4013f0(50, 0, \"GOOG\", 9521571);\n
    sub_4013f0(50, 1, \"SK3WL\", 9851935);\n
    sub_4013f0(50, 2, \"NRFIN\", 6779201);\n
    sub_4013f0(50, 3, \"KPRCA\", 8971014);\n
    sub_4013f0(50, 4, \"AAPL\", 10194938);\n
    sub_4013f0(50, 5, \"OAK\", 9568752);\n
    sub_4013f0(50, 6, \"DDTEK\", -1);\n
    sub_4013f0(50, 7, \"PALM\", 12504729);\n
    sub_4013f0(50, 8, \"CROMU\", 16567495);\n
    sub_4013f0(50, 9, \"PIRATE\", 12482248);\n
    sub_4013f0(50, 10, \"MAPLE\", 14402093);\n
    sub_4013f0(51, 0, \"GOOG\", 8938918);\n
    sub_4013f0(51, 1, \"SK3WL\", 16422979);\n
    sub_4013f0(51, 2, \"NRFIN\", 9717293);\n
    sub_4013f0(51, 3, \"KPRCA\", 12927708);\n
    sub_4013f0(51, 4, \"AAPL\", 4023909);\n
    sub_4013f0(51, 5, \"OAK\", 4624917);\n
    sub_4013f0(51, 6, \"DDTEK\", -1);\n
    sub_4013f0(51, 7, \"PALM\", 11195165);\n
    sub_4013f0(51, 8, \"CROMU\", 3630205);\n
    sub_4013f0(51, 9, \"PIRATE\", 1666946);\n
    sub_4013f0(51, 10, \"MAPLE\", 4870922);\n
    sub_4013f0(52, 0, \"GOOG\", 1282578);\n
    sub_4013f0(52, 1, \"SK3WL\", 3522009);\n
    sub_4013f0(52, 2, \"NRFIN\", 14292547);\n
    sub_4013f0(52, 3, \"KPRCA\", 1776975);\n
    sub_4013f0(52, 4, \"AAPL\", 6899032);\n
    sub_4013f0(52, 5, \"OAK\", 11253110);\n
    sub_4013f0(52, 6, \"DDTEK\", 13974089);\n
    sub_4013f0(52, 7, \"PALM\", -1);\n
    sub_4013f0(52, 8, \"CROMU\", 9976917);\n
    sub_4013f0(52, 9, \"PIRATE\", &g_41e4a8);\n
    sub_4013f0(52, 10, \"MAPLE\", 11286875);\n
    sub_4013f0(53, 0, \"GOOG\", 12585617);\n
    sub_4013f0(53, 1, \"SK3WL\", 7232735);\n
    sub_4013f0(53, 2, \"NRFIN\", 1775133);\n
    sub_4013f0(53, 3, \"KPRCA\", 15060652);\n
    sub_4013f0(53, 4, \"AAPL\", 14787293);\n
    sub_4013f0(53, 5, \"OAK\", 5493411);\n
    sub_4013f0(53, 6, \"DDTEK\", 1941501);\n
    sub_4013f0(53, 7, \"PALM\", -1);\n
    sub_4013f0(53, 8, \"CROMU\", 14717141);\n
    sub_4013f0(53, 9, \"PIRATE\", 11124581);\n
    sub_4013f0(53, 10, \"MAPLE\", 10364605);\n
    sub_4013f0(54, 0, \"GOOG\", 13862266);\n
    sub_4013f0(54, 1, \"SK3WL\", -1);\n
    sub_4013f0(54, 2, \"NRFIN\", 13113962);\n
    sub_4013f0(54, 3, \"KPRCA\", 16235160);\n
    sub_4013f0(54, 4, \"AAPL\", 10907064);\n
    sub_4013f0(54, 5, \"OAK\", 5753074);\n
    sub_4013f0(54, 6, \"DDTEK\", 3400066);\n
    sub_4013f0(54, 7, \"PALM\", 8520428);\n
    sub_4013f0(54, 8, \"CROMU\", 0xcb2e00);\n
    sub_4013f0(54, 9, \"PIRATE\", 1092891);\n
    sub_4013f0(54, 10, \"MAPLE\", 11637532);\n
    sub_4013f0(55, 0, \"GOOG\", 8247773);\n
    sub_4013f0(55, 1, \"SK3WL\", 4520806);\n
    sub_4013f0(55, 2, \"NRFIN\", 12714003);\n
    sub_4013f0(55, 3, \"KPRCA\", 12930141);\n
    sub_4013f0(55, 4, \"AAPL\", 16665840);\n
    sub_4013f0(55, 5, \"OAK\", 5912732);\n
    sub_4013f0(55, 6, \"DDTEK\", -1);\n
    sub_4013f0(55, 7, \"PALM\", 3599110);\n
    sub_4013f0(55, 8, \"CROMU\", 9691210);\n
    sub_4013f0(55, 9, \"PIRATE\", 5729274);\n
    sub_4013f0(55, 10, \"MAPLE\", 9155966);\n
    sub_4013f0(56, 0, \"GOOG\", 2473636);\n
    sub_4013f0(56, 1, \"SK3WL\", 8030245);\n
    sub_4013f0(56, 2, \"NRFIN\", 2154361);\n
    sub_4013f0(56, 3, \"KPRCA\", 15066579);\n
    sub_4013f0(56, 4, \"AAPL\", 11435178);\n
    sub_4013f0(56, 5, \"OAK\", 9445123);\n
    sub_4013f0(56, 6, \"DDTEK\", -1);\n
    sub_4013f0(56, 7, \"PALM\", 15336216);\n
    sub_4013f0(56, 8, \"CROMU\", 2024765);\n
    sub_4013f0(56, 9, \"PIRATE\", 8916118);\n
    sub_4013f0(56, 10, \"MAPLE\", 14447678);\n
    sub_4013f0(57, 0, \"GOOG\", 9638472);\n
    sub_4013f0(57, 1, \"SK3WL\", 8460099);\n
    sub_4013f0(57, 2, \"NRFIN\", 16471372);\n
    sub_4013f0(57, 3, \"KPRCA\", 5887745);\n
    sub_4013f0(57, 4, \"AAPL\", 6038510);\n
    sub_4013f0(57, 5, \"OAK\", &g_4056c5);\n
    sub_4013f0(57, 6, \"DDTEK\", -1);\n
    sub_4013f0(57, 7, \"PALM\", 15256299);\n
    sub_4013f0(57, 8, \"CROMU\", 13022481);\n
    sub_4013f0(57, 9, \"PIRATE\", 15319177);\n
    sub_4013f0(57, 10, \"MAPLE\", 13204310);\n
    sub_4013f0(58, 0, \"GOOG\", 13859747);\n
    sub_4013f0(58, 1, \"SK3WL\", -1);\n
    sub_4013f0(58, 2, \"NRFIN\", 4166866);\n
    sub_4013f0(58, 3, \"KPRCA\", 6713079);\n
    sub_4013f0(58, 4, \"AAPL\", 7908228);\n
    sub_4013f0(58, 5, \"OAK\", 15410039);\n
    sub_4013f0(58, 6, \"DDTEK\", 16148226);\n
    sub_4013f0(58, 7, \"PALM\", 1492497);\n
    sub_4013f0(58, 8, \"CROMU\", 5704136);\n
    sub_4013f0(58, 9, \"PIRATE\", 4759536);\n
    sub_4013f0(58, 10, \"MAPLE\", 14976006);\n
    sub_4013f0(59, 0, \"GOOG\", 6094082);\n
    sub_4013f0(59, 1, \"SK3WL\", 2480789);\n
    sub_4013f0(59, 2, \"NRFIN\", 16055547);\n
    sub_4013f0(59, 3, \"KPRCA\", 7692201);\n
    sub_4013f0(59, 4, \"AAPL\", 7394235);\n
    sub_4013f0(59, 5, \"OAK\", 12207680);\n
    sub_4013f0(59, 6, \"DDTEK\", -1);\n
    sub_4013f0(59, 7, \"PALM\", 15624481);\n
    sub_4013f0(59, 8, \"CROMU\", 8729836);\n
    sub_4013f0(59, 9, \"PIRATE\", 7247667);\n
    sub_4013f0(59, 10, \"MAPLE\", 1864472);\n
    sub_4013f0(60, 0, \"GOOG\", 6143374);\n
    sub_4013f0(60, 1, \"SK3WL\", 6514718);\n
    sub_4013f0(60, 2, \"NRFIN\", 8077271);\n
    sub_4013f0(60, 3, \"KPRCA\", 10153214);\n
    sub_4013f0(60, 4, \"AAPL\", 1822598);\n
    sub_4013f0(60, 5, \"OAK\", 10901156);\n
    sub_4013f0(60, 6, \"DDTEK\", 9443404);\n
    sub_4013f0(60, 7, \"PALM\", -1);\n
    sub_4013f0(60, 8, \"CROMU\", 9853321);\n
    sub_4013f0(60, 9, \"PIRATE\", 12226631);\n
    sub_4013f0(60, 10, \"MAPLE\", 12759456);\n
    sub_4013f0(61, 0, \"GOOG\", 15053460);\n
    sub_4013f0(61, 1, \"SK3WL\", 2844003);\n
    sub_4013f0(61, 2, \"NRFIN\", 13464004);\n
    sub_4013f0(61, 3, \"KPRCA\", 9305531);\n
    sub_4013f0(61, 4, \"AAPL\", 10214556);\n
    sub_4013f0(61, 5, \"OAK\", 6983249);\n
    sub_4013f0(61, 6, \"DDTEK\", -1);\n
    sub_4013f0(61, 7, \"PALM\", 1987918);\n
    sub_4013f0(61, 8, \"CROMU\", 11312556);\n
    sub_4013f0(61, 9, \"PIRATE\", 8102804);\n
    sub_4013f0(61, 10, \"MAPLE\", 16147711);\n
    sub_4013f0(62, 0, \"GOOG\", 2843061);\n
    sub_4013f0(62, 1, \"SK3WL\", -1);\n
    sub_4013f0(62, 2, \"NRFIN\", 5779362);\n
    sub_4013f0(62, 3, \"KPRCA\", 14292545);\n
    sub_4013f0(62, 4, \"AAPL\", 15510736);\n
    sub_4013f0(62, 5, \"OAK\", 2856217);\n
    sub_4013f0(62, 6, \"DDTEK\", 11561860);\n
    sub_4013f0(62, 7, \"PALM\", 16580772);\n
    sub_4013f0(62, 8, \"CROMU\", 11043724);\n
    sub_4013f0(62, 9, \"PIRATE\", 14155851);\n
    sub_4013f0(62, 10, \"MAPLE\", 11034770);\n
    sub_4013f0(63, 0, \"GOOG\", 14609439);\n
    sub_4013f0(63, 1, \"SK3WL\", 10511271);\n
    sub_4013f0(63, 2, \"NRFIN\", 1852432);\n
    sub_4013f0(63, 3, \"KPRCA\", 10827303);\n
    sub_4013f0(63, 4, \"AAPL\", 5241151);\n
    sub_4013f0(63, 5, \"OAK\", 2778639);\n
    sub_4013f0(63, 6, \"DDTEK\", -1);\n
    sub_4013f0(63, 7, \"PALM\", 13442907);\n
    sub_4013f0(63, 8, \"CROMU\", 8417882);\n
    sub_4013f0(63, 9, \"PIRATE\", 11015539);\n
    sub_4013f0(63, 10, \"MAPLE\", 2447684);\n
    sub_4013f0(64, 0, \"GOOG\", 6339394);\n
    sub_4013f0(64, 1, \"SK3WL\", 3673932);\n
    sub_4013f0(64, 2, \"NRFIN\", 2319024);\n
    sub_4013f0(64, 3, \"KPRCA\", 1867974);\n
    sub_4013f0(64, 4, \"AAPL\", 2271985);\n
    sub_4013f0(64, 5, \"OAK\", 3711519);\n
    sub_4013f0(64, 6, \"DDTEK\", 1942460);\n
    sub_4013f0(64, 7, \"PALM\", -1);\n
    sub_4013f0(64, 8, \"CROMU\", 7933304);\n
    sub_4013f0(64, 9, \"PIRATE\", 8379052);\n
    sub_4013f0(64, 10, \"MAPLE\", 9294378);\n
    sub_4013f0(65, 0, \"GOOG\", 2591017);\n
    sub_4013f0(65, 1, \"SK3WL\", 5478390);\n
    sub_4013f0(65, 2, \"NRFIN\", 3848650);\n
    sub_4013f0(65, 3, \"KPRCA\", 9231715);\n
    sub_4013f0(65, 4, \"AAPL\", 9178149);\n
    sub_4013f0(65, 5, \"OAK\", 1417773);\n
    sub_4013f0(65, 6, \"DDTEK\", -1);\n
    sub_4013f0(65, 7, \"PALM\", 3150120);\n
    sub_4013f0(65, 8, \"CROMU\", 3591382);\n
    sub_4013f0(65, 9, \"PIRATE\", 12120170);\n
    sub_4013f0(65, 10, \"MAPLE\", 8404641);\n
    sub_4013f0(66, 0, \"GOOG\", 3249878);\n
    sub_4013f0(66, 1, \"SK3WL\", 5677542);\n
    sub_4013f0(66, 2, \"NRFIN\", 2899829);\n
    sub_4013f0(66, 3, \"KPRCA\", 4525060);\n
    sub_4013f0(66, 4, \"AAPL\", 5684300);\n
    sub_4013f0(66, 5, \"OAK\", 8285880);\n
    sub_4013f0(66, 6, \"DDTEK\", 3114578);\n
    sub_4013f0(66, 7, \"PALM\", -1);\n
    sub_4013f0(66, 8, \"CROMU\", 3136496);\n
    sub_4013f0(66, 9, \"PIRATE\", 7436642);\n
    sub_4013f0(66, 10, \"MAPLE\", 9557924);\n
    sub_4013f0(67, 0, \"GOOG\", 9943232);\n
    sub_4013f0(67, 1, \"SK3WL\", 10243760);\n
    sub_4013f0(67, 2, \"NRFIN\", 11205024);\n
    sub_4013f0(67, 3, \"KPRCA\", 5172102);\n
    sub_4013f0(67, 4, \"AAPL\", 4061144);\n
    sub_4013f0(67, 5, \"OAK\", 12408111);\n
    sub_4013f0(67, 6, \"DDTEK\", -1);\n
    sub_4013f0(67, 7, \"PALM\", 14784684);\n
    sub_4013f0(67, 8, \"CROMU\", 16070561);\n
    sub_4013f0(67, 9, \"PIRATE\", 4604413);\n
    sub_4013f0(67, 10, \"MAPLE\", 9280211);\n
    sub_4013f0(68, 0, \"GOOG\", 10721570);\n
    sub_4013f0(68, 1, \"SK3WL\", -1);\n
    sub_4013f0(68, 2, \"NRFIN\", 1371650);\n
    sub_4013f0(68, 3, \"KPRCA\", 11461531);\n
    sub_4013f0(68, 4, \"AAPL\", 3230262);\n
    sub_4013f0(68, 5, \"OAK\", 2427359);\n
    sub_4013f0(68, 6, \"DDTEK\", 1282727);\n
    sub_4013f0(68, 7, \"PALM\", 7075011);\n
    sub_4013f0(68, 8, \"CROMU\", 2277629);\n
    sub_4013f0(68, 9, \"PIRATE\", 10275192);\n
    sub_4013f0(68, 10, \"MAPLE\", &g_40d9e1);\n
    sub_4013f0(69, 0, \"GOOG\", 11367300);\n
    sub_4013f0(69, 1, \"SK3WL\", -1);\n
    sub_4013f0(69, 2, \"NRFIN\", 9873926);\n
    sub_4013f0(69, 3, \"KPRCA\", 10169213);\n
    sub_4013f0(69, 4, \"AAPL\", &g_4237c4);\n
    sub_4013f0(69, 5, \"OAK\", 8465192);\n
    sub_4013f0(69, 6, \"DDTEK\", 1696409);\n
    sub_4013f0(69, 7, \"PALM\", 6159680);\n
    sub_4013f0(69, 8, \"CROMU\", 4010481);\n
    sub_4013f0(69, 9, \"PIRATE\", 14469126);\n
    sub_4013f0(69, 10, \"MAPLE\", 15804958);\n
    sub_4013f0(70, 0, \"GOOG\", 6949049);\n
    sub_4013f0(70, 1, \"SK3WL\", -1);\n
    sub_4013f0(70, 2, \"NRFIN\", 2358002);\n
    sub_4013f0(70, 3, \"KPRCA\", 11345952);\n
    sub_4013f0(70, 4, \"AAPL\", 12242159);\n
    sub_4013f0(70, 5, \"OAK\", 2239732);\n
    sub_4013f0(70, 6, \"DDTEK\", 5356987);\n
    sub_4013f0(70, 7, \"PALM\", 11822903);\n
    sub_4013f0(70, 8, \"CROMU\", 1714463);\n
    sub_4013f0(70, 9, \"PIRATE\", 2558635);\n
    sub_4013f0(70, 10, \"MAPLE\", 8127364);\n
    sub_4013f0(71, 0, \"GOOG\", 13736182);\n
    sub_4013f0(71, 1, \"SK3WL\", 16294150);\n
    sub_4013f0(71, 2, \"NRFIN\", 4851774);\n
    sub_4013f0(71, 3, \"KPRCA\", 2328528);\n
    sub_4013f0(71, 4, \"AAPL\", 8097256);\n
    sub_4013f0(71, 5, \"OAK\", 12756603);\n
    sub_4013f0(71, 6, \"DDTEK\", -1);\n
    sub_4013f0(71, 7, \"PALM\", 10697697);\n
    sub_4013f0(71, 8, \"CROMU\", 15419543);\n
    sub_4013f0(71, 9, \"PIRATE\", 4160055);\n
    sub_4013f0(71, 10, \"MAPLE\", 8095420);\n
    sub_4013f0(72, 0, \"GOOG\", &g_42654a);\n
    sub_4013f0(72, 1, \"SK3WL\", -1);\n
    sub_4013f0(72, 2, \"NRFIN\", 1464943);\n
    sub_4013f0(72, 3, \"KPRCA\", 1728588);\n
    sub_4013f0(72, 4, \"AAPL\", 13875405);\n
    sub_4013f0(72, 5, \"OAK\", 11729595);\n
    sub_4013f0(72, 6, \"DDTEK\", 12116345);\n
    sub_4013f0(72, 7, \"PALM\", 9579724);\n
    sub_4013f0(72, 8, \"CROMU\", 5214966);\n
    sub_4013f0(72, 9, \"PIRATE\", 12151145);\n
    sub_4013f0(72, 10, \"MAPLE\", 8362213);\n
    sub_4013f0(73, 0, \"GOOG\", 10997557);\n
    sub_4013f0(73, 1, \"SK3WL\", -1);\n
    sub_4013f0(73, 2, \"NRFIN\", 3512052);\n
    sub_4013f0(73, 3, \"KPRCA\", 7866577);\n
    sub_4013f0(73, 4, \"AAPL\", 8637268);\n
    sub_4013f0(73, 5, \"OAK\", 2921250);\n
    sub_4013f0(73, 6, \"DDTEK\", 15339788);\n
    sub_4013f0(73, 7, \"PALM\", 6429327);\n
    sub_4013f0(73, 8, \"CROMU\", 5708918);\n
    sub_4013f0(73, 9, \"PIRATE\", 0xd1ab00);\n
    sub_4013f0(73, 10, \"MAPLE\", 0x6bfd00);\n
    sub_4013f0(74, 0, \"GOOG\", 16146022);\n
    sub_4013f0(74, 1, \"SK3WL\", -1);\n
    sub_4013f0(74, 2, \"NRFIN\", 8084313);\n
    sub_4013f0(74, 3, \"KPRCA\", 10747493);\n
    sub_4013f0(74, 4, \"AAPL\", 9331574);\n
    sub_4013f0(74, 5, \"OAK\", 14612865);\n
    sub_4013f0(74, 6, \"DDTEK\", 14456201);\n
    sub_4013f0(74, 7, \"PALM\", 15638824);\n
    sub_4013f0(74, 8, \"CROMU\", 5114190);\n
    sub_4013f0(74, 9, \"PIRATE\", 15954376);\n
    sub_4013f0(74, 10, \"MAPLE\", 5308003);\n
    sub_4013f0(75, 0, \"GOOG\", 7113924);\n
    sub_4013f0(75, 1, \"SK3WL\", &g_402083);\n
    sub_4013f0(75, 2, \"NRFIN\", 7302506);\n
    sub_4013f0(75, 3, \"KPRCA\", 14673068);\n
    sub_4013f0(75, 4, \"AAPL\", 15710354);\n
    sub_4013f0(75, 5, \"OAK\", 7975668);\n
    sub_4013f0(75, 6, \"DDTEK\", 15730691);\n
    sub_4013f0(75, 7, \"PALM\", -1);\n
    sub_4013f0(75, 8, \"CROMU\", 3410437);\n
    sub_4013f0(75, 9, \"PIRATE\", 8906117);\n
    sub_4013f0(75, 10, \"MAPLE\", 9414731);\n
    sub_4013f0(76, 0, \"GOOG\", 14833268);\n
    sub_4013f0(76, 1, \"SK3WL\", 5009385);\n
    sub_4013f0(76, 2, \"NRFIN\", 16662223);\n
    sub_4013f0(76, 3, \"KPRCA\", 12544022);\n
    sub_4013f0(76, 4, \"AAPL\", 1708631);\n
    sub_4013f0(76, 5, \"OAK\", 6890600);\n
    sub_4013f0(76, 6, \"DDTEK\", 6346253);\n
    sub_4013f0(76, 7, \"PALM\", -1);\n
    sub_4013f0(76, 8, \"CROMU\", 2017784);\n
    sub_4013f0(76, 9, \"PIRATE\", 2516169);\n
    sub_4013f0(76, 10, \"MAPLE\", 15957197);\n
    sub_4013f0(77, 0, \"GOOG\", 16725064);\n
    sub_4013f0(77, 1, \"SK3WL\", &g_41813f);\n
    sub_4013f0(77, 2, \"NRFIN\", 11590977);\n
    sub_4013f0(77, 3, \"KPRCA\", 15983349);\n
    sub_4013f0(77, 4, \"AAPL\", 12612147);\n
    sub_4013f0(77, 5, \"OAK\", 16268769);\n
    sub_4013f0(77, 6, \"DDTEK\", 12190990);\n
    sub_4013f0(77, 7, \"PALM\", -1);\n
    sub_4013f0(77, 8, \"CROMU\", 16133556);\n
    sub_4013f0(77, 9, \"PIRATE\", 2124874);\n
    sub_4013f0(77, 10, \"MAPLE\", 14701799);\n
    sub_4013f0(78, 0, \"GOOG\", 2787457);\n
    sub_4013f0(78, 1, \"SK3WL\", 5750399);\n
    sub_4013f0(78, 2, \"NRFIN\", 16412843);\n
    sub_4013f0(78, 3, \"KPRCA\", 15409168);\n
    sub_4013f0(78, 4, \"AAPL\", 6932703);\n
    sub_4013f0(78, 5, \"OAK\", 8020924);\n
    sub_4013f0(78, 6, \"DDTEK\", 2190798);\n
    sub_4013f0(78, 7, \"PALM\", -1);\n
    sub_4013f0(78, 8, \"CROMU\", 10638180);\n
    sub_4013f0(78, 9, \"PIRATE\", 8047783);\n
    sub_4013f0(78, 10, \"MAPLE\", 14872850);\n
    sub_4013f0(79, 0, \"GOOG\", 5712747);\n
    sub_4013f0(79, 1, \"SK3WL\", -1);\n
    sub_4013f0(79, 2, \"NRFIN\", 5038932);\n
    sub_4013f0(79, 3, \"KPRCA\", 16287904);\n
    sub_4013f0(79, 4, \"AAPL\", 7591532);\n
    sub_4013f0(79, 5, \"OAK\", 1801423);\n
    sub_4013f0(79, 6, \"DDTEK\", 4942595);\n
    sub_4013f0(79, 7, \"PALM\", 6893675);\n
    sub_4013f0(79, 8, \"CROMU\", 10679577);\n
    sub_4013f0(79, 9, \"PIRATE\", 8771892);\n
    sub_4013f0(79, 10, \"MAPLE\", 8812499);\n
    sub_4013f0(80, 0, \"GOOG\", 3494735);\n
    sub_4013f0(80, 1, \"SK3WL\", -1);\n
    sub_4013f0(80, 2, \"NRFIN\", 15660796);\n
    sub_4013f0(80, 3, \"KPRCA\", 7079911);\n
    sub_4013f0(80, 4, \"AAPL\", 3192245);\n
    sub_4013f0(80, 5, \"OAK\", 8257291);\n
    sub_4013f0(80, 6, \"DDTEK\", 1102113);\n
    sub_4013f0(80, 7, \"PALM\", 9285787);\n
    sub_4013f0(80, 8, \"CROMU\", 7689556);\n
    sub_4013f0(80, 9, \"PIRATE\", 11300844);\n
    sub_4013f0(80, 10, \"MAPLE\", 3570038);\n
    sub_4013f0(81, 0, \"GOOG\", 3671913);\n
    sub_4013f0(81, 1, \"SK3WL\", 14140569);\n
    sub_4013f0(81, 2, \"NRFIN\", 1582316);\n
    sub_4013f0(81, 3, \"KPRCA\", 8350548);\n
    sub_4013f0(81, 4, \"AAPL\", 15291318);\n
    sub_4013f0(81, 5, \"OAK\", 7800388);\n
    sub_4013f0(81, 6, \"DDTEK\", 7152120);\n
    sub_4013f0(81, 7, \"PALM\", -1);\n
    sub_4013f0(81, 8, \"CROMU\", 5563149);\n
    sub_4013f0(81, 9, \"PIRATE\", 4914026);\n
    sub_4013f0(81, 10, \"MAPLE\", 1023698);\n
    sub_4013f0(82, 0, \"GOOG\", 16486627);\n
    sub_4013f0(82, 1, \"SK3WL\", 6574802);\n
    sub_4013f0(82, 2, \"NRFIN\", 16413030);\n
    sub_4013f0(82, 3, \"KPRCA\", 14936637);\n
    sub_4013f0(82, 4, \"AAPL\", 3672900);\n
    sub_4013f0(82, 5, \"OAK\", 13902760);\n
    sub_4013f0(82, 6, \"DDTEK\", 8258594);\n
    sub_4013f0(82, 7, \"PALM\", -1);\n
    sub_4013f0(82, 8, \"CROMU\", 12641224);\n
    sub_4013f0(82, 9, \"PIRATE\", 8376158);\n
    sub_4013f0(82, 10, \"MAPLE\", 3275268);\n
    sub_4013f0(83, 0, \"GOOG\", 11912262);\n
    sub_4013f0(83, 1, \"SK3WL\", 6228655);\n
    sub_4013f0(83, 2, \"NRFIN\", 14793059);\n
    sub_4013f0(83, 3, \"KPRCA\", 7595741);\n
    sub_4013f0(83, 4, \"AAPL\", 1758682);\n
    sub_4013f0(83, 5, \"OAK\", 2460156);\n
    sub_4013f0(83, 6, \"DDTEK\", -1);\n
    sub_4013f0(83, 7, \"PALM\", 10657454);\n
    sub_4013f0(83, 8, \"CROMU\", 15520122);\n
    sub_4013f0(83, 9, \"PIRATE\", 1399931);\n
    sub_4013f0(83, 10, \"MAPLE\", 7799706);\n
    sub_4013f0(84, 0, \"GOOG\", 14374714);\n
    sub_4013f0(84, 1, \"SK3WL\", -1);\n
    sub_4013f0(84, 2, \"NRFIN\", 6560926);\n
    sub_4013f0(84, 3, \"KPRCA\", 15669180);\n
    sub_4013f0(84, 4, \"AAPL\", 12366596);\n
    sub_4013f0(84, 5, \"OAK\", 9024028);\n
    sub_4013f0(84, 6, \"DDTEK\", 7452913);\n
    sub_4013f0(84, 7, \"PALM\", 10582196);\n
    sub_4013f0(84, 8, \"CROMU\", 2746395);\n
    sub_4013f0(84, 9, \"PIRATE\", 11199896);\n
    sub_4013f0(84, 10, \"MAPLE\", 8404624);\n
    sub_4013f0(85, 0, \"GOOG\", 10457180);\n
    sub_4013f0(85, 1, \"SK3WL\", 8013075);\n
    sub_4013f0(85, 2, \"NRFIN\", 8314568);\n
    sub_4013f0(85, 3, \"KPRCA\", 7326279);\n
    sub_4013f0(85, 4, \"AAPL\", 12665809);\n
    sub_4013f0(85, 5, \"OAK\", 2397706);\n
    sub_4013f0(85, 6, \"DDTEK\", -1);\n
    sub_4013f0(85, 7, \"PALM\", 5660432);\n
    sub_4013f0(85, 8, \"CROMU\", 10432953);\n
    sub_4013f0(85, 9, \"PIRATE\", 12261688);\n
    sub_4013f0(85, 10, \"MAPLE\", 12782155);\n
    sub_4013f0(86, 0, \"GOOG\", 9567690);\n
    sub_4013f0(86, 1, \"SK3WL\", -1);\n
    sub_4013f0(86, 2, \"NRFIN\", 15521683);\n
    sub_4013f0(86, 3, \"KPRCA\", 15940535);\n
    sub_4013f0(86, 4, \"AAPL\", 3745123);\n
    sub_4013f0(86, 5, \"OAK\", 2678419);\n
    sub_4013f0(86, 6, \"DDTEK\", 1698777);\n
    sub_4013f0(86, 7, \"PALM\", 10671356);\n
    sub_4013f0(86, 8, \"CROMU\", 1393160);\n
    sub_4013f0(86, 9, \"PIRATE\", 7388263);\n
    sub_4013f0(86, 10, \"MAPLE\", 8568913);\n
    sub_4013f0(87, 0, \"GOOG\", 16702215);\n
    sub_4013f0(87, 1, \"SK3WL\", 9128904);\n
    sub_4013f0(87, 2, \"NRFIN\", 5635369);\n
    sub_4013f0(87, 3, \"KPRCA\", 15665003);\n
    sub_4013f0(87, 4, \"AAPL\", 11689635);\n
    sub_4013f0(87, 5, \"OAK\", 6718626);\n
    sub_4013f0(87, 6, \"DDTEK\", 14856793);\n
    sub_4013f0(87, 7, \"PALM\", -1);\n
    sub_4013f0(87, 8, \"CROMU\", 13131543);\n
    sub_4013f0(87, 9, \"PIRATE\", 7093023);\n
    sub_4013f0(87, 10, \"MAPLE\", 12546139);\n
    sub_4013f0(88, 0, \"GOOG\", 8969934);\n
    sub_4013f0(88, 1, \"SK3WL\", -1);\n
    sub_4013f0(88, 2, \"NRFIN\", 2934940);\n
    sub_4013f0(88, 3, \"KPRCA\", 8910883);\n
    sub_4013f0(88, 4, \"AAPL\", 3531946);\n
    sub_4013f0(88, 5, \"OAK\", 15537263);\n
    sub_4013f0(88, 6, \"DDTEK\", 2483600);\n
    sub_4013f0(88, 7, \"PALM\", 6217737);\n
    sub_4013f0(88, 8, \"CROMU\", 16624633);\n
    sub_4013f0(88, 9, \"PIRATE\", 15306041);\n
    sub_4013f0(88, 10, \"MAPLE\", 5975488);\n
    sub_4013f0(89, 0, \"GOOG\", 14401400);\n
    sub_4013f0(89, 1, \"SK3WL\", 2836599);\n
    sub_4013f0(89, 2, \"NRFIN\", 10175949);\n
    sub_4013f0(89, 3, \"KPRCA\", 2925119);\n
    sub_4013f0(89, 4, \"AAPL\", 2570426);\n
    sub_4013f0(89, 5, \"OAK\", 8634400);\n
    sub_4013f0(89, 6, \"DDTEK\", 6959244);\n
    sub_4013f0(89, 7, \"PALM\", -1);\n
    sub_4013f0(89, 8, \"CROMU\", 14143461);\n
    sub_4013f0(89, 9, \"PIRATE\", 12596979);\n
    sub_4013f0(89, 10, \"MAPLE\", 3518919);\n
    sub_4013f0(90, 0, \"GOOG\", 13688486);\n
    sub_4013f0(90, 1, \"SK3WL\", 10770343);\n
    sub_4013f0(90, 2, \"NRFIN\", 13479577);\n
    sub_4013f0(90, 3, \"KPRCA\", 3711162);\n
    sub_4013f0(90, 4, \"AAPL\", 16061864);\n
    sub_4013f0(90, 5, \"OAK\", 10855270);\n
    sub_4013f0(90, 6, \"DDTEK\", 12291769);\n
    sub_4013f0(90, 7, \"PALM\", -1);\n
    sub_4013f0(90, 8, \"CROMU\", 7482761);\n
    sub_4013f0(90, 9, \"PIRATE\", 10481084);\n
    sub_4013f0(90, 10, \"MAPLE\", 10474951);\n
    sub_4013f0(91, 0, \"GOOG\", 11854170);\n
    sub_4013f0(91, 1, \"SK3WL\", 1002800);\n
    sub_4013f0(91, 2, \"NRFIN\", 9758578);\n
    sub_4013f0(91, 3, \"KPRCA\", 10599882);\n
    sub_4013f0(91, 4, \"AAPL\", 14373358);\n
    sub_4013f0(91, 5, \"OAK\", 3491571);\n
    sub_4013f0(91, 6, \"DDTEK\", -1);\n
    sub_4013f0(91, 7, \"PALM\", 8742348);\n
    sub_4013f0(91, 8, \"CROMU\", 10194246);\n
    sub_4013f0(91, 9, \"PIRATE\", 14896322);\n
    sub_4013f0(91, 10, \"MAPLE\", 15584914);\n
    sub_4013f0(92, 0, \"GOOG\", 2709273);\n
    sub_4013f0(92, 1, \"SK3WL\", -1);\n
    sub_4013f0(92, 2, \"NRFIN\", 6682562);\n
    sub_4013f0(92, 3, \"KPRCA\", 3447284);\n
    sub_4013f0(92, 4, \"AAPL\", 9172244);\n
    sub_4013f0(92, 5, \"OAK\", 7673008);\n
    sub_4013f0(92, 6, \"DDTEK\", 7230331);\n
    sub_4013f0(92, 7, \"PALM\", 11705022);\n
    sub_4013f0(92, 8, \"CROMU\", 9207167);\n
    sub_4013f0(92, 9, \"PIRATE\", 15335959);\n
    sub_4013f0(92, 10, \"MAPLE\", 6256057);\n
    sub_4013f0(93, 0, \"GOOG\", 6853876);\n
    sub_4013f0(93, 1, \"SK3WL\", -1);\n
    sub_4013f0(93, 2, \"NRFIN\", 1481538);\n
    sub_4013f0(93, 3, \"KPRCA\", 13172296);\n
    sub_4013f0(93, 4, \"AAPL\", 14457233);\n
    sub_4013f0(93, 5, \"OAK\", 9962927);\n
    sub_4013f0(93, 6, \"DDTEK\", 14147388);\n
    sub_4013f0(93, 7, \"PALM\", 12221322);\n
    sub_4013f0(93, 8, \"CROMU\", 6393747);\n
    sub_4013f0(93, 9, \"PIRATE\", 16596042);\n
    sub_4013f0(93, 10, \"MAPLE\", 5943723);\n
    sub_4013f0(94, 0, \"GOOG\", 11970548);\n
    sub_4013f0(94, 1, \"SK3WL\", 8225578);\n
    sub_4013f0(94, 2, \"NRFIN\", 3727297);\n
    sub_4013f0(94, 3, \"KPRCA\", 6302378);\n
    sub_4013f0(94, 4, \"AAPL\", 15614148);\n
    sub_4013f0(94, 5, \"OAK\", 14270557);\n
    sub_4013f0(94, 6, \"DDTEK\", 3765633);\n
    sub_4013f0(94, 7, \"PALM\", -1);\n
    sub_4013f0(94, 8, \"CROMU\", 9647374);\n
    sub_4013f0(94, 9, \"PIRATE\", 5053676);\n
    sub_4013f0(94, 10, \"MAPLE\", 2402456);\n
    sub_4013f0(95, 0, \"GOOG\", 12314570);\n
    sub_4013f0(95, 1, \"SK3WL\", -1);\n
    sub_4013f0(95, 2, \"NRFIN\", 15021239);\n
    sub_4013f0(95, 3, \"KPRCA\", 8283273);\n
    sub_4013f0(95, 4, \"AAPL\", 5548686);\n
    sub_4013f0(95, 5, \"OAK\", 15807611);\n
    sub_4013f0(95, 6, \"DDTEK\", 16561606);\n
    sub_4013f0(95, 7, \"PALM\", 11124284);\n
    sub_4013f0(95, 8, \"CROMU\", 13590917);\n
    sub_4013f0(95, 9, \"PIRATE\", 11378273);\n
    sub_4013f0(95, 10, \"MAPLE\", 16135094);\n
    sub_4013f0(96, 0, \"GOOG\", 1003383);\n
    sub_4013f0(96, 1, \"SK3WL\", -1);\n
    sub_4013f0(96, 2, \"NRFIN\", 13581236);\n
    sub_4013f0(96, 3, \"KPRCA\", 15529685);\n
    sub_4013f0(96, 4, \"AAPL\", 12596233);\n
    sub_4013f0(96, 5, \"OAK\", 10046791);\n
    sub_4013f0(96, 6, \"DDTEK\", 5229777);\n
    sub_4013f0(96, 7, \"PALM\", 13897105);\n
    sub_4013f0(96, 8, \"CROMU\", 12115604);\n
    sub_4013f0(96, 9, \"PIRATE\", 14707702);\n
    sub_4013f0(96, 10, \"MAPLE\", 16634243);\n
    sub_4013f0(97, 0, \"GOOG\", 3508084);\n
    sub_4013f0(97, 1, \"SK3WL\", 8303761);\n
    sub_4013f0(97, 2, \"NRFIN\", 12053208);\n
    sub_4013f0(97, 3, \"KPRCA\", 1426317);\n
    sub_4013f0(97, 4, \"AAPL\", 7446843);\n
    sub_4013f0(97, 5, \"OAK\", 15625017);\n
    sub_4013f0(97, 6, \"DDTEK\", -1);\n
    sub_4013f0(97, 7, \"PALM\", 8714698);\n
    sub_4013f0(97, 8, \"CROMU\", 5724050);\n
    sub_4013f0(97, 9, \"PIRATE\", 14289022);\n
    sub_4013f0(97, 10, \"MAPLE\", 2516546);\n
    sub_4013f0(98, 0, \"GOOG\", 5255555);\n
    sub_4013f0(98, 1, \"SK3WL\", 8304671);\n
    sub_4013f0(98, 2, \"NRFIN\", 6669642);\n
    sub_4013f0(98, 3, \"KPRCA\", 3654473);\n
    sub_4013f0(98, 4, \"AAPL\", 9432303);\n
    sub_4013f0(98, 5, \"OAK\", 6476300);\n
    sub_4013f0(98, 6, \"DDTEK\", 16520773);\n
    sub_4013f0(98, 7, \"PALM\", -1);\n
    sub_4013f0(98, 8, \"CROMU\", 9705914);\n
    sub_4013f0(98, 9, \"PIRATE\", 11793019);\n
    sub_4013f0(98, 10, \"MAPLE\", 7968175);\n
    sub_4013f0(99, 0, \"GOOG\", 10028966);\n
    sub_4013f0(99, 1, \"SK3WL\", 15284950);\n
    sub_4013f0(99, 2, \"NRFIN\", 9615739);\n
    sub_4013f0(99, 3, \"KPRCA\", 10343294);\n
    sub_4013f0(99, 4, \"AAPL\", 5544000);\n
    sub_4013f0(99, 5, \"OAK\", 8899801);\n
    sub_4013f0(99, 6, \"DDTEK\", -1);\n
    sub_4013f0(99, 7, \"PALM\", 14290409);\n
    sub_4013f0(99, 8, \"CROMU\", 9381942);\n
    sub_4013f0(99, 9, \"PIRATE\", 7062546);\n
    return sub_4013f0(99, 10, \"MAPLE\", 15755308);\n
}\n
", "4245152:sub_40c6a0": "extern char g_412098;\n
\n
int sub_40c6a0(char v9, char a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v6;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = &v8;\n
    for (v6 = 0; v6 < 32; v6 += 1)\n
    {\n
        *((a3 + v6)) = 0;\n
    }\n
    v5 = 24;\n
    for (v4 = 0; v4 < 8; v4 += 1)\n
    {\n
        *((a3 + v4)) = *((a1 + v4));\n
        *((a3 + v5 + v4)) = *((a1 + v4));\n
    }\n
    sub_401000(&a0, a3 + 8, 4);\n
    sub_401000(&v9, a3 + 12, 4);\n
    *(&v3) = *(&v9) * 2 + *(&a0);\n
    v2 = 16;\n
    sub_401000(&v3, a3 + v2, 4);\n
    v1 = &(&g_412098)[420 * *(&v9) + 4];\n
    v10 = sub_401000(v1, a3 + v2 + 4, 4);\n
    for (v0 = 0; v0 < 32; v0 = v10)\n
    {\n
        *((a3 + v0)) = *((a3 + v0)) ^ *((v1 + v0));\n
        v10 = v0 + 1;\n
    }\n
    return v10;\n
}\n
", "4245536:sub_40c820": "extern char g_412098;\n
\n
int sub_40c820(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= 32)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &(&g_412098)[420 * v6 + 36] + 0xc * v2;\n
        v0 = sub_4010c0(a0 + 8, v1 + 4, 8);\n
        if (!v0)\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4245682:sub_40c8b2": null, "4245696:sub_40c8c0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40c8c0(unsigned int v3, struct_0 *a0)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_40c820(v3, a0);\n
    if (!v0)\n
        cgc__terminate();\n
    if (*(v0) != -1)\n
        *(v0) = *(v0) + a0->field_4;\n
    return v0;\n
}\n
", "4245787:sub_40c91b": null, "4245792:sub_40c920": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40c920(unsigned int v3, struct_0 *a0)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_40c820(v3, a0);\n
    if (!v0)\n
        cgc__terminate();\n
    if (*(v0) > a0->field_4)\n
        *(v0) = *(v0) - a0->field_4;\n
    return v0;\n
}\n
", "4245888:sub_40c980": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_412098;\n
\n
int sub_40c980(unsigned int v7, struct_0 *a0, unsigned int *a1)\n
{\n
    int tmp_103;  // tmp #103\n
    int tmp_105;  // tmp #105\n
    int tmp_104;  // tmp #104\n
    int tmp_126;  // tmp #126\n
    int tmp_127;  // tmp #127\n
    int tmp_124;  // tmp #124\n
    unsigned int *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_1 *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
    int v11;  // xmm0\n
\n
    v5 = &v6;\n
    v3 = &a1[1];\n
    tmp_103 = SubV(tmp_105, tmp_104);\n
    xmm0<16> = (t103 * Conv(32->128, Load(addr=Load(addr=stack_base-12, size=4, endness=Iend_LE), size=4, endness=Iend_LE)))\n
    v2 = v9;\n
    tmp_126 = SubV(tmp_127, tmp_124);\n
    v10 = tmp_126;\n
    (&g_412098)[105 * v7] = v10;\n
    *(&v10) = 0;\n
    *(&v10) = 0;\n
    *(&v10) = (&g_412098)[105 * *(a1)];\n
    xmm0<16> = (xmm0<16> + Conv(32->128, Load(addr=stack_base-16, size=4, endness=Iend_LE)))\n
    (&g_412098)[105 * *(a1)] = v11;\n
    v1 = sub_40c820(*(a1), a0);\n
    if (!v1)\n
        cgc__terminate();\n
    sub_40c920(*(a1), a0);\n
    v0 = sub_40c820(v7, a0);\n
    if (!v0)\n
        cgc__terminate();\n
    sub_40c8c0(v7, a0);\n
    if (a0->field_4 > v3->field_4)\n
        cgc__terminate();\n
    v3->field_4 = v3->field_4 - a0->field_4;\n
    if (!v3->field_4)\n
    {\n
        v3->field_8 = 0;\n
        v3->field_0 = 0;\n
        v4 = 0xff0000;\n
        return v4;\n
    }\n
    else if (*(v0) != -1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 238;\n
        return v4;\n
    }\n
}\n
", "4246304:sub_40cb20": "int sub_40cb20(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4010c0(v2 + 8, a0 + 8, 8);\n
}\n
", "4246353:sub_40cb51": null, "4246368:sub_40cb60": "extern char g_41c4a8;\n
\n
int sub_40cb60(char *v7)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v8 = v7;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (v2 < 0x400)\n
    {\n
        if (*(&(&g_41c4a8)[56 + 60 * v2]) != 255)\n
        {\n
LABEL_40cc45:\n
            v8 = v2 + 1;\n
            v2 = v8;\n
        }\n
        else\n
        {\n
            v1 = sub_4010c0(&(&g_41c4a8)[60 * v2 + 12], v7, 8);\n
            if (v1)\n
            {\n
LABEL_40cc40:\n
                goto LABEL_40cc45;\n
            }\n
            if (*(&(&g_41c4a8)[8 + 60 * v2]) <= 0)\n
                goto LABEL_40cc40;\n
            if (*(&(&g_41c4a8)[52 + 60 * v2]) >= v3 && !(!v3))\n
                goto LABEL_40cc3b;\n
            v3 = *(&(&g_41c4a8)[52 + 60 * v2]);\n
            v4 = *(&(&g_41c4a8)[4 + 60 * v2]);\n
LABEL_40cc3b:\n
            goto LABEL_40cc40;\n
        }\n
    }\n
    v0 = v4;\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v8;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v8;\n
}\n
", "4246634:sub_40cc6a": null, "4246640:sub_40cc70": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
extern char g_41c4a8;\n
\n
int sub_40cc70(unsigned int v7[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < 0x400; v2 += 1)\n
    {\n
        v1 = &(&g_41c4a8)[4 + 60 * v2];\n
        v0 = 1;\n
        if (v1 && v1->field_8)\n
            v0 = sub_40cb20(v1, v7);\n
        if (v1 && !v0 && (CmpF(v7[0], v1->field_0) & 1) != 1 && v1->field_4 > 0 && v1->field_4 >= v7[1])\n
        {\n
            if (!v4)\n
            {\n
                v4 = *((52 + &g_41c4a8 + 0x3c * v2));\n
                v3 = &(&g_41c4a8)[60 * v2];\n
            }\n
            else if (*((52 + &g_41c4a8 + 0x3c * v2)) < v4)\n
            {\n
                v4 = *((52 + &g_41c4a8 + 0x3c * v2));\n
                v3 = &(&g_41c4a8)[60 * v2];\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4246971:sub_40cdbb": null, "4246976:sub_40cdc0": "extern unsigned int g_412000;\n
extern char g_41c4a8;\n
\n
int sub_40cdc0(unsigned int v5[2], unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 0x400)\n
        {\n
            v2 = 16777215;\n
            return v2;\n
        }\n
        if (!*(12 + &g_41c4a8 + 0x3c * v1))\n
            break;\n
        v1 = v1 + 1;\n
    }\n
    v0 = &(&g_41c4a8)[60 * v1 + 12];\n
    sub_401000(v5 + 1, v0, 8);\n
    *(&(&g_41c4a8)[8 + 60 * v1]) = v5[1];\n
    *(&(&g_41c4a8)[4 + 60 * v1]) = v5[0];\n
    *(&(&g_41c4a8)[60 * v1]) = a0;\n
    if (a1 && a1 != 255)\n
        cgc__terminate();\n
    *(&(&g_41c4a8)[56 + 60 * v1]) = a1;\n
    *(&(&g_41c4a8)[52 + 60 * v1]) = g_412000;\n
    g_412000 = g_412000 + 1;\n
    v2 = 153;\n
    return v2;\n
}\n
", "4247281:sub_40cef1": null, "4247296:sub_40cf00": null, "4247425:sub_40cf81": null, "4247440:sub_40cf90": "int sub_40cf90(unsigned int v2[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    v2[0] = 1;\n
    v2[1] = a0;\n
    v2[2] = a1;\n
    return v2;\n
}\n
", "4247481:sub_40cfb9": null, "4247488:sub_40cfc0": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_40cfc0(unsigned int v3[3], unsigned int a0, char *a1, unsigned int a2, unsigned int a3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40cf90(v3, a0, a3);\n
    if (a0 && a0 != 255)\n
        cgc__terminate();\n
    v0 = &v3[1 + 2];\n
    sub_401000(a1, v0, 8);\n
    v0->field_8 = a2;\n
    return 8;\n
}\n
", "4247623:sub_40d047": null, "4247632:sub_40d050": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char g_412098;\n
\n
int sub_40d050(struct_0 *v6, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = &(&g_412098)[420 * a0];\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 32)\n
        {\n
            v3 = 136;\n
            return v3;\n
        }\n
        v0 = v2 + 36 + v1 * 12;\n
        if (!sub_4010c0(v0 + 1, v6 + 1, 8))\n
            break;\n
        v1 += 1;\n
    }\n
    if (v6->field_4 <= *(v0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = 102;\n
    return v3;\n
}\n
", "4247810:sub_40d102": null, "4247824:sub_40d110": "int sub_40d110(unsigned int v3, unsigned int *a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!a0)\n
    {\n
        v0 = 136;\n
        return v0;\n
    }\n
    v0 = sub_40c980(v3, a1, a0);\n
    return v0;\n
}\n
", "4247897:sub_40d159": null, "4247904:sub_40d160": "int sub_40d160(unsigned int *v7, unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    if (!a1)\n
    {\n
        v3 = sub_40cf00(a0, v7);\n
        if (v3)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v2 = sub_40cc70(a0);\n
        v1 = sub_40d110(v7, v2, a0);\n
        if (!v1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v4 = v1;\n
        return v4;\n
    }\n
    else if (a1 == 255)\n
    {\n
        v0 = sub_40d050(a0, v7);\n
        if (v0)\n
        {\n
            v4 = v0;\n
            return v4;\n
        }\n
        v4 = sub_40cdc0(a0, v7, 255);\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 241;\n
        return v4;\n
    }\n
}\n
", "4248160:sub_40d260": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40d260(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4->field_4;\n
    if (!v0)\n
    {\n
        v1 = 44;\n
        return v1;\n
    }\n
    else if (v0 == 255)\n
    {\n
        v1 = 44;\n
        return v1;\n
    }\n
    else if (v0 != 0xdd00)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 8;\n
        return v1;\n
    }\n
}\n
", "4248280:sub_40d2d8": null, "4248288:sub_40d2e0": "int sub_40d2e0(void* v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_40d260(v3);\n
    return sub_401190(v0, v3 + 24);\n
}\n
", "4248337:sub_40d311": null, "4248352:sub_40d320": "int sub_40d320(unsigned int v4, unsigned int a0[4], unsigned int a1[6])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (v4 != 238)\n
    {\n
        a1[5] = v4;\n
        a1[2] = a0[2];\n
        a1[1] = 65535;\n
        a1[0] = 1;\n
        v1 = 24;\n
        return v1;\n
    }\n
    v0 = &a0[1 + 1];\n
    sub_401000(\"FAIL\", &a1[5], 4);\n
    a1[3] = a0[3];\n
    v1 = a1[3];\n
    return v1;\n
}\n
", "4248502:sub_40d3b6": null, "4248512:sub_40d3c0": "int sub_40d3c0(unsigned int v5, unsigned int a0[2], char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // esi\n
\n
    v3 = &v4;\n
    v2 = v6;\n
    sub_40c6a0(v5, a0[1], a0 + 1, a0[0], a1);\n
    v0 = sub_4010c0(a1, a0 + 2, 32);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 204;\n
    return v1;\n
}\n
", "4248649:sub_40d449": null, "4248656:sub_40d450": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40d450(struct_1 *v10, unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    void* v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    char v6;  // [bp-0x2c]\n
    struct_0 *v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    v7 = &v10[1].field_8;\n
    v5 = sub_40d3c0(v10->field_8, v7, &v6);\n
    if (v5)\n
        cgc__terminate();\n
    v4 = sub_40d160(v10->field_8, v7, v10->field_4);\n
    v3 = 0;\n
    if (v4)\n
    {\n
        v2 = sub_40d320(v4, v10, a0);\n
        v11 = sub_401250(a0, v2);\n
        v1 = v11;\n
        if (!v1)\n
            return v11;\n
        v11 = cgc__terminate();\n
    }\n
    else\n
    {\n
        v0 = sub_40cfc0(a0, 255, v7 + 1, v7->field_4, v10->field_8);\n
        v11 = sub_401250(a0, v0 + 24);\n
        if (!v11)\n
            return v11;\n
        v11 = cgc__terminate();\n
    }\n
}\n
", "4248963:sub_40d583": null, "4248976:sub_40d590": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_40d590(struct_1 *v9, unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    char v5;  // [bp-0x30]\n
    struct_0 *v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // eax\n
\n
    v7 = &v8;\n
    v6 = &v9[1].field_8;\n
    v4 = sub_40d3c0(v9->field_8, v6, &v5);\n
    if (v4)\n
        cgc__terminate();\n
    v3 = sub_40d160(v9->field_8, v6, v9->field_4);\n
    if (v3)\n
    {\n
        v2 = sub_40d320(v3, v9, a0);\n
        v10 = sub_401250(a0, v2);\n
        v1 = v10;\n
        if (v1)\n
            v10 = cgc__terminate();\n
        if (v3 != 238)\n
            return v10;\n
        v10 = cgc__terminate();\n
    }\n
    else\n
    {\n
        v0 = sub_40cfc0(a0, 0, v6 + 1, v6->field_4, v9->field_8);\n
        v10 = sub_401250(a0, v0 + 24);\n
        if (!v10)\n
            return v10;\n
        v10 = cgc__terminate();\n
    }\n
}\n
", "4249305:sub_40d6d9": null, "4249312:sub_40d6e0": "int sub_40d6e0(char *v6, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7;  // eax\n
\n
    v4 = &v5;\n
    v3 = &v6[20];\n
    if (!v3 + 1)\n
    {\n
        cgc__terminate();\n
        sub_40d7a0(); /* do not return */\n
    }\n
    sub_40cb60(v3 + 1);\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        v0 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v0 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    v2 = v0;\n
    *(v3) = v2;\n
    v1 = sub_40d260(v6);\n
    sub_401000(v6, a0, v1 + 24);\n
    *(a0) = 1;\n
    v7 = sub_401250(a0, v1 + 24);\n
    if (v7)\n
    {\n
        v7 = cgc__terminate();\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4249504:sub_40d7a0": "int sub_40d7a0(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8024]\n
    unsigned int v1;  // [bp-0x8020]\n
    unsigned int v2;  // [bp-0x801c]\n
    void* v3;  // [bp-0x8018], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x8014], Other Possible Types: unsigned int\n
    unsigned int v5[3];  // [bp-0x8010]\n
    unsigned int v6[3];  // [bp-0x800c]\n
    char v7;  // [bp-0x8008]\n
    char v8;  // [bp-0x4008]\n
    void* v9;  // [bp-0x8]\n
\n
    sub_40d980();\n
    v9 = 0;\n
    sub_401450();\n
    v6[0] = &v8;\n
    v5[0] = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v3 += 1;\n
        sub_401140(v6, 24);\n
        v2 = sub_401190(24, v6);\n
        if (v2)\n
            cgc__terminate();\n
        if (v6[0])\n
            cgc__terminate();\n
        if (v6[2] >= 100)\n
            cgc__terminate();\n
        v1 = sub_40d2e0(v6);\n
        if (v1)\n
            cgc__terminate();\n
        v0 = v6[1];\n
        if (!v0)\n
        {\n
            sub_40d590(v6, v5);\n
        }\n
        else if (v0 == 255)\n
        {\n
            sub_40d450(v6, v5);\n
        }\n
        else if (v0 == 0xdd00)\n
        {\n
            sub_40d6e0(v6, v5);\n
        }\n
        else if (v0 == 65535)\n
        {\n
            cgc__terminate();\n
        }\n
        v4 += 1;\n
    }\n
}\n
", "4249984:sub_40d980": "int sub_40d980()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4250032:sub_40d9b0": "int sub_40d9b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40dad0();\n
    sub_40dae0();\n
    sub_40db00();\n
    v0 = 1;\n
    if (!sub_40e0d0())\n
    {\n
        v0 = 7;\n
        sub_40e7b0();\n
    }\n
    sub_40e980();\n
    v1 = sub_40e9b0;\n
    sub_40dda0();\n
    if (sub_40daa0())\n
    {\n
        v1 = 7;\n
        sub_40e7b0();\n
    }\n
    sub_40e540();\n
    if (sub_40e640())\n
    {\n
        v1 = sub_40e4e0;\n
        __setusermatherr();\n
    }\n
    sub_40e5c0();\n
    sub_40e5d0();\n
    sub_40e590();\n
    v1 = sub_40e530();\n
    _configthreadlocale();\n
    if (sub_40e580())\n
        sub_40dac0();\n
    sub_40e770();\n
    if (sub_40e780())\n
    {\n
        v1 = 7;\n
        sub_40e7b0();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4250224:sub_40da70": "int sub_40da70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40e5e0();\n
    return 0;\n
}\n
", "4250240:sub_40da80": "int sub_40da80()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_40e790();\n
    v0 = sub_40e520();\n
    return _set_new_mode();\n
}\n
", "4250272:sub_40daa0": "int sub_40daa0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_40e4f0());\n
}\n
", "4250304:sub_40dac0": "int sub_40dac0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4250320:sub_40dad0": "int sub_40dad0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4250336:sub_40dae0": "int sub_40dae0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_40e510());\n
}\n
", "4250368:sub_40db00": "int sub_40db00()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_40e500(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4250400:sub_40db20": "int sub_40db20()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    sub_40d7a0(v1, v2); /* do not return */\n
}\n
", "4250451:sub_40db53": "int sub_40db53()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebp\n
\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4250464:sub_40db60": "extern char g_40e9e0;\n
extern char g_4110d4;\n
extern char g_4110dc;\n
extern char g_4110e0;\n
extern struct_0 *g_4110ec;\n
extern char g_411728;\n
extern unsigned int g_412040;\n
extern unsigned int g_42b4a8;\n
\n
int sub_40db60()\n
{\n
    unsigned int v13;  // [bp-0x8]\n
    struct struct_0 **v14;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v15;  // [bp+0x0]\n
    struct struct_0 **v19;  // [bp+0xfffc4]\n
    struct struct_0 **v20;  // [bp+0xfffd8]\n
    char v21;  // [bp+0xfffeb]\n
    unsigned int v22;  // [bp+0x100000]\n
    struct struct_0 **v27;  // eax\n
\n
    v20 = v27;\n
    if (!sub_40e6e0())\n
    {\n
        v14 = v20;\n
        exit();\n
    }\n
    if (!v21)\n
        _cexit();\n
    v14 = 0;\n
    v13 = 1;\n
    sub_40e090(*(&v15));\n
    v19 = v20;\n
    v22 = -2;\n
}\n
", "4250879:sub_40dcff": "int sub_40dcff()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4250888:sub_40dd08": "int sub_40dd08()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4250915:sub_40dd23": "extern char g_40dd31;\n
\n
int sub_40dd23()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_40dd31;\n
    if (!sub_40e6e0())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4250978:sub_40dd62": "int sub_40dd62()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4251008:sub_40dd80": "int sub_40dd80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40e3f0();\n
    return sub_40db60();\n
}\n
", "4251024:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40dd80();\n
}\n
", "4251040:sub_40dda0": "int sub_40dda0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_40ddd0(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4251088:sub_40ddd0": "extern unsigned int g_42b4b4;\n
\n
int sub_40ddd0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_42b4b4;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_42b4b4))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4251144:sub_40de08": "int sub_40de08()\n
{\n
}\n
", "4251200:sub_40de40": "extern unsigned int g_42b4c0;\n
\n
int sub_40de40(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_42b4c0;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_42b4c0);\n
    return v6;\n
}\n
", "4251234:sub_40de62": "int sub_40de62()\n
{\n
}\n
", "4251264:sub_40de80": "int sub_40de80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4251280:sub_40de90": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_411748;\n
extern unsigned int g_412040;\n
\n
int sub_40de90(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_411748;\n
    v13 = sub_40e9e0;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_412040;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_40e2f0(v6, g_412040 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_40e360(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4251485:sub_40df5d": "int sub_40df5d()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4251494:sub_40df66": "int sub_40df66()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4251533:sub_40df8d": "int sub_40df8d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4251552:sub_40dfa0": "int sub_40dfa0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4251584:sub_40dfc0": "extern unsigned int g_42b4ac;\n
\n
int sub_40dfc0()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40f200();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_40de80() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_42b4ac = v6;\n
        if (!g_42b4ac)\n
        {\n
            tmp_0 = 0;\n
            g_42b4ac = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_42b4ac = v6;\n
            v5 = g_42b4ac;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4251664:sub_40e010": "extern void* g_42b4ac;\n
\n
int sub_40e010(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40f200();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_42b4ac;\n
        g_42b4ac = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40e02f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4251712:sub_40e040": "extern char g_42b4b0;\n
\n
int sub_40e040(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_42b4b0 = 1;\n
    sub_40ed70();\n
    v4 = sub_40f5a0();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40f5a0();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40f5b0();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4251792:sub_40e090": "extern char g_42b4b0;\n
\n
int sub_40e090(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_42b4b0 && a0)\n
        return 1;\n
    sub_40f5b0(v2);\n
    v3 = sub_40f5b0();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4251856:sub_40e0d0": "extern char g_42b4b1;\n
extern unsigned int g_42b4b4;\n
extern unsigned int g_42b4b8;\n
extern unsigned int g_42b4bc;\n
extern unsigned int g_42b4c0;\n
extern unsigned int g_42b4c4;\n
extern unsigned int g_42b4c8;\n
\n
int sub_40e0d0(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_42b4b1)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_40e7b0();\n
    }\n
    if (sub_40f200() && !v10)\n
    {\n
        v8 = &g_42b4b4;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_42b4c0;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_40e196;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_42b4b4 = v4;\n
    g_42b4b8 = v5;\n
    g_42b4bc = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_42b4c0 = v1;\n
    g_42b4c4 = v2;\n
    v11 = v3;\n
    g_42b4c8 = v11;\n
LABEL_40e196:\n
    g_42b4b1 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4252080:sub_40e1b0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40e1b0(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_1 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_1 **v1;  // [bp-0xc]\n
    struct struct_1 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40f200() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_40ea20(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4252160:sub_40e200": "int sub_40e200()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40e0d0(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4252192:sub_40e220": "int sub_40e220()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40f200())\n
    {\n
        v3 = sub_40ed70();\n
    }\n
    else\n
    {\n
        v3 = sub_40daa0();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_40dac0();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4252240:sub_40e250": "extern char g_42b4b4;\n
\n
int sub_40e250()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40f200())\n
    {\n
        v0 = &g_42b4b4;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40f5f0();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4252288:sub_40e280": "int sub_40e280()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40f5c0(0);\n
    return sub_40f5c0();\n
}\n
", "4252320:sub_40e2a0": "int sub_40e2a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40f5d0();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40f5d0();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40f5e0();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4252368:sub_40e2d0": "char sub_40e2d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40f5e0();\n
    sub_40f5e0();\n
    return 1;\n
}\n
", "4252400:sub_40e2f0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40e2f0(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4252512:sub_40e360": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_40e360(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 != v0)\n
        {\n
            if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
                return v5;\n
            v5 = &v5[2 + 2];\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
}\n
", "4252656:sub_40e3f0": "extern unsigned int g_412040;\n
extern unsigned int g_412080;\n
\n
int sub_40e3f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_412040 != 3141592654)\n
    {\n
        v4 = g_412040 & -0x10000;\n
        if (v4)\n
        {\n
            g_412080 = ~(g_412040);\n
            return g_412040 & -0x10000;\n
        }\n
    }\n
    v4 = sub_40e470(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_412040 = v0;\n
    g_412080 = ~(v0);\n
    return v4;\n
}\n
", "4252784:sub_40e470": "int sub_40e470()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4252896:sub_40e4e0": "int sub_40e4e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4252912:sub_40e4f0": "int sub_40e4f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4252928:sub_40e500": "int sub_40e500()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4252944:sub_40e510": "int sub_40e510()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4252960:sub_40e520": "int sub_40e520()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4252976:sub_40e530": "int sub_40e530()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4252992:sub_40e540": "extern void g_42b4d0;\n
\n
int sub_40e540()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_42b4d0);\n
}\n
", "4253024:sub_40e560": "extern unsigned int g_42b4d0;\n
\n
int sub_40e560()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_42b4d0);\n
}\n
", "4253056:sub_40e580": "char sub_40e580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4253072:sub_40e590": "int sub_40e590()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_40e7b0();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4253120:sub_40e5c0": "int sub_40e5c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4253136:sub_40e5d0": "int sub_40e5d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4253152:sub_40e5e0": "int sub_40e5e0()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_40e620();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_40e630(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4253216:sub_40e620": "extern char g_42b4d8;\n
\n
int sub_40e620()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_42b4d8;\n
}\n
", "4253232:sub_40e630": "extern char g_42b4e0;\n
\n
int sub_40e630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_42b4e0;\n
}\n
", "4253248:sub_40e640": "extern unsigned int g_412018;\n
\n
int sub_40e640()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_412018)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4253296:sub_40e670": "extern char g_42b4ec;\n
\n
int sub_40e670()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_42b4ec;\n
}\n
", "4253312:sub_40e680": "extern char g_42b4f0;\n
\n
int sub_40e680()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_42b4f0;\n
}\n
", "4253328:sub_40e690": "extern void* g_42b4f4;\n
\n
int sub_40e690()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_42b4f4 = 0;\n
    return v3;\n
}\n
", "4253344:sub_40e6a0": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40e6a0()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4253408:sub_40e6e0": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_40e6e0()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4253552:sub_40e770": "int sub_40e770()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4253568:sub_40e780": "int sub_40e780()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40e8f0();\n
}\n
", "4253584:sub_40e790": "int sub_40e790()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_40e900);\n
}\n
", "4253616:sub_40e7b0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_40e7b0()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_40e690();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_40e690();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4253641:sub_40e7c9": "int sub_40e7c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4253641\n
}\n
", "4253936:sub_40e8f0": "int sub_40e8f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4253952:sub_40e900": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_40e900(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4254080:sub_40e980": "extern struct_0 *g_411718;\n
\n
int sub_40e980()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_411718;\n
    v3 = &g_411718;\n
    return &g_411718;\n
}\n
", "4254128:sub_40e9b0": "extern struct_0 *g_411720;\n
\n
int sub_40e9b0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_411720;\n
    v3 = &g_411720;\n
    return &g_411720;\n
}\n
", "4254176:sub_40e9e0": "extern unsigned int g_412040;\n
\n
int sub_40e9e0(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40f600(*(v2));\n
    return _except_handler4_common(&g_412040, sub_40f230, v2, a0, a1);\n
}\n
", "4254240:sub_40ea20": "int sub_40ea20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4254256:sub_40ea30": "int sub_40ea30(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x40ea39;\n
    return tmp_4;\n
}\n
", "4254272:sub_40ea40": "int sub_40ea40(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4254304:sub_40ea60": "int sub_40ea60(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40ea40(v2);\n
}\n
", "4254336:sub_40ea80": "extern unsigned int g_42b4f8;\n
\n
int sub_40ea80(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_40ea30(&g_42b4f8, v3);\n
    return v0;\n
}\n
", "4254368:sub_40eaa0": "extern char g_40ea20;\n
extern unsigned int g_42c000;\n
\n
int sub_40eaa0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_40ea60(&g_42c000) != sub_40ea20)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4254416:sub_40ead0": "extern char g_411000;\n
\n
int sub_40ead0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_411000;\n
    v1 = &g_411000;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4254480:sub_40eb10": "extern unsigned int g_42c008;\n
\n
int sub_40eb10(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_40ea60(&g_42c008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4254528:sub_40eb40": "extern unsigned int g_42b4f8;\n
\n
int sub_40eb40(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_40ea60(&g_42b4f8);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_40ea20();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4254592:sub_40eb80": "int sub_40eb80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4254608:sub_40eb90": "int sub_40eb90(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ead0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4254627\n
}\n
", "4254640:sub_40ebb0": "int sub_40ebb0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ead0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4254665:sub_40ebc9": "int sub_40ebc9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4254665\n
}\n
", "4254672:sub_40ebd0": "int sub_40ebd0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ead0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40eb10(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4254720:sub_40ec00": "int sub_40ec00(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ead0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40eb40(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4254768:sub_40ec30": "extern char g_411000;\n
\n
int sub_40ec30(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_411000;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4254832:sub_40ec70": "int sub_40ec70(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ec30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40ead0(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4254875\n
}\n
", "4254880:sub_40eca0": "int sub_40eca0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ec30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40ead0(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4254929:sub_40ecd1": "int sub_40ecd1()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4254929\n
}\n
", "4254944:sub_40ece0": "int sub_40ece0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4254960:sub_40ecf0": "int sub_40ecf0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ec30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40ead0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40eb10(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4255024:sub_40ed30": "int sub_40ed30(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40ec30(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_40ead0(v2);\n
    if (v3)\n
    {\n
        v3 = sub_40eb40(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4255088:sub_40ed70": "extern unsigned int g_412040;\n
extern unsigned int g_412088;\n
extern unsigned int g_41208c;\n
extern unsigned int g_412090;\n
extern unsigned int g_42b4fc;\n
extern unsigned int g_42b500;\n
extern unsigned int g_42b504;\n
\n
int sub_40ed70()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_412040 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_42b500 = 0;\n
    g_412090 = g_412090 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40f230();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40eebb;\n
        g_42b504 = g_42b504 | 1;\n
    }\n
LABEL_40eebb:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_42b504 = g_42b504 | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_42b500 = 1;\n
    g_412090 = g_412090 | 2;\n
    g_412088 = g_412088 & -2;\n
    g_41208c = g_41208c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_42b500 = 2;\n
        g_412090 = g_412090 | 4;\n
        g_412088 = g_412088 & -17;\n
        g_41208c = g_41208c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_42b500 = 3;\n
                g_412090 = g_412090 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_42b500 = 5;\n
                    g_412090 = g_412090 | 32;\n
                    g_412088 = g_412088 & -3;\n
                    g_41208c = g_41208c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_42b500 = 6;\n
                            g_412090 = g_412090 | 64;\n
                            g_412088 = g_412088 & -37;\n
                            g_41208c = g_41208c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_412088 = g_412088 & -16777217;\n
                    g_41208c = g_41208c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_42b4fc = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_412088 = ~(v2 | 16777256) & g_412088;\n
                        g_41208c = ~(v3) & g_41208c;\n
                        if (g_42b4fc > 1)\n
                        {\n
                            g_412088 = g_412088 & -65;\n
                            g_41208c = g_41208c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4256256:sub_40f200": "extern unsigned int g_412094;\n
\n
int sub_40f200()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_412094)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4256304:sub_40f230": "extern unsigned int g_412040;\n
extern unsigned int g_412080;\n
extern unsigned int g_42b510;\n
extern unsigned int g_42b514;\n
extern unsigned int g_42b51c;\n
extern unsigned int g_42b520;\n
extern unsigned int g_42b524;\n
extern unsigned int g_42b560;\n
extern unsigned short g_42b5ec;\n
extern unsigned short g_42b5f0;\n
extern unsigned short g_42b5f4;\n
extern unsigned short g_42b5f8;\n
extern unsigned int g_42b5fc;\n
extern unsigned int g_42b600;\n
extern unsigned int g_42b604;\n
extern unsigned int g_42b608;\n
extern unsigned int g_42b60c;\n
extern unsigned int g_42b610;\n
extern unsigned int g_42b614;\n
extern unsigned int g_42b618;\n
extern unsigned short g_42b61c;\n
extern unsigned int g_42b620;\n
extern unsigned int g_42b624;\n
extern unsigned short g_42b628;\n
\n
int sub_40f230()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_412040)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_42b610 = v7;\n
        g_42b60c = v6;\n
        g_42b608 = v8;\n
        g_42b604 = v9;\n
        g_42b600 = v10;\n
        g_42b5fc = v11;\n
        g_42b628 = v12;\n
        g_42b61c = v13;\n
        g_42b5f8 = v14;\n
        g_42b5f4 = v15;\n
        g_42b5f0 = v16;\n
        g_42b5ec = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_42b620 = v0;\n
        g_42b614 = v3;\n
        g_42b618 = *(&v4);\n
        g_42b624 = &v5;\n
        g_42b560 = 65537;\n
        g_42b51c = g_42b618;\n
        g_42b510 = 3221226505;\n
        g_42b514 = 1;\n
        g_42b520 = 1;\n
        g_42b524 = 2;\n
        v1 = g_412040;\n
        v2 = g_412080;\n
        sub_40f570();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4256320:sub_40f240": "extern unsigned int g_42b510;\n
extern unsigned int g_42b514;\n
extern unsigned int g_42b51c;\n
extern unsigned int g_42b520;\n
extern unsigned int g_42b524;\n
extern unsigned short g_42b5ec;\n
extern unsigned short g_42b5f0;\n
extern unsigned short g_42b5f4;\n
extern unsigned short g_42b5f8;\n
extern unsigned int g_42b5fc;\n
extern unsigned int g_42b600;\n
extern unsigned int g_42b604;\n
extern unsigned int g_42b608;\n
extern unsigned int g_42b60c;\n
extern unsigned int g_42b610;\n
extern unsigned int g_42b614;\n
extern unsigned int g_42b618;\n
extern unsigned short g_42b61c;\n
extern unsigned int g_42b620;\n
extern unsigned int g_42b624;\n
extern unsigned short g_42b628;\n
\n
int sub_40f240()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_42b610 = v4;\n
        g_42b60c = v5;\n
        g_42b608 = v6;\n
        g_42b604 = v7;\n
        g_42b600 = v8;\n
        g_42b5fc = v9;\n
        g_42b628 = v10;\n
        g_42b61c = v11;\n
        g_42b5f8 = v12;\n
        g_42b5f4 = v13;\n
        g_42b5f0 = v14;\n
        g_42b5ec = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_42b620 = v0;\n
        g_42b614 = v1;\n
        g_42b618 = *(&v2);\n
        g_42b624 = &v3;\n
        g_42b51c = g_42b618;\n
        g_42b510 = 3221226505;\n
        g_42b514 = 1;\n
        g_42b520 = 1;\n
        g_42b524 = v3;\n
        sub_40f570();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4256345:sub_40f259": "int sub_40f259()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4256345\n
}\n
", "4256544:sub_40f320": "extern unsigned int g_42b510;\n
extern unsigned int g_42b514;\n
extern unsigned int g_42b51c;\n
extern unsigned int g_42b520;\n
extern unsigned int g_42b524;\n
extern char g_42b528;\n
extern unsigned short g_42b5ec;\n
extern unsigned short g_42b5f0;\n
extern unsigned short g_42b5f4;\n
extern unsigned short g_42b5f8;\n
extern unsigned int g_42b5fc;\n
extern unsigned int g_42b600;\n
extern unsigned int g_42b604;\n
extern unsigned int g_42b608;\n
extern unsigned int g_42b60c;\n
extern unsigned int g_42b610;\n
extern unsigned int g_42b614;\n
extern unsigned int g_42b618;\n
extern unsigned short g_42b61c;\n
extern unsigned int g_42b620;\n
extern unsigned int g_42b624;\n
extern unsigned short g_42b628;\n
\n
int sub_40f320()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1092939];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_42b610 = v7;\n
        g_42b60c = v8;\n
        g_42b608 = v9;\n
        g_42b604 = v10;\n
        g_42b600 = v11;\n
        g_42b5fc = v12;\n
        g_42b628 = v13;\n
        g_42b61c = v14;\n
        g_42b5f8 = v15;\n
        g_42b5f4 = v16;\n
        g_42b5f0 = v17;\n
        g_42b5ec = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_42b620 = v0;\n
        g_42b614 = v2;\n
        g_42b618 = *(&v3);\n
        g_42b624 = &v4;\n
        g_42b51c = g_42b618;\n
        g_42b510 = 3221226505;\n
        g_42b514 = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_42b520 = v5 + 1;\n
        g_42b524 = v4;\n
        for (v1[0] = 0; v1 < v5; v1 += 1)\n
        {\n
            *(&(&g_42b528)[4 * v1]) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40f570();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4256569:sub_40f339": "int sub_40f339()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4256569\n
}\n
", "4256848:sub_40f450": "int sub_40f450()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40f240(8);\n
}\n
", "4256891:sub_40f47b": "int sub_40f47b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4256891\n
}\n
", "4257136:sub_40f570": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40f570(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4257184:sub_40f5a0": "char sub_40f5a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4257200:sub_40f5b0": "char sub_40f5b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4257216:sub_40f5c0": "char sub_40f5c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4257232:sub_40f5d0": "char sub_40f5d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4257248:sub_40f5e0": "char sub_40f5e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4257264:sub_40f5f0": "int sub_40f5f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4257280:sub_40f600": "extern unsigned int g_42b500;\n
\n
int sub_40f600(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_42b500 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4257588:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4257594:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4257600:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4257606:sub_40f746": "int sub_40f746(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4257612:sub_40f74c": "int sub_40f74c()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4257618:sub_40f752": "int sub_40f752()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4257624:sub_40f758": "int sub_40f758(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4257630:sub_40f75e": "int sub_40f75e(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4257636:sub_40f764": "int sub_40f764()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4257642:sub_40f76a": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40f76a(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4257648:sub_40f770": "int sub_40f770(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4257654:sub_40f776": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40f776(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4257660:sub_40f77c": "int sub_40f77c(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4257666:sub_40f782": "int sub_40f782(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4257672:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4257678:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4257684:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4257690:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4257696:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4257702:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4257708:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4257714:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4257720:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4257726:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4257732:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4257738:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4257744:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4257750:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4257756:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4257762:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4257768:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4257774:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4257780:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4257786:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4257792:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4257798:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4257804:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4257810:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4257816:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4257822:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4257828:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4257834:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4257840:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4257846:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4257852:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4257858:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4257864:sub_40f848": "int sub_40f848()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4257870:sub_40f84e": "int sub_40f84e(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_receive": null, "5242888:cgc_transmit": null, "5242892:GetCurrentProcess": null, "5242896:GetCurrentProcessId": null, "5242900:GetCurrentThreadId": null, "5242904:GetModuleHandleW": null, "5242908:GetStartupInfoW": null, "5242912:GetSystemTimeAsFileTime": null, "5242916:InitializeSListHead": null, "5242920:IsDebuggerPresent": null, "5242924:IsProcessorFeaturePresent": null, "5242928:QueryPerformanceCounter": null, "5242932:SetUnhandledExceptionFilter": null, "5242936:TerminateProcess": null, "5242940:UnhandledExceptionFilter": null, "5242944:__current_exception": null, "5242948:__current_exception_context": null, "5242952:__std_type_info_destroy_list": null, "5242956:_except_handler4_common": null, "5242960:memset": null, "5242964:__p___argc": null, "5242968:__p___argv": null, "5242972:__p__commode": null, "5242976:__setusermatherr": null, "5242980:_c_exit": null, "5242984:_cexit": null, "5242988:_configthreadlocale": null, "5242992:_configure_narrow_argv": null, "5242996:_controlfp_s": null, "5243000:_crt_at_quick_exit": null, "5243004:_crt_atexit": null, "5243008:_execute_onexit_table": null, "5243012:_exit": null, "5243016:_get_initial_narrow_environment": null, "5243020:_initialize_narrow_environment": null, "5243024:_initialize_onexit_table": null, "5243028:_initterm": null, "5243032:_initterm_e": null, "5243036:_register_onexit_function": null, "5243040:_register_thread_local_exe_atexit_callback": null, "5243044:_seh_filter_dll": null, "5243048:_seh_filter_exe": null, "5243052:_set_app_type": null, "5243056:_set_fmode": null, "5243060:_set_new_mode": null, "5243064:exit": null, "5243068:terminate": null, "6295596:UnresolvableCallTarget": null}