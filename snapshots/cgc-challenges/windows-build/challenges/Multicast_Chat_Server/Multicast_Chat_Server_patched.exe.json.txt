{"4198400:sub_401000": "int sub_401000(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v1;\n
            if (cgc_receive(v6, a0 + v2, a1))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            a1 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
}\n
", "4198529:sub_401081": null, "4198544:sub_401090": "int sub_401090(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(v6, a0 + v2, a1))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            a1 -= *(&v1);\n
            v2 = *(&v1) + v2;\n
        }\n
        else\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
}\n
", "4198673:sub_401111": null, "4198688:sub_401120": "typedef struct struct_0 {\n
    char padding_0[4256216];\n
    char field_40f1d8;\n
} struct_0;\n
\n
extern unsigned int g_40f1d8;\n
\n
int sub_401120(unsigned int v7, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x9]\n
    struct_0 *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v3 != 10)\n
            v1 = v2 < 4095;\n
        if (!(v1 & 1))\n
            break;\n
        v8 = v2;\n
        v2 = &v8->padding_0[1];\n
        *((v8 + &g_40f1d8)) = v3;\n
    }\n
    v9 = sub_405150();\n
    *(a0) = v9;\n
    if (!v9)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = v2;\n
    sub_4011f0(*(a0), &g_40f1d8);\n
    v4 = v2;\n
    return v4;\n
}\n
", "4198895:sub_4011ef": null, "4198896:sub_4011f0": "int sub_4011f0(char *v4, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    char *v6;  // eax\n
    char *v7;  // eax\n
\n
    v2 = &v3;\n
    v1 = v4;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v5 = a1;\n
        a1 = v5 - 1;\n
        if (!v5)\n
            break;\n
        v6 = v0;\n
        v0 = v6 + 1;\n
        tmp_19 = *(v6);\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        *(v7) = tmp_19;\n
    }\n
    return v4;\n
}\n
", "4198982:sub_401246": null, "4198992:sub_401250": "int sub_401250(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    unsigned int v5;  // eax\n
    char *v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v3;\n
    while (true)\n
    {\n
        v5 = a1;\n
        a1 = v5 - 1;\n
        if (!v5)\n
            break;\n
        v6 = v0;\n
        v0 = v6 + 1;\n
        *(v6) = a0;\n
    }\n
    return v3;\n
}\n
", "4199062:sub_401296": null, "4199072:sub_4012a0": "int sub_4012a0(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
    char *v7;  // eax\n
    char *v8;  // eax\n
    char *v9;  // eax\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    v0 = a0;\n
    if (v1 == v0)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    if (v0 < v1)\n
    {\n
        while (true)\n
        {\n
            v6 = a1;\n
            a1 = v6 + 1;\n
            if (!v6)\n
                break;\n
            v1[a1] = *((v0 + a1));\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v7 = a1;\n
            a1 = v7 + 1;\n
            if (!v7)\n
                break;\n
            v8 = v0;\n
            v0 = v8 + 1;\n
            tmp_19 = *(v8);\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            *(v9) = tmp_19;\n
        }\n
    }\n
    v2 = v5;\n
    return v2;\n
}\n
", "4199267:sub_401363": null, "4199280:sub_401370": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int sub_401370(struct_0 *v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
    struct_0 *v9;  // ecx\n
\n
    v3 = &v4;\n
    v1 = v5;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v6 = a1;\n
        a1 = v6 - 1;\n
        if (!v6)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v7 = v1;\n
        v1 = &v7->field_0;\n
        v8 = v7->field_-1;\n
        v9 = v0;\n
        v0 = &v9->field_0;\n
        if (v8 != v9->field_-1)\n
        {\n
            v2 = *((v1 - 1)) - *((v0 - 1));\n
            return v2;\n
        }\n
    }\n
}\n
", "4199407:sub_4013ef": null, "4199408:sub_4013f0": "int sub_4013f0(char *v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        if (!*(v5))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199464:sub_401428": null, "4199472:sub_401430": "int sub_401430(char *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // ecx\n
    char *v6;  // eax\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v5 = a0;\n
        a0 = v5 - 1;\n
        v0 = 0;\n
        if (v5)\n
        {\n
            v6 = v4;\n
            v4 = v6 + 1;\n
            v0 = *(v6);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4199577:sub_401499": null, "4199584:sub_4014a0": "int sub_4014a0(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(v4) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4199697:sub_401511": null, "4199712:sub_401520": "int sub_401520(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v4))\n
                v1 = *(v4) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(v4) - *(a0);\n
}\n
", "4199851:sub_4015ab": null, "4199856:sub_4015b0": "int sub_4015b0(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v3] = v0[a0];\n
    }\n
    v0[v3] = 0;\n
    return v3;\n
}\n
", "4199939:sub_401603": null, "4199952:sub_401610": "int sub_401610(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v4 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v4 + v1)) = 0;\n
    }\n
    return v4;\n
}\n
", "4200107:sub_4016ab": null, "4200112:sub_4016b0": "int sub_4016b0(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    v3 = &v3[sub_4013f0(v3)];\n
    sub_4015b0(v3, a0);\n
    return v0;\n
}\n
", "4200173:sub_4016ed": null, "4200176:sub_4016f0": "int sub_4016f0(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = v3;\n
    v3 = &v3[sub_4013f0(v3)];\n
    sub_401610(v3, a0, a1);\n
    v3[a1] = 0;\n
    return v0;\n
}\n
", "4200257:sub_401741": null, "4200272:sub_401750": "int sub_401750(char *v3, char a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v3) != a0)\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v0 = v3;\n
            return v0;\n
        }\n
    }\n
}\n
", "4200357:sub_4017a5": null, "4200368:sub_4017b0": "int sub_4017b0(char *v4, char a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    for (v0 = v4; *(v4); v4 += 1);\n
    while (true)\n
    {\n
        if (v4 < v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v4) != a0)\n
        {\n
            v4 -= 1;\n
        }\n
        else\n
        {\n
            v1 = v4;\n
            return v1;\n
        }\n
    }\n
}\n
", "4200497:sub_401831": null, "4200512:sub_401840": "extern struct_0 *g_4101d8;\n
\n
int sub_401840(char *v5, char a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (v5)\n
    {\n
LABEL_401885:\n
        if (g_4101d8 && !(!sub_4013f0(g_4101d8)))\n
            goto LABEL_4018b0;\n
        g_4101d8 = v5;\n
LABEL_4018b0:\n
        for (; g_4101d8->field_0 == a0; g_4101d8 = g_4101d8 + 1);\n
        if (!sub_4013f0(g_4101d8))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = &g_4101d8->field_0;\n
        v1 = sub_401750(g_4101d8, a0);\n
        if (!v1)\n
        {\n
            g_4101d8 = 0;\n
        }\n
        else\n
        {\n
            *(v1) = 0;\n
            g_4101d8 = &v1[1];\n
        }\n
        v2 = v0;\n
        return v2;\n
    }\n
    else\n
    {\n
        if (g_4101d8 && !(!sub_4013f0(g_4101d8)))\n
            goto LABEL_401885;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4200791:sub_401957": null, "4200800:sub_401960": "int sub_401960(char v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (v4 < 10)\n
    {\n
        v1 = v4 + 48;\n
        return v1;\n
    }\n
    else if (v4 < 16)\n
    {\n
        v1 = v4 + 87;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4200879:sub_4019af": null, "4200880:sub_4019b0": "int sub_4019b0(char v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (v4 >= 48 && v4 <= 57)\n
    {\n
        v1 = v4 - 48;\n
        return v1;\n
    }\n
    if (v4 >= 97 && v4 <= 102)\n
    {\n
        v1 = v4 + -87;\n
        return v1;\n
    }\n
    if (v4 >= 65 && v4 <= 70)\n
    {\n
        v1 = v4 + -55;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4201029:sub_401a45": null, "4201040:sub_401a50": "int sub_401a50(char *v4, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    int tmp_14;  // tmp #14\n
    int tmp_11;  // tmp #11\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v2 = &v3;\n
    v0 = a0;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        tmp_14 = sub_401960(v0[v1] >> 4);\n
        v5 = v4;\n
        v4 = v5 + 1;\n
        *(v5) = tmp_14;\n
        tmp_11 = sub_401960(v0[v1] & 15);\n
        v6 = v4;\n
        v4 = v6 + 1;\n
        *(v6) = tmp_11;\n
    }\n
    return v4;\n
}\n
", "4201180:sub_401adc": null, "4201184:sub_401ae0": "int sub_401ae0(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    for (v1 = 4; v1 > 0; v1 -= 1)\n
    {\n
        v0 = v2 * 0x100;\n
        v2 = v0 | sub_4019b0(v5[2 + 2 * v1]) * 16;\n
        v2 = sub_4019b0(v5[1 + 2 * v1]) | v2;\n
    }\n
    return v2;\n
}\n
", "4201320:sub_401b68": null, "4201328:sub_401b70": "int sub_401b70(unsigned int v6, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    char *v7;  // eax\n
    char *v8;  // eax\n
    unsigned int v9;  // eax\n
    char *v10;  // eax\n
    char *v11;  // eax\n
    char *v12;  // eax\n
\n
    v4 = &v5;\n
    v2 = 0;\n
    v1 = a0;\n
    v0 = a0;\n
    if (!v6)\n
    {\n
        v3 = sub_4015b0(a0, \"0\");\n
        return v3;\n
    }\n
    if (v6 < 0)\n
    {\n
        a0 += 1;\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        *(v7) = 45;\n
        v6 = -(v6);\n
    }\n
    for (; v6; v6 = (v9 >> 31 CONCAT v9) /m 10)\n
    {\n
        v8 = v1;\n
        v1 = v8 + 1;\n
        *(v8) = ((v6 >> 31 CONCAT v6) /m 10 >> 32) + 48;\n
        v9 = v6;\n
    }\n
    v10 = v1;\n
    v1 = v10 + 1;\n
    for (*(v10) = 0; &v1[-1 * a0] > 0; *(v12) = v2)\n
    {\n
        v2 = *(a0);\n
        v11 = a0;\n
        a0 = v11 + 1;\n
        *(v11) = *(v1);\n
        v12 = v1;\n
        v1 = v12 + 1;\n
    }\n
    v3 = v0;\n
    return v3;\n
}\n
", "4201591:sub_401c77": null, "4201600:sub_401c80": "int sub_401c80(unsigned int v7)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 1;\n
    v3 = 0;\n
    if (v3[v7] == 45)\n
        v4 = -1;\n
    v2 = 0;\n
    v1 = v3;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= sub_4013f0(v7))\n
            break;\n
        v2 = v2 * 10 + *((v7 + v1)) - 48;\n
        v1 += 1;\n
    }\n
    v2 *= v4;\n
    return v2;\n
}\n
", "4201746:sub_401d12": null, "4201760:sub_401d20": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401d20(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 7);\n
}\n
", "4201798:sub_401d46": null, "4201808:sub_401d50": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401d50(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 6);\n
}\n
", "4201846:sub_401d76": null, "4201856:sub_401d80": "int sub_401d80(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 0;\n
    if (v4 >= 0)\n
        v1 = v4 < 128;\n
    return v1 & 1;\n
}\n
", "4201904:sub_401db0": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401db0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 64);\n
}\n
", "4201942:sub_401dd6": null, "4201952:sub_401de0": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401de0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 32);\n
}\n
", "4201990:sub_401e06": null, "4202000:sub_401e10": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401e10(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 1);\n
}\n
", "4202038:sub_401e36": null, "4202048:sub_401e40": "int sub_401e40(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 0;\n
    if (v4 > 32)\n
        v1 = v4 <= 126;\n
    return v1 & 1;\n
}\n
", "4202093:sub_401e6d": null, "4202096:sub_401e70": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401e70(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 4);\n
}\n
", "4202134:sub_401e96": null, "4202144:sub_401ea0": "int sub_401ea0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 0;\n
    if (v4 >= 32)\n
        v1 = v4 <= 126;\n
    return v1 & 1;\n
}\n
", "4202189:sub_401ecd": null, "4202192:sub_401ed0": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401ed0(struct_0 *v3)\n
{\n
    char v0;  // [bp-0x5]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (sub_401ea0(v3))\n
    {\n
        v0 = !(*((v3 + &g_40f03c)) & 15);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4202269:sub_401f1d": null, "4202272:sub_401f20": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401f20(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 8);\n
}\n
", "4202310:sub_401f46": null, "4202320:sub_401f50": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401f50(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 2);\n
}\n
", "4202358:sub_401f76": null, "4202368:sub_401f80": "typedef struct struct_0 {\n
    char padding_0[4255804];\n
    char field_40f03c;\n
} struct_0;\n
\n
extern char g_40f03c;\n
\n
int sub_401f80(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return (*((v2 + &g_40f03c)) & 16);\n
}\n
", "4202406:sub_401fa6": null, "4202416:sub_401fb0": "int sub_401fb0(void* v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401d50(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 & -33;\n
    return v0;\n
}\n
", "4202473:sub_401fe9": null, "4202480:sub_401ff0": "int sub_401ff0(void* v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401d50(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 | 32;\n
    return v0;\n
}\n
", "4202537:sub_402029": null, "4202544:sub_402030": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402030(unsigned int v7, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a1)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        v1 = cgc_transmit(v7, v3 + a0, a1 - v3);\n
        if (v1)\n
        {\n
            v4 = 3;\n
            return v4;\n
        }\n
        v3 = v2 + v3;\n
    }\n
}\n
", "4202728:sub_4020e8": null, "4202736:sub_4020f0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_4020f0(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char v4;  // [bp+0x8]\n
\n
    v1 = &v2;\n
    v0 = &v4;\n
    return sub_402120(v3, v0, &v4);\n
}\n
", "4202774:sub_402116": null, "4202784:sub_402120": "extern unsigned int g_40f034;\n
\n
int sub_402120(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402150(g_40f034, v2, a0);\n
}\n
", "4202829:sub_40214d": null, "4202832:sub_402150": "int sub_402150(unsigned int *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402180(*(v2), a0, a1);\n
}\n
", "4202879:sub_40217f": null, "4202880:sub_402180": "int sub_402180()\n
{\n
    unsigned int v0;  // [bp-0x1014]\n
    void* v1;  // [bp-0x1010]\n
    void* v2;  // [bp-0x100c]\n
    unsigned int v3;  // [bp+0x4]\n
    char v4;  // [bp+0x8]\n
    char v5;  // [bp+0xc]\n
    char v6;  // [bp+0x1014]\n
    char v7;  // [bp+0x1018]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ebp\n
\n
    sub_408a20(v8);\n
    v0 = v3;\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = *(&v5);\n
    sub_4021f0(sub_404120, &v0, *(&v4));\n
    v9 = *(&v6);\n
    v10 = *(&v7);\n
    return;\n
}\n
", "4202985:sub_4021e9": null, "4202992:sub_4021f0": "int sub_4021f0(struct struct_1 **v42, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    void* v0;  // [bp-0xc8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc4]\n
    unsigned int v2;  // [bp-0xc0]\n
    unsigned int v3;  // [bp-0xbc]\n
    unsigned int v4;  // [bp-0xb8]\n
    unsigned int v5;  // [bp-0xb4]\n
    unsigned int v6;  // [bp-0xb0]\n
    unsigned int v7;  // [bp-0xac]\n
    unsigned int v8;  // [bp-0xa8]\n
    unsigned int v9;  // [bp-0xa4]\n
    unsigned int v10;  // [bp-0xa0]\n
    unsigned int v11;  // [bp-0x9c]\n
    unsigned int v12;  // [bp-0x98]\n
    char *v13;  // [bp-0x94]\n
    char *v14;  // [bp-0x90]\n
    char *v15;  // [bp-0x8c]\n
    char *v16;  // [bp-0x88], Other Possible Types: unsigned int\n
    char v17;  // [bp-0x81]\n
    char *v18;  // [bp-0x80]\n
    char *v19;  // [bp-0x7c]\n
    char *v20;  // [bp-0x78]\n
    char *v21;  // [bp-0x74]\n
    char *v22;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned int v23;  // [bp-0x6c]\n
    unsigned int v24;  // [bp-0x68]\n
    char *v25;  // [bp-0x64], Other Possible Types: unsigned int\n
    char v26;  // [bp-0x60]\n
    struct struct_0 **v27;  // [bp-0x40], Other Possible Types: unsigned int\n
    struct struct_0 **v28;  // [bp-0x3c], Other Possible Types: unsigned int\n
    struct struct_0 **v29;  // [bp-0x38]\n
    void* v30;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v31;  // [bp-0x30]\n
    char *v32;  // [bp-0x2c], Other Possible Types: unsigned int, char\n
    char *v33;  // [bp-0x28], Other Possible Types: unsigned int, void*\n
    struct struct_0 **v34;  // [bp-0x24]\n
    char v35;  // [bp-0x1d]\n
    void* v36;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v37;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v38;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v39;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v40;  // [bp-0x4]\n
    char v41;  // [bp+0x0]\n
    char *v43;  // eax\n
    char *v44;  // eax\n
    char *v45;  // eax\n
    struct struct_0 **v46;  // eax\n
    char *v47;  // eax\n
    char *v48;  // eax\n
    struct struct_0 **v49;  // eax\n
    char *v50;  // eax\n
    char *v51;  // eax\n
    char *v52;  // eax\n
    struct struct_0 **v53;  // eax\n
    char *v54;  // eax\n
    char *v55;  // edx\n
    char *v56;  // edx\n
    char *v57;  // edx\n
    char *v58;  // edx\n
    char *v59;  // edx\n
    char *v60;  // edx\n
    char *v61;  // edx\n
    char *v62;  // edx\n
    char *v63;  // edx\n
    char *v64;  // edx\n
    char *v65;  // edx\n
    char *v66;  // edx\n
    char *v67;  // eax\n
\n
    v40 = &v41;\n
    v39 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = 0;\n
    v29 = a2;\n
    v43 = a1;\n
    a1 = v43 + 1;\n
    v35 = *(v43);\n
    while (v35)\n
    {\n
        v11 = v39;\n
        switch (v11)\n
        {\n
        case 0:\n
            switch (v35)\n
            {\n
            case 37:\n
                v39 = 2;\n
                break;\n
            case 92:\n
                v39 = 1;\n
                break;\n
            default:\n
                v0 = 0;\n
                v42(v35, a0);\n
            }\n
            goto LABEL_4040d2;\n
        case 1:\n
            v10 = v35 - 34;\n
            switch (v10)\n
            {\n
            case 0: case 5: case 58:\n
                v0 = 0;\n
                v42(v35, a0);\n
                break;\n
            case 64:\n
                v0 = 0;\n
                v42(8, a0);\n
                break;\n
            case 68:\n
                v0 = 0;\n
                v42(12, a0);\n
                break;\n
            case 76:\n
                v0 = 0;\n
                v42(10, a0);\n
                break;\n
            case 80:\n
                v0 = 0;\n
                v42(13, a0);\n
                break;\n
            case 82:\n
                v0 = 0;\n
                v42(9, a0);\n
                break;\n
            case 84:\n
                v0 = 0;\n
                v42(11, a0);\n
                break;\n
            case 86:\n
                v39 = 4;\n
                v37 = 0;\n
                v36 = 0;\n
                break;\n
            default:\n
                if (v35 > 48 && v35 < 56)\n
                {\n
                    v39 = 3;\n
                    v37 = 1;\n
                    v36 = v35 - 48;\n
                    goto LABEL_402440;\n
                }\n
                v0 = 0;\n
                v42(*(a1), a0);\n
LABEL_402440:\n
                if (v39 == 1)\n
                    v39 = 0;\n
                goto LABEL_4040d2;\n
            }\n
        case 2:\n
            if (v35 != 37)\n
            {\n
                v39 = 15;\n
                v38 = 0;\n
                a1 += 1;\n
            }\n
            else\n
            {\n
                v0 = 0;\n
                v42(v35, a0);\n
                v39 = 0;\n
            }\n
            goto LABEL_4040d2;\n
        case 3:\n
            if (v35 > 48 && v35 < 56 && v37 < 3)\n
            {\n
                v37 += 1;\n
                v36 = v36 * 8 + v35 - 48;\n
                if (v37 == 3)\n
                {\n
                    v0 = 0;\n
                    v42(v36, a0);\n
                    v39 = 0;\n
                }\n
                goto LABEL_402550;\n
            }\n
            v0 = 0;\n
            v42(v36, a0);\n
            v39 = 0;\n
            a1 += 1;\n
LABEL_402550:\n
            goto LABEL_4040d2;\n
        case 4:\n
            if (sub_401f80(v35) && v37 < 2)\n
            {\n
                v37 += 1;\n
                v9 = v36 * 16;\n
                v36 = v9 + sub_4044d0();\n
                if (v37 == 2)\n
                {\n
                    v0 = 0;\n
                    v42(v36, a0);\n
                    v39 = 0;\n
                }\n
                goto LABEL_402606;\n
            }\n
            v0 = 0;\n
            v42(v36, a0);\n
            v39 = 0;\n
            a1 += 1;\n
LABEL_402606:\n
            goto LABEL_4040d2;\n
        case 5:\n
            v8 = v35 - 32;\n
            switch (v8)\n
            {\n
            case 0:\n
                v38 |= 8;\n
                break;\n
            case 3:\n
                v38 |= 16;\n
                break;\n
            case 7:\n
                v38 |= 1;\n
                break;\n
            case 11:\n
                v38 |= 4;\n
                break;\n
            case 13:\n
                v38 |= 2;\n
                break;\n
            case 16:\n
                v38 |= 32;\n
                break;\n
            default:\n
                a1 += 1;\n
                if ((v38 & 34) == 34)\n
                    v38 &= -33;\n
                v39 = 6;\n
                break;\n
            }\n
            goto LABEL_4040d2;\n
        case 6:\n
            if (v35 == 42)\n
            {\n
                v44 = a1;\n
                a1 = v44 + 1;\n
                v35 = *(v44);\n
                if (!sub_401e10(v35))\n
                {\n
                    v49 = v34;\n
                    v34 = v49 + 1;\n
                    v28 = v49;\n
                    a1 += 1;\n
                }\n
                else\n
                {\n
                    for (v28 = 0; sub_401e10(v35); v35 = *(v48))\n
                    {\n
                        v28 = v28 * 10 + v35 - 48;\n
                        v48 = a1;\n
                        a1 = v48 + 1;\n
                    }\n
                    v28 -= 1;\n
                    if ((Not (Not (Load(addr=stack_base-29, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                }\n
                v33 = &v29[v28]->field_0;\n
            }\n
            else if (!sub_401e10(v35))\n
            {\n
                a1 += 1;\n
            }\n
            else\n
            {\n
                for (v33 = 0; sub_401e10(v35); v35 = *(v51))\n
                {\n
                    v33 = v33 * 10 + v35 - 48;\n
                    v51 = a1;\n
                    a1 = v51 + 1;\n
                }\n
                a1 += 1;\n
            }\n
            v39 = 7;\n
            goto LABEL_4040d2;\n
        case 7:\n
            if (v35 != 46)\n
            {\n
                a1 += 1;\n
            }\n
            else\n
            {\n
                v45 = a1;\n
                a1 = v45 + 1;\n
                v35 = *(v45);\n
                if (v35 == 42)\n
                {\n
                    v47 = a1;\n
                    a1 = v47 + 1;\n
                    v35 = *(v47);\n
                    if (!sub_401e10(v35))\n
                    {\n
                        v53 = v34;\n
                        v34 = v53 + 1;\n
                        v27 = v53;\n
                        a1 += 1;\n
                    }\n
                    else\n
                    {\n
                        for (v27 = 0; sub_401e10(v35); v35 = *(v52))\n
                        {\n
                            v27 = v27 * 10 + v35 - 48;\n
                            v52 = a1;\n
                            a1 = v52 + 1;\n
                        }\n
                        v27 -= 1;\n
                        if ((Not (Not (Load(addr=stack_base-29, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                    }\n
                    v32 = &v29[v27]->field_0;\n
                }\n
                else if (!sub_401e10(v35))\n
                {\n
                    a1 += 1;\n
                }\n
                else\n
                {\n
                    for (v32 = 0; sub_401e10(v35); v35 = *(v54))\n
                    {\n
                        v32 = v32 * 10 + v35 - 48;\n
                        v54 = a1;\n
                        a1 = v54 + 1;\n
                    }\n
                    a1 += 1;\n
                }\n
            }\n
            v39 = 8;\n
            goto LABEL_4040d2;\n
        case 8:\n
            v7 = v35 - 76;\n
            switch (v7)\n
            {\n
            case 0:\n
                v30 = 8;\n
                break;\n
            case 28:\n
                v30 = 1;\n
                if (*(a1) == 104)\n
                {\n
                    v30 += 1;\n
                    a1 += 1;\n
                }\n
                break;\n
            case 30:\n
                v30 = 5;\n
                break;\n
            case 32:\n
                v30 = 3;\n
                if (*(a1) == 108)\n
                    a1 += 1;\n
                break;\n
            case 40:\n
                v30 = 7;\n
                break;\n
            case 46:\n
                v30 = 6;\n
                break;\n
            default:\n
                a1 += 1;\n
                break;\n
            }\n
            v39 = 9;\n
            goto LABEL_4040d2;\n
        case 9:\n
            v24 = 1;\n
            if (v31 == -1)\n
            {\n
                v46 = v34;\n
                v34 = v46 + 1;\n
                v31 = v46;\n
            }\n
            v6 = v35 - 65;\n
            switch (v6)\n
            {\n
            case 0: case 32:\n
                break;\n
            case 2:\n
                break;\n
            case 4: case 36:\n
                break;\n
            case 5: case 37:\n
                break;\n
            case 6: case 38:\n
                break;\n
            case 18:\n
                break;\n
            case 34:\n
                v17 = v29[v31];\n
                if (v33 == -1)\n
                    v33 = 1;\n
                if ((v38 & 2))\n
                {\n
                    v0 = 0;\n
                    v42(v17, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v33 > 1; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    v0 = 0;\n
                    v42(v17, a0);\n
                }\n
                break;\n
            case 35: case 40:\n
                v5 = v30;\n
                if (v5 == 1)\n
                {\n
                    v22 = &v29[v31]->field_0;\n
                    v23 = v22 < 0;\n
                    if (v23)\n
                        v22 = -(v22);\n
                    v25 = sub_404540(v22);\n
                    break;\n
                }\n
                else if (v5 == 2)\n
                {\n
                    v22 = &v29[v31]->field_0;\n
                    v23 = v22 < 0;\n
                    if (v23)\n
                        v22 = -(v22);\n
                    v25 = sub_404540(v22);\n
                    break;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-180, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v22 = &v29[v31]->field_0;\n
                    v23 = v22 < 0;\n
                    if (v23)\n
                        v22 = -(v22);\n
                    v25 = sub_404540(v22);\n
                    break;\n
                }\n
                v21 = -(&v25) + v25;\n
                if (v33 != -1)\n
                {\n
LABEL_402ca2:\n
                    if (v32 != -1)\n
                    {\n
                        if (v32 < v21)\n
                            v32 = v21;\n
                        v38 &= -33;\n
LABEL_402d1f:\n
                        if ((v38 & 2))\n
                        {\n
                            if (v23)\n
                            {\n
                                v0 = 0;\n
                                v42(45, a0);\n
                                if (v33 > 0)\n
                                    v33 -= 1;\n
                            }\n
                            else if ((v38 & 4))\n
                            {\n
                                v0 = 0;\n
                                v42(43, a0);\n
                                if (v33 > 0)\n
                                    v33 -= 1;\n
                            }\n
                            for (; v32 > v21; v33 -= 1)\n
                            {\n
                                v0 = 0;\n
                                v42(48, a0);\n
                                v32 -= 1;\n
                            }\n
                            for (; v32; v33 -= 1)\n
                            {\n
                                v65 = v25;\n
                                v25 = v65 + 1;\n
                                v0 = 0;\n
                                v42(*(v65), a0);\n
                                v32 -= 1;\n
                            }\n
                            for (; v33; v33 -= 1)\n
                            {\n
                                v0 = 0;\n
                                v42(32, a0);\n
                            }\n
                        }\n
                        else\n
                        {\n
                            for (; v33 > v32 + 1; v33 -= 1)\n
                            {\n
                                v0 = 0;\n
                                v42(32, a0);\n
                            }\n
                            if (v23)\n
                            {\n
                                v0 = 0;\n
                                v42(45, a0);\n
                                if (v33 > 0)\n
                                    v33 -= 1;\n
                            }\n
                            else if ((v38 & 4))\n
                            {\n
                                v0 = 0;\n
                                v42(43, a0);\n
                                if (v33 > 0)\n
                                    v33 -= 1;\n
                            }\n
                            if (v33 > v32)\n
                            {\n
                                v0 = 0;\n
                                v42(32, a0);\n
                                v33 -= 1;\n
                            }\n
                            for (; v32 > v21; v32 -= 1)\n
                            {\n
                                v0 = 0;\n
                                v42(48, a0);\n
                            }\n
                            for (; v32; v32 -= 1)\n
                            {\n
                                v66 = v25;\n
                                v25 = v66 + 1;\n
                                v0 = 0;\n
                                v42(*(v66), a0);\n
                            }\n
                        }\n
                        break;\n
                    }\n
                    v32 = v21;\n
                    if (!(v38 & 32))\n
                    {\n
LABEL_402cff:\n
                        goto LABEL_402d1f;\n
                    }\n
                    if (!(v32 < v33))\n
                        goto LABEL_402cff;\n
                    if (!v23 && !(v38 & 4))\n
                    {\n
                        v32 = v33;\n
LABEL_402cfa:\n
                        goto LABEL_402cff;\n
                    }\n
                    v32 = v33 - 1;\n
                    goto LABEL_402cfa;\n
                }\n
                v33 = v21;\n
                if (!v23 && !(v38 & 4))\n
                    goto LABEL_402c9d;\n
                v33 += 1;\n
LABEL_402c9d:\n
                goto LABEL_402ca2;\n
            case 45:\n
                v13 = &v29[v31]->field_0;\n
                v0 = 1;\n
                v12 = v42(0, a0);\n
                v1 = v30;\n
                if (v1 == 1)\n
                {\n
                    *(&v13) = v12;\n
                }\n
                else if (v1 == 2)\n
                {\n
                    *(v13) = v12;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-196, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    *(&v13) = v12;\n
                }\n
                break;\n
            case 46:\n
                v4 = v30;\n
                if (v4 == 1)\n
                {\n
                    v25 = sub_4045c0(v29[v31]);\n
                }\n
                else if (v4 == 2)\n
                {\n
                    v25 = sub_4045c0(v29[v31]);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-184, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v25 = sub_4045c0(v29[v31]);\n
                }\n
                if ((v38 & 16) && *(v25) != 48)\n
                {\n
                    v25 += 1;\n
                    *(v25) = 48;\n
                }\n
                v20 = -(&v25) + v25;\n
                if (v33 == -1)\n
                    v33 = v20;\n
                if (v32 == -1)\n
                {\n
                    v32 = v20;\n
                    if ((v38 & 32) && v32 < v33)\n
                        v32 = v33;\n
                }\n
                else\n
                {\n
                    if (v32 < v20)\n
                        v32 = v20;\n
                    v38 &= -33;\n
                }\n
                if ((v38 & 2))\n
                {\n
                    for (; v32 > v20; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v32; v33 -= 1)\n
                    {\n
                        v61 = v25;\n
                        v25 = v61 + 1;\n
                        v0 = 0;\n
                        v42(*(v61), a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v33 > v32; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    for (; v32 > v20; v32 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v62 = v25;\n
                        v25 = v62 + 1;\n
                        v0 = 0;\n
                        v42(*(v62), a0);\n
                    }\n
                }\n
                break;\n
            case 47:\n
                v38 |= 16;\n
                v0 = 0;\n
                v25 = sub_4045f0(v29[v31], &v26);\n
                v14 = -(&v25) + v25;\n
                if (v32 == -1)\n
                {\n
                    v32 = v14;\n
                }\n
                else\n
                {\n
                    if (v32 < v14)\n
                        v32 = v14;\n
                    v38 &= -33;\n
                }\n
                if (v33 == -1)\n
                    v33 = v32 + 2;\n
                if ((v38 & 2))\n
                {\n
                    v0 = 0;\n
                    v42(48, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    v0 = 0;\n
                    v42(120, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    for (; v32 > v14; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v32; v33 -= 1)\n
                    {\n
                        v59 = v25;\n
                        v25 = v59 + 1;\n
                        v0 = 0;\n
                        v42(*(v59), a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v33 > v32 + 2; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    v0 = 0;\n
                    v42(48, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    v0 = 0;\n
                    v42(120, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    for (; v32 > v14; v32 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v60 = v25;\n
                        v25 = v60 + 1;\n
                        v0 = 0;\n
                        v42(*(v60), a0);\n
                    }\n
                }\n
                break;\n
            case 50:\n
                v16 = &v29[v31]->field_0;\n
                v15 = sub_4013f0(v16);\n
                if (v33 == -1)\n
                    v33 = v15;\n
                if (v32 != -1 && *(&v32) <= v15)\n
                    goto LABEL_403bbf;\n
                v32 = v15;\n
LABEL_403bbf:\n
                if ((v38 & 2))\n
                {\n
                    for (; v32; v33 -= 1)\n
                    {\n
                        v55 = v16;\n
                        v16 = v55 + 1;\n
                        v0 = 0;\n
                        v42(*(v55), a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v33 > v32; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v56 = v16;\n
                        v16 = v56 + 1;\n
                        v0 = 0;\n
                        v42(*(v56), a0);\n
                    }\n
                }\n
                break;\n
            case 52:\n
                v3 = v30;\n
                if (v3 == 1)\n
                {\n
                    v25 = sub_404540(v29[v31]);\n
                }\n
                else if (v3 == 2)\n
                {\n
                    v25 = sub_404540(v29[v31]);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-188, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v25 = sub_404540(v29[v31]);\n
                }\n
                v19 = -(&v25) + v25;\n
                if (v33 == -1)\n
                    v33 = v19;\n
                if (v32 != -1)\n
                {\n
                    if (v32 < v19)\n
                        v32 = v19;\n
                    v38 &= -33;\n
                }\n
                else\n
                {\n
                    v32 = v19;\n
                    if ((v38 & 32) && v32 < v33)\n
                        v32 = v33;\n
                }\n
                if (!(v38 & 2))\n
                {\n
                    for (; v33 > v32; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    for (; v32 > v19; v32 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v58 = v25;\n
                        v25 = v58 + 1;\n
                        v0 = 0;\n
                        v42(*(v58), a0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v19; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v32; v33 -= 1)\n
                    {\n
                        v57 = v25;\n
                        v25 = v57 + 1;\n
                        v0 = 0;\n
                        v42(*(v57), a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                }\n
                break;\n
            case 55:\n
                v24 = 0;\n
            case 23:\n
                v2 = v30;\n
                if (v2 == 1)\n
                {\n
                    v0 = v24;\n
                    v25 = sub_4045f0(v29[v31], &v26);\n
                }\n
                else if (v2 == 2)\n
                {\n
                    v0 = v24;\n
                    v25 = sub_4045f0(v29[v31], &v26);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-192, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v0 = v24;\n
                    v25 = sub_4045f0(v29[v31], &v26);\n
                }\n
                v18 = -(&v25) + v25;\n
                if (v33 == -1)\n
                    v33 = v18;\n
                if (v32 != -1)\n
                {\n
                    if (v32 < v18)\n
                        v32 = v18;\n
                    v38 &= -33;\n
                }\n
                else\n
                {\n
                    v32 = v18;\n
                    if ((v38 & 32) && v32 < v33)\n
                        v32 = v33;\n
                }\n
                if ((v38 & 2))\n
                {\n
                    if ((v38 & 16))\n
                    {\n
                        if (v18 == 1 && *(v25) == 48)\n
                            goto LABEL_4037cc;\n
                        v0 = 0;\n
                        v42(48, a0);\n
                        if (v33 > 0)\n
                            v33 -= 1;\n
                        v0 = 0;\n
                        v42();\n
                        if (v33 > 0)\n
                            v33 -= 1;\n
                    }\n
LABEL_4037cc:\n
                    for (; v32 > v18; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v32; v33 -= 1)\n
                    {\n
                        v63 = v25;\n
                        v25 = v63 + 1;\n
                        v0 = 0;\n
                        v42(*(v63), a0);\n
                        v32 -= 1;\n
                    }\n
                    for (; v33; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
                    goto LABEL_403a57;\n
                }\n
                for (; v33 > v32 + 2; v33 -= 1)\n
                {\n
                    v0 = 0;\n
                    v42(32, a0);\n
                }\n
                if (!(v38 & 16))\n
                {\n
LABEL_403991:\n
                    for (; v33 > v32; v33 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(32, a0);\n
                    }\n
LABEL_4039d2:\n
                    for (; v32 > v18; v32 -= 1)\n
                    {\n
                        v0 = 0;\n
                        v42(48, a0);\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v64 = v25;\n
                        v25 = v64 + 1;\n
                        v0 = 0;\n
                        v42(*(v64), a0);\n
                    }\n
LABEL_403a57:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (v18 == 1 && *(v25) == 48)\n
                        goto LABEL_403991;\n
                    v0 = 0;\n
                    v42(48, a0);\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    v0 = 0;\n
                    v42();\n
                    if (v33 > 0)\n
                        v33 -= 1;\n
                    goto LABEL_4039d2;\n
                }\n
            default:\n
                break;\n
            }\n
            v39 = 0;\n
            goto LABEL_4040d2;\n
        case 15:\n
            v33 = -1;\n
            v32 = -1;\n
            v38 = 0;\n
            v30 = 0;\n
            v31 = -1;\n
            if (v35 == 48)\n
            {\n
                a1 += 1;\n
                v39 = 5;\n
                goto LABEL_4040d2;\n
            }\n
            else\n
            {\n
                if (!sub_401e10(v35))\n
                {\n
                    a1 += 1;\n
                    v39 = 5;\n
                }\n
                else\n
                {\n
                    for (v33 = 0; sub_401e10(v35); v35 = *(v50))\n
                    {\n
                        v33 = v33 * 10 + v35 - 48;\n
                        v50 = a1;\n
                        a1 = v50 + 1;\n
                    }\n
                    if (v35 == 36)\n
                    {\n
                        v31 = v33 - 1;\n
                        v33 = 0;\n
                        v39 = 5;\n
                    }\n
                    else\n
                    {\n
                        a1 += 1;\n
                        v39 = 7;\n
                    }\n
                }\n
                goto LABEL_4040d2;\n
            }\n
        default:\n
LABEL_4040d2:\n
            v67 = a1;\n
            a1 = v67 + 1;\n
            v35 = *(v67);\n
            continue;\n
        }\n
    }\n
    v0 = 2;\n
    return v42(0, a0);\n
}\n
", "4210963:sub_404113": null, "4210976:sub_404120": "int sub_404120(char v5, unsigned int a0[3], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[3];  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6[3];  // esi\n
    unsigned int v7;  // ecx\n
\n
    v3 = &v4;\n
    v1[0] = a0;\n
    if (!a1)\n
    {\n
        v6 = v1;\n
        v7 = v6[2];\n
        v6[2] = v7 + 1;\n
        *(12 + &v1[0] + (v7 & 4095)) = v5;\n
        if (!(v1[2] & 4095) && sub_402030(v1[0], &v5, 0x1000))\n
            cgc__terminate();\n
    }\n
    else if (a1 == 1)\n
    {\n
        v2 = v1[2];\n
        return v2;\n
    }\n
    else if (a1 == 2)\n
    {\n
        v0 = v1[2] & 4095;\n
        if (v0 && sub_402030(v1[0], v1 + 1, v0))\n
            cgc__terminate();\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211264:sub_404240": "int sub_404240(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[4];  // edx\n
    unsigned int v6;  // ecx\n
    unsigned int v7[4];  // eax\n
    unsigned int v8[4];  // eax\n
    unsigned int v9[4];  // edx\n
    unsigned int v10;  // ecx\n
\n
    v2 = &v3;\n
    if (v4[3] < v4[2])\n
    {\n
        v5 = v4;\n
        v6 = v5[3];\n
        v5[3] = v6 + 1;\n
        v1 = *(16 + &v4[0] + v6);\n
        return v1;\n
    }\n
    v4[2] = 0;\n
    v4[3] = 0;\n
    v0 = &v4[2];\n
    if (cgc_receive(v4[0], v4 + 1, 0x1000))\n
    {\n
        v7 = v4;\n
        v7[1] = v7[1] | 2;\n
        v1 = -1;\n
        return v1;\n
    }\n
    else if (!v4[2])\n
    {\n
        v8 = v4;\n
        v8[1] = v8[1] | 4;\n
        v1 = -1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v9 = v4;\n
        v10 = v9[3];\n
        v9[3] = v10 + 1;\n
        v1 = *(16 + &v4[0] + v10);\n
        return v1;\n
    }\n
}\n
", "4211487:sub_40431f": null, "4211488:sub_404320": "int sub_404320(unsigned int v2[4])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404240(v2);\n
}\n
", "4211511:sub_404337": null, "4211520:sub_404340": "extern unsigned int g_40f030[4];\n
\n
int sub_404340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404320(g_40f030);\n
}\n
", "4211542:sub_404356": null, "4211552:sub_404360": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404360(unsigned int v5, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // ecx\n
\n
    v3 = &v4;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a0 - 1)\n
        {\n
LABEL_404401:\n
            *((v5 + v1)) = 0;\n
            v2 = v5;\n
            return v2;\n
        }\n
        v0 = sub_404240(a1);\n
        if (v0 == -1)\n
        {\n
            if ((a1->field_4 & 4) && !(v1 <= 0))\n
                goto LABEL_404401;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v6 = v1;\n
        v1 = v6 + 1;\n
        *((v5 + v6)) = v0;\n
        if (v0 == 10)\n
            goto LABEL_404401;\n
    }\n
}\n
", "4211738:sub_40441a": null, "4211744:sub_404420": "int sub_404420(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2[4])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    char *v8;  // ecx\n
\n
    v5 = &v6;\n
    v1 = 0;\n
    for (v3 = 0; v3 < a1; v3 += 1)\n
    {\n
        for (v2 = 0; v2 < a0; v2 += 1)\n
        {\n
            v0 = sub_404240(a2);\n
            if (v0 == -1)\n
            {\n
                v4 = v3;\n
                return v4;\n
            }\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            v8[v7] = v0;\n
        }\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4211913:sub_4044c9": null, "4211920:sub_4044d0": "int sub_4044d0(char v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (sub_401e10(v3))\n
    {\n
        v0 = v3 - 48;\n
        return v0;\n
    }\n
    else if (sub_401d50(v3))\n
    {\n
        v0 = sub_401fb0(v3) + -55;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "4212032:sub_404540": "int sub_404540(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax\n
\n
    v2 = &v3;\n
    v1 = a0;\n
    for (*(v1) = 48; v4; v4 = (0 CONCAT v4) /m 10)\n
    {\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = ((0 CONCAT v4) /m 10 >> 32) + 48;\n
    }\n
    if (v1 == a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4212156:sub_4045bc": null, "4212160:sub_4045c0": "int sub_4045c0(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // esi\n
    unsigned int v6;  // esi\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v6 = v0;\n
    return sub_404630(v3, 0, a0, v4);\n
}\n
", "4212202:sub_4045ea": null, "4212208:sub_4045f0": "int sub_4045f0(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // esi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
\n
    v2 = &v3;\n
    v1 = v5;\n
    v0 = v6;\n
    v8 = v0;\n
    v9 = v1;\n
    return sub_4046d0(v4, 0, a0, a1, v6, v5);\n
}\n
", "4212261:sub_404625": null, "4212272:sub_404630": "int sub_404630(char *v5, unsigned int a0, char *a1)\n
{\n
    int <0x404630[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    char *v4;  // [bp+0x0], Other Possible Types: unsigned int\n
    char *v6;  // eax\n
    char *v7;  // ecx\n
\n
    v3 = &<0x404630[is_2]|Stack bp, 1 B>;\n
    v1 = v5;\n
    v2 = a0;\n
    v0 = a1;\n
    for (*(v0) = 48; !(!a0) || !(!a1); a0 = (v7 CONCAT a0) * 0x20000000 >> 32)\n
    {\n
        v6 = v5;\n
        v5 = v6 + 1;\n
        *(v6) = a0 & 7 | 48;\n
        v7 = a1;\n
        a1 = v7 / 8;\n
    }\n
    if (v5 == a1)\n
    {\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5 - 1;\n
    return v4;\n
}\n
", "4212428:sub_4046cc": null, "4212432:sub_4046d0": "int sub_4046d0(unsigned int v5, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    int <0x4046d0[is_2]|Stack bp, 1 B>;  // [bp+0x0]\n
    char *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    struct struct_0 **v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x0]\n
    char v6;  // [bp+0xb]\n
    unsigned int v7;  // [bp+0x14]\n
    char *v8;  // eax\n
    unsigned int v9;  // ecx\n
\n
    v3 = &<0x4046d0[is_2]|Stack bp, 1 B>;\n
    v1 = v5;\n
    v2 = a0;\n
    v0 = a1;\n
    for (*(v0) = 48; !(!a2) || !(!v7); a2 = (v9 CONCAT a2) * 0x10000000 >> 32)\n
    {\n
        v6 = a2 & 15;\n
        if (v6 < 10)\n
        {\n
            v6 += 48;\n
        }\n
        else\n
        {\n
            if (!a2)\n
                v5 = v6 - -87;\n
            else\n
                v5 = v6 - -55;\n
            v6 = v5;\n
        }\n
        v8 = a1;\n
        a1 = v8 + 1;\n
        *(v8) = v6;\n
        v9 = v7;\n
        v7 = v9 / 16;\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4212688:sub_4047d0": "extern unsigned int g_40f13c;\n
extern char g_4101dc;\n
\n
int sub_4047d0(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x21]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int *v5;  // [bp-0x1c]\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // ecx\n
\n
    v11 = &v12;\n
    v9 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < g_40f13c)\n
        v13 = g_40f13c;\n
    if (v13 > 4095)\n
    {\n
        v10 = sub_4049d0();\n
        return v10;\n
    }\n
    v4 = sub_404a40();\n
    v8 = v4 - sub_404a40();\n
    if (v8 >= 8)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (!v9)\n
            v3 = v8 < 8;\n
        if (!(v3 & 1))\n
            break;\n
        v14 = v8;\n
        v8 = v14 + 1;\n
        v0 = v13;\n
        v7 = sub_404a80(&(&g_4101dc)[8 * v14], sub_404af0);\n
        if (!v7)\n
            v2 = 0;\n
        else\n
            v2 = -5 + v7;\n
        v6 = v2;\n
        v9 = v6;\n
    }\n
    if (!v9)\n
    {\n
        v9 = sub_404b60();\n
    }\n
    else\n
    {\n
        v5 = v9;\n
        if (!v5)\n
            v1 = 0;\n
        else\n
            v1 = v5 + 1;\n
        sub_404bc0(&(&g_4101dc)[8 + 8 * v8]);\n
    }\n
    sub_404c30();\n
    if ((*(v9) & -2) > v13)\n
        v9 = sub_404c60(v9);\n
    v10 = sub_404cf0();\n
    return v10;\n
}\n
", "4213185:sub_4049c1": null, "4213200:sub_4049d0": "int sub_4049d0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    *(v1) = v5;\n
    sub_404c30();\n
    v2 = sub_404cf0();\n
    return v2;\n
}\n
", "4213299:sub_404a33": null, "4213312:sub_404a40": "int sub_404a40(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 >>= 1;\n
        if (!v3)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4213365:sub_404a75": null, "4213376:sub_404a80": "int sub_404a80(struct struct_0 **v5, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &*(v5)->field_0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a1;\n
        if (a0(v1))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = *(v1);\n
    }\n
}\n
", "4213480:sub_404ae8": null, "4213488:sub_404af0": "int sub_404af0(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = a0;\n
    v2 = v7;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4213588:sub_404b54": null, "4213600:sub_404b60": "int sub_404b60()\n
{\n
    struct struct_0 **v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = &v1;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    *(v1) = 0x1000;\n
    sub_404e00();\n
    v2 = v1;\n
    return v2;\n
}\n
", "4213690:sub_404bba": null, "4213696:sub_404bc0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_404bc0(unsigned int v2[2], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (!a0)\n
        return v2;\n
    if (!a0->field_4)\n
        v2[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v3 = v2;\n
        *((v3 + 4)) = a0->field_4;\n
        return v2;\n
    }\n
    v3 = a0->field_0;\n
    *((v3 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4213806:sub_404c2e": null, "4213808:sub_404c30": "int sub_404c30(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    *(v3) = *(v3) | 1;\n
    *((-4 + v2 + (*(v2) & -2))) = *(v2);\n
    return v2;\n
}\n
", "4213846:sub_404c56": null, "4213856:sub_404c60": "extern unsigned int g_40f13c;\n
\n
int sub_404c60(unsigned int *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = v5 + a0;\n
    v0 = *(v5) & -2;\n
    if ((*(v5) & -2) <= a0 + g_40f13c)\n
    {\n
        v2 = v5;\n
        return v2;\n
    }\n
    *(v5) = a0;\n
    sub_404c30(v5);\n
    *(v1) = v0 - a0;\n
    sub_404c30(v1);\n
    sub_404cf0();\n
    sub_404d00();\n
    v2 = v5;\n
    return v2;\n
}\n
", "4213998:sub_404cee": null, "4214000:sub_404cf0": "int sub_404cf0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 4 + v2;\n
}\n
", "4214016:sub_404d00": "extern unsigned int g_40f13c;\n
extern char g_4101dc;\n
\n
int sub_404d00(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    v7 = sub_404db0();\n
    v3 = v7;\n
    if (!v6)\n
        return v7;\n
    sub_404e00();\n
    v3 = sub_404e30();\n
    v1 = sub_404a40(*(v3) & -2);\n
    v2 = v1 - sub_404a40(g_40f13c);\n
    if (v2 >= 8)\n
        v2 = 7;\n
    v0 = sub_4050b0;\n
    v7 = sub_405020(&(&g_4101dc)[8 * v2], v3 + 1);\n
    return v7;\n
}\n
", "4214185:sub_404da9": null, "4214192:sub_404db0": "int sub_404db0(unsigned int v5)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4214261:sub_404df5": null, "4214272:sub_404e00": "int sub_404e00(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    *(v3) = *(v3) & -2;\n
    *((-4 + v2 + (*(v2) & -2))) = *(v2);\n
    return v2;\n
}\n
", "4214310:sub_404e26": null, "4214320:sub_404e30": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern unsigned int g_40f13c;\n
extern char g_4101dc;\n
\n
int sub_404e30(struct_0 *v11)\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int *v4;  // [bp-0x18]\n
    unsigned int *v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v8;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = 0;\n
    v7 = 0;\n
    if ((v11 & 4095))\n
        v7 = v11 + -(v11->field_0 & -2);\n
    if (((v11 + (v11->field_-4 & -2)) & 4095))\n
        v8 = v11 + (v11->field_-4 & -2);\n
    if (v7 && !(*(v7) & 1))\n
    {\n
        v3 = sub_404a40(*(v7) & -2);\n
        v6 = v3 - sub_404a40(g_40f13c);\n
        if (v6 < 8)\n
        {\n
            v5 = v7;\n
            if (!v5)\n
                v2 = 0;\n
            else\n
                v2 = v5 + 1;\n
            sub_404bc0(&(&g_4101dc)[8 * v6], v2);\n
            *(v7) = (v11->field_-4 & -2) + (*(v7) & -2);\n
            sub_404e00(v7);\n
            v11 = v7;\n
        }\n
    }\n
    if (!v8)\n
    {\n
        return v11;\n
    }\n
    else if ((*(v8) & 1))\n
    {\n
        return v11;\n
    }\n
    else\n
    {\n
        v1 = sub_404a40(*(v8) & -2);\n
        v6 = v1 - sub_404a40(g_40f13c);\n
        if (v6 >= 8)\n
            return v11;\n
        v4 = v8;\n
        if (!v4)\n
            v0 = 0;\n
        else\n
            v0 = v4 + 1;\n
        sub_404bc0(&(&g_4101dc)[8 * v6], v0);\n
        *(v11) = (*(v11) & -2) + (*(v8) & -2);\n
        sub_404e00(v11);\n
    }\n
}\n
", "4214812:sub_40501c": null, "4214816:sub_405020": "int sub_405020(struct struct_0 **v4, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v1 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v5 = sub_405360(v4);\n
            return v5;\n
        }\n
        if (a1(a0) >= 0)\n
        {\n
            v0 = a0;\n
            v5 = sub_405260(v4, v1);\n
            return v5;\n
        }\n
        v1 = *(v1);\n
    }\n
}\n
", "4214947:sub_4050a3": null, "4214960:sub_4050b0": "int sub_4050b0(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
\n
    v8 = &v9;\n
    v6 = v10;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4215111:sub_405147": null, "4215120:sub_405150": "int sub_405150(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4047d0(v3);\n
    if (v0)\n
    {\n
        sub_401250(v0, 0, v3);\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4215189:sub_405195": null, "4215200:sub_4051a0": "int sub_4051a0(char *v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v3 = sub_4047d0(a0);\n
        return v3;\n
    }\n
    v2 = (*(sub_404db0(v6)) & -2) - 8;\n
    if (a0 == v2)\n
    {\n
        v3 = v6;\n
        return v3;\n
    }\n
    v1 = sub_4047d0(a0);\n
    if (a0 < v2)\n
        v0 = a0;\n
    else\n
        v0 = v2;\n
    sub_4011f0(v1, v6, v0);\n
    sub_404d00(v6);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4215379:sub_405253": null, "4215392:sub_405260": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int sub_405260(struct_1 *v2, struct_3 *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v4[2];  // ecx\n
\n
    v0 = &v1;\n
    if (!a1)\n
        return v2;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v2->field_0 && !v2->field_4)\n
    {\n
        v4 = a1;\n
        v2->field_4 = &v4[0];\n
        v3 = v2;\n
        *(v3) = v4;\n
        return v2;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v2->field_4;\n
        v2->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v3 = v2;\n
        v3->field_4 = &a1[0];\n
    }\n
    else if (a0 == v2->field_0)\n
    {\n
        a1[0] = v2->field_0;\n
        v2->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v3 = v2;\n
        v3->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v3 = a0;\n
        v3->field_4 = &a1[0];\n
    }\n
    return v3;\n
}\n
", "4215648:sub_405360": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_405360(struct_0 *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405390(v2, v2->field_4, a0);\n
}\n
", "4215693:sub_40538d": null, "4215696:sub_405390": "int sub_405390(void* *v2, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (a0)\n
    {\n
        v3 = sub_405260(v2, *(a0), a1);\n
        return v3;\n
    }\n
    v3 = sub_405260(v2, *(v2), a1);\n
    return v3;\n
}\n
", "4215792:sub_4053f0": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char *field_0;\n
    char padding_4[16];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
int sub_4053f0(struct_1 *v4, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v4->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) && !sub_4014a0(*(v0), a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 = *((v0 + 20));\n
    }\n
}\n
", "4215907:sub_405463": null, "4215920:sub_405470": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405470(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x41c]\n
    unsigned int v1;  // [bp-0x418]\n
    char v2;  // [bp-0x414]\n
    char v3;  // [bp-0x410]\n
    void* v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc]\n
    struct_0 *v6;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    v4 = 0;\n
    if (v9 > 0x400)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v5 = sub_4047d0(v9 + 1);\n
    if (!v5)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    sub_401250(v5, 0, v9 + 1);\n
    if (cgc_random(&v3, 0x400))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (*(&v2) >= 0x400)\n
    {\n
        for (v1 = 0; v1 < v9; v1 += 1)\n
        {\n
            v0 = (&v3)[v1];\n
            if (v1 && !(v1 >> 31 CONCAT v1) /m 9 >> 32)\n
            {\n
                v5[v1].field_0 = 45;\n
                goto LABEL_40561d;\n
            }\n
            if ((v0 & 1))\n
            {\n
                v5[v1].field_0 = ((0 CONCAT v0) /m 10 >> 32) + 48;\n
            }\n
            else if (!(v0 & 3))\n
            {\n
                v5[v1].field_0 = ((0 CONCAT v0) /m 26 >> 32) + 65;\n
            }\n
            else\n
            {\n
                v5[v1].field_0 = ((0 CONCAT v0) /m 26 >> 32) + 97;\n
            }\n
LABEL_40561d:\n
        }\n
        v6 = v5;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4216396:sub_40564c": null, "4216400:sub_405650": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char *field_4;\n
    char *field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_405650(unsigned int *v5, char *a0, char *a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int [6]\n
    unsigned int v2[6];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
    unsigned int v8;  // eax\n
\n
    v3 = &v4;\n
    v1[0] = 0;\n
    v0 = 0;\n
    v0 = *(v5);\n
    v1 = sub_4047d0(24);\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v6 = sub_4047d0(sub_4013f0(a0) + 1);\n
    v1->field_4 = v6;\n
    if (!v6)\n
    {\n
        sub_404d00(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401250(v1->field_4, 0, sub_4013f0(a0) + 1);\n
    sub_4015b0(v1->field_4, a0);\n
    v8 = sub_4047d0(sub_4013f0(a1) + 1);\n
    v1->field_8 = v8;\n
    if (v8)\n
    {\n
        sub_401250(v1->field_8, 0, sub_4013f0(a1) + 1);\n
        sub_4015b0(v1->field_8, a1);\n
        v1->field_0 = 0;\n
        v1->field_c = 0;\n
        v1->field_10 = 0;\n
        v1->field_14 = *(v5);\n
        *(v5) = v1;\n
        v2 = v1;\n
        return v2;\n
    }\n
    sub_404d00(v1->field_4);\n
    sub_404d00(v1);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4216795:sub_4057db": null, "4216800:sub_4057e0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    char padding_4[16];\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
int sub_4057e0(struct_0 *v4, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v4->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) && !sub_4014a0(*(v0), a0))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = *((v0 + 20));\n
    }\n
}\n
", "4216914:sub_405852": null, "4216928:sub_405860": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[12];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char *field_4;\n
    char padding_8[12];\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
int sub_405860(struct_0 *v4, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v4->padding_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (sub_4014a0(*((v0 + 4)), a0))\n
        {\n
            v0 = *((v0 + 20));\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4217031:sub_4058c7": null, "4217040:sub_4058d0": "int sub_4058d0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_405470(40);\n
    return v2;\n
}\n
", "4217074:sub_4058f2": null, "4217088:sub_405900": "int sub_405900(unsigned int v5)\n
{\n
    char v0;  // [bp-0x14]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4047d0(v5 + 1);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401250(v1, 0, v5 + 1);\n
    if (cgc_random(v1, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*(&v0) >= v5)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4217250:sub_4059a2": null, "4217264:sub_4059b0": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_4059b0(struct struct_0 **v5)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = *(v5); v0; v0 = v1)\n
    {\n
        v1 = v0->field_c;\n
        v0->field_c = v2;\n
        v2 = v0;\n
    }\n
    *(v5) = v2;\n
    return v5;\n
}\n
", "4217353:sub_405a09": null, "4217360:sub_405a10": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
int sub_405a10(struct_2 *v9, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    char *v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    struct_0 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    char *v10;  // ecx\n
    char *v11;  // ecx\n
\n
    v7 = &v8;\n
    v5 = 0;\n
    sub_4059b0(&v9->field_8);\n
    for (v4 = &v9->field_8->field_0; v4; v4 = v4->field_c)\n
    {\n
        v3 = sub_4013f0(v4->field_0);\n
        for (v2 = 0; v2 < v3; v2 += 1)\n
        {\n
            v10 = v5;\n
            v5 = v10 + 1;\n
            v0 = sub_4019b0(v10[v9->field_4]) * 16;\n
            v11 = v5;\n
            v5 = v11 + 1;\n
            v1 = v0 + sub_4019b0(v11[v9->field_4]);\n
            if (*((v4->field_0 + v2)) != (a0[v5 - 2 >> 1] ^ v1))\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
    v6 = 1;\n
    return v6;\n
}\n
", "4217633:sub_405b21": null, "4217648:sub_405b30": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_2 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_405b30(struct_1 *v11)\n
{\n
    char *v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x14]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    char *v14;  // eax\n
    unsigned int v15;  // eax\n
\n
    v9 = &v10;\n
    v5 = 0;\n
    v4 = 0;\n
    for (v3 = &v11->field_10->field_0; v3; v3 = *((v3 + 12)))\n
    {\n
        v5 = sub_4013f0(*(v3)) + v5;\n
    }\n
    v12 = sub_405900(v5);\n
    v11->field_c = v12;\n
    if (!v12)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = sub_4047d0(v5 + 1);\n
    if (!v7)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    sub_401250(v7, 0, v5 + 1);\n
    for (v2 = v11->field_10; v2; v2 = v2->field_c)\n
    {\n
        sub_4016b0(v7, v2->field_0);\n
    }\n
    for (v1 = 0; v1 < v5; v1 += 1)\n
    {\n
        v7[v1] = v7[v1] ^ *((v11->field_c + v1));\n
    }\n
    v4 = v5 * 2 + 1;\n
    v6 = sub_4047d0(v4 + 1);\n
    if (!v6)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    sub_401250(v6, 0, v4 + 1);\n
    for (v0 = 0; v0 < v5 << 1; v0 += 1)\n
    {\n
        v13 = v0;\n
        v0 = v13 + 1;\n
        v6[v13] = sub_401960(((*(v7) >> 31 CONCAT *(v7)) /m 16 >> 31 CONCAT (*(v7) >> 31 CONCAT *(v7)) /m 16) /m 16 >> 32);\n
        v14 = v7;\n
        v7 = v14 + 1;\n
        v15 = *(v14);\n
        v6[v0] = sub_401960((v15 >> 31 CONCAT v15) /m 16 >> 32);\n
    }\n
    v8 = v6;\n
    return v8;\n
}\n
", "4218192:sub_405d50": "extern void* g_40f030;\n
\n
int sub_405d50(char *v9, char *a0)\n
{\n
    char *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10]\n
    char *v5[4];  // [bp-0xc]\n
    unsigned int v6[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v16;  // eax\n
\n
    v7 = &v8;\n
    if (a0 && *(a0) == 47)\n
    {\n
        v0 = a0 + 1;\n
        v5[0] = sub_4047d0(16);\n
        if (!v5)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v10 = sub_4047d0(sub_4013f0(v9) + 1);\n
        v5[0] = v10;\n
        if (!v10)\n
        {\n
            sub_404d00(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        sub_401250(v5[0], 0, sub_4013f0(v9) + 1);\n
        sub_4015b0(v5[0], v9);\n
        v12 = sub_4047d0(sub_4013f0(v0) + 1);\n
        v5[1] = v12;\n
        if (!v12)\n
        {\n
            sub_404d00(v5[0]);\n
            sub_404d00(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        sub_401250(v5[1], 0, sub_4013f0(v0) + 1);\n
        sub_4015b0(v5[1], v0);\n
        v4 = sub_4047d0(0x400);\n
        if (!v4)\n
        {\n
            sub_404d00(v5[1]);\n
            sub_404d00(v5[0]);\n
            sub_404d00(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        sub_401250(v4, 0, 0x400);\n
        sub_404360(v4, 1023, g_40f030);\n
        v1 = sub_4013f0(v4);\n
        if (v1 == -1)\n
            cgc__terminate();\n
        if (!v1)\n
            cgc__terminate();\n
        v3 = v4;\n
        v2 = sub_401840(v3, 58);\n
        if (!v2)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v14 = sub_4047d0(sub_4013f0(v2) + 1);\n
        v5[2] = v14;\n
        if (!v14)\n
        {\n
            sub_404d00(v5[1]);\n
            sub_404d00(v5[0]);\n
            sub_404d00(v5);\n
            sub_404d00(v4);\n
            v6 = 0;\n
            return v6;\n
        }\n
        sub_401250(v5[2], 0, sub_4013f0(v2) + 1);\n
        sub_4015b0(v5[2], v2);\n
        v2 = sub_401840(NULL, 10);\n
        if (!v2)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v16 = sub_4047d0(sub_4013f0(v2) + 1);\n
        v5[3] = v16;\n
        if (v16)\n
        {\n
            sub_401250(v5[3], 0, sub_4013f0(v2) + 1);\n
            sub_4015b0(v5[3], v2);\n
            v6 = v5;\n
            return v6;\n
        }\n
        sub_404d00(v5[1]);\n
        sub_404d00(v5[0]);\n
        sub_404d00(v5[2]);\n
        sub_404d00(v5);\n
        sub_404d00(v4);\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6[0] = 0;\n
    return v6;\n
}\n
", "4219176:sub_406128": null, "4219184:sub_406130": "int sub_406130(char *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (!sub_401520(\"/subscribe\", v4, sub_4013f0(\"/subscribe\")))\n
    {\n
        v0 = sub_4013f0(\"/subscribe\");\n
        v1 = sub_405d50(\"/subscribe\", &v4[v0]);\n
        return v1;\n
    }\n
    if (!sub_401520(\"/out\", v4, sub_4013f0(\"/out\")))\n
    {\n
        v0 = sub_4013f0(\"/out\");\n
        v1 = sub_405d50(\"/out\", &v4[v0]);\n
    }\n
    else if (!sub_401520(\"/auth\", v4, sub_4013f0(\"/auth\")))\n
    {\n
        v0 = sub_4013f0(\"/auth\");\n
        v1 = sub_405d50(\"/auth\", &v4[v0]);\n
    }\n
    else if (!sub_401520(\"/token\", v4, sub_4013f0(\"/token\")))\n
    {\n
        v0 = sub_4013f0(\"/token\");\n
        v1 = sub_405d50(\"/token\", &v4[v0]);\n
    }\n
    else if (!sub_401520(\"/in\", v4, sub_4013f0(\"/in\")))\n
    {\n
        v0 = sub_4013f0(\"/in\");\n
        v1 = sub_405d50(\"/in\", &v4[v0]);\n
    }\n
    return v1;\n
}\n
", "4219708:sub_40633c": null, "4219712:sub_406340": "extern void* g_40f030;\n
\n
int sub_406340()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = sub_4047d0(0x400);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401250(v1, 0, 0x400);\n
    sub_404360(v1, 1023, g_40f030);\n
    v0 = sub_4013f0(v1);\n
    if (v0 == -1)\n
        cgc__terminate();\n
    if (!v0)\n
        cgc__terminate();\n
    v1[1 + v0] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4219896:sub_4063f8": null, "4219904:sub_406400": "int sub_406400(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = 0;\n
    v2 = 0x4347c000;\n
    v4 = sub_4047d0(v8 + 1);\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    sub_401250(v4, 0, v8 + 1);\n
    for (v1 = 0; v1 < v8; v1 += 1)\n
    {\n
        v0 = v2[v1];\n
        if (!(v0 & 1))\n
        {\n
            if (!(v0 & 3))\n
                *((v4 + v1)) = ((v2[v1] >> 31 CONCAT v2[v1]) /m 26 >> 32) + 65;\n
            else\n
                *((v4 + v1)) = ((v2[v1] >> 31 CONCAT v2[v1]) /m 26 >> 32) + 97;\n
        }\n
        else\n
        {\n
            if (!(0 CONCAT v0) /m 7 >> 32)\n
                *((v4 + v1)) = 32;\n
            else\n
                *((v4 + v1)) = ((v2[v1] >> 31 CONCAT v2[v1]) /m 10 >> 32) + 48;\n
        }\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4220233:sub_406549": null, "4220240:sub_406550": "typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char *field_8;\n
    char *field_c;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_4;\n
\n
int sub_406550(struct_2 *v3, struct_1 *a0, struct_4 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_3 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v4 = sub_4086d0(v3->field_c);\n
    if (!v4)\n
        return v4;\n
    for (v0 = &v4->field_0; v0; v0 = *((v0 + 16)))\n
    {\n
        if (!sub_4014a0(*((v0 + 12)), a0->field_4))\n
        {\n
            sub_402030(1, *((v0 + 8)), sub_4013f0(*((v0 + 8))));\n
            sub_402030(1, \"\\n
\", sub_4013f0(\"\\n
\"));\n
        }\n
        a0->field_8 = *(v0);\n
        a1->field_8 = *(v0);\n
    }\n
    v4 = sub_408790();\n
    return v4;\n
}\n
", "4220479:sub_40663f": null, "4220480:sub_406640": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char *field_8;\n
    char padding_c[4];\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int sub_406640(struct_0 *v3, struct_1 *a0, struct_1 *a1)\n
{\n
    struct_3 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_2 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v4 = sub_4086d0(v3->field_c);\n
    if (!v4)\n
        return v4;\n
    for (v0 = &v4->field_0; v0; v0 = *((v0 + 16)))\n
    {\n
        sub_402030(1, *((v0 + 8)), sub_4013f0(*((v0 + 8))));\n
        sub_402030(1, \"\\n
\", sub_4013f0(\"\\n
\"));\n
        a0->field_8 = *(v0);\n
        a1->field_8 = *(v0);\n
    }\n
    v4 = sub_408790();\n
    return v4;\n
}\n
", "4220686:sub_40670e": null, "4220688:sub_406710": "typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    char *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_406710(unsigned int v3, struct_0 *a0, struct_0 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_2 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v4 = sub_408730();\n
    v0 = &v4->field_0;\n
    if (!v4)\n
        return v4;\n
    v4 = v0->field_0;\n
    if (v4 != a0->field_8)\n
    {\n
        sub_402030(1, v0->field_8, sub_4013f0(v0->field_8));\n
        sub_402030(1, \"\\n
\", sub_4013f0(\"\\n
\"));\n
        a0->field_8 = v0->field_0;\n
        a1->field_8 = v0->field_0;\n
        v4 = sub_408790(v3, \"\\n
\");\n
        return v4;\n
    }\n
    return v0->field_0;\n
}\n
", "4220874:sub_4067ca": null, "4220880:sub_4067d0": "typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int sub_4067d0(struct_2 *v3, struct_0 *a0, struct_0 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4[3];  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v4 = sub_4086d0(v3->field_c);\n
    v0 = &v4[0];\n
    if (v4)\n
    {\n
        sub_402030(1, v0->field_8, sub_4013f0(v0->field_8));\n
        sub_402030(1, \"\\n
\", sub_4013f0(\"\\n
\"));\n
        a0->field_8 = v0->field_0;\n
        a1->field_8 = v0->field_0;\n
        v4 = sub_408790(v3, \"\\n
\");\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4221057:sub_406881": null, "4221072:sub_406890": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
int sub_406890(struct_2 *v5, struct_2 *a0)\n
{\n
    void* v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_1 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &v4;\n
    v0 = 0;\n
    v6 = sub_408660(a0->field_10);\n
    v2 = &v6->padding_0;\n
    if (!v6)\n
        return v6;\n
    v6 = sub_408660(v5->field_10);\n
    v1 = v6;\n
    if (!v6)\n
        return v6;\n
    v6 = v2;\n
    if (!*((v6 + 4)))\n
    {\n
        return v2;\n
    }\n
    else if (sub_4014a0(v2->field_4, \"guaranteed\"))\n
    {\n
        if (!sub_4014a0(v2->field_4, \"latest\"))\n
        {\n
            v6 = sub_406710(v5, v2, v1);\n
        }\n
        else if (!sub_4014a0(v2->field_4, \"next\"))\n
        {\n
            v6 = sub_4067d0(v5, v2, v1);\n
        }\n
        else\n
        {\n
            if (sub_4014a0(v2->field_4, \"high\") && sub_4014a0(v2->field_4, \"medium\"))\n
            {\n
                v6 = sub_4014a0(v2->field_4, \"low\");\n
                if (!(!v6))\n
                    goto LABEL_406a3f;\n
            }\n
            v6 = sub_406550(v5, v2, v1);\n
LABEL_406a3f:\n
        }\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = sub_406640(v5, v2, v1);\n
        return v6;\n
    }\n
}\n
", "4221523:sub_406a53": null, "4221536:sub_406a60": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_406a60(unsigned int v4, struct_1 *a0)\n
{\n
    void* v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = a0->field_10;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (!v1)\n
            break;\n
        v0 = sub_4085f0(v4);\n
        sub_406890(v0, a0);\n
        v5 = v1->field_c;\n
    }\n
    return v5;\n
}\n
", "4221627:sub_406abb": null, "4221632:sub_406ac0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char *field_4;\n
    char *field_8;\n
    char *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_406ac0(unsigned int v12, unsigned int a0[5], struct_0 *a1)\n
{\n
    unsigned int v0[5];  // [bp-0x2c]\n
    char *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5[5];  // [bp-0x18]\n
    unsigned int v6[5];  // [bp-0x14]\n
    struct_1 *v7;  // [bp-0x10]\n
    struct_2 *v8;  // [bp-0xc]\n
    unsigned int v9[5];  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
    unsigned int v13[5];  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17[5];  // eax\n
\n
    v10 = &v11;\n
    v13 = a0;\n
    if (!v13[3])\n
        return a0;\n
    v13 = sub_4085f0(v12);\n
    v9[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v13 = sub_408660(v9[4]);\n
    v5[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v13 = sub_408660(a1->field_10);\n
    v6[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v13 = sub_4047d0(20);\n
    v8 = v13;\n
    if (!v13)\n
        return v13;\n
    v1 = a0[3];\n
    v13 = sub_401840(v1, 58);\n
    v0[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v4 = sub_4013f0(v0);\n
    v14 = sub_4047d0(v4 + 1);\n
    v8->field_8 = v14;\n
    if (!v14)\n
    {\n
        v13 = sub_404d00(v8);\n
        return v13;\n
    }\n
    sub_401250(v8->field_8, 0, v4 + 1);\n
    sub_4015b0(v8->field_8, v0);\n
    v13 = sub_401840(NULL, 58);\n
    v0[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v2 = sub_4013f0(v0);\n
    v15 = sub_4047d0(v2 + 1);\n
    v8->field_c = v15;\n
    if (!v15)\n
    {\n
        sub_404d00(v8->field_8);\n
        v13 = sub_404d00(v8);\n
        return v13;\n
    }\n
    sub_401250(v8->field_c, 0, v2 + 1);\n
    sub_4015b0(v8->field_c, v0);\n
    v3 = sub_4013f0(a1->field_4);\n
    v16 = sub_4047d0(v3 + 1);\n
    v8->field_4 = v16;\n
    if (!v16)\n
    {\n
        sub_404d00(v8->field_8);\n
        v13 = sub_404d00(v8);\n
        return v13;\n
    }\n
    sub_401250(v8->field_4, 0, v3 + 1);\n
    sub_4015b0(v8->field_4, a1->field_4);\n
    v7 = sub_408730(v9[3]);\n
    if (!v7)\n
        v9[3] = v8;\n
    else\n
        v7->field_10 = v8;\n
    v17 = v9;\n
    v17[2] = v17[2] + 1;\n
    v8->field_0 = v9[2];\n
    v3 = sub_4013f0(a1->field_4);\n
    v8->field_10 = 0;\n
    v5[2] = v9[2];\n
    v6[2] = v9[2];\n
    v13 = sub_408790();\n
    return v13;\n
}\n
", "4222413:sub_406dcd": null, "4222416:sub_406dd0": "int sub_406dd0(unsigned int v3, char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = sub_4085f0(v3);\n
    if (v0)\n
    {\n
        v4 = sub_406890(v0, a1);\n
        return v4;\n
    }\n
    v4 = sub_4014a0(a0, \"ALL\");\n
    if (v4)\n
        return v4;\n
    v4 = sub_406a60(v3, a1);\n
}\n
", "4222542:sub_406e4e": null, "4222544:sub_406e50": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
int sub_406e50(struct_0 *v4)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v0 = sub_4013f0(\"/auth\") + v0;\n
    v0 = sub_4013f0(\"/\") + v0;\n
    v0 = sub_4013f0(v4->field_4) + v0;\n
    v0 = sub_4013f0(\"\\n
\") + v0;\n
    v5 = sub_4047d0(v0 + 1);\n
    v1 = v5;\n
    if (v5)\n
    {\n
        sub_401250(v1, 0, v0);\n
        sub_4015b0(v1, \"/auth\");\n
        sub_4016b0(v1, \"/\");\n
        sub_4016b0(v1, v4->field_4);\n
        sub_4016b0(v1, \"\\n
\");\n
        sub_402030(1, v1, sub_4013f0(v1));\n
        v5 = sub_404d00(v1);\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4222833:sub_406f71": null, "4222848:sub_406f80": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_406f80(struct struct_1 **v6, struct_0 *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    struct struct_1 **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_1 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct struct_1 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    v0 = a0->field_c;\n
    v7 = sub_401840(v0, 58);\n
    v1 = v7;\n
    if (!v7)\n
        return v7;\n
    v3 = *(v6);\n
    v2 = sub_408660(v3->field_10);\n
    if (!v2)\n
    {\n
        v7 = sub_406e50(a0);\n
        return v7;\n
    }\n
    sub_408420(&v2);\n
    v7 = v6;\n
    *(v7) = v3;\n
    return v6;\n
}\n
", "4222996:sub_407014": null, "4223008:sub_407020": "typedef struct struct_0 {\n
    char *field_0;\n
    char *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    char *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int sub_407020(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    struct_1 *v2;  // [bp-0x2c]\n
    char *v3;  // [bp-0x28]\n
    char *v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    struct_0 *v9;  // [bp-0xc]\n
    unsigned int v10[3];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
\n
    v11 = &v12;\n
    v7 = 0;\n
    v5 = 0;\n
    v4 = v13;\n
    v9 = sub_4047d0(12);\n
    if (!v9)\n
    {\n
        v10[0] = 0;\n
        return v10;\n
    }\n
    v9->field_8 = 0;\n
    v8 = sub_401840(v4, 58);\n
    v7 = sub_4013f0(v8);\n
    if (!v7)\n
    {\n
        sub_404d00(v9);\n
        v10 = 0;\n
        return v10;\n
    }\n
    v14 = sub_4047d0(v7 + 1);\n
    v9->field_0 = v14;\n
    if (!v14)\n
    {\n
        sub_404d00(v9);\n
        v10 = 0;\n
        return v10;\n
    }\n
    sub_401250(v9->field_0, 0, v7 + 1);\n
    sub_401610(v9->field_0, v8, v7);\n
    v6 = sub_401840(NULL, 58);\n
    v5 = sub_4013f0(v6);\n
    if (!v5)\n
    {\n
        sub_404d00(v9->field_0);\n
        sub_404d00(v9);\n
        v10 = 0;\n
        return v10;\n
    }\n
    v15 = sub_4047d0(v5 + 1);\n
    v9->field_4 = v15;\n
    if (!v15)\n
    {\n
        sub_404d00(v9->field_0);\n
        sub_404d00(v9);\n
        v10 = 0;\n
        return v10;\n
    }\n
    sub_401250(v9->field_4, 0, v5 + 1);\n
    sub_401610(v9->field_4, v6, v5);\n
    while (true)\n
    {\n
        v3 = sub_401840(NULL, 44);\n
        if (!v3)\n
        {\n
            v10 = v9;\n
            return v10;\n
        }\n
        v2 = sub_4047d0(16);\n
        if (!v2)\n
        {\n
            sub_404d00(v9->field_4);\n
            sub_404d00(v9->field_0);\n
            sub_404d00(v9);\n
            v10 = 0;\n
            return v10;\n
        }\n
        v1 = sub_4013f0(v3);\n
        v16 = sub_4047d0(v1 + 1);\n
        v2->field_0 = v16;\n
        if (!v16)\n
        {\n
            sub_404d00(v2);\n
            sub_404d00(v9->field_4);\n
            sub_404d00(v9->field_0);\n
            sub_404d00(v9);\n
            v10 = 0;\n
            return v10;\n
        }\n
        sub_401250(v2->field_0, 0, v1 + 1);\n
        sub_401610(v2->field_0, v3, v1);\n
        v0 = sub_4013f0(\"latest\");\n
        v17 = sub_4047d0(v0 + 1);\n
        v2->field_4 = v17;\n
        if (!v17)\n
        {\n
            sub_404d00(v2->field_0);\n
            sub_404d00(v2);\n
            sub_404d00(v9->field_4);\n
            sub_404d00(v9->field_0);\n
            sub_404d00(v9);\n
            v10 = 0;\n
            return v10;\n
        }\n
        sub_401250(v2->field_4, 0, v0 + 1);\n
        sub_401610(v2->field_4, \"latest\", v0);\n
        v2->field_c = v9->field_8;\n
        v9->field_8 = v2;\n
    }\n
}\n
", "4223997:sub_4073fd": null, "4224000:sub_407400": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char *field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_2 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_407400(struct_1 *v13, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0xc]\n
    char *v10;  // [bp-0x8]\n
    unsigned int v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // eax\n
\n
    v11 = &v12;\n
    v8 = 0;\n
    v8 = sub_4013f0(\"/token\") + v8;\n
    v2 = sub_4013f0(\"/\");\n
    v3 = v2 + sub_4013f0(a0);\n
    v8 = v3 + sub_4013f0(\"\\n
\") + v8;\n
    v4 = sub_4013f0(\"0\");\n
    v8 = v4 + sub_4013f0(\":\") + v8;\n
    v5 = sub_4013f0(v13->field_4);\n
    v8 = v5 + sub_4013f0(\":\") + v8;\n
    v14 = sub_405b30(v13);\n
    v9 = v14;\n
    if (!v14)\n
        return v14;\n
    v1 = sub_4013f0(v9);\n
    v8 = v1 + sub_4013f0(\":\") + v8;\n
    for (v7 = &v13->field_10->field_0; v7; v7 = v7->field_c)\n
    {\n
        v0 = sub_4013f0(v7->field_0);\n
        v8 = v0 + sub_4013f0(\",\") + v8;\n
    }\n
    v8 = sub_4013f0(\"\\n
\") + v8;\n
    v14 = sub_4047d0(v8 + 1);\n
    v10 = v14;\n
    if (!v14)\n
        return v14;\n
    sub_401250(v10, 0, v8 + 1);\n
    sub_4016b0(v10, \"/token\");\n
    sub_4016b0(v10, \"/\");\n
    sub_4016b0(v10, a0);\n
    sub_4016b0(v10, \"\\n
\");\n
    sub_4016b0(v10, \"0\");\n
    sub_4016b0(v10, \":\");\n
    sub_4016b0(v10, v13->field_4);\n
    sub_4016b0(v10, \":\");\n
    sub_4016b0(v10, v9);\n
    sub_4016b0(v10, \":\");\n
    for (v6 = v13->field_10; v6; v6 = v6->field_c)\n
    {\n
        sub_4016b0(v10, v6->field_0);\n
        if (v6->field_c)\n
            sub_4016b0(v10, \",\");\n
    }\n
    sub_4016b0(v10, \"\\n
\");\n
    sub_402030(1, v10, sub_4013f0(v10));\n
    sub_404d00(v9);\n
    v14 = sub_404d00(v10);\n
    return v14;\n
}\n
", "4224797:sub_40771d": null, "4224800:sub_407720": "int sub_407720(char **v8, char *a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v4 = sub_4013f0(\"/subscribe\") + v4;\n
    v0 = sub_4013f0(\"/\");\n
    v1 = v0 + sub_4013f0(a0[0]);\n
    v4 = v1 + sub_4013f0(\"\\n
\") + v4;\n
    v2 = sub_4013f0(*(v8));\n
    v4 = v2 + sub_4013f0(\":\") + v4;\n
    v3 = sub_4013f0(a0[1]);\n
    v4 = v3 + sub_4013f0(\"\\n
\") + v4;\n
    v9 = sub_4047d0(v4 + 1);\n
    v5 = v9;\n
    if (v9)\n
    {\n
        sub_401250(v5, 0, v4 + 1);\n
        sub_4016b0(v5, \"/subscribe\");\n
        sub_4016b0(v5, \"/\");\n
        sub_4016b0(v5, a0[0]);\n
        sub_4016b0(v5, \"\\n
\");\n
        sub_4016b0(v5, *(v8));\n
        sub_4016b0(v5, \":\");\n
        sub_4016b0(v5, a0[1]);\n
        sub_4016b0(v5, \"\\n
\");\n
        sub_402030(1, v5, sub_4013f0(v5));\n
        v9 = sub_404d00(v5);\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4225271:sub_4078f7": null, "4225280:sub_407900": "int sub_407900(unsigned int v2[2])\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_404d00(v2[0]);\n
    sub_404d00(v2[1]);\n
    return sub_404d00(v2);\n
}\n
", "4225330:sub_407932": null, "4225344:sub_407940": "int sub_407940()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402030(1, \"Invalid Signature.\\n
\", sub_4013f0(\"Invalid Signature.\\n
\"));\n
}\n
", "4225395:sub_407973": null, "4225408:sub_407980": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    char *field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_407980(void* *v6, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1[2];  // [bp-0x10], Other Possible Types: void*\n
    unsigned int v2[5];  // [bp-0xc], Other Possible Types: struct_1 *\n
    char **v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    unsigned int v7[5];  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    v1 = 0;\n
    v3 = sub_407020(a0->field_c);\n
    v7 = sub_405860(*(v6), *(v3));\n
    v2 = &v7[0];\n
    if (!v7)\n
        return v7;\n
    v0 = sub_4013f0(v2->field_c);\n
    if (!sub_405a10(v3, v2->field_c))\n
    {\n
        sub_401250(v2->field_c, 0, v0);\n
        sub_404d00(v2->field_c);\n
        v2->field_c = 0;\n
        sub_407900(v3);\n
        v7 = sub_407940();\n
        return v7;\n
    }\n
    sub_401250(v2->field_c, 0, v0);\n
    sub_404d00(v2->field_c);\n
    v2->field_c = 0;\n
    sub_407900(v3);\n
    v2[0] = sub_4058d0(v2);\n
    v1[0] = sub_408660(v2[4]);\n
    v7 = sub_407720(v2, v1);\n
    return v7;\n
}\n
", "4225741:sub_407acd": null, "4225744:sub_407ad0": "int sub_407ad0()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (v1)\n
    {\n
        v0 = sub_4013f0(v1);\n
    }\n
    else\n
    {\n
        v0 = sub_4013f0(\"Wrong password! Try again.\\n
\");\n
        v1 = sub_4047d0(v0 + 1);\n
        sub_401250(v1, 0, v0 + 1);\n
        sub_4015b0(v1, \"Wrong password! Try again.\\n
\");\n
    }\n
    sub_402030(1, v1, v0);\n
    return sub_402030(1, \"\\n
\", sub_4013f0(\"\\n
\"));\n
}\n
", "4225943:sub_407b97": null, "4225952:sub_407ba0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_2;\n
\n
int sub_407ba0(unsigned int v8, void* *a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_1 *v1;  // [bp-0x1c], Other Possible Types: struct_2 *\n
    char *v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10]\n
    unsigned int v5[3];  // [bp-0xc], Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
    unsigned int v9;  // eax\n
\n
    v6 = &v7;\n
    v5[0] = 0;\n
    v2 = a1->field_c;\n
    v9 = sub_401840(v2, 58);\n
    v4 = v9;\n
    if (!v9)\n
        return v9;\n
    v9 = sub_401840(NULL, 58);\n
    v3 = v9;\n
    if (!v9)\n
        return v9;\n
    v5 = sub_405860(*(a0), v4);\n
    if (!v5)\n
        v5 = sub_405650(a0, v4, v3);\n
    if (!sub_4014a0(a1->field_4, \"FLAG\"))\n
    {\n
        v1 = 0;\n
        v1 = sub_405860(*(a0), \"admin\");\n
        if (sub_4014a0(v1->field_8, v3))\n
        {\n
            v9 = sub_407ad0();\n
            return v9;\n
        }\n
    }\n
    else if (sub_4014a0(*((v5 + 8)), v3))\n
    {\n
        v9 = sub_407ad0();\n
        return v9;\n
    }\n
    v0 = a1->field_4;\n
    sub_408900(v8, v5 + 16, *((v5 + 4)));\n
    v9 = sub_407400(v5, a1->field_4);\n
    return v9;\n
}\n
", "4226343:sub_407d27": null, "4226352:sub_407d30": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_407d30(unsigned int v7, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = sub_406400(900);\n
    v1 = sub_4013f0(\"admin\");\n
    v2 = sub_4047d0(v1 + 1);\n
    if (!v2)\n
        cgc__terminate();\n
    sub_401250(v2, 0, v1 + 1);\n
    sub_4015b0(v2, \"admin\");\n
    v4 = sub_405650(a0, v2, v3);\n
    if (!v4)\n
        cgc__terminate();\n
    v0 = \"FLAG\";\n
    sub_408900(v7, v4 + 2, v4->field_4);\n
    return sub_404d00(v3);\n
}\n
", "4226601:sub_407e29": null, "4226608:sub_407e30": "int sub_407e30(unsigned int v12, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x14]\n
    char *v8[4];  // [bp-0x10]\n
    unsigned int v9[4];  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x4]\n
    char v11;  // [bp+0x0]\n
    unsigned int v13[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // ecx\n
    char *v15;  // eax\n
    unsigned int v16;  // eax\n
\n
    v10 = &v11;\n
    v7 = 0;\n
    v6 = 0x4347c000;\n
    v13 = sub_405860(a0, \"admin\");\n
    v9[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v7 = sub_4047d0(41);\n
    if (!v7)\n
        cgc__terminate();\n
    sub_401250(v7, 0, 41);\n
    for (v3 = 0; v3 < 40; v3 += 1)\n
    {\n
        v14 = v3;\n
        v3 = v14 + 1;\n
        v7[v14] = sub_401960(((*(v6) >> 31 CONCAT *(v6)) /m 16 >> 31 CONCAT (*(v6) >> 31 CONCAT *(v6)) /m 16) /m 16 >> 32);\n
        v15 = v6;\n
        v6 = v15 + 1;\n
        v16 = *(v15);\n
        v7[v3] = sub_401960((v16 >> 31 CONCAT v16) /m 16 >> 32);\n
    }\n
    v13 = sub_4047d0(16);\n
    v8[0] = v13;\n
    if (!v13)\n
        return v13;\n
    v5 = sub_4013f0(\"FLAG\");\n
    v13 = sub_4047d0(v5 + 1);\n
    v8[1] = v13;\n
    if (!v13)\n
        return v13;\n
    sub_401250(v8[1], 0, v5);\n
    sub_4015b0(v8[1], \"FLAG\");\n
    v0 = sub_4013f0(v7);\n
    v1 = v0 + sub_4013f0(\":\");\n
    v2 = v1 + sub_4013f0(\"high\");\n
    v4 = v2 + sub_4013f0(\"\\n
\");\n
    v13 = sub_4047d0(v4 + 1);\n
    v8[3] = v13;\n
    if (v13)\n
    {\n
        sub_401250(v8[3], 0, v4 + 1);\n
        sub_4016b0(v8[3], v7);\n
        sub_4016b0(v8[3], \":\");\n
        sub_4016b0(v8[3], \"high\");\n
        sub_406ac0(v12, v8, v9);\n
        v13 = sub_404d00(v7);\n
        return v13;\n
    }\n
    return v13;\n
}\n
", "4227270:sub_4080c6": null, "4227280:sub_4080d0": "int sub_4080d0(unsigned int v8, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    char *v2[3];  // [bp-0x14], Other Possible Types: unsigned int, unsigned int [3]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc]\n
    void* v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v5 = 0;\n
    v3 = 0;\n
    v2[0] = 0;\n
    v1 = 0;\n
    sub_407d30(&v3, &v1);\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    do\n
                    {\n
                        if (v2)\n
                        {\n
                            sub_404d00(v2);\n
                            v2[0] = 0;\n
                        }\n
                        v4 = sub_406340();\n
                        if (v4)\n
                            v2 = sub_406130(v4);\n
                    } while (!v2);\n
                    if (sub_4014a0(*(v2), \"/auth\"))\n
                        break;\n
                    sub_407ba0(&v3, &v1, v2);\n
                }\n
                if (sub_4014a0(*(v2), \"/token\"))\n
                    break;\n
                sub_407980(&v1, v2);\n
            }\n
            if (sub_4053f0(v1, *((v2 + 8))))\n
            {\n
                v0 = sub_4057e0(v1, *((v2 + 8)));\n
                if (v0)\n
                    break;\n
            }\n
            else\n
            {\n
                sub_406e50(v2);\n
            }\n
        }\n
        if (!sub_4014a0(*(v2), \"/subscribe\"))\n
        {\n
            sub_406f80(&v0, v2);\n
        }\n
        else if (!sub_4014a0(*(v2), \"/out\"))\n
        {\n
            sub_406dd0(v3, *((v2 + 4)), v0);\n
        }\n
        else if (!sub_4014a0(*(v2), \"/in\"))\n
        {\n
            sub_406ac0(v3, v2, v0);\n
            sub_407e30(v3, v1);\n
        }\n
        sub_404d00(v4);\n
    }\n
}\n
", "4227840:sub_408300": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int sub_408300(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v1 = sub_4047d0(16);\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    else if (!sub_408420(&v1))\n
    {\n
        v0 = sub_4013f0(v5);\n
        v6 = sub_4047d0(v0 + 1);\n
        v1->field_0 = v6;\n
        if (!v6)\n
        {\n
            sub_404d00(v1->field_4);\n
            sub_404d00(v1);\n
            v2 = 0;\n
            return v2;\n
        }\n
        sub_401250(v1->field_0, 0, v0 + 1);\n
        sub_401610(v1->field_0, v5, v0);\n
        v1->field_8 = a0;\n
        v1->field_c = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_404d00(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4228113:sub_408411": null, "4228128:sub_408420": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_1;\n
\n
int sub_408420(struct struct_0 **v4, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = &v3;\n
    v0 = &*(v4)->padding_0;\n
    if (sub_4014a0(\"guaranteed\", a0) && sub_4014a0(\"latest\", a0) && sub_4014a0(\"high\", a0) && sub_4014a0(\"medium\", a0) && sub_4014a0(\"low\", a0))\n
    {\n
        if (sub_401c80(a0) <= 0)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v6 = sub_4047d0(sub_4013f0(a0) + 1);\n
        v0->field_4 = v6;\n
        if (!v6)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        sub_401250(v0->field_4, 0, sub_4013f0(a0) + 1);\n
        sub_4015b0(v0->field_4, a0);\n
LABEL_4085d9:\n
        *(v4) = &v0->padding_0;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v5 = sub_4047d0(sub_4013f0(a0) + 1);\n
    v0->field_4 = v5;\n
    if (!v5)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    sub_401250(v0->field_4, 0, sub_4013f0(a0) + 1);\n
    sub_4015b0(v0->field_4, a0);\n
    goto LABEL_4085d9;\n
}\n
", "4228592:sub_4085f0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    char padding_4[16];\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
int sub_4085f0(struct_0 *v4, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v4->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!sub_4014a0(*(v0), a0))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = *((v0 + 20));\n
    }\n
}\n
", "4228694:sub_408656": null, "4228704:sub_408660": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
int sub_408660(struct_0 *v4, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = &v4->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!sub_4014a0(*(v0), a0))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = *((v0 + 12));\n
    }\n
}\n
", "4228806:sub_4086c6": null, "4228816:sub_4086d0": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int sub_4086d0(struct_0 *v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = *((v0 + 16));\n
    }\n
}\n
", "4228910:sub_40872e": null, "4228912:sub_408730": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int sub_408730(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = v4; v0->field_10; v0 = v0->field_10);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4228995:sub_408783": null, "4229008:sub_408790": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
int sub_408790(struct_2 *v5)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    struct_2 *v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = v5->field_8;\n
    for (v1 = v5->field_10; v1; v1 = v1->field_c)\n
    {\n
        if (*((v1 + 8)) < v2)\n
            v2 = *((v1 + 8));\n
    }\n
    for (; v2 > v5->field_4; v6->field_4 = v6->field_4 + 1)\n
    {\n
        v0 = v5->field_c;\n
        v5->field_c = v0->field_10;\n
        v6 = v5;\n
    }\n
    return v2;\n
}\n
", "4229151:sub_40881f": null, "4229152:sub_408820": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
int sub_408820(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2[6];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v1 = sub_4047d0(24);\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v0 = sub_4013f0(v5);\n
    v6 = sub_4047d0(v0);\n
    v1->field_0 = v6;\n
    if (!v6)\n
    {\n
        sub_404d00(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    sub_401250(v1->field_0, 0, v0);\n
    sub_4015b0(v1->field_0, v5);\n
    v1->field_4 = 0;\n
    v1->field_8 = 0;\n
    v1->field_10 = 0;\n
    v1->field_c = 0;\n
    v1->field_14 = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4229373:sub_4088fd": null, "4229376:sub_408900": "int sub_408900(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
    unsigned int v8;  // eax\n
\n
    v5 = &v6;\n
    v1 = *(v7);\n
    v0 = sub_4085f0(v1, a2);\n
    if (!v0)\n
    {\n
        v8 = sub_408820(a2);\n
        v0 = v8;\n
        if (!v8)\n
            return v8;\n
        *((v0 + 20)) = *(v7);\n
        *(v7) = v0;\n
    }\n
    v2 = *(a0);\n
    v4 = sub_408660(v2, *(v0));\n
    if (v4)\n
    {\n
        v8 = v4;\n
        *((v8 + 8)) = *((v0 + 8));\n
        return v4;\n
    }\n
    v4 = sub_408300(*(v0), *((v0 + 8)), \"latest\");\n
    *((v4 + 12)) = v2;\n
    v2 = v4;\n
    v3 = sub_408300(a1, *((v0 + 8)), \"latest\");\n
    *((v3 + 12)) = *((v0 + 16));\n
    *((v0 + 16)) = v3;\n
    v8 = a0;\n
    *(v8) = v2;\n
    return a0;\n
}\n
", "4229664:sub_408a20": "int sub_408a20()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v4 = &(&v1)[-1 * v3] & ~(-(&v1 < v3));\n
    for (v5 = &v0 & -0x1000; v4 < v5; v5 -= 0x1000);\n
    *(v4) = *(&v1);\n
    return *(&v1);\n
}\n
", "4229712:sub_408a50": "int sub_408a50()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_408b70();\n
    sub_408b80();\n
    sub_408ba0();\n
    v0 = 1;\n
    if (!sub_409170())\n
    {\n
        v0 = 7;\n
        sub_409850();\n
    }\n
    sub_409a20();\n
    v1 = sub_409a50;\n
    sub_408e40();\n
    if (sub_408b40())\n
    {\n
        v1 = 7;\n
        sub_409850();\n
    }\n
    sub_4095e0();\n
    if (sub_4096e0())\n
    {\n
        v1 = sub_409580;\n
        __setusermatherr();\n
    }\n
    sub_409660();\n
    sub_409670();\n
    sub_409630();\n
    v1 = sub_4095d0();\n
    _configthreadlocale();\n
    if (sub_409620())\n
        sub_408b60();\n
    sub_409810();\n
    if (sub_409820())\n
    {\n
        v1 = 7;\n
        sub_409850();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4229904:sub_408b10": "int sub_408b10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409680();\n
    return 0;\n
}\n
", "4229920:sub_408b20": "int sub_408b20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_409830();\n
    v0 = sub_4095c0();\n
    return _set_new_mode();\n
}\n
", "4229952:sub_408b40": "int sub_408b40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_409590());\n
}\n
", "4229984:sub_408b60": "int sub_408b60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4230000:sub_408b70": "int sub_408b70()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4230016:sub_408b80": "int sub_408b80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_4095b0());\n
}\n
", "4230048:sub_408ba0": "int sub_408ba0()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_4095a0(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4230080:sub_408bc0": "int sub_408bc0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    sub_4080d0(v1, v2); /* do not return */\n
}\n
", "4230131:sub_408bf3": "int sub_408bf3()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebp\n
\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4230144:sub_408c00": "extern char g_409a80;\n
extern char g_40b60c;\n
extern char g_40b614;\n
extern char g_40b618;\n
extern struct_0 *g_40b624;\n
extern char g_40bc88;\n
extern unsigned int g_40f180;\n
extern unsigned int g_410220;\n
\n
int sub_408c00()\n
{\n
    unsigned int v13;  // [bp-0x8]\n
    struct struct_0 **v14;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v15;  // [bp+0x0]\n
    struct struct_0 **v19;  // [bp+0xfffc4]\n
    struct struct_0 **v20;  // [bp+0xfffd8]\n
    char v21;  // [bp+0xfffeb]\n
    unsigned int v22;  // [bp+0x100000]\n
    struct struct_0 **v27;  // eax\n
\n
    v20 = v27;\n
    if (!sub_409780())\n
    {\n
        v14 = v20;\n
        exit();\n
    }\n
    if (!v21)\n
        _cexit();\n
    v14 = 0;\n
    v13 = 1;\n
    sub_409130(*(&v15));\n
    v19 = v20;\n
    v22 = -2;\n
}\n
", "4230559:sub_408d9f": "int sub_408d9f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4230568:sub_408da8": "int sub_408da8()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4230595:sub_408dc3": "extern char g_408dd1;\n
\n
int sub_408dc3()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_408dd1;\n
    if (!sub_409780())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4230658:sub_408e02": "int sub_408e02()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4230688:sub_408e20": "int sub_408e20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_409490();\n
    return sub_408c00();\n
}\n
", "4230704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_408e20();\n
}\n
", "4230720:sub_408e40": "int sub_408e40(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_408e70(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4230768:sub_408e70": "extern unsigned int g_41022c;\n
\n
int sub_408e70(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_41022c;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_41022c))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4230824:sub_408ea8": "int sub_408ea8()\n
{\n
}\n
", "4230880:sub_408ee0": "extern unsigned int g_410238;\n
\n
int sub_408ee0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_410238;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_410238);\n
    return v6;\n
}\n
", "4230914:sub_408f02": "int sub_408f02()\n
{\n
}\n
", "4230944:sub_408f20": "int sub_408f20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4230960:sub_408f30": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_40bca8;\n
extern unsigned int g_40f180;\n
\n
int sub_408f30(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_40bca8;\n
    v13 = sub_409a80;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_40f180;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_409390(v6, g_40f180 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_409400(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4231165:sub_408ffd": "int sub_408ffd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4231174:sub_409006": "int sub_409006()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4231213:sub_40902d": "int sub_40902d()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4231232:sub_409040": "int sub_409040()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4231264:sub_409060": "extern unsigned int g_410224;\n
\n
int sub_409060()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_40a2a0();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_408f20() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_410224 = v6;\n
        if (g_410224)\n
        {\n
            tmp_0 = 0;\n
            g_410224 = v6;\n
            v5 = g_410224;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_410224 = v6;\n
            v5 = 0;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4231344:sub_4090b0": "extern void* g_410224;\n
\n
int sub_4090b0(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_40a2a0();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_410224;\n
        g_410224 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x4090cf;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4231392:sub_4090e0": "extern char g_410228;\n
\n
int sub_4090e0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_410228 = 1;\n
    sub_409e10();\n
    v4 = sub_40a640();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_40a640();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_40a650();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4231472:sub_409130": "extern char g_410228;\n
\n
int sub_409130(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_410228 && a0)\n
        return 1;\n
    sub_40a650(v2);\n
    v3 = sub_40a650();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4231536:sub_409170": "extern char g_410229;\n
extern unsigned int g_41022c;\n
extern unsigned int g_410230;\n
extern unsigned int g_410234;\n
extern unsigned int g_410238;\n
extern unsigned int g_41023c;\n
extern unsigned int g_410240;\n
\n
int sub_409170(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_410229)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_409850();\n
    }\n
    if (sub_40a2a0() && !v10)\n
    {\n
        v8 = &g_41022c;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_410238;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_409236;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_41022c = v4;\n
    g_410230 = v5;\n
    g_410234 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_410238 = v1;\n
    g_41023c = v2;\n
    v11 = v3;\n
    g_410240 = v11;\n
LABEL_409236:\n
    g_410229 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4231760:sub_409250": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_409250(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_40a2a0() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_409ac0(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4231840:sub_4092a0": "int sub_4092a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409170(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4231872:sub_4092c0": "int sub_4092c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_40a2a0())\n
    {\n
        v3 = sub_409e10();\n
    }\n
    else\n
    {\n
        v3 = sub_408b40();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_408b60();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4231920:sub_4092f0": "extern char g_41022c;\n
\n
int sub_4092f0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_40a2a0())\n
    {\n
        v0 = &g_41022c;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_40a690();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4231968:sub_409320": "int sub_409320()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40a660(0);\n
    return sub_40a660();\n
}\n
", "4232000:sub_409340": "int sub_409340()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_40a670();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_40a670();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_40a680();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4232048:sub_409370": "char sub_409370()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_40a680();\n
    sub_40a680();\n
    return 1;\n
}\n
", "4232080:sub_409390": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_409390(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4232192:sub_409400": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_409400(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= *((v5 + 12)) && a0 < *((v5 + 12)) + *((v5 + 8)))\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4232336:sub_409490": "extern unsigned int g_40f180;\n
extern unsigned int g_40f1c0;\n
\n
int sub_409490()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_40f180 != 3141592654)\n
    {\n
        v4 = g_40f180 & -0x10000;\n
        if (v4)\n
        {\n
            g_40f1c0 = ~(g_40f180);\n
            return g_40f180 & -0x10000;\n
        }\n
    }\n
    v4 = sub_409510(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_40f180 = v0;\n
    g_40f1c0 = ~(v0);\n
    return v4;\n
}\n
", "4232464:sub_409510": "int sub_409510()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4232576:sub_409580": "int sub_409580()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232592:sub_409590": "int sub_409590()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232608:sub_4095a0": "int sub_4095a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232624:sub_4095b0": "int sub_4095b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4232640:sub_4095c0": "int sub_4095c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232656:sub_4095d0": "int sub_4095d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4232672:sub_4095e0": "extern void g_410248;\n
\n
int sub_4095e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_410248);\n
}\n
", "4232704:sub_409600": "extern unsigned int g_410248;\n
\n
int sub_409600()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_410248);\n
}\n
", "4232736:sub_409620": "char sub_409620()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4232752:sub_409630": "int sub_409630()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_409850();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4232800:sub_409660": "int sub_409660()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232816:sub_409670": "int sub_409670()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4232832:sub_409680": "int sub_409680()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_4096c0();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_4096d0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4232896:sub_4096c0": "extern char g_410250;\n
\n
int sub_4096c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410250;\n
}\n
", "4232912:sub_4096d0": "extern char g_410258;\n
\n
int sub_4096d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410258;\n
}\n
", "4232928:sub_4096e0": "extern unsigned int g_40f164;\n
\n
int sub_4096e0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_40f164)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4232976:sub_409710": "extern char g_410264;\n
\n
int sub_409710()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410264;\n
}\n
", "4232992:sub_409720": "extern char g_410268;\n
\n
int sub_409720()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_410268;\n
}\n
", "4233008:sub_409730": "extern void* g_41026c;\n
\n
int sub_409730()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_41026c = 0;\n
    return v3;\n
}\n
", "4233024:sub_409740": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_409740()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4233088:sub_409780": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_409780()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4233232:sub_409810": "int sub_409810()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4233248:sub_409820": "int sub_409820()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409990();\n
}\n
", "4233264:sub_409830": "int sub_409830()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_4099a0);\n
}\n
", "4233296:sub_409850": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_409850()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x64], Other Possible Types: char\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_409730();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_409730();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4233321:sub_409869": "int sub_409869()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4233321\n
}\n
", "4233616:sub_409990": "int sub_409990()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4233632:sub_4099a0": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_4099a0(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4233760:sub_409a20": "extern struct_0 *g_40bc7c;\n
\n
int sub_409a20()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bc7c;\n
    v3 = &g_40bc7c;\n
    return &g_40bc7c;\n
}\n
", "4233808:sub_409a50": "extern struct_0 *g_40bc84;\n
\n
int sub_409a50()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_40bc84;\n
    v3 = &g_40bc84;\n
    return &g_40bc84;\n
}\n
", "4233856:sub_409a80": "extern unsigned int g_40f180;\n
\n
int sub_409a80(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_40a6a0(*(v2));\n
    return _except_handler4_common(&g_40f180, sub_40a2d0, v2, a0, a1);\n
}\n
", "4233920:sub_409ac0": "int sub_409ac0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4233936:sub_409ad0": "int sub_409ad0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x409ad9;\n
    return tmp_4;\n
}\n
", "4233952:sub_409ae0": "int sub_409ae0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4233984:sub_409b00": "int sub_409b00(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_409ae0(v2);\n
}\n
", "4234016:sub_409b20": "extern unsigned int g_410270;\n
\n
int sub_409b20(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_409ad0(&g_410270, v3);\n
    return v0;\n
}\n
", "4234048:sub_409b40": "extern char g_409ac0;\n
extern unsigned int g_411000;\n
\n
int sub_409b40()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_409b00(&g_411000) != sub_409ac0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4234096:sub_409b70": "extern char g_40b540;\n
\n
int sub_409b70(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_40b540;\n
    v1 = &g_40b540;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4234160:sub_409bb0": "extern unsigned int g_411008;\n
\n
int sub_409bb0(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_409b00(&g_411008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4234208:sub_409be0": "extern unsigned int g_410270;\n
\n
int sub_409be0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_409b00(&g_410270);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_409ac0();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4234272:sub_409c20": "int sub_409c20()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4234288:sub_409c30": "int sub_409c30(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409b70(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4234307\n
}\n
", "4234320:sub_409c50": "int sub_409c50(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409b70(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4234345:sub_409c69": "int sub_409c69()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234345\n
}\n
", "4234352:sub_409c70": "int sub_409c70(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409b70(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409bb0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234400:sub_409ca0": "int sub_409ca0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409b70(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409be0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234448:sub_409cd0": "extern char g_40b540;\n
\n
int sub_409cd0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_40b540;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4234512:sub_409d10": "int sub_409d10(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409cd0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_409b70(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4234555\n
}\n
", "4234560:sub_409d40": "int sub_409d40(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409cd0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_409b70(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4234609:sub_409d71": "int sub_409d71()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4234609\n
}\n
", "4234624:sub_409d80": "int sub_409d80()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4234640:sub_409d90": "int sub_409d90(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409cd0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_409b70(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409bb0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234704:sub_409dd0": "int sub_409dd0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_409cd0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_409b70(v2);\n
    if (v3)\n
    {\n
        v3 = sub_409be0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4234768:sub_409e10": "extern unsigned int g_40f180;\n
extern unsigned int g_40f1c8;\n
extern unsigned int g_40f1cc;\n
extern unsigned int g_40f1d0;\n
extern unsigned int g_410274;\n
extern unsigned int g_410278;\n
extern unsigned int g_41027c;\n
\n
int sub_409e10()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_40f180 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_410278 = 0;\n
    g_40f1d0 = g_40f1d0 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_40a2d0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_409f5b;\n
        g_41027c = g_41027c | 1;\n
    }\n
LABEL_409f5b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_41027c = g_41027c | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_410278 = 1;\n
    g_40f1d0 = g_40f1d0 | 2;\n
    g_40f1c8 = g_40f1c8 & -2;\n
    g_40f1cc = g_40f1cc;\n
    if ((v18 & 0x100000))\n
    {\n
        g_410278 = 2;\n
        g_40f1d0 = g_40f1d0 | 4;\n
        g_40f1c8 = g_40f1c8 & -17;\n
        g_40f1cc = g_40f1cc;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_410278 = 3;\n
                g_40f1d0 = g_40f1d0 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_410278 = 5;\n
                    g_40f1d0 = g_40f1d0 | 32;\n
                    g_40f1c8 = g_40f1c8 & -3;\n
                    g_40f1cc = g_40f1cc;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_410278 = 6;\n
                            g_40f1d0 = g_40f1d0 | 64;\n
                            g_40f1c8 = g_40f1c8 & -37;\n
                            g_40f1cc = g_40f1cc;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_40f1c8 = g_40f1c8 & -16777217;\n
                    g_40f1cc = g_40f1cc;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_410274 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_40f1c8 = ~(v2 | 16777256) & g_40f1c8;\n
                        g_40f1cc = ~(v3) & g_40f1cc;\n
                        if (g_410274 > 1)\n
                        {\n
                            g_40f1c8 = g_40f1c8 & -65;\n
                            g_40f1cc = g_40f1cc;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4235936:sub_40a2a0": "extern unsigned int g_40f1d4;\n
\n
int sub_40a2a0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_40f1d4)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4235984:sub_40a2d0": "extern unsigned int g_40f180;\n
extern unsigned int g_40f1c0;\n
extern unsigned int g_410288;\n
extern unsigned int g_41028c;\n
extern unsigned int g_410294;\n
extern unsigned int g_410298;\n
extern unsigned int g_41029c;\n
extern unsigned int g_4102d8;\n
extern unsigned short g_410364;\n
extern unsigned short g_410368;\n
extern unsigned short g_41036c;\n
extern unsigned short g_410370;\n
extern unsigned int g_410374;\n
extern unsigned int g_410378;\n
extern unsigned int g_41037c;\n
extern unsigned int g_410380;\n
extern unsigned int g_410384;\n
extern unsigned int g_410388;\n
extern unsigned int g_41038c;\n
extern unsigned int g_410390;\n
extern unsigned short g_410394;\n
extern unsigned int g_410398;\n
extern unsigned int g_41039c;\n
extern unsigned short g_4103a0;\n
\n
int sub_40a2d0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_40f180)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_410388 = v7;\n
        g_410384 = v6;\n
        g_410380 = v8;\n
        g_41037c = v9;\n
        g_410378 = v10;\n
        g_410374 = v11;\n
        g_4103a0 = v12;\n
        g_410394 = v13;\n
        g_410370 = v14;\n
        g_41036c = v15;\n
        g_410368 = v16;\n
        g_410364 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_410398 = v0;\n
        g_41038c = v3;\n
        g_410390 = *(&v4);\n
        g_41039c = &v5;\n
        g_4102d8 = 65537;\n
        g_410294 = g_410390;\n
        g_410288 = 3221226505;\n
        g_41028c = 1;\n
        g_410298 = 1;\n
        g_41029c = 2;\n
        v1 = g_40f180;\n
        v2 = g_40f1c0;\n
        sub_40a610();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4236000:sub_40a2e0": "extern unsigned int g_410288;\n
extern unsigned int g_41028c;\n
extern unsigned int g_410294;\n
extern unsigned int g_410298;\n
extern unsigned int g_41029c;\n
extern unsigned short g_410364;\n
extern unsigned short g_410368;\n
extern unsigned short g_41036c;\n
extern unsigned short g_410370;\n
extern unsigned int g_410374;\n
extern unsigned int g_410378;\n
extern unsigned int g_41037c;\n
extern unsigned int g_410380;\n
extern unsigned int g_410384;\n
extern unsigned int g_410388;\n
extern unsigned int g_41038c;\n
extern unsigned int g_410390;\n
extern unsigned short g_410394;\n
extern unsigned int g_410398;\n
extern unsigned int g_41039c;\n
extern unsigned short g_4103a0;\n
\n
int sub_40a2e0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_410388 = v4;\n
        g_410384 = v5;\n
        g_410380 = v6;\n
        g_41037c = v7;\n
        g_410378 = v8;\n
        g_410374 = v9;\n
        g_4103a0 = v10;\n
        g_410394 = v11;\n
        g_410370 = v12;\n
        g_41036c = v13;\n
        g_410368 = v14;\n
        g_410364 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_410398 = v0;\n
        g_41038c = v1;\n
        g_410390 = *(&v2);\n
        g_41039c = &v3;\n
        g_410294 = g_410390;\n
        g_410288 = 3221226505;\n
        g_41028c = 1;\n
        g_410298 = 1;\n
        g_41029c = v3;\n
        sub_40a610();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4236025:sub_40a2f9": "int sub_40a2f9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4236025\n
}\n
", "4236224:sub_40a3c0": "extern unsigned int g_410288;\n
extern unsigned int g_41028c;\n
extern unsigned int g_410294;\n
extern unsigned int g_410298;\n
extern unsigned int g_41029c;\n
extern char g_4102a0;\n
extern unsigned short g_410364;\n
extern unsigned short g_410368;\n
extern unsigned short g_41036c;\n
extern unsigned short g_410370;\n
extern unsigned int g_410374;\n
extern unsigned int g_410378;\n
extern unsigned int g_41037c;\n
extern unsigned int g_410380;\n
extern unsigned int g_410384;\n
extern unsigned int g_410388;\n
extern unsigned int g_41038c;\n
extern unsigned int g_410390;\n
extern unsigned short g_410394;\n
extern unsigned int g_410398;\n
extern unsigned int g_41039c;\n
extern unsigned short g_4103a0;\n
\n
int sub_40a3c0()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1065129];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_410388 = v7;\n
        g_410384 = v8;\n
        g_410380 = v9;\n
        g_41037c = v10;\n
        g_410378 = v11;\n
        g_410374 = v12;\n
        g_4103a0 = v13;\n
        g_410394 = v14;\n
        g_410370 = v15;\n
        g_41036c = v16;\n
        g_410368 = v17;\n
        g_410364 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_410398 = v0;\n
        g_41038c = v2;\n
        g_410390 = *(&v3);\n
        g_41039c = &v4;\n
        g_410294 = g_410390;\n
        g_410288 = 3221226505;\n
        g_41028c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_410298 = v5 + 1;\n
        g_41029c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_4102a0)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_40a610();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4236249:sub_40a3d9": "int sub_40a3d9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4236249\n
}\n
", "4236528:sub_40a4f0": "int sub_40a4f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_40a2e0(8);\n
}\n
", "4236571:sub_40a51b": "int sub_40a51b()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4236571\n
}\n
", "4236816:sub_40a610": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40a610(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4236864:sub_40a640": "char sub_40a640()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236880:sub_40a650": "char sub_40a650()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236896:sub_40a660": "char sub_40a660()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236912:sub_40a670": "char sub_40a670()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236928:sub_40a680": "char sub_40a680()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4236944:sub_40a690": "int sub_40a690()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4236960:sub_40a6a0": "extern unsigned int g_410278;\n
\n
int sub_40a6a0(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_410278 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4237268:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4237274:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4237280:cgc__terminate": "int cgc__terminate()\n
{\n
    return ::kernel32.dll::cgc__terminate();\n
}\n
", "4237286:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4237292:cgc_random": "int cgc_random()\n
{\n
    return ::kernel32.dll::cgc_random();\n
}\n
", "4237298:sub_40a7f2": "int sub_40a7f2(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4237304:sub_40a7f8": "int sub_40a7f8()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4237310:sub_40a7fe": "int sub_40a7fe()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4237316:sub_40a804": "int sub_40a804(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4237322:sub_40a80a": "int sub_40a80a(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4237328:sub_40a810": "int sub_40a810()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4237334:sub_40a816": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_40a816(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4237340:sub_40a81c": "int sub_40a81c(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4237346:sub_40a822": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_40a822(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4237352:sub_40a828": "int sub_40a828(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4237358:sub_40a82e": "int sub_40a82e(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4237364:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4237370:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4237376:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4237382:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4237388:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4237394:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4237400:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4237406:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4237412:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4237418:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4237424:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4237430:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4237436:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4237442:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4237448:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4237454:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4237460:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4237466:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4237472:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4237478:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4237484:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4237490:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4237496:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4237502:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4237508:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4237514:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4237520:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4237526:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4237532:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4237538:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4237544:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4237550:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4237556:sub_40a8f4": "int sub_40a8f4()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4237562:sub_40a8fa": "int sub_40a8fa(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc__terminate": null, "5242884:cgc_allocate": null, "5242888:cgc_random": null, "5242892:cgc_receive": null, "5242896:cgc_transmit": null, "5242900:GetCurrentProcess": null, "5242904:GetCurrentProcessId": null, "5242908:GetCurrentThreadId": null, "5242912:GetModuleHandleW": null, "5242916:GetStartupInfoW": null, "5242920:GetSystemTimeAsFileTime": null, "5242924:InitializeSListHead": null, "5242928:IsDebuggerPresent": null, "5242932:IsProcessorFeaturePresent": null, "5242936:QueryPerformanceCounter": null, "5242940:SetUnhandledExceptionFilter": null, "5242944:TerminateProcess": null, "5242948:UnhandledExceptionFilter": null, "5242952:__current_exception": null, "5242956:__current_exception_context": null, "5242960:__std_type_info_destroy_list": null, "5242964:_except_handler4_common": null, "5242968:memset": null, "5242972:__p___argc": null, "5242976:__p___argv": null, "5242980:__p__commode": null, "5242984:__setusermatherr": null, "5242988:_c_exit": null, "5242992:_cexit": null, "5242996:_configthreadlocale": null, "5243000:_configure_narrow_argv": null, "5243004:_controlfp_s": null, "5243008:_crt_at_quick_exit": null, "5243012:_crt_atexit": null, "5243016:_execute_onexit_table": null, "5243020:_exit": null, "5243024:_get_initial_narrow_environment": null, "5243028:_initialize_narrow_environment": null, "5243032:_initialize_onexit_table": null, "5243036:_initterm": null, "5243040:_initterm_e": null, "5243044:_register_onexit_function": null, "5243048:_register_thread_local_exe_atexit_callback": null, "5243052:_seh_filter_dll": null, "5243056:_seh_filter_exe": null, "5243060:_set_app_type": null, "5243064:_set_fmode": null, "5243068:_set_new_mode": null, "5243072:exit": null, "5243076:terminate": null, "6295596:UnresolvableCallTarget": null}