{"4198400:sub_401000": "int sub_401000(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (v6 && a0)\n
    {\n
        v2 = a0 * v6;\n
        if ((0 CONCAT v2) /m a0 != v6)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = sub_401440();\n
        if (!v1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = v2;\n
        v3 = sub_401c60(v1, 0);\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    v1 = 1;\n
    if (!sub_4010f0())\n
    {\n
        v0 = v4;\n
        v1 = sub_401140();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4198629:sub_4010e5": null, "4198640:sub_4010f0": "int sub_4010f0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    v1 = 1;\n
    if (!sub_401160())\n
    {\n
        v0 = v4;\n
        v1 = sub_401180();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4198709:sub_401135": null, "4198720:sub_401140": "int sub_401140(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 48 < 10;\n
}\n
", "4198745:sub_401159": null, "4198752:sub_401160": "int sub_401160(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 97 < 26;\n
}\n
", "4198777:sub_401179": null, "4198784:sub_401180": "int sub_401180(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 - 65 < 26;\n
}\n
", "4198809:sub_401199": null, "4198816:sub_4011a0": "int sub_4011a0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return ((v2 & -128) ^ 255) & 1;\n
}\n
", "4198843:sub_4011bb": null, "4198848:sub_4011c0": "int sub_4011c0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 1;\n
    if (v4 != 32)\n
        v1 = v4 == 9;\n
    return v1 & 1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:sub_4011f0": "int sub_4011f0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 1;\n
    if (v4 != 127)\n
        v1 = v4 < 32;\n
    return v1 & 1;\n
}\n
", "4198941:sub_40121d": null, "4198944:sub_401220": "int sub_401220(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    if (v4 != 32)\n
    {\n
        v0 = v4;\n
        v1 = sub_401260();\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199001:sub_401259": null, "4199008:sub_401260": "int sub_401260(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    v1 = 0;\n
    if (v4 >= 32)\n
        v1 = v4 != 127;\n
    return v1 & 1;\n
}\n
", "4199053:sub_40128d": null, "4199056:sub_401290": "typedef struct struct_0 {\n
    char padding_0[4222976];\n
    char field_407000;\n
} struct_0;\n
\n
extern char g_407000;\n
\n
int sub_401290(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_407000));\n
}\n
", "4199075:sub_4012a3": null, "4199088:sub_4012b0": "int sub_4012b0(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    if (v4 > 8)\n
    {\n
        v1 = 1;\n
        if (v4 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v4 == 32;\n
    return v1 & 1;\n
}\n
", "4199143:sub_4012e7": null, "4199152:sub_4012f0": "typedef struct struct_0 {\n
    char padding_0[4223104];\n
    char field_407080;\n
} struct_0;\n
\n
extern char g_407080;\n
\n
int sub_4012f0(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *((v2 + &g_407080));\n
}\n
", "4199171:sub_401303": null, "4199184:sub_401310": "int sub_401310(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return v2 & 127;\n
}\n
", "4199198:sub_40131e": null, "4199200:sub_401320": "int sub_401320(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401180(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 | 32;\n
    return v0;\n
}\n
", "4199257:sub_401359": null, "4199264:sub_401360": "int sub_401360(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (!sub_401160(v3))\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 & 95;\n
    return v0;\n
}\n
", "4199328:sub_4013a0": "int sub_4013a0(unsigned int v4[2])\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
        return v4;\n
    v1[0] = v4 + 3;\n
    v5 = v1;\n
    if (*((v5 + 4)))\n
    {\n
        return v1;\n
    }\n
    else if (v1[0] >= 0x40000)\n
    {\n
        v0[0] = v1;\n
        v5 = sub_401410();\n
        return v5;\n
    }\n
    else\n
    {\n
        v0[0] = v1;\n
        sub_401800();\n
        v0[0] = v1;\n
        v5 = sub_401930();\n
        return v5;\n
    }\n
}\n
", "4199437:sub_40140d": null, "4199440:sub_401410": "int sub_401410(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return cgc_deallocate(v2, *(v2));\n
}\n
", "4199488:sub_401440": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4227352];\n
    struct struct_1 *field_408118;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char g_408118;\n
\n
int sub_401440(unsigned int v8)\n
{\n
    struct struct_1 **v0;  // [bp-0x1c]\n
    unsigned int v1[6];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_2 *v3;  // [bp-0x10]\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    if (!v8)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v8 + 24 < 0x40000)\n
    {\n
        if ((v8 & 7))\n
            v8 = v8 - -7 & -8;\n
        v8 += 24;\n
        v4 = 0;\n
        v0 = &v4;\n
        v3 = sub_401650(v8);\n
        if (!v4)\n
        {\n
            if (!sub_4016f0())\n
            {\n
                v3 = 31;\n
                v4 = *((0x4 * v3 + &g_408118));\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        sub_401890();\n
        v2 = *(v4) - v8;\n
        if (v2 > 48)\n
        {\n
            v1[0] = v4 + v8;\n
            v1[0] = v2;\n
            v1[1] = 1;\n
            v1[2] = 0;\n
            v1[3] = 0;\n
            *(v4) = v8;\n
            v1[5] = v4;\n
            v1[4] = *((v4 + 16));\n
            if (*((v4 + 16)))\n
                *((*((v4 + 16)) + 20)) = v1;\n
            *((v4 + 16)) = v1;\n
            sub_401800();\n
        }\n
        v5 = v4 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = sub_4015b0();\n
        return v5;\n
    }\n
}\n
", "4199853:sub_4015ad": null, "4199856:sub_4015b0": "int sub_4015b0(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[6];  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v6 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v6, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v6;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4200004:sub_401644": null, "4200016:sub_401650": "typedef struct struct_0 {\n
    char padding_0[4227352];\n
    unsigned int field_408118;\n
} struct_0;\n
\n
extern char g_408118;\n
\n
int sub_401650(unsigned int v5, struct struct_1 **a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = v5;\n
    for (v1 = sub_4017a0(); v1 < 32; v1 = &v1->padding_0[1])\n
    {\n
        for (*(a0) = *((0x4 * v1 + &g_408118)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200172:sub_4016ec": null, "4200176:sub_4016f0": "int sub_4016f0()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[6];  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v0 = 0x40000;\n
    if (cgc_allocate(v0, 0, &v2))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1[0] = *(&v2);\n
        v1[0] = v0;\n
        v1[1] = 1;\n
        v1[3] = 0;\n
        v1[2] = 0;\n
        v1[5] = 0;\n
        v1[4] = 0;\n
        sub_401800();\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4200352:sub_4017a0": "extern unsigned int g_408000[4];\n
\n
int sub_4017a0(unsigned int v4)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(v4 <= g_408000[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4200445:sub_4017fd": null, "4200448:sub_401800": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4227336];\n
    struct struct_0 *field_408118;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern unsigned int g_408118[4];\n
\n
int sub_401800(struct_1 *v3)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = sub_4017a0(v3->field_0);\n
    v3->field_4 = 1;\n
    if (!*((0x4 * v0 + &g_408118[0])))\n
    {\n
        v4 = v0;\n
        *((0x4 * v4 + &g_408118[0])) = v3;\n
        return v0;\n
    }\n
    v3->field_8 = *((0x4 * v0 + &g_408118[0]));\n
    *((*((0x4 * v0 + &g_408118[0])) + 12)) = v3;\n
    *((0x4 * v0 + &g_408118[0])) = v3;\n
    v4 = v3;\n
    *((v4 + 12)) = 0;\n
    return v3;\n
}\n
", "4200578:sub_401882": null, "4200592:sub_401890": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4227352];\n
    unsigned int field_408118;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern unsigned int g_408118[4];\n
\n
int sub_401890(struct_3 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    v0 = sub_4017a0(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((0x4 * v0 + &g_408118[0])) == v3)\n
        *((0x4 * v0 + &g_408118[0])) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4200743:sub_401927": null, "4200752:sub_401930": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int sub_401930(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    unsigned int v5[2];  // eax\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int, unsigned int [2]\n
\n
    v0 = &v1;\n
    if (v2->field_14 && v2->field_14->field_4 && v2->field_10 && v2->field_10->field_4)\n
    {\n
        sub_401890(v2->field_14);\n
        sub_401890(v2->field_10);\n
        sub_401890(v2);\n
        v3 = v2->field_14;\n
        v3[0] = v2->field_0 + v3[0];\n
        v4 = v2->field_14;\n
        v4[0] = v2->field_10->field_0 + v4[0];\n
        sub_401800(v2->field_14);\n
        sub_401af0();\n
        v7 = sub_401af0();\n
        return v7;\n
    }\n
    if (v2->field_14 && v2->field_14->field_4 && v2->field_10 && !v2->field_10->field_4)\n
    {\n
        sub_401890(v2->field_14);\n
        sub_401890(v2);\n
        v5 = v2->field_14;\n
        v5[0] = v2->field_0 + v5[0];\n
        sub_401800(v2->field_14);\n
        v7 = sub_401af0();\n
        goto LABEL_401ae0;\n
    }\n
    v7 = v2;\n
    if (v7->field_14)\n
    {\n
        v7 = v2->field_14;\n
        if (!v7[1])\n
        {\n
            v7 = v2;\n
            if (v7->field_10)\n
            {\n
                v7 = v2->field_10;\n
                if (v7[1])\n
                {\n
                    sub_401890(v2->field_10);\n
                    sub_401890(v2);\n
                    v6 = v2;\n
                    v6->field_0 = v2->field_10->field_0 + v6->field_0;\n
                    sub_401800(v2);\n
                    v7 = sub_401af0();\n
                }\n
            }\n
        }\n
    }\n
LABEL_401ae0:\n
    return v7;\n
}\n
", "4201199:sub_401aef": null, "4201200:sub_401af0": "int sub_401af0(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (*((v2 + 20)))\n
        *((*((v2 + 20)) + 16)) = *((v2 + 16));\n
    v3 = v2;\n
    if (*((v3 + 16)))\n
    {\n
        v3 = *((v2 + 16));\n
        *((v3 + 20)) = *((v2 + 20));\n
    }\n
    return v3;\n
}\n
", "4201264:sub_401b30": "int sub_401b30(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0[v4] != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v4 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4201360:sub_401b90": "int sub_401b90(char *v4, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v4) == *(a0))\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = *(a0) - *(v4);\n
            return v1;\n
        }\n
    }\n
}\n
", "4201488:sub_401c10": "int sub_401c10(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = v5;\n
    for (v1 = a0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v5;\n
}\n
", "4201568:sub_401c60": "int sub_401c60(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    char *v6;  // eax\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v5;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            *(v6) = a0;\n
        }\n
        v2 = v5;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4201712:sub_401cf0": "int sub_401cf0(unsigned int v11, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    char v7;  // [bp-0x11]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x4]\n
    char v10;  // [bp+0x0]\n
\n
    v9 = &v10;\n
    v8 = 0;\n
    if (v11 >= a0)\n
    {\n
        v3 = a2;\n
        v2 = a0;\n
        v8 = sub_401cf0((0 CONCAT v11) /m a0, v2, a1 - 1, v3);\n
        v11 = (0 CONCAT v11) /m a0 >> 32;\n
    }\n
    if (!v8 && a1 > 0)\n
    {\n
        while (true)\n
        {\n
            a1 -= 1;\n
            if (!a1)\n
                break;\n
            if (!(a2 & 1))\n
            {\n
                v6 = 32;\n
                cgc_transmit(1, &v6, 1);\n
            }\n
            else\n
            {\n
                v7 = 48;\n
                cgc_transmit(1, &v7, 1);\n
            }\n
        }\n
    }\n
    if ((a2 & 2))\n
    {\n
        if (v11 < 10)\n
            v1 = v11 + 48;\n
        else\n
            v1 = v11 + 55;\n
        v5 = v1;\n
        cgc_transmit(1, &v5, 1);\n
        return v8 + 1;\n
    }\n
    else\n
    {\n
        if (v11 < 10)\n
            v0 = v11 + 48;\n
        else\n
            v0 = v11 + 87;\n
        v4 = v0;\n
        cgc_transmit(1, &v4, 1);\n
        return v8 + 1;\n
    }\n
}\n
", "4202183:sub_401ec7": null, "4202192:sub_401ed0": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_401ed0(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    if (a0 && a1)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a0)\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
            v0 = &v2;\n
            if (cgc_transmit(v6, a1 + v1, a0 - v1))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v1 = v2 + v1;\n
        }\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4202354:sub_401f72": null, "4202368:sub_401f80": "int sub_401f80(char *v16)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x4c]\n
    char v2;  // [bp-0x45]\n
    char v3;  // [bp-0x3d]\n
    char v4;  // [bp-0x35]\n
    char v5;  // [bp-0x2d]\n
    char v6;  // [bp-0x25]\n
    unsigned int *v7;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x20]\n
    void* v9;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v14;  // [bp-0x4]\n
    char v15;  // [bp+0x0]\n
    char v17;  // [bp+0x8]\n
    char *v18;  // eax\n
    char *v19;  // eax\n
    unsigned int *v20;  // eax\n
    unsigned int *v21;  // eax\n
    unsigned int *v22;  // eax\n
\n
    v14 = &v15;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v7 = &v17;\n
    while (*(v16))\n
    {\n
        v18 = v16;\n
        v16 = v18 + 1;\n
        v6 = *(v18);\n
        if (v6 != 37)\n
        {\n
            v2 = v6;\n
            cgc_transmit(1, &v2, 1);\n
LABEL_40222d:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v19 = v16;\n
                    v16 = v19 + 1;\n
                    v6 = *(v19);\n
                    v1 = v6;\n
                    if (v1 != 48)\n
                        break;\n
                    v10 |= 1;\n
                }\n
                if (v1 - 49 >= 9)\n
                    break;\n
                v9 = sub_402600(v16 - 1, &v16);\n
            }\n
            v0 = v6;\n
            if (v0 == 37)\n
            {\n
                v5 = 37;\n
                cgc_transmit(1, &v5, 1);\n
                goto LABEL_4021e8;\n
            }\n
            if (v0 == 88)\n
            {\n
                v10 |= 2;\n
            }\n
            else\n
            {\n
                if (v0 == 100)\n
                {\n
                    v20 = v7;\n
                    v7 = v20 + 1;\n
                    v12 = *(v20);\n
                    if (v12 < 0)\n
                    {\n
                        v4 = 45;\n
                        cgc_transmit(1, &v4, 1);\n
                        v12 = -(v12);\n
                    }\n
                    sub_401cf0(v12, 10, v9, v10);\n
                    goto LABEL_4021e8;\n
                }\n
                if (v0 == 115)\n
                {\n
                    v21 = v7;\n
                    v7 = v21 + 1;\n
                    v13 = *(v21);\n
                    sub_401ed0(1, v13, sub_402460());\n
                    goto LABEL_4021e8;\n
                }\n
                if (v0 != 120)\n
                {\n
                    v3 = v6;\n
                    cgc_transmit(1, &v3, 1);\n
LABEL_4021e8:\n
                    v9 = 0;\n
                    v10 = 0;\n
                    goto LABEL_40222d;\n
                }\n
            }\n
            v22 = v7;\n
            v7 = v22 + 1;\n
            v8 = *(v22);\n
            sub_401cf0(v8, 16, v9, v10);\n
            goto LABEL_4021e8;\n
        }\n
    }\n
    return v11;\n
}\n
", "4203072:sub_402240": "int sub_402240(char *v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!v5)\n
    {\n
        v2 = sub_401440(a0);\n
        return v2;\n
    }\n
    else if (a0)\n
    {\n
        v1 = sub_401440(a0);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = &v5[24];\n
        if (a0 >= *(v0) - 24)\n
            sub_401c10(v1, v5, *(v0) - 24);\n
        else\n
            sub_401c10(v1, v5, a0);\n
        sub_4013a0(v5);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        sub_4013a0(v5);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4203296:sub_402320": "int sub_402320(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    char *v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v4;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v5 = v0;\n
            v0 = v5 + 1;\n
            if (*(v5) == a0)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4203392:sub_402380": "int sub_402380(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    v0 = v5;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v4) != *(a0))\n
            break;\n
        v4 += 1;\n
        a0 += 1;\n
    }\n
    return *(a0) - *(v4);\n
}\n
", "4203520:sub_402400": "int sub_402400(unsigned int v3, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; *(a0); *((v3 + v6)) = *(v5))\n
    {\n
        v5 = a0;\n
        a0 = v5 + 1;\n
        v6 = v0;\n
        v0 = v6 + 1;\n
    }\n
    *((v3 + v0)) = 0;\n
    return v3;\n
}\n
", "4203616:sub_402460": "int sub_402460(char *v3)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = v3; *(v0); v0 += 1);\n
    return v0 - v3;\n
}\n
", "4203680:sub_4024a0": "int sub_4024a0(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    char *v4;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = *((a0 + v0));\n
        if (!*((a0 + v0)))\n
            break;\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v3 + v0)) = 0;\n
    }\n
    return v3;\n
}\n
", "4203824:sub_402530": "int sub_402530(struct struct_0 **v5, char *a0)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!*(v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = &*(v5)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = sub_402320(a0, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    a0 = &*(v5)->field_0;\n
    if (!*(v1))\n
    {\n
        *(v5) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(v5) = v1 + 1;\n
    }\n
    v2 = a0;\n
    return v2;\n
}\n
", "4204032:sub_402600": "int sub_402600(char v14[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v12;  // [bp-0x4]\n
    char v13;  // [bp+0x0]\n
\n
    v12 = &v13;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v14;\n
    if (a1 == 1)\n
    {\n
LABEL_402648:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_402648;\n
        if (a1 < 0)\n
            goto LABEL_402648;\n
        while (true)\n
        {\n
            if (v6[0] != 32 && v6[0] != 9 && v6[0] != 12 && v6[0] != 10 && v6[0] != 11)\n
                break;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 43)\n
            v6 = &v6[1];\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_40273f:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_40273f;\n
                v6 = &v6[1];\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_4027b4;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_4027b4:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_402912;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4028d2;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4028d2:\n
                if (v8 >= a1)\n
                    goto LABEL_402912;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = &v6[1];\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_4028c9;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_4028c9:\n
                v8 += 10;\n
                goto LABEL_4028d2;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_402848;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_402848:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_402912:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v14;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4204894:sub_40295e": null, "4204896:sub_402960": "int sub_402960(char v2[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402600(v2, a0, a1);\n
}\n
", "4204944:sub_402990": "int sub_402960(char v2[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_402600(v2, a0, a1);\n
}\n
", "4205277:sub_402add": null, "4205280:sub_402ae0": "int sub_402ae0(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned long long *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = sub_401440(a0 * 16);\n
    v2 = 0;\n
    for (v1 = 0; v1 < a0; v1 += 1)\n
    {\n
        v3[2 * v1] = *((v6 + v1 * 8));\n
        v3[1 + 2 * v1] = 0;\n
    }\n
    v0 = a0;\n
    v2 = sub_402e90(v3);\n
    sub_4013a0(v3);\n
    return v2;\n
}\n
", "4205434:sub_402b7a": null, "4205440:sub_402b80": null, "4206221:sub_402e8d": null, "4206224:sub_402e90": null, "4207152:sub_403230": "int sub_403230(unsigned int *v3)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    if (*(v3))\n
        sub_403d50(v3);\n
    *(v3) = sub_403b80(*(&v0));\n
    return v3;\n
}\n
", "4207199:sub_40325f": null, "4207200:sub_403260": "int sub_403260(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    if (*(v3))\n
        v3 = sub_403d50(v2);\n
    return v3;\n
}\n
", "4207235:sub_403283": null, "4207248:sub_403290": "extern unsigned int g_408198;\n
\n
int sub_403290(unsigned int *v9)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0xe]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    v5 = *(v9);\n
    v4 = sub_403480();\n
    if (v4 != 255)\n
    {\n
        if (v5)\n
        {\n
            v1 = v4 - 49;\n
            switch (v1)\n
            {\n
            case 0:\n
                sub_403230(v9);\n
                if (!*(v9))\n
                {\n
                    v6 = -0x4;\n
                    return v6;\n
                }\n
            case 1:\n
                sub_403db0();\n
                break;\n
            case 2:\n
                v0 = g_408198;\n
                sub_404120(v5, 1);\n
                break;\n
            case 3:\n
                v0 = g_408198;\n
                sub_404120(v5, 2);\n
                break;\n
            case 4:\n
                g_408198 = 1;\n
                break;\n
            case 5:\n
                g_408198 = 2;\n
                break;\n
            case 6:\n
                g_408198 = 0;\n
                break;\n
            case 7:\n
                v3 = sub_403480();\n
                sub_403860();\n
                break;\n
            case 8:\n
                sub_403260(v9);\n
                v6 = 0;\n
                return v6;\n
            default:\n
                v6 = -8;\n
                return v6;\n
            }\n
        }\n
        else\n
        {\n
            v2 = v4;\n
            if (v2 != 49)\n
            {\n
                if (v2 == 50)\n
                {\n
                    sub_403260(v9);\n
                    v6 = 0;\n
                    return v6;\n
                }\n
                v6 = -8;\n
                return v6;\n
            }\n
            else\n
            {\n
                sub_403230(v9);\n
                if (!*(v9))\n
                {\n
                    v6 = -2;\n
                    return v6;\n
                }\n
            }\n
        }\n
        v6 = 1;\n
        return v6;\n
    }\n
    else if (v5)\n
    {\n
        v6 = -32;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = -0x10;\n
        return v6;\n
    }\n
}\n
", "4207744:sub_403480": "int sub_403480(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
    char v3;  // [bp-0x7]\n
    char v4;  // [bp-0x6]\n
    char v5;  // [bp-0x5]\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 10;\n
    v0 = &v1;\n
    if (!cgc_receive(v8, &v4, 1) && *(&v1))\n
    {\n
        v0 = &v1;\n
        if (!cgc_receive(v8, &v3, 1) && *(&v1))\n
        {\n
            if (v3 != v2)\n
            {\n
                while (true)\n
                {\n
                    if (v3 == v2)\n
                    {\n
                        v5 = 255;\n
                        return v5;\n
                    }\n
                    v0 = &v1;\n
                    if (cgc_receive(v8, &v3, 1))\n
                        break;\n
                    if (!*(&v1))\n
                        break;\n
                }\n
                v5 = 255;\n
                return v5;\n
            }\n
            else\n
            {\n
                v5 = v4;\n
                return v5;\n
            }\n
        }\n
        v5 = 255;\n
        return v5;\n
    }\n
    v5 = 255;\n
    return v5;\n
}\n
", "4208014:sub_40358e": null, "4208016:sub_403590": "int sub_403590(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 1;\n
    do\n
    {\n
        sub_403600();\n
        sub_403690();\n
        v0 = sub_403290(&v1);\n
    } while (v0);\n
    sub_401f80(\"EXITING...\\n
\");\n
    return 0;\n
}\n
", "4208116:sub_4035f4": null, "4208128:sub_403600": "int sub_403600(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    if (v2 == -2)\n
        v3 = sub_401f80(\"ERROR: Couldn't load file, malformed file data\\n
\");\n
    if (v2 == -0x4)\n
        v3 = sub_401f80(\"ERROR: Couldn't load new file, contains malformed file data\\n
\");\n
    if (v2 == -8)\n
        v3 = sub_401f80(\"ERROR: Bad Choice. Select another option\\n
\");\n
    if (v2 == -0x10)\n
        v3 = sub_401f80(\"ERROR: Bad Input. Valid Options: 1, 2\\n
\");\n
    if (v2 == -32)\n
        v3 = sub_401f80(\"ERROR: Bad Input. Valid Options: 1, 2, 3, 4, 5, 6, 7, 8, 9\\n
\");\n
    return v3;\n
}\n
", "4208260:sub_403684": null, "4208272:sub_403690": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[6];\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern unsigned int g_408198;\n
\n
int sub_403690(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
\n
    v2 = &v3;\n
    if (!v4)\n
    {\n
        sub_401f80(\"1. Load File\\n
\");\n
        sub_401f80(\"2. Quit\\n
\\n
\");\n
        v5 = sub_401f80(\"--NO FILE LOADED--\\n
\");\n
        return v5;\n
    }\n
    sub_401f80(\"1. Load New File\\n
\");\n
    sub_401f80(\"2. Wave Visualizer\\n
\");\n
    sub_401f80(\"3. EQ Visualizer\\n
\");\n
    sub_401f80(\"4. Power Visualizer\\n
\");\n
    sub_401f80(\"5. Enable Low Pass Filter\\n
\");\n
    sub_401f80(\"6. Enable High Pass Filter\\n
\");\n
    sub_401f80(\"7. Disable Filters\\n
\");\n
    sub_401f80(\"8. Set visualization speed multiplier (0-9)\\n
\");\n
    sub_401f80(\"9. Quit\\n
\\n
\");\n
    sub_401f80(\"--Current Track: \");\n
    v0 = v4->field_18;\n
    v1 = v4->field_22;\n
    sub_401f80(\"Sampled @%dHz %d bit, \");\n
    if (v4->field_16 != 1)\n
        sub_401f80(\"Stereo - \");\n
    else\n
        sub_401f80(\"Mono - \");\n
    v0 = v4->field_28;\n
    sub_401f80(\"Data Size=%d\\n
\");\n
    sub_401f80(\"::Options: Filter Type=\");\n
    if (!g_408198)\n
    {\n
        sub_401f80(\"None\");\n
    }\n
    else if (g_408198 == 1)\n
    {\n
        sub_401f80(\"Low Pass\");\n
    }\n
    else if (g_408198 == 2)\n
    {\n
        sub_401f80(\"High Pass\");\n
    }\n
    v0 = sub_4038c0();\n
    v5 = sub_401f80(\" | Visualization Slowdown Multiplier=%d::\\n
\\n
\");\n
    return v5;\n
}\n
", "4208736:sub_403860": "extern unsigned int g_40819c;\n
\n
int sub_403860(char v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (v3 <= 57 && v3 >= 48)\n
    {\n
        g_40819c = v3 - 48;\n
        v0 = v3 - 48;\n
        v4 = sub_401f80(\"Multiplier set to %d\\n
\");\n
        return v4;\n
    }\n
    v4 = sub_401f80(\"Bad multiplier argument\\n
\");\n
    return v4;\n
}\n
", "4208832:sub_4038c0": "extern unsigned int g_40819c;\n
\n
int sub_4038c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return g_40819c;\n
}\n
", "4208842:sub_4038ca": null, "4208848:sub_4038d0": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    unsigned short field_14;\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
} struct_0;\n
\n
int sub_4038d0(struct_0 *v9)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // eax\n
\n
    v7 = &v8;\n
    v5 = \"FFIR\";\n
    v4 = \"UWFC\";\n
    v3 = \"cgc \";\n
    v2 = \"data\";\n
    if (sub_401b90(v9, v5, 4))\n
    {\n
        v6 = -2;\n
        return v6;\n
    }\n
    else if (v9->field_4 == v9->field_10 + v9->field_28 + 20)\n
    {\n
        v1 = &v9->padding_8[0];\n
        if (sub_401b90(v1, v4, 4))\n
        {\n
            v6 = -8;\n
            return v6;\n
        }\n
        else if (sub_401b90(&v9->padding_8[4], v3, 4))\n
        {\n
            v6 = -0x10;\n
            return v6;\n
        }\n
        else if (v9->field_14 == 1)\n
        {\n
            if (v9->field_16 != 1 && v9->field_16 != 2)\n
            {\n
                v6 = -64;\n
                return v6;\n
            }\n
            if (v9->field_18 != 8000 && v9->field_18 != 11025 && v9->field_18 != 16000 && v9->field_18 != 22050 && v9->field_18 != 0x7d00 && v9->field_18 != 44100 && v9->field_18 != 48000 && v9->field_18 != 4000)\n
            {\n
                v6 = -128;\n
                return v6;\n
            }\n
            if (v9->field_1c != v9->field_22 * v9->field_16 * v9->field_18 >> 3)\n
            {\n
                v6 = -0x100;\n
                return v6;\n
            }\n
            v0 = v9->field_20;\n
            v10 = v9->field_22 * v9->field_16;\n
            if (v0 != (v10 >> 31 CONCAT v10) /m 8)\n
            {\n
                v6 = -0x100;\n
                return v6;\n
            }\n
            if (v9->field_22 != 8 && v9->field_22 != 16)\n
            {\n
                v6 = -0x400;\n
                return v6;\n
            }\n
            if (sub_401b90(&v9->padding_24, v2, 4))\n
            {\n
                v6 = -0x800;\n
                return v6;\n
            }\n
            v6 = v9->field_28;\n
            return v6;\n
        }\n
        else\n
        {\n
            v6 = -32;\n
            return v6;\n
        }\n
    }\n
    else\n
    {\n
        v6 = -0x4;\n
        return v6;\n
    }\n
}\n
", "4209533:sub_403b7d": null, "4209536:sub_403b80": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    unsigned int field_2c[2];\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_403b80()\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0xc]\n
    unsigned int v6[12];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
\n
    v7 = &v8;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = sub_401440(48);\n
    if (!v5)\n
    {\n
        v6[0] = 0;\n
        return v6;\n
    }\n
    v0 = &v3;\n
    if (!cgc_receive(0, v5, 44) && v3 == 44)\n
    {\n
        v4 = sub_4038d0(v5);\n
        if (v4 < 0)\n
        {\n
            sub_4013a0(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (!v4)\n
        {\n
            v5->field_2c = 0;\n
        }\n
        else\n
        {\n
            v5->field_2c = sub_401440(v4);\n
            if (!v5->field_2c)\n
            {\n
                sub_4013a0(v5);\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        while (true)\n
        {\n
            v0 = &v3;\n
            v1 = 0;\n
            if (!cgc_receive(0, v5->field_2c + v2, v5->field_28 - v2))\n
                v1 = v2 + v3 != v5->field_28;\n
            if (!(v1 & 1))\n
            {\n
                v6 = v5;\n
                return v6;\n
            }\n
            if (!v3)\n
            {\n
                sub_4013a0(v5->field_2c);\n
                sub_4013a0(v5);\n
                v6 = 0;\n
                return v6;\n
            }\n
            v2 = v3 + v2;\n
        }\n
    }\n
    sub_4013a0(v5);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4209987:sub_403d43": null, "4210000:sub_403d50": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[40];\n
    unsigned int field_2c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[40];\n
    unsigned int field_2c[2];\n
} struct_0;\n
\n
int sub_403d50(struct_1 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v4 = v3->field_0;\n
    v0 = &v4->field_0;\n
    if (!v0)\n
        return v3->field_0;\n
    if (v0->field_2c)\n
        sub_4013a0(v0->field_2c);\n
    if (v0)\n
        sub_4013a0(v0);\n
    v4 = v3;\n
    *(v4) = 0;\n
    return v3;\n
}\n
", "4210094:sub_403dae": null, "4210096:sub_403db0": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned short field_20;\n
    char padding_22[6];\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int sub_403db0(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = v6->field_2c;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v1 = v2;\n
        if (v1 >= (0 CONCAT v6->field_28) /m v6->field_20)\n
            break;\n
        if (!(0 CONCAT v2) /m v6->field_18 >> 32)\n
            sub_404ba0();\n
        if (v6->field_16 == 2)\n
        {\n
            v0 = v3;\n
            sub_403e90(v6);\n
        }\n
        else if (v6->field_16 == 1)\n
        {\n
            v0 = v3;\n
            sub_404020(v6);\n
        }\n
        v2 += 1;\n
        v3 = v6->field_20 + v3;\n
    }\n
    return sub_401f80(\"++++END VISUALIZATION++++\\n
\\n
\");\n
}\n
", "4210306:sub_403e82": null, "4210320:sub_403e90": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[34];\n
    unsigned short field_22;\n
} struct_1;\n
\n
int sub_403e90(struct_1 *v13, unsigned int a0)\n
{\n
    int tmp_17;  // tmp #17\n
    int tmp_19;  // tmp #19\n
    int tmp_18;  // tmp #18\n
    int tmp_32;  // tmp #32\n
    int tmp_34;  // tmp #34\n
    int tmp_33;  // tmp #33\n
    int tmp_23;  // tmp #23\n
    int tmp_25;  // tmp #25\n
    int tmp_24;  // tmp #24\n
    int tmp_38;  // tmp #38\n
    int tmp_40;  // tmp #40\n
    int tmp_39;  // tmp #39\n
    char v0[83];  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    unsigned int v2;  // [bp-0x58]\n
    char v3;  // [bp-0x54]\n
    char v4[83];  // [bp-0x3c]\n
    char v5;  // [bp-0x38]\n
    char v6;  // [bp-0x34]\n
    char v7;  // [bp-0x30]\n
    char v8;  // [bp-0x28]\n
    unsigned long long v9;  // [bp-0x20]\n
    unsigned long long v10;  // [bp-0x18]\n
    struct_0 *v11;  // [bp-0x4]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // [bp+0xc]\n
    unsigned int v15;  // [bp+0x10]\n
    unsigned int v16;  // [bp+0x14]\n
    unsigned int v17;  // [bp+0x18]\n
    unsigned int v18;  // [bp+0x1c]\n
    unsigned long v19;  // [bp+0x20]\n
    unsigned long v20;  // [bp+0x28]\n
    int v22;  // xmm0\n
    unsigned int v24;  // eax\n
    unsigned long long v26;  // xmm1\n
    unsigned long long v27;  // 184\n
    unsigned long long v28;  // xmm1\n
    char v29[83];  // eax\n
\n
    v11 = &v12;\n
    v10 = 0;\n
    v9 = 0;\n
    if (v13->field_22 != 8)\n
    {\n
        tmp_17 = DivV(tmp_19, tmp_18);\n
        *(&v20) = tmp_17;\n
        tmp_32 = DivV(tmp_34, tmp_33);\n
        v22 = tmp_32;\n
    }\n
    else\n
    {\n
        tmp_23 = DivV(tmp_25, tmp_24);\n
        *(&v20) = tmp_23;\n
        tmp_38 = DivV(tmp_40, tmp_39);\n
        v22 = tmp_38;\n
    }\n
    *(&v19) = v22;\n
    v18 = 83;\n
    v17 = 41;\n
    v24 = v17;\n
    v16 = v24 + (v24 - 2 >> 31) - 2 >> 1;\n
    v26 = v16;\n
    v27 = 0;\n
    v15 = (0 CONCAT *(&v20)) * xmm1<16> + xmm1<16> + (0 CONCAT 0x3fe0000000000000);\n
    v28 = v16;\n
    v14 = (0 CONCAT *(&v19)) * xmm1<16> + xmm1<16> + (0 CONCAT v17) + (0 CONCAT 0x3ff8000000000000);\n
    a0 = &v12;\n
    v11 = &v12;\n
    *(&v4[0]) = &v3;\n
    *(&v0[0]) = &v3;\n
    v1 = 32;\n
    v2 = 83;\n
    sub_401c60(v13, a0, v14);\n
    v29 = v4;\n
    v29[82] = 0;\n
    v29[*(&v8)] = 124;\n
    v29[*(&v7)] = 42;\n
    v29[*(&v6)] = 42;\n
    v13 = \"%s\\n
\";\n
    *(&a0[0]) = v29;\n
    sub_401f80(*(&v12));\n
    return *(&v5);\n
}\n
", "4210715:sub_40401b": null, "4210720:sub_404020": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[34];\n
    unsigned short field_22;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[37];\n
    char field_29;\n
} struct_0;\n
\n
int sub_404020(struct_2 *v9, unsigned int a0)\n
{\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    int tmp_15;  // tmp #15\n
    int tmp_17;  // tmp #17\n
    int tmp_16;  // tmp #16\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    struct_0 *v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x28]\n
    char v5;  // [bp-0x24]\n
    unsigned long long v6;  // [bp-0x18]\n
    struct_1 *v7;  // [bp-0x4]\n
    char v8;  // [bp+0x0]\n
    unsigned int v10;  // [bp+0xc]\n
    unsigned int v11;  // [bp+0x10]\n
    unsigned int v12;  // [bp+0x14]\n
    unsigned long v13;  // [bp+0x18]\n
    unsigned long v14;  // 184, Other Possible Types: unsigned long long\n
    int v15;  // xmm0\n
    unsigned long long v16;  // xmm1\n
    struct_0 *v17;  // eax\n
\n
    v7 = &v8;\n
    v6 = 0;\n
    if (v9->field_22 != 8)\n
    {\n
        v14 = 0;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        v15 = tmp_12;\n
    }\n
    else\n
    {\n
        v14 = 0;\n
        tmp_15 = DivV(tmp_17, tmp_16);\n
        v15 = tmp_15;\n
    }\n
    *(&v13) = v15;\n
    v12 = 42;\n
    v11 = 20;\n
    v16 = v11;\n
    v10 = (0 CONCAT *(&v13)) * *(&v14) + *(&v14) + (0 CONCAT 0x3fe0000000000000);\n
    a0 = &v8;\n
    v7 = &v8;\n
    v3 = &v3;\n
    v0 = &v3;\n
    v1 = 32;\n
    v2 = 42;\n
    sub_401c60(v9, a0, v10);\n
    v17 = v3;\n
    v17->field_29 = 0;\n
    *(&v17->field_0 + *(&v5)) = 42;\n
    v9 = \"%s\\n
\";\n
    a0 = v17;\n
    sub_401f80(*(&v8));\n
    return *(&v4);\n
}\n
", "4210968:sub_404118": null, "4210976:sub_404120": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[21];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int sub_404120(struct_0 *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x190]\n
    int tmp_20;  // tmp #20\n
    int tmp_22;  // tmp #22\n
    int tmp_21;  // tmp #21\n
    int tmp_17;  // tmp #17\n
    int tmp_19;  // tmp #19\n
    int tmp_18;  // tmp #18\n
    int tmp_14;  // tmp #14\n
    int tmp_16;  // tmp #16\n
    int tmp_15;  // tmp #15\n
    void* v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct struct_0 **v4;  // [bp-0x4]\n
    struct_0 *v5;  // [bp+0x0], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp+0x10]\n
    char v8;  // [bp+0x17]\n
    struct_0 *v9;  // [bp+0x18]\n
    char v10;  // [bp+0x1f]\n
    unsigned int v11;  // [bp+0x20]\n
    char v12;  // [bp+0x27]\n
    unsigned int v13;  // [bp+0x28]\n
    struct_0 *v14;  // [bp+0x2c], Other Possible Types: unsigned int\n
    char v15;  // [bp+0x30]\n
    char v16;  // [bp+0x38]\n
    char v17;  // [bp+0x40]\n
    unsigned long v18;  // [bp+0x150]\n
    unsigned long v19;  // [bp+0x158]\n
    unsigned int v20;  // [bp+0x164]\n
    struct_0 *v21;  // [bp+0x168]\n
    unsigned int v22;  // [bp+0x16c]\n
    struct_0 *v23;  // [bp+0x170]\n
    unsigned int v24;  // [bp+0x174]\n
    char v25;  // [bp+0x178]\n
    struct_0 *v26;  // [bp+0x17c], Other Possible Types: unsigned int\n
    void* v27;  // [bp+0x180], Other Possible Types: unsigned int\n
    struct_0 *v28;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v34;  // eax\n
    struct_0 *v35;  // eax\n
    struct_0 *v37;  // eax\n
\n
    v4 = &v5;\n
    v3 = v6->field_2c;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = v6->field_18 * 8;\n
    v28 = sub_401440(v5);\n
    v23 = v28;\n
    if (!v23)\n
        return v28;\n
    if (v6->field_16 == 2)\n
    {\n
        v5 = v6->field_18 * 8;\n
        v28 = sub_401440(v6->field_18 * 8);\n
        v22 = v28;\n
        if (!v22)\n
            return v28;\n
    }\n
    v27 = 0;\n
    while (true)\n
    {\n
        v13 = v27;\n
        if (v13 >= (0 CONCAT *((v6 + 40))) /m *((v6 + 32)))\n
            break;\n
        for (v26 = 0; v26 < 12; v26 = &v26->padding_1)\n
        {\n
            *((&v16 + 0x18 * v26)) = 0;\n
            *((&v15 + 0x18 * v26)) = 0;\n
            *((&v17 + 0x18 * v26)) = 0;\n
        }\n
        v26 = 0;\n
        while (true)\n
        {\n
            v12 = 0;\n
            if (v26 < v6->field_18)\n
            {\n
                v11 = v27;\n
                v12 = v11 < (0 CONCAT v6->field_28) /m *((v6 + 32));\n
            }\n
            if (!(v12 & 1))\n
                break;\n
            if (v6->field_22 == 8)\n
            {\n
                tmp_20 = DivV(tmp_22, tmp_21);\n
                *(&v19) = tmp_20;\n
                if (v6->field_16 == 2)\n
                {\n
                    tmp_17 = DivV(tmp_19, tmp_18);\n
                    *(&v18) = tmp_17;\n
                }\n
            }\n
            else\n
            {\n
                tmp_17 = DivV(tmp_19, tmp_18);\n
                *(&v19) = tmp_17;\n
                if (v6->field_16 == 2)\n
                {\n
                    tmp_14 = DivV(tmp_16, tmp_15);\n
                    *(&v18) = tmp_14;\n
                }\n
            }\n
            *(&(&v23->field_0)[8 * v26]) = *(&v19);\n
            if (v6->field_16 == 2)\n
                *((v22 + v26 * 8)) = *(&v18);\n
            v26 = &v26->padding_1;\n
            v27 += 1;\n
            v24 = *((v6 + 32)) + v24;\n
        }\n
        v5 = v23;\n
        v6 = v26;\n
        a0 = &v25;\n
        v21 = sub_402990(v6, a0, a1);\n
        if (v6->field_16 == 2)\n
        {\n
            v5 = v22;\n
            v6 = v26;\n
            a0 = &v25;\n
            v20 = sub_402990(v6, a0, a1);\n
        }\n
        if (a1 == 1)\n
        {\n
            v14 = (0 CONCAT *((v6 + 24)) * 4) /m 20;\n
            while (true)\n
            {\n
                v10 = 0;\n
                if (v14 < v26)\n
                {\n
                    v9 = v14;\n
                    v10 = v9 < (0 CONCAT *((v6 + 24)) * 16) /m 20;\n
                }\n
                if (!(v10 & 1))\n
                    break;\n
                *(&(&v21->field_0)[16 * v14]) = 0;\n
                *(&v21->padding_1[7 + 16 * v14]) = 0;\n
                if (v6->field_16 == 2)\n
                {\n
                    *((v20 + v14 * 16)) = 0;\n
                    *((v20 + v14 * 16 + 8)) = 0;\n
                }\n
                v14 += 1;\n
            }\n
        }\n
        else if (a1 == 2)\n
        {\n
            v14 = 0;\n
            while (true)\n
            {\n
                v8 = 0;\n
                if (v14 < (0 CONCAT *((v6 + 24)) << 1) /m 20)\n
                    v8 = v14 < v26;\n
                if (!(v8 & 1))\n
                    break;\n
                *(&(&v21->field_0)[16 * v14]) = 0;\n
                *(&v21->padding_1[7 + 16 * v14]) = 0;\n
                if (v6->field_16 == 2)\n
                {\n
                    *((v20 + v14 * 16)) = 0;\n
                    *((v20 + v14 * 16 + 8)) = 0;\n
                }\n
                v14 += 1;\n
            }\n
            v14 = (0 CONCAT *((v6 + 24)) * 18) /m 20;\n
            if ((Not (Not (Load(addr=stack_base+44, size=4, endness=Iend_LE) <s Load(addr=stack_base+380, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        }\n
        v14 = 0;\n
        while (true)\n
        {\n
            v7 = v14;\n
            v34 = v26;\n
            if (v7 >= (v34 >> 31 CONCAT v34) /m 2)\n
                break;\n
            v35 = v26;\n
            v5 = &v15;\n
            v6 = &(&v21->field_0)[16 * v14];\n
            a0 = v14;\n
            a1 = (v35 >> 31 CONCAT v35) /m 2;\n
            sub_4047b0(v6, a0, a1);\n
            if (v6->field_16 == 2)\n
            {\n
                v37 = v26;\n
                v5 = &v15;\n
                v6 = v20 + v14 * 16;\n
                a0 = v14;\n
                a1 = (v37 >> 31 CONCAT v37) /m 2;\n
                sub_4047b0(v6, a0, a1);\n
            }\n
            v14 += 1;\n
        }\n
        v5 = &v15;\n
        v6 = a0;\n
        sub_4048e0(&v15);\n
        v5 = v21;\n
        sub_4013a0(v21);\n
        if (v6->field_16 == 2)\n
        {\n
            v5 = v20;\n
            sub_4013a0(v20);\n
        }\n
    }\n
    v5 = \"++++END VISUALIZATION++++\\n
\\n
\";\n
    v28 = sub_401f80(\"++++END VISUALIZATION++++\\n
\\n
\");\n
    return v28;\n
}\n
", "4212654:sub_4047ae": null, "4212656:sub_4047b0": null, "4212949:sub_4048d5": null, "4212960:sub_4048e0": null, "4213657:sub_404b99": null, "4213664:sub_404ba0": null, "4213792:sub_404c20": "int sub_404c20()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_404d40();\n
    sub_404d50();\n
    sub_404d70();\n
    v0 = 1;\n
    if (!sub_405340())\n
    {\n
        v0 = 7;\n
        sub_405a20();\n
    }\n
    sub_405bf0();\n
    v1 = sub_405c20;\n
    sub_405010();\n
    if (sub_404d10())\n
    {\n
        v1 = 7;\n
        sub_405a20();\n
    }\n
    sub_4057b0();\n
    if (sub_4058b0())\n
    {\n
        v1 = sub_405750;\n
        __setusermatherr();\n
    }\n
    sub_405830();\n
    sub_405840();\n
    sub_405800();\n
    v1 = sub_4057a0();\n
    _configthreadlocale();\n
    if (sub_4057f0())\n
        sub_404d30();\n
    sub_4059e0();\n
    if (sub_4059f0())\n
    {\n
        v1 = 7;\n
        sub_405a20();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4213984:sub_404ce0": "int sub_404ce0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405850();\n
    return 0;\n
}\n
", "4214000:sub_404cf0": "int sub_404cf0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
\n
    v1 = &v2;\n
    sub_405a00();\n
    v0 = sub_405790();\n
    return _set_new_mode();\n
}\n
", "4214032:sub_404d10": "int sub_404d10()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _configure_narrow_argv(sub_405760());\n
}\n
", "4214064:sub_404d30": "int sub_404d30()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _initialize_narrow_environment();\n
}\n
", "4214080:sub_404d40": "int sub_404d40()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_app_type(1);\n
}\n
", "4214096:sub_404d50": "int sub_404d50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return _set_fmode(sub_405780());\n
}\n
", "4214128:sub_404d70": "int sub_404d70()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v1 = &v2;\n
    v4 = __p__commode(sub_405770(*(&v0)));\n
    *(v4) = v5;\n
    return v4;\n
}\n
", "4214160:sub_404d90": "int sub_404d90()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = _get_initial_narrow_environment();\n
    v2 = *(__p___argv());\n
    v1 = *(__p___argc());\n
    v0 = v3;\n
    return sub_403590(v1, v2);\n
}\n
", "4214224:sub_404dd0": "extern char g_4076c4;\n
extern char g_4076cc;\n
extern char g_4076d0;\n
extern struct_0 *g_4076dc;\n
extern char g_407db0;\n
extern unsigned int g_4080c0;\n
extern unsigned int g_4081a0;\n
\n
int sub_404dd0()\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    struct struct_0 **v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x30]\n
    struct struct_0 **v6;  // [bp-0x2c]\n
    struct struct_0 **v7;  // [bp-0x28]\n
    struct struct_0 **v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1e]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v16;  // [bp-0x4], Other Possible Types: unsigned int, void*\n
    char v17;  // [bp+0x0]\n
    unsigned int v18;  // [bp+0x4]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v25;  // eax\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_407db0;\n
    v13 = sub_405c50;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v1 = v21;\n
    v14 ^= g_4080c0;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    if (!sub_4052b0(1, g_4080c0 ^ &v16, v22, v23))\n
        sub_405a20();\n
    v10 = 0;\n
    v15 = 0;\n
    v9 = sub_405230();\n
    if (g_4081a0 == 1)\n
    {\n
        v16 = 7;\n
        sub_405a20();\n
    }\n
    else if (g_4081a0)\n
    {\n
        v10 = 1;\n
    }\n
    else\n
    {\n
        g_4081a0 = 1;\n
        v16 = &g_4076dc;\n
        v15 = &g_4076d0;\n
        if (_initterm_e(*(&v17)))\n
        {\n
            v4 = 255;\n
            v15 = -2;\n
            v25 = v4;\n
            goto LABEL_404fd9;\n
        }\n
        else\n
        {\n
            v16 = &g_4076cc;\n
            v15 = &g_4076c4;\n
            _initterm(*(&v17));\n
            g_4081a0 = 2;\n
        }\n
    }\n
    v16 = v9;\n
    sub_405280();\n
    v8 = sub_4058e0();\n
    if (*(v8))\n
    {\n
        v16 = v8;\n
        if (sub_405100())\n
        {\n
            v3 = &*(v8)->field_0;\n
            v16 = 0;\n
            v15 = 2;\n
            v14 = 0;\n
            v6 = v3;\n
            sub_405c90(v18, v19);\n
            v6(v18, v19);\n
        }\n
    }\n
    v7 = sub_4058f0();\n
    if (*(v7))\n
    {\n
        v16 = v7;\n
        if (sub_405100())\n
        {\n
            v16 = *(v7);\n
            _register_thread_local_exe_atexit_callback();\n
        }\n
    }\n
    v5 = sub_404d90();\n
    if (!sub_405950())\n
    {\n
        v16 = v5;\n
        exit();\n
    }\n
    if (!v10)\n
        _cexit();\n
    v16 = 0;\n
    v15 = 1;\n
    sub_405300(*(&v17));\n
    v2 = v5;\n
    v15 = -2;\n
    v25 = v2;\n
LABEL_404fd9:\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v25;\n
}\n
", "4214639:sub_404f6f": "int sub_404f6f()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4214648:sub_404f78": "int sub_404f78()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x4]\n
\n
    v0 = *(*(*(&v1)));\n
    v2 = *(&v1);\n
    _seh_filter_exe(v0);\n
    return;\n
}\n
", "4214675:sub_404f93": "extern char g_404fa1;\n
\n
int sub_404f93()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x19]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x4]\n
\n
    v1 = *(&v2);\n
    *((*(&v4) - 4)) = &g_404fa1;\n
    if (!sub_405950())\n
    {\n
        v5 = v1;\n
        _exit();\n
    }\n
    if (!v3)\n
        _c_exit();\n
    v0 = v1;\n
    v5 = -2;\n
}\n
", "4214738:sub_404fd2": "int sub_404fd2()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4214768:sub_404ff0": "int sub_404ff0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_405660();\n
    return sub_404dd0();\n
}\n
", "4214784:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_404ff0();\n
}\n
", "4214800:sub_405010": "int sub_405010(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    if (sub_405040(v3, v4))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4214848:sub_405040": "extern unsigned int g_4081ac;\n
\n
int sub_405040(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v0 = g_4081ac;\n
    if (v0 != -1)\n
    {\n
        if (_register_onexit_function(&g_4081ac))\n
            v1 = 0;\n
        else\n
            v1 = v5;\n
        return v1;\n
    }\n
    else\n
    {\n
        if (_crt_atexit(v5))\n
            v2 = 0;\n
        else\n
            v2 = v5;\n
        return v2;\n
    }\n
}\n
", "4214904:sub_405078": "int sub_405078()\n
{\n
}\n
", "4214960:sub_4050b0": "extern unsigned int g_4081b8;\n
\n
int sub_4050b0(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v6;  // eax\n
\n
    v3 = &v4;\n
    v2 = g_4081b8;\n
    if (v2 == -1)\n
    {\n
        v0 = v5;\n
        v6 = _crt_at_quick_exit();\n
        return v6;\n
    }\n
    v1 = v5;\n
    v0 = v1;\n
    v6 = _register_onexit_function(&g_4081b8);\n
    return v6;\n
}\n
", "4214994:sub_4050d2": "int sub_4050d2()\n
{\n
}\n
", "4215024:sub_4050f0": "int sub_4050f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x18<32>));\n
}\n
", "4215040:sub_405100": "typedef struct struct_0 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char g_400000;\n
extern char g_407dd0;\n
extern unsigned int g_4080c0;\n
\n
int sub_405100(unsigned int v18)\n
{\n
    char v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x20]\n
    struct_0 *v8;  // [bp-0x1f]\n
    struct_0 *v9;  // [bp-0x1e]\n
    struct_0 *v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    void* v15;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x4]\n
    char v17;  // [bp+0x0]\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
\n
    v16 = &v17;\n
    v15 = -2;\n
    v14 = &g_407dd0;\n
    v13 = sub_405c50;\n
    v12 = *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>));\n
    v14 ^= g_4080c0;\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = &v12;\n
    v11 = &v0;\n
    v4 = v18;\n
    v6 = &g_400000;\n
    v15 = 0;\n
    v19 = sub_405560(v6, g_4080c0 ^ &v16, *(&v1), *(&v2));\n
    if (!v19)\n
    {\n
        *(&v10) = 0;\n
        v15 = -2;\n
        *(&v19) = v10;\n
    }\n
    else\n
    {\n
        v3 = v4 - v6;\n
        v19 = sub_4055d0(v6);\n
        v5 = v19;\n
        if (!v5)\n
        {\n
            *(&v9) = 0;\n
            v15 = -2;\n
            *(&v19) = v9;\n
        }\n
        else\n
        {\n
            v19 = v5;\n
            if (!(*((v19 + 36)) & 0x80000000))\n
            {\n
                *(&v7) = 1;\n
                v15 = -2;\n
                *(&v19) = v7;\n
            }\n
            else\n
            {\n
                *(&v8) = 0;\n
                v15 = -2;\n
                *(&v19) = v8;\n
            }\n
        }\n
    }\n
    *([D] x86g_use_seg_selector(ldt<8>, gdt<8>, Conv(16->32, fs<2>), 0x0<32>)) = v12;\n
    return v19;\n
}\n
", "4215245:sub_4051cd": "int sub_4051cd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4215254:sub_4051d6": "int sub_4051d6()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14]\n
\n
    v0 = *(*(*(&v2)));\n
    if (v0 == 3221225477)\n
    {\n
        v1 = 1;\n
        return;\n
    }\n
    v1 = 0;\n
    return;\n
}\n
", "4215293:sub_4051fd": "int sub_4051fd()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x4]\n
\n
    v0 = 0;\n
    v1 = -2;\n
}\n
", "4215312:sub_405210": "int sub_405210()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
\n
    v0 = -2;\n
}\n
", "4215344:sub_405230": "extern unsigned int g_4081a4;\n
\n
int sub_405230()\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_0;  // tmp #0\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = &v3;\n
    v5 = sub_406470();\n
    if (!v5)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v1 = *((sub_4050f0() + 4));\n
    while (true)\n
    {\n
        v6 = v1;\n
        tmp_4 = 0;\n
        g_4081a4 = v6;\n
        if (!g_4081a4)\n
        {\n
            tmp_0 = 0;\n
            g_4081a4 = v6;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            tmp_0 = 0;\n
            g_4081a4 = v6;\n
            v5 = g_4081a4;\n
        }\n
        v0 = v5;\n
        if (!v0)\n
        {\n
            *(&v5) = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        if (v5 == v0)\n
        {\n
            *(&v5) = 1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4215424:sub_405280": "extern void* g_4081a4;\n
\n
int sub_405280(char v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_3;  // tmp #3\n
    int tmp_8;  // tmp #8\n
    int tmp_6;  // tmp #6\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_406470();\n
    if (!v3)\n
        return v3;\n
    v3 = v2;\n
    if (!v3)\n
    {\n
        tmp_3 = g_4081a4;\n
        g_4081a4 = 0;\n
        tmp_8 = CasCmpNE(tmp_6, tmp_3);\n
        if (tmp_8)\n
            goto LABEL_0x40529f;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4215472:sub_4052b0": "extern char g_4081a8;\n
\n
int sub_4052b0(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax, Other Possible Types: char\n
\n
    v1 = &v2;\n
    if (!v3)\n
        g_4081a8 = 1;\n
    sub_405fe0();\n
    v4 = sub_406810();\n
    if (!v4)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = sub_406810();\n
    if (v4)\n
    {\n
        *(&v4) = 1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = sub_406820();\n
    *(&v4) = 0;\n
    return v4;\n
}\n
", "4215552:sub_405300": "extern char g_4081a8;\n
\n
int sub_405300(char v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    if (g_4081a8 && a0)\n
        return 1;\n
    sub_406820(v2);\n
    v3 = sub_406820();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4215616:sub_405340": "extern char g_4081a9;\n
extern unsigned int g_4081ac;\n
extern unsigned int g_4081b0;\n
extern unsigned int g_4081b4;\n
extern unsigned int g_4081b8;\n
extern unsigned int g_4081bc;\n
extern unsigned int g_4081c0;\n
\n
int sub_405340(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // eax\n
\n
    v8 = &v9;\n
    if (g_4081a9)\n
        return 1;\n
    if (v10 && v10 != 1)\n
    {\n
        v0 = 5;\n
        sub_405a20();\n
    }\n
    if (sub_406470() && !v10)\n
    {\n
        v8 = &g_4081ac;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        v8 = &g_4081b8;\n
        v11 = _initialize_onexit_table();\n
        if (v11)\n
        {\n
            *(&v11) = 0;\n
            return v11;\n
        }\n
        goto LABEL_405406;\n
    }\n
    v7 = -1;\n
    v4 = v7;\n
    v5 = v7;\n
    v6 = v7;\n
    g_4081ac = v4;\n
    g_4081b0 = v5;\n
    g_4081b4 = v6;\n
    v1 = v7;\n
    v2 = v7;\n
    v3 = v7;\n
    g_4081b8 = v1;\n
    g_4081bc = v2;\n
    v11 = v3;\n
    g_4081c0 = v11;\n
LABEL_405406:\n
    g_4081a9 = 1;\n
    *(&v11) = 1;\n
    return v11;\n
}\n
", "4215840:sub_405420": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int sub_405420(unsigned int v5, unsigned int a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc]\n
    struct struct_0 **v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x4], Other Possible Types: unsigned int\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    if (!sub_406470() && a0 == 1)\n
    {\n
        v1 = a2;\n
        v0 = a1;\n
        v2 = v1;\n
        sub_405c90(v5, 0);\n
        v2(v5, a0);\n
    }\n
    v3 = a4;\n
    v2 = a3;\n
    return _seh_filter_dll(*(&v4));\n
}\n
", "4215920:sub_405470": "int sub_405470()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405340(0);\n
    *(&v3) = (!v3 ? 1 : 0);\n
    return v3;\n
}\n
", "4215952:sub_405490": "int sub_405490()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    if (sub_406470())\n
    {\n
        v3 = sub_405fe0();\n
    }\n
    else\n
    {\n
        v3 = sub_404d10();\n
        if (v3)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = sub_404d30();\n
    }\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4216000:sub_4054c0": "extern char g_4081ac;\n
\n
int sub_4054c0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (sub_406470())\n
    {\n
        v0 = &g_4081ac;\n
        v4 = _execute_onexit_table();\n
        return v4;\n
    }\n
    v4 = sub_406860();\n
    if (!v4)\n
    {\n
        v4 = _cexit();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4216048:sub_4054f0": "int sub_4054f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406830(0);\n
    return sub_406830();\n
}\n
", "4216080:sub_405510": "int sub_405510()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax, Other Possible Types: char\n
\n
    v0 = &v1;\n
    v3 = sub_406840();\n
    if (!v3)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = sub_406840();\n
    if (v3)\n
    {\n
        *(&v3) = 1;\n
        return v3;\n
    }\n
    v3 = sub_406850();\n
    *(&v3) = 0;\n
    return v3;\n
}\n
", "4216128:sub_405540": "char sub_405540()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    sub_406850();\n
    sub_406850();\n
    return 1;\n
}\n
", "4216160:sub_405560": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[58];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_405560(struct_0 *v6)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
    struct_0 *v7;  // al, Other Possible Types: unsigned int\n
\n
    v4 = &v5;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6;\n
    v3 = v7;\n
    if (v3->field_0 != 23117)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v1 = v3 + v3->field_3c;\n
    v2 = v1;\n
    v7 = v2;\n
    if (*(v7) != 17744)\n
    {\n
        *(&v7) = 0;\n
        return v7;\n
    }\n
    v0 = &v2->padding_2[22];\n
    v7 = *(v0);\n
    *(&v7) = (v7 == 267 ? 0 : 1);\n
    return v7;\n
}\n
", "4216272:sub_4055d0": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int sub_4055d0(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1[11];  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned short v4[11];  // [bp-0xc]\n
    unsigned int v5[4];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x4]\n
    char v7;  // [bp+0x0]\n
\n
    v6 = &v7;\n
    v3 = v8;\n
    *(&v1[0]) = &v3->padding_0[v3->field_3c];\n
    *(&v4[0]) = v1;\n
    v2[0] = 24 + v4 + v4[10];\n
    v0 = 40 * v4[3] + v2;\n
    v5[0] = v2;\n
    while (true)\n
    {\n
        if (v5 == v0)\n
            return 0;\n
        if (a0 >= v5[3] && a0 < v5[3] + v5[2])\n
            return v5;\n
        v5 += 40;\n
    }\n
}\n
", "4216416:sub_405660": "extern unsigned int g_4080c0;\n
extern unsigned int g_408100;\n
\n
int sub_405660()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
\n
    v1 = &v2;\n
    if (g_4080c0 != 3141592654)\n
    {\n
        v4 = g_4080c0 & -0x10000;\n
        if (v4)\n
        {\n
            g_408100 = ~(g_4080c0);\n
            return g_4080c0 & -0x10000;\n
        }\n
    }\n
    v4 = sub_4056e0(v3);\n
    v0 = v4;\n
    if (v0 == 3141592654)\n
    {\n
        v0 = 3141592655;\n
    }\n
    else if (!(v0 & -0x10000))\n
    {\n
        v4 = (v0 | 18193) * 0x10000 | v0;\n
        v0 = v4;\n
    }\n
    g_4080c0 = v0;\n
    g_408100 = ~(v0);\n
    return v4;\n
}\n
", "4216544:sub_4056e0": "int sub_4056e0()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp-0x4]\n
    char v6;  // [bp+0x0]\n
\n
    v5 = &v6;\n
    v2 = 0;\n
    v3 = 0;\n
    GetSystemTimeAsFileTime(&v2);\n
    v4 = v2;\n
    v4 ^= v3;\n
    v4 = GetCurrentThreadId() ^ v4;\n
    v4 = GetCurrentProcessId() ^ v4;\n
    QueryPerformanceCounter(&v0);\n
    v4 ^= v0;\n
    v4 ^= *(&v1);\n
    v4 ^= &v4;\n
    return v4;\n
}\n
", "4216656:sub_405750": "int sub_405750()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216672:sub_405760": "int sub_405760()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4216688:sub_405770": "int sub_405770()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216704:sub_405780": "int sub_405780()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0x4000;\n
}\n
", "4216720:sub_405790": "int sub_405790()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216736:sub_4057a0": "int sub_4057a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4216752:sub_4057b0": "extern void g_4081c8;\n
\n
int sub_4057b0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return InitializeSListHead(&g_4081c8);\n
}\n
", "4216784:sub_4057d0": "extern unsigned int g_4081c8;\n
\n
int sub_4057d0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return __std_type_info_destroy_list(&g_4081c8);\n
}\n
", "4216816:sub_4057f0": "char sub_4057f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4216832:sub_405800": "int sub_405800()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = _controlfp_s(0, 0x10000, 0x30000);\n
    if (v3)\n
    {\n
        v3 = sub_405a20();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4216880:sub_405830": "int sub_405830()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4216896:sub_405840": "int sub_405840()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4216912:sub_405850": "int sub_405850()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5[2];  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8[2];  // eax\n
    unsigned int v9[2];  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12[2];  // ecx\n
\n
    v2 = &v3;\n
    v1[0] = sub_405890();\n
    v5 = v1;\n
    v7 = v5[1];\n
    v8 = v1;\n
    v8[0] = v5[0] | 36;\n
    v8[1] = v7;\n
    v0[0] = sub_4058a0(v0, v1);\n
    v9 = v0;\n
    v11 = v9[1];\n
    v12 = v0;\n
    v12[0] = v9[0] | 2;\n
    v12[1] = v11;\n
    return v11;\n
}\n
", "4216976:sub_405890": "extern char g_4081d0;\n
\n
int sub_405890()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4081d0;\n
}\n
", "4216992:sub_4058a0": "extern char g_4081d8;\n
\n
int sub_4058a0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4081d8;\n
}\n
", "4217008:sub_4058b0": "extern unsigned int g_408088;\n
\n
int sub_4058b0()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (!g_408088)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4217056:sub_4058e0": "extern char g_4081e4;\n
\n
int sub_4058e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4081e4;\n
}\n
", "4217072:sub_4058f0": "extern char g_4081e8;\n
\n
int sub_4058f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return &g_4081e8;\n
}\n
", "4217088:sub_405900": "extern void* g_4081ec;\n
\n
int sub_405900()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    g_4081ec = 0;\n
    return v3;\n
}\n
", "4217104:sub_405910": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_405910()\n
{\n
    STARTUPINFOW v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    memset(&v0, 0);\n
    GetStartupInfoW(&v0);\n
    if (!(*(&v1) & 1))\n
    {\n
        v3 = 10;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4217168:sub_405950": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    unsigned short field_18;\n
    char padding_1a[34];\n
    unsigned int field_3c;\n
    char padding_40[52];\n
    unsigned int field_74;\n
} struct_0;\n
\n
int sub_405950()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = GetModuleHandleW(NULL);\n
    v1 = v5;\n
    if (!v1)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1;\n
    if (*(v5) != 23117)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v1 + v1->field_3c;\n
    v0 = v5;\n
    if (*(&v0->field_0) != 17744)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    v5 = v0->field_18;\n
    if (v5 != 267)\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
    else if (v0->field_74 > 14)\n
    {\n
        v5 = 8 * 14;\n
        *(&v5) = (!*((120 + &v0->field_0 + v5)) ? 1 : 0);\n
        return v5;\n
    }\n
    else\n
    {\n
        *(&v5) = 0;\n
        return v5;\n
    }\n
}\n
", "4217312:sub_4059e0": "int sub_4059e0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4217328:sub_4059f0": "int sub_4059f0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405b60();\n
}\n
", "4217344:sub_405a00": "int sub_405a00()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return SetUnhandledExceptionFilter(sub_405b70);\n
}\n
", "4217376:sub_405a20": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_405a20()\n
{\n
    unsigned int v0;  // [bp-0x334]\n
    char v1;  // [bp-0x330], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x2a4]\n
    unsigned short v3;  // [bp-0x2a0]\n
    unsigned short v4;  // [bp-0x29c]\n
    unsigned short v5;  // [bp-0x298]\n
    unsigned int v6;  // [bp-0x294]\n
    unsigned int v7;  // [bp-0x290]\n
    unsigned int v8;  // [bp-0x28c]\n
    unsigned int v9;  // [bp-0x288]\n
    unsigned int v10;  // [bp-0x284]\n
    unsigned int v11;  // [bp-0x280]\n
    unsigned int v12;  // [bp-0x27c]\n
    unsigned int v13;  // [bp-0x278]\n
    unsigned short v14;  // [bp-0x274]\n
    unsigned int v15;  // [bp-0x270]\n
    unsigned int v16;  // [bp-0x26c]\n
    unsigned short v17;  // [bp-0x268]\n
    char v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    unsigned int v20;  // [bp-0x58]\n
    struct_0 *v21;  // [bp-0x14]\n
    struct_0 *v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    char v24;  // [bp-0x6]\n
    char v25;  // [bp-0x5]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // edi\n
    unsigned short v34;  // ss\n
    unsigned short v35;  // cs\n
    unsigned short v36;  // ds\n
    unsigned short v37;  // es\n
    unsigned short v38;  // fs\n
    unsigned short v39;  // gs\n
    unsigned int v40;  // d\n
    unsigned int v41;  // id\n
    unsigned int v42;  // ac\n
    unsigned int v43;  // ebp\n
\n
    v26 = &v27;\n
    if (!IsProcessorFeaturePresent(23))\n
    {\n
        sub_405900();\n
        v11 = memset(&v1, 0);\n
        v10 = v29;\n
        v9 = v30;\n
        v8 = v31;\n
        v7 = v32;\n
        v6 = v33;\n
        v17 = v34;\n
        v14 = v35;\n
        v5 = v36;\n
        v4 = v37;\n
        v3 = v38;\n
        v2 = v39;\n
        v0 = [D] x86g_calculate_eflags_all(0x3<32>, BaseOffset(stack_base, -828), 0xc<32>, 0x0<32>) | 514 | v40 & 0x400 | v41 * 0x200000 & 0x200000 | v42 * 0x40000 & 0x40000;\n
        v15 = v0;\n
        v1 = 65537;\n
        v13 = *(&v27);\n
        v16 = &v27;\n
        v12 = v26;\n
        memset(&v18, 0);\n
        v18 = 1073741845;\n
        v19 = 1;\n
        v20 = *(&v27);\n
        if (IsDebuggerPresent() == 1)\n
            v25 = 1;\n
        else\n
            v25 = 0;\n
        v24 = v25;\n
        v21 = &v18;\n
        v22 = &v1;\n
        SetUnhandledExceptionFilter(NULL);\n
        v23 = UnhandledExceptionFilter(&v21);\n
        if (v23)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else if (v24)\n
        {\n
            v43 = v26;\n
            return;\n
        }\n
        else\n
        {\n
            sub_405900();\n
            v43 = v26;\n
            return;\n
        }\n
    }\n
}\n
", "4217401:sub_405a39": "int sub_405a39()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4217401\n
}\n
", "4217696:sub_405b60": "int sub_405b60()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4217712:sub_405b70": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
int sub_405b70(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1[6];  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
\n
    v2 = &v3;\n
    v1[0] = v4->field_0;\n
    if (v1[0] != 3765269347)\n
    {\n
        return 0;\n
    }\n
    else if (v1[4] != 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v1[5] != 429065504 && v1[5] != 429065505 && v1[5] != 429065506 && v1[5] != 0x1994000)\n
            return 0;\n
        *(__current_exception()) = v1;\n
        v0 = v4->field_4;\n
        *(__current_exception_context()) = v0;\n
        terminate();\n
        return 0;\n
    }\n
}\n
", "4217840:sub_405bf0": "extern struct_0 *g_407da4;\n
\n
int sub_405bf0()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_407da4;\n
    v3 = &g_407da4;\n
    return &g_407da4;\n
}\n
", "4217888:sub_405c20": "extern struct_0 *g_407dac;\n
\n
int sub_405c20()\n
{\n
    struct struct_0 **v2;  // esi\n
    struct struct_0 **v3;  // eax\n
\n
    v2 = &g_407dac;\n
    v3 = &g_407dac;\n
    return &g_407dac;\n
}\n
", "4217936:sub_405c50": "extern unsigned int g_4080c0;\n
\n
int sub_405c50(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    *(v2) = sub_406870(*(v2));\n
    return _except_handler4_common(&g_4080c0, sub_4064a0, v2, a0, a1);\n
}\n
", "4218000:sub_405c90": "int sub_405c90()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = v4;\n
    return v5;\n
}\n
", "4218016:sub_405ca0": "int sub_405ca0(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    int tmp_4;  // tmp #4\n
    int tmp_22;  // tmp #22\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned int *v3;  // ecx\n
\n
    v0 = &v1;\n
    v3 = v2;\n
    tmp_4 = *(v3);\n
    *(v3) = a0;\n
    tmp_22 = CasCmpNE(tmp_7, tmp_4);\n
    if (tmp_22)\n
        goto LABEL_0x405ca9;\n
    return tmp_4;\n
}\n
", "4218032:sub_405cb0": "int sub_405cb0(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = *(v3);\n
    return v0;\n
}\n
", "4218064:sub_405cd0": "int sub_405cd0(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_405cb0(v2);\n
}\n
", "4218096:sub_405cf0": "extern unsigned int g_4081f0;\n
\n
int sub_405cf0(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v0 = sub_405ca0(&g_4081f0, v3);\n
    return v0;\n
}\n
", "4218128:sub_405d10": "extern char g_405c90;\n
extern unsigned int g_409000;\n
\n
int sub_405d10()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (sub_405cd0(&g_409000) != sub_405c90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4218176:sub_405d40": "extern char g_407600;\n
\n
int sub_405d40(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    char v5;  // [bp+0x0]\n
\n
    v4 = &v5;\n
    v3 = &g_407600;\n
    v1 = &g_407600;\n
    v0 = v1 - v3;\n
    if (v6 - v3 <= v0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218240:sub_405d80": "extern unsigned int g_409008;\n
\n
int sub_405d80(unsigned int v3)\n
{\n
    struct struct_0 **v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    struct struct_0 **v4;  // ecx\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    v5 = sub_405cd0(&g_409008);\n
    v0 = v5;\n
    if (v0)\n
    {\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4218288:sub_405db0": "extern unsigned int g_4081f0;\n
\n
int sub_405db0(unsigned int v4)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    struct struct_0 **v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &v3;\n
    v5 = sub_405cd0(&g_4081f0);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v0 = v1;\n
        sub_405c90();\n
        v5 = v0();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4218352:sub_405df0": "int sub_405df0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4218368:sub_405e00": "int sub_405e00(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405d40(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4218387\n
}\n
", "4218400:sub_405e20": "int sub_405e20(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405d40(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4218425:sub_405e39": "int sub_405e39()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4218425\n
}\n
", "4218432:sub_405e40": "int sub_405e40(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405d40(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405d80(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218480:sub_405e70": "int sub_405e70(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405d40(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405db0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218528:sub_405ea0": "extern char g_407600;\n
\n
int sub_405ea0(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
\n
    v3 = &v4;\n
    v1 = &g_407600;\n
    v0 = v1 + a0;\n
    if (v5 - v0 > a1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218592:sub_405ee0": "int sub_405ee0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405ea0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405d40(v2);\n
    if (!v3)\n
        return v3;\n
    [D] Unsupported jumpkind Ijk_SigTRAP at address 4218635\n
}\n
", "4218640:sub_405f10": "int sub_405f10(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405ea0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405d40(v2);\n
    if (!v3)\n
        return v3;\n
}\n
", "4218689:sub_405f41": "int sub_405f41()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4218689\n
}\n
", "4218704:sub_405f50": "int sub_405f50()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    return v3;\n
}\n
", "4218720:sub_405f60": "int sub_405f60(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405ea0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405d40(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405d80(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218784:sub_405fa0": "int sub_405fa0(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // eax\n
\n
    v0 = &v1;\n
    v3 = sub_405ea0(v2, a0, a1);\n
    if (!v3)\n
        return v3;\n
    v3 = sub_405d40(v2);\n
    if (v3)\n
    {\n
        v3 = sub_405db0(v2);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218848:sub_405fe0": "extern unsigned int g_4080c0;\n
extern unsigned int g_408108;\n
extern unsigned int g_40810c;\n
extern unsigned int g_408110;\n
extern unsigned int g_4081f4;\n
extern unsigned int g_4081f8;\n
extern unsigned int g_4081fc;\n
\n
int sub_405fe0()\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x5c]\n
    void* v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0x54]\n
    void* v7;  // [bp-0x50]\n
    unsigned int v8;  // [bp-0x4c]\n
    void* v9;  // [bp-0x48]\n
    void* v10;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x3c]\n
    void* v13;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned int v15;  // [bp-0x30]\n
    void* v16;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0x20]\n
    char v20;  // [bp-0x19]\n
    void* v21;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x14]\n
    void* v23;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0xc]\n
    unsigned int v25;  // [bp-0x8]\n
    unsigned int v26;  // [bp-0x4]\n
    char v27;  // [bp+0x0]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edx\n
    unsigned int v38;  // ebp\n
\n
    v26 = &v27;\n
    v25 = g_4080c0 ^ &v26;\n
    v1 = v29;\n
    v0 = v30;\n
    g_4081f8 = 0;\n
    g_408110 = g_408110 | 1;\n
    if (!IsProcessorFeaturePresent(10))\n
    {\n
        sub_4064a0();\n
        v38 = v26;\n
        return;\n
    }\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 0;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v31;\n
    v12 = v21;\n
    v32 = v22 ^ 1970169159 | v24 ^ 1231384169 | v23 ^ 1818588270;\n
    if (!v32)\n
        v13 = 1;\n
    else\n
        v13 = 0;\n
    v20 = v13;\n
    [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
    [D] MBusEvent-Imbe_Fence\n
    v21 = 1;\n
    v22 = v29;\n
    v23 = 0;\n
    v24 = v32;\n
    v19 = v21;\n
    if (v20)\n
    {\n
        if ((v19 & 268386288) != 67264 && (v19 & 268386288) != 132704 && (v19 & 268386288) != 132720 && (v19 & 268386288) != 198224 && (v19 & 268386288) != 198240 && !((v19 & 268386288) == 198256))\n
            goto LABEL_40612b;\n
        g_4081fc = g_4081fc | 1;\n
    }\n
LABEL_40612b:\n
    v18 = v23;\n
    v17 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v16 = 0;\n
    if (v12 >= 7)\n
    {\n
        [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
        [D] MBusEvent-Imbe_Fence\n
        v21 = 7;\n
        v22 = v29;\n
        v23 = 0;\n
        v24 = v18;\n
        v17 = v22;\n
        v11 = v24;\n
        if ((v22 & 0x200))\n
            g_4081fc = g_4081fc | 2;\n
        v33 = 4;\n
        if (v21 >= 1)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 7;\n
            v22 = v29;\n
            v23 = 1;\n
            v24 = 4;\n
            v33 = 4 * 3;\n
            v10 = v24;\n
        }\n
        if (v12 >= 36)\n
        {\n
            [D] t4294967295 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_CPUID_sse3(GSPTR)\n
            [D] MBusEvent-Imbe_Fence\n
            v21 = 36;\n
            v22 = v29;\n
            v23 = 0;\n
            v24 = v33;\n
            v16 = v22;\n
        }\n
    }\n
    g_4081f8 = 1;\n
    g_408110 = g_408110 | 2;\n
    g_408108 = g_408108 & -2;\n
    g_40810c = g_40810c;\n
    if ((v18 & 0x100000))\n
    {\n
        g_4081f8 = 2;\n
        g_408110 = g_408110 | 4;\n
        g_408108 = g_408108 & -17;\n
        g_40810c = g_40810c;\n
        if ((v18 & 0x8000000) && (v18 & 0x10000000))\n
        {\n
            [D] t5 = DIRTY 1 TODO(effects) ::: x86g_dirtyhelper_XGETBV(t4)\n
            v14 = tmp_5;\n
            v15 = tmp_5 >> 32;\n
            v8 = v14 & 6;\n
            v9 = 0;\n
            if (v8 == 6 && !v9)\n
            {\n
                g_4081f8 = 3;\n
                g_408110 = g_408110 | 8;\n
                if ((v17 & 32))\n
                {\n
                    g_4081f8 = 5;\n
                    g_408110 = g_408110 | 32;\n
                    g_408108 = g_408108 & -3;\n
                    g_40810c = g_40810c;\n
                    if ((v17 & 0xd0030000) == 0xd0030000)\n
                    {\n
                        v6 = v14 & 224;\n
                        v7 = 0;\n
                        if (v6 == 224 && !v7)\n
                        {\n
                            g_4081f8 = 6;\n
                            g_408110 = g_408110 | 64;\n
                            g_408108 = g_408108 & -37;\n
                            g_40810c = g_40810c;\n
                        }\n
                    }\n
                }\n
                if ((v11 & 0x800000))\n
                {\n
                    g_408108 = g_408108 & -16777217;\n
                    g_40810c = g_40810c;\n
                }\n
                if ((v10 & 0x80000))\n
                {\n
                    v4 = v14 & 224;\n
                    v5 = 0;\n
                    if (v4 == 224 && !v5)\n
                    {\n
                        g_4081f4 = v16 & 262399;\n
                        v2 = v16 >> 16 & 7;\n
                        v3 = 0;\n
                        g_408108 = ~(v2 | 16777256) & g_408108;\n
                        g_40810c = ~(v3) & g_40810c;\n
                        if (g_4081f4 > 1)\n
                        {\n
                            g_408108 = g_408108 & -65;\n
                            g_40810c = g_40810c;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4220016:sub_406470": "extern unsigned int g_408114;\n
\n
int sub_406470()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // ecx\n
\n
    v1 = &v2;\n
    v0 = v4;\n
    if (g_408114)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4220064:sub_4064a0": "extern unsigned int g_4080c0;\n
extern unsigned int g_408100;\n
extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern unsigned int g_408258;\n
extern unsigned short g_4082e4;\n
extern unsigned short g_4082e8;\n
extern unsigned short g_4082ec;\n
extern unsigned short g_4082f0;\n
extern unsigned int g_4082f4;\n
extern unsigned int g_4082f8;\n
extern unsigned int g_4082fc;\n
extern unsigned int g_408300;\n
extern unsigned int g_408304;\n
extern unsigned int g_408308;\n
extern unsigned int g_40830c;\n
extern unsigned int g_408310;\n
extern unsigned short g_408314;\n
extern unsigned int g_408318;\n
extern unsigned int g_40831c;\n
extern unsigned short g_408320;\n
\n
int sub_4064a0()\n
{\n
    unsigned int v0;  // [bp-0x32c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned short v12;  // ss\n
    unsigned short v13;  // cs\n
    unsigned short v14;  // ds\n
    unsigned short v15;  // es\n
    unsigned short v16;  // fs\n
    unsigned short v17;  // gs\n
    unsigned int v18;  // d\n
    unsigned int v19;  // id\n
    unsigned int v20;  // ac\n
    unsigned int v21;  // ebp\n
\n
    if (v6 == g_4080c0)\n
        return;\n
    v3 = &v4;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408308 = v7;\n
        g_408304 = v6;\n
        g_408300 = v8;\n
        g_4082fc = v9;\n
        g_4082f8 = v10;\n
        g_4082f4 = v11;\n
        g_408320 = v12;\n
        g_408314 = v13;\n
        g_4082f0 = v14;\n
        g_4082ec = v15;\n
        g_4082e8 = v16;\n
        g_4082e4 = v17;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v18 & 0x400 | v19 * 0x200000 & 0x200000 | v20 * 0x40000 & 0x40000;\n
        g_408318 = v0;\n
        g_40830c = v3;\n
        g_408310 = *(&v4);\n
        g_40831c = &v5;\n
        g_408258 = 65537;\n
        g_408214 = g_408310;\n
        g_408208 = 3221226505;\n
        g_40820c = 1;\n
        g_408218 = 1;\n
        g_40821c = 2;\n
        v1 = g_4080c0;\n
        v2 = g_408100;\n
        sub_4067e0();\n
        v21 = v3;\n
        return;\n
    }\n
}\n
", "4220080:sub_4064b0": "extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern unsigned short g_4082e4;\n
extern unsigned short g_4082e8;\n
extern unsigned short g_4082ec;\n
extern unsigned short g_4082f0;\n
extern unsigned int g_4082f4;\n
extern unsigned int g_4082f8;\n
extern unsigned int g_4082fc;\n
extern unsigned int g_408300;\n
extern unsigned int g_408304;\n
extern unsigned int g_408308;\n
extern unsigned int g_40830c;\n
extern unsigned int g_408310;\n
extern unsigned short g_408314;\n
extern unsigned int g_408318;\n
extern unsigned int g_40831c;\n
extern unsigned short g_408320;\n
\n
int sub_4064b0()\n
{\n
    unsigned int v0;  // [bp-0x324]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned short v10;  // ss\n
    unsigned short v11;  // cs\n
    unsigned short v12;  // ds\n
    unsigned short v13;  // es\n
    unsigned short v14;  // fs\n
    unsigned short v15;  // gs\n
    unsigned int v16;  // d\n
    unsigned int v17;  // id\n
    unsigned int v18;  // ac\n
    unsigned int v19;  // ebp\n
\n
    v1 = &v2;\n
    v4 = IsProcessorFeaturePresent(23);\n
    if (!v4)\n
    {\n
        g_408308 = v4;\n
        g_408304 = v5;\n
        g_408300 = v6;\n
        g_4082fc = v7;\n
        g_4082f8 = v8;\n
        g_4082f4 = v9;\n
        g_408320 = v10;\n
        g_408314 = v11;\n
        g_4082f0 = v12;\n
        g_4082ec = v13;\n
        g_4082e8 = v14;\n
        g_4082e4 = v15;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v16 & 0x400 | v17 * 0x200000 & 0x200000 | v18 * 0x40000 & 0x40000;\n
        g_408318 = v0;\n
        g_40830c = v1;\n
        g_408310 = *(&v2);\n
        g_40831c = &v3;\n
        g_408214 = g_408310;\n
        g_408208 = 3221226505;\n
        g_40820c = 1;\n
        g_408218 = 1;\n
        g_40821c = v3;\n
        sub_4067e0();\n
        v19 = v1;\n
        return;\n
    }\n
}\n
", "4220105:sub_4064c9": "int sub_4064c9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220105\n
}\n
", "4220304:sub_406590": "extern unsigned int g_408208;\n
extern unsigned int g_40820c;\n
extern unsigned int g_408214;\n
extern unsigned int g_408218;\n
extern unsigned int g_40821c;\n
extern char g_408220;\n
extern unsigned short g_4082e4;\n
extern unsigned short g_4082e8;\n
extern unsigned short g_4082ec;\n
extern unsigned short g_4082f0;\n
extern unsigned int g_4082f4;\n
extern unsigned int g_4082f8;\n
extern unsigned int g_4082fc;\n
extern unsigned int g_408300;\n
extern unsigned int g_408304;\n
extern unsigned int g_408308;\n
extern unsigned int g_40830c;\n
extern unsigned int g_408310;\n
extern unsigned short g_408314;\n
extern unsigned int g_408318;\n
extern unsigned int g_40831c;\n
extern unsigned short g_408320;\n
\n
int sub_406590()\n
{\n
    unsigned int v0;  // [bp-0x328]\n
    unsigned int v1[1056905];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    void* v5;  // [bp+0x8], Other Possible Types: unsigned int, char\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edi\n
    unsigned short v13;  // ss\n
    unsigned short v14;  // cs\n
    unsigned short v15;  // ds\n
    unsigned short v16;  // es\n
    unsigned short v17;  // fs\n
    unsigned short v18;  // gs\n
    unsigned int v19;  // d\n
    unsigned int v20;  // id\n
    unsigned int v21;  // ac\n
    unsigned int v22;  // ebp\n
\n
    v2 = &v3;\n
    v7 = IsProcessorFeaturePresent(23);\n
    if (!v7)\n
    {\n
        g_408308 = v7;\n
        g_408304 = v8;\n
        g_408300 = v9;\n
        g_4082fc = v10;\n
        g_4082f8 = v11;\n
        g_4082f4 = v12;\n
        g_408320 = v13;\n
        g_408314 = v14;\n
        g_4082f0 = v15;\n
        g_4082ec = v16;\n
        g_4082e8 = v17;\n
        g_4082e4 = v18;\n
        v0 = [D] x86g_calculate_eflags_all(0xf<32>, 0x0<32>, 0x0<32>, 0x0<32>) | 514 | v19 & 0x400 | v20 * 0x200000 & 0x200000 | v21 * 0x40000 & 0x40000;\n
        g_408318 = v0;\n
        g_40830c = v2;\n
        g_408310 = *(&v3);\n
        g_40831c = &v4;\n
        g_408214 = g_408310;\n
        g_408208 = 3221226505;\n
        g_40820c = 1;\n
        if (*(&v5) > 0 && !*(&v6))\n
            v5 = 0;\n
        if (v5 > 14)\n
            v5 -= 1;\n
        g_408218 = v5 + 1;\n
        g_40821c = v4;\n
        for (v1[0] = 0; v1 < v5; v1 = &v1[0] + 1)\n
        {\n
            *((0x4 * v1 + &g_408220)) = *((*(&v6) + v1 * 4));\n
        }\n
        sub_4067e0();\n
        v22 = v2;\n
        return;\n
    }\n
}\n
", "4220329:sub_4065a9": "int sub_4065a9()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220329\n
}\n
", "4220608:sub_4066c0": "int sub_4066c0()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return sub_4064b0(8);\n
}\n
", "4220651:sub_4066eb": "int sub_4066eb()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4220651\n
}\n
", "4220896:sub_4067e0": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_4067e0(EXCEPTION_POINTERS *v2)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    SetUnhandledExceptionFilter(NULL);\n
    UnhandledExceptionFilter(v2);\n
    return TerminateProcess(GetCurrentProcess(), 3221226505);\n
}\n
", "4220944:sub_406810": "char sub_406810()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4220960:sub_406820": "char sub_406820()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4220976:sub_406830": "char sub_406830()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4220992:sub_406840": "char sub_406840()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4221008:sub_406850": "char sub_406850()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 1;\n
}\n
", "4221024:sub_406860": "int sub_406860()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
\n
    v0 = &v1;\n
    return 0;\n
}\n
", "4221040:sub_406870": "extern unsigned int g_4081f8;\n
\n
int sub_406870(unsigned int v23)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v21;  // [bp-0x4]\n
    char v22;  // [bp+0x0]\n
\n
    v21 = &v22;\n
    if (g_4081f8 < 1)\n
        return v23;\n
    if (v23 != 3221226164 && v23 != 3221226165)\n
        return v23;\n
    v18 = 1;\n
    v17 = 2;\n
    v16 = 4;\n
    v15 = 8;\n
    v14 = 16;\n
    v13 = 32;\n
    v12 = 63;\n
    v11 = 128;\n
    v10 = 0x100;\n
    v9 = 0x200;\n
    v8 = 0x400;\n
    v7 = 0x800;\n
    v6 = 0x1000;\n
    v5 = 129;\n
    v4 = 258;\n
    v3 = 516;\n
    v2 = 1032;\n
    v1 = 2064;\n
    v0 = 4128;\n
    v19 = [D] x86g_create_mxcsr(And(sseround<4>, 0x3<32>));\n
    v20 = v19 ^ 63;\n
    return (!(v20 & 129) ? (!(v20 & 516) ? (!(v20 & 258) ? (!(v20 & 1032) ? (!(v20 & 2064) ? (!(v20 & 4128) ? v23 : 3221225615) : 3221225619) : 3221225617) : 3221225616) : 3221225614) : 3221225616);\n
}\n
", "4221348:cgc_deallocate": "int cgc_deallocate()\n
{\n
    return ::kernel32.dll::cgc_deallocate();\n
}\n
", "4221354:cgc_allocate": "int cgc_allocate()\n
{\n
    return ::kernel32.dll::cgc_allocate();\n
}\n
", "4221360:cgc_transmit": "int cgc_transmit()\n
{\n
    return ::kernel32.dll::cgc_transmit();\n
}\n
", "4221366:cgc_log2": "int cgc_log2()\n
{\n
    return ::kernel32.dll::cgc_log2();\n
}\n
", "4221372:cgc_atan2": "int cgc_atan2()\n
{\n
    return ::kernel32.dll::cgc_atan2();\n
}\n
", "4221378:cgc_cos": "int cgc_cos()\n
{\n
    return ::kernel32.dll::cgc_cos();\n
}\n
", "4221384:cgc_sin": "int cgc_sin()\n
{\n
    return ::kernel32.dll::cgc_sin();\n
}\n
", "4221390:cgc_receive": "int cgc_receive()\n
{\n
    return ::kernel32.dll::cgc_receive();\n
}\n
", "4221396:cgc_sqrt": "int cgc_sqrt()\n
{\n
    return ::kernel32.dll::cgc_sqrt();\n
}\n
", "4221402:cgc_pow": "int cgc_pow()\n
{\n
    return ::kernel32.dll::cgc_pow();\n
}\n
", "4221408:cgc_log": "int cgc_log()\n
{\n
    return ::kernel32.dll::cgc_log();\n
}\n
", "4221414:sub_4069e6": "int sub_4069e6(unsigned long long *v0)\n
{\n
    return QueryPerformanceCounter(v0);\n
}\n
", "4221420:sub_4069ec": "int sub_4069ec()\n
{\n
    return GetCurrentProcessId();\n
}\n
", "4221426:sub_4069f2": "int sub_4069f2()\n
{\n
    return GetCurrentThreadId();\n
}\n
", "4221432:sub_4069f8": "int sub_4069f8(unsigned int v0[2])\n
{\n
    return GetSystemTimeAsFileTime(v0);\n
}\n
", "4221438:sub_4069fe": "int sub_4069fe(void* v0)\n
{\n
    return InitializeSListHead(v0);\n
}\n
", "4221444:sub_406a04": "int sub_406a04()\n
{\n
    return IsDebuggerPresent();\n
}\n
", "4221450:sub_406a0a": "typedef struct EXCEPTION_POINTERS {\n
    struct EXCEPTION_RECORD *ExceptionRecord;\n
    struct CONTEXT *ContextRecord;\n
} EXCEPTION_POINTERS;\n
\n
typedef struct EXCEPTION_RECORD {\n
    unsigned int ExceptionCode;\n
    unsigned int ExceptionFlags;\n
    void* ExceptionRecord;\n
    void* ExceptionAddress;\n
    unsigned int NumberParameters;\n
    unsigned int *ExceptionInformation[15];\n
} EXCEPTION_RECORD;\n
\n
typedef struct CONTEXT {\n
    unsigned int ContextFlags;\n
    unsigned int Dr0;\n
    unsigned int Dr1;\n
    unsigned int Dr2;\n
    unsigned int Dr3;\n
    unsigned int Dr6;\n
    unsigned int Dr7;\n
    FLOATING_SAVE_AREA FloatSave;\n
    unsigned int SegGs;\n
    unsigned int SegFs;\n
    unsigned int SegEs;\n
    unsigned int SegDs;\n
    unsigned int Edi;\n
    unsigned int Esi;\n
    unsigned int Ebx;\n
    unsigned int Edx;\n
    unsigned int Ecx;\n
    unsigned int Eax;\n
    unsigned int Ebp;\n
    unsigned int Eip;\n
    unsigned int SegCs;\n
    unsigned int EFlags;\n
    unsigned int Esp;\n
    unsigned int SegSs;\n
    char ExtendedRegisters[512];\n
} CONTEXT;\n
\n
typedef struct FLOATING_SAVE_AREA {\n
    unsigned int ControlWord;\n
    unsigned int StatusWord;\n
    unsigned int TagWord;\n
    unsigned int ErrorOffset;\n
    unsigned int ErrorSelector;\n
    unsigned int DataOffset;\n
    unsigned int DataSelector;\n
    char RegisterArea[80];\n
    unsigned int Spare0;\n
} FLOATING_SAVE_AREA;\n
\n
int sub_406a0a(EXCEPTION_POINTERS *v0)\n
{\n
    return UnhandledExceptionFilter(v0);\n
}\n
", "4221456:sub_406a10": "int sub_406a10(void* v0)\n
{\n
    return SetUnhandledExceptionFilter(v0);\n
}\n
", "4221462:sub_406a16": "typedef struct STARTUPINFOW {\n
    unsigned int cb;\n
    char *lpReserved;\n
    char *lpDesktop;\n
    char *lpTitle;\n
    unsigned int dwX;\n
    unsigned int dwY;\n
    unsigned int dwXSize;\n
    unsigned int dwYSize;\n
    unsigned int dwXCountChars;\n
    unsigned int dwYCountChars;\n
    unsigned int dwFillAttribute;\n
    unsigned int dwFlags;\n
    unsigned short wShowWindow;\n
    unsigned short cbReserved2;\n
    char *lpReserved2;\n
    unsigned int *hStdInput;\n
    unsigned int *hStdOutput;\n
    unsigned int *hStdError;\n
} STARTUPINFOW;\n
\n
int sub_406a16(STARTUPINFOW *v0)\n
{\n
    return GetStartupInfoW(v0);\n
}\n
", "4221468:sub_406a1c": "int sub_406a1c(unsigned int v0)\n
{\n
    return IsProcessorFeaturePresent(v0);\n
}\n
", "4221474:sub_406a22": "int sub_406a22(char *v0)\n
{\n
    return GetModuleHandleW(v0);\n
}\n
", "4221480:__current_exception": "int __current_exception()\n
{\n
    return ::kernel32.dll::__current_exception();\n
}\n
", "4221486:__current_exception_context": "int __current_exception_context()\n
{\n
    return ::kernel32.dll::__current_exception_context();\n
}\n
", "4221492:__std_type_info_destroy_list": "int __std_type_info_destroy_list()\n
{\n
    return ::kernel32.dll::__std_type_info_destroy_list();\n
}\n
", "4221498:_except_handler4_common": "int _except_handler4_common()\n
{\n
    return ::kernel32.dll::_except_handler4_common();\n
}\n
", "4221504:memset": "int memset()\n
{\n
    return ::kernel32.dll::memset();\n
}\n
", "4221510:__p___argc": "int __p___argc()\n
{\n
    return ::kernel32.dll::__p___argc();\n
}\n
", "4221516:__p___argv": "int __p___argv()\n
{\n
    return ::kernel32.dll::__p___argv();\n
}\n
", "4221522:__p__commode": "int __p__commode()\n
{\n
    return ::kernel32.dll::__p__commode();\n
}\n
", "4221528:__setusermatherr": "int __setusermatherr()\n
{\n
    return ::kernel32.dll::__setusermatherr();\n
}\n
", "4221534:_c_exit": "int _c_exit()\n
{\n
    return ::kernel32.dll::_c_exit();\n
}\n
", "4221540:_cexit": "int _cexit()\n
{\n
    return ::kernel32.dll::_cexit();\n
}\n
", "4221546:_configthreadlocale": "int _configthreadlocale()\n
{\n
    return ::kernel32.dll::_configthreadlocale();\n
}\n
", "4221552:_configure_narrow_argv": "int _configure_narrow_argv()\n
{\n
    return ::kernel32.dll::_configure_narrow_argv();\n
}\n
", "4221558:_controlfp_s": "int _controlfp_s()\n
{\n
    return ::kernel32.dll::_controlfp_s();\n
}\n
", "4221564:_crt_at_quick_exit": "int _crt_at_quick_exit()\n
{\n
    return ::kernel32.dll::_crt_at_quick_exit();\n
}\n
", "4221570:_crt_atexit": "int _crt_atexit()\n
{\n
    return ::kernel32.dll::_crt_atexit();\n
}\n
", "4221576:_execute_onexit_table": "int _execute_onexit_table()\n
{\n
    return ::kernel32.dll::_execute_onexit_table();\n
}\n
", "4221582:_exit": "int _exit()\n
{\n
    return ::kernel32.dll::_exit();\n
}\n
", "4221588:_get_initial_narrow_environment": "int _get_initial_narrow_environment()\n
{\n
    return ::kernel32.dll::_get_initial_narrow_environment();\n
}\n
", "4221594:_initialize_narrow_environment": "int _initialize_narrow_environment()\n
{\n
    return ::kernel32.dll::_initialize_narrow_environment();\n
}\n
", "4221600:_initialize_onexit_table": "int _initialize_onexit_table()\n
{\n
    return ::kernel32.dll::_initialize_onexit_table();\n
}\n
", "4221606:_initterm": "int _initterm()\n
{\n
    return ::kernel32.dll::_initterm();\n
}\n
", "4221612:_initterm_e": "int _initterm_e()\n
{\n
    return ::kernel32.dll::_initterm_e();\n
}\n
", "4221618:_register_onexit_function": "int _register_onexit_function()\n
{\n
    return ::kernel32.dll::_register_onexit_function();\n
}\n
", "4221624:_register_thread_local_exe_atexit_callback": "int _register_thread_local_exe_atexit_callback()\n
{\n
    return ::kernel32.dll::_register_thread_local_exe_atexit_callback();\n
}\n
", "4221630:_seh_filter_dll": "int _seh_filter_dll()\n
{\n
    return ::kernel32.dll::_seh_filter_dll();\n
}\n
", "4221636:_seh_filter_exe": "int _seh_filter_exe()\n
{\n
    return ::kernel32.dll::_seh_filter_exe();\n
}\n
", "4221642:_set_app_type": "int _set_app_type()\n
{\n
    return ::kernel32.dll::_set_app_type();\n
}\n
", "4221648:_set_fmode": "int _set_fmode()\n
{\n
    return ::kernel32.dll::_set_fmode();\n
}\n
", "4221654:_set_new_mode": "int _set_new_mode()\n
{\n
    return ::kernel32.dll::_set_new_mode();\n
}\n
", "4221660:exit": "int exit()\n
{\n
    return ::kernel32.dll::exit();\n
}\n
", "4221666:terminate": "int terminate()\n
{\n
    return ::kernel32.dll::terminate();\n
}\n
", "4221672:sub_406ae8": "int sub_406ae8()\n
{\n
    return GetCurrentProcess();\n
}\n
", "4221678:sub_406aee": "int sub_406aee(unsigned int *v0, unsigned int a0)\n
{\n
    return TerminateProcess(v0, a0);\n
}\n
", "5242880:cgc_allocate": null, "5242884:cgc_atan2": null, "5242888:cgc_cos": null, "5242892:cgc_deallocate": null, "5242896:cgc_log": null, "5242900:cgc_log2": null, "5242904:cgc_pow": null, "5242908:cgc_receive": null, "5242912:cgc_sin": null, "5242916:cgc_sqrt": null, "5242920:cgc_transmit": null, "5242924:GetCurrentProcess": null, "5242928:GetCurrentProcessId": null, "5242932:GetCurrentThreadId": null, "5242936:GetModuleHandleW": null, "5242940:GetStartupInfoW": null, "5242944:GetSystemTimeAsFileTime": null, "5242948:InitializeSListHead": null, "5242952:IsDebuggerPresent": null, "5242956:IsProcessorFeaturePresent": null, "5242960:QueryPerformanceCounter": null, "5242964:SetUnhandledExceptionFilter": null, "5242968:TerminateProcess": null, "5242972:UnhandledExceptionFilter": null, "5242976:__current_exception": null, "5242980:__current_exception_context": null, "5242984:__std_type_info_destroy_list": null, "5242988:_except_handler4_common": null, "5242992:memset": null, "5242996:__p___argc": null, "5243000:__p___argv": null, "5243004:__p__commode": null, "5243008:__setusermatherr": null, "5243012:_c_exit": null, "5243016:_cexit": null, "5243020:_configthreadlocale": null, "5243024:_configure_narrow_argv": null, "5243028:_controlfp_s": null, "5243032:_crt_at_quick_exit": null, "5243036:_crt_atexit": null, "5243040:_execute_onexit_table": null, "5243044:_exit": null, "5243048:_get_initial_narrow_environment": null, "5243052:_initialize_narrow_environment": null, "5243056:_initialize_onexit_table": null, "5243060:_initterm": null, "5243064:_initterm_e": null, "5243068:_register_onexit_function": null, "5243072:_register_thread_local_exe_atexit_callback": null, "5243076:_seh_filter_dll": null, "5243080:_seh_filter_exe": null, "5243084:_set_app_type": null, "5243088:_set_fmode": null, "5243092:_set_new_mode": null, "5243096:exit": null, "5243100:terminate": null, "6295596:UnresolvableCallTarget": null}