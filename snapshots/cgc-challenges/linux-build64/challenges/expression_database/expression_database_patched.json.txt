{"4202496:_init": "extern struct_0 *g_407230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_407230;\n
    if (g_407230)\n
        v1 = g_407230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_407250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_407250;\n
    goto *(4223576);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202592:setjmp": "// attributes: PLT stub\n
int setjmp()\n
{\n
    ::libc.so.0::setjmp();\n
    return;\n
}\n
", "4202608:longjmp": "// attributes: PLT stub\n
int longjmp()\n
{\n
    ::libc.so.0::longjmp();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4223552);\n
}\n
", "4202656:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202693:sub_4020c5": null, "4202694:sub_4020c6": null, "4202704:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_407228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202745:sub_4020f9": null, "4202752:register_tm_clones": "extern unsigned long long g_407238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202809:sub_402139": null, "4202816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_407240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_407240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202869:sub_402175": null, "4202873:sub_402179": null, "4202880:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202889:sub_402189": null, "4202896:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4202958:sub_4021ce": null, "4202960:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0xd8]\n
    unsigned int v2;  // [bp-0xcc]\n
    unsigned int *v3;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0xc0]\n
    unsigned int v5;  // [bp-0xb4]\n
    struct struct_0 **v6;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0xa8]\n
    unsigned int v8;  // [bp-0x9c]\n
    unsigned int v9;  // [bp-0x98]\n
    unsigned int v10;  // [bp-0x94]\n
    unsigned int v11;  // [bp-0x90]\n
    unsigned int v12;  // [bp-0x8c]\n
    char v13;  // [bp-0x88]\n
    unsigned int v14;  // [bp-0x60]\n
    unsigned int v15;  // [bp-0x5c]\n
    char v16;  // [bp-0x58]\n
    char *v17;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v18;  // [bp-0x24]\n
    char *v19;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0xc]\n
    struct_1 *v22;  // rcx\n
    unsigned long long v23;  // rdx\n
    unsigned int *v24;  // rax\n
    struct_1 *v25;  // rcx\n
    unsigned int *v26;  // rdx\n
    struct_1 *v27;  // rcx\n
    unsigned long long v28;  // rdx\n
    struct struct_0 **v29;  // rax\n
    struct_1 *v30;  // rcx\n
    struct struct_0 **v31;  // rdx\n
    struct_1 *v32;  // rcx\n
    unsigned long long v33;  // rdx\n
    struct struct_0 **v34;  // rax\n
    struct_1 *v35;  // rcx\n
    struct struct_0 **v36;  // rdx\n
    struct_3 *v37;  // rax\n
    unsigned long v38;  // rax\n
    unsigned long v39;  // rax\n
    unsigned int v40;  // eax\n
    unsigned long v41;  // rax\n
    unsigned int v42;  // eax\n
    unsigned int v44;  // eax\n
\n
    v19 = a0;\n
    v18 = 0;\n
    if (!v19)\n
    {\n
        v20 = -1;\n
        return v20;\n
    }\n
    while (true)\n
    {\n
        if (!*(v19))\n
        {\n
            v20 = v18;\n
            return v20;\n
        }\n
        if (*(v19) == 36)\n
            break;\n
        cgc_putc(*(v19));\n
        v19 += 1;\n
        v18 += 1;\n
LABEL_402692:\n
    }\n
    v19 += 1;\n
    v9 = *(v19);\n
    if (!v9)\n
    {\n
        v20 = -1;\n
        return v20;\n
    }\n
    if (v9 == 36)\n
    {\n
        cgc_putc(36);\n
        goto LABEL_402660;\n
    }\n
    if (v9 != 88)\n
    {\n
        if (v9 == 100)\n
        {\n
            v4 = a1;\n
            v5 = v4->field_0;\n
            if (v5 > 40)\n
            {\n
                v25 = v4;\n
                v26 = v25->field_8;\n
                v25->field_8 = &v26[2];\n
                v3 = v26;\n
            }\n
            else\n
            {\n
                v22 = v4;\n
                v23 = v5;\n
                v24 = v23 + v22->field_10;\n
                v22->field_0 = v23 + 8;\n
                v3 = v24;\n
            }\n
            v14 = *(v3);\n
            v15 = 0;\n
            if (v14 < 0)\n
            {\n
                v14 = -(v14);\n
                cgc_putc(45);\n
                v18 += 1;\n
            }\n
            else\n
            {\n
                if (!v14)\n
                {\n
                    v15 = 1;\n
                    v16 = 48;\n
                }\n
            }\n
            while (v14)\n
            {\n
                v41 = v15;\n
                v15 = v41 + 1;\n
                (&v16)[v41] = ((v14 >> 31 CONCAT v14) /m 10 >> 32) + 48;\n
                v42 = v14;\n
                v14 = (v42 >> 31 CONCAT v42) /m 10;\n
                if (v15 >= 32)\n
                    break;\n
            }\n
            while (true)\n
            {\n
                v44 = v15;\n
                v15 = v44 - 1;\n
                if (v44 <= 0)\n
                    break;\n
                cgc_putc((&v16)[v15]);\n
                v18 += 1;\n
            }\n
            goto LABEL_402660;\n
        }\n
        else if (v9 == 115)\n
        {\n
            v7 = a1;\n
            v8 = v7->field_0;\n
            if (v8 > 40)\n
            {\n
                v30 = v7;\n
                v31 = v30->field_8;\n
                v30->field_8 = &v31[1];\n
                v6 = v31;\n
            }\n
            else\n
            {\n
                v27 = v7;\n
                v28 = v8;\n
                v29 = v28 + v27->field_10;\n
                v27->field_0 = v28 + 8;\n
                v6 = v29;\n
            }\n
            v17 = *(v6);\n
            while (*(v17))\n
            {\n
                cgc_putc(*(v17));\n
                v18 += 1;\n
                v17 += 1;\n
                if (!v17)\n
                    break;\n
            }\n
            goto LABEL_402660;\n
        }\n
        else if (v9 != 120)\n
        {\n
            v20 = -1;\n
            return v20;\n
        }\n
    }\n
    v1 = a1;\n
    v2 = v1->field_0;\n
    if (v2 > 40)\n
    {\n
        v35 = v1;\n
        v36 = v35->field_8;\n
        v35->field_8 = &v36[1];\n
        v0 = v36;\n
    }\n
    else\n
    {\n
        v32 = v1;\n
        v33 = v2;\n
        v34 = v33 + v32->field_10;\n
        v32->field_0 = v33 + 8;\n
        v0 = v34;\n
    }\n
    v11 = *(v0);\n
    v12 = 0;\n
    while (v11)\n
    {\n
        v10 = v11 & 15;\n
        v11 >>= 4;\n
        if (v10 < 10)\n
        {\n
            v37 = v12;\n
            v12 = v37 + 1;\n
            *((&v13 + v37)) = v10 + 48;\n
        }\n
        else if (*(v19) == 120)\n
        {\n
            v38 = v12;\n
            v12 = v38 + 1;\n
            (&v13)[v38] = v10 + 87;\n
        }\n
        else\n
        {\n
            v39 = v12;\n
            v12 = v39 + 1;\n
            (&v13)[v39] = v10 + 55;\n
        }\n
        if (v12 >= 32)\n
            break;\n
    }\n
    while (true)\n
    {\n
        v40 = v12;\n
        v12 = v40 - 1;\n
        if (v40 <= 0)\n
            break;\n
        cgc_putc((&v13)[v12]);\n
        v18 += 1;\n
    }\n
LABEL_402660:\n
    v19 += 1;\n
    goto LABEL_402692;\n
}\n
", "4204201:sub_4026a9": null, "4204208:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4204368:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4204459:sub_4027ab": null, "4204464:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4204515:sub_4027e3": null, "4204528:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4204556:sub_40280c": null, "4204560:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4204612:sub_402844": null, "4204624:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = a0 + 32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4204679:sub_402887": null, "4204688:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = a0 + -32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4204743:sub_4028c7": null, "4204752:cgc_strcmp": "long long cgc_strcmp(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((a0 + v0)) && !*((a1 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((a1 + v0)))\n
        {\n
            if (*((a0 + v0)) < *((a1 + v0)))\n
            {\n
                v1 = -1;\n
                return v1;\n
            }\n
            if (*((a0 + v0)) > *((a1 + v0)))\n
            {\n
                v1 = 1;\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4205007:sub_4029cf": null, "4205008:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a1 + v0)); v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4205111:sub_402a37": null, "4205120:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4205241:sub_402ab9": null, "4205248:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    if (a2 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a2; v0 += 4)\n
        {\n
            *((a0 + v0)) = *((a1 + v0));\n
        }\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return v0;\n
}\n
", "4205410:sub_402b62": null, "4205424:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4205816:sub_402cf8": null, "4205824:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4205884:sub_402d3c": null, "4205888:cgc_command_insert": "long long cgc_command_insert(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x288]\n
    unsigned int v1;  // [bp-0x278]\n
    unsigned short v2;  // [bp-0x274]\n
    unsigned int v3;  // [bp-0x270]\n
    unsigned int v4;  // [bp-0x26c]\n
    char v5;  // [bp-0x268]\n
    char v6;  // [bp-0x1d8]\n
    char v7;  // [bp-0x148]\n
    char v8;  // [bp-0xb8]\n
    char v9;  // [bp-0x30]\n
    char v10;  // [bp-0x2e]\n
    char v11;  // [bp-0x2d]\n
    char v12;  // [bp-0x2c]\n
    char v13;  // [bp-0x2b]\n
    unsigned int v14;  // [bp-0x24]\n
    unsigned long v15;  // [bp-0x20]\n
    unsigned long v16;  // [bp-0x18]\n
    char v17;  // [bp-0x9]\n
    unsigned long v19;  // rcx\n
\n
    v16 = a0;\n
    *(&v15) = a1;\n
    cgc_printf(\"First name: \", a1, a2, a3, a4);\n
    v14 = cgc_readLine(0, &v8, 128);\n
    cgc_sanitize_string(&v8);\n
    cgc_printf(\"Last name: \", a1, 128, a3, a4);\n
    v14 = cgc_readLine(0, &v7, 128);\n
    cgc_sanitize_string(&v7);\n
    cgc_printf(\"User name: \", a1, 128, a3, a4);\n
    v14 = cgc_readLine(0, &v6, 128);\n
    cgc_sanitize_string(&v6);\n
    cgc_printf(\"Birthdate (mm/dd/yy hh:mm:ss): \", a1, 128, a3, a4);\n
    v14 = cgc_readLine(0, &v5, 128);\n
    v4 = cgc_parse_date(&v5, &v9);\n
    if (!v4)\n
    {\n
        cgc_printf(\"Date parsing error.\\n
\", a1, 128, a3, a4);\n
        v17 = 0;\n
        return v17;\n
    }\n
    v0 = v10;\n
    cgc_printf(\"Date is: $d/$d/$d $d:$d:$d\\n
\", v11, v12, v13 + 1900, v9);\n
    v2 = *(&v12);\n
    v1 = *(&v9);\n
    v19 = v1 | *(&v2) * 0x100000000;\n
    v3 = cgc_db_add_record(&v6, &v8, &v7, v19);\n
    if (v3 == -1)\n
    {\n
        cgc_printf(\"Database full.\\n
\", a1, a2, v19, a4);\n
        v17 = 0;\n
        return v17;\n
    }\n
    cgc_printf(\"Data added, record $d\\n
\", v3, a2, v19, a4);\n
    v17 = 0;\n
    return v17;\n
}\n
", "4206340:sub_402f04": null, "4206352:cgc_command_remove": "long long cgc_command_remove(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v4 = a0;\n
    *(&v3) = a1;\n
    cgc_printf(\"Enter record number to remove: \", a1, a2, a3, a4);\n
    v2 = cgc_readLine(0, &v0, 128);\n
    v1 = cgc_atoi(&v0);\n
    if (!cgc_db_remove_record(v1))\n
    {\n
        cgc_printf(\"Record not found.\\n
\", a1, 128, a3, a4);\n
        return 0;\n
    }\n
    cgc_printf(\"Record $d removed.\\n
\", v1, 128, a3, a4);\n
    return 0;\n
}\n
", "4206489:sub_402f99": null, "4206496:cgc_command_update": "long long cgc_command_update(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x298]\n
    unsigned int v1;  // [bp-0x288]\n
    unsigned short v2;  // [bp-0x284]\n
    char v3[397];  // [bp-0x280]\n
    unsigned int v4;  // [bp-0x274]\n
    unsigned int v5;  // [bp-0x270]\n
    unsigned int v6;  // [bp-0x26c]\n
    char v7;  // [bp-0x268]\n
    char v8;  // [bp-0x1d8]\n
    char v9;  // [bp-0x148]\n
    char v10;  // [bp-0xb8]\n
    char v11;  // [bp-0x30]\n
    char v12;  // [bp-0x2e]\n
    char v13;  // [bp-0x2d]\n
    char v14;  // [bp-0x2c]\n
    char v15;  // [bp-0x2b]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    char v19;  // [bp-0x9]\n
    unsigned long v21;  // r8\n
\n
    v18 = a0;\n
    *(&v17) = a1;\n
    cgc_printf(\"Enter record number to update: \", a1, a2, a3, a4);\n
    v16 = cgc_readLine(0, &v7, 128);\n
    v4 = cgc_atoi(&v7);\n
    *(&v3[0]) = cgc_db_search_index(v4);\n
    if (!v3)\n
    {\n
        cgc_printf(\"Record not found.\\n
\", a1, 128, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    cgc_printf(\"Update first name ($s): \", &v3[4], 128, a3, a4);\n
    v16 = cgc_readLine(0, &v10, 128);\n
    cgc_sanitize_string(&v10);\n
    cgc_printf(\"Update last name ($s): \", &v3[133], 128, a3, a4);\n
    v16 = cgc_readLine(0, &v9, 128);\n
    cgc_sanitize_string(&v9);\n
    cgc_printf(\"Update user name ($s): \", &v3[262], 128, a3, a4);\n
    v16 = cgc_readLine(0, &v8, 128);\n
    cgc_sanitize_string(&v8);\n
    v0 = v3[393];\n
    cgc_printf(\"Update birthdate ($d/$d/$d $d:$d:$d): \", v3[394], v3[395], v3[396] + 1900, v3[391]);\n
    v16 = cgc_readLine(0, &v7, 128);\n
    v6 = cgc_parse_date(&v7, &v11);\n
    if (!v6)\n
    {\n
        cgc_printf(\"Date parsing error.\\n
\", a1, 128, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    v0 = v12;\n
    cgc_printf(\"Date is: $d/$d/$d $d:$d:$d\\n
\", v13, v14, v15 + 1900, v11);\n
    v2 = *(&v14);\n
    v1 = *(&v11);\n
    v21 = v1 | *(&v2) * 0x100000000;\n
    v5 = cgc_db_update_record(v4, &v8, &v10, &v9, v21);\n
    if (!v5)\n
    {\n
        cgc_printf(\"Record update failed.\\n
\", a1, a2, a3, v21);\n
        v19 = 0;\n
        return v19;\n
    }\n
    cgc_printf(\"Record $d updated.\\n
\", v4, a2, a3, v21);\n
    v19 = 0;\n
    return v19;\n
}\n
", "4207198:sub_40325e": null, "4207200:cgc_command_print": "long long cgc_command_print(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc4]\n
    unsigned long long v1;  // [bp-0xc0]\n
    char v2;  // [bp-0xb8]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    char v7;  // [bp-0x9]\n
\n
    v6 = a0;\n
    *(&v5) = a1;\n
    cgc_printf(\"Enter record number to print (or \\\"all\\\" for all records): \", a1, a2, a3, a4);\n
    v4 = cgc_readLine(0, &v2, 128);\n
    if (!cgc_strcmp(&v2, \"all\"))\n
    {\n
        cgc_printf(\"Printing all $d records.\\n
\", cgc_db_get_record_count(), 128, a3, a4);\n
        v3 = 0;\n
        while (true)\n
        {\n
            v0 = v3;\n
            if (v0 >= cgc_db_get_record_count())\n
                break;\n
            v1 = cgc_db_search_index(v3);\n
            if (!v1)\n
            {\n
                v7 = 0;\n
                return v7;\n
            }\n
            cgc_print_record_helper(v1);\n
            v3 += 1;\n
        }\n
    }\n
    else\n
    {\n
        v3 = cgc_atoi(&v2);\n
        v1 = cgc_db_search_index(v3);\n
        if (!v1)\n
        {\n
            cgc_printf(\"Record not found.\\n
\", \"all\", 128, a3, a4);\n
            v7 = 0;\n
            return v7;\n
        }\n
        cgc_print_record_helper(v1);\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4207506:sub_403392": null, "4207520:cgc_command_find": "extern unsigned int g_406020;\n
\n
long long cgc_command_find(unsigned long long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    char v1;  // [bp-0xc1]\n
    unsigned long v2;  // [bp-0xc0]\n
    char v3;  // [bp-0xb8]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    char v7;  // [bp-0x9]\n
    unsigned long long v9;  // r9\n
\n
    v6 = a0;\n
    v5 = a1;\n
    if (!cgc_db_get_record_count())\n
    {\n
        cgc_printf(\"Database empty. No records to find.\\n
\", a1, a2, a3, a4);\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        v1 = 0;\n
        cgc_printf(\"Enter search express (firstname or fn, lastname or ln, username or un, birthdate or bd, operators ==, !=, >, <, AND and OR):\\n
\", a1, a2, a3, a4);\n
        v4 = cgc_readLine(v0, &v3, 128);\n
        cgc_get_next_exception_frame(a0, a1, 128, a3, a4, v9);\n
        v2 = setjmp(a0);\n
        switch (v2)\n
        {\n
        case 0:\n
            cgc_parse_search_expression(&v3);\n
            goto LABEL_403492;\n
        case 1:\n
            cgc_printf(\"Invalid token\\n
\", a1, 128, &g_406020, a4);\n
            goto LABEL_403492;\n
        case 2:\n
            cgc_printf(\"Syntax error\\n
\", a1, 128, &g_406020, a4);\n
            goto LABEL_403492;\n
        case 3:\n
            cgc_printf(\"Parser overflow\\n
\", a1, 128, &g_406020, a4);\n
        }\n
LABEL_403492:\n
        cgc_pop_exception_frame();\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4207789:sub_4034ad": null, "4207792:cgc_command_login": "long long cgc_command_login(unsigned long a0, unsigned int *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = a0;\n
    if (*(a1) == 1)\n
    {\n
        cgc_printf(\"You are already logged in.\\n
\", a1, a2, a3, a4);\n
    }\n
    else\n
    {\n
        *(a1) = 1;\n
        cgc_printf(\"You logged in.\\n
\", a1, a2, a3, a4);\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4207882:sub_40350a": null, "4207888:cgc_command_logout": "long long cgc_command_logout(unsigned long a0, unsigned int *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    *(a1) = 0;\n
    cgc_printf(\"You logged out.\\n
\", a1, a2, a3, a4);\n
    return 0;\n
}\n
", "4207939:sub_403543": null, "4207952:cgc_command_exit": "long long cgc_command_exit(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long long v3;  // r9\n
\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_printf(\"Disconnecting.\\n
\", a1, a2, a3, a4);\n
    cgc__terminate(\"Disconnecting.\\n
\");\n
    return cgc_stringbeg(\"Disconnecting.\\n
\", a1, a2, a3, a4, v3);\n
}\n
", "4208000:cgc_stringbeg": "long long cgc_stringbeg(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    v3 = a1;\n
    for (v2 = 0; *(v4); v2 += 1)\n
    {\n
        if (!cgc_isspace(*(v4)))\n
            break;\n
        v4 += 1;\n
    }\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
            v1 = *(v3);\n
        if (!(v1 & 1))\n
        {\n
            v5 = v2;\n
            return v5;\n
        }\n
        v0 = cgc_tolower(*(v4));\n
        if (v0 != cgc_tolower(*(v3)))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
}\n
", "4208251:sub_40367b": null, "4208256:cgc_init_user": "long long cgc_init_user(unsigned int *a0)\n
{\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4208276:sub_403694": null, "4208288:cgc_parse_command": "extern char g_cmdTable;\n
\n
long long cgc_parse_command(char *a0, unsigned int *a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x9]\n
    unsigned long v5;  // rcx\n
    unsigned long v6;  // rcx\n
\n
    v0 = 255;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v5 = v2 * 56;\n
        if (!*((4223688 + v5)))\n
        {\n
            cgc_printf(\"Command not found.\\n
\", a1, a2, v5, a4);\n
            v3 = 255;\n
            return v3;\n
        }\n
        v1 = cgc_stringbeg(a0, (4223648 + 56 * v2));\n
        if (v1 > 0)\n
            break;\n
        v2 += 1;\n
    }\n
    v6 = v2 * 56;\n
    if ((*((4223696 + v6)) & 1) && !*(a1))\n
    {\n
        cgc_printf(\"Authentication required. Try login\\n
\", a1, a2, v6, a4);\n
        v3 = 255;\n
        return v3;\n
    }\n
    v3 = *((4223688 + 56 * v2))(&a0[v1], a1);\n
    return v3;\n
}\n
", "4208554:sub_4037aa": null, "4208560:cgc_init_database": "extern unsigned int g_recordCount;\n
\n
long long cgc_init_database()\n
{\n
    unsigned long v1;  // rax\n
\n
    g_recordCount = 0;\n
    return v1;\n
}\n
", "4208576:cgc_db_add_record": "extern unsigned int g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_add_record(unsigned int a0, unsigned int a1, unsigned int a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned short v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned short v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = a3 / 0x100000000;\n
    v2 = a3;\n
    v3 = v1;\n
    if (g_recordCount >= 64)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = g_recordCount;\n
    (&g_ddapDatabase)[100 * g_recordCount] = v0;\n
    cgc_strncpy(&(&g_ddapDatabase)[100 * g_recordCount + 1], a1, 128);\n
    cgc_strncpy(&(&g_ddapDatabase)[100 * g_recordCount + 33] + 1, a2, 128);\n
    cgc_strncpy(&(&g_ddapDatabase)[100 * g_recordCount + 65] + 2, a0, 128);\n
    cgc_memcpy(&(&g_ddapDatabase)[100 * g_recordCount + 97] + 3, &v2, 6);\n
    g_recordCount = g_recordCount + 1;\n
    v4 = v0;\n
    return v4;\n
}\n
", "4208893:sub_4038fd": null, "4208896:cgc_db_update_record": "extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_update_record(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned short v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned short v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = a4 / 0x100000000;\n
    v1 = a4;\n
    v2 = v0;\n
    if (a0 >= g_recordCount)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strncpy(&(&g_ddapDatabase)[400 * a0 + 4], a2, 128);\n
    cgc_strncpy(&(&g_ddapDatabase)[400 * a0 + 133], a3, 128);\n
    cgc_strncpy(&(&g_ddapDatabase)[400 * a0 + 262], a1, 128);\n
    cgc_memcpy(&(&g_ddapDatabase)[400 * a0 + 391], &v1, 6);\n
    v3 = 1;\n
    return v3;\n
}\n
", "4209155:sub_403a03": null, "4209168:cgc_db_remove_record": "extern unsigned int g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_remove_record(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a0 >= g_recordCount)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (g_recordCount)\n
    {\n
        g_recordCount = g_recordCount - 1;\n
        for (v0 = a0; v0 < g_recordCount; v0 += 1)\n
        {\n
            (&g_ddapDatabase)[100 * v0] = (&g_ddapDatabase)[100 + 100 * v0] - 1;\n
            cgc_strcpy(&(&g_ddapDatabase)[100 * v0 + 1], &(&g_ddapDatabase)[100 + 100 * v0 + 1]);\n
            cgc_strcpy(&(&g_ddapDatabase)[100 * v0 + 33] + 1, &(&g_ddapDatabase)[100 + 100 * v0 + 33] + 1);\n
            cgc_strcpy(&(&g_ddapDatabase)[100 * v0 + 65] + 2, &(&g_ddapDatabase)[100 + 100 * v0 + 65] + 2);\n
            cgc_memcpy(&(&g_ddapDatabase)[100 * v0 + 97] + 3, &(&g_ddapDatabase)[100 + 100 * v0 + 97] + 3, 6);\n
        }\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4209608:sub_403bc8": null, "4209616:cgc_db_get_record_count": "extern unsigned int g_recordCount;\n
\n
long long cgc_db_get_record_count()\n
{\n
    return g_recordCount;\n
}\n
", "4209628:sub_403bdc": null, "4209632:cgc_db_search_first_name": "extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_search_first_name(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= g_recordCount)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcmp(a0, &(&g_ddapDatabase)[400 * v0 + 4]))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&g_ddapDatabase)[400 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4209776:cgc_db_search_last_name": "extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_search_last_name(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= g_recordCount)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcmp(a0, &(&g_ddapDatabase)[400 * v0 + 133]))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&g_ddapDatabase)[400 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4209923:sub_403d03": null, "4209936:cgc_db_search_user_name": "extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_search_user_name(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= g_recordCount)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!cgc_strcmp(a0, &(&g_ddapDatabase)[400 * v0 + 262]))\n
        {\n
            v1 = &(&g_ddapDatabase)[400 * v0];\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4210083:sub_403da3": null, "4210096:cgc_db_search_birth_date": "typedef struct struct_0 {\n
    char padding_0[4224855];\n
    unsigned int field_407757;\n
    unsigned short field_40775b;\n
} struct_0;\n
\n
extern char g_407757;\n
extern char g_40775b;\n
extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_search_birth_date(unsigned long long a0)\n
{\n
    unsigned short v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0x1c]\n
    unsigned short v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v8;  // rax\n
\n
    v4 = a0 / 0x100000000;\n
    v5 = v4;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < g_recordCount)\n
        {\n
            v8 = v3 * 400;\n
            v2 = *((v8 + &g_40775b));\n
            v1 = *((v8 + &g_407757));\n
            v0 = v5;\n
            if (!cgc_date_compare(v1 | *(&v2) << 32, a0 | *(&v0) << 32, rdx<8>, a0))\n
            {\n
                v6 = &(&g_ddapDatabase)[400 * v3];\n
                return v6;\n
            }\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
}\n
", "4210321:sub_403e91": null, "4210336:cgc_db_search_index": "extern char g_ddapDatabase;\n
extern unsigned int g_recordCount;\n
\n
long long cgc_db_search_index(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 >= g_recordCount)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = &(&g_ddapDatabase)[400 * a0];\n
    return v0;\n
}\n
", "4210403:sub_403ee3": null, "4210416:cgc_print_record_helper": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[387];\n
    char field_187;\n
    char padding_188[1];\n
    char field_189;\n
    char field_18a;\n
    char field_18b;\n
    char field_18c;\n
} struct_0;\n
\n
long long cgc_print_record_helper(struct_0 *a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned long long v2;  // rax\n
\n
    if (a0)\n
    {\n
        cgc_printf(\"Record [$d]\\n
\", a0->field_0, a2, a3, a4);\n
        cgc_printf(\"First name: $s\\n
\", &a0->padding_4, a2, a3, a4);\n
        cgc_printf(\"Last name: $s\\n
\", &a0->padding_4[129], a2, a3, a4);\n
        cgc_printf(\"User name: $s\\n
\", &a0->padding_4[258], a2, a3, a4);\n
        v0 = a0->field_189;\n
        v2 = cgc_printf(\"Birthdate: $d/$d/$d $d:$d:$d\\n
\", a0->field_18a, a0->field_18b, a0->field_18c + 1900, a0->field_187);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4210633:sub_403fc9": null, "4210640:cgc_date_compare": "long long cgc_date_compare(unsigned long a0, unsigned long a1)\n
{\n
    unsigned short v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned short v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned short v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v3 = a0;\n
    *(&v4) = a0 / 0x100000000;\n
    v6 = v4;\n
    v5 = v3;\n
    *(&v0) = a1 / 0x100000000;\n
    v1 = a1;\n
    v2 = v0;\n
    if (*(&v6 + 1) < *(&v2 + 1))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (*(&v6 + 1) > *(&v2 + 1))\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 3) < *(&v1 + 3))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 3) > *(&v1 + 3))\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    else if (v6 < v2)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (v6 > v2)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    else if (v5 < v1)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (v5 > v1)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 1) < *(&v1 + 1))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 1) > *(&v1 + 1))\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 2) < *(&v1 + 2))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (*(&v5 + 2) <= *(&v1 + 2))\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
}\n
", "4211052:sub_40416c": null, "4211056:cgc_parse_date": "long long cgc_parse_date(char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x30]\n
    char v1;  // [bp-0x2f]\n
    char v2;  // [bp-0x2e]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x2b]\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = a0;\n
    if (!v7)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    for (v6 = v7; cgc_isspace(*(v7)); v7 += 1);\n
    if (!cgc_isdigit(*(v7)))\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v3 = *(v7) - 48;\n
    v7 += 1;\n
    if (cgc_isdigit(*(v7)))\n
    {\n
        v3 *= 10;\n
        v3 += *(v7) - 48;\n
        v7 += 1;\n
        if (*(v7) != 47)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    else if (*(v7) != 47)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v3 && v3 <= 12)\n
    {\n
        v7 += 1;\n
        if (!cgc_isdigit(*(v7)))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        v4 = *(v7) - 48;\n
        v7 += 1;\n
        if (cgc_isdigit(*(v7)))\n
        {\n
            v4 *= 10;\n
            v4 += *(v7) - 48;\n
            v7 += 1;\n
            if (*(v7) != 47)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
        else if (*(v7) != 47)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        if (v4 && v4 <= 31)\n
        {\n
            v7 += 1;\n
            if (!cgc_isdigit(*(v7)))\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v5 = *(v7) - 48;\n
            v7 += 1;\n
            if (cgc_isdigit(*(v7)))\n
            {\n
                v5 *= 10;\n
                v5 += *(v7) - 48;\n
                v7 += 1;\n
            }\n
            else if (!cgc_isspace(*(v7)))\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (v5 < 28)\n
                v5 += 100;\n
            for (; cgc_isspace(*(v7)); v7 += 1);\n
            if (!cgc_isdigit(*(v7)))\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v0 = *(v7) - 48;\n
            v7 += 1;\n
            if (cgc_isdigit(*(v7)))\n
            {\n
                v0 *= 10;\n
                v0 += *(v7) - 48;\n
                v7 += 1;\n
                if (*(v7) != 58)\n
                {\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            }\n
            else if (*(v7) != 58)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (v0 >= 24)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v7 += 1;\n
            if (!cgc_isdigit(*(v7)))\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v1 = *(v7) - 48;\n
            v7 += 1;\n
            if (cgc_isdigit(*(v7)))\n
            {\n
                v1 *= 10;\n
                v1 += *(v7) - 48;\n
                v7 += 1;\n
                if (*(v7) != 58)\n
                {\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            }\n
            else if (*(v7) != 58)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (v1 >= 60)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v7 += 1;\n
            if (!cgc_isdigit(*(v7)))\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            v2 = *(v7) - 48;\n
            v7 += 1;\n
            if (cgc_isdigit(*(v7)))\n
            {\n
                v2 *= 10;\n
                v2 += *(v7) - 48;\n
                v7 += 1;\n
            }\n
            if (v2 >= 60)\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_memcpy(a1, &v0, 6);\n
            v8 = (v7 - v6);\n
            return v8;\n
        }\n
        v8 = 0;\n
        return v8;\n
    }\n
    v8 = 0;\n
    return v8;\n
}\n
", "4212509:sub_40471d": null, "4212512:cgc_init_exception_handler": "extern char cgc_g_exceptionFrameCur;\n
extern char cgc_g_memoryGlobal;\n
\n
long long cgc_init_exception_handler()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    cgc_g_exceptionFrameCur = 0;\n
    for (v0 = 0; v0 < 0x80000; v0 += 1)\n
    {\n
        (&cgc_g_memoryGlobal)[1760 + v0] = 0;\n
    }\n
    return v0 + 1;\n
}\n
", "4212579:sub_404763": null, "4212592:cgc_get_next_exception_frame": "extern char cgc_g_exceptionFrameCur;\n
extern char g_40df70;\n
\n
long long cgc_get_next_exception_frame()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
    int tmp_20;  // tmp #20\n
\n
    if (cgc_g_exceptionFrameCur >= 5)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    tmp_20 = cgc_g_exceptionFrameCur;\n
    cgc_g_exceptionFrameCur = cgc_g_exceptionFrameCur + 1;\n
    v0 = &(&g_40df70)[64 * tmp_20];\n
    return v0;\n
}\n
", "4212677:sub_4047c5": null, "4212688:cgc_get_current_exception_frame": "extern char cgc_g_exceptionFrameCur;\n
extern char g_40df70;\n
\n
long long cgc_get_current_exception_frame()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (cgc_g_exceptionFrameCur <= 0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = &(&g_40df70)[64 + 64 * cgc_g_exceptionFrameCur];\n
    return v0;\n
}\n
", "4212764:sub_40481c": null, "4212768:cgc_pop_exception_frame": "extern char cgc_g_exceptionFrameCur;\n
extern char g_40df70;\n
\n
long long cgc_pop_exception_frame()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (cgc_g_exceptionFrameCur <= 0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_g_exceptionFrameCur = cgc_g_exceptionFrameCur - 1;\n
    v0 = &(&g_40df70)[64 * cgc_g_exceptionFrameCur];\n
    return v0;\n
}\n
", "4212854:sub_404876": null, "4212864:cgc_peek_parser_stack": "extern char cgc_g_memoryGlobal;\n
extern char cgc_g_parseStackSize;\n
\n
long long cgc_peek_parser_stack(unsigned int *a0)\n
{\n
    if (!cgc_g_parseStackSize)\n
    {\n
        *(a0) = 2;\n
        return a0;\n
    }\n
    memcpy(a0, &(&cgc_g_memoryGlobal)[72 + 72 * cgc_g_parseStackSize], 72);\n
    return a0;\n
}\n
", "4212961:sub_4048e1": null, "4212976:cgc_pop_parser_stack": "extern char cgc_g_memoryGlobal;\n
extern char cgc_g_parseStackSize;\n
\n
long long cgc_pop_parser_stack(unsigned int *a0)\n
{\n
    if (!cgc_g_parseStackSize)\n
    {\n
        *(a0) = 2;\n
        return a0;\n
    }\n
    cgc_g_parseStackSize = cgc_g_parseStackSize - 1;\n
    memcpy(a0, &(&cgc_g_memoryGlobal)[72 * cgc_g_parseStackSize], 72);\n
    return a0;\n
}\n
", "4213082:sub_40495a": null, "4213088:cgc_push_parser_stack": "extern char cgc_g_memoryGlobal;\n
extern char cgc_g_parseStackSize;\n
\n
long long cgc_push_parser_stack()\n
{\n
    void* v0;  // [bp-0x10]\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
\n
    v0 = &v1;\n
    if (cgc_g_parseStackSize >= 20)\n
    {\n
        cgc_get_current_exception_frame();\n
        v2 = longjmp(v3, v4);\n
        return v2;\n
    }\n
    v2 = memcpy(&(&cgc_g_memoryGlobal)[72 * cgc_g_parseStackSize], v0, 72);\n
    *(&v2) = cgc_g_parseStackSize + 1;\n
    cgc_g_parseStackSize = cgc_g_parseStackSize + 1;\n
    return v2;\n
}\n
", "4213200:cgc_strbeg": "long long cgc_strbeg(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!a0[v0] && !a1[v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!a1[v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (!a0[v0])\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (a0[v0] == a1[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4213401:sub_404a99": null, "4213408:cgc_parse_get_symbol": "extern struct_0 g_parseTable;\n
\n
long long cgc_parse_get_symbol(char *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    for (v0 = 0; cgc_isspace(a0[v0]); v0 += 1);\n
    if (!a0[v0])\n
    {\n
        *(a1) = v0;\n
        v2 = 13;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*(&(&g_parseTable.field_0)[8 + 16 * v1]) == 12)\n
        {\n
            *(a1) = v0;\n
            v2 = 12;\n
            return v2;\n
        }\n
        else if (cgc_strbeg(&a0[v0], *(&(&g_parseTable.field_0)[16 * v1])))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 += cgc_strlen(*(&(&g_parseTable.field_0)[16 * v1]));\n
            *(a1) = v0;\n
            v2 = *(&(&g_parseTable.field_0)[8 + 16 * v1]);\n
            return v2;\n
        }\n
    }\n
}\n
", "4213720:sub_404bd8": null, "4213728:cgc_is_symbol_close_paran": "long long cgc_is_symbol_close_paran(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 == 1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213769:sub_404c09": null, "4213776:cgc_is_symbol_open_paran": "long long cgc_is_symbol_open_paran(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213817:sub_404c39": null, "4213824:cgc_is_symbol_result_operator": "long long cgc_is_symbol_result_operator(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 - 6 <= 1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213880:sub_404c78": null, "4213888:cgc_is_symbol_db_operator": "long long cgc_is_symbol_db_operator(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 - 2 <= 3)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213944:sub_404cb8": null, "4213952:cgc_is_symbol_element": "long long cgc_is_symbol_element(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 - 8 <= 3)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214008:sub_404cf8": null, "4214016:cgc_is_symbol_birthdate": "long long cgc_is_symbol_birthdate(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 == 11)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214057:sub_404d29": null, "4214064:cgc_do_date_search": "typedef struct struct_0 {\n
    char padding_0[391];\n
    unsigned int field_187;\n
    unsigned short field_18b;\n
} struct_0;\n
\n
long long cgc_do_date_search(unsigned long a0, unsigned long a1)\n
{\n
    int tmp_14;  // tmp #14\n
    int v0;  // [bp-0xe8]\n
    int v1;  // [bp-0xd8]\n
    int v2;  // [bp-0xc8]\n
    int v3;  // [bp-0xb8]\n
    unsigned long long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x94]\n
    unsigned short v7;  // [bp-0x8c]\n
    unsigned int v8;  // [bp-0x88]\n
    unsigned short v9;  // [bp-0x84]\n
    unsigned int v10;  // [bp-0x7c]\n
    struct_0 *v11;  // [bp-0x78]\n
    unsigned int v12;  // [bp-0x70]\n
    char v13;  // [bp-0x6c]\n
    char v14;  // [bp-0x60]\n
    char v15;  // [bp-0x50]\n
    char v16;  // [bp-0x40]\n
    char v17;  // [bp-0x30]\n
    char v18;  // [bp-0x2c]\n
    unsigned int v19;  // [bp-0x24]\n
    unsigned int v20;  // [bp-0x20]\n
    unsigned short v21;  // [bp-0x14]\n
    unsigned short v22;  // [bp-0xc]\n
    struct_0 *v24;  // rax\n
\n
    v21 = a1 / 0x100000000;\n
    v22 = v21;\n
    v19 = cgc_db_get_record_count();\n
    v12 = 1;\n
    v18 = 0;\n
    for (v20 = 0; v20 < v19; v20 += 1)\n
    {\n
        v11 = cgc_db_search_index(v20);\n
        v24 = v11;\n
        v9 = *((&v24->field_187 + 3));\n
        v8 = *(&(&v24->padding_0)[1]);\n
        v7 = v22;\n
        v10 = cgc_date_compare(v8 | *(&v9) * 0x100000000, a1 | *(&v7) * 0x100000000);\n
        v6 = 0;\n
        v5 = a0 - 2;\n
        switch (v5)\n
        {\n
        case 0:\n
            if (!v10)\n
                v6 = 1;\n
            break;\n
        case 1:\n
            if (v10)\n
                v6 = 1;\n
            break;\n
        case 2:\n
            if (v10 == -1)\n
                v6 = 1;\n
            break;\n
        case 3:\n
            if (v10 == 1)\n
                v6 = 1;\n
            break;\n
        default:\n
            cgc_get_current_exception_frame();\n
            longjmp(v8 | *(&v9) * 0x100000000, a1 | *(&v7) * 0x100000000);\n
        }\n
        if (v6)\n
        {\n
            tmp_14 = v18;\n
            v18 += 1;\n
            (&v13)[tmp_14] = v20;\n
        }\n
    }\n
    v4 = *(&v17);\n
    *(&v3) = *(&v16);\n
    *(&v2) = *(&v15);\n
    *(&v1) = *(&v14);\n
    *(&v0) = *(&v12);\n
    return cgc_push_parser_stack();\n
}\n
", "4214534:sub_404f06": null, "4214544:cgc_do_string_search": "long long cgc_do_string_search(unsigned long long a0, unsigned long long a1, unsigned int a2)\n
{\n
    int v0;  // [bp-0xd8]\n
    int v1;  // [bp-0xc8]\n
    int v2;  // [bp-0xb8]\n
    int v3;  // [bp-0xa8]\n
    unsigned long long v4;  // [bp-0x98]\n
    unsigned long v5;  // [bp-0x88]\n
    unsigned int v6;  // [bp-0x78]\n
    unsigned int v7;  // [bp-0x74]\n
    unsigned long v8;  // [bp-0x70]\n
    unsigned int v9;  // [bp-0x68]\n
    char v10;  // [bp-0x64]\n
    char v11;  // [bp-0x58]\n
    char v12;  // [bp-0x48]\n
    char v13;  // [bp-0x38]\n
    char v14;  // [bp-0x28]\n
    char v15;  // [bp-0x24]\n
    unsigned int v16;  // [bp-0x20]\n
    unsigned int v17;  // [bp-0x1c]\n
    char v18;  // [bp-0x8]\n
    unsigned long long v20;  // rbp\n
\n
    v20 = &v18;\n
    v16 = cgc_db_get_record_count();\n
    v9 = 1;\n
    v15 = 0;\n
    for (v17 = 0; v17 < v16; v17 += 1)\n
    {\n
        v8 = cgc_db_search_index(v17);\n
        v6 = 0;\n
        if (a0 == 8)\n
        {\n
            v7 = cgc_strcmp(v8 + 133, a2);\n
        }\n
        else if (a0 == 9)\n
        {\n
            v7 = cgc_strcmp(v8 + 4, a2);\n
        }\n
        else if (a0 != 10)\n
        {\n
            cgc_get_current_exception_frame();\n
            longjmp(a0, a1);\n
        }\n
        else\n
        {\n
            v7 = cgc_strcmp(v8 + 262, a2);\n
        }\n
        v5 = a1 - 2;\n
        switch (v5)\n
        {\n
        case 0:\n
            if (!v7)\n
                v6 = 1;\n
            break;\n
        case 1:\n
            if (v7)\n
                v6 = 1;\n
            break;\n
        case 2:\n
            if (v7 == -1)\n
                v6 = 1;\n
            break;\n
        case 3:\n
            if (v7 == 1)\n
                v6 = 1;\n
            break;\n
        default:\n
            cgc_get_current_exception_frame();\n
            longjmp(a0, a1);\n
        }\n
        if (v6)\n
        {\n
            v15 += 1;\n
            (&v10)[v15] = v17;\n
        }\n
    }\n
    v4 = *(&v14);\n
    *(&v3) = *(&v13);\n
    *(&v2) = *(&v12);\n
    *(&v1) = *(&v11);\n
    *(&v0) = *(&v9);\n
    return cgc_push_parser_stack();\n
}\n
", "4215034:sub_4050fa": null, "4215040:cgc_do_result_search": "typedef struct struct_1 {\n
    char padding_0[68];\n
    char field_44;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[67];\n
    char field_44;\n
} struct_0;\n
\n
long long cgc_do_result_search(unsigned long a0)\n
{\n
    int tmp_24;  // tmp #24\n
    int v0;  // [bp-0x138]\n
    int v1;  // [bp-0x128]\n
    int v2;  // [bp-0x118]\n
    int v3;  // [bp-0x108]\n
    unsigned long long v4;  // [bp-0xf8]\n
    struct_1 *v5;  // [bp-0xe8]\n
    struct_0 *v6;  // [bp-0xe0]\n
    unsigned int v7;  // [bp-0xd8]\n
    unsigned int v8;  // [bp-0xd4]\n
    unsigned int v9;  // [bp-0xd0]\n
    unsigned int v10;  // [bp-0xcc]\n
    unsigned int v11;  // [bp-0xc8]\n
    unsigned int v12;  // [bp-0xc4]\n
    unsigned int v13;  // [bp-0xc0]\n
    char v14;  // [bp-0xbc]\n
    char v15;  // [bp-0xb0]\n
    char v16;  // [bp-0xa0]\n
    char v17;  // [bp-0x90]\n
    char v18;  // [bp-0x80]\n
    char v19;  // [bp-0x7c]\n
    unsigned int v20;  // [bp-0x78]\n
    unsigned int v21;  // [bp-0x74]\n
    unsigned int v22;  // [bp-0x70]\n
    unsigned int v23;  // [bp-0x6c]\n
    unsigned int v24;  // [bp-0x68]\n
    char v25;  // [bp-0x64]\n
    char v26;  // [bp-0x58]\n
    char v27;  // [bp-0x48]\n
    char v28;  // [bp-0x38]\n
    char v29;  // [bp-0x28]\n
    char v30;  // [bp-0x24]\n
    unsigned int v31;  // [bp-0x1c]\n
    unsigned int v32;  // [bp-0x18]\n
    unsigned int v33;  // [bp-0x14]\n
    unsigned int v34;  // [bp-0x10]\n
    unsigned long v35;  // [bp+0x8]\n
    char v36;  // [bp+0x50]\n
    struct_0 *v37;  // rax, Other Possible Types: unsigned long long, unsigned long\n
\n
    v5 = &v36;\n
    v37 = &v35;\n
    v6 = &v35;\n
    if (a0 != 6)\n
    {\n
        if (a0 != 7)\n
            return v37;\n
        v23 = v6->field_44;\n
        v22 = v5->field_44;\n
        v13 = 1;\n
        v19 = 0;\n
        for (v21 = 0; v21 < v23; v21 += 1)\n
        {\n
            v12 = 0;\n
            v11 = v19;\n
            v10 = 0;\n
            for (v12 = 0; v12 < v11; v12 += 1)\n
            {\n
                if (v6->padding_1[3 + v21] == (&v14)[v12])\n
                {\n
                    v10 = 1;\n
                    break;\n
                }\n
            }\n
            if (!v10)\n
            {\n
                tmp_24 = v19;\n
                v19 += 1;\n
                (&v14)[tmp_24] = v6->padding_1[3 + v21];\n
            }\n
        }\n
        for (v20 = 0; v20 < v22; v20 += 1)\n
        {\n
            v9 = 0;\n
            v8 = v19;\n
            v7 = 0;\n
            for (v9 = 0; v9 < v8; v9 += 1)\n
            {\n
                if (v5->padding_0[4 + v20] == (&v14)[v9])\n
                {\n
                    v7 = 1;\n
                    break;\n
                }\n
            }\n
            if (!v7)\n
            {\n
                tmp_24 = v19;\n
                v19 += 1;\n
                (&v14)[tmp_24] = v5->padding_0[4 + v20];\n
            }\n
        }\n
        v4 = *(&v18);\n
        *(&v3) = *(&v17);\n
        *(&v2) = *(&v16);\n
        *(&v1) = *(&v15);\n
        *(&v0) = *(&v13);\n
        v37 = cgc_push_parser_stack();\n
    }\n
    else\n
    {\n
        v34 = v6->field_44;\n
        v33 = v5->field_44;\n
        v24 = 1;\n
        v30 = 0;\n
        for (v32 = 0; v32 < v34; v32 += 1)\n
        {\n
            for (v31 = 0; v31 < v33; v31 += 1)\n
            {\n
                if (v6->padding_1[3 + v32] == v5->padding_0[4 + v31])\n
                {\n
                    tmp_24 = v30;\n
                    v30 += 1;\n
                    (&v25)[tmp_24] = v6->padding_1[3 + v32];\n
                }\n
            }\n
        }\n
        v4 = *(&v29);\n
        *(&v3) = *(&v28);\n
        *(&v2) = *(&v27);\n
        *(&v1) = *(&v26);\n
        *(&v0) = *(&v24);\n
        v37 = cgc_push_parser_stack();\n
        return v37;\n
    }\n
}\n
", "4215890:sub_405452": null, "4215904:cgc_do_reduce_stack": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char cgc_g_memoryGlobal;\n
extern char cgc_g_parseStackSize;\n
\n
long long cgc_do_reduce_stack()\n
{\n
    int <0x405460[is_5]|Stack bp-0x178, 1 B>;  // [bp-0x178]\n
    int v0;  // [bp-0x178]\n
    int v1;  // [bp-0x168]\n
    int v2;  // [bp-0x158]\n
    int v3;  // [bp-0x148]\n
    unsigned long long v4;  // [bp-0x138]\n
    int v5;  // [bp-0x130]\n
    int v6;  // [bp-0x120]\n
    int v7;  // [bp-0x110]\n
    int v8;  // [bp-0x100]\n
    unsigned long long v9;  // [bp-0xf0]\n
    struct_0 *v10;  // [bp-0xe8]\n
    unsigned int v11;  // [bp-0xe0]\n
    char v12;  // [bp-0xd0]\n
    char v13;  // [bp-0xc0]\n
    char v14;  // [bp-0xb0]\n
    char v15;  // [bp-0xa0]\n
    unsigned int v16;  // [bp-0x98]\n
    char v17;  // [bp-0x94]\n
    unsigned int v18;  // [bp-0x50]\n
    char v19;  // [bp-0x40]\n
    char v20;  // [bp-0x30]\n
    char v21;  // [bp-0x20]\n
    char v22;  // [bp-0x10]\n
    unsigned int *v24;  // rax, Other Possible Types: unsigned long long, unsigned long\n
\n
    while (true)\n
    {\n
        if (cgc_g_parseStackSize <= 2)\n
            return cgc_g_parseStackSize;\n
        v24 = &(&cgc_g_memoryGlobal)[72 + 72 * cgc_g_parseStackSize];\n
        if (*(v24) != 1)\n
            break;\n
        v24 = &(&cgc_g_memoryGlobal)[144 + 72 * cgc_g_parseStackSize];\n
        if (*(v24))\n
            break;\n
        v24 = cgc_is_symbol_result_operator(*(&(&cgc_g_memoryGlobal)[140 + 72 * cgc_g_parseStackSize]));\n
        if (!v24)\n
            break;\n
        v24 = &(&cgc_g_memoryGlobal)[216 + 72 * cgc_g_parseStackSize];\n
        if (*(v24) != 1)\n
            break;\n
        cgc_pop_parser_stack(&v18);\n
        cgc_pop_parser_stack(&v16);\n
        cgc_pop_parser_stack(&v11);\n
        v10 = &<0x405460[is_5]|Stack bp-0x178, 1 B>;\n
        v9 = *(&v22);\n
        *(&v8) = *(&v21);\n
        *(&v7) = *(&v20);\n
        *(&v6) = *(&v19);\n
        *(&v5) = *(&v18);\n
        v4 = *(&v15);\n
        *(&v3) = *(&v14);\n
        *(&v2) = *(&v13);\n
        *(&v1) = *(&v12);\n
        *(&v0) = *(&v11);\n
        cgc_do_result_search(*(&v17));\n
    }\n
    return v24;\n
}\n
", "4216263:sub_4055c7": null, "4216272:cgc_parse_search_expression": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char cgc_g_parseStackSize;\n
\n
long long cgc_parse_search_expression(char *a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int v0;  // [bp-0x408]\n
    int v1;  // [bp-0x3f8]\n
    int v2;  // [bp-0x3e8]\n
    int v3;  // [bp-0x3d8]\n
    unsigned long long v4;  // [bp-0x3c8]\n
    char v5;  // [bp-0x3b1]\n
    unsigned int v6;  // [bp-0x3b0]\n
    unsigned int v7;  // [bp-0x3ac]\n
    unsigned int v8;  // [bp-0x3a8]\n
    char v9;  // [bp-0x3a4]\n
    char v10;  // [bp-0x364]\n
    unsigned int v11;  // [bp-0x360]\n
    unsigned int v12;  // [bp-0x35c]\n
    char v13;  // [bp-0x350]\n
    char v14;  // [bp-0x340]\n
    char v15;  // [bp-0x330]\n
    char v16;  // [bp-0x320]\n
    unsigned int v17;  // [bp-0x318]\n
    char v18;  // [bp-0x314]\n
    unsigned int v19;  // [bp-0x2d0]\n
    unsigned int v20;  // [bp-0x2cc]\n
    char v21;  // [bp-0x2c0]\n
    char v22;  // [bp-0x2b0]\n
    char v23;  // [bp-0x2a0]\n
    char v24;  // [bp-0x290]\n
    unsigned int v25;  // [bp-0x288]\n
    unsigned int v26;  // [bp-0x240]\n
    char v27;  // [bp-0x23c]\n
    unsigned int v28;  // [bp-0x1f8]\n
    char v29;  // [bp-0x1e8]\n
    char v30;  // [bp-0x1d8]\n
    char v31;  // [bp-0x1c8]\n
    char v32;  // [bp-0x1b8]\n
    unsigned int v33;  // [bp-0x1b0]\n
    unsigned int v34;  // [bp-0x1ac]\n
    char v35;  // [bp-0x1a0]\n
    char v36;  // [bp-0x190]\n
    char v37;  // [bp-0x180]\n
    char v38;  // [bp-0x170]\n
    unsigned int v39;  // [bp-0x168]\n
    char v40;  // [bp-0x164]\n
    unsigned int v41;  // [bp-0x11c]\n
    char v42;  // [bp-0x118]\n
    unsigned int v43;  // [bp-0x90]\n
    unsigned short v44;  // [bp-0x8c]\n
    unsigned int v45;  // [bp-0x84]\n
    char v46;  // [bp-0x80]\n
    char v47;  // [bp-0x7c]\n
    unsigned int v48;  // [bp-0x78]\n
    char v49;  // [bp-0x74]\n
    unsigned int v50;  // [bp-0x2c]\n
    char *v51;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v52;  // [bp-0x1c]\n
    unsigned int v53;  // [bp-0x18]\n
    unsigned int v54;  // [bp-0x14]\n
    struct_0 *v56;  // rax\n
    unsigned long v57;  // rax, Other Possible Types: unsigned long long\n
\n
    v54 = 0;\n
    v51 = a0;\n
    cgc_g_parseStackSize = 0;\n
    v52 = 12;\n
    do\n
    {\n
        v50 = 0;\n
        v53 = cgc_parse_get_symbol(v51, &v50);\n
        v51 = &v51[v50];\n
        if (cgc_is_symbol_db_operator(v53))\n
        {\n
            cgc_pop_parser_stack(&v48);\n
            if (!v48 && cgc_is_symbol_element(*(&v49)))\n
            {\n
                if (*(&v49) != 11)\n
                {\n
                    for (; cgc_isspace(*(v51)); v51 += 1);\n
                    if (*(v51) != 34)\n
                    {\n
                        cgc_get_current_exception_frame();\n
                        v57 = longjmp(a0, a1);\n
                        return v57;\n
                    }\n
                    v51 += 1;\n
                    v41 = 0;\n
                    while (true)\n
                    {\n
                        v5 = 0;\n
                        if (*(v51))\n
                            v5 = *(v51) != 34;\n
                        if (!(v5 & 1))\n
                            break;\n
                        v56 = v41;\n
                        v41 = v56 + 1;\n
                        *((&v42 + v56)) = *(v51);\n
                        v51 += 1;\n
                        if (v41 >= 128)\n
                            break;\n
                    }\n
                    (&v42)[v41] = 0;\n
                    if (!v51)\n
                    {\n
                        cgc_get_current_exception_frame();\n
                        v57 = longjmp(a0, a1);\n
                        return v57;\n
                    }\n
                    v51 += 1;\n
                    cgc_do_string_search(*(&v49), v53, &v42);\n
                }\n
                else\n
                {\n
                    v45 = cgc_parse_date(v51, &v46);\n
                    if (!v45)\n
                    {\n
                        cgc_get_current_exception_frame();\n
                        v57 = longjmp(a0, a1);\n
                        return v57;\n
                    }\n
                    v51 = &v51[v45];\n
                    v44 = *(&v47);\n
                    v43 = *(&v46);\n
                    cgc_do_date_search(v53, v43 | *(&v44) * 0x100000000);\n
                }\n
                goto LABEL_405b7c;\n
            }\n
            cgc_get_current_exception_frame();\n
            v57 = longjmp(a0, a1);\n
            return v57;\n
        }\n
        if (cgc_is_symbol_open_paran(v53))\n
        {\n
            cgc_peek_parser_stack(&v39);\n
            if (v39 == 2)\n
            {\n
LABEL_4058b4:\n
                v33 = 0;\n
                v34 = v53;\n
                v4 = *(&v38);\n
                *(&v3) = *(&v37);\n
                *(&v2) = *(&v36);\n
                *(&v1) = *(&v35);\n
                *(&v0) = *(&v33);\n
                cgc_push_parser_stack();\n
                goto LABEL_405b7c;\n
            }\n
            else\n
            {\n
                if (!v39 && !*(&v40))\n
                    goto LABEL_4058b4;\n
                if (!v39 && !(!cgc_is_symbol_result_operator(*(&v40))))\n
                    goto LABEL_4058b4;\n
                cgc_get_current_exception_frame();\n
                v57 = longjmp(a0, a1);\n
                return v57;\n
            }\n
        }\n
        if (cgc_is_symbol_close_paran(v53))\n
        {\n
            cgc_pop_parser_stack(&v28);\n
            if (v28 != 1)\n
            {\n
                cgc_get_current_exception_frame();\n
                v57 = longjmp(a0, a1);\n
                return v57;\n
            }\n
            cgc_pop_parser_stack(&v26);\n
            if (!v26 && !*(&v27))\n
            {\n
                v4 = *(&v32);\n
                *(&v3) = *(&v31);\n
                *(&v2) = *(&v30);\n
                *(&v1) = *(&v29);\n
                *(&v0) = *(&v28);\n
                cgc_push_parser_stack();\n
                goto LABEL_405b7c;\n
            }\n
            cgc_get_current_exception_frame();\n
            v57 = longjmp(a0, a1);\n
            return v57;\n
        }\n
        if (cgc_is_symbol_result_operator(v53))\n
        {\n
            cgc_peek_parser_stack(&v25);\n
            if (v25 != 1)\n
            {\n
                cgc_get_current_exception_frame();\n
                v57 = longjmp(a0, a1);\n
                return v57;\n
            }\n
            v19 = 0;\n
            v20 = v53;\n
            v4 = *(&v24);\n
            *(&v3) = *(&v23);\n
            *(&v2) = *(&v22);\n
            *(&v1) = *(&v21);\n
            *(&v0) = *(&v19);\n
            cgc_push_parser_stack();\n
            goto LABEL_405b7c;\n
        }\n
        if (cgc_is_symbol_element(v53))\n
        {\n
            cgc_peek_parser_stack(&v17);\n
            if (v17 == 2)\n
            {\n
LABEL_405aed:\n
                v11 = 0;\n
                v12 = v53;\n
                v4 = *(&v16);\n
                *(&v3) = *(&v15);\n
                *(&v2) = *(&v14);\n
                *(&v1) = *(&v13);\n
                *(&v0) = *(&v11);\n
                cgc_push_parser_stack();\n
                goto LABEL_405b7c;\n
            }\n
            else\n
            {\n
                if (!v17 && !(!cgc_is_symbol_open_paran(*(&v18))))\n
                    goto LABEL_405aed;\n
                if (!v17 && !(!cgc_is_symbol_result_operator(*(&v18))))\n
                    goto LABEL_405aed;\n
                cgc_get_current_exception_frame();\n
                v57 = longjmp(a0, a1);\n
                return v57;\n
            }\n
        }\n
        if (v53 == 13)\n
        {\n
            v54 = 1;\n
        }\n
        else if (v53 == 12)\n
        {\n
            cgc_get_current_exception_frame();\n
            longjmp(a0, a1);\n
        }\n
LABEL_405b7c:\n
        cgc_do_reduce_stack();\n
    } while (((v54 ^ 255) & 1));\n
    cgc_pop_parser_stack(&v8);\n
    if (v8 == 1 && !cgc_g_parseStackSize)\n
    {\n
        v7 = v10;\n
        cgc_printf(\"Search results, $d items found:\\n
\", v7, a2, a3, a4);\n
        v6 = 0;\n
        while (true)\n
        {\n
            v57 = v6;\n
            if (v57 >= v7)\n
                break;\n
            cgc_print_record_helper(cgc_db_search_index((&v9)[v6]), v7, &v42, a3, a4);\n
            v6 += 1;\n
        }\n
    }\n
    cgc_get_current_exception_frame();\n
    v57 = longjmp(a0, a1);\n
    return v57;\n
    return v6;\n
}\n
", "4217959:sub_405c67": null, "4217968:cgc_readLine": "extern unsigned int cgc_g_lasterror;\n
\n
long long cgc_readLine(unsigned long long a0, char *a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x2a]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    for (v2 = 1; v2 < a2; v2 += 1)\n
    {\n
        v0 = cgc_receive(a0, a1, a2, v7);\n
        if (v0)\n
        {\n
            cgc_g_lasterror = v0;\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (v1 == 10)\n
            break;\n
        *(v3) = v1;\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    v5 = v2;\n
    return v5;\n
}\n
", "4218147:sub_405d23": null, "4218160:cgc_sanitize_string": "long long cgc_sanitize_string(char *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = *(v2);\n
        if (!v0)\n
            break;\n
        if (v0 >= 97 && v0 <= 122)\n
            goto LABEL_405d9f;\n
        if (v0 >= 65 && v0 <= 90)\n
            goto LABEL_405d9f;\n
        if (v0 < 48)\n
        {\n
LABEL_405da4:\n
            *(v2) = 95;\n
LABEL_405dab:\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            if (!(v0 <= 57))\n
                goto LABEL_405da4;\n
LABEL_405d9f:\n
            goto LABEL_405dab;\n
        }\n
    }\n
    return v1;\n
}\n
", "4218306:sub_405dc2": null, "4218320:cgc_run_parser": "long long cgc_run_parser(unsigned long a0, unsigned int a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x220]\n
    unsigned int v1;  // [bp-0x21c]\n
    char v2;  // [bp-0x218]\n
    char v3;  // [bp-0x9]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = 0;\n
    cgc_init_user(&v0);\n
    do\n
    {\n
        cgc_printf(\"> \", a1, 0x200, a3, a4);\n
        v1 = cgc_readLine(0, &v2, 0x200);\n
        if (v1 != -1)\n
        {\n
            v5 = cgc_parse_command(&v2, &v0, 0x200, a3, a4);\n
        }\n
        else\n
        {\n
            v5 = cgc_printf(\"Connection failed. Exiting.\\n
\", a1, 0x200, a3, a4);\n
            v3 = 1;\n
        }\n
        *(&v5) = v3 ^ 255;\n
    } while (((v3 ^ 255) & 1));\n
    return v5;\n
}\n
", "4218472:sub_405e68": null, "4218480:cgc_test": "long long cgc_test(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    cgc_printf(\"Enter test function\\n
\", a1, a2, a3, a4);\n
    cgc_get_next_exception_frame();\n
    v1 = setjmp(\"Enter test function\\n
\");\n
    if (!v1)\n
    {\n
        cgc_get_current_exception_frame();\n
        longjmp(\"Enter test function\\n
\", a1);\n
    }\n
    else\n
    {\n
        if (!(v1 == 1))\n
            goto LABEL_405f01;\n
        cgc_printf(\"Got 1\\n
\", a1, a2, v1, a4);\n
        cgc_get_current_exception_frame();\n
        longjmp(\"Got 1\\n
\", a1);\n
    }\n
LABEL_405f01:\n
    cgc_printf(\"Blah\\n
\", a1, a2, v1, a4);\n
    cgc_pop_exception_frame();\n
    return cgc_printf(\"Exit test function\\n
\", a1, a2, v1, a4);\n
}\n
", "4218664:sub_405f28": null, "4218672:main": "int main(unsigned int a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_init_exception_handler();\n
    cgc_init_database();\n
    cgc_run_parser(a0, a1, a2, a3, a4);\n
    return 0;\n
}\n
", "4218720:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:memcpy": null, "5242912:setjmp": null, "5242920:longjmp": null, "5242928:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}