{"4214784:_init": "extern struct_0 *g_4104b8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_4104b8;\n
    if (g_4104b8)\n
        v1 = g_4104b8();\n
    return v1;\n
}\n
", "4214816:sub_405020": "extern unsigned long long g_4104d0;\n
\n
long long sub_405020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_4104d0;\n
    goto *(4261080);\n
}\n
", "4214828:sub_40502c": null, "4214832:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4214848:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4214864:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4214880:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4214896:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4214912:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4214928:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4214944:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4214960:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4261024);\n
}\n
", "4214976:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4215013:sub_4050e5": null, "4215014:sub_4050e6": null, "4215024:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_4104b0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4215065:sub_405119": null, "4215072:register_tm_clones": "extern unsigned long long g_4104c0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4215129:sub_405159": null, "4215136:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_4104a0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_4104a0)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4215189:sub_405195": null, "4215193:sub_405199": null, "4215200:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4215209:sub_4051a9": null, "4215216:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215381:sub_405255": null, "4215392:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = cgc_isdigit(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4215458:sub_4052a2": null, "4215472:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = cgc_isupper(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4215538:sub_4052f2": null, "4215552:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4215578:sub_40531a": null, "4215584:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4215610:sub_40533a": null, "4215616:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4215642:sub_40535a": null, "4215648:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return ((a0 & -128) ^ 255) & 1;\n
}\n
", "4215676:sub_40537c": null, "4215680:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 32)\n
        v0 = a0 == 9;\n
    return v0 & 1;\n
}\n
", "4215722:sub_4053aa": null, "4215728:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 127)\n
        v0 = a0 < 32;\n
    return v0 & 1;\n
}\n
", "4215770:sub_4053da": null, "4215776:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 != 32)\n
    {\n
        v0 = cgc_isprint(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4215833:sub_405419": null, "4215840:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 != 127;\n
    return v0 & 1;\n
}\n
", "4215882:sub_40544a": null, "4215888:cgc_ispunct": "extern char _punct;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&_punct)[a0];\n
}\n
", "4215912:sub_405468": null, "4215920:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    if (a0 > 8)\n
    {\n
        v0 = 1;\n
        if (a0 < 14)\n
            return v0 & 1;\n
    }\n
    v0 = a0 == 32;\n
    return v0 & 1;\n
}\n
", "4215972:sub_4054a4": null, "4215984:cgc_isxdigit": "extern char _xdigit;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return (&_xdigit)[a0];\n
}\n
", "4216008:sub_4054c8": null, "4216016:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4216031:sub_4054df": null, "4216032:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4216089:sub_405519": null, "4216096:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & 95;\n
    return v0;\n
}\n
", "4216153:sub_405559": null, "4216160:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4216275:sub_4055d3": null, "4216288:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4216322:sub_405602": null, "4216336:cgc_malloc": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern struct_1 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18], Other Possible Types: unsigned long long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        if (v4 >= 0x80000000)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4216790:sub_4057d6": null, "4216800:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4216962:sub_405882": null, "4216976:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4217155:sub_405943": null, "4217168:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4217346:sub_405a02": null, "4217360:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4217455:sub_405a6f": null, "4217456:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4217623:sub_405b17": null, "4217632:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4217818:sub_405bda": null, "4217824:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax, Other Possible Types: unsigned long long, struct_0 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_405db2;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_405db2:\n
    return v5;\n
}\n
", "4218306:sub_405dc2": null, "4218320:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_1 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_remove_from_blist(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (a0->field_28)\n
        v0->field_28->field_20 = a0->field_20;\n
    v2 = a0;\n
    if (a0->field_20)\n
    {\n
        v2 = a0->field_20;\n
        *((v2 + 40)) = a0->field_28;\n
    }\n
    return v2;\n
}\n
", "4218400:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4218508:sub_405e8c": null, "4218512:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a2)\n
        {\n
            if (*(v2) != *(v1))\n
            {\n
                v3 = *(v2) - *(v1);\n
                return v3;\n
            }\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4218654:sub_405f1e": null, "4218656:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4218755:sub_405f83": null, "4218768:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    if (a0 >= a1)\n
    {\n
        if (a0 <= a1)\n
            return a0;\n
        for (v0 = a2; v0 > 0; v0 += 1)\n
        {\n
            *((a0 + v0 + 1)) = v0[1 + a1];\n
        }\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            a0[v0] = *((a1 + v0));\n
        }\n
        return a0;\n
    }\n
}\n
", "4218976:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4219122:sub_4060f2": null, "4219136:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v8 = a1;\n
    v7 = a3;\n
    v6 = 0;\n
    if (v8 >= a2)\n
    {\n
        v6 = cgc_output_number_printf(a0, (0 CONCAT v8) /m a2, a2, v7 - 1, a4);\n
        v8 = (0 CONCAT v8) /m a2 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 -= 1;\n
            if (!v7)\n
                break;\n
            if (!(a4 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4219537:sub_406291": null, "4219552:cgc_fdprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_fdprintf(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    struct struct_0 **v0;  // [bp-0x200], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1f8]\n
    unsigned int v2;  // [bp-0x1ec]\n
    unsigned int *v3;  // [bp-0x1e8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1e0]\n
    unsigned int v5;  // [bp-0x1d4]\n
    unsigned int *v6;  // [bp-0x1d0], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x1c8]\n
    unsigned int v8;  // [bp-0x1bc]\n
    struct struct_0 **v9;  // [bp-0x1b8], Other Possible Types: unsigned long\n
    struct_1 *v10;  // [bp-0x1b0]\n
    unsigned int v11;  // [bp-0x1a4]\n
    unsigned long v12;  // [bp-0x1a0]\n
    struct struct_0 **v13;  // [bp-0x198]\n
    struct_1 *v14;  // [bp-0x190]\n
    unsigned int v15;  // [bp-0x184]\n
    unsigned int v16;  // [bp-0x180]\n
    unsigned int v17;  // [bp-0x17c]\n
    char v18;  // [bp-0x178]\n
    unsigned long v19;  // [bp-0x168]\n
    unsigned long v20;  // [bp-0x160]\n
    unsigned long v21;  // [bp-0x158]\n
    unsigned long v22;  // [bp-0x150]\n
    int v23;  // [bp-0x148]\n
    int v24;  // [bp-0x138]\n
    int v25;  // [bp-0x128]\n
    int v26;  // [bp-0x118]\n
    int v27;  // [bp-0x108]\n
    int v28;  // [bp-0xf8]\n
    int v29;  // [bp-0xe8]\n
    int v30;  // [bp-0xd8]\n
    char v31;  // [bp-0xb9]\n
    char v32;  // [bp-0xa9]\n
    char v33;  // [bp-0x99]\n
    char v34;  // [bp-0x89]\n
    char v35;  // [bp-0x79]\n
    char v36;  // [bp-0x69]\n
    char v37;  // [bp-0x59]\n
    unsigned int v38;  // [bp-0x58]\n
    unsigned int v39;  // [bp-0x54]\n
    unsigned long v40;  // [bp-0x50]\n
    unsigned long v41;  // [bp-0x48]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    unsigned int v45;  // [bp-0x30]\n
    unsigned int v46;  // [bp-0x2c]\n
    unsigned int v47;  // [bp-0x28]\n
    char v48;  // [bp-0x21]\n
    char *v49;  // [bp-0x20]\n
    char *v50;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v51;  // [bp-0x8]\n
    unsigned long v52;  // [bp+0x8]\n
    unsigned long long v53;  // rbp\n
    char v54;  // al\n
    int v55;  // xmm0\n
    int v56;  // xmm1\n
    int v57;  // xmm2\n
    int v58;  // xmm3\n
    int v59;  // xmm4\n
    int v60;  // xmm5\n
    int v61;  // xmm6\n
    int v62;  // xmm7\n
    unsigned long v63;  // r9\n
    char *v64;  // rax\n
    char *v65;  // rax\n
    unsigned long long v66;  // rdx\n
    struct struct_0 **v67;  // rax\n
    unsigned long long v68;  // rdx\n
    struct struct_0 **v69;  // rax\n
    unsigned long long v70;  // rdx\n
    struct struct_0 **v71;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v72;  // rdx\n
    unsigned int *v73;  // rax\n
    unsigned int *v74;  // rax\n
\n
    v53 = &v51;\n
    if (v54)\n
    {\n
        v23 = v55;\n
        v24 = v56;\n
        v25 = v57;\n
        v26 = v58;\n
        v27 = v59;\n
        v28 = v60;\n
        v29 = v61;\n
        v30 = v62;\n
    }\n
    v22 = v63;\n
    v21 = a4;\n
    v20 = a3;\n
    v19 = a2;\n
    v50 = a1;\n
    v45 = 0;\n
    v44 = 0;\n
    v43 = 0;\n
    v41 = &v18;\n
    v40 = &v52;\n
    v39 = 48;\n
    v38 = 16;\n
    while (*(v50))\n
    {\n
        v64 = v50;\n
        v50 = v64 + 1;\n
        v37 = *(v64);\n
        if (v37 != 37)\n
        {\n
            v31 = v37;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_406851:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v65 = v50;\n
                    a3 = v65 + 1;\n
                    v50 = a3;\n
                    v37 = *(v65);\n
                    v17 = v37;\n
                    if (v17 != 48)\n
                        break;\n
                    v44 |= 1;\n
                }\n
                if (v17 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v43 = cgc_strtol(v50 - 1, &v50, 10);\n
            }\n
            v16 = v37;\n
            if (v16 == 37)\n
            {\n
                v36 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_406810;\n
            }\n
            if (v16 == 88)\n
            {\n
                v44 |= 2;\n
            }\n
            else if (v16 == 99)\n
            {\n
                v1 = &v38;\n
                v2 = v38;\n
                if (v2 <= 40)\n
                {\n
                    a3 = v1;\n
                    v66 = v2;\n
                    v67 = v66 + a3->field_10;\n
                    a2 = v66 + 8;\n
                    *(&a3->field_0) = a2;\n
                    v0 = v67;\n
                }\n
                else\n
                {\n
                    a3 = v1;\n
                    a2 = *((a3 + 8));\n
                    *((a3 + 8)) = a2 + 8;\n
                    v0 = a2;\n
                }\n
                v48 = *(v0);\n
                v33 = v48;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_406810;\n
            }\n
            else\n
            {\n
                if (v16 == 100)\n
                {\n
                    v10 = &v38;\n
                    v11 = v38;\n
                    if (v11 <= 40)\n
                    {\n
                        a3 = v10;\n
                        v68 = v11;\n
                        v69 = v68 + a3->field_10;\n
                        a2 = v68 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v9 = v69;\n
                    }\n
                    else\n
                    {\n
                        a3 = v10;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 1;\n
                        v9 = a2;\n
                    }\n
                    v47 = *(v9);\n
                    if (v47 < 0)\n
                    {\n
                        v34 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v47 = -(v47);\n
                    }\n
                    cgc_output_number_printf(a0, v47, 10, v43, v44);\n
                    goto LABEL_406810;\n
                }\n
                if (v16 == 115)\n
                {\n
                    v14 = &v38;\n
                    v15 = v38;\n
                    if (v15 <= 40)\n
                    {\n
                        a3 = v14;\n
                        v70 = v15;\n
                        v71 = v70 + a3->field_10;\n
                        a2 = v70 + 8;\n
                        *(&a3->field_0) = a2;\n
                    }\n
                    else\n
                    {\n
                        a3 = v14;\n
                        v72 = *((a3 + 8));\n
                        v71 = v72;\n
                        a2 = v72 + 1;\n
                        *((a3 + 8)) = a2;\n
                    }\n
                    v13 = v71;\n
                    v49 = &*(v13)->field_0;\n
                    v46 = 0;\n
                    while (true)\n
                    {\n
                        v12 = v46;\n
                        if (v12 >= cgc_strlen(v49))\n
                            break;\n
                        v35 = v49[v46];\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v46 += 1;\n
                    }\n
                    goto LABEL_406810;\n
                }\n
                if (v16 == 117)\n
                {\n
                    v7 = &v38;\n
                    v8 = v38;\n
                    if (v8 <= 40)\n
                    {\n
                        a3 = v7;\n
                        a2 = v8;\n
                        v73 = a2 + a3->field_10;\n
                        *(&a3->field_0) = a2 + 8;\n
                        v6 = v73;\n
                    }\n
                    else\n
                    {\n
                        a3 = v7;\n
                        a2 = a3->field_8;\n
                        a3->field_8 = &a2[2];\n
                        v6 = a2;\n
                    }\n
                    v42 = *(v6);\n
                    cgc_output_number_printf(a0, v42, 10, v43, v44);\n
                    goto LABEL_406810;\n
                }\n
                if (v16 != 120)\n
                {\n
                    v32 = v37;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_406810:\n
                    v43 = 0;\n
                    v44 = 0;\n
                    goto LABEL_406851;\n
                }\n
            }\n
            v4 = &v38;\n
            v5 = v38;\n
            if (v5 <= 40)\n
            {\n
                a3 = v4;\n
                a2 = v5;\n
                v74 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v3 = v74;\n
            }\n
            else\n
            {\n
                a3 = v4;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v3 = a2;\n
            }\n
            v42 = *(v3);\n
            cgc_output_number_printf(a0, v42, 16, v43, v44);\n
            goto LABEL_406810;\n
        }\n
    }\n
    return v45;\n
}\n
", "4221031:sub_406867": null, "4221040:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    char v2;  // [bp-0x69]\n
    char v3;  // [bp-0x59]\n
    char v4;  // [bp-0x49]\n
    char v5;  // [bp-0x39]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0x1c]\n
    struct struct_0 **v11;  // rax\n
    unsigned int *v12;  // rax\n
    struct struct_0 **v13;  // rax\n
    unsigned int *v14;  // rax\n
\n
    v8 = a2;\n
    v7 = a4;\n
    v6 = 0;\n
    if (v8 >= a3)\n
    {\n
        v6 = cgc_output_number_sprintf(a0, a1, (0 CONCAT v8) /m a3, a3, v7 - 1, a5);\n
        v8 = (0 CONCAT v8) /m a3 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if ((a5 & 1))\n
            {\n
                v5 = 48;\n
                *(a1)->field_0 = v5;\n
            }\n
            else\n
            {\n
                v4 = 32;\n
                *(a1)->field_0 = v4;\n
            }\n
            v11 = a1;\n
            *(v11) = *(v11) + 1;\n
            v12 = a0;\n
            *(v12) = *(v12) + 1;\n
        }\n
    }\n
    if ((a5 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
        *(a1)->field_0 = v3;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
        *(a1)->field_0 = v2;\n
    }\n
    v13 = a1;\n
    *(v13) = *(v13) + 1;\n
    v14 = a0;\n
    *(v14) = *(v14) + 1;\n
    return v6 + 1;\n
}\n
", "4221518:sub_406a4e": null, "4221520:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    unsigned int *v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v43;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v44;  // [bp-0x8]\n
    unsigned long v45;  // [bp+0x8]\n
    unsigned long long v46;  // rbp\n
    char v47;  // al\n
    int v48;  // xmm0\n
    int v49;  // xmm1\n
    int v50;  // xmm2\n
    int v51;  // xmm3\n
    int v52;  // xmm4\n
    int v53;  // xmm5\n
    int v54;  // xmm6\n
    int v55;  // xmm7\n
    unsigned long v56;  // r9\n
    char *v57;  // rax\n
    char *v58;  // rax\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    struct struct_0 **v66;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v67;  // rcx\n
    struct_1 *v68;  // rcx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    char *v73;  // rax\n
\n
    v46 = &v44;\n
    if (v47)\n
    {\n
        v17 = v48;\n
        v18 = v49;\n
        v19 = v50;\n
        v20 = v51;\n
        v21 = v52;\n
        v22 = v53;\n
        v23 = v54;\n
        v24 = v55;\n
    }\n
    v16 = v56;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v43 = a0;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v45;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v57 = v42;\n
        v42 = v57 + 1;\n
        v30 = *(v57);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            *(v43) = v25;\n
            v43 += 1;\n
            v38 += 1;\n
LABEL_406ef7:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v58 = v42;\n
                    v42 = v58 + 1;\n
                    v30 = *(v58);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                *(v43) = v29;\n
                v43 += 1;\n
                v38 += 1;\n
                goto LABEL_406eb0;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        v59 = v4;\n
                        v60 = v5;\n
                        v61 = v60 + v59->field_10;\n
                        *(&v59->field_0) = v60 + 8;\n
                        v3 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v4;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v3 = v63;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        *(v43) = v27;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_sprintf(&v38, &v43, v40, 10, v36, v37);\n
                    goto LABEL_406eb0;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 <= 40)\n
                    {\n
                        v64 = v8;\n
                        v65 = v9;\n
                        v66 = v65 + v64->field_10;\n
                        *(&v64->field_0) = v65 + 8;\n
                    }\n
                    else\n
                    {\n
                        v67 = v8;\n
                        v66 = v67->field_8;\n
                        v67->field_8 = v66 + 8;\n
                    }\n
                    v7 = v66;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        *(v43) = v28;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_406eb0;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    *(v43) = v26;\n
                    v43 += 1;\n
                    v38 += 1;\n
LABEL_406eb0:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_406ef7;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                v68 = v1;\n
                v69 = v2;\n
                v70 = v69 + v68->field_10;\n
                *(&v68->field_0) = v69 + 8;\n
                v0 = v70;\n
            }\n
            else\n
            {\n
                v71 = v1;\n
                v72 = v71->field_8;\n
                v71->field_8 = &v72[2];\n
                v0 = v72;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_sprintf(&v38, &v43, v35, 16, v36, v37);\n
            goto LABEL_406eb0;\n
        }\n
    }\n
    v73 = v43;\n
    v43 = v73 + 1;\n
    *(v73) = 0;\n
    return v38;\n
}\n
", "4222746:sub_406f1a": null, "4222752:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        *(&v1) = cgc_malloc(a1);\n
        if (!*(&v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(*(&v1), a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(*(&v1), a0, a1);\n
        cgc_free(a0);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4222977:sub_407001": null, "4222992:cgc_strcasecmp": "long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x29]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v3 = a1;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v4))\n
            v2 = *(v3);\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v4) != *(v3))\n
        {\n
            v1 = cgc_tolower(*(v4));\n
            if (v1 != cgc_tolower(*(v3)))\n
                break;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    v0 = cgc_tolower(*(v4));\n
    return v0 - cgc_tolower(*(v3));\n
}\n
", "4223213:sub_4070ed": null, "4223216:cgc_strcat": "long long cgc_strcat(unsigned long long a0, unsigned long long a1)\n
{\n
    cgc_strcpy(a0 + cgc_strlen(a0), a1);\n
    return a0;\n
}\n
", "4223275:sub_40712b": null, "4223280:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4223395:sub_4071a3": null, "4223408:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4223547:sub_40723b": null, "4223552:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4223647:sub_40729f": null, "4223648:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v1) = cgc_strlen(a0) + 1;\n
    *(&v0) = cgc_malloc(*(&v1));\n
    if (!*(&v0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memcpy(*(&v0), a0, *(&v1));\n
    v2 = *(&v0);\n
    return v2;\n
}\n
", "4223749:sub_407305": null, "4223760:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4223819:sub_40734b": null, "4223824:cgc_strncasecmp": "long long cgc_strncasecmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    char v2;  // [bp-0x39]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rax\n
\n
    v5 = a2;\n
    v4 = a0;\n
    v3 = a1;\n
    v8 = v5;\n
    v5 = v8 - 1;\n
    if (!v8)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
        {\n
            v2 = 0;\n
            if (*(v4))\n
                v2 = *(v3);\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v4) != *(v3))\n
        {\n
            v1 = cgc_tolower(*(v4));\n
            if (v1 != cgc_tolower(*(v3)))\n
                break;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    v0 = cgc_tolower(*(v4));\n
    v6 = v0 - cgc_tolower(*(v3));\n
    return v6;\n
}\n
", "4224113:sub_407471": null, "4224128:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned long v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    v6 = v1;\n
    v1 = v6 - 1;\n
    if (!v6)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v7 = v1;\n
        v1 = v7 - 1;\n
        v0 = 0;\n
        if (v7)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
                v0 = *(v2);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v4 = *(v3) - *(v2);\n
    return v4;\n
}\n
", "4224349:sub_40755d": null, "4224352:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
        if (!*((a0 + v0)))\n
            break;\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4224514:sub_407602": null, "4224528:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = v1 + 1;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4224749:sub_4076ed": null, "4224752:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c], Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_40773a:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_40773a;\n
        if (v12 < 0)\n
            goto LABEL_40773a;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_407844:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_407844;\n
                v6 += 1;\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_4078c5;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_4078c5:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_407a31;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4079ee;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4079ee:\n
                if (v8 >= v12)\n
                    goto LABEL_407a31;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = v6 + 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_4079e5;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_4079e5:\n
                v8 += 10;\n
                goto LABEL_4079ee;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_40795f;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_40795f:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_407a31:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4225667:sub_407a83": null, "4225680:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4225721:sub_407ab9": null, "4225728:_ZN6CheeseC2EPKcii": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char g_410020;\n
\n
long long Cheese::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    Topping::__base_ctor__(a0);\n
    a0->field_0 = &g_410020;\n
    a0->field_8 = a1;\n
    a0->field_10 = a2;\n
    a0->field_14 = a3;\n
    return a0;\n
}\n
", "4225807:sub_407b0f": null, "4225808:_ZN6CheeseD1Ev": "long long Cheese::__dtor__(unsigned long long a0)\n
{\n
    return Topping::__dtor__(a0);\n
}\n
", "4225835:sub_407b2b": null, "4225840:_ZN6CheeseD0Ev": "long long Cheese::__deleting_dtor__(unsigned long a0)\n
{\n
    Cheese::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4225880:sub_407b58": null, "4225888:_ZN6Cheese13select_cheeseEPKc": "long long Cheese::select_cheese(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v1[0]) = _GLOBAL__N_1::find_cheese_entry(a0);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = operator new(24);\n
    Cheese::__base_ctor__(v0, *(&v1[0]), v1[2], v1[3]);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4225998:sub_407bce": null, "4226000:_ZN12_GLOBAL__N_117find_cheese_entryEPKc": "extern struct_0 _ZN12_GLOBAL__N_17cheesesE;\n
\n
long long _GLOBAL__N_1::find_cheese_entry(char *a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 6)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcasecmp((&_ZN12_GLOBAL__N_17cheesesE.field_0)[2 * v0], a0))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&_ZN12_GLOBAL__N_17cheesesE.field_0)[2 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4226137:sub_407c59": null, "4226144:_ZN6Cheese12list_optionsEv": "long long Cheese::list_options()\n
{\n
    return ::0x407c70::_GLOBAL__N_1::print_list();\n
}\n
", "4226155:sub_407c6b": null, "4226160:_ZN12_GLOBAL__N_110print_listEv": "extern char _ZN12_GLOBAL__N_17cheesesE;\n
\n
long long _GLOBAL__N_1::print_list(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long long *v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < 6; v0 = v0 + 1)\n
    {\n
        cgc_fdprintf(1, \"%d. %s\\n
\", v0 + 1, *((&_ZN12_GLOBAL__N_17cheesesE + 0x10 * v0)), a4);\n
    }\n
    return v0 + 1;\n
}\n
", "4226258:sub_407cd2": null, "4226272:_ZN7ToppingC2Ev": "extern char g_410210;\n
\n
long long Topping::__base_ctor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_410210;\n
    return a0;\n
}\n
", "4226300:sub_407cfc": null, "4226304:_ZN6Cheese13is_vegetarianEv": "long long Cheese::is_vegetarian(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 1;\n
}\n
", "4226321:sub_407d11": null, "4226336:_ZN6Cheese13contains_porkEv": "long long Cheese::contains_pork(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 0;\n
}\n
", "4226353:sub_407d31": null, "4226368:_ZN9IoManagerC1Em": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
extern char g_410050;\n
\n
long long IoManager::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = &g_410050;\n
    *(&a0->field_18) = a1;\n
    a0->field_20 = 0;\n
    a0->field_10 = operator new[](*(&a0->field_18));\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4226455:sub_407d97": null, "4226464:_ZN9IoManagerD2Ev": "extern char g_410050;\n
\n
long long IoManager::__base_dtor__(unsigned long long a0[5])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    a0[0] = &g_410050;\n
    *(&v0) = a0[2];\n
    if (*(&v0))\n
        operator delete(*(&v0));\n
    a0[3] = 0;\n
    a0[4] = 0;\n
    return a0;\n
}\n
", "4226551:sub_407df7": null, "4226560:_ZN9IoManagerD0Ev": "long long IoManager::__deleting_dtor__(unsigned long a0)\n
{\n
    IoManager::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4226600:sub_407e28": null, "4226608:_ZN9IoManager8readlineEm": "long long IoManager::readline(unsigned long long a0[5], unsigned long long a1)\n
{\n
    char v0;  // [bp-0x41]\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20]\n
    char v5;  // [bp-0x9]\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
\n
    v4 = a1;\n
    v2 = 0;\n
    if (v4)\n
        v1 = v4;\n
    else\n
        v1 = a0[3];\n
    v4 = v1;\n
    a0[4] = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (!cgc_receive(a0, a1, v7, v8))\n
        {\n
            v0 = 0;\n
            if (*(&v3) == 1)\n
                v0 = v2 < v4;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*((a0[2] + v2)) != 10)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            *((a0[2] + v2)) = 0;\n
            break;\n
        }\n
    }\n
    if (v2 && v2 != v4)\n
    {\n
        a0[4] = v2;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4226914:sub_407f62": null, "4226928:_ZN9IoManager7readnumEm": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10[2];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long IoManager::readnum(struct_0 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x41]\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
\n
    v4 = a1;\n
    v2 = 0;\n
    if (v4)\n
        v1 = v4;\n
    else\n
        v1 = a0->field_18;\n
    v4 = v1;\n
    a0->field_20 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (!cgc_receive(a0, a1, v7, v8))\n
        {\n
            v0 = 0;\n
            if (*(&v3) == 1)\n
                v0 = v2 < v4;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (a0->field_10[v2] < 48)\n
        {\n
LABEL_408055:\n
            a0->field_10[v2] = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (!(a0->field_10[v2] <= 57))\n
                goto LABEL_408055;\n
            v2 += 1;\n
        }\n
    }\n
    if (v2 && v2 != v4)\n
    {\n
        a0->field_20 = v2;\n
        v5 = cgc_strtol(a0->field_10, NULL, 10);\n
        return v5;\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4227274:sub_4080ca": null, "4227280:_Z12print_bannerv": "char print_banner(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    return cgc_fdprintf(1, \"Welcome to the CGC Pizzeria order management system.\\n
\", a2, a3, a4);\n
}\n
", "4227305:sub_4080e9": null, "4227312:main": "extern unsigned long long g_40d150;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x80a094]\n
    char v1;  // [bp-0x80a08d]\n
    unsigned int v2;  // [bp-0x80a08c]\n
    unsigned long v3;  // [bp-0x80a088]\n
    unsigned int v4;  // [bp-0x80a07c]\n
    unsigned int v5;  // [bp-0x80a078]\n
    char v6;  // [bp-0x80a072]\n
    char v7;  // [bp-0x80a071]\n
    char v8;  // [bp-0x80a070]\n
    char v9;  // [bp-0x80a048]\n
    unsigned long v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned long long v14;  // rax\n
\n
    v12 = 0;\n
    v11 = a0;\n
    v10 = a1;\n
    OrderIoManager::__base_ctor__(&v9);\n
    IoManager::__ctor__(&v8, 0x200);\n
    v7 = 0;\n
    v6 = 0;\n
    while (((v6 ^ 255) & 1))\n
    {\n
        v4 = 10;\n
        while (((v7 ^ 255) & 1))\n
        {\n
            cgc_fdprintf(1, \"Enter system password: \", a2, a3, a4);\n
            if (!(IoManager::readline(&v8, 0) & 1))\n
            {\n
                cgc_fdprintf(1, \"Incorrect Password!\\n
\", a2, a3, a4);\n
            }\n
            else if (!cgc_strcmp(\"pizzapass\", IoManager::get_last_input(&v8)))\n
            {\n
                v7 = 1;\n
                cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
                print_banner(1, \"\\n
\", a2, a3, a4);\n
            }\n
            else if (!cgc_strcmp(\"quit\", IoManager::get_last_input(&v8)))\n
            {\n
                cgc_fdprintf(1, \"Received termination string\\n
\", a2, a3, a4);\n
                v6 = 1;\n
                break;\n
            }\n
            else\n
            {\n
                cgc_fdprintf(1, \"Incorrect Password!\\n
\", a2, a3, a4);\n
                v4 -= 1;\n
                if (!v4)\n
                {\n
                    cgc_fdprintf(1, \"Too many bad attempts\\n
\", a2, a3, a4);\n
                    v6 = 1;\n
                    break;\n
                }\n
            }\n
        }\n
        while ((v7 & 1))\n
        {\n
            v2 = 0;\n
            v1 = 0;\n
            v0 = 1;\n
            cgc_fdprintf(1, \"1. Input Order\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"2. Update Order\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"3. View One Orders\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"4. View All Orders\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"5. Delete Order\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"6. Clear All Orders\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"7. Logout\\n
\", a2, a3, a4);\n
            cgc_fdprintf(v0, \"Choice: \", a2, a3, a4);\n
            v5 = IoManager::readnum(&v9, v2);\n
            v14 = v5 - 1;\n
            a3 = v14;\n
            v3 = v14;\n
            switch (v14)\n
            {\n
            case 0:\n
                if (!(OrderIoManager::input_order(&v9, -1) & 1))\n
                    cgc_fdprintf(1, \"Wow. that failed pretty bad\", a2, &g_40d150, a4);\n
                break;\n
            case 1:\n
                OrderIoManager::update_order(&v9);\n
                break;\n
            case 2:\n
                OrderIoManager::view_single_order(&v9);\n
                break;\n
            case 3:\n
                OrderIoManager::print_orders(&v9);\n
                break;\n
            case 4:\n
                if ((OrderIoManager::delete_order(&v9) & 1))\n
                    cgc_fdprintf(1, \"Succesfully removed order\\n
\", a2, &g_40d150, a4);\n
                break;\n
            case 5:\n
                OrderIoManager::clear_all_orders(&v9, 0);\n
                cgc_fdprintf(1, \"Cleared all previous orders\\n
\", a2, &g_40d150, a4);\n
                break;\n
            case 6:\n
                OrderIoManager::clear_all_orders(&v9, 1);\n
                cgc_fdprintf(1, \"Logging out\\n
\", a2, &g_40d150, a4);\n
                v7 = 0;\n
                break;\n
            default:\n
                cgc_fdprintf(1, \"Bad Selection\\n
\", a2, v14, a4);\n
            }\n
        }\n
    }\n
    IoManager::__base_dtor__(&v8);\n
    OrderIoManager::__dtor__(&v9);\n
    return v12;\n
}\n
", "4228333:sub_4084ed": null, "4228336:_ZN9IoManager14get_last_inputEv": "long long IoManager::get_last_input(unsigned long long a0[5])\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    if (!a0[4])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0[2];\n
    return v0;\n
}\n
", "4228397:sub_40852d": null, "4228400:_ZN4MeatC1EPKciib": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    char field_18;\n
} struct_0;\n
\n
extern char g_410070;\n
\n
long long Meat::__ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x21]\n
\n
    v0 = a4 & 1;\n
    Topping::__base_ctor__(a0);\n
    a0->field_0 = &g_410070;\n
    a0->field_8 = a1;\n
    a0->field_10 = a2;\n
    a0->field_14 = a3;\n
    a0->field_18 = v0 & 1;\n
    return a0;\n
}\n
", "4228496:_ZN4MeatD2Ev": "long long Meat::__base_dtor__(unsigned long long a0)\n
{\n
    return Topping::__dtor__(a0);\n
}\n
", "4228523:sub_4085ab": null, "4228528:_ZN4MeatD0Ev": "long long Meat::__deleting_dtor__(unsigned long a0)\n
{\n
    Meat::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4228568:sub_4085d8": null, "4228576:_ZN4Meat8add_meatEPKc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char field_10;\n
} struct_0;\n
\n
long long Meat::add_meat(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = _GLOBAL__N_1::find_meat_entry(a0);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = operator new(32);\n
    Meat::__ctor__(v0, *(&v1->field_0), v1->field_8, v1->field_c, v1->field_10 & 1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4228699:sub_40865b": null, "4228704:_ZN12_GLOBAL__N_115find_meat_entryEPKc": "extern char _ZN12_GLOBAL__N_15meatsE;\n
\n
long long _GLOBAL__N_1::find_meat_entry(char *a0)\n
{\n
    char **v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 6)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcasecmp(*(&(&_ZN12_GLOBAL__N_15meatsE)[24 * v0]), a0))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&_ZN12_GLOBAL__N_15meatsE)[24 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4228835:sub_4086e3": null, "4228848:_ZN4Meat12list_optionsEv": "long long Meat::list_options()\n
{\n
    return ::0x408700::_GLOBAL__N_1::print_list();\n
}\n
", "4228859:sub_4086fb": null, "4228864:_ZN12_GLOBAL__N_110print_listEv": "extern char _ZN12_GLOBAL__N_15meatsE;\n
\n
long long _GLOBAL__N_1::print_list(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long long *v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < 6; v0 = v0 + 1)\n
    {\n
        cgc_fdprintf(1, \"%d. %s\\n
\", v0 + 1, *((&_ZN12_GLOBAL__N_15meatsE + 0x18 * v0)), a4);\n
    }\n
    return v0 + 1;\n
}\n
", "4228959:sub_40875f": null, "4228960:_ZN4Meat13is_vegetarianEv": "long long Meat::is_vegetarian(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 0;\n
}\n
", "4228977:sub_408771": null, "4228992:_ZN4Meat13contains_porkEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
long long Meat::contains_pork(struct_0 *a0)\n
{\n
    return a0->field_18 & 1;\n
}\n
", "4229014:sub_408796": null, "4229024:_ZN5OrderC1Ev": "long long Order::__ctor__(unsigned long a0)\n
{\n
    return List::__base_ctor__(a0 + 32);\n
}\n
", "4229055:sub_4087bf": null, "4229056:_ZN5OrderD2Ev": "long long Order::__base_dtor__(unsigned long a0)\n
{\n
    return List::__base_dtor__(a0 + 32);\n
}\n
", "4229087:sub_4087df": null, "4229088:_ZN5Order9wait_timeEv": "long long Order::wait_time(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x58]\n
    unsigned long v1;  // [bp-0x50]\n
    unsigned long v2;  // [bp-0x48]\n
    unsigned long v3;  // [bp-0x40]\n
    unsigned long v4;  // [bp-0x38]\n
    void* v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v6;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v7;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v9;  // [bp-0x10]\n
    unsigned long long v11;  // rdi\n
    unsigned long long v12;  // rax\n
\n
    v9 = a0;\n
    v3 = v9;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 1;\n
    v5 = 0;\n
    v4 = *((*(*(List::operator[](v11, 0))) + 40))(*(List::operator[](v3 + 32, 0)));\n
    v8 = 0;\n
    while (true)\n
    {\n
        v2 = v8;\n
        if (v2 >= List::length(v3 + 32))\n
            break;\n
        v5 = *((*(*(List::operator[](v3 + 32, v8))) + 40))(*(List::operator[](v3 + 32, v8)));\n
        v7 = v5 + v7;\n
        if (v4 < v5)\n
            v4 = v5;\n
        v8 += 1;\n
    }\n
    v12 = List::length(v3 + 32);\n
    v6 = (v12 >> 31 CONCAT v12) /m 5 + v6;\n
    cgc_fdprintf(1, \"Pizza length... = %d\\n
\", List::length(v3 + 32), 5, a4);\n
    v1 = v7;\n
    v0 = v6 * v4;\n
    return v1 + (0 CONCAT v0) /m List::length(v3 + 32);\n
}\n
", "4229432:sub_408938": null, "4229440:_ZN5Order8get_nameEv": "long long Order::get_name(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4229454:sub_40894e": null, "4229456:_ZN5Order8set_nameEPc": "long long Order::set_name(unsigned int a0, char *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (cgc_strlen(a1) >= 32)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    cgc_strcpy(a0, a1);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4229539:sub_4089a3": null, "4229552:_ZN5Order9add_pizzaEP5Pizza": "long long Order::add_pizza(unsigned long a0, unsigned long long a1)\n
{\n
    return List::add(a0 + 32, a1) & 1;\n
}\n
", "4229596:sub_4089dc": null, "4229600:_ZN5Order12remove_pizzaEm": "long long Order::remove_pizza(unsigned long a0, unsigned long long a1)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    struct struct_1 **v1;  // [bp-0x20]\n
    struct struct_1 **v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = *(List::operator[](a0 + 32, a1));\n
    List::remove(a0 + 32, a1);\n
    v3 = v1;\n
    v0 = v3;\n
    if (v3)\n
    {\n
        v3 = *(v0)->field_8(v0);\n
        return v3;\n
    }\n
    return v1;\n
}\n
", "4229695:sub_408a3f": null, "4229696:_ZN5Order17remove_all_pizzasEv": "long long Order::remove_all_pizzas(unsigned long a0)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    char v1;  // [bp-0x18]\n
    unsigned long long v3;  // rax\n
\n
    while (true)\n
    {\n
        v3 = List::pop(a0 + 32, &v1);\n
        if (!(v3 & 1))\n
            break;\n
        v0 = *(&v1);\n
        if (v0)\n
            *(v0)->field_8(v0);\n
    }\n
    return v3;\n
}\n
", "4229785:sub_408a99": null, "4229792:_ZN5Order9get_pizzaEm": "long long Order::get_pizza(unsigned long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a1 >= List::length(a0 + 32))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(List::operator[](a0 + 32, a1));\n
    return v0;\n
}\n
", "4229898:sub_408b0a": null, "4229904:_ZN5Order14get_num_pizzasEv": "long long Order::get_num_pizzas(unsigned long a0)\n
{\n
    return List::length(a0 + 32);\n
}\n
", "4229935:sub_408b2f": null, "4229936:_ZN5Order11print_orderEv": "long long Order::print_order(unsigned int a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_fdprintf(1, \"==================================================\\n
\", a2, a3, a4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        v5 = List::length(a0 + 32);\n
        if (v0 >= v5)\n
            break;\n
        cgc_fdprintf(1, \"  Item #%d. \", v3 + 1, v5, a4);\n
        *((*(*(List::operator[](a0 + 32, v3))) + 16))(*(List::operator[](a0 + 32, v3)));\n
        v2 = *((*(*(List::operator[](a0 + 32, v3))) + 24))(*(List::operator[](a0 + 32, v3))) + v2;\n
        v1 = *((*(*(List::operator[](a0 + 32, v3))) + 32))(*(List::operator[](a0 + 32, v3))) + v1;\n
        v3 += 1;\n
    }\n
    cgc_fdprintf(1, \"--------------------------------------\\n
\", a2, v5, a4);\n
    cgc_fdprintf(1, \"\\t\\tCalories: %d\\n
\", v2, v5, a4);\n
    cgc_fdprintf(1, \"\\t\\tCarbs   : %d\\n
\\n
\", v1, v5, a4);\n
    v6 = Order::wait_time(a0, \"\\t\\tCarbs   : %d\\n
\\n
\", a2, v5, a4);\n
    cgc_fdprintf(1, \"\\t\\tEstimated wait time: %d minute(s)\\n
\", (v6 >> 31 CONCAT v6) /m 60, 60, a4);\n
    return cgc_fdprintf(1, \"==================================================\\n
\", a2, 60, a4);\n
}\n
", "4230283:sub_408c8b": null, "4230288:_ZN4ListIP5PizzaEC2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4230313:sub_408ca9": null, "4230320:_ZN4ListIP5PizzaED2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_dtor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4230345:sub_408cc9": null, "4230352:_ZN4ListIP5PizzaEixEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::operator[](struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    if (a1 < a0->field_2000)\n
    {\n
        v0 = &a0->padding_0[8 * a1];\n
        return v0;\n
    }\n
    v0 = &a0->padding_0[8 * a0->field_2000];\n
    return v0;\n
}\n
", "4230441:sub_408d29": null, "4230448:_ZN4ListIP5PizzaE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::length(struct_0 *a0)\n
{\n
    return a0->field_2000;\n
}\n
", "4230469:sub_408d45": null, "4230480:_ZN4ListIP5PizzaE3addES1_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8184];\n
    struct struct_0 *field_2000;\n
} struct_0;\n
\n
long long List::add(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long v2;  // rcx\n
\n
    if (a0->field_2000 == 0x400)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 + 1;\n
    (&a0->field_0)[v2] = a1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4230573:sub_408dad": null, "4230576:_ZN4ListIP5PizzaE6removeEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::remove(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    if (a1 >= a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0;\n
    cgc_memcpy(&v2->padding_0[8 * a1], &v2->padding_0[8 + 8 * a1], (v2->field_2000 - a1) * 8);\n
    v3 = a0;\n
    v3->field_2000 = v3->field_2000 - 1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4230722:sub_408e42": null, "4230736:_ZN4ListIP5PizzaE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::pop(struct_0 *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rcx\n
\n
    if (!a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 - 1;\n
    *(a1) = *(&a0->padding_0[8 + 8 * v2]);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4230830:sub_408eae": null, "4230832:_ZN14OrderIoManagerC2Ev": "extern char g_4100a0;\n
\n
long long OrderIoManager::__base_ctor__(unsigned long long *a0)\n
{\n
    IoManager::__ctor__(a0, 0x200);\n
    *(a0) = &g_4100a0;\n
    return List::__base_ctor__(a0 + 5);\n
}\n
", "4230895:sub_408eef": null, "4230896:_ZN14OrderIoManagerD1Ev": "extern char g_4100a0;\n
\n
long long OrderIoManager::__dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_4100a0;\n
    List::__base_dtor__(a0 + 5);\n
    return IoManager::__base_dtor__(a0);\n
}\n
", "4230954:sub_408f2a": null, "4230960:_ZN14OrderIoManagerD0Ev": "long long OrderIoManager::__deleting_dtor__(unsigned long a0)\n
{\n
    OrderIoManager::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4231000:sub_408f58": null, "4231008:_ZN14OrderIoManager11list_ordersEv": "long long OrderIoManager::list_orders(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
\n
    v3 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v2 = v3;\n
        if (v2 >= List::length(a0 + 40))\n
            break;\n
        v0 = v3 + 1;\n
        v1 = Order::get_name(List::operator[](a0 + 40, v3));\n
        cgc_fdprintf(1, \"%d - %s: Ordered %d pizza(s)\\n
\", v0, v1, Order::get_num_pizzas(List::operator[](a0 + 40, v3)));\n
        v3 += 1;\n
    }\n
    return v2;\n
}\n
", "4231186:sub_409012": null, "4231200:_ZN14OrderIoManager11input_orderEm": "long long OrderIoManager::input_order(unsigned long long a0[5], unsigned long long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long long v0;  // [bp-0x40d0]\n
    unsigned int v1;  // [bp-0x40c4]\n
    char v2;  // [bp-0x40b8]\n
    unsigned int v3;  // [bp-0x208c]\n
    char v4;  // [bp-0x2086]\n
    char v5;  // [bp-0x2085]\n
    unsigned int v6;  // [bp-0x2084]\n
    unsigned long long v7;  // [bp-0x2080]\n
    char v8;  // [bp-0x2078]\n
    char v9;  // [bp-0x2048]\n
    char v10;  // [bp-0x9]\n
\n
    if ((List::is_full(a0 + 1) & 1))\n
    {\n
        cgc_fdprintf(1, \"Maxed out orders\\n
\", a2, a3, a4);\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
    Order::__ctor__(&v9);\n
    PizzaIoManager::__base_ctor__(&v8, 0);\n
    v5 = 0;\n
    v4 = 1;\n
    if (a1 != -1)\n
    {\n
        v4 = 0;\n
        memcpy(&v9, List::operator[](a0 + 1, a1), 8232);\n
        cgc_fdprintf(1, \"Editing order for %s\\n
\", Order::get_name(&v9), a3, a4);\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"Enter Pickup Name: \", a2, a3, a4);\n
        while (((IoManager::readline(a0, 32) ^ 255) & 1))\n
        {\n
            cgc_fdprintf(1, \"Bad Pickup Name\\n
\", a2, a3, a4);\n
            cgc_fdprintf(1, \"Enter Pickup Name: \", a2, a3, a4);\n
        }\n
        if ((Order::set_name(&v9, IoManager::get_last_input(a0)) & 1))\n
        {\n
            PizzaIoManager::new_pizza(&v8);\n
            v7 = PizzaIoManager::get_pizza(&v8);\n
            if (v7)\n
                Order::add_pizza(&v9, v7);\n
        }\n
        else\n
        {\n
            v10 = 0;\n
            goto LABEL_4094b1;\n
        }\n
    }\n
    while (((v5 ^ 255) & 1))\n
    {\n
        cgc_fdprintf(1, \"1. Add another Pizza\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"2. Quit\\n
\", a2, a3, a4);\n
        if (Order::get_num_pizzas(&v9) > 1)\n
            cgc_fdprintf(1, \"3. Remove Pizza from order\\n
\", a2, a3, a4);\n
        while (true)\n
        {\n
            cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
            v6 = IoManager::readnum(a0, 0);\n
            if (v6 == 1)\n
            {\n
                PizzaIoManager::new_pizza(&v8);\n
                v7 = PizzaIoManager::get_pizza(&v8);\n
                if (v7)\n
                    Order::add_pizza(&v9, v7);\n
                break;\n
            }\n
            else if (v6 == 2)\n
            {\n
                v5 = 1;\n
                break;\n
            }\n
            else if (v6 != 3)\n
            {\n
                cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
            }\n
            else\n
            {\n
                cgc_fdprintf(1, \"0. Cancel\\n
\", a2, a3, a4);\n
                Order::print_order(&v9, \"0. Cancel\\n
\", a2, a3, a4);\n
                cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
                v6 = IoManager::readnum(a0, 0);\n
                if (v6)\n
                {\n
                    v1 = v6;\n
                    a3 = Order::get_num_pizzas(&v9);\n
                    if (v1 <= a3)\n
                    {\n
                        v6 -= 1;\n
                        Order::remove_pizza(&v9, v6);\n
                        cgc_fdprintf(1, \"Removed Item #%d\\n
\", v6 + 1, a3, a4);\n
                    }\n
                    else\n
                    {\n
                        cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
                    }\n
                    break;\n
                }\n
                else\n
                {\n
                    cgc_fdprintf(1, \"Canceled\\n
\", a2, a3, a4);\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    if ((v4 & 1))\n
    {\n
        v0 = a0 + 1;\n
        memcpy(&v2, &v9, 8232);\n
        List::add(v0, &v2);\n
        Order::__base_dtor__(&v2);\n
        cgc_fdprintf(1, \"Order successfully added!\\n
\", 8232, a3, a4);\n
    }\n
    else\n
    {\n
        memcpy(List::operator[](a0 + 1, a1), &v9, 8232);\n
        cgc_fdprintf(1, \"Order successfully updated!\\n
\", 8232, a3, a4);\n
    }\n
    v10 = 1;\n
LABEL_4094b1:\n
    v3 = 1;\n
    PizzaIoManager::__base_dtor__(&v8);\n
    Order::__base_dtor__(&v9);\n
    return v10 & 1;\n
}\n
", "4232410:sub_4094da": null, "4232416:_ZN14OrderIoManager12update_orderEv": "long long OrderIoManager::update_order(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2054]\n
    unsigned int v1;  // [bp-0x2048]\n
    unsigned int v2;  // [bp-0x2044]\n
    char v3;  // [bp-0x2040]\n
    char v4;  // [bp-0x9]\n
    unsigned long long v6;  // rcx\n
\n
    Order::__ctor__(&v3);\n
    if ((List::is_empty(a0 + 40) & 1))\n
    {\n
        cgc_fdprintf(1, \"No orders have been inputted\\n
\", a2, a3, a4);\n
        v4 = 0;\n
        v1 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"Update an Order\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"0. Cancel\\n
\", a2, a3, a4);\n
        OrderIoManager::list_orders(a0);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v2 = IoManager::readnum(a0, 0);\n
        if (!v2)\n
        {\n
            cgc_fdprintf(1, \"Canceled\\n
\", a2, a3, a4);\n
            v4 = 0;\n
            v1 = 1;\n
        }\n
        else\n
        {\n
            v0 = v2;\n
            v6 = List::length(a0 + 40);\n
            if (v0 > v6)\n
            {\n
                cgc_fdprintf(1, \"Bad Selection\\n
\", a2, v6, a4);\n
                v4 = 0;\n
                v1 = 1;\n
            }\n
            else\n
            {\n
                v2 -= 1;\n
                v4 = OrderIoManager::input_order(a0, v2, a2, v6, a4) & 1;\n
                v1 = 1;\n
            }\n
        }\n
    }\n
    Order::__base_dtor__(&v3);\n
    return v4 & 1;\n
}\n
", "4232824:sub_409678": null, "4232832:_ZN14OrderIoManager12delete_orderEv": "long long OrderIoManager::delete_order(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2054]\n
    unsigned int v1;  // [bp-0x2048]\n
    unsigned int v2;  // [bp-0x2044]\n
    char v3;  // [bp-0x2040]\n
    char v4;  // [bp-0x9]\n
\n
    Order::__ctor__(&v3);\n
    if ((List::is_empty(a0 + 40) & 1))\n
    {\n
        cgc_fdprintf(1, \"No orders have been inputted\\n
\", a2, a3, a4);\n
        v4 = 0;\n
        v1 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"Delete an Order\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"0. Cancel\\n
\", a2, a3, a4);\n
        OrderIoManager::list_orders(a0);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v2 = IoManager::readnum(a0, 0);\n
        if (!v2)\n
        {\n
            cgc_fdprintf(1, \"Canceled\\n
\", a2, a3, a4);\n
            v4 = 0;\n
            v1 = 1;\n
        }\n
        else if (v2 < 1)\n
        {\n
LABEL_4097b0:\n
            cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
            v4 = 0;\n
            v1 = 1;\n
        }\n
        else\n
        {\n
            v0 = v2;\n
            a3 = List::length(a0 + 40);\n
            if (!(v0 <= a3))\n
                goto LABEL_4097b0;\n
            v2 -= 1;\n
            Order::remove_all_pizzas(List::operator[](a0 + 40, v2));\n
            v4 = List::remove(a0 + 40, v2) & 1;\n
            v1 = 1;\n
        }\n
    }\n
    Order::__base_dtor__(&v3);\n
    return v4 & 1;\n
}\n
", "4233288:sub_409848": null, "4233296:_ZN14OrderIoManager16clear_all_ordersEb": "long long OrderIoManager::clear_all_orders(void* a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2048]\n
    unsigned int v1;  // [bp-0x2044]\n
    char v2;  // [bp-0x2040]\n
    char v3;  // [bp-0x11]\n
\n
    v3 = a1 & 1;\n
    Order::__ctor__(&v2);\n
    if (!(v3 & 1))\n
    {\n
        cgc_fdprintf(1, \"Delete ALL Orders\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"0. Cancel\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"1. Confirm\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v1 = IoManager::readnum(a0, 0);\n
        if (!v1)\n
        {\n
            cgc_fdprintf(1, \"Canceled\\n
\", a2, a3, a4);\n
            v0 = 1;\n
            return Order::__base_dtor__(&v2);\n
        }\n
        if (v1 > 1)\n
            cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Removing all orders\\n
\", a2, a3, a4);\n
    }\n
    while ((List::pop(a0 + 40, &v2) & 1))\n
    {\n
        Order::remove_all_pizzas(&v2);\n
    }\n
    v0 = 0;\n
    return Order::__base_dtor__(&v2);\n
}\n
", "4233642:sub_4099aa": null, "4233648:_ZN14OrderIoManager17view_single_orderEv": "long long OrderIoManager::view_single_order(unsigned long a0, unsigned int a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x206c]\n
    unsigned long long v1;  // [bp-0x2068]\n
    unsigned int v2;  // [bp-0x205c]\n
    unsigned int v3;  // [bp-0x204c]\n
    unsigned int v4;  // [bp-0x2048]\n
    unsigned int v5;  // [bp-0x2044]\n
    char v6;  // [bp-0x2040]\n
    char v7;  // [bp-0x9]\n
    unsigned long long v9;  // rax\n
\n
    Order::__ctor__(&v6);\n
    if ((List::is_empty(a0 + 40) & 1))\n
    {\n
        cgc_fdprintf(1, \"No orders have been inputted\\n
\", a2, a3, a4);\n
        v7 = 0;\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"View single Order\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"0. Cancel\\n
\", a2, a3, a4);\n
        OrderIoManager::list_orders(a0);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v5 = IoManager::readnum(a0, 0);\n
        if (!v5)\n
        {\n
            cgc_fdprintf(1, \"Canceled\\n
\", a2, a3, a4);\n
            v7 = 0;\n
            v3 = 1;\n
        }\n
        else\n
        {\n
            v2 = v5;\n
            v9 = List::length(a0 + 40);\n
            if (v2 > v9)\n
            {\n
                cgc_fdprintf(1, \"Bad Selection\\n
\", a2, v9, a4);\n
                v7 = 0;\n
                v3 = 1;\n
            }\n
            else\n
            {\n
                v5 -= 1;\n
                v4 = v5;\n
                v0 = v4 + 1;\n
                v1 = Order::get_name(List::operator[](a0 + 40, v4));\n
                cgc_fdprintf(1, \"%d - %s: Ordered %d pizza(s)\\n
\", v0, v1, Order::get_num_pizzas(List::operator[](a0 + 40, v4)));\n
                Order::print_order(List::operator[](a0 + 40, v4), a1, a2, a3, a4);\n
                cgc_fdprintf(1, \"*  = Contains Meat\\n
\", a2, a3, a4);\n
                cgc_fdprintf(1, \"** = Contains Pork\\n
\", a2, a3, a4);\n
                v7 = 1;\n
                v3 = 1;\n
            }\n
        }\n
    }\n
    Order::__base_dtor__(&v6);\n
    return v7 & 1;\n
}\n
", "4234234:sub_409bfa": null, "4234240:_ZN14OrderIoManager12print_ordersEv": "long long OrderIoManager::print_orders(unsigned long a0, unsigned int a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rax\n
\n
    v3 = 0;\n
    if ((List::is_empty(a0 + 40) & 1))\n
    {\n
        v5 = cgc_fdprintf(1, \"No orders have been inputted\\n
\", a2, a3, a4);\n
        return v5;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v2 = v3;\n
        v6 = List::length(a0 + 40);\n
        if (v2 >= v6)\n
            break;\n
        v0 = v3 + 1;\n
        v1 = Order::get_name(List::operator[](a0 + 40, v3));\n
        cgc_fdprintf(1, \"%d - %s: Ordered %d pizza(s)\\n
\", v0, v1, Order::get_num_pizzas(List::operator[](a0 + 40, v3)));\n
        Order::print_order(List::operator[](a0 + 40, v3), a1, a2, a3, a4);\n
        v3 += 1;\n
    }\n
    cgc_fdprintf(1, \"*  = Contains Meat\\n
\", a2, v6, a4);\n
    v5 = cgc_fdprintf(1, \"** = Contains Pork\\n
\", a2, v6, a4);\n
    return v5;\n
}\n
", "4234527:sub_409d1f": null, "4234528:_ZN4ListI5OrderEC2Ev": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::__base_ctor__(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = &a0->field_80a000;\n
    v3 = a0;\n
    do\n
    {\n
        v0 = v3;\n
        Order::__ctor__(v0);\n
        v1 = &v0->padding_0[8232];\n
        v3 = v1;\n
    } while (v1 != v2);\n
    a0->field_80a000 = 0;\n
    return a0;\n
}\n
", "4234631:sub_409d87": null, "4234640:_ZN4ListI5OrderED2Ev": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x18]\n
\n
    a0->field_80a000 = 0;\n
    v1 = &a0->field_80a000;\n
    do\n
    {\n
        *(&v0) = v1 - 8232;\n
        Order::__base_dtor__(*(&v0));\n
        v1 = *(&v0);\n
    } while (v1 != a0);\n
    return *(&v0);\n
}\n
", "4234728:sub_409de8": null, "4234736:_ZN4ListI5OrderE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::length(struct_0 *a0)\n
{\n
    return a0->field_80a000;\n
}\n
", "4234757:sub_409e05": null, "4234768:_ZN4ListI5OrderEixEm": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::operator[](struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    if (a1 < a0->field_80a000)\n
    {\n
        v0 = &a0->padding_0[8232 * a1];\n
        return v0;\n
    }\n
    v0 = &a0->padding_0[8232 * a0->field_80a000];\n
    return v0;\n
}\n
", "4234857:sub_409e69": null, "4234864:_ZN4ListI5OrderE7is_fullEv": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::is_full(struct_0 *a0)\n
{\n
    return a0->field_80a000 == 0x400;\n
}\n
", "4234897:sub_409e91": null, "4234912:_ZN4ListI5OrderE3addES0_": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::add(struct_0 *a0, void* a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // rdi\n
    unsigned long long v5;  // rax\n
\n
    v1 = a0;\n
    v0 = v1;\n
    if (v0->field_80a000 == 0x400)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v0;\n
    v5 = v4->field_80a000;\n
    v4->field_80a000 = v5 + 1;\n
    memcpy(&v4->padding_0[8232 * v5], a1, 8232);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4235029:sub_409f15": null, "4235040:_ZN4ListI5OrderE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::is_empty(struct_0 *a0)\n
{\n
    return !a0->field_80a000;\n
}\n
", "4235070:sub_409f3e": null, "4235072:_ZN4ListI5OrderE6removeEm": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::remove(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    if (a1 >= a0->field_80a000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0;\n
    cgc_memcpy(&v2->padding_0[8232 * a1], &v2->padding_0[8232 + 8232 * a1], (v2->field_80a000 - a1) * 8232);\n
    v3 = a0;\n
    v3->field_80a000 = v3->field_80a000 - 1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4235224:sub_409fd8": null, "4235232:_ZN4ListI5OrderE3popERS0_": "typedef struct struct_0 {\n
    char padding_0[8429568];\n
    unsigned long long field_80a000;\n
} struct_0;\n
\n
long long List::pop(struct_0 *a0, void* a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rax\n
\n
    if (!a0->field_80a000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_80a000 - 1;\n
    a0->field_80a000 = v2;\n
    memcpy(a1, &a0->padding_0[8232 * v2], 8232);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4235343:sub_40a04f": null, "4235344:_ZN5PizzaC2Ev": "extern char g_4100c0;\n
\n
long long Pizza::__base_ctor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_4100c0;\n
    List::__base_ctor__(a0 + 1);\n
    return List::__base_ctor__(a0 + 1026);\n
}\n
", "4235409:sub_40a091": null, "4235424:_ZN5PizzaD2Ev": "extern char g_4100c0;\n
\n
long long Pizza::__base_dtor__(unsigned long long *a0)\n
{\n
    struct struct_1 **v0;  // [bp-0x38]\n
    struct struct_1 **v1;  // [bp-0x30]\n
    char v2;  // [bp-0x20]\n
    char v3;  // [bp-0x18]\n
\n
    *(a0) = &g_4100c0;\n
    while ((List::pop(a0 + 1, &v3) & 1))\n
    {\n
        v1 = *(&v3);\n
        if (v1)\n
            *(v1)->field_8(v1);\n
    }\n
    while ((List::pop(a0 + 1026, &v2) & 1))\n
    {\n
        v0 = *(&v2);\n
        if (v0)\n
            *(v0)->field_8(v0);\n
    }\n
    List::__base_dtor__(a0 + 1026);\n
    return List::__base_dtor__(a0 + 1);\n
}\n
", "4235627:sub_40a16b": null, "4235632:_ZN5PizzaD0Ev": "long long Pizza::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4235632\n
}\n
", "4235642:sub_40a17a": null, "4235648:_ZN5Pizza11add_toppingEP7Topping": "long long Pizza::add_topping(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x9]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= List::length(a0 + 8))\n
        {\n
            v2 = List::add(a0 + 8, a1) & 1;\n
            return v2 & 1;\n
        }\n
        if ((Topping::operator== const(*(List::operator[](a0 + 8, v1)), a1) & 1))\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4235828:sub_40a234": null, "4235840:_ZN5Pizza14remove_toppingEm": "long long Pizza::remove_topping(unsigned long a0, unsigned long long a1)\n
{\n
    return List::remove(a0 + 8, a1) & 1;\n
}\n
", "4235884:sub_40a26c": null, "4235888:_ZN5Pizza9add_sauceEP5Sauce": "long long Pizza::add_sauce(unsigned long a0, unsigned long long a1)\n
{\n
    return List::add(a0 + 8208, a1) & 1;\n
}\n
", "4235935:sub_40a29f": null, "4235936:_ZN5Pizza12remove_sauceEm": "long long Pizza::remove_sauce(unsigned long a0, unsigned long long a1)\n
{\n
    return List::remove(a0 + 8208, a1) & 1;\n
}\n
", "4235983:sub_40a2cf": null, "4235984:_ZN5Pizza14print_toppingsEv": "char Pizza::print_toppings(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!(List::is_empty(a0 + 8) & 1))\n
    {\n
        v1 = List::print_list(a0 + 8, _GLOBAL__N_1::print_helper);\n
        return v1;\n
    }\n
    v1 = cgc_fdprintf(1, \"\\tNone\\n
\", a2, a3, a4);\n
    return v1;\n
}\n
", "4236076:sub_40a32c": null, "4236080:_ZN12_GLOBAL__N_112print_helperEPv": "long long _GLOBAL__N_1::print_helper(struct struct_1 **a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"%s\", Topping::get_topping_name(a0), a3, a4);\n
    if ((*(a0)->field_18(a0) & 1))\n
    {\n
        cgc_fdprintf(1, \"**\", a2, a3, a4);\n
        return cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
    }\n
    if ((*(a0)->field_10(a0) & 1))\n
        return cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \"*\", a2, a3, a4);\n
}\n
", "4236245:sub_40a3d5": null, "4236256:_ZN5Pizza12print_saucesEv": "char Pizza::print_sauces(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!(List::is_empty(a0 + 8208) & 1))\n
    {\n
        v1 = List::print_list(a0 + 8208, _GLOBAL__N_1::print_helper);\n
        return v1;\n
    }\n
    v1 = cgc_fdprintf(1, \"\\tNone\\n
\", a2, a3, a4);\n
    return v1;\n
}\n
", "4236354:sub_40a442": null, "4236368:_ZN5Pizza16get_num_toppingsEv": "long long Pizza::get_num_toppings(unsigned long a0)\n
{\n
    return List::length(a0 + 8);\n
}\n
", "4236401:sub_40a471": null, "4236416:_ZN5Pizza14get_num_saucesEv": "long long Pizza::get_num_sauces(unsigned long a0)\n
{\n
    return List::length(a0 + 8208);\n
}\n
", "4236452:sub_40a4a4": null, "4236464:_ZN5Pizza11print_pizzaEv": "long long Pizza::print_pizza(unsigned int a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"    Selected Toppings\\n
\", a2, a3, a4);\n
    Pizza::print_toppings(a0, \"    Selected Toppings\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \"    Sauce on the side\\n
\", a2, a3, a4);\n
    return Pizza::print_sauces(a0, \"    Sauce on the side\\n
\", a2, a3, a4);\n
}\n
", "4236546:sub_40a502": null, "4236560:_ZN5Pizza12get_caloriesEv": "long long Pizza::get_calories(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= List::length(a0 + 8))\n
            break;\n
        v2 = Topping::get_calories(*(List::operator[](a0 + 8, v3))) + v2;\n
        v3 += 1;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= List::length(a0 + 8208))\n
            break;\n
        v2 = Topping::get_calories(*(List::operator[](a0 + 8208, v3))) + v2;\n
        v3 += 1;\n
    }\n
    return v2;\n
}\n
", "4236802:sub_40a602": null, "4236816:_ZN5Pizza9get_carbsEv": "long long Pizza::get_carbs(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= List::length(a0 + 8))\n
            break;\n
        v2 = Topping::get_carbs(*(List::operator[](a0 + 8, v3))) + v2;\n
        v3 += 1;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= List::length(a0 + 8208))\n
            break;\n
        v2 = Topping::get_carbs(*(List::operator[](a0 + 8208, v3))) + v2;\n
        v3 += 1;\n
    }\n
    return v2;\n
}\n
", "4237058:sub_40a702": null, "4237072:_ZN5Pizza13get_prep_timeEv": "long long Pizza::get_prep_time(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = List::length(a0 + 8) * 30;\n
    return v0 + List::length(a0 + 8208) * 15;\n
}\n
", "4237139:sub_40a753": null, "4237152:_ZN4ListIP7ToppingEC2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4237177:sub_40a779": null, "4237184:_ZN4ListIP5SauceEC2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4237209:sub_40a799": null, "4237216:_ZN4ListIP7ToppingE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::pop(struct_0 *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rcx\n
\n
    if (!a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 - 1;\n
    *(a1) = *(&a0->padding_0[8 + 8 * v2]);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4237310:sub_40a7fe": null, "4237312:_ZN4ListIP5SauceE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::pop(struct_0 *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rcx\n
\n
    if (!a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 - 1;\n
    *(a1) = *(&a0->padding_0[8 + 8 * v2]);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4237406:sub_40a85e": null, "4237408:_ZN4ListIP5SauceED2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_dtor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4237433:sub_40a879": null, "4237440:_ZN4ListIP7ToppingED2Ev": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::__base_dtor__(struct_0 *a0)\n
{\n
    a0->field_2000 = 0;\n
    return a0;\n
}\n
", "4237465:sub_40a899": null, "4237472:_ZN4ListIP7ToppingE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::length(struct_0 *a0)\n
{\n
    return a0->field_2000;\n
}\n
", "4237493:sub_40a8b5": null, "4237504:_ZN4ListIP7ToppingEixEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::operator[](struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    if (a1 < a0->field_2000)\n
    {\n
        v0 = &a0->padding_0[8 * a1];\n
        return v0;\n
    }\n
    v0 = &a0->padding_0[8 * a0->field_2000];\n
    return v0;\n
}\n
", "4237593:sub_40a919": null, "4237600:_ZN4ListIP7ToppingE3addES1_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8184];\n
    struct struct_0 *field_2000;\n
} struct_0;\n
\n
long long List::add(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long v2;  // rcx\n
\n
    if (a0->field_2000 == 0x400)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 + 1;\n
    (&a0->field_0)[v2] = a1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4237693:sub_40a97d": null, "4237696:_ZN4ListIP7ToppingE6removeEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::remove(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    if (a1 >= a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0;\n
    cgc_memcpy(&v2->padding_0[8 * a1], &v2->padding_0[8 + 8 * a1], (v2->field_2000 - a1) * 8);\n
    v3 = a0;\n
    v3->field_2000 = v3->field_2000 - 1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4237842:sub_40aa12": null, "4237856:_ZN4ListIP5SauceE3addES1_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8184];\n
    struct struct_0 *field_2000;\n
} struct_0;\n
\n
long long List::add(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long v2;  // rcx\n
\n
    if (a0->field_2000 == 0x400)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_2000;\n
    a0->field_2000 = v2 + 1;\n
    (&a0->field_0)[v2] = a1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4237949:sub_40aa7d": null, "4237952:_ZN4ListIP5SauceE6removeEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::remove(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    if (a1 >= a0->field_2000)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0;\n
    cgc_memcpy(&v2->padding_0[8 * a1], &v2->padding_0[8 + 8 * a1], (v2->field_2000 - a1) * 8);\n
    v3 = a0;\n
    v3->field_2000 = v3->field_2000 - 1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4238098:sub_40ab12": null, "4238112:_ZN4ListIP7ToppingE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::is_empty(struct_0 *a0)\n
{\n
    return !a0->field_2000;\n
}\n
", "4238142:sub_40ab3e": null, "4238144:_ZN4ListIP7ToppingE10print_listEPFvPvE": "long long List::print_list(unsigned long long a0[1025], struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_0 **v1;  // [bp-0x18]\n
\n
    v1 = a1;\n
    for (v0 = 0; v0 < a0[0x400]; v0 += 1)\n
    {\n
        cgc_fdprintf(1, \"\\t%d. \", v0 + 1, a0, a4);\n
        v1(a0[v0]);\n
    }\n
    return v0;\n
}\n
", "4238259:sub_40abb3": null, "4238272:_ZN4ListIP5SauceE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::is_empty(struct_0 *a0)\n
{\n
    return !a0->field_2000;\n
}\n
", "4238302:sub_40abde": null, "4238304:_ZN4ListIP5SauceE10print_listEPFvPvE": "long long List::print_list(unsigned long long a0[1025], struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_0 **v1;  // [bp-0x18]\n
\n
    v1 = a1;\n
    for (v0 = 0; v0 < a0[0x400]; v0 += 1)\n
    {\n
        cgc_fdprintf(1, \"\\t%d. \", v0 + 1, a0, a4);\n
        v1(a0[v0]);\n
    }\n
    return v0;\n
}\n
", "4238419:sub_40ac53": null, "4238432:_ZN4ListIP5SauceE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::length(struct_0 *a0)\n
{\n
    return a0->field_2000;\n
}\n
", "4238453:sub_40ac75": null, "4238464:_ZN7Topping12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Topping::get_calories(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4238481:sub_40ac91": null, "4238496:_ZN4ListIP5SauceEixEm": "typedef struct struct_0 {\n
    char padding_0[8192];\n
    unsigned long long field_2000;\n
} struct_0;\n
\n
long long List::operator[](struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    if (a1 < a0->field_2000)\n
    {\n
        v0 = &a0->padding_0[8 * a1];\n
        return v0;\n
    }\n
    v0 = &a0->padding_0[8 * a0->field_2000];\n
    return v0;\n
}\n
", "4238585:sub_40acf9": null, "4238592:_ZN7Topping9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long Topping::get_carbs(struct_0 *a0)\n
{\n
    return a0->field_14;\n
}\n
", "4238609:sub_40ad11": null, "4238624:_ZN7Topping16get_topping_nameEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long Topping::get_topping_name(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4238642:sub_40ad32": null, "4238656:_ZN9PizzaBowlC1Eb": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16400];\n
    char field_4018;\n
} struct_0;\n
\n
extern char g_410100;\n
\n
long long PizzaBowl::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x11]\n
\n
    v0 = a1 & 1;\n
    Pizza::__base_ctor__(a0);\n
    a0->field_0 = &g_410100;\n
    a0->field_4018 = v0 & 1;\n
    return a0;\n
}\n
", "4238725:sub_40ad85": null, "4238736:_ZN9PizzaBowlD2Ev": "long long PizzaBowl::__base_dtor__(unsigned long long *a0)\n
{\n
    return Pizza::__base_dtor__(a0);\n
}\n
", "4238763:sub_40adab": null, "4238768:_ZN9PizzaBowlD0Ev": "long long PizzaBowl::__deleting_dtor__(unsigned long a0)\n
{\n
    PizzaBowl::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4238808:sub_40add8": null, "4238816:_ZN9PizzaBowl17add_side_of_breadEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaBowl::add_side_of_bread(struct_0 *a0)\n
{\n
    a0->field_4018 = 1;\n
    return a0;\n
}\n
", "4238837:sub_40adf5": null, "4238848:_ZN9PizzaBowl20remove_side_of_breadEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaBowl::remove_side_of_bread(struct_0 *a0)\n
{\n
    a0->field_4018 = 0;\n
    return a0;\n
}\n
", "4238869:sub_40ae15": null, "4238880:_ZN9PizzaBowl12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaBowl::get_calories(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
\n
    *(&v0) = ((a0->field_4018 & 1) ? 0 : 180);\n
    return Pizza::get_calories(a0) + v0;\n
}\n
", "4238938:sub_40ae5a": null, "4238944:_ZN9PizzaBowl9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaBowl::get_carbs(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
\n
    *(&v0) = ((a0->field_4018 & 1) ? 0 : 26);\n
    return Pizza::get_carbs(a0) + v0;\n
}\n
", "4239002:sub_40ae9a": null, "4239008:_ZN9PizzaBowl13get_prep_timeEv": "long long PizzaBowl::get_prep_time(unsigned int a0)\n
{\n
    return Pizza::get_prep_time(a0) + 120;\n
}\n
", "4239038:sub_40aebe": null, "4239040:_ZN9PizzaBowl11print_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaBowl::print_pizza(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18], Other Possible Types: unsigned long long\n
\n
    v0 = \"WHOOPS\";\n
    if ((a0->field_4018 & 1))\n
        v0 = \"Yep\";\n
    else\n
        v0 = \"Nah\";\n
    cgc_fdprintf(1, \"The Famous Pizza Bowl. Bread on the side? - %s\\n
\", v0, \"WHOOPS\", a4);\n
    return Pizza::print_pizza(a0, \"The Famous Pizza Bowl. Bread on the side? - %s\\n
\", a2, \"WHOOPS\", a4);\n
}\n
", "4239149:sub_40af2d": null, "4239152:_ZN14PizzaIoManagerC2EP5Pizza": "extern char g_410140;\n
\n
long long PizzaIoManager::__base_ctor__(unsigned long long a0[6], unsigned long a1)\n
{\n
    IoManager::__ctor__(a0, 0x200);\n
    a0[0] = &g_410140;\n
    a0[5] = a1;\n
    return a0;\n
}\n
", "4239218:sub_40af72": null, "4239232:_ZN14PizzaIoManagerD2Ev": "extern char g_410140;\n
\n
long long PizzaIoManager::__base_dtor__(unsigned long long a0[6])\n
{\n
    unsigned long long v0[6];  // [bp-0x10]\n
    unsigned long long v2[6];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = &g_410140;\n
    v2[5] = 0;\n
    return IoManager::__base_dtor__(v0);\n
}\n
", "4239281:sub_40afb1": null, "4239296:_ZN14PizzaIoManagerD0Ev": "long long PizzaIoManager::__deleting_dtor__(unsigned long a0)\n
{\n
    PizzaIoManager::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4239336:sub_40afe8": null, "4239344:_ZN14PizzaIoManager16create_pizza_pieEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long PizzaIoManager::create_pizza_pie(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x9]\n
    unsigned long long v4;  // rcx\n
\n
    while (true)\n
    {\n
        cgc_fdprintf(1, \"Select Size\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"1. Small\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"2. Medium\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"3. Large\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v1 = IoManager::readnum(a0, 0);\n
        if (v1 >= 1 && v1 <= 3)\n
            break;\n
        cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
    }\n
    v0 = operator new(16432);\n
    PizzaPie::__base_ctor__(v0, v1);\n
    v4 = v0;\n
    a0->field_28 = v4;\n
    if (!a0->field_28)\n
    {\n
        cgc_fdprintf(1, \"Error creating a pizza right now. Please try again later\\n
\", a2, v4, a4);\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    cgc_fdprintf(1, \"Successfully added a new Pizza Pie!\\n
\", a2, v4, a4);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4239640:sub_40b118": null, "4239648:_ZN14PizzaIoManager16create_pizza_subEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long PizzaIoManager::create_pizza_sub(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x9]\n
    char v6;  // cl\n
    unsigned long long v7;  // rcx\n
\n
    while (true)\n
    {\n
        cgc_fdprintf(1, \"Select Size\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"1. 6 inch\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"2. 12 inch\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v1 = IoManager::readnum(a0, 0);\n
        if (v1 >= 1 && v1 <= 2)\n
            break;\n
        cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
    }\n
    v3 = v1;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, \"Select Bread Type\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"1. White\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"2. Wheat\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v1 = IoManager::readnum(a0, 0);\n
        if (v1 >= 1 && v1 <= 2)\n
            break;\n
        cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
    }\n
    v2 = v1;\n
    v0 = operator new(16432);\n
    v6 = v3;\n
    PizzaSub::__base_ctor__(v0, v3, v2, rcx<8>);\n
    v7 = v0;\n
    a0->field_28 = v7;\n
    if (!a0->field_28)\n
    {\n
        cgc_fdprintf(1, \"Error creating a pizza right now. Please try again later\\n
\", a2, v7, a4);\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    cgc_fdprintf(1, \"Successfully added a new Pizza Sub!\\n
\", a2, v7, a4);\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4240081:sub_40b2d1": null, "4240096:_ZN14PizzaIoManager17create_pizza_bowlEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long PizzaIoManager::create_pizza_bowl(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x38]\n
    char v2;  // [bp-0x31]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x1c]\n
    char v7;  // [bp-0x9]\n
    unsigned long long v9;  // rcx\n
\n
    while (true)\n
    {\n
        v3 = 0;\n
        v2 = 0;\n
        v1 = 1;\n
        cgc_fdprintf(1, \"Side of bread?\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v1, \"1. Yes\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v1, \"2. No\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v1, \"Choice: \", a2, a3, a4);\n
        v6 = IoManager::readnum(a0, v3);\n
        v4 = v6;\n
        if (v4 == 1)\n
        {\n
            v5 = 1;\n
            break;\n
        }\n
        else if (v4 != 2)\n
        {\n
            cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            break;\n
        }\n
    }\n
    v0 = operator new(16416);\n
    PizzaBowl::__ctor__(v0, v5 & 1);\n
    v9 = v0;\n
    a0->field_28 = v9;\n
    if (!a0->field_28)\n
    {\n
        cgc_fdprintf(1, \"Error creating a pizza right now. Please try again later\\n
\", a2, v9, a4);\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
    cgc_fdprintf(1, \"Successfully added a new Pizza Bowl!\\n
\", a2, v9, a4);\n
    v7 = 1;\n
    return v7 & 1;\n
}\n
", "4240417:sub_40b421": null, "4240432:_ZN14PizzaIoManager12add_toppingsEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
extern char g_40d638;\n
extern char g_40d811;\n
extern char g_40d820;\n
\n
long long PizzaIoManager::add_toppings(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x35]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30]\n
    struct_1 *v4;  // [bp-0x28]\n
    struct_0 *v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v10;  // rax\n
\n
    v9 = a0;\n
    v4 = &a0->padding_0;\n
    v7 = 0;\n
    *(&v5) = 0;\n
    while (true)\n
    {\n
        *(&v9) = v5 ^ 255;\n
        if (!((v5 ^ 255) & 1))\n
            break;\n
        v2 = 0;\n
        v1 = 0;\n
        v0 = 1;\n
        cgc_fdprintf(1, \"Select topping type:\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"1. Cheese\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"2. Meat\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"3. Veggies\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"4. No More Toppings\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"Choice: \", a2, a3, a4);\n
        v6 = IoManager::readnum(v4, v2);\n
        v10 = v6 - 1;\n
        a3 = v10;\n
        v3 = v10;\n
        switch (v10)\n
        {\n
        case 0:\n
            Cheese::list_options();\n
            cgc_fdprintf(1, \"Enter topping name: \", a2, &g_40d638, a4);\n
            if (!(IoManager::readline(v4, 0) & 1))\n
                cgc_fdprintf(1, \"Failed reading input\\n
\", a2, &g_40d638, a4);\n
            else\n
                v7 = Cheese::select_cheese(IoManager::get_last_input(v4));\n
            break;\n
        case 1:\n
            Meat::list_options();\n
            cgc_fdprintf(1, \"Enter topping name: \", a2, &g_40d638, a4);\n
            if (!(IoManager::readline(v4, 0) & 1))\n
                cgc_fdprintf(1, \"Failed reading input\\n
\", a2, &g_40d638, a4);\n
            else\n
                v7 = Meat::add_meat(IoManager::get_last_input(v4));\n
            break;\n
        case 2:\n
            Veggie::list_options();\n
            cgc_fdprintf(1, \"Enter topping name: \", a2, &g_40d638, a4);\n
            if (!(IoManager::readline(v4, 0) & 1))\n
                cgc_fdprintf(1, \"Failed reading input\\n
\", a2, &g_40d638, a4);\n
            else\n
                v7 = Veggie::pick_veggie(IoManager::get_last_input(v4));\n
            break;\n
        case 3:\n
            *(&v5) = 1;\n
            continue;\n
        default:\n
            v9 = cgc_fdprintf(1, \"Bad Choice\\n
\", a2, v10, a4);\n
            continue;\n
        }\n
    }\n
    return v9;\n
}\n
", "4241073:sub_40b6b1": null, "4241088:_ZN14PizzaIoManager15remove_toppingsEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
long long PizzaIoManager::remove_toppings(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x15]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rax\n
\n
    v5 = a0;\n
    v1 = &a0->padding_0;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        *(&v5) = v2 ^ 255;\n
        if (!((v2 ^ 255) & 1))\n
            return v5;\n
        if (!Pizza::get_num_toppings(*(&v1->field_28)))\n
        {\n
            v5 = cgc_fdprintf(1, \"No Toppings to remove\\n
\", a2, a3, a4);\n
            return v5;\n
        }\n
        cgc_fdprintf(1, \"Toppings Added\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"\\t0. Cancel\\n
\", a2, a3, a4);\n
        Pizza::print_toppings(*(&v1->field_28), \"\\t0. Cancel\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v3 = IoManager::readnum(v1, 0);\n
        if (!v3)\n
        {\n
            v5 = cgc_fdprintf(1, \"Finished removing toppings\\n
\", a2, a3, a4);\n
            return v5;\n
        }\n
        v0 = v3;\n
        a3 = Pizza::get_num_toppings(*(&v1->field_28));\n
        if (v0 > a3)\n
        {\n
            v6 = cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, \"Removed Topping\\n
\", a2, a3, a4);\n
            v3 -= 1;\n
            v7 = Pizza::remove_topping(*(&v1->field_28), v3);\n
        }\n
    }\n
}\n
", "4241418:sub_40b80a": null, "4241424:_ZN14PizzaIoManager10add_saucesEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
long long PizzaIoManager::add_sauces(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    int tmp_10;  // tmp #10\n
    char v1;  // [bp-0x31]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    struct_1 *v4;  // [bp-0x28]\n
    struct_0 *v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v10;  // rax\n
\n
    v9 = a0;\n
    v4 = &a0->padding_0;\n
    v7 = 0;\n
    *(&v5) = 0;\n
    while (true)\n
    {\n
        *(&v9) = v5 ^ 255;\n
        if (!((v5 ^ 255) & 1))\n
            break;\n
        v2 = 0;\n
        v1 = 0;\n
        v0 = 1;\n
        cgc_fdprintf(1, \"Select an option:\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"1. Add Sauce\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"2. No More Sauces\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"Choice: \", a2, a3, a4);\n
        v6 = IoManager::readnum(v4, v2);\n
        v3 = v6;\n
        if (v3 == 1)\n
        {\n
            Sauce::list_options();\n
            cgc_fdprintf(1, \"Enter sauce name: \", a2, a3, a4);\n
            if (!(IoManager::readline(v4, 0) & 1))\n
                cgc_fdprintf(1, \"Failed reading input\\n
\", a2, a3, a4);\n
            else\n
                v7 = Sauce::pour_sauce(IoManager::get_last_input(v4));\n
            if (!v7)\n
            {\n
                v9 = cgc_fdprintf(1, \"Bad sauce name\\n
\", a2, a3, a4);\n
            }\n
            else\n
            {\n
                Pizza::add_sauce(*(&v4->field_28), v7);\n
                v9 = cgc_fdprintf(1, \"Added sauce\\n
\", a2, a3, a4);\n
            }\n
        }\n
        else\n
        {\n
            v10 = v3;\n
            tmp_10 = v10;\n
            v9 = v10 - 2;\n
            if (tmp_10 == 2)\n
                *(&v5) = 1;\n
            else\n
                v9 = cgc_fdprintf(1, \"Bad Choice\\n
\", a2, a3, a4);\n
        }\n
    }\n
    return v9;\n
}\n
", "4241825:sub_40b9a1": null, "4241840:_ZN14PizzaIoManager13remove_saucesEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
long long PizzaIoManager::remove_sauces(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x15]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rax\n
\n
    v5 = a0;\n
    v1 = &a0->padding_0;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        *(&v5) = v2 ^ 255;\n
        if (!((v2 ^ 255) & 1))\n
            return v5;\n
        if (!Pizza::get_num_sauces(*(&v1->field_28)))\n
        {\n
            v5 = cgc_fdprintf(1, \"No sauces to remove\\n
\", a2, a3, a4);\n
            return v5;\n
        }\n
        cgc_fdprintf(1, \"Sauces on the side\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"\\t0. Cancel\\n
\", a2, a3, a4);\n
        Pizza::print_sauces(*(&v1->field_28), \"\\t0. Cancel\\n
\", a2, a3, a4);\n
        cgc_fdprintf(1, \"Choice: \", a2, a3, a4);\n
        v3 = IoManager::readnum(v1, 0);\n
        if (!v3)\n
        {\n
            v5 = cgc_fdprintf(1, \"Finished removing sauces\\n
\", a2, a3, a4);\n
            return v5;\n
        }\n
        v0 = v3;\n
        a3 = Pizza::get_num_sauces(*(&v1->field_28));\n
        if (v0 > a3)\n
        {\n
            v6 = cgc_fdprintf(1, \"Bad Selection\\n
\", a2, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, \"Removed sauce\\n
\", a2, a3, a4);\n
            v3 -= 1;\n
            v7 = Pizza::remove_sauce(*(&v1->field_28), v3);\n
        }\n
    }\n
}\n
", "4242170:sub_40bafa": null, "4242176:_ZN14PizzaIoManager9new_pizzaEv": "long long PizzaIoManager::new_pizza(void* a0, unsigned int a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x31]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x1c]\n
    char v5;  // [bp-0x9]\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
        v0 = 1;\n
        cgc_fdprintf(1, \"Choose what the kind of pizza\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"1. Pizza Pie - The classic!\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"2. Pizza Sub - All the fun, on a bun\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"3. Pizza Bowl - Our own twist\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"Choice: \", a2, a3, a4);\n
        v4 = IoManager::readnum(a0, v2);\n
        v3 = v4;\n
        if (v3 == 1)\n
        {\n
            PizzaIoManager::create_pizza_pie(a0, a1, a2, a3, a4);\n
            break;\n
        }\n
        else if (v3 == 2)\n
        {\n
            PizzaIoManager::create_pizza_sub(a0, a1, a2, a3, a4);\n
            break;\n
        }\n
        else if (v3 != 3)\n
        {\n
            cgc_fdprintf(1, \"Bad Choice\\n
\", a2, a3, a4);\n
        }\n
        else\n
        {\n
            PizzaIoManager::create_pizza_bowl(a0, a1, a2, a3, a4);\n
            break;\n
        }\n
    }\n
    if ((PizzaIoManager::edit_pizza(a0, 0) & 1))\n
    {\n
        cgc_fdprintf(1, \"Successfully added pizza!\\n
\", a2, a3, a4);\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    cgc_fdprintf(1, \"Error: Try again later\\n
\", a2, a3, a4);\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4242529:sub_40bc61": null, "4242544:_ZN14PizzaIoManager10edit_pizzaEP5Pizza": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern unsigned int g_40d648;\n
\n
long long PizzaIoManager::edit_pizza(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char v1;  // [bp-0x3d]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned long v3;  // [bp-0x38]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6;  // [bp-0x9]\n
    unsigned long long v8;  // rax\n
\n
    if (a1)\n
    {\n
        a3 = a1;\n
        a0->field_28 = a1;\n
    }\n
    if (!a0->field_28)\n
    {\n
        cgc_fdprintf(1, \"No Pizza to edit\\n
\", a2, a1, a4);\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    v4 = 0;\n
    while (((v4 ^ 255) & 1))\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
        v0 = 1;\n
        cgc_fdprintf(1, \"Select an option:\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"1. Add Toppings\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"2. Remove Toppings\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"3. Add Sauce\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"4. Remove Sauce\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"5. Finished With Pizza\\n
\", a2, a3, a4);\n
        cgc_fdprintf(v0, \"Choice: \", a2, a3, a4);\n
        v5 = IoManager::readnum(a0, v2);\n
        v8 = v5 - 1;\n
        a3 = v8;\n
        v3 = v8;\n
        switch (v8)\n
        {\n
        case 0:\n
            PizzaIoManager::add_toppings(a0, a1, a2, &g_40d648, a4);\n
            break;\n
        case 1:\n
            PizzaIoManager::remove_toppings(a0, a1, a2, &g_40d648, a4);\n
            break;\n
        case 2:\n
            PizzaIoManager::add_sauces(a0, a1, a2, &g_40d648, a4);\n
            break;\n
        case 3:\n
            PizzaIoManager::remove_sauces(a0, a1, a2, &g_40d648, a4);\n
            break;\n
        case 4:\n
            v4 = 1;\n
            break;\n
        default:\n
            cgc_fdprintf(1, \"Bad Choice\\n
\", a2, v8, a4);\n
            continue;\n
        }\n
    }\n
    v6 = 1;\n
    return v6 & 1;\n
}\n
", "4242962:sub_40be12": null, "4242976:_ZN14PizzaIoManager9get_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long PizzaIoManager::get_pizza(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
\n
    v0 = a0->field_28;\n
    a0->field_28 = 0;\n
    return v0;\n
}\n
", "4243010:sub_40be42": null, "4243024:_ZN8PizzaPieC2Eh": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16400];\n
    char field_4018;\n
    char padding_4019[7];\n
    unsigned long long field_4020;\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
extern unsigned long long _ZN12_GLOBAL__N_110_pie_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_pie_caloriesE;\n
extern char _ZN12_GLOBAL__N_17_pie_szE;\n
extern char g_410160;\n
\n
long long PizzaPie::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    Pizza::__base_ctor__(a0);\n
    a0->field_0 = &g_410160;\n
    _GLOBAL__N_1::set_pie_size_helper(a1);\n
    a0->field_4018 = _ZN12_GLOBAL__N_17_pie_szE;\n
    a0->field_4020 = _ZN12_GLOBAL__N_113_pie_caloriesE;\n
    a0->field_4028 = _ZN12_GLOBAL__N_110_pie_carbsE;\n
    return a0;\n
}\n
", "4243132:sub_40bebc": null, "4243136:_ZN12_GLOBAL__N_119set_pie_size_helperEj": "extern unsigned long long _ZN12_GLOBAL__N_110_pie_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_pie_caloriesE;\n
extern char _ZN12_GLOBAL__N_17_pie_szE;\n
\n
long long _GLOBAL__N_1::set_pie_size_helper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_25;  // tmp #25\n
    int tmp_10;  // tmp #10\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
    unsigned long long v5;  // rax\n
\n
    v2 = a0;\n
    v0 = v2;\n
    tmp_25 = v2;\n
    v3 = v2 - 1;\n
    if (tmp_25 != 1)\n
    {\n
        v4 = v0;\n
        tmp_10 = v4;\n
        v3 = v4 - 2;\n
        if (tmp_10 == 2)\n
        {\n
            _ZN12_GLOBAL__N_17_pie_szE = 2;\n
            _ZN12_GLOBAL__N_113_pie_caloriesE = 1500;\n
            _ZN12_GLOBAL__N_110_pie_carbsE = 284;\n
            return v3;\n
        }\n
        v5 = v0;\n
        tmp_10 = v5;\n
        v3 = v5 - 3;\n
        if (tmp_10 == 3)\n
        {\n
            _ZN12_GLOBAL__N_17_pie_szE = 3;\n
            _ZN12_GLOBAL__N_113_pie_caloriesE = 2300;\n
            _ZN12_GLOBAL__N_110_pie_carbsE = 356;\n
            return v3;\n
        }\n
    }\n
    _ZN12_GLOBAL__N_17_pie_szE = 1;\n
    _ZN12_GLOBAL__N_113_pie_caloriesE = 1000;\n
    _ZN12_GLOBAL__N_110_pie_carbsE = 222;\n
    return v3;\n
}\n
", "4243301:sub_40bf65": null, "4243312:_ZN8PizzaPieD1Ev": "long long PizzaPie::__dtor__(unsigned long long *a0)\n
{\n
    return Pizza::__base_dtor__(a0);\n
}\n
", "4243339:sub_40bf8b": null, "4243344:_ZN8PizzaPieD0Ev": "long long PizzaPie::__deleting_dtor__(unsigned long a0)\n
{\n
    PizzaPie::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4243384:sub_40bfb8": null, "4243392:_ZN8PizzaPie12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[16416];\n
    unsigned long long field_4020;\n
} struct_0;\n
\n
long long PizzaPie::get_calories(struct_0 *a0)\n
{\n
    return Pizza::get_calories(a0) + a0->field_4020;\n
}\n
", "4243436:sub_40bfec": null, "4243440:_ZN8PizzaPie9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[16424];\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
long long PizzaPie::get_carbs(struct_0 *a0)\n
{\n
    return Pizza::get_carbs(a0) + a0->field_4028;\n
}\n
", "4243484:sub_40c01c": null, "4243488:_ZN8PizzaPie12get_pie_sizeEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaPie::get_pie_size(struct_0 *a0)\n
{\n
    return a0->field_4018;\n
}\n
", "4243509:sub_40c035": null, "4243520:_ZN8PizzaPie12set_pie_sizeEh": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
    char padding_4019[7];\n
    unsigned long long field_4020;\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
extern unsigned long long _ZN12_GLOBAL__N_110_pie_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_pie_caloriesE;\n
extern char _ZN12_GLOBAL__N_17_pie_szE;\n
\n
long long PizzaPie::set_pie_size(struct_0 *a0, unsigned long a1)\n
{\n
    _GLOBAL__N_1::set_pie_size_helper(a1);\n
    a0->field_4018 = _ZN12_GLOBAL__N_17_pie_szE;\n
    a0->field_4020 = _ZN12_GLOBAL__N_113_pie_caloriesE;\n
    a0->field_4028 = _ZN12_GLOBAL__N_110_pie_carbsE;\n
    return a0;\n
}\n
", "4243605:sub_40c095": null, "4243616:_ZN8PizzaPie13get_prep_timeEv": "long long PizzaPie::get_prep_time(unsigned int a0)\n
{\n
    return Pizza::get_prep_time(a0) + 1080;\n
}\n
", "4243648:_ZN8PizzaPie11print_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaPie::print_pizza(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18], Other Possible Types: unsigned long long\n
\n
    v0 = \"WHOOPS\";\n
    if (a0->field_4018 == 1)\n
    {\n
        v0 = \"SMALL\";\n
    }\n
    else if (a0->field_4018 == 2)\n
    {\n
        v0 = \"MEDIUM\";\n
    }\n
    else if (a0->field_4018 == 3)\n
    {\n
        v0 = \"LARGE\";\n
    }\n
    cgc_fdprintf(1, \"Classic Pizza Pie, Size: %s\\n
\", v0, \"WHOOPS\", a4);\n
    return Pizza::print_pizza(a0, \"Classic Pizza Pie, Size: %s\\n
\", a2, \"WHOOPS\", a4);\n
}\n
", "4243826:sub_40c172": null, "4243840:_ZN8PizzaSubC2Ehh": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16400];\n
    char field_4018;\n
    char field_4019;\n
    char padding_401a[6];\n
    unsigned long long field_4020;\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
extern unsigned long long _ZN12_GLOBAL__N_110_sub_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_sub_caloriesE;\n
extern char g_4101a0;\n
\n
long long PizzaSub::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    Pizza::__base_ctor__(a0);\n
    a0->field_0 = &g_4101a0;\n
    _GLOBAL__N_1::set_sub_size_helper(a1);\n
    a0->field_4018 = a1;\n
    a0->field_4020 = _ZN12_GLOBAL__N_113_sub_caloriesE;\n
    a0->field_4028 = _ZN12_GLOBAL__N_110_sub_carbsE;\n
    if (a2 - 1 > 1)\n
    {\n
        a0->field_4019 = 1;\n
        return a0;\n
    }\n
    a0->field_4019 = a2;\n
    return a0;\n
}\n
", "4243996:sub_40c21c": null, "4244000:_ZN12_GLOBAL__N_119set_sub_size_helperEj": "extern unsigned long long _ZN12_GLOBAL__N_110_sub_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_sub_caloriesE;\n
extern char _ZN12_GLOBAL__N_19_sub_sizeE;\n
\n
long long _GLOBAL__N_1::set_sub_size_helper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_25;  // tmp #25\n
    int tmp_10;  // tmp #10\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
\n
    v2 = a0;\n
    v0 = v2;\n
    tmp_25 = v2;\n
    v3 = v2 - 1;\n
    if (tmp_25 != 1)\n
    {\n
        v4 = v0;\n
        tmp_10 = v4;\n
        v3 = v4 - 2;\n
        if (tmp_10 == 2)\n
        {\n
            _ZN12_GLOBAL__N_19_sub_sizeE = 2;\n
            _ZN12_GLOBAL__N_113_sub_caloriesE = 1800;\n
            _ZN12_GLOBAL__N_110_sub_carbsE = 356;\n
            return v3;\n
        }\n
    }\n
    _ZN12_GLOBAL__N_19_sub_sizeE = 1;\n
    _ZN12_GLOBAL__N_113_sub_caloriesE = 900;\n
    _ZN12_GLOBAL__N_110_sub_carbsE = 222;\n
    return v3;\n
}\n
", "4244114:sub_40c292": null, "4244128:_ZN8PizzaSubD1Ev": "long long PizzaSub::__dtor__(unsigned long long *a0)\n
{\n
    return Pizza::__base_dtor__(a0);\n
}\n
", "4244155:sub_40c2bb": null, "4244160:_ZN8PizzaSubD0Ev": "long long PizzaSub::__deleting_dtor__(unsigned long a0)\n
{\n
    PizzaSub::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4244200:sub_40c2e8": null, "4244208:_ZN8PizzaSub12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[16416];\n
    unsigned long long field_4020;\n
} struct_0;\n
\n
long long PizzaSub::get_calories(struct_0 *a0)\n
{\n
    return Pizza::get_calories(a0) + a0->field_4020;\n
}\n
", "4244252:sub_40c31c": null, "4244256:_ZN8PizzaSub9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[16424];\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
long long PizzaSub::get_carbs(struct_0 *a0)\n
{\n
    return Pizza::get_carbs(a0) + a0->field_4028;\n
}\n
", "4244300:sub_40c34c": null, "4244304:_ZN8PizzaSub12get_sub_sizeEv": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
} struct_0;\n
\n
long long PizzaSub::get_sub_size(struct_0 *a0)\n
{\n
    return a0->field_4018;\n
}\n
", "4244325:sub_40c365": null, "4244336:_ZN8PizzaSub12set_sub_sizeEh": "typedef struct struct_0 {\n
    char padding_0[16408];\n
    char field_4018;\n
    char padding_4019[7];\n
    unsigned long long field_4020;\n
    unsigned long long field_4028;\n
} struct_0;\n
\n
extern unsigned long long _ZN12_GLOBAL__N_110_sub_carbsE;\n
extern unsigned long long _ZN12_GLOBAL__N_113_sub_caloriesE;\n
\n
long long PizzaSub::set_sub_size(struct_0 *a0, unsigned long a1)\n
{\n
    _GLOBAL__N_1::set_sub_size_helper(a1);\n
    a0->field_4018 = a1;\n
    a0->field_4020 = _ZN12_GLOBAL__N_113_sub_caloriesE;\n
    a0->field_4028 = _ZN12_GLOBAL__N_110_sub_carbsE;\n
    return a0;\n
}\n
", "4244418:sub_40c3c2": null, "4244432:_ZN8PizzaSub13get_prep_timeEv": "long long PizzaSub::get_prep_time(unsigned int a0)\n
{\n
    return Pizza::get_prep_time(a0) + 240;\n
}\n
", "4244464:_ZN8PizzaSub11print_pizzaEv": "long long PizzaSub::print_pizza(char a0[16410], unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x20], Other Possible Types: unsigned long long\n
    unsigned long v1;  // [bp-0x18], Other Possible Types: unsigned long long\n
\n
    v1 = \"WHOOPS\";\n
    v0 = \"WHOOPS\";\n
    if (a0[16408] == 1)\n
    {\n
        v1 = \"6 Inch\";\n
    }\n
    else if (a0[16408] == 2)\n
    {\n
        v1 = \"12 Inch\";\n
    }\n
    if (a0[16409] == 1)\n
    {\n
        v0 = \"White\";\n
    }\n
    else if (a0[16409] == 2)\n
    {\n
        v0 = \"Wheat\";\n
    }\n
    cgc_fdprintf(1, \"Pizza Sub, Size: %s %s\\n
\", v1, v0, a4);\n
    return Pizza::print_pizza(a0, \"Pizza Sub, Size: %s %s\\n
\", a2, a3, a4);\n
}\n
", "4244688:_ZN5SauceC2EPKcii": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char g_4101e0;\n
\n
long long Sauce::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    Topping::__base_ctor__(a0);\n
    a0->field_0 = &g_4101e0;\n
    a0->field_8 = a1;\n
    a0->field_10 = a2;\n
    a0->field_14 = a3;\n
    return a0;\n
}\n
", "4244767:sub_40c51f": null, "4244768:_ZN5SauceD1Ev": "long long Sauce::__dtor__(unsigned long long a0)\n
{\n
    return Topping::__dtor__(a0);\n
}\n
", "4244795:sub_40c53b": null, "4244800:_ZN5SauceD0Ev": "long long Sauce::__deleting_dtor__(unsigned long a0)\n
{\n
    Sauce::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4244840:sub_40c568": null, "4244848:_ZN5Sauce10pour_sauceEPKc": "long long Sauce::pour_sauce(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v1[0]) = _GLOBAL__N_1::find_sauce_entry(a0);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = operator new(24);\n
    Sauce::__base_ctor__(v0, *(&v1[0]), v1[2], v1[3]);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4244958:sub_40c5de": null, "4244960:_ZN12_GLOBAL__N_116find_sauce_entryEPKc": "extern struct_0 _ZN12_GLOBAL__N_16saucesE;\n
\n
long long _GLOBAL__N_1::find_sauce_entry(char *a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 8)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!cgc_strcasecmp((&_ZN12_GLOBAL__N_16saucesE.field_0)[2 * v0], a0))\n
        {\n
            v1 = &(&_ZN12_GLOBAL__N_16saucesE.field_0)[2 * v0];\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4245097:sub_40c669": null, "4245104:_ZN5Sauce12list_optionsEv": "long long Sauce::list_options()\n
{\n
    return ::0x40c680::_GLOBAL__N_1::print_list();\n
}\n
", "4245115:sub_40c67b": null, "4245120:_ZN12_GLOBAL__N_110print_listEv": "extern char _ZN12_GLOBAL__N_16saucesE;\n
\n
long long _GLOBAL__N_1::print_list(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long long *v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < 8; v0 = v0 + 1)\n
    {\n
        cgc_fdprintf(1, \"%d. %s\\n
\", v0 + 1, *((&_ZN12_GLOBAL__N_16saucesE + 0x10 * v0)), a4);\n
    }\n
    return v0 + 1;\n
}\n
", "4245218:sub_40c6e2": null, "4245232:_ZN5Sauce13is_vegetarianEv": "long long Sauce::is_vegetarian(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 1;\n
}\n
", "4245249:sub_40c701": null, "4245264:_ZN5Sauce13contains_porkEv": "long long Sauce::contains_pork(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 0;\n
}\n
", "4245281:sub_40c721": null, "4245296:_ZN7ToppingD1Ev": "long long Topping::__dtor__(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    return v2;\n
}\n
", "4245306:sub_40c73a": null, "4245312:_ZN7ToppingD0Ev": "long long Topping::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4245312\n
}\n
", "4245322:sub_40c74a": null, "4245328:_ZNK7ToppingeqERKS_": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
long long Topping::operator== const(struct_0 *a0, struct_0 *a1)\n
{\n
    return !cgc_strcasecmp(a0->field_8, a1->field_8);\n
}\n
", "4245382:sub_40c786": null, "4245392:_ZNK7ToppingneERKS_": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
long long Topping::operator!= const(struct_0 *a0, struct_0 *a1)\n
{\n
    return cgc_strcasecmp(a0->field_8, a1->field_8);\n
}\n
", "4245446:sub_40c7c6": null, "4245456:_ZN6VeggieC1EPKcii": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char g_410240;\n
\n
long long Veggie::__ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    Topping::__base_ctor__(a0);\n
    a0->field_0 = &g_410240;\n
    a0->field_8 = a1;\n
    a0->field_10 = a2;\n
    a0->field_14 = a3;\n
    return a0;\n
}\n
", "4245535:sub_40c81f": null, "4245536:_ZN6VeggieD1Ev": "long long Veggie::__dtor__(unsigned int a0)\n
{\n
    return Topping::__dtor__(a0);\n
}\n
", "4245563:sub_40c83b": null, "4245568:_ZN6VeggieD0Ev": "long long Veggie::__deleting_dtor__(unsigned int a0)\n
{\n
    Veggie::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4245608:sub_40c868": null, "4245616:_ZN6Veggie11pick_veggieEPKc": "long long Veggie::pick_veggie(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v1[0]) = _GLOBAL__N_1::find_veggie_entry(a0);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = operator new(24);\n
    Veggie::__ctor__(v0, *(&v1[0]), v1[2], v1[3]);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4245726:sub_40c8de": null, "4245728:_ZN12_GLOBAL__N_117find_veggie_entryEPKc": "extern struct_0 _ZN12_GLOBAL__N_17veggiesE;\n
\n
long long _GLOBAL__N_1::find_veggie_entry(char *a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 8)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcasecmp((&_ZN12_GLOBAL__N_17veggiesE.field_0)[2 * v0], a0))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&_ZN12_GLOBAL__N_17veggiesE.field_0)[2 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4245865:sub_40c969": null, "4245872:_ZN6Veggie12list_optionsEv": "long long Veggie::list_options()\n
{\n
    return ::0x40c980::_GLOBAL__N_1::print_list();\n
}\n
", "4245883:sub_40c97b": null, "4245888:_ZN12_GLOBAL__N_110print_listEv": "extern char _ZN12_GLOBAL__N_17veggiesE;\n
\n
long long _GLOBAL__N_1::print_list(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long long *v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < 8; v0 = v0 + 1)\n
    {\n
        cgc_fdprintf(1, \"%d. %s\\n
\", v0 + 1, *((&_ZN12_GLOBAL__N_17veggiesE + 0x10 * v0)), a4);\n
    }\n
    return v0 + 1;\n
}\n
", "4245986:sub_40c9e2": null, "4246000:_ZN6Veggie13is_vegetarianEv": "long long Veggie::is_vegetarian(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 1;\n
}\n
", "4246017:sub_40ca01": null, "4246032:_ZN6Veggie13contains_porkEv": "long long Veggie::contains_pork(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 0;\n
}\n
", "4246052:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242888:__libc_start_main": null, "5242896:_Znam": null, "5242904:cgc_receive": null, "5242912:memcpy": null, "5242920:cgc_allocate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:cgc_deallocate": null, "5242952:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}