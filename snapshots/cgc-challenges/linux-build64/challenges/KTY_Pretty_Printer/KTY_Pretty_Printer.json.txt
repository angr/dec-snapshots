{"4202496:_init": "extern struct_0 *g_409628;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409628;\n
    if (g_409628)\n
        v1 = g_409628();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409648;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409648;\n
    goto *(4232784);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4232760);\n
}\n
", "4202672:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202709:sub_4020d5": null, "4202710:sub_4020d6": null, "4202720:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_409620;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202761:sub_402109": null, "4202768:register_tm_clones": "extern unsigned long long g_409630;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202825:sub_402149": null, "4202832:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_409638;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409638)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202885:sub_402185": null, "4202889:sub_402189": null, "4202896:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202905:sub_402199": null, "4202912:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203077:sub_402245": null, "4203088:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = cgc_isdigit(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203154:sub_402292": null, "4203168:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = cgc_isupper(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203234:sub_4022e2": null, "4203248:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4203274:sub_40230a": null, "4203280:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4203306:sub_40232a": null, "4203312:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4203338:sub_40234a": null, "4203344:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return ((a0 & -128) ^ 255) & 1;\n
}\n
", "4203372:sub_40236c": null, "4203376:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 32)\n
        v0 = a0 == 9;\n
    return v0 & 1;\n
}\n
", "4203418:sub_40239a": null, "4203424:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 127)\n
        v0 = a0 < 32;\n
    return v0 & 1;\n
}\n
", "4203466:sub_4023ca": null, "4203472:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 != 32)\n
    {\n
        v0 = cgc_isprint(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203529:sub_402409": null, "4203536:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 != 127;\n
    return v0 & 1;\n
}\n
", "4203578:sub_40243a": null, "4203584:cgc_ispunct": "extern char _punct;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&_punct)[a0];\n
}\n
", "4203608:sub_402458": null, "4203616:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    if (a0 > 8)\n
    {\n
        v0 = 1;\n
        if (a0 < 14)\n
            return v0 & 1;\n
    }\n
    v0 = a0 == 32;\n
    return v0 & 1;\n
}\n
", "4203668:sub_402494": null, "4203680:cgc_isxdigit": "extern char _xdigit;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return (&_xdigit)[a0];\n
}\n
", "4203704:sub_4024b8": null, "4203712:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4203727:sub_4024cf": null, "4203728:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4203785:sub_402509": null, "4203792:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & 95;\n
    return v0;\n
}\n
", "4203849:sub_402549": null, "4203856:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4203971:sub_4025c3": null, "4203984:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4204018:sub_4025f2": null, "4204032:cgc_malloc": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_1 *field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_1;\n
\n
extern struct_2 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_2 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        if (v4 >= 0x80000000)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4204486:sub_4027c6": null, "4204496:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4204658:sub_402872": null, "4204672:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204851:sub_402933": null, "4204864:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4205042:sub_4029f2": null, "4205056:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4205151:sub_402a5f": null, "4205152:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4205319:sub_402b07": null, "4205328:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4205514:sub_402bca": null, "4205520:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long long, struct_1 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_402da2;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_402da2:\n
    return v5;\n
}\n
", "4206002:sub_402db2": null, "4206016:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_1 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_remove_from_blist(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (a0->field_28)\n
        v0->field_28->field_20 = a0->field_20;\n
    v2 = a0;\n
    if (a0->field_20)\n
    {\n
        v2 = a0->field_20;\n
        *((v2 + 40)) = a0->field_28;\n
    }\n
    return v2;\n
}\n
", "4206096:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206204:sub_402e7c": null, "4206208:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a2)\n
        {\n
            if (*(v2) != *(v1))\n
            {\n
                v3 = *(v1) - *(v2);\n
                return v3;\n
            }\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206350:sub_402f0e": null, "4206352:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4206451:sub_402f73": null, "4206464:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4206610:sub_403012": null, "4206624:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v8 = a1;\n
    v7 = a3;\n
    v6 = 0;\n
    if (v8 >= a2)\n
    {\n
        v6 = cgc_output_number_printf(a0, (0 CONCAT v8) /m a2, a2, v7 - 1, a4);\n
        v8 = (0 CONCAT v8) /m a2 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if (!(a4 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4207025:sub_4031b1": null, "4207040:cgc_fdprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_fdprintf(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    unsigned int *v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v43;  // [bp-0x8]\n
    unsigned long v44;  // [bp+0x8]\n
    unsigned long long v45;  // rbp\n
    char v46;  // al\n
    int v47;  // xmm0\n
    int v48;  // xmm1\n
    int v49;  // xmm2\n
    int v50;  // xmm3\n
    int v51;  // xmm4\n
    int v52;  // xmm5\n
    int v53;  // xmm6\n
    int v54;  // xmm7\n
    unsigned long v55;  // r9\n
    char *v56;  // rax\n
    char *v57;  // rax\n
    unsigned long long v58;  // rdx\n
    unsigned int *v59;  // rax\n
    unsigned long long v60;  // rdx\n
    struct struct_0 **v61;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v62;  // rdx\n
    unsigned int *v63;  // rax\n
\n
    v45 = &v43;\n
    if (v46)\n
    {\n
        v17 = v47;\n
        v18 = v48;\n
        v19 = v49;\n
        v20 = v50;\n
        v21 = v51;\n
        v22 = v52;\n
        v23 = v53;\n
        v24 = v54;\n
    }\n
    v16 = v55;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v44;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v56 = v42;\n
        v42 = v56 + 1;\n
        v30 = *(v56);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_40362e:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v57 = v42;\n
                    a3 = v57 + 1;\n
                    v42 = a3;\n
                    v30 = *(v57);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_4035ed;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        a3 = v4;\n
                        v58 = v5;\n
                        v59 = v58 + a3->field_10;\n
                        a2 = v58 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v3 = v59;\n
                    }\n
                    else\n
                    {\n
                        a3 = v4;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 8;\n
                        v3 = a2;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_printf(a0, v40, 10, v36, v37);\n
                    goto LABEL_4035ed;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 <= 40)\n
                    {\n
                        a3 = v8;\n
                        v60 = v9;\n
                        v61 = v60 + a3->field_10;\n
                        a2 = v60 + 8;\n
                        *(&a3->field_0) = a2;\n
                    }\n
                    else\n
                    {\n
                        a3 = v8;\n
                        v62 = *((a3 + 8));\n
                        v61 = v62;\n
                        a2 = v62 + 1;\n
                        *((a3 + 8)) = a2;\n
                    }\n
                    v7 = v61;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_4035ed;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_4035ed:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_40362e;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                a3 = v1;\n
                a2 = v2;\n
                v63 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v0 = v63;\n
            }\n
            else\n
            {\n
                a3 = v1;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v0 = a2;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_printf(a0, v35, 16, v36, v37);\n
            goto LABEL_4035ed;\n
        }\n
    }\n
    return v38;\n
}\n
", "4208196:sub_403644": null, "4208208:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    char v2;  // [bp-0x61]\n
    char v3;  // [bp-0x51]\n
    char v4;  // [bp-0x41]\n
    char v5;  // [bp-0x31]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct struct_0 **v10;  // rax\n
    unsigned int *v11;  // rax\n
    struct struct_0 **v12;  // rax\n
    unsigned int *v13;  // rax\n
\n
    v7 = a2;\n
    v6 = a4;\n
    if (v7 >= a3)\n
    {\n
        cgc_output_number_sprintf(a0, a1, (0 CONCAT v7) /m a3, a3, v6 - 1, a5);\n
        v7 = (0 CONCAT v7) /m a3 >> 32;\n
    }\n
    if (v7 < a3 && v6 > 0)\n
    {\n
        while (true)\n
        {\n
            v6 -= 1;\n
            if (!v6)\n
                break;\n
            if ((a5 & 1))\n
            {\n
                v5 = 48;\n
                *(a1)->field_0 = v5;\n
            }\n
            else\n
            {\n
                v4 = 32;\n
                *(a1)->field_0 = v4;\n
            }\n
            v10 = a1;\n
            *(v10) = *(v10) + 1;\n
            v11 = a0;\n
            *(v11) = *(v11) + 1;\n
        }\n
    }\n
    if ((a5 & 2))\n
    {\n
        if (v7 < 10)\n
            v1 = v7 + 48;\n
        else\n
            v1 = v7 + 55;\n
        v3 = v1;\n
        *(a1)->field_0 = v3;\n
    }\n
    else\n
    {\n
        if (v7 < 10)\n
            v0 = v7 + 48;\n
        else\n
            v0 = v7 + 87;\n
        v2 = v0;\n
        *(a1)->field_0 = v2;\n
    }\n
    v12 = a1;\n
    *(v12) = *(v12) + 1;\n
    v13 = a0;\n
    *(v13) = *(v13) + 1;\n
    return a0;\n
}\n
", "4208672:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    unsigned int *v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v43;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v44;  // [bp-0x8]\n
    unsigned long v45;  // [bp+0x8]\n
    unsigned long long v46;  // rbp\n
    char v47;  // al\n
    int v48;  // xmm0\n
    int v49;  // xmm1\n
    int v50;  // xmm2\n
    int v51;  // xmm3\n
    int v52;  // xmm4\n
    int v53;  // xmm5\n
    int v54;  // xmm6\n
    int v55;  // xmm7\n
    unsigned long v56;  // r9\n
    char *v57;  // rax\n
    char *v58;  // rax\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    struct struct_0 **v66;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v67;  // rcx\n
    struct_1 *v68;  // rcx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    char *v73;  // rax\n
\n
    v46 = &v44;\n
    if (v47)\n
    {\n
        v17 = v48;\n
        v18 = v49;\n
        v19 = v50;\n
        v20 = v51;\n
        v21 = v52;\n
        v22 = v53;\n
        v23 = v54;\n
        v24 = v55;\n
    }\n
    v16 = v56;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v43 = a0;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v45;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v57 = v42;\n
        v42 = v57 + 1;\n
        v30 = *(v57);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            *(v43) = v25;\n
            v43 += 1;\n
            v38 += 1;\n
LABEL_403cc7:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v58 = v42;\n
                    v42 = v58 + 1;\n
                    v30 = *(v58);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                *(v43) = v29;\n
                v43 += 1;\n
                v38 += 1;\n
                goto LABEL_403c80;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        v59 = v4;\n
                        v60 = v5;\n
                        v61 = v60 + v59->field_10;\n
                        *(&v59->field_0) = v60 + 8;\n
                        v3 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v4;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v3 = v63;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        *(v43) = v27;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_sprintf(&v38, &v43, v40, 10, v36, v37);\n
                    goto LABEL_403c80;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 > 40)\n
                    {\n
                        v67 = v8;\n
                        v66 = v67->field_8;\n
                        v67->field_8 = v66 + 8;\n
                    }\n
                    else\n
                    {\n
                        v64 = v8;\n
                        v65 = v9;\n
                        v66 = v65 + v64->field_10;\n
                        *(&v64->field_0) = v65 + 8;\n
                    }\n
                    v7 = v66;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        *(v43) = v28;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_403c80;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    *(v43) = v26;\n
                    v43 += 1;\n
                    v38 += 1;\n
LABEL_403c80:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_403cc7;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                v68 = v1;\n
                v69 = v2;\n
                v70 = v69 + v68->field_10;\n
                *(&v68->field_0) = v69 + 8;\n
                v0 = v70;\n
            }\n
            else\n
            {\n
                v71 = v1;\n
                v72 = v71->field_8;\n
                v71->field_8 = &v72[2];\n
                v0 = v72;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_sprintf(&v38, &v43, v35, 16, v36, v37);\n
            goto LABEL_403c80;\n
        }\n
    }\n
    v73 = v43;\n
    v43 = v73 + 1;\n
    *(v73) = 0;\n
    return v38;\n
}\n
", "4209898:sub_403cea": null, "4209904:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        *(&v1) = cgc_malloc(a1);\n
        if (!*(&v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(*(&v1), a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(*(&v1), a0, a1);\n
        cgc_free(a0);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210129:sub_403dd1": null, "4210144:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a1)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210235:sub_403e3b": null, "4210240:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v1) - *(v2);\n
}\n
", "4210379:sub_403ecb": null, "4210384:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4210479:sub_403f2f": null, "4210480:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4210539:sub_403f6b": null, "4210544:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = v1 + 1;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4210765:sub_40404d": null, "4210768:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c], Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_40409a:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_40409a;\n
        if (v12 < 0)\n
            goto LABEL_40409a;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_4041a4:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_4041a4;\n
                v6 += 1;\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_404225;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_404225:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404391;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_40434e;\n
            }\n
            if (!v7)\n
            {\n
LABEL_40434e:\n
                if (v8 >= v12)\n
                    goto LABEL_404391;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_404345;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_404345:\n
                v8 += 10;\n
                goto LABEL_40434e;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_4042bf;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_4042bf:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404391:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4211683:sub_4043e3": null, "4211696:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4211737:sub_404419": null, "4211744:cgc_array_create": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
long long cgc_array_create(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28]\n
    struct_1 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_malloc(24);\n
    if (v1 && a1)\n
    {\n
        v1->field_10 = a1;\n
        v1->field_0 = 0;\n
        if (a0 <= 0)\n
            v0 = 16;\n
        else\n
            v0 = a0;\n
        v1->field_4 = v0;\n
        *(&v1->field_8) = cgc_malloc(v1->field_4 * 8);\n
        if (*(&v1->field_8))\n
        {\n
            v2 = &v1->field_0;\n
            return v2;\n
        }\n
LABEL_4044d8:\n
        if (v1)\n
        {\n
            if (*(&v1->field_8))\n
                cgc_free(*(&v1->field_8));\n
            cgc_free(v1);\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    goto LABEL_4044d8;\n
}\n
", "4211994:sub_40451a": null, "4212000:cgc__array_double_size": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc__array_double_size(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // rax\n
\n
    v1 = a0;\n
    if (a0->field_4 > 268435455)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = cgc_realloc(a0->field_8, v1->field_4 * 16);\n
    if (!v0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    a0->field_8 = v0;\n
    v4 = a0;\n
    v4->field_4 = v4->field_4 * 2;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212142:sub_4045ae": null, "4212144:cgc_array_append": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_array_append(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    v0 = a0;\n
    if (a0 && a1)\n
    {\n
        if (a0->field_4 == v0->field_0 && cgc__array_double_size(a0))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        *((a0->field_8 + v0->field_0 * 8)) = a1;\n
        v3 = a0;\n
        v3->field_0 = v3->field_0 + 1;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4212292:sub_404644": null, "4212304:cgc_array_get": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_array_get(struct_0 *a0, unsigned long a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1 < a0->field_0)\n
    {\n
        v0 = *((a0->field_8 + a1 * 8));\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4212380:sub_40469c": null, "4212384:cgc_array_length": "long long cgc_array_length(unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(a0);\n
    return v0;\n
}\n
", "4212429:sub_4046cd": null, "4212432:cgc_array_destroy": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_array_destroy(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long long v2;  // rax\n
\n
    if (!a0)\n
        return v2;\n
    if (*(&a0->field_8))\n
    {\n
        for (v0 = 0; v0 < a0->field_0; v0 += 1)\n
        {\n
            if (*((*(&a0->field_8) + (v0 << 3))))\n
                a0->field_10(*((*(&a0->field_8) + v0 * 8)));\n
        }\n
        cgc_free(*(&a0->field_8));\n
    }\n
    v2 = cgc_free(a0);\n
    return v2;\n
}\n
", "4212588:sub_40476c": null, "4212592:cgc_htbl_create": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[23];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_htbl_create(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_malloc(40);\n
    if (v1 && a1)\n
    {\n
        cgc_memset(v1, 0, 40);\n
        v1->field_20 = a1;\n
        if (a0 <= 0)\n
            v0 = 16;\n
        else\n
            v0 = a0;\n
        v1->field_0 = v0;\n
        v1->field_4 = 0;\n
        *(&v1->field_8) = cgc_malloc(v1->field_0 * 8);\n
        if (*(&v1->field_8))\n
        {\n
            cgc_memset(*(&v1->field_8), 0, v1->field_0 * 8);\n
            v2 = &v1->field_0;\n
            return v2;\n
        }\n
LABEL_404852:\n
        if (v1)\n
        {\n
            if (*(&v1->field_8))\n
                cgc_free(*(&v1->field_8));\n
            cgc_free(v1);\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    goto LABEL_404852;\n
}\n
", "4212884:sub_404894": null, "4212896:cgc__htbl_hash": "long long cgc__htbl_hash(unsigned int *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
\n
    v1 = 2654404609;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v1 = a1[v2] + v1;\n
        v1 *= 32;\n
        v2 += 1;\n
    }\n
    v1 = (0 CONCAT v1) /m 2654404609 >> 64;\n
    return (0 CONCAT v1) /m *(a0) >> 32;\n
}\n
", "4213037:sub_40492d": null, "4213040:cgc__htbl_double_size": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc__htbl_double_size(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // rax\n
\n
    v1 = a0;\n
    if (a0->field_0 > 268435455)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = cgc_realloc(v1->field_8, a0->field_0 * 16);\n
    if (!v0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_memset(v0 + a0->field_0 * 8, 0, v1->field_0 * 8);\n
    a0->field_8 = v0;\n
    v4 = a0;\n
    v4->field_0 = v4->field_0 * 2;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4213214:sub_4049de": null, "4213216:cgc_htbl_put": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_1 *field_18;\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_htbl_put(struct_2 *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long long v0[3];  // [bp-0x40]\n
    struct_3 *v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // xmm1lq\n
    int v6;  // xmm1\n
    unsigned long long v8[3];  // rcx\n
\n
    if (a0 && a1 && a2)\n
    {\n
        v5 = a0->field_0;\n
        if (!(CmpF(a0->field_4, v6 * (0 CONCAT 4604480259023595110)) & 1) && cgc__htbl_double_size(a0))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v2 = cgc__htbl_hash(a0, a1);\n
        while (true)\n
        {\n
            v1 = *((a0->field_8 + v2 * 8));\n
            if (!v1)\n
                break;\n
            if (v1 && v1->field_0 && !cgc_strcmp(v1->field_0, a1))\n
            {\n
                a0->field_20(v1->field_8);\n
                v1->field_8 = a2;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v2 += 1;\n
            if (v2 == a0->field_0)\n
                v2 = 0;\n
        }\n
        v0[0] = cgc_malloc(24);\n
        if (!v0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v0[0] = cgc_strdup(a1);\n
        v0[1] = a2;\n
        v0[2] = 0;\n
        if (!a0->field_18)\n
        {\n
            v8 = v0;\n
            a0->field_10 = v8;\n
            a0->field_18 = &v8[0];\n
        }\n
        else\n
        {\n
            a0->field_18->field_10 = v0;\n
            a0->field_18 = &v0[0];\n
        }\n
        *((a0->field_8 + v2 * 8)) = v0;\n
        a0->field_4 = a0->field_4 + 1;\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4213734:sub_404be6": null, "4213744:cgc_htbl_get": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
long long cgc_htbl_get(struct_0 *a0, char *a1)\n
{\n
    struct_1 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1 && a0->field_4 > 0)\n
    {\n
        v2 = cgc__htbl_hash(a0, a1);\n
        for (v1 = 0; v1 < a0->field_0; v1 += 1)\n
        {\n
            v0 = *((a0->field_8 + v2 * 8));\n
            if (!v0)\n
                break;\n
            if (v0->field_0 && !cgc_strcmp(v0->field_0, a1))\n
            {\n
                v3 = v0->field_8;\n
                return v3;\n
            }\n
            v2 += 1;\n
            if (v2 == a0->field_0)\n
                v2 = 0;\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4213999:sub_404cef": null, "4214000:cgc_htbl_destroy": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    char padding_10[16];\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[20];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_htbl_destroy(struct_2 *a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x20], Other Possible Types: struct_3 *\n
    unsigned int v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10], Other Possible Types: void*\n
    unsigned long long v4;  // rax\n
\n
    v2 = &a0->field_0;\n
    if (!v2)\n
        return v4;\n
    if (*(&v2->field_8))\n
    {\n
        for (v1 = 0; v1 < v2->field_0; v1 += 1)\n
        {\n
            v0 = *((*(&v2->field_8) + v1 * 8));\n
            if (v0)\n
            {\n
                if (*(&v0->field_0))\n
                    cgc_free(*(&v0->field_0));\n
                if (v0->field_8)\n
                    v2->field_20(v0->field_8);\n
                cgc_free(v0);\n
                v0[0] = 0;\n
            }\n
        }\n
        cgc_free(*(&v2->field_8));\n
        *(&v2->field_8) = 0;\n
    }\n
    v4 = cgc_free(v2);\n
    v2 = 0;\n
    return v4;\n
}\n
", "4214234:sub_404dda": null, "4214240:cgc_eat_ws": "long long cgc_eat_ws(char *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
        {\n
            v0 = 0;\n
            if (*(v1))\n
                v0 = *(v1) <= 32;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4214340:sub_404e44": null, "4214352:cgc_print_escaped": "long long cgc_print_escaped(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x1a]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned long long v7;  // rax\n
    char *v8;  // rcx\n
\n
    v5 = a1;\n
    v4 = 0;\n
    memset(&v3, 0, 2);\n
    memset(&v2, 0, 2);\n
    v1 = \"0123456789ABCDEF\";\n
    while (true)\n
    {\n
        v7 = v5;\n
        v5 = v7 - 1;\n
        if (!v7)\n
            break;\n
        v8 = v4;\n
        v4 = v8 + 1;\n
        v3 = v8[a0];\n
        v0 = v3;\n
        if (v0 == 8)\n
        {\n
            cgc_fdprintf(1, \"\\\\b\", v4, v8, a4);\n
        }\n
        else if (v0 == 9)\n
        {\n
            cgc_fdprintf(1, \"\\\\t\", v4, v8, a4);\n
        }\n
        else if (v0 == 10)\n
        {\n
            cgc_fdprintf(1, \"\\\\n
\", v4, v8, a4);\n
        }\n
        else if (v0 == 12)\n
        {\n
            cgc_fdprintf(1, \"\\\\f\", v4, v8, a4);\n
        }\n
        else if (v0 == 13)\n
        {\n
            cgc_fdprintf(1, \"\\\\r\", v4, v8, a4);\n
        }\n
        else if (v0 == 34)\n
        {\n
            cgc_fdprintf(1, \"\\\\\\\"\", v4, v8, a4);\n
        }\n
        else if (v0 == 47)\n
        {\n
            cgc_fdprintf(1, \"\\\\/\", v4, v8, a4);\n
        }\n
        else if (v0 == 92)\n
        {\n
            cgc_fdprintf(1, \"\\\\\\\\\", v4, v8, a4);\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, \"%s\", &v3, v8, a4);\n
        }\n
    }\n
    return v7;\n
}\n
", "4214825:sub_405029": null, "4214832:cgc_print_indent": "long long cgc_print_indent(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned long long v2;  // rcx\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        v2 = a0 * 2;\n
        if (v0 >= v2)\n
            break;\n
        cgc_fdprintf(1, \" \", a2, v2, a4);\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4214906:sub_40507a": null, "4214912:cgc_kty_int_to_string": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_kty_int_to_string(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    return cgc_fdprintf(1, \"%d\", a0->field_8, a3, a4);\n
}\n
", "4214956:sub_4050ac": null, "4214960:cgc_kty_double_to_string": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_kty_double_to_string(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
\n
    v0 = a0->field_8;\n
    v1 = v0;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1 && !v1)\n
        cgc_fdprintf(1, \"-\", a2, a3, a4);\n
    cgc_fdprintf(1, \"%d.\", v1, a3, a4);\n
    eax<4> = Conv(128->32, ((0x0<64> CONCAT 0x4059000000000000<64>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))))\n
    v1 = (v3 >> 31 CONCAT v3) /m 100 / 0x100000000;\n
    if (v1 < 0)\n
    {\n
        v1 = -(v1);\n
        return cgc_fdprintf(1, \"%02d\", v1, 100, a4);\n
    }\n
    return cgc_fdprintf(1, \"%02d\", v1, 100, a4);\n
}\n
", "4215133:sub_40515d": null, "4215136:cgc_kty_string_to_string": "long long cgc_kty_string_to_string(unsigned int a0[5], unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"\\\"\", a2, a3, a4);\n
    cgc_print_escaped(*(&a0[2]), a0[4], a2, a3, a4);\n
    return cgc_fdprintf(1, \"\\\"\", a2, a3, a4);\n
}\n
", "4215212:sub_4051ac": null, "4215216:cgc_kty_object_to_string": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
    unsigned long long field_8;\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_kty_object_to_string(struct_2 *a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_3 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x18]\n
\n
    v3 = 0;\n
    cgc_fdprintf(1, \"{\", a2, a3, a4);\n
    v2 = a0->field_8;\n
    if (v2)\n
    {\n
        cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
        for (v1 = &v2->field_10->field_0; v1; v1 = *((v1 + 16)))\n
        {\n
            if (v3 > 0)\n
                cgc_fdprintf(1, \",\\n
\", a2, a3, a4);\n
            v3 += 1;\n
            cgc_print_indent(a1 + 1, a1, a2, a3, a4);\n
            cgc_fdprintf(1, \"\\\"\", a2, a3, a4);\n
            *(&v0) = *(v1);\n
            cgc_print_escaped(*(&v0), cgc_strlen(*(v1)), a2, a3, a4);\n
            cgc_fdprintf(1, \"\\\": \", a2, a3, a4);\n
            cgc_kty_print_item(*((v1 + 8)), a1 + 1);\n
        }\n
    }\n
    if (v3 <= 0)\n
        return cgc_fdprintf(1, \"}\", a2, a3, a4);\n
    cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
    cgc_print_indent(a1, \"\\n
\", a2, a3, a4);\n
    return cgc_fdprintf(1, \"}\", a2, a3, a4);\n
}\n
", "4215546:sub_4052fa": null, "4215552:cgc_kty_print_item": "int cgc_kty_print_item()\n
{\n
    unsigned int v3[5];  // [bp+0x100000]\n
\n
    cgc_kty_cat_to_string(v3);\n
    return;\n
}\n
", "4215736:sub_4053b8": null, "4215744:cgc_kty_array_to_string": "typedef struct struct_0 {\n
    char padding_0[8];\n
    void* field_8;\n
} struct_0;\n
\n
long long cgc_kty_array_to_string(struct_0 *a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v2 = 0;\n
    cgc_fdprintf(1, \"[\", a2, a3, a4);\n
    if (cgc_array_length(a0->field_8) > 0)\n
        cgc_fdprintf(1, \"\\n
\", a2, a3, a4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        v5 = cgc_array_length(a0->field_8);\n
        if (v0 >= v5)\n
            break;\n
        if (v2 > 0)\n
            cgc_fdprintf(1, \",\\n
\", a2, v5, a4);\n
        v2 += 1;\n
        cgc_print_indent(a1 + 1, a1, a2, v5, a4);\n
        v1 = cgc_array_get(a0->field_8, v3);\n
        cgc_kty_print_item(a0, a1);\n
        v3 += 1;\n
    }\n
    if (v2 <= 0)\n
        return cgc_fdprintf(1, \"]\", a2, v5, a4);\n
    cgc_fdprintf(1, \"\\n
\", a2, v5, a4);\n
    cgc_print_indent(a1, \"\\n
\", a2, v5, a4);\n
    return cgc_fdprintf(1, \"]\", a2, v5, a4);\n
}\n
", "4216025:sub_4054d9": null, "4216032:cgc_kty_boolean_to_string": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_kty_boolean_to_string(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    return cgc_fdprintf(1, \"%s\", (a0->field_8 ? \"false\" : \"true\"), a0->field_8, a4);\n
}\n
", "4216098:sub_405522": null, "4216112:cgc_kty_null_to_string": "char cgc_kty_null_to_string(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return cgc_fdprintf(1, \"null\", a2, a3, a4);\n
}\n
", "4216149:sub_405555": null, "4216160:cgc_kty_cat_to_string": "extern struct_0 *g_parser;\n
\n
long long cgc_kty_cat_to_string(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    g_parser->field_0 = g_parser->field_0 + 1;\n
    return cgc_fdprintf(1, \"=^.^=\", a2, g_parser->field_0 + 1, a4);\n
}\n
", "4216211:sub_405593": null, "4216224:cgc_kty_dumps": "extern struct_0 *g_parser;\n
\n
long long cgc_kty_dumps(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rsi\n
\n
    v0 = 0;\n
    v2 = g_parser;\n
    g_parser->field_0 = 0;\n
    if (a0)\n
        v2 = cgc_kty_print_item(a0, v3);\n
    return v2;\n
}\n
", "4216285:sub_4055dd": null, "4216288:cgc_parse_number": "long long cgc_parse_number(unsigned int a0[3], char *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    char v3;  // [bp-0x1b]\n
    unsigned long long v4;  // [bp-0x18]\n
    unsigned long v6;  // xmm0lq\n
\n
    memset(&v3, 0, 3);\n
    v2 = cgc_strchr(a1, 32);\n
    if (!v2)\n
        v2 = cgc_strchr(a1, 44);\n
    if (!v2)\n
        v2 = cgc_strchr(a1, 93);\n
    if (!v2)\n
        v2 = cgc_strchr(a1, 125);\n
    v1 = cgc_strchr(a1, 46);\n
    if (v2 && v1 && v1 < v2)\n
        goto LABEL_4056b5;\n
    if (!v1)\n
    {\n
LABEL_4056e4:\n
        v0 = cgc_strtol(a1, &v4, 10);\n
        a0[0] = 0;\n
        a0[2] = v0;\n
        return a1;\n
    }\n
    else if (!(!v2))\n
    {\n
        goto LABEL_4056e4;\n
    }\n
LABEL_4056b5:\n
    cgc_strtod(a1, &v4);\n
    a0[0] = 1;\n
    *(&a0[2]) = v6;\n
    return a1;\n
}\n
", "4216599:sub_405717": null, "4216608:cgc_parse_string": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_parse_string(struct_0 *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    char v1;  // [bp-0x32]\n
    char v2;  // [bp-0x31]\n
    char *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = a1 + 1;\n
    a0->field_0 = 2;\n
    a0->field_8 = 0;\n
    if (*(a1) != 34)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v3))\n
            v2 = *(v3) != 34;\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v3) == 92)\n
        {\n
            v3 += 1;\n
            v5 += 1;\n
        }\n
        v3 += 1;\n
        v4 += 1;\n
        v5 += 1;\n
    }\n
    if (v4 >= 0x100)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    a0->field_8 = cgc_malloc(v4 + 1);\n
    if (!a0->field_8)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v3 = a1 + 1;\n
    v5 += 2;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(v3) != 34;\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != 92)\n
        {\n
            *((a0->field_8 + v4)) = *(v3);\n
        }\n
        else\n
        {\n
            v3 += 1;\n
            v0 = *(v3) - 98;\n
            switch (v0)\n
            {\n
            case 0:\n
                *((a0->field_8 + v4)) = 8;\n
                break;\n
            case 4:\n
                *((a0->field_8 + v4)) = 12;\n
                break;\n
            case 12:\n
                *((a0->field_8 + v4)) = 10;\n
                break;\n
            case 16:\n
                *((a0->field_8 + v4)) = 13;\n
                break;\n
            case 18:\n
                *((a0->field_8 + v4)) = 9;\n
                break;\n
            default:\n
                *((a0->field_8 + v4)) = *(v3);\n
                break;\n
            }\n
        }\n
        v3 += 1;\n
        v4 += 1;\n
    }\n
    *((a0->field_8 + v4)) = 0;\n
    a0->field_10 = v4;\n
    v6 = &a1[v5];\n
    return v6;\n
}\n
", "4217293:sub_4059cd": null, "4217296:cgc_parse_array": "long long cgc_parse_array(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a1;\n
    *(a0) = 4;\n
    *((a0 + 8)) = 0;\n
    v3 = cgc_eat_ws(v3 + 1);\n
    if (*(v3) == 93)\n
    {\n
        v4 = v3 + 1;\n
        return v4;\n
    }\n
    v2 = cgc_malloc(24);\n
    if (v2)\n
    {\n
        *((a0 + 8)) = cgc_array_create(4, cgc_free_kty_item);\n
        if (*((a0 + 8)))\n
        {\n
            v1 = v2;\n
            v3 = cgc_eat_ws(cgc_parse_item(v1, cgc_eat_ws(v3)));\n
            if (v3)\n
            {\n
                cgc_array_append(*((a0 + 8)), v2);\n
                v2 = 0;\n
                while (true)\n
                {\n
                    if (*(v3) != 44)\n
                    {\n
                        if (*(v3) == 93)\n
                        {\n
                            v4 = v3 + 1;\n
                            return v4;\n
                        }\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v2 = cgc_malloc(24);\n
                        if (!v2)\n
                            break;\n
                        v3 += 1;\n
                        v0 = v2;\n
                        v3 = cgc_eat_ws(cgc_parse_item(v0, cgc_eat_ws(v3)));\n
                        if (!v3)\n
                            break;\n
                        cgc_array_append(*((a0 + 8)), v2);\n
                        v2 = 0;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v2)\n
        cgc_free_kty_item(v2);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217765:sub_405ba5": null, "4217776:cgc_free_kty_item": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_free_kty_item(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long long v2;  // rax\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0->field_0;\n
    if (v0 == 2)\n
    {\n
        if (*(&a0->field_8))\n
            cgc_free(*(&a0->field_8));\n
    }\n
    else\n
    {\n
        if (v0 == 3)\n
        {\n
            cgc_htbl_destroy(*(&a0->field_8));\n
        }\n
        else if (v0 == 4)\n
        {\n
            cgc_array_destroy(*(&a0->field_8));\n
        }\n
    }\n
    v2 = cgc_free(a0);\n
    return v2;\n
}\n
", "4217953:sub_405c61": null, "4217968:cgc_parse_item": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_parse_item(struct_0 *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = *(a1);\n
        if (!cgc_strncmp(a1, \"true\", 4))\n
        {\n
            a0->field_0 = 5;\n
            a0->field_8 = 1;\n
            v2 = a1 + 4;\n
            return v2;\n
        }\n
        if (!cgc_strncmp(a1, \"false\", 5))\n
        {\n
            a0->field_0 = 5;\n
            a0->field_8 = 0;\n
            v2 = a1 + 5;\n
            return v2;\n
        }\n
        if (!cgc_strncmp(a1, \"null\", 4))\n
        {\n
            a0->field_0 = 6;\n
            v2 = a1 + 4;\n
            return v2;\n
        }\n
        if (!cgc_strncmp(a1, \"=^.^=\", 5))\n
        {\n
            a0->field_0 = 7;\n
            v2 = a1 + 5;\n
            return v2;\n
        }\n
        v0 = v1 - 34;\n
        switch (v0)\n
        {\n
        case 0:\n
            v2 = cgc_parse_string(a0, a1);\n
            return v2;\n
        case 9: case 11: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23:\n
            v2 = cgc_parse_number(a0, a1);\n
            return v2;\n
        case 57:\n
            v2 = cgc_parse_array(a0, a1);\n
            return v2;\n
        case 89:\n
            v2 = cgc_parse_object(a0, a1);\n
            return v2;\n
        default:\n
            break;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218412:sub_405e2c": null, "4218416:cgc_parse_object": "extern char g_parser;\n
\n
long long cgc_parse_object(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x60]\n
    unsigned long v1;  // [bp-0x58]\n
    unsigned long v2;  // [bp-0x50]\n
    unsigned long v3;  // [bp-0x48]\n
    unsigned long v4;  // [bp-0x40]\n
    unsigned long v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x30]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20]\n
    unsigned long v9;  // [bp-0x10]\n
\n
    v8 = a1;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    *(a0) = 3;\n
    *((a0 + 8)) = 0;\n
    v8 = cgc_eat_ws(v8 + 1);\n
    if (*(v8) == 125)\n
    {\n
        v9 = v8 + 1;\n
        return v9;\n
    }\n
    v5 = cgc_malloc(24);\n
    if (v5)\n
    {\n
        *((a0 + 8)) = cgc_htbl_create(4, cgc_free_kty_item);\n
        if (*((a0 + 8)))\n
        {\n
            v3 = v5;\n
            v8 = cgc_eat_ws(cgc_parse_string(v3, cgc_eat_ws(v8)));\n
            v7 = *((v5 + 8));\n
            if (!v8)\n
            {\n
LABEL_405f46:\n
            }\n
            else\n
            {\n
                if (!(*(v8) == 58))\n
                    goto LABEL_405f46;\n
                v8 += 1;\n
                v6 = cgc_malloc(24);\n
                if (v6)\n
                {\n
                    v2 = v6;\n
                    v8 = cgc_eat_ws(cgc_parse_item(v2, cgc_eat_ws(v8)));\n
                    if (v8)\n
                    {\n
                        cgc_htbl_put(*((a0 + 8)), v7, v6);\n
                        if (!cgc_strcmp(\"nyan_says\", v7) && *(v6) == 2)\n
                        {\n
                            v4 = cgc_malloc(24);\n
                            if (!v4)\n
                                goto LABEL_406243;\n
                            *(v4) = *(v6);\n
                            *((v4 + 8)) = cgc_strdup(*((v6 + 8)));\n
                            *((v4 + 16)) = *((v6 + 16));\n
                            cgc_array_append(*((g_parser + 8)), v4);\n
                            v4 = 0;\n
                        }\n
                        cgc_free_kty_item(v5);\n
                        v5 = 0;\n
                        v6 = 0;\n
                        while (true)\n
                        {\n
                            if (*(v8) != 44)\n
                            {\n
                                if (*(v8) == 125)\n
                                {\n
                                    v9 = v8 + 1;\n
                                    return v9;\n
                                }\n
                                break;\n
                            }\n
                            v5 = cgc_malloc(24);\n
                            if (!v5)\n
                                break;\n
                            v1 = v5;\n
                            v8 = cgc_eat_ws(cgc_parse_string(v1, cgc_eat_ws(v8 + 1)));\n
                            v7 = *((v5 + 8));\n
                            if (!v8)\n
                            {\n
LABEL_4060f0:\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                if (!(*(v8) == 58))\n
                                    goto LABEL_4060f0;\n
                                v8 += 1;\n
                                v6 = cgc_malloc(24);\n
                                if (!v6)\n
                                    break;\n
                                v0 = v6;\n
                                v8 = cgc_eat_ws(cgc_parse_item(v0, cgc_eat_ws(v8)));\n
                                if (!v8)\n
                                    break;\n
                                cgc_htbl_put(*((a0 + 8)), v7, v6);\n
                                if (!cgc_strcmp(\"nyan_says\", v7) && *(v6) == 2)\n
                                {\n
                                    v4 = cgc_malloc(24);\n
                                    if (!v4)\n
                                        break;\n
                                    *(v4) = *(v6);\n
                                    *((v4 + 8)) = cgc_strdup(*((v6 + 8)));\n
                                    *((v4 + 16)) = *((v6 + 16));\n
                                    cgc_array_append(*((g_parser + 8)), v4);\n
                                    v4 = 0;\n
                                }\n
                                cgc_free_kty_item(v5);\n
                                v5 = 0;\n
                                v6 = 0;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_406243:\n
    if (v6)\n
        cgc_free_kty_item(v6);\n
    if (v5)\n
        cgc_free_kty_item(v5);\n
    if (v4)\n
        cgc_free_kty_item(v4);\n
    v9 = 0;\n
    return v9;\n
}\n
", "4219537:sub_406291": null, "4219552:cgc_kty_loads": "extern struct_0 *g_parser;\n
\n
long long cgc_kty_loads(char *a0)\n
{\n
    void* v0;  // [bp-0x148]\n
    void* v1;  // [bp-0x140]\n
    unsigned int v2;  // [bp-0x134]\n
    unsigned int v3;  // [bp-0x130]\n
    unsigned int v4;  // [bp-0x12c]\n
    unsigned long v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = -1;\n
    v1 = cgc_calloc(1, 24);\n
    if (v1)\n
    {\n
        if (g_parser->field_8)\n
            cgc_array_destroy(g_parser->field_8);\n
        g_parser->field_8 = cgc_array_create(16, cgc_free_kty_item);\n
        if (g_parser->field_8)\n
        {\n
            v0 = v1;\n
            v5 = cgc_parse_item(v0, cgc_eat_ws(a0));\n
            if (v5)\n
            {\n
                v6 = v1;\n
                return v6;\n
            }\n
        }\n
    }\n
    if (v1)\n
        cgc_free_kty_item(v1);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4219847:sub_4063c7": null, "4219856:cgc_kty_init": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_0 *g_parser;\n
\n
long long cgc_kty_init(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    a0->field_10 = cgc_kty_dumps;\n
    a0->field_18 = cgc_kty_loads;\n
    g_parser = a0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4219962:sub_40643a": null, "4219968:cgc_read_until": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_read_until(unsigned long long a0, struct_0 *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // rax\n
\n
    v3 = a0;\n
    v1 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
LABEL_4064e4:\n
            *((v1 - 1)) = 0;\n
            v4 = (v1 - a1);\n
            return v4;\n
        }\n
        if (cgc_receive(a0, a1, a2, a3))\n
        {\n
LABEL_40649f:\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (!*(&v0))\n
            goto LABEL_40649f;\n
        v6 = v1;\n
        v1 = &v6->field_0;\n
        if (v6->field_-1 == a3)\n
            goto LABEL_4064e4;\n
        v2 += 1;\n
    }\n
}\n
", "4220163:sub_406503": null, "4220176:cgc_import_kty": "extern void* my_kty;\n
extern struct_1 *parser;\n
\n
long long cgc_import_kty(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (my_kty)\n
    {\n
        cgc_free_kty_item(my_kty);\n
        my_kty = 0;\n
    }\n
    parser->field_0 = 0;\n
    v1 = parser->field_18(a0);\n
    my_kty = v1;\n
    if (!my_kty)\n
    {\n
        v1 = cgc_fdprintf(1, \"Error!\\n
\", a2, a3, a4);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4220301:sub_40658d": null, "4220304:cgc_print_kty": "extern unsigned long long my_kty;\n
extern struct_1 *parser;\n
\n
long long cgc_print_kty(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (my_kty)\n
    {\n
        parser->field_0 = 0;\n
        v1 = parser->field_10(my_kty);\n
        return v1;\n
    }\n
    v1 = cgc_fdprintf(1, \"Error!\\n
\", a2, a3, a4);\n
    return v1;\n
}\n
", "4220381:sub_4065dd": null, "4220384:cgc_nyan": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    char *field_8;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned long long my_kty;\n
extern struct_1 *parser;\n
\n
long long cgc_nyan(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x5a4]\n
    struct_2 *v1;  // [bp-0x5a0]\n
    char v2;  // [bp-0x598]\n
    char v3;  // [bp-0x418]\n
    struct_4 *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
    struct_3 *v7;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rax\n
\n
    memset(&v3, 0, 0x400);\n
    memcpy(&v2, \"\\n
\\n
+      o     +              o\\n
    +             o     +       +\\n
o          +\\n
    o  +           +        +\\n
+        o     o       +        o\\n
-_-_-_-_-_-_-_,------,      o\\n
_-_-_-_-_-_-_-|   /\\\\_/\\\\\\n
-_-_-_-_-_-_-~|__( ^ .^)  +     +\\n
_-_-_-_-_-_-_-\\\"\\\"  \\\"\\\"\\n
+      o         o   +       o\\n
    +         +\\n
o        o         o      o     +\\n
    o           +\\n
+      +     o        o      +\\n
\\n
\", 384);\n
    if (!my_kty)\n
    {\n
        v7 = cgc_fdprintf(1, \"Error!\\n
\", 384, a3, a4);\n
        return v7;\n
    }\n
    parser->field_10(my_kty);\n
    if (parser->field_0 < 3)\n
        return parser;\n
    cgc_fdprintf(1, \"%s\", &v2, a3, a4);\n
    v4 = &v3;\n
    v5 = 0;\n
    while (true)\n
    {\n
        v0 = v5;\n
        v8 = cgc_array_length(parser->field_8);\n
        if (v0 >= v8)\n
            break;\n
        v1 = cgc_array_get(parser->field_8, v5);\n
        cgc_strcpy(v4, v1->field_8);\n
        v4 += v1->field_10;\n
        v5 += 1;\n
    }\n
    v7 = cgc_fdprintf(1, \"NYAN SAYS...\\n
\\\"\\n
%s\\n
\\\"\", &v3, v8, a4);\n
    return v7;\n
}\n
", "4220721:sub_406731": null, "4220736:cgc_quit": "char cgc_quit(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"\\n
\\n
=^.^=// Bye!\\n
\\n
\", a2, a3, a4);\n
    return cgc_exit(0);\n
}\n
", "4220768:cgc_exit": "long long cgc_exit(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    v0 = a0;\n
    cgc__terminate(a0);\n
    return cgc_menu(a0, v2, v3, v4, v5, v6);\n
}\n
", "4220800:cgc_menu": "char cgc_menu(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"=======================\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 1. Import KTY\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 2. Print KTY\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 3. Quit\\n
\", a2, a3, a4);\n
    return cgc_fdprintf(1, \"=======================\\n
\", a2, a3, a4);\n
}\n
", "4220901:sub_4067e5": null, "4220912:main": "extern void* parser;\n
\n
int main(unsigned int a0, unsigned int a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2030]\n
    unsigned int v1;  // [bp-0x202c]\n
    char v2;  // [bp-0x2028]\n
    char v3;  // [bp-0x2018]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v6 = 0;\n
    v5 = a0;\n
    *(&v4) = a1;\n
    cgc_fdprintf(1, \"KTY Pretty Printer v0.1\\n
\", a2, a3, a4);\n
    parser = cgc_malloc(32);\n
    if (cgc_kty_init(parser))\n
    {\n
        cgc_fdprintf(1, \"Error!\\n
\", a2, a3, a4);\n
        cgc_quit(1, \"Error!\\n
\", a2, a3, a4);\n
    }\n
    cgc_menu(a0, a1, a2, a3, a4);\n
    while (cgc_read_until(0, &v2, 16, 10) > 0)\n
    {\n
        v1 = cgc_strtol(&v2, NULL, 10);\n
        v0 = v1;\n
        if (v0 == 1)\n
        {\n
            if (cgc_read_until(0, &v3, 0x2000, 0) <= 0)\n
                cgc_fdprintf(1, \"Error!\\n
\", 0x2000, 0, a4);\n
            else\n
                cgc_import_kty(&v3, 0, 0x2000, 0, a4);\n
        }\n
        else\n
        {\n
            if (v0 == 2)\n
            {\n
                cgc_print_kty(0, 0, 10, 10, a4);\n
            }\n
            else if (v0 == 3)\n
            {\n
                cgc_quit(0, 0, 10, 10, a4);\n
            }\n
            else if (v0 != 777)\n
            {\n
                cgc_fdprintf(1, \"Invalid menu. Try again.\\n
\", 10, 10, a4);\n
            }\n
            else\n
            {\n
                cgc_nyan(0, 0, 10, 10, a4);\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4221307:sub_40697b": null, "4221312:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (a0)\n
    {\n
        v1 = cgc_strlen(a0) + 1;\n
        v0 = cgc_malloc(v1);\n
        if (v0)\n
        {\n
            cgc_memset(v0, 0, v1);\n
            cgc_memcpy(v0, a0, v1);\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4221450:sub_406a0a": null, "4221456:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x25]\n
    unsigned int v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v3))\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
            {\n
                v6 = v1;\n
                v1 = v6 - 1;\n
                v0 = v6;\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    if (!v1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = *(v2) - *(v3);\n
    return v4;\n
}\n
", "4221651:sub_406ad3": null, "4221664:cgc_strtod": "long long cgc_strtod(char *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x51]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x50]\n
    unsigned long long v2;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    char v7;  // [bp-0x29]\n
    char *v8;  // [bp-0x28]\n
    char *v9;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v10;  // [bp-0x10]\n
    char *v13;  // rax, Other Possible Types: unsigned long, unsigned long long *\n
\n
    v9 = a0;\n
    v8 = v9;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0x3ff0000000000000;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v9))\n
            v0 = cgc_isspace(*(v9));\n
        if (!(v0 & 1))\n
            break;\n
        v9 += 1;\n
    }\n
    if (*(v9) == 45)\n
    {\n
        v5 = 1;\n
        v9 += 1;\n
    }\n
    else if (*(v9) == 43)\n
    {\n
        v9 += 1;\n
    }\n
    v1 = v9;\n
    while (true)\n
    {\n
        v7 = *(v9);\n
        if (!v7)\n
            break;\n
        if (v7 == 46)\n
        {\n
            v4 = 1;\n
            v9 += 1;\n
            goto LABEL_406c87;\n
        }\n
        if (v7 < 48)\n
        {\n
LABEL_406c82:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(v7 <= 57))\n
                goto LABEL_406c82;\n
            v6 = v7 - 48;\n
            if (v4)\n
            {\n
                tmp_12 = DivV(tmp_14, tmp_13);\n
                *(&v2) = tmp_12;\n
                v3 = (0 CONCAT v2) * (0 CONCAT v6) + (0 CONCAT v3);\n
            }\n
            else\n
            {\n
                v3 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT v6);\n
            }\n
            v9 += 1;\n
LABEL_406c87:\n
        }\n
    }\n
    s_40 =L Conv(128->64, ((0x0<64> CONCAT 0x3ee4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-64, size=8, endness=Iend_LE))))<8>\n
    v13 = v1;\n
    if (v13 == v9)\n
    {\n
        v13 = v8;\n
        v9 = v13;\n
        v3 = 0;\n
    }\n
    if (a1)\n
    {\n
        v13 = a1;\n
        *(a1) = v9;\n
    }\n
    if (!v5)\n
    {\n
        v10 = v3;\n
        return v13;\n
    }\n
    v13 = v3 ^ 0x8000000000000000;\n
    v10 = v13;\n
    return v3 ^ 0x8000000000000000;\n
}\n
", "4222236:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:memset": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:memcpy": null, "5242928:cgc_deallocate": null, "5242936:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}