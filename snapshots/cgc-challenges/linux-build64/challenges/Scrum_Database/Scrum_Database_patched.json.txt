{"4202496:_init": "extern struct_0 *g_409230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409230;\n
    if (g_409230)\n
        v1 = g_409230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409250;\n
    goto *(4231768);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202624:malloc": "// attributes: PLT stub\n
void* malloc(unsigned int size)\n
{\n
    return ::libc.so.0::malloc(size);\n
}\n
", "4202640:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4231744);\n
}\n
", "4202688:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202725:sub_4020e5": null, "4202726:sub_4020e6": null, "4202736:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_409228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202777:sub_402119": null, "4202784:register_tm_clones": "extern unsigned long long g_409238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202841:sub_402159": null, "4202848:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_409240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409240)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202901:sub_402195": null, "4202905:sub_402199": null, "4202912:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202921:sub_4021a9": null, "4202928:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202979:sub_4021e3": null, "4202992:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203043:sub_402223": null, "4203056:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203107:sub_402263": null, "4203120:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203193:sub_4022b9": null, "4203200:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203273:sub_402309": null, "4203280:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203331:sub_402343": null, "4203344:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4203404:sub_40238c": null, "4203408:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4203468:sub_4023cc": null, "4203472:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203563:sub_40242b": null, "4203568:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a1)\n
        {\n
            v0 = 0;\n
            if (cgc_receive(a0, a1, v5, v6))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4203700:sub_4024b4": null, "4203712:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        *((a0 + v2)) = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        *((a0 + v2)) = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4203913:sub_402589": null, "4203920:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4204299:sub_40270b": null, "4204304:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
        cgc__terminate(a0);\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4204478:sub_4027be": null, "4204480:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4204538:sub_4027fa": null, "4204544:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
        cgc__terminate(v3);\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4204722:sub_4028b2": null, "4204736:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        v0->field_10->field_8 = a0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4204837:sub_402925": null, "4204848:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4205129:sub_402a49": null, "4205136:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4205241:sub_402ab9": null, "4205248:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long long v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4205550:sub_402bee": null, "4205552:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4205678:sub_402c6e": null, "4205680:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4205830:sub_402d06": null, "4205840:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v5 = v2;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v5 = v1 + 1;\n
    }\n
    return v5;\n
}\n
", "4206054:sub_402de6": null, "4206064:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&a0, 1);\n
}\n
", "4206095:sub_402e0f": null, "4206096:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4206405:sub_402f45": null, "4206416:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4206584:sub_402ff8": null, "4206592:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4206675:sub_403053": null, "4206688:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4206729:sub_403089": null, "4206736:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long v6;  // rcx\n
\n
    if (a0->field_100 >= 0x100)\n
    {\n
        for (v1 = a0; a0->field_100 > 0; v1 = *(&v0) + v1)\n
        {\n
            if (cgc_transmit(a0, a1, a2, rcx<8>))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            if (!*(&v0))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            v6 = a0->field_100 - *(&v0);\n
            *(&a0->field_100) = v6;\n
        }\n
    }\n
    *(&v6) = a0->field_100;\n
    *(&a0->field_100) = v6 + 1;\n
    (&a0->field_0)[v6] = a1;\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4206995:sub_403193": null, "4207008:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4207078:sub_4031e6": null, "4207088:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4207252:sub_403294": null, "4207264:cgc_send": "long long cgc_send(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v0 = 0;\n
    for (v1 = a1; v0 < a1; v0 = *(&v2) + v0)\n
    {\n
        if (cgc_transmit(a0, a1, v5, v6))\n
            cgc__terminate(a0);\n
        if (!*(&v2))\n
            cgc__terminate(a0);\n
    }\n
    return v0;\n
}\n
", "4207405:sub_40332d": null, "4207408:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x158]\n
    unsigned long v1;  // [bp-0x150]\n
    unsigned int v2;  // [bp-0x144]\n
    void* v3;  // [bp-0x140]\n
    unsigned long long v4;  // [bp-0x138]\n
    char v5;  // [bp-0x130]\n
    unsigned short v6;  // [bp-0x30]\n
    unsigned long long v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, a0, a1);\n
    v1 = &v5;\n
    while (true)\n
    {\n
        if (v6 <= 0)\n
        {\n
            v8 = v2;\n
            return v8;\n
        }\n
        if (cgc_transmit(v4, v7, v3, a0))\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        else if (*(&v0))\n
        {\n
            v6 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4207675:sub_40343b": null, "4207680:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned int *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned int *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned int *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned int *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned int *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned int *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 <= 40)\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    else\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 <= 40)\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    else\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 <= 160)\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    else\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[2];\n
                        v7 = v76;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 <= 160)\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    else\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[2];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4209626:sub_403bda": null, "4209632:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4209792:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4209956:sub_403d24": null, "4209968:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4210068:sub_403d94": null, "4210080:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4210372:sub_403ec4": null, "4210384:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v11;  // rax\n
    unsigned long v12;  // rcx\n
    unsigned long long v13;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v11 = v4;\n
            v4 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                v7 = v8(a0, 48, v7);\n
            else\n
                v7 = v8(a0, 32, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 += 1)\n
    {\n
        v12 = v0 + 1;\n
        v7 = v8(a0, (&v1)[v12], v7, v12);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v13 = v4;\n
        v4 = v13 - 1;\n
        if (v13 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4211021:sub_40414d": null, "4211024:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_4047e1:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_4047e1;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_4047d7;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_4047d7:\n
            goto LABEL_4047e1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4213370:sub_404a7a": null, "4213376:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4214023:sub_404d07": null, "4214032:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(v6 & 4))\n
                v3 = v4(a0, 32, v3);\n
            else\n
                v3 = v4(a0, 48, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4214566:sub_404f26": null, "4214576:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v7);\n
            if (v0)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v1 = (v1 + v2);\n
        }\n
        else\n
        {\n
            v5 = a2;\n
            return v5;\n
        }\n
    }\n
}\n
", "4214718:sub_404fbe": null, "4214720:cgc_minimum": "long long cgc_minimum(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4214764:sub_404fec": null, "4214768:cgc_max": "long long cgc_max(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4214812:sub_40501c": null, "4214816:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4214834:sub_405032": null, "4214848:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4214873:sub_405059": null, "4214880:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4214908:sub_40507c": null, "4214912:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4214964:sub_4050b4": null, "4214976:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4215202:sub_4051a2": null, "4215216:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4215490:sub_4052c2": null, "4215504:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4215592:sub_405328": null, "4215600:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4215757:sub_4053cd": null, "4215760:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(&v3) = *(v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4215923:sub_405473": null, "4215936:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4216002:sub_4054c2": null, "4216016:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4216082:sub_405512": null, "4216096:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(&v5) = v0;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = a1;\n
    }\n
    return v1;\n
}\n
", "4216266:sub_4055ca": null, "4216272:cgc_create_pbi": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[14];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_create_pbi(struct_1 *a0, unsigned short a1[3])\n
{\n
    char v0;  // [bp-0x31]\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_2 *v2;  // [bp-0x28]\n
    struct_1 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = *(v3) != a1[0];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 32));\n
    }\n
    if (!v3)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = cgc_calloc(24);\n
    if (!v2)\n
        cgc__terminate(24);\n
    v2->field_0 = a1[1];\n
    v2->field_4 = 0;\n
    v2->field_2 = a1[2];\n
    v2->field_10 = 0;\n
    v2->field_8 = cgc_calloc(cgc_strlen(a1 + 1) + 1);\n
    if (!v2->field_8)\n
        cgc__terminate(a0);\n
    cgc_strcpy(v2->field_8, a1 + 1);\n
    if (!*((v3 + 16)))\n
    {\n
        *((v3 + 16)) = v2;\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v1 = *((v3 + 16)); *((v1 + 16)); v1 = *((v1 + 16)));\n
    *((v1 + 16)) = v2;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4216663:sub_405757": null, "4216672:cgc_delete_pbi": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[14];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_delete_pbi(struct_1 *a0, unsigned short a1[2])\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    struct_2 *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = *(v4) != a1[0];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = *((v4 + 32));\n
    }\n
    if (!v4)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v2 = *((v4 + 16));\n
    if (v2->field_0 == a1[1])\n
    {\n
        *((v4 + 16)) = v2->field_10;\n
    }\n
    else\n
    {\n
        v3 = &v2->field_0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2)\n
                v0 = v2->field_0 != a1[1];\n
            if (!(v0 & 1))\n
                break;\n
            v3 = &v2->field_0;\n
            v2 = v2->field_10;\n
        }\n
        if (!v2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        *((v3 + 16)) = v2->field_10;\n
    }\n
    if (*((v2 + 8)))\n
        cgc_free(*((v2 + 8)));\n
    cgc_free(v2);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4217018:sub_4058ba": null, "4217024:cgc_move_pbi_to_sprint": "long long cgc_move_pbi_to_sprint(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x43]\n
    char v1;  // [bp-0x42]\n
    char v2;  // [bp-0x41]\n
    unsigned long v3;  // [bp-0x40]\n
    unsigned long v4;  // [bp-0x38]\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned long v6;  // [bp-0x28]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long v10;  // rax\n
\n
    v7 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v7)\n
            v2 = *(v7) != *(a1);\n
        if (!(v2 & 1))\n
            break;\n
        v7 = *((v7 + 32));\n
    }\n
    if (!v7)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = *((v7 + 24));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = *(v6) != *((a1 + 4));\n
        if (!(v1 & 1))\n
            break;\n
        v6 = *((v6 + 32));\n
    }\n
    if (!v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5 = *((v7 + 16));\n
    if (*(v5) == *((a1 + 2)))\n
    {\n
        *((v7 + 16)) = *((v5 + 16));\n
    }\n
    else\n
    {\n
        v4 = v5;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v5)\n
                v0 = *(v5) != *((a1 + 2));\n
            if (!(v0 & 1))\n
                break;\n
            v4 = v5;\n
            v5 = *((v5 + 16));\n
        }\n
        if (!v5)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        *((v4 + 16)) = *((v5 + 16));\n
    }\n
    if (!*((v6 + 24)))\n
    {\n
        *((v6 + 24)) = v5;\n
        *((v5 + 16)) = 0;\n
        v8 = 0;\n
        return v8;\n
    }\n
    for (v3 = *((v6 + 24)); *((v3 + 16)); v3 = *((v3 + 16)));\n
    *((v3 + 16)) = v5;\n
    *((v5 + 16)) = 0;\n
    v10 = v6;\n
    *((v10 + 18)) = *((v10 + 18)) + *((v5 + 2));\n
    v8 = 0;\n
    return v8;\n
}\n
", "4217573:sub_405ae5": null, "4217584:cgc_update_sbi_status": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned short field_4;\n
    char padding_6[10];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_update_sbi_status(struct_2 *a0, unsigned short a1[4])\n
{\n
    char v0;  // [bp-0x3b]\n
    char v1;  // [bp-0x3a]\n
    char v2;  // [bp-0x39]\n
    struct_0 *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
            v2 = *(v5) != a1[0];\n
        if (!(v2 & 1))\n
            break;\n
        v5 = *((v5 + 32));\n
    }\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = *((v5 + 24));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4->field_0 != a1[2];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = v4->field_20;\n
    }\n
    if (!v4)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v3 = *((v4 + 24));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3->field_0 != a1[1];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = v3->field_10;\n
    }\n
    if (!v3)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    *((v3 + 4)) = a1[3];\n
    v6 = 0;\n
    return v6;\n
}\n
", "4217932:sub_405c4c": null, "4217936:cgc_update_sbi_points": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[16];\n
    unsigned short field_12;\n
    char padding_14[4];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_update_sbi_points(struct_2 *a0, unsigned short a1[4])\n
{\n
    char v0;  // [bp-0x3b]\n
    char v1;  // [bp-0x3a]\n
    char v2;  // [bp-0x39]\n
    struct_0 *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0xc]\n
    struct_1 *v8;  // rax\n
    struct_1 *v9;  // rax\n
\n
    v5 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
            v2 = *(v5) != a1[0];\n
        if (!(v2 & 1))\n
            break;\n
        v5 = *((v5 + 32));\n
    }\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = *((v5 + 24));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4->field_0 != a1[2];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = v4->field_20;\n
    }\n
    if (!v4)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v3 = *((v4 + 24));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3->field_0 != a1[1];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = v3->field_10;\n
    }\n
    if (!v3)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v8 = v4;\n
    v8->field_12 = v8->field_12 - *((v3 + 2));\n
    v9 = v4;\n
    v9->field_12 = v9->field_12 + a1[3];\n
    *((v3 + 2)) = a1[3];\n
    v6 = 0;\n
    return v6;\n
}\n
", "4218328:sub_405dd8": null, "4218336:cgc_update_sbi_description": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    char field_8;\n
    char padding_9[7];\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_update_sbi_description(struct_2 *a0, unsigned short a1[3])\n
{\n
    char v0;  // [bp-0x3b]\n
    char v1;  // [bp-0x3a]\n
    char v2;  // [bp-0x39]\n
    struct_3 *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // edi\n
\n
    v5 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
            v2 = *(v5) != a1[0];\n
        if (!(v2 & 1))\n
            break;\n
        v5 = *((v5 + 32));\n
    }\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = *((v5 + 24));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4->field_0 != a1[2];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = v4->field_20;\n
    }\n
    if (!v4)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v3 = *((v4 + 24));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3->field_0 != a1[1];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = v3->field_10;\n
    }\n
    if (!v3)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    cgc_free(*((v3 + 8)));\n
    v8 = cgc_strlen(a1 + 1) + 1;\n
    *((v3 + 8)) = malloc(v8);\n
    if (!*((v3 + 8)))\n
        cgc__terminate(*(&v8));\n
    cgc_strcpy(*((v3 + 8)), a1 + 1);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4218773:sub_405f95": null, "4218784:cgc_move_sbi_to_pbl": "long long cgc_move_sbi_to_pbl(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x43]\n
    char v1;  // [bp-0x42]\n
    char v2;  // [bp-0x41]\n
    unsigned long v3;  // [bp-0x40]\n
    unsigned long v4;  // [bp-0x38]\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned long v6;  // [bp-0x28]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long v10;  // rax\n
\n
    v7 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v7)\n
            v2 = *(v7) != *(a1);\n
        if (!(v2 & 1))\n
            break;\n
        v7 = *((v7 + 32));\n
    }\n
    if (!v7)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = *((v7 + 24));\n
    v5 = *((v7 + 16));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = *(v6) != *((a1 + 4));\n
        if (!(v1 & 1))\n
            break;\n
        v6 = *((v6 + 32));\n
    }\n
    if (!v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v3 = *((v6 + 24));\n
    v4 = v3;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = *(v3) != *((a1 + 2));\n
        if (!(v0 & 1))\n
            break;\n
        v4 = v3;\n
        v3 = *((v3 + 16));\n
    }\n
    if (!v3)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    if (v3 == *((v6 + 24)))\n
        *((v6 + 24)) = *((*((v6 + 24)) + 16));\n
    else\n
        *((v4 + 16)) = *((v3 + 16));\n
    if (!v5)\n
    {\n
        *((v7 + 16)) = v3;\n
    }\n
    else\n
    {\n
        for (*((v3 + 16)) = 0; *((v5 + 16)); v5 = *((v5 + 16)));\n
        *((v5 + 16)) = v3;\n
    }\n
    v10 = v6;\n
    *((v10 + 18)) = *((v10 + 18)) - *((v3 + 2));\n
    v8 = 0;\n
    return v8;\n
}\n
", "4219314:sub_4061b2": null, "4219328:cgc_receive_commands": "long long cgc_receive_commands(void* a0)\n
{\n
    unsigned int v0;  // [bp-0x424]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    char v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x412]\n
    unsigned short v6[2];  // [bp-0x410]\n
\n
    while (true)\n
    {\n
        v2 = 8;\n
        if (cgc_receive_bytes(&v3, v2) == -1)\n
            cgc__terminate(a0);\n
        if (*(&v3) != 305419896)\n
            cgc__terminate(a0);\n
        if (*(&v4) > 0x400)\n
            cgc__terminate(a0);\n
        if (cgc_receive_bytes(v6, *(&v4)) == -1)\n
            cgc__terminate(a0);\n
        v0 = *(&v5);\n
        if (v0 == 257)\n
        {\n
            v1 = cgc_create_product(a0, v6);\n
        }\n
        else if (v0 == 258)\n
        {\n
            v1 = cgc_create_pbi(*(a0), v6);\n
        }\n
        else if (v0 == 259)\n
        {\n
            v1 = cgc_create_sprint(*(a0), v6);\n
        }\n
        else if (v0 == 513)\n
        {\n
            v1 = cgc_move_pbi_to_sprint(*(a0), v6);\n
        }\n
        else if (v0 == 514)\n
        {\n
            v1 = cgc_move_sbi_to_pbl(*(a0), v6);\n
        }\n
        else if (v0 == 769)\n
        {\n
            v1 = cgc_list_product(*(a0), v6);\n
        }\n
        else if (v0 == 772)\n
        {\n
            v1 = cgc_list_all_products(*(a0));\n
        }\n
        else if (v0 == 1025)\n
        {\n
            v1 = cgc_delete_pbi(*(a0), v6);\n
        }\n
        else if (v0 == 1026)\n
        {\n
            v1 = cgc_delete_sprint(*(a0), v6);\n
        }\n
        else if (v0 == 1027)\n
        {\n
            v1 = cgc_delete_product(a0, v6);\n
        }\n
        else if (v0 == 1281)\n
        {\n
            v1 = cgc_update_sbi_status(*(a0), v6);\n
        }\n
        else if (v0 == 1282)\n
        {\n
            v1 = cgc_update_sbi_points(*(a0), v6);\n
        }\n
        else if (v0 == 1283)\n
        {\n
            v1 = cgc_update_sbi_description(*(a0), v6);\n
        }\n
        else if (v0 == 57005)\n
        {\n
            break;\n
        }\n
    }\n
    return 0;\n
}\n
", "4220240:cgc_send_response": "long long cgc_send_response(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v0 = 2271560481;\n
    v1 = a0;\n
    cgc_write(1, &v0, 8);\n
    return 0;\n
}\n
", "4220291:sub_406583": null, "4220304:cgc_init_database": "long long cgc_init_database(unsigned long long *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
\n
    v0 = *(a0);\n
    if (v0)\n
        return 0;\n
    v0 = cgc_malloc(40);\n
    if (v0)\n
        return 0;\n
    cgc__terminate(40);\n
}\n
", "4220386:sub_4065e2": null, "4220400:cgc_destroy_database": "typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_5 *field_20;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_4 *field_10;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    struct struct_3 *field_20;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
long long cgc_destroy_database(struct struct_2 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x50]\n
    struct_4 *v1;  // [bp-0x48], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x40]\n
    struct_4 *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x30]\n
    struct_3 *v5;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v6;  // [bp-0x20]\n
    struct_5 *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v7 = &*(a0)->padding_0;\n
    while (v7)\n
    {\n
        v3 = *((v7 + 16));\n
        while (v3)\n
        {\n
            if (*(&v3->field_8))\n
                cgc_free(*(&v3->field_8));\n
            v2 = &v3->padding_0;\n
            v3 = v3->field_10;\n
            cgc_free(v2);\n
        }\n
        v5 = &v7->field_18->padding_0;\n
        while (v5)\n
        {\n
            v1 = *((v5 + 24));\n
            while (v1)\n
            {\n
                if (*(&v1->field_8))\n
                    cgc_free(*(&v1->field_8));\n
                v0 = &v1->padding_0;\n
                v1 = v1->field_10;\n
                cgc_free(v0);\n
            }\n
            if (*(&v5->field_8))\n
                cgc_free(*(&v5->field_8));\n
            v4 = &v5->padding_0;\n
            v5 = v5->field_20;\n
            cgc_free(v4);\n
        }\n
        if (*(&v7->field_8))\n
            cgc_free(*(&v7->field_8));\n
        v6 = &v7->padding_0;\n
        v7 = v7->field_20;\n
        cgc_free(v6);\n
    }\n
    *(a0) = 0;\n
    return 0;\n
}\n
", "4220770:sub_406762": null, "4220784:cgc_obf_strings": "extern char cgc_obf_strings.tmp_string;\n
\n
long long cgc_obf_strings(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
            break;\n
        (&cgc_obf_strings.tmp_string)[v1] = a0[v1] ^ 169;\n
        v1 += 1;\n
    }\n
    (&cgc_obf_strings.tmp_string)[v1] = 0;\n
    return &cgc_obf_strings.tmp_string;\n
}\n
", "4220911:sub_4067ef": null, "4220912:cgc_create_product": "long long cgc_create_product(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2;  // [bp-0x31]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (!*(a0))\n
    {\n
        *(a0) = cgc_calloc(40);\n
        if (!*(a0))\n
            cgc__terminate(40);\n
        v3 = *(a0);\n
    }\n
    else\n
    {\n
        v3 = *(a0);\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (*(v3) != *(a1))\n
                v2 = *((v3 + 32));\n
            if (!(v2 & 1))\n
                break;\n
            v3 = *((v3 + 32));\n
        }\n
        if (*(v3) == *(a1))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        *((v3 + 32)) = cgc_calloc(40);\n
        if (!*((v3 + 32)))\n
            cgc__terminate(40);\n
        v3 = *((v3 + 32));\n
    }\n
    *((v3 + 32)) = 0;\n
    *(v3) = *(a1);\n
    *((v3 + 16)) = 0;\n
    *((v3 + 24)) = 0;\n
    *((v3 + 8)) = cgc_calloc(cgc_strlen(a1 + 2) + 1);\n
    if (!*((v3 + 8)))\n
        cgc__terminate(a0);\n
    v0 = *((v3 + 8));\n
    v1 = a1 + 2;\n
    cgc_strncpy(v0, v1, cgc_strlen(a1 + 2));\n
    v4 = 0;\n
    return v4;\n
}\n
", "4221368:sub_4069b8": null, "4221376:cgc_delete_product": "typedef struct struct_5 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_5 *field_20;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    struct struct_4 *field_20;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
long long cgc_delete_product(struct struct_2 **a0, unsigned short *a1)\n
{\n
    char v0;  // [bp-0x51]\n
    struct_0 *v1;  // [bp-0x50]\n
    struct_3 *v2;  // [bp-0x48], Other Possible Types: unsigned long\n
    struct_1 *v3;  // [bp-0x40]\n
    struct_4 *v4;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_5 *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_2 *v6;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct struct_2 **v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = a0;\n
    if (!*(a0))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (*(a0)->field_0 == *(a1))\n
    {\n
        v5 = &*(a0)->field_0;\n
        *(a0) = *(a0)->field_20;\n
        if (*(&v5->field_8))\n
            cgc_free(*(&v5->field_8));\n
        v4 = &v5->field_18->padding_0;\n
        while (v4)\n
        {\n
            v2 = &v4->field_18->padding_0;\n
            while (v2)\n
            {\n
                if (*((v2 + 8)))\n
                    cgc_free(*((v2 + 8)));\n
                v1 = v2;\n
                v2 = *((v2 + 16));\n
                cgc_free(v1);\n
            }\n
            if (*(&v4->field_8))\n
                cgc_free(*(&v4->field_8));\n
            v3 = &v4->padding_0;\n
            v4 = v4->field_20;\n
            cgc_free(v3);\n
        }\n
        v2 = &v5->field_10->padding_0;\n
        while (v2)\n
        {\n
            if (*((v2 + 8)))\n
                cgc_free(*(&v2->field_8));\n
            v1 = &v2->padding_0;\n
            v2 = v2->field_10;\n
            cgc_free(v1);\n
        }\n
        cgc_free(v5);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        v6 = *(a0);\n
        v5 = &*(a0)->field_20->field_0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v5)\n
                v0 = v5->field_0 != *(a1);\n
            if (!(v0 & 1))\n
                break;\n
            v6 = v5;\n
            v5 = *((v5 + 32));\n
        }\n
        if (!v5)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        *((v6 + 32)) = *((v5 + 32));\n
        if (*(&v5->field_8))\n
            cgc_free(*((v5 + 8)));\n
        v2 = *((v5 + 16));\n
        while (v2)\n
        {\n
            v1 = &v2->padding_0;\n
            if (*((v2 + 8)))\n
                cgc_free(*(&v2->field_8));\n
            v2 = *((v2 + 16));\n
            cgc_free(v1);\n
        }\n
        v4 = *((v5 + 24));\n
        while (v4)\n
        {\n
            v2 = &v4->field_18->padding_0;\n
            while (v2)\n
            {\n
                if (*((v2 + 8)))\n
                    cgc_free(*(&v2->field_8));\n
                v1 = &v2->padding_0;\n
                v2 = v2->field_10;\n
                cgc_free(v1);\n
            }\n
            if (*(&v4->field_8))\n
                cgc_free(*(&v4->field_8));\n
            v3 = &v4->padding_0;\n
            v4 = v4->field_20;\n
            cgc_free(v3);\n
        }\n
        cgc_free(v5);\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4222228:sub_406d14": null, "4222240:cgc_list_all_products": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[16];\n
    struct struct_0 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[20];\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
extern char cgc_List_Products;\n
\n
long long cgc_list_all_products(struct_0 *a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_1 *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!v0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    for (v0 = &a0->padding_0; v0; v0 = *((v0 + 32)))\n
    {\n
        cgc_printf(cgc_obf_strings(&cgc_List_Products), *((v0 + 8)), a2, a3, a4);\n
    }\n
    cgc_printf(\"\\n
\", *((v0 + 8)), a2, a3, a4);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4222368:cgc_list_product": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_2 *field_20;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_4 *field_20;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char padding_6[10];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
    struct struct_3 *field_20;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
extern char cgc_Prod_Backlog;\n
extern char cgc_Prod_Backlog2;\n
extern char cgc_Prod_Backlog3;\n
extern char cgc_Prod_ID;\n
extern char cgc_Prod_Title;\n
extern char cgc_SBI_Entry;\n
extern char cgc_Sprint_Entry;\n
extern char cgc_Sprints_Title;\n
\n
long long cgc_list_product(struct_2 *a0, unsigned short *a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x31]\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_3 *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_4 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = &a0->field_0;\n
    if (!*(a1))\n
    {\n
        cgc_list_all_products(v3, a1, a2, a3, a4);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
        {\n
            a3 = *(a1);\n
            v0 = *(v3) != a3;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 32));\n
    }\n
    if (!v3)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    cgc_printf(cgc_obf_strings(&cgc_Prod_Title), *((v3 + 8)), a2, a3, a4);\n
    cgc_printf(cgc_obf_strings(&cgc_Prod_ID), *(v3), a2, a3, a4);\n
    cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    v1 = *((v3 + 16));\n
    cgc_printf(cgc_obf_strings(&cgc_Prod_Backlog), a1, a2, a3, a4);\n
    cgc_printf(cgc_obf_strings(&cgc_Prod_Backlog2), a1, a2, a3, a4);\n
    for (; v1; v1 = v1->field_10)\n
    {\n
        cgc_printf(cgc_obf_strings(&cgc_Prod_Backlog3), v1->field_0, v1->field_2, a3, a4);\n
    }\n
    cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    v2 = *((v3 + 24));\n
    cgc_printf(cgc_obf_strings(&cgc_Sprints_Title), a1, a2, a3, a4);\n
    for (; v2; v2 = v2->field_20)\n
    {\n
        cgc_printf(cgc_obf_strings(&cgc_Sprint_Entry), *(v2), *((v2 + 8)), a3, a4);\n
        for (v1 = *((v2 + 24)); v1; v1 = v1->field_10)\n
        {\n
            cgc_printf(cgc_obf_strings(&cgc_SBI_Entry), v1->field_0, v1->field_2, v1->field_4, a4);\n
        }\n
        cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    }\n
    cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4222970:sub_406ffa": null, "4222976:main": "extern char cgc_Tool_Title;\n
\n
int main(unsigned long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // r9\n
\n
    v4 = 0;\n
    v3 = a0;\n
    v2 = a1;\n
    v0 = 0;\n
    v1 = cgc_calc_version();\n
    v6 = cgc_obf_strings(&cgc_Tool_Title);\n
    cgc_printf(v6, v1, a2, a3, a4);\n
    cgc_receive_commands(&v0);\n
    cgc_destroy_database(&v0);\n
    cgc__terminate(v6);\n
    return cgc_create_sprint(v6, a1, a2, a3, a4, v7);\n
}\n
", "4223072:cgc_create_sprint": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[22];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    unsigned short field_14;\n
    char padding_16[2];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_0;\n
\n
long long cgc_create_sprint(struct_1 *a0, unsigned short a1[2])\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x40]\n
    char v2;  // [bp-0x31]\n
    struct_0 *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_2 *v4;  // [bp-0x28]\n
    struct_1 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
            v2 = *(v5) != a1[0];\n
        if (!(v2 & 1))\n
            break;\n
        v5 = *((v5 + 32));\n
    }\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = cgc_calloc(40);\n
    if (!v4)\n
        cgc__terminate(40);\n
    v4->field_0 = a1[1];\n
    v4->field_8 = cgc_calloc(cgc_strlen(a1 + 1) + 1);\n
    if (!v4->field_8)\n
        cgc__terminate(a0);\n
    *(&v0) = v4->field_8;\n
    *(&v1) = a1 + 1;\n
    cgc_strncpy(*(&v0), *(&v1), cgc_strlen(a1 + 1));\n
    v4->field_10 = 0;\n
    v4->field_12 = 0;\n
    v4->field_14 = 0;\n
    v4->field_18 = 0;\n
    v4->field_20 = 0;\n
    if (!*((v5 + 24)))\n
    {\n
        *((v5 + 24)) = v4;\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v3 = *((v5 + 24)); v3->field_20; v3 = v3->field_20);\n
    *((v3 + 32)) = v4;\n
    v6 = 0;\n
    return v6;\n
}\n
", "4223511:sub_407217": null, "4223520:cgc_delete_sprint": "long long cgc_delete_sprint(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = *(v4) != *(a1);\n
        if (!(v1 & 1))\n
            break;\n
        v4 = *((v4 + 32));\n
    }\n
    if (!v4)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (!*((v4 + 24)))\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (*(*((v4 + 24))) != *((a1 + 2)))\n
    {\n
        v2 = *((v4 + 24));\n
        v3 = *((v2 + 32));\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v3)\n
                v0 = *(v3) != *((a1 + 2));\n
            if (!(v0 & 1))\n
                break;\n
            v2 = v3;\n
            v3 = *((v3 + 32));\n
        }\n
        if (!v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*((v3 + 24)))\n
        {\n
            *((v2 + 32)) = *((v3 + 32));\n
            if (*((v3 + 8)))\n
                cgc_free(*((v3 + 8)));\n
            cgc_free(v3);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    else if (!*((*((v4 + 24)) + 24)))\n
    {\n
        v3 = *((v4 + 24));\n
        *((v4 + 24)) = *((v3 + 32));\n
        if (*((v3 + 8)))\n
            cgc_free(*((v3 + 8)));\n
        cgc_free(v3);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4224020:sub_407414": null, "4224032:cgc_calc_version": "long long cgc_calc_version()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    for (v1 = 0; v1 < 0x400; v1 += 1)\n
    {\n
        v0 = *((v1 * 4 + 0x4347c000)) + v0;\n
    }\n
    return v0;\n
}\n
", "4224108:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:malloc": null, "5242936:cgc_log10": null, "5242944:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}