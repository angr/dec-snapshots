{"4206592:_init": "extern struct_0 *g_40e9b0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40e9b0;\n
    if (g_40e9b0)\n
        v1 = g_40e9b0();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40e9c8;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40e9c8;\n
    goto *(4254160);\n
}\n
", "4206636:sub_40302c": null, "4206640:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4206672:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4206704:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206720:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206736:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libstdc++.so::cgc_deallocate();\n
    return;\n
}\n
", "4206752:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206768:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4206784:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4254104);\n
}\n
", "4206800:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206837:sub_4030f5": null, "4206838:sub_4030f6": null, "4206848:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40e9a8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206889:sub_403129": null, "4206896:register_tm_clones": "extern unsigned long long g_40e9b8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206953:sub_403169": null, "4206960:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40e998;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40e998)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207013:sub_4031a5": null, "4207017:sub_4031a9": null, "4207024:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207033:sub_4031b9": null, "4207040:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4207098:sub_4031fa": null, "4207104:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4207123:sub_403213": null, "4207136:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4207155:sub_403233": null, "4207168:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4207187:sub_403253": null, "4207200:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4207219:sub_403273": null, "4207232:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4207251:sub_403293": null, "4207264:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4207283:sub_4032b3": null, "4207296:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4207315:sub_4032d3": null, "4207328:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4207347:sub_4032f3": null, "4207360:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4207379:sub_403313": null, "4207392:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4207411:sub_403333": null, "4207424:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4207469:sub_40336d": null, "4207472:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207496:sub_403388": null, "4207504:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4207554:sub_4033c2": null, "4207568:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207592:sub_4033e8": null, "4207600:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate(v3);\n
    return cgc_exit(v3, v4, v5, v6, v7, v8);\n
}\n
", "4207616:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4207632:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // r8\n
    void* v4;  // r15, Other Possible Types: unsigned long long, unsigned long\n
    char *v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // r13\n
    unsigned long v10;  // rax\n
    char *v11;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r13, Other Possible Types: unsigned long long\n
    void* v14;  // r14, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    if (a0->field_4 == 1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v5 = a0->field_10;\n
        v6 = a0->padding_c;\n
        v13 = v6 - v3;\n
        if (v5 && v13)\n
        {\n
            v8 = v13 & 3;\n
            if (~(v3) + v6 < 3)\n
            {\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v9 = v13 & -4;\n
                v10 = &a0->padding_0[v3 + 35];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v10 + v11 - 3)) = v5[*((v10 + v11 - 3))];\n
                    *((v10 + v11 - 2)) = v5[*((v10 + v11 - 2))];\n
                    *((v10 + v11 - 1)) = v5[*((v10 + v11 - 1))];\n
                    *((v10 + v11)) = v5[*((v10 + v11))];\n
                    v11 += 4;\n
                } while (v9 != v11);\n
            }\n
            if (v8)\n
            {\n
                v12 = &a0->padding_0[v3 + v11 + 32];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v12 + v11)) = v5[*((v12 + v11))];\n
                    v11 += 1;\n
                } while (v8 != v11);\n
            }\n
            v13 = (a0->padding_c - a0->field_8);\n
        }\n
        v0 = a0;\n
        v4 = 0;\n
        v14 = 0;\n
        do\n
        {\n
            if (v13 <= v14)\n
            {\n
LABEL_403545:\n
                a0 = v0;\n
                goto LABEL_40354a;\n
            }\n
            v14 += *(&v1);\n
        } while (!cgc_transmit(a0, v11));\n
        v4 = 4294967295;\n
        goto LABEL_403545;\n
    }\n
LABEL_40354a:\n
    *((a0 + 8)) = 0;\n
    return v4;\n
}\n
", "4207972:sub_403564": null, "4207984:cgc_fbuffered": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fbuffered(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int *v1;  // [bp-0x40]\n
    char v2;  // [bp-0x38]\n
    struct_0 *v4;  // r15\n
    unsigned long long v5;  // r8\n
    unsigned int *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rbx\n
    char *v12;  // rax\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v5 = a0->field_8;\n
    if (v5 == -1)\n
    {\n
        v4->field_8 = -(a1 < 1);\n
        v4->field_c = 0;\n
        return -(a1 < 1);\n
    }\n
    if (a0->field_4 == 1)\n
    {\n
        v6 = &a0->field_c;\n
    }\n
    else\n
    {\n
        v7 = a0->field_10;\n
        v8 = a0->field_c;\n
        v13 = v8 - v5;\n
        v0 = a1;\n
        if (v7 && v13)\n
        {\n
            v10 = v13 & 3;\n
            if (~(v5) + v8 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v11 = v13 & -4;\n
                a0 = &a0->padding_0[v5 + 35];\n
                a1 = 0;\n
                do\n
                {\n
                    *((a0 + a1 - 3)) = v7[*((a0 + a1 - 3))];\n
                    *((a0 + a1 - 2)) = v7[*((a0 + a1 - 2))];\n
                    *((a0 + a1 - 1)) = v7[*((a0 + a1 - 1))];\n
                    *((a0 + a1)) = v7[*((a0 + a1))];\n
                    a1 += 4;\n
                } while (v11 != a1);\n
            }\n
            if (v10)\n
            {\n
                v12 = &v4->padding_0[v5 + a1 + 32];\n
                a1 = 0;\n
                do\n
                {\n
                    v12[a1] = v7[v12[a1]];\n
                    a1 += 1;\n
                } while (v10 != a1);\n
            }\n
            v13 = v4->field_c - v4->field_8;\n
        }\n
        v1 = &v4->field_c;\n
        v14 = 0;\n
        while (v13 > v14)\n
        {\n
            v14 += *(&v2);\n
            if (cgc_transmit(a0, a1))\n
                break;\n
        }\n
        a1 = v0;\n
        v6 = v1;\n
    }\n
    *(v6) = 0;\n
}\n
", "4208334:sub_4036ce": null, "4208336:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(1056);\n
    if (v3)\n
    {\n
        v3->field_0 = a0;\n
        v3->field_4 = 2 - (a1 < 1);\n
        v3->field_8 = 0;\n
        v3->field_10 = 0;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4208400:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x40], Other Possible Types: char\n
    unsigned long v1;  // [bp-0x38]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // r14\n
    unsigned long long v5;  // r15\n
    unsigned long long v6;  // rax\n
    char *v7;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rax, Other Possible Types: unsigned long long\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v13;  // eax\n
    unsigned long long v15;  // r8\n
    char *v16;  // rax\n
    unsigned long v17;  // rbp\n
\n
    v3 = a2;\n
    v4 = a1;\n
    v5 = a0;\n
    v11 = a2->field_8;\n
    if (v11 == *(&a2->padding_c[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        v6 = cgc_receive(a0, a1, a2, v10);\n
        if (!v6)\n
        {\n
            v7 = *(&v0);\n
            if (v7)\n
            {\n
                *(&a2->padding_c[0]) = v7;\n
                v10 = v7 * 0x100000000;\n
                if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(rax<8>, 0x20<8>), Shl(rax<8>, 0x1f<8>), cc_ndep<8>)))\n
                {\n
                    v10 = a2->field_18;\n
                    if (v10)\n
                    {\n
                        a2 = v7;\n
                        v9 = v7 & 3;\n
                        if (v7 + 1 < 3)\n
                        {\n
                            a1 = 0;\n
                        }\n
                        else\n
                        {\n
                            a2 = &a2[-1 * v9];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                v3[1].padding_0[a1] = *((v10 + v3[1].padding_0[a1]));\n
                                v3[1].padding_0[1 + a1] = *((v10 + v3[1].padding_0[1 + a1]));\n
                                v3[1].padding_0[2 + a1] = *((v10 + v3[1].padding_0[2 + a1]));\n
                                v3[1].padding_0[3 + a1] = *((v10 + v3[1].padding_0[3 + a1]));\n
                                a1 += 4;\n
                            } while (a2 != a1);\n
                        }\n
                        if (v9)\n
                        {\n
                            a2 = &v3->padding_0[a1 + 32];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                a2[a1] = *((v10 + a2[a1]));\n
                                a1 += 1;\n
                            } while (v9 != a1);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        v11 = v3->field_8;\n
    }\n
    if (v11 != -1)\n
    {\n
        v12 = *(&v3->padding_c[0]) - v11;\n
        if (v12 > v4)\n
            v12 = v4;\n
        v0 = v12;\n
        a1 = &v3->padding_0[v11 + 32];\n
        a2 = v12;\n
        cgc_memcpy();\n
        v13 = v3->field_8 + v12;\n
        v3->field_8 = v13;\n
        if (v13 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
        if (!(v12 < v4))\n
            goto LABEL_403994;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        if (0 >= v4)\n
        {\n
LABEL_403994:\n
            return v12;\n
        }\n
    }\n
    v1 = v5 + 3;\n
    while (true)\n
    {\n
        v10 = cgc_receive(a0, a1, a2, v10);\n
        if (v10)\n
            return -1;\n
        v15 = v0;\n
        if (!v15)\n
            return -1;\n
        v16 = v3->field_18;\n
        if (v16)\n
        {\n
            a2 = v15 & 3;\n
            if (v15 - 1 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v17 = v1 + v12;\n
                a1 = 0;\n
                do\n
                {\n
                    *((v17 + a1 - 3)) = v16[*((v17 + a1 - 3))];\n
                    *((v17 + a1 - 2)) = v16[*((v17 + a1 - 2))];\n
                    *((v17 + a1 - 1)) = v16[*((v17 + a1 - 1))];\n
                    *((v17 + a1)) = v16[*((v17 + a1))];\n
                    a1 += 4;\n
                } while ((v15 & -4) != a1);\n
            }\n
            if (a2)\n
            {\n
                a1 = a1 + v12 + v5;\n
                a0 = 0;\n
                do\n
                {\n
                    a1[a0] = v16[a1[a0]];\n
                    a0 += 1;\n
                } while (a2 != a0);\n
            }\n
        }\n
        v12 += v15;\n
        if (v12 >= v4)\n
            return v12;\n
    }\n
}\n
", "4208882:sub_4038f2": null, "4209062:sub_4039a6": null, "4209072:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (a1 != 1)\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_403a00;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_403a11;\n
    while (true)\n
    {\n
LABEL_403a00:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_403a11;\n
    }\n
LABEL_403a11:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209195:sub_403a2b": null, "4209200:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x11]\n
    char v1;  // [bp-0x10]\n
    struct_1 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v15;  // r8\n
    unsigned long v16;  // rcx\n
    struct struct_0 **v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    char *v20;  // rsi\n
    unsigned long v21;  // rdi\n
\n
    v3 = a0;\n
    v4 = a0->field_8;\n
    if (v4 == -1)\n
    {\n
        v13 = cgc_receive(a0, v5, v6, v7);\n
        v14 = 4294967295;\n
        if (v13)\n
            return 4294967295;\n
        if (!*(&v1))\n
            return 4294967295;\n
        v16 = a0->field_18;\n
        *(&v14) = v0;\n
        if (!v16)\n
            return v14;\n
        *(&v14) = *(v16 + v14);\n
    }\n
    else if (v4 != *(&a0->padding_c[0]))\n
    {\n
LABEL_403b7c:\n
        v3->field_8 = v4 + 1;\n
        v14 = v3[1].padding_0[v4];\n
        return v14;\n
    }\n
    else\n
    {\n
        *(&a0->field_8) = 0;\n
        if (cgc_receive(a0, v9, v10, v11))\n
            return 4294967295;\n
        v15 = *(&v1);\n
        if (v15)\n
        {\n
            *(&a0->padding_c[0]) = v15;\n
            if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>)))\n
            {\n
                v17 = a0->field_18;\n
                if (v17)\n
                {\n
                    v18 = v15 & 3;\n
                    if (v15 - 1 < 3)\n
                    {\n
                        v19 = 0;\n
                    }\n
                    else\n
                    {\n
                        v19 = 0;\n
                        do\n
                        {\n
                            v3[1].padding_0[v19] = *(v17 + v3[1].padding_0[v19]);\n
                            v3[1].padding_0[1 + v19] = *(v17 + v3[1].padding_0[1 + v19]);\n
                            v3[1].padding_0[2 + v19] = *(v17 + v3[1].padding_0[2 + v19]);\n
                            v3[1].padding_0[3 + v19] = *(v17 + v3[1].padding_0[3 + v19]);\n
                            v19 += 4;\n
                        } while (v15 - v18 != v19);\n
                    }\n
                    if (v18)\n
                    {\n
                        v20 = &v3->padding_0[v19 + 32];\n
                        v21 = 0;\n
                        do\n
                        {\n
                            v20[v21] = *(v17 + v20[v21]);\n
                            v21 += 1;\n
                        } while (v18 != v21);\n
                    }\n
                }\n
            }\n
            if (v15 >= 0)\n
            {\n
                v4 = v3->field_8;\n
                goto LABEL_403b7c;\n
            }\n
        }\n
    }\n
}\n
", "4209558:sub_403b96": null, "4209568:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4209583:sub_403baf": null, "4209584:cgc_fwrite": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_1 *a2)\n
{\n
    unsigned long v0;  // [bp-0x450]\n
    unsigned long v1;  // [bp-0x448]\n
    char v2;  // [bp-0x440]\n
    unsigned long long v3;  // [bp-0x438], Other Possible Types: char\n
    unsigned long long v4;  // [bp-0x437]\n
    unsigned long long v5;  // [bp-0x436]\n
    unsigned long long v6;  // [bp-0x435]\n
    struct_1 *v8;  // rbx\n
    unsigned long long v9;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v10;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    char *v12;  // r15\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    struct_0 *v15;  // rdi, Other Possible Types: unsigned long\n
    void* v16;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rcx\n
    unsigned long v18;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // rsi\n
    unsigned long long v20;  // rdx\n
    unsigned long v21;  // rcx\n
    char *v22;  // rcx\n
    unsigned long v23;  // rdx\n
    void* v24;  // r14, Other Possible Types: unsigned long\n
    void* v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v26;  // rcx\n
    struct_0 *v27;  // rdi\n
    unsigned long long v28;  // r15\n
\n
    v8 = a2;\n
    v9 = a1;\n
    v10 = a0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v11 = a2->field_c;\n
            if (v11 + a1 >= 0x400)\n
            {\n
                v13 = 0x400 - v11;\n
                cgc_memcpy(&a2->padding_0[v11 + 32], a0, v13);\n
                v8->field_c = v8->field_c + v13;\n
                cgc_fflush(a2);\n
                if (v13 < a1)\n
                    goto LABEL_403da2;\n
            }\n
            else\n
            {\n
                v13 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_403da2:\n
                    v28 = a1 - v13;\n
                    cgc_memcpy(&v8->padding_0[v8->field_c + 32], a0 + v13, v28);\n
                    v8->field_c = v8->field_c + v28;\n
                    return a1;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v12 = a2->field_10;\n
    if (!v12)\n
    {\n
        v16 = 0;\n
        do\n
        {\n
            if (v16 >= a1)\n
                return a1;\n
            v16 += *(&v3);\n
        } while (!cgc_transmit(a2, a1, a2, v17));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v25 = 0;\n
        v14 = 0x400;\n
        v15 = &v3;\n
        v0 = v10;\n
LABEL_403c13:\n
        v18 = v9 - v25;\n
        if (0x400 <= v18)\n
            v18 = 0x400;\n
        v1 = v25;\n
        v19 = v10 + v25;\n
        v20 = v18;\n
        cgc_memcpy();\n
        if (v18)\n
        {\n
            v15 = v18 & 3;\n
            if (v18 - 1 < 3)\n
            {\n
                v21 = 0;\n
            }\n
            else\n
            {\n
                v21 = 0;\n
                do\n
                {\n
                    *(&v3 + v21) = v12[*(&v3 + v21)];\n
                    *(&v4 + v21) = v12[*(&v4 + v21)];\n
                    *(&v5 + v21) = v12[*(&v5 + v21)];\n
                    *(&v6 + v21) = v12[*(&v6 + v21)];\n
                    v21 += 4;\n
                } while ((v18 & 2044) != v21);\n
            }\n
            if (v15)\n
            {\n
                v22 = &v3 + v21;\n
                v23 = 0;\n
                do\n
                {\n
                    v22[v23] = v12[v22[v23]];\n
                    v23 += 1;\n
                } while (v15 != v23);\n
            }\n
        }\n
        v24 = 0;\n
        do\n
        {\n
            if (v18 <= v24)\n
            {\n
                v25 = v1 + v18;\n
                v10 = v0;\n
                v26 = 0x400;\n
                v27 = &v3;\n
                if (v25 >= v9)\n
                    return v9;\n
                goto LABEL_403c13;\n
            }\n
            v24 += *(&v2);\n
        } while (!cgc_transmit(v15, v19));\n
    }\n
    return -1;\n
}\n
", "4209912:sub_403cf8": null, "4210139:sub_403ddb": null, "4210144:cgc_fxlat": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[15];\n
    uint128_t field_10;\n
    char padding_20[80];\n
    uint128_t field_70;\n
    uint128_t field_80;\n
    uint128_t field_90;\n
    uint128_t field_a0;\n
    uint128_t field_b0;\n
    uint128_t field_c0;\n
    uint128_t field_d0;\n
    uint128_t field_e0;\n
    uint128_t field_f0;\n
} struct_1;\n
\n
long long cgc_fxlat(struct_0 *a0, char a1[2])\n
{\n
    struct_0 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    unsigned long v4;  // rbx\n
    unsigned long v7;  // rsi, Other Possible Types: unsigned long long\n
    char v8;  // rdx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rdi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rdx\n
    char v14;  // al\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        *(&v1->field_10) = 0;\n
        return cgc_free(v2);\n
    }\n
    v3 = a1;\n
    v4 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v4;\n
    *(&v1[1].padding_0[0]) = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    v8 = a1[0];\n
    v7 = 826981510;\n
    if (v3[0])\n
    {\n
        v9 = 1;\n
        do\n
        {\n
            v7 = __ROL__((v7 + v7 * 36) ^ v8, 13);\n
            v8 = v3[v9];\n
            v9 = v9 + 1;\n
        } while (v8);\n
    }\n
    *(v4) = 0xf0e0d0c0b0a09080706050403020100;\n
    *((v4 + 16)) = 41362427191743139026751447860679676176;\n
    strncpy(v4 + 32, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmno\", 80);\n
    *((v4 + 112)) = 169468730032567031154139535364404179312;\n
    *((v4 + 128)) = 190819780506037679842037549948358263168;\n
    *((v4 + 144)) = 212170830979508328529935564532312347024;\n
    *((v4 + 160)) = 233521881452978977217833579116266430880;\n
    *((v4 + 176)) = 254872931926449625905731593700220514736;\n
    *((v4 + 192)) = 276223982399920274593629608284174598592;\n
    *((v4 + 208)) = 297575032873390923281527622868128682448;\n
    *((v4 + 224)) = 318926083346861571969425637452082766304;\n
    *((v4 + 240)) = 340277133820332220657323652036036850160;\n
    v10 = 255;\n
    while (true)\n
    {\n
        v11 = v7;\n
        v12 = v7 * 3;\n
        v13 = (0 CONCAT v11) /m v10 >> 32;\n
        v7 = v12 / 0x200000 ^ __ROL__(v12, 13);\n
        v14 = *((v4 + v10));\n
        *((v4 + v10)) = *((v4 + v13));\n
        *((v4 + v13)) = v14;\n
        v10 -= 1;\n
    }\n
}\n
", "4210589:sub_403f9d": null, "4210592:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4210607:sub_403faf": null, "4210608:cgc_malloc_alloc": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[1032];\n
    unsigned long long field_410;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_5 *field_18;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_4;\n
\n
typedef struct struct_7 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_5 *field_18;\n
} struct_7;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_3;\n
\n
long long cgc_malloc_alloc(struct_1 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long long v2;  // rbx\n
    struct_2 *v4;  // rbx\n
    struct_2 *v5;  // r12\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rbx\n
    struct_6 *v11;  // r15, Other Possible Types: unsigned long, unsigned long long, void*, struct_0 *\n
    unsigned long long v12;  // rdx\n
    unsigned long long v14;  // rbp\n
    unsigned long long v15;  // r15\n
    struct_6 *v16;  // rbx\n
    unsigned long long v17;  // rbx\n
    unsigned long long v18;  // rax\n
    unsigned long long v19;  // rax\n
    struct_5 *v20;  // rax\n
    struct_2 *v21;  // rcx\n
    unsigned long v22;  // rcx\n
    struct_4 *v23;  // rdx\n
    unsigned long v24;  // rdi, Other Possible Types: unsigned long long\n
    struct_5 *v25;  // rsi\n
    unsigned long long v26;  // rax\n
    struct_7 *v27;  // rsi\n
    struct_1 *v28;  // rax, Other Possible Types: unsigned long\n
    unsigned long v29;  // rcx\n
    unsigned long long v30;  // rax\n
    struct_5 *v31;  // rax\n
    unsigned long v32;  // r15\n
\n
    if (a1 > 2147483647)\n
    {\n
LABEL_403fc5:\n
        return 0;\n
    }\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
        return cgc_tiny_alloc(a0, 4);\n
    if (v2 <= 15)\n
        return cgc_tiny_alloc(a0, v2);\n
    if (v2 > 131071)\n
    {\n
        if (!cgc_allocate(a0, a1, v7))\n
        {\n
            v11 = *(&v0);\n
            *(v11) = a0;\n
            *((v11 + 8)) = v2 + 4111 & -0x1000;\n
            goto LABEL_4042eb;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    v4 = v2 + 31;\n
    v5 = v4 & -0x10;\n
    if (!(v4 & -0x10))\n
    {\n
        v9 = 4294967295;\n
    }\n
    else if (v5 < 513)\n
    {\n
        v10 = v4 / 16;\n
        v9 = v10 + 2;\n
        if (v10 > 128)\n
        {\n
            v11 = 0;\n
            if (!(v9 == 131))\n
                goto LABEL_40413c;\n
            goto LABEL_40405b;\n
        }\n
    }\n
    else if (v5 <= 0x1200)\n
    {\n
        v9 = (v5 + 22906492224 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v9 = 130;\n
        if (v5 <= 0x20000)\n
            v9 = (&v5[366503875733].field_8 >> 11) + 66;\n
    }\n
    do\n
    {\n
        v11 = (&a0->field_0)[v9];\n
        if (v11)\n
        {\n
            while (*((v11 + 8)) < v5)\n
            {\n
                v11 = *((v11 + 24));\n
                if (!v11)\n
                    goto LABEL_404263;\n
            }\n
        }\n
LABEL_404263:\n
        v9 += 1;\n
    } while (v9 != 131);\n
LABEL_40405b:\n
    if (!cgc_allocate(a0, a1, v12))\n
    {\n
        v14 = *(&v0);\n
        v15 = v14 + 1048575;\n
        v16 = v15 & -0x100000;\n
        if (v16 > v14)\n
            cgc_deallocate(a0);\n
        if ((v14 + 0x200000) > (v16 + 0x8000))\n
            cgc_deallocate(a0);\n
        *(1048 + &a0->field_0 + (v15 >> 20)) = 2;\n
        if (v16)\n
        {\n
            v11 = v16 | 16;\n
            v11->field_0 = 0;\n
            v17 = (v16 - v11) + 0x100000 & -0x10;\n
            v18 = v17 - 32;\n
            v11->field_8 = v18;\n
            *((-32 + v17 + &v11->field_0)) = v18;\n
            *((-24 + v17 + &v11->field_0)) = 0;\n
            v19 = v11->field_8;\n
            if (!(!(v19 & 1)))\n
                goto LABEL_404313;\n
            v11->field_8 = v19 | 1;\n
            v11->field_10 = 0;\n
            v11->field_18 = a0->field_410;\n
            a0->field_410 = v11;\n
            v20 = v11->field_18;\n
            if (v20)\n
            {\n
                v20->field_10 = v11;\n
                v11 = a0->field_410;\n
            }\n
            v9 = 130;\n
LABEL_40413c:\n
            v21 = *((v11 + 8));\n
            if (!(v21 & 1))\n
            {\n
                v24 = \"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\";\n
                goto LABEL_4042fb;\n
            }\n
            else\n
            {\n
                v22 = v21 & -2;\n
                *((v11 + 8)) = v22;\n
                v23 = *((v11 + 16));\n
                if (v23)\n
                    v23->field_18 = *((v11 + 24));\n
                v25 = *((v11 + 24));\n
                if (v25)\n
                    v25->field_10 = v23;\n
                if ((&a0->field_0)[v9] == v11)\n
                    (&a0->field_0)[v9] = &v25;\n
                *((v11 + 16)) = 0;\n
                v26 = v22 - v5;\n
                if (v26 < 33)\n
                    goto LABEL_4042eb;\n
                v27 = v11 + v5;\n
                *((v11 + 8)) = v5;\n
                *((v11 + &v5->field_0)) = v5;\n
                *((8 + v11 + &v5->field_0)) = v26;\n
                *((v22 + v11)) = v26;\n
                if (v26 <= 0x200)\n
                {\n
                    v28 = (v26 >> 4) + 2;\n
                }\n
                else if (v26 <= 0x1200)\n
                {\n
                    v28 = (v26 + 0x7ffffffe00 >> 7) + 34;\n
                }\n
                else\n
                {\n
                    v29 = 130;\n
                    if (!(v26 <= 0x20000))\n
                        goto LABEL_4042b7;\n
                    v28 = (v26 + 0x7ffffffee00 >> 11) + 66;\n
                }\n
                v29 = v28;\n
LABEL_4042b7:\n
                v30 = v27->field_8;\n
                if (!(v30 & 1))\n
                {\n
                    v27->field_8 = v30 | 1;\n
                    v27->field_10 = 0;\n
                    v27->field_18 = &(&a0->field_0)[v29]->padding_0;\n
                    (&a0->field_0)[v29] = &v27->padding_0;\n
                    v31 = v27->field_18;\n
                    if (v31)\n
                        v31->field_10 = v27;\n
LABEL_4042eb:\n
                    v32 = v11 + 16;\n
                    return v32;\n
                }\n
            }\n
            while (true)\n
            {\n
LABEL_404313:\n
                v24 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
LABEL_4042fb:\n
                cgc_heap_error(v24, v11);\n
                cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
            }\n
        }\n
    }\n
    goto LABEL_403fc5;\n
}\n
", "4211484:sub_40431c": null, "4211488:cgc_tiny_alloc": "long long cgc_tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned short v6[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned int v7;  // edx\n
    unsigned short *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v12;  // rbp\n
    unsigned long long v13;  // r13\n
    unsigned short *v14;  // r12\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v9 = *((a0 + v4 * 8));\n
    if (v9)\n
    {\n
        *((a0 + v5 * 8)) = *(&v9);\n
        return v9;\n
    }\n
    v6 = *((a0 + v5 * 8 + 5144));\n
    if (v6)\n
    {\n
        v7 = v6[0];\n
        a1 = v6[1];\n
    }\n
    else\n
    {\n
        v8 = *((a0 + 5168));\n
        if (v8)\n
        {\n
            v9 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v10))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v12 = v0;\n
            v13 = v12 + 1048575;\n
            v14 = v13 & -0x100000;\n
            if (v14 > v12)\n
                cgc_deallocate(a0);\n
            if ((v12 + 0x200000) > (v14 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v13 >> 20) + 1048)) = 1;\n
            v8 = v14;\n
            *((a0 + 5168)) = v14;\n
            v9 = 0;\n
            if (!v14)\n
                return 0;\n
        }\n
        v15 = v8;\n
        v6 = v8 + v9;\n
        *((a0 + v5 * 8 + 5144)) = v6;\n
        *((v15 + v9)) = v3;\n
        *((v15 + v9 + 2)) = v3;\n
        v16 = v9 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v7 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v6 + 2)) = v17;\n
    if (v7 + v17 < 4097)\n
        return a1 + v6;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4211927:sub_4044d7": null, "4211936:malloc_free": "long long malloc_free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // r9\n
    char v5;  // al\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdi\n
    unsigned long v8;  // r11\n
    unsigned long v9;  // r8\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rdi\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r10\n
    unsigned long v14;  // rdi\n
    unsigned long v15;  // rsi\n
    unsigned long v16;  // r10\n
    unsigned long v17;  // rcx\n
    unsigned long v18;  // rdi\n
    unsigned long v19;  // r11\n
    unsigned long v20;  // rsi\n
    unsigned long v21;  // rcx\n
    unsigned long v22;  // rax\n
    unsigned long v23;  // rcx\n
    unsigned long v24;  // rdx\n
    unsigned long v25;  // rdi\n
    unsigned long v26;  // rax\n
    unsigned long v27;  // rax\n
    unsigned long v28;  // rax\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v0;\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = *((a0 + (a1 >> 20) + 1048));\n
    if (v5 != 2)\n
    {\n
        if (v5 == 1)\n
        {\n
            v6 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            *(a1) = *((a0 + v6 * 8));\n
            *((a0 + v6 * 8)) = a1;\n
            return v0;\n
        }\n
        if (v5)\n
            return v0;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v11 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4048af;\n
        }\n
        else\n
        {\n
            if (*((a1 - 16)) != a0)\n
            {\n
                v3 = a0;\n
                v12 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v12 = *((a1 - 8));\n
                if (v12 - 0x20000 <= 2147356671 && !(v12 & 4095))\n
                    return cgc_deallocate(a0, a1);\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v3, v12);\n
        }\n
    }\n
    else if (!(v3 & 7))\n
    {\n
        v20 = a1 - 16;\n
        v7 = *((v20 + 8));\n
        if ((v7 & 1))\n
        {\n
            v11 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_4048af;\n
        }\n
        else if (v7 - 131073 <= -131058)\n
        {\n
            v11 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4048af;\n
        }\n
        else\n
        {\n
            v8 = *(v20);\n
            v9 = v7 + v20;\n
            v10 = v20 - v8;\n
            if (!v8)\n
                v10 = v8;\n
            if (v10)\n
            {\n
                v13 = *((v10 + 8));\n
                if (!((v13 & -2) == v8))\n
                    goto LABEL_4048c6;\n
                if (*(v9) == v7)\n
                {\n
                    if ((v13 & 1))\n
                    {\n
                        if (v8 <= 15)\n
                        {\n
                            v16 = v13 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v8 <= 0x200)\n
                            {\n
                                v16 = (v13 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v8 <= 0x1200)\n
                                {\n
                                    v16 = (0x7ffffffe00 + v8 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v16 = 130;\n
                                    if (v8 <= 0x20000)\n
                                        v16 = (0x7ffffffee00 + v8 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v10 + 8)) = v8;\n
                        v17 = *((v10 + 16));\n
                        if (v17)\n
                            *((v17 + 24)) = *((v10 + 24));\n
                        v18 = *((v10 + 24));\n
                        if (v18)\n
                            *((v18 + 16)) = v17;\n
                        if (*((v4 + (v16 << 3))) == v10)\n
                            *((v4 + v16 * 8)) = v18;\n
                        *((v10 + 16)) = 0;\n
                        v19 = v8 + *((v20 + 8));\n
                        *((v10 + 8)) = v19;\n
                        *(v9) = v19;\n
                        v20 = v10;\n
                    }\n
LABEL_404704:\n
                    v21 = *((v9 + 8));\n
                    if ((v21 & 1))\n
                    {\n
                        v22 = v21 & -2;\n
                        if (v22 <= 15)\n
                        {\n
                            v23 = v21 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v22 <= 0x200)\n
                            {\n
                                v23 = (v21 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v22 <= 0x1200)\n
                                {\n
                                    v23 = (0x7ffffffe00 + v22 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v23 = 130;\n
                                    if (v22 <= 0x20000)\n
                                        v23 = (0x7ffffffee00 + v22 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v9 + 8)) = v22;\n
                        v24 = *((v9 + 16));\n
                        if (v24)\n
                            *((v24 + 24)) = *((v9 + 24));\n
                        v25 = *((v9 + 24));\n
                        if (v25)\n
                            *((v25 + 16)) = v24;\n
                        if (*((v4 + (v23 << 3))) == v9)\n
                            *((v4 + v23 * 8)) = v25;\n
                        *((v9 + 16)) = 0;\n
                        v26 = v22 + *((v20 + 8));\n
                        *((v20 + 8)) = v26;\n
                        *((v20 + v26)) = v26;\n
                    }\n
                    v27 = *((v20 + 8));\n
                    if (v27 <= 15)\n
                    {\n
                        v3 = v27 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v27 <= 0x200)\n
                        {\n
                            v3 = (v27 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v27 <= 0x1200)\n
                            {\n
                                v3 = (0x7ffffffe00 + v27 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v3 = 130;\n
                                if (v27 <= 0x20000)\n
                                    v3 = (0x7ffffffee00 + v27 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(v27 & 1))\n
                    {\n
                        *((v20 + 8)) = v27 | 1;\n
                        *((v20 + 16)) = 0;\n
                        *((v20 + 24)) = *((v4 + v3 * 8));\n
                        *((v4 + v3 * 8)) = v20;\n
                        v28 = *((v20 + 24));\n
                        if (!v28)\n
                            return v0;\n
                        *((v28 + 16)) = v20;\n
                        return v0;\n
                    }\n
                    goto LABEL_4048b8;\n
                }\n
            }\n
            else if (*(v9) == v7)\n
            {\n
                goto LABEL_404704;\n
            }\n
            v14 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
            v15 = v9;\n
            goto LABEL_4048cf;\n
        }\n
    }\n
    v11 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4048af:\n
    cgc_heap_error(v11, v3);\n
LABEL_4048b8:\n
    v10 = cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
LABEL_4048c6:\n
    v14 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    v15 = v10;\n
LABEL_4048cf:\n
    cgc_heap_error(v14, v15, v3);\n
    return cgc_malloc_size(v14, v15, v3, v3, v9, v4);\n
}\n
", "4212960:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4213004:sub_40490c": null, "4213008:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r12\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 > 2147483647)\n
    {\n
LABEL_404921:\n
        return 0;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        return 0;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v3 = a1 / 0x100000;\n
    if (!(*((a0 + v3 + 1048)) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_4049a3;\n
    }\n
    else\n
    {\n
        if (*((a0 + v3 + 1048)) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_4049a3;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_4049a3:\n
                v5 = cgc_malloc_alloc(a0, a2);\n
                if (v5)\n
                {\n
                    cgc_memcpy(v5, a1);\n
                    malloc_free(a0, a1);\n
                    return v5;\n
                }\n
                goto LABEL_404921;\n
            }\n
        }\n
    }\n
    return a1;\n
}\n
", "4213268:sub_404a14": null, "4213280:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4213456:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4213492:sub_404af4": null, "4213504:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4213550:sub_404b2e": null, "4213552:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_404bc4:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_404b57;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_404b57:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_404bc4;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_404b57;\n
}\n
", "4213983:sub_404cdf": null, "4213984:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_404e35:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_404d19;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_404d19:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_404e35;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_404d19;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_404e43:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_404dc7;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_404dc7:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_404e43;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_404dc7;\n
    }\n
}\n
", "4214911:sub_40507f": null, "4214912:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_4051f0;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_4051f0:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4215294:sub_4051fe": null, "4215296:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4215508:sub_4052d4": null, "4215520:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return cgc__vsfprintf();\n
    }\n
    return cgc__vsfprintf();\n
}\n
", "4215598:sub_40532e": null, "4215600:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4215809:sub_405401": null, "4215824:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4215907:sub_405463": null, "4215920:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4216073:sub_405509": null, "4216080:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4216093:sub_40551d": null, "4216096:cgc__vsfprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char field_1;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_-1;\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
long long cgc__vsfprintf(struct_1 *a0, struct_2 *a1, unsigned long a2, char *a3)\n
{\n
    int tmp_16;  // tmp #16\n
    int tmp_2;  // tmp #2\n
    unsigned long long v0;  // [bp-0x1c8]\n
    int tmp_50;  // tmp #50\n
    int tmp_70;  // tmp #70\n
    int tmp_12;  // tmp #12\n
    struct_1 *v1;  // [bp-0xa1]\n
    char *v2;  // [bp-0xa0]\n
    struct_1 *v3;  // [bp-0x98], Other Possible Types: unsigned long\n
    struct_2 *v4;  // [bp-0x90]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x87]\n
    char v7;  // [bp-0x76]\n
    char v8;  // [bp-0x75]\n
    char v9;  // [bp-0x74]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned long v11;  // [bp-0x38]\n
    char *v13;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v14;  // rbp, Other Possible Types: unsigned long\n
    void* v15;  // r15\n
    unsigned int v16;  // eax\n
    struct_1 *v17;  // r13b, Other Possible Types: char\n
    void* v18;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v19;  // rcx, Other Possible Types: unsigned long\n
    struct_1 *v20;  // edx, Other Possible Types: unsigned long\n
    char v21;  // cc_dep1\n
    char v22;  // cc_dep2\n
    struct_1 *v23;  // r12\n
    unsigned long long v24;  // rcx\n
    unsigned long long v25;  // rsi\n
    struct_2 *v26;  // rdx\n
    struct_2 *v27;  // rsi\n
    struct_2 *v28;  // rdx\n
    unsigned long long v29;  // rcx\n
    unsigned long long v30;  // rcx\n
    unsigned long long v31;  // rcx\n
    struct_2 *v32;  // rdx\n
    unsigned long long v33;  // rcx\n
    struct struct_1 **v34;  // rax, Other Possible Types: unsigned long\n
    struct struct_1 **v35;  // rsi, Other Possible Types: unsigned long\n
    struct struct_1 **v36;  // rdi, Other Possible Types: unsigned long\n
    struct struct_1 **v37;  // rax, Other Possible Types: unsigned long\n
    unsigned long v38;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v39;  // r13\n
    unsigned long long v40;  // rax\n
    unsigned long v41;  // r13, Other Possible Types: unsigned long long\n
    unsigned long long v42;  // rcx\n
    char *v43;  // rbp\n
    struct_0 *v44;  // rbp, Other Possible Types: unsigned long\n
    struct_4 *v45;  // rsi, Other Possible Types: unsigned long\n
    struct_4 *v46;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v47;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v48;  // rbp, Other Possible Types: unsigned long long\n
    char *v49;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    struct_0 *v50;  // rsi, Other Possible Types: unsigned long long, unsigned long, struct_1 *\n
    char *v51;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v52;  // rax\n
    unsigned long v53;  // r12, Other Possible Types: unsigned long long\n
    unsigned long long v54;  // rcx\n
    unsigned int v55;  // ebp\n
    struct_1 *v56;  // rax, Other Possible Types: unsigned long, char\n
    unsigned long long v57;  // r12\n
    char *v58;  // r13, Other Possible Types: unsigned long\n
\n
    v13 = a3;\n
    v4 = a1;\n
    v14 = &a0->field_0 + 1;\n
    v3 = v14;\n
    v56 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v49 = 0;\n
    }\n
    else\n
    {\n
        v15 = a2;\n
        v10 = 20 + -0x1 * &v5;\n
        v49 = 0;\n
        v2 = a3;\n
        while (true)\n
        {\n
            if (v56 != 15)\n
            {\n
                if (v49 < 2147483647)\n
                {\n
                    *(&v1) = v56;\n
                    if (v15)\n
                        cgc_fwrite(&v1, 1, v15);\n
                    if (v13)\n
                        *((v13 + v49)) = v1;\n
                    v14 = v3;\n
                }\n
                else if (v49 == -1)\n
                {\n
                    goto LABEL_405ad6;\n
                }\n
                v49 += 1;\n
                v3 = v14 + 1;\n
                tmp_16 = *(v14);\n
                v56 = *(v14);\n
                v14 = v3;\n
                if (!(!tmp_16))\n
                    continue;\n
                goto LABEL_405a61;\n
            }\n
            a0 = v14 + 1;\n
            v3 = a0;\n
            v16 = *(v14);\n
            v17 = 32;\n
            if (v16 != 32)\n
            {\n
                if (v16 == 48)\n
                {\n
                    v17 = 48;\n
                }\n
                else\n
                {\n
                    if (!v16)\n
                        goto LABEL_405a61;\n
                    v3 = v14;\n
                    a0 = v14;\n
                }\n
            }\n
            if (*(a0) - 48 > 9)\n
            {\n
                v18 = 0;\n
            }\n
            else\n
            {\n
                v18 = cgc_strtoul();\n
                a0 = v3;\n
            }\n
            v19 = a0 + 1;\n
            v3 = v19;\n
            v20 = *(a0);\n
            *(&v13) = 1;\n
            if (v20 == 104)\n
            {\n
                v20 = a0 + 2;\n
                v21 = *((a0 + 1));\n
                v22 = 104;\n
            }\n
            else if (v20 == 108)\n
            {\n
                v21 = *((a0 + 1));\n
                v22 = 108;\n
                v20 = a0 + 2;\n
                *(&v13) = *((a0 + 1)) != 108;\n
            }\n
            else\n
            {\n
                if (!v20)\n
                    goto LABEL_405a5c;\n
                goto LABEL_40566f;\n
            }\n
            if (v21 == v22)\n
                v19 = v20;\n
            a0 = v19;\n
LABEL_40566f:\n
            v23 = a0 + 1;\n
            v3 = v23;\n
            *(&v20) = *(a0);\n
            v24 = *(a0);\n
            v25 = v24 - 88;\n
            if (v25 > 32)\n
            {\n
                v13 = v2;\n
                if (!v24)\n
                {\n
                    v57 = v23 - v14;\n
                    if (v49 < 2147483647)\n
                    {\n
                        v58 = 2147483647 - v49;\n
                        if (v58 > v57)\n
                            v58 = v57;\n
                        if (v15)\n
                            cgc_fwrite(v14, v58, v15);\n
                        if (v13)\n
                            cgc_memcpy(&v13[v49], v14, v58);\n
                    }\n
                    tmp_2 = v49;\n
                    v49 += v57;\n
                    if (__CFADD__(tmp_2, v57))\n
                        goto LABEL_405ad6;\n
                    goto LABEL_405a61;\n
                }\n
                else\n
                {\n
                    v53 = v23 - v14;\n
                    if (!(v49 < 2147483647))\n
                        goto LABEL_4059df;\n
                    v41 = 2147483647 - v49;\n
                    if (v41 > v53)\n
                        v41 = v53;\n
                    if (v15)\n
                        cgc_fwrite(v14, v41, v15);\n
                    if (!v13)\n
                        goto LABEL_4059df;\n
                    a0 = &v13[v49];\n
                    v50 = v14;\n
                    v51 = v41;\n
                    goto LABEL_4059da;\n
                }\n
            }\n
            else\n
            {\n
                v0 = 4831842305;\n
                if (!((*(&v0 + ((v25 & 63) >> 3)) >> (v25 & 63 & 7)) & 1))\n
                {\n
                    if (v25 == 11)\n
                    {\n
                        v28 = v4;\n
                        v29 = v28->field_0;\n
                        if (v29 > 40)\n
                        {\n
                            v34 = v28->field_8;\n
                            v28->field_8 = v34 + 8;\n
                        }\n
                        else\n
                        {\n
                            v34 = v29 + v28->field_10;\n
                            v28->field_0 = v29 + 8;\n
                        }\n
                        v13 = v2;\n
                        if (v49 < 2147483647)\n
                        {\n
                            *(&v1) = *(v34);\n
                            if (v15)\n
                                cgc_fwrite(&v1, 1, v15);\n
                            if (v13)\n
                                *((v13 + v49)) = v1;\n
                        }\n
                        else if (v49 == -1)\n
                        {\n
                            goto LABEL_405ad6;\n
                        }\n
                        v49 += 1;\n
                        goto LABEL_4059e8;\n
                    }\n
                    if (v25 == 27)\n
                    {\n
                        v32 = v4;\n
                        v33 = v32->field_0;\n
                        if (v33 <= 40)\n
                        {\n
                            v37 = v33 + v32->field_10;\n
                            v32->field_0 = v33 + 8;\n
                        }\n
                        else\n
                        {\n
                            v37 = v32->field_8;\n
                            v32->field_8 = v37 + 8;\n
                        }\n
                        v13 = v2;\n
                        v39 = *(v37);\n
                        v40 = cgc_strlen(v39);\n
                        v53 = v40;\n
                        if (!(v49 < 2147483647))\n
                            goto LABEL_4059df;\n
                        v48 = 2147483647 - v49;\n
                        if (v48 > v40)\n
                            v48 = v40;\n
                        if (v15)\n
                            cgc_fwrite(v39, v48, v15);\n
                        if (!v13)\n
                            goto LABEL_4059df;\n
                        a0 = &v13[v49];\n
                        v50 = v39;\n
                        goto LABEL_4059d7;\n
                    }\n
                }\n
                else\n
                {\n
                    v11 = v18;\n
                    if (v20 != 100)\n
                    {\n
                        v27 = v4;\n
                        if (v13)\n
                        {\n
                            v31 = v27->field_0;\n
                            v13 = v2;\n
                            if (v31 > 40)\n
                            {\n
                                v36 = v27->field_8;\n
                                v27->field_8 = v36 + 8;\n
                            }\n
                            else\n
                            {\n
                                v36 = v31 + v27->field_10;\n
                                v27->field_0 = v31 + 8;\n
                            }\n
                            v47 = *(v36);\n
                            if (v20 != 117)\n
                                a0 = 16;\n
                            else\n
                                a0 = 10;\n
                            v43 = (v20 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                            v8 = 0;\n
                            v46 = &v8;\n
                            if (!v47)\n
                            {\n
                                v7 = *(v43);\n
                                v46 = &v7;\n
                            }\n
                            else\n
                            {\n
                                do\n
                                {\n
                                    *((v46 - 1)) = v43[(0 CONCAT v47) /m a0 >> 32];\n
                                    v46 = &v7;\n
                                    tmp_50 = v47;\n
                                    v47 = (0 CONCAT v47) /m a0;\n
                                } while (tmp_50 >= a0);\n
                            }\n
                            v44 = &v5;\n
                            cgc_memmove(&v5, v46, v10 + v46);\n
                            goto LABEL_4058c5;\n
                        }\n
LABEL_405a5c:\n
                        v13 = v2;\n
LABEL_405a61:\n
                        if (v49 < 2147483647)\n
                            break;\n
                        if (v49 == -1)\n
                        {\n
LABEL_405ad6:\n
                            cgc__terminate(a0);\n
                        }\n
                        return v49;\n
                    }\n
                    else\n
                    {\n
                        v26 = v4;\n
                        v44 = &v5;\n
                        if (!v13)\n
                            goto LABEL_405a5c;\n
                        v30 = v26->field_0;\n
                        if (v30 > 40)\n
                        {\n
                            v35 = v26->field_8;\n
                            v26->field_8 = v35 + 8;\n
                        }\n
                        else\n
                        {\n
                            v35 = v30 + v26->field_10;\n
                            v26->field_0 = v30 + 8;\n
                        }\n
                        v38 = *(v35);\n
                        if (v38 < 0)\n
                        {\n
                            v5 = 45;\n
                            v38 = -(v38);\n
                            v9 = 0;\n
                            v45 = &v9;\n
                            a0 = &v6;\n
                        }\n
                        else\n
                        {\n
                            v8 = 0;\n
                            v45 = &v8;\n
                            a0 = &v5;\n
                            if (!v38)\n
                            {\n
                                v7 = 48;\n
                                a0 = &v5;\n
                                v45 = &v7;\n
                                goto LABEL_40588d;\n
                            }\n
                        }\n
                        do\n
                        {\n
                            v42 = 3435973837 * v38 >> 35;\n
                            *((v45 - 1)) = *((4240380 + v38 + -10 * v42));\n
                            v45 -= 1;\n
                            tmp_70 = v38;\n
                            v38 = v42;\n
                        } while (tmp_70 > 9);\n
                        v44 = &v5;\n
LABEL_40588d:\n
                        cgc_memmove(a0, v45, v45 - a0 + 20);\n
                        v13 = v2;\n
LABEL_4058c5:\n
                        v52 = cgc_strlen(v44);\n
                        v53 = v52;\n
                        v54 = v11;\n
                        if (v54 > v52)\n
                        {\n
                            v55 = v52 - v54;\n
                            do\n
                            {\n
                                if (v49 < 2147483647)\n
                                {\n
                                    *(&v1) = v17;\n
                                    if (v15)\n
                                        cgc_fwrite(&v1, 1, v15);\n
                                    if (v13)\n
                                        *((v13 + v49)) = v1;\n
                                }\n
                                else if (!(v49 == -1))\n
                                {\n
                                    continue;\n
                                }\n
                                tmp_2 = v49;\n
                                v49 += 1;\n
                                tmp_12 = v55 + 1;\n
                                v55 += 1;\n
                            } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                        }\n
                        if (!(v49 < 2147483647))\n
                            goto LABEL_4059df;\n
                        v48 = 2147483647 - v49;\n
                        if (v48 > v52)\n
                            v48 = v52;\n
                        if (v15)\n
                            cgc_fwrite(&v5, v48, v15);\n
                        if (!v13)\n
                            goto LABEL_4059df;\n
                        a0 = v13 + v49;\n
                        v50 = &v5;\n
LABEL_4059d7:\n
                        v51 = v48;\n
LABEL_4059da:\n
                        cgc_memcpy(a0, v50, v51);\n
LABEL_4059df:\n
                        tmp_2 = v49;\n
                        v49 += v53;\n
                        if (__CFADD__(tmp_2, v53))\n
                            goto LABEL_405ad6;\n
LABEL_4059e8:\n
                        v56 = v3;\n
                        v14 = v56 + 1;\n
                        v3 = v14;\n
                        *(&v56) = *(v56);\n
                        if (!*(&v56))\n
                            goto LABEL_405a61;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v13)\n
        *((v13 + v49)) = 0;\n
    return v49;\n
}\n
", "4216168:sub_405568": null, "4216261:sub_4055c5": null, "4216364:sub_40562c": null, "4217059:sub_4058e3": null, "4217143:sub_405937": null, "4217568:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4217586:sub_405af2": null, "4217600:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4217697:sub_405b61": null, "4217712:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4217808:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4217865:sub_405c09": null, "4217872:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4217925:sub_405c45": null, "4217936:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4217989:sub_405c85": null, "4218000:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4218061:sub_405ccd": null, "4218064:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4218098:sub_405cf2": null, "4218112:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    char v6[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v6 = a0;\n
    v4 = &a0[a2];\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v3))\n
        {\n
            v5 = cgc_tolower(v2);\n
            if (v5 != cgc_tolower(*(v3)))\n
                break;\n
            if (v6 >= v4)\n
                break;\n
            v3 += 1;\n
            v2 = *((v6 + 1));\n
            v6 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    v7 = (v6 == v4 ? *(v6) - *(v3) : 0);\n
    return v7;\n
}\n
", "4218223:sub_405d6f": null, "4218224:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_405dd4:\n
        v17 = v3;\n
        goto LABEL_405f06;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_405dd4;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_405f06:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4218666:sub_405f2a": null, "4218672:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218743:sub_405f77": null, "4218752:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r15\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    char *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    char *v8;  // rbx\n
    void* v9;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v5 = cgc_strchr(a1, v2);\n
            if (v5)\n
            {\n
                v7 = &v3[v4];\n
                if (!v3[v4])\n
                    goto LABEL_405fc5;\n
                v8 = v4 + 1;\n
                v9 = v8 + v3;\n
                goto LABEL_405fc7;\n
            }\n
            v4 = v4 + 1;\n
            v2 = v3[v4];\n
        } while (v2);\n
        v6 = v4;\n
    }\n
    v7 = &v3[v6];\n
LABEL_405fc5:\n
    v9 = 0;\n
LABEL_405fc7:\n
    *(a0) = v9;\n
    *(v7) = 0;\n
    return *(a0);\n
}\n
", "4218865:sub_405ff1": null, "4218880:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4218959:sub_40604f": null, "4218960:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    unsigned int v25;  // r14d\n
    unsigned long long *v26;  // r15, Other Possible Types: unsigned long\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    void* v29;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    char v30[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v26 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v28 = 0;\n
                v27 = 1;\n
                v25 = 1;\n
                v29 = 0;\n
                if (!a1)\n
                    goto LABEL_406235;\n
                v30 = v2;\n
                if (!v25)\n
                    v30 = v16;\n
                *(v26) = v30;\n
                goto LABEL_406235;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_406111;\n
        goto LABEL_4060b1;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (a2)\n
        {\n
LABEL_4060b1:\n
            if (!(a2 == 16))\n
                goto LABEL_406166;\n
            *(&v18) = *(v16);\n
            v19 = 16;\n
            if (!(*(v16) == 48))\n
                goto LABEL_406168;\n
            v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
            goto LABEL_406146;\n
        }\n
        else\n
        {\n
LABEL_406111:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_406150:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_406212;\n
LABEL_406166:\n
                *(&v18) = *(v16);\n
LABEL_406168:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_406175:\n
                    v29 = 0;\n
                    v28 = 0;\n
                    v25 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v29 = v22 + v19 * v29;\n
                        if (v29 > 2147483647)\n
                            v28 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v25 = 0;\n
                    } while (v18);\n
                    v26 = v1;\n
                    goto LABEL_40621d;\n
                }\n
LABEL_406212:\n
                v28 = 0;\n
                v25 = 1;\n
                v29 = 0;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_406175;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_406150;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
LABEL_406146:\n
                v19 = 16;\n
                goto LABEL_406166;\n
            }\n
        }\n
    }\n
LABEL_40621d:\n
    v27 = v0;\n
LABEL_406235:\n
    v31 = (!v28 ? -0x80000000 : -(v29));\n
    v32 = (!v28 ? 2147483647 : v29);\n
    if (v27 < 0)\n
        v32 = v31;\n
    return v32;\n
}\n
", "4219305:sub_4061a9": null, "4219494:sub_406266": null, "4219504:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    unsigned int v25;  // r14d\n
    unsigned long long *v26;  // r15, Other Possible Types: unsigned long\n
    unsigned int v27;  // ecx\n
    void* v28;  // rbp, Other Possible Types: unsigned long, unsigned int, unsigned long long\n
    void* v29;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    char v30[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v31;  // eax\n
    unsigned long v32;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v26 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v28 = 0;\n
                v27 = 1;\n
                v25 = 1;\n
                v29 = 0;\n
                if (!a1)\n
                    goto LABEL_406455;\n
                v30 = v2;\n
                if (!v25)\n
                    v30 = v16;\n
                *(v26) = v30;\n
                goto LABEL_406455;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_406331;\n
        goto LABEL_4062d1;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (a2)\n
        {\n
LABEL_4062d1:\n
            if (!(a2 == 16))\n
                goto LABEL_406386;\n
            *(&v18) = *(v16);\n
            v19 = 16;\n
            if (!(*(v16) == 48))\n
                goto LABEL_406388;\n
            v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
            goto LABEL_406366;\n
        }\n
        else\n
        {\n
LABEL_406331:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_406370:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_406432;\n
LABEL_406386:\n
                *(&v18) = *(v16);\n
LABEL_406388:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_406395:\n
                    v29 = 0;\n
                    v28 = 0;\n
                    v25 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v29 = v22 + v19 * v29;\n
                        if (v29 >> 32)\n
                            v28 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v25 = 0;\n
                    } while (v18);\n
                    v26 = v1;\n
                    goto LABEL_40643d;\n
                }\n
LABEL_406432:\n
                v28 = 0;\n
                v25 = 1;\n
                v29 = 0;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_406395;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_406370;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
LABEL_406366:\n
                v19 = 16;\n
                goto LABEL_406386;\n
            }\n
        }\n
    }\n
LABEL_40643d:\n
    v27 = v0;\n
LABEL_406455:\n
    if (v27 < 0)\n
    {\n
        v31 = (v29 == -0x80000000 ? 1 : v28);\n
        if (v29 <= 2147483647)\n
            v31 = v28;\n
        v29 = -(v29);\n
        v28 = v31;\n
    }\n
    v32 = (!v28 ? 4294967295 : v29);\n
    return v32;\n
}\n
", "4219849:sub_4063c9": null, "4220049:sub_406491": null, "4220064:_ZN7CgFsImgC2Ev": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned long long field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
    char padding_419[8];\n
    unsigned int field_421;\n
} struct_0;\n
\n
long long CgFsImg::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = 0;\n
    *(&(&a0->padding_1)[1]) = 0;\n
    *((&a0->field_401 + 1)) = 0;\n
    *((&a0->field_401 + 5)) = 0;\n
    *((&a0->field_415 + 1)) = 0;\n
    *((&(&a0->field_409)[1] + 1)) = 0;\n
    return DirectoryTree::__ctor__(&a0->padding_419[1]);\n
}\n
", "4220137:sub_4064e9": null, "4220144:_ZN7CgFsImgD2Ev": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned long long field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
    unsigned long long field_419;\n
    unsigned int field_421;\n
} struct_0;\n
\n
long long CgFsImg::__base_dtor__(struct_0 *a0)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned long v2;  // rdi\n
    unsigned long long v3;  // rax\n
\n
    v1 = a0;\n
    cgc_memset(&a0->padding_1, 0, 0x200);\n
    cgc_memset(&a0->padding_1[0x200], 0, 0x200);\n
    v2 = *((&a0->field_40d + 1));\n
    if (v2)\n
        operator delete[](v2);\n
    *((&v1->field_40d + 1)) = 0;\n
    *((&v1->field_415 + 1)) = 0;\n
    *((&v1->field_401 + 5)) = 0;\n
    *((&(&v1->field_409)[1] + 1)) = 0;\n
    *(&(&v1->padding_1)[1]) = 0;\n
    *((&v1->field_401 + 1)) = 0;\n
    v3 = DirectoryTree::ClearTree(&(&v1->field_415)[1] + 1, 1);\n
    if (v1->field_0)\n
    {\n
        v1->field_0 = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220290:sub_406582": null, "4220304:_ZN7CgFsImg7UnmountEv": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned long long field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
    unsigned long long field_419;\n
    unsigned int field_421;\n
} struct_0;\n
\n
char CgFsImg::Unmount(struct_0 *a0)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned long v2;  // rdi\n
\n
    v1 = a0;\n
    cgc_memset(&a0->padding_1, 0, 0x200);\n
    cgc_memset(&a0->padding_1[0x200], 0, 0x200);\n
    v2 = *((&a0->field_40d + 1));\n
    if (v2)\n
        operator delete[](v2);\n
    *((&v1->field_40d + 1)) = 0;\n
    *((&v1->field_415 + 1)) = 0;\n
    *((&v1->field_401 + 5)) = 0;\n
    *((&(&v1->field_409)[1] + 1)) = 0;\n
    *(&(&v1->padding_1)[1]) = 0;\n
    *((&v1->field_401 + 1)) = 0;\n
    DirectoryTree::ClearTree(&(&v1->field_415)[1] + 1, 1);\n
    if (v1->field_0)\n
    {\n
        v1->field_0 = 0;\n
        return v1->field_0;\n
    }\n
    return v1->field_0;\n
}\n
", "4220451:sub_406623": null, "4220464:_ZN7CgFsImg9IsMountedEv": "char CgFsImg::IsMounted(char *a0)\n
{\n
    return *(a0);\n
}\n
", "4220467:sub_406633": null, "4220480:_ZN7CgFsImg5MountEP4FILE": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[11];\n
    char field_c;\n
    unsigned short field_d;\n
    unsigned short field_f;\n
    char field_11;\n
    char padding_12[2];\n
    unsigned short field_14;\n
    char padding_16[11];\n
    unsigned int field_21;\n
    unsigned int field_25;\n
    char padding_29[4];\n
    unsigned int field_2d;\n
    char padding_31[976];\n
    unsigned long long field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
    unsigned long long field_419;\n
    unsigned int field_421;\n
    uint128_t field_425;\n
    uint128_t field_435;\n
    unsigned long long field_445;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[11];\n
    char field_b;\n
    char padding_c[12];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_1;\n
\n
long long CgFsImg::Mount(struct_0 *a0, void* a1)\n
{\n
    char v0;  // [bp-0x48]\n
    char v1;  // [bp-0x41]\n
    char v2;  // [bp-0x38]\n
    char v3;  // [bp-0x28]\n
    char v4;  // [bp-0x18]\n
    struct_0 *v6;  // r14\n
    unsigned int v8;  // eax\n
    unsigned long v9;  // rax\n
    unsigned long long v10;  // rax\n
    unsigned long long v11;  // rdx\n
    unsigned long long v12;  // rcx\n
    struct_1 *v14;  // rax\n
    unsigned long v15;  // rax\n
\n
    if (!a1)\n
        return 0;\n
    v6 = a0;\n
    if (!a0->field_0 && cgc_fread(&a0->padding_1, 0x200, a1) == 0x200 && cgc_fread(&v6->padding_31[461], 0x200, a1) == 0x200 && *((&v6->field_d + 1)) == 0x200 && v6->field_c == 1)\n
    {\n
        v8 = *(&v6->padding_12[1]);\n
        if (!v8)\n
            v8 = *(&v6->padding_16[9]);\n
        v9 = v8 * 0x200 - 0x400;\n
        *((&v6->field_415 + 1)) = v9;\n
        if (v9 <= 0x8000000)\n
        {\n
            *((&v6->field_401 + 1)) = *(&v6->padding_29[1]) * 128 & 1073741696;\n
            v10 = operator new[](v9);\n
            *((&v6->field_40d + 1)) = v10;\n
            v11 = *((&v6->field_d + 1));\n
            v12 = v11 * *(&(&v6->field_c)[1]);\n
            *(&v6->padding_31[973]) = v12 + v10 - 0x400;\n
            *((&v6->field_401 + 5)) = *(&v6->field_f + 1) * v11 * *(&v6->padding_29[1]) + v10 + v12 - 0x400;\n
            *((&(&v6->field_409)[1] + 1)) = v11 * v6->field_c;\n
            if (cgc_fread(v10, *((&v6->field_415 + 1)), a1) == *((&v6->field_415 + 1)))\n
            {\n
                v6->field_0 = 1;\n
                strncpy(&v0, \"/       \", 8);\n
                strncpy(&v1, \"    \", 4);\n
                v14 = operator new(32);\n
                cgc_memset(v14, 0, 0xb);\n
                cgc_memcpy(v14, &v0, 0xb);\n
                v14->field_b = 16;\n
                v14->field_18 = *((&v6->field_21 + 1));\n
                v14->field_1c = 0;\n
                DirectoryTree::__base_ctor__(&v2, v14);\n
                *((&v6->field_425 + 5)) = *(&v4);\n
                *((&(&v6->field_421)[1] + 1)) = *(&v3);\n
                *((&(&v6->field_415)[1] + 1)) = *(&v2);\n
                v15 = CgFsImg::ParseDirectoryTree(v6, &(&v6->field_415)[1] + 1, *((&v6->field_21 + 1)));\n
                *(&v15) = 1;\n
                return v15;\n
            }\n
        }\n
    }\n
}\n
", "4220961:sub_406821": null, "4220976:_ZN7CgFsImg18ParseDirectoryTreeEP13DirectoryTreej": "long long CgFsImg::ParseDirectoryTree(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long long v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // r15\n
    void* v5;  // r14\n
    unsigned long long v6;  // rbx\n
    unsigned int v7;  // r12d\n
    unsigned long long *v8;  // r13, Other Possible Types: unsigned long\n
    unsigned long long *v9;  // rax\n
    unsigned long v10;  // rax\n
    unsigned long long v11;  // rcx\n
    unsigned long long v12;  // rbx\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v15;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v16;  // r15d\n
    unsigned long v17;  // r12, Other Possible Types: unsigned long long\n
    void* v18;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v19;  // rax\n
    unsigned long long v20;  // rdi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v0 = a0;\n
    v7 = a2;\n
    if (a2)\n
    {\n
        v8 = CgFsImg::GetFileClusters();\n
        v5 = 0;\n
        do\n
        {\n
            v13 = 0;\n
            while (true)\n
            {\n
                v6 = v13;\n
                v13 += 32;\n
                if (!v8)\n
                {\n
                    v8 = operator new[](32);\n
                    v7 = 0;\n
                }\n
                v9 = (v5 < v7 ? 0 : v5);\n
                v10 = v9 * 16;\n
                v11 = *((v8 + v10 + 8));\n
                if (v13 > v11)\n
                    break;\n
                v12 = v6 + *((v8 + v10));\n
                if (!CgFsFile::SkipEntry(v12) && !CgFsFile::IsDotEntry(v12))\n
                    DirectoryTree::AddEntry(v3, v12);\n
            }\n
        } while (v5 + 1 < v7);\n
    }\n
    v15 = DirectoryTree::subdirectories(v3);\n
    v16 = a2;\n
    if (!a2)\n
        return v15;\n
    v17 = v15;\n
    v18 = 0;\n
    do\n
    {\n
        if (!v17)\n
        {\n
            v17 = operator new[](80);\n
            DirectoryTree::__ctor__(v17);\n
            DirectoryTree::__ctor__(v17 + 40);\n
            v16 = 0;\n
        }\n
        v19 = (v18 < v16 ? 0 : v18);\n
        v20 = v17 + v19 * 40;\n
        v15 = CgFsImg::ParseDirectoryTree(v0, v17 + v19 * 40, *((DirectoryTree::directory_entry() + 24)));\n
        v18 = v18 + 1;\n
    } while (v18 < v16);\n
    return v15;\n
}\n
", "4221021:sub_40685d": null, "4221170:sub_4068f2": null, "4221298:sub_406972": null, "4221312:_ZN7CgFsImg15GetFileClustersEPKc": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long CgFsImg::GetFileClusters(unsigned long long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = DirectoryTree::FindFile(a0 + 1061);\n
    if (v1)\n
        return CgFsImg::GetFileClusters(a0, v1->field_18);\n
    return 0;\n
}\n
", "4221352:sub_4069a8": null, "4221360:_ZN7CgFsImg15GetFileClustersEj": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned long long field_401;\n
    char padding_409[4];\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_0;\n
\n
long long CgFsImg::GetFileClusters(struct_0 *a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int *v3;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // r12d\n
    unsigned long long v6;  // rbp\n
    unsigned long long v7;  // rbp\n
    unsigned long v8;  // r15\n
    struct_0 *v9;  // r13, Other Possible Types: unsigned long long, unsigned long\n
    struct_0 *v10;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v11;  // rdx\n
    struct_0 *v12;  // r13\n
    struct_0 *v13;  // rcx\n
    unsigned long v14;  // rcx\n
\n
    if (!a0->field_0)\n
        return 0;\n
    v3 = a1;\n
    v4 = (a1 + 2);\n
    if (v4 > 268435445)\n
        return 0;\n
    v9 = 0;\n
    v10 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v5 = *((a0 + 1045));\n
        v6 = v5 * v4;\n
        v7 = v6 + *((a0 + 1037));\n
        if (!v8)\n
        {\n
            v8 = operator new[](32);\n
            v9 = 2;\n
            v10 = 0;\n
        }\n
        else if (v10 == v9)\n
        {\n
            v1 = v9 * 2;\n
            a0 = v1 * 16;\n
            v0 = v9;\n
            v11 = v9 * 16;\n
            v12 = operator new[](a0);\n
            cgc_memcpy(v12, v8, v11);\n
            operator delete[](v8);\n
            v10 = v0;\n
            v8 = v12;\n
            v9 = v1;\n
        }\n
        v13 = v10;\n
        v10 = v10 + 1;\n
        v14 = v13 * 16;\n
        *((v8 + v14)) = v7;\n
        *((v8 + v14 + 8)) = v5;\n
        *((v8 + v14 + 12)) = v3;\n
        v3 = *((*((a0 + 1025)) + v3 * 4));\n
        v4 = v3 - 2;\n
    } while (v4 < 268435446);\n
    return v8;\n
}\n
", "4221427:sub_4069f3": null, "4221649:sub_406ad1": null, "4221664:_ZN7CgFsImg9ListFilesEPKcb": "long long CgFsImg::ListFiles(unsigned long a0)\n
{\n
    return DirectoryTree::ListFiles(a0 + 1061);\n
}\n
", "4221676:sub_406aec": null, "4221680:_ZN7CgFsImg8FindFileEPKc": "long long CgFsImg::FindFile(unsigned long a0)\n
{\n
    return DirectoryTree::FindFile(a0 + 1061);\n
}\n
", "4221692:sub_406afc": null, "4221696:_ZN7CgFsImg7AddFileEPKcS1_Pcj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
long long CgFsImg::AddFile(struct_0 *a0, unsigned long long a1, char *a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0[4];  // [bp-0x60]\n
    unsigned long v1;  // [bp-0x58]\n
    char v2;  // [bp-0x50]\n
    char v3;  // [bp-0x45]\n
    char v4;  // [bp-0x44]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rbx\n
    unsigned long v10;  // r15\n
    struct_0 *v11;  // r13\n
    unsigned long long v13;  // r12\n
    struct_2 *v14;  // rax\n
    unsigned long long v16;  // rcx\n
    void* v18;  // r12, Other Possible Types: unsigned long\n
    unsigned long v19;  // rbx, Other Possible Types: unsigned long long\n
    char *v20;  // rdx\n
    char *v21;  // rdi\n
    unsigned int v22;  // r12d\n
    unsigned long long v23;  // rdx\n
    unsigned int v24;  // edi\n
    unsigned int v25[4];  // rax\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rsi\n
    unsigned long v28;  // rdx\n
    char *v29;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v30;  // rax\n
    unsigned long long v31;  // rdi\n
    char *v32;  // rdi\n
    unsigned long v33;  // rbx\n
\n
    if (!a1)\n
        return 0;\n
    v9 = a2;\n
    if (!a2)\n
        return 0;\n
    v10 = a3;\n
    v11 = a0;\n
    if ((a4 - 1048577) < -0x100000)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(a2) > 11)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (CgFsImg::FileExists(a0, a1, a2))\n
            return 0;\n
        v13 = &a0[1].padding_0[1];\n
        v14 = DirectoryTree::FindFile(v13, a1);\n
        if (v14 && CgFsFile::IsDirectory(v14))\n
        {\n
            v16 = *((&a0->field_401 + 1));\n
            if (v16 >= 4)\n
            {\n
                v1 = v13;\n
                v18 = 0;\n
                while (*((*(&(&a0->padding_0)[1]) + (v18 << 2) + 12)))\n
                {\n
                    v18 += 1;\n
                    if (v16 - 3 == v18)\n
                        return 0;\n
                }\n
                if (v18 != -3)\n
                {\n
                    *(&v0[0]) = v18 + 3;\n
                    v5 = v0;\n
                    cgc_memset(&v2, 32, 0xb);\n
                    cgc_memcpy(&v2, v9, cgc_strlen(v9));\n
                    v3 = 0;\n
                    cgc_memset(&v4, 0, 0xc);\n
                    v6 = a4;\n
                    CgFsImg::AddMetadataEntry(a0, &v2, v14->field_18);\n
                    *((*(&(&a0->padding_0)[1]) + v18 * 4 + 12)) = 268435448;\n
                    v19 = *((&(&a0->field_409)[1] + 1));\n
                    v20 = (v19 < a4 ? a4 : v19);\n
                    v21 = v19 * (v18 + 1) + *((&a0->field_401 + 5));\n
                    if (!v10)\n
                        cgc_memset(v21, 0, v20);\n
                    else\n
                        cgc_memcpy(v21, v10, v20);\n
                    if (v19 < a4)\n
                    {\n
                        v22 = v18 - 268435445;\n
                        do\n
                        {\n
                            v23 = *((&v11->field_401 + 1));\n
                            v24 = 0;\n
                            if (v23 >= 4)\n
                            {\n
                                v25 = *(&(&v11->padding_0)[1]);\n
                                v26 = 3;\n
                                do\n
                                {\n
                                    if (!v25[v26])\n
                                    {\n
                                        v24 = 0;\n
                                        if (v22 >= -268435446)\n
                                        {\n
                                            v24 = 0;\n
                                            if (v26)\n
                                            {\n
                                                v27 = v0;\n
                                                do\n
                                                {\n
                                                    v28 = v27;\n
                                                    v27 = v25[v27];\n
                                                } while ((v27 - 2) < 268435446);\n
                                                v25[v28] = v26;\n
                                                v25[v26] = 268435448;\n
                                                v24 = v26;\n
                                                goto LABEL_406d2c;\n
                                            }\n
                                        }\n
                                    }\n
                                    v26 += 1;\n
                                } while (v23 != v26);\n
                                v24 = 0;\n
                            }\n
LABEL_406d2c:\n
                            v29 = a4 - v19;\n
                            v30 = *((&(&v11->field_409)[1] + 1));\n
                            if (v30 < v29)\n
                                v29 = v30;\n
                            v31 = v30 * (v24 - 2);\n
                            v32 = v31 + *((&v11->field_401 + 5));\n
                            if (!v10)\n
                                cgc_memset(v32, 0, v29);\n
                            else\n
                                cgc_memcpy(v32, v19 + v10, v29);\n
                            v19 += v29;\n
                        } while (v19 < a4);\n
                    }\n
                    v33 = v1;\n
                    DirectoryTree::ClearTree(v33, 0);\n
                    v8 = CgFsImg::ParseDirectoryTree(v11, v33, *((DirectoryTree::directory_entry(v33) + 24)));\n
                    *(&v8) = 1;\n
                    return v8;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4222352:_ZN7CgFsImg10FileExistsEPKcS1_": "long long CgFsImg::FileExists(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax\n
    char *v2;  // r12\n
    char *v3;  // r13, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
\n
    if (cgc_strlen(a2) > 11)\n
        return 0;\n
    v2 = operator new[](cgc_strlen(a1) + cgc_strlen(a2) + 2);\n
    cgc_memset(v2, 0, cgc_strlen(a2) + cgc_strlen(a1) + 2);\n
    v3 = cgc_strlen(a1);\n
    cgc_memcpy(v2, a1, cgc_strlen(a1));\n
    if (v2[1 + cgc_strlen(a1)] != 47)\n
    {\n
        v4 = v3;\n
        v3 += 1;\n
        v2[v4] = 47;\n
    }\n
    cgc_memcpy(&v2[v3], a2, cgc_strlen(a2));\n
    v1 = operator delete[](v2);\n
    *(&v1) = DirectoryTree::FindFile(a0 + 1061, v2);\n
    return v1;\n
}\n
", "4222600:sub_406e88": null, "4222608:_ZN7CgFsImg17FindUnusedClusterEv": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
    unsigned int field_409;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long CgFsImg::FindUnusedCluster(struct_1 *a0)\n
{\n
    unsigned long long v1;  // rcx\n
    unsigned long v2;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = *((&a0->field_401 + 1));\n
    if (v1 < 4)\n
        return 0;\n
    v2 = 3;\n
    while (true)\n
    {\n
        if (!*((*(&(&a0->padding_0)[1]) + (v2 << 2))))\n
            return v2;\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4222659:sub_406ec3": null, "4222672:_ZN7CgFsImg16AddMetadataEntryEP7fs_filej": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
long long CgFsImg::AddMetadataEntry(struct_0 *a0, unsigned int a1, unsigned int a2[4])\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    unsigned int v2[4];  // r12, Other Possible Types: unsigned long\n
    void* v4;  // r14\n
    unsigned long long v5;  // rbx\n
    unsigned int v6;  // ebp\n
    unsigned long long *v7;  // r13, Other Possible Types: unsigned long\n
    unsigned long long *v8;  // rax\n
    unsigned long v9;  // rax\n
    char *v10;  // rbx, Other Possible Types: unsigned long\n
    void* v11;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v13;  // r14\n
    unsigned long long v14;  // rcx\n
    unsigned int v15;  // ebx\n
    unsigned long v16;  // rax\n
    unsigned long v17;  // rbp\n
    unsigned int v18;  // edi\n
    unsigned long v19;  // rcx\n
    char *v20;  // rdx\n
    unsigned long long v21;  // rdi\n
    unsigned long long v22;  // rbx\n
\n
    v2 = a2;\n
    v0 = a0;\n
    v6 = a2;\n
    if (a2)\n
    {\n
        v7 = CgFsImg::GetFileClusters(a0, a2);\n
        v4 = 0;\n
        do\n
        {\n
            v11 = 0;\n
            while (true)\n
            {\n
                v5 = v11;\n
                v11 += 32;\n
                if (!v7)\n
                {\n
                    v7 = operator new[](32);\n
                    v6 = 0;\n
                }\n
                v8 = (v4 < v6 ? 0 : v4);\n
                v9 = v8 * 16;\n
                if (v11 > *((v7 + v9 + 8)))\n
                    break;\n
                v10 = v5 + *((v7 + v9));\n
                if (CgFsFile::FreeEntry(v10))\n
                    return cgc_memcpy(v10, a1, 0x20);\n
            }\n
        } while (v4 + 1 < v6);\n
    }\n
    v13 = v0;\n
    v14 = *((&v13->field_401 + 1));\n
    v15 = 0;\n
    if (v14 >= 4)\n
    {\n
        v16 = *(&(&v13->padding_0)[1]);\n
        v17 = 3;\n
        v18 = 1;\n
        do\n
        {\n
            if (!*((v16 + (v17 << 2))) && &a2[16777215 + 2] >= -268435446 && v17)\n
            {\n
                do\n
                {\n
                    v19 = v2;\n
                    v2 = *((v16 + v2 * 4));\n
                } while ((v2 - 2) < 268435446);\n
                *((v16 + v19 * 4)) = v17;\n
                *((v16 + v17 * 4)) = 268435448;\n
                if (v17 >= 2 && *((&v13->field_401 + 1)) > v17)\n
                {\n
                    v20 = *((&(&v13->field_409)[1] + 1));\n
                    v21 = v20 * v18;\n
                    cgc_memset(v21 + *((&v13->field_401 + 5)), 0, v20);\n
                }\n
                v15 = v17;\n
                break;\n
            }\n
            v17 += 1;\n
            v18 += 1;\n
        } while (v14 != v17);\n
    }\n
    v22 = *((&(&v13->field_409)[1] + 1)) * (v15 - 2);\n
    v10 = v22 + *((&v13->field_401 + 5));\n
    return cgc_memcpy(v10, a1, 0x20);\n
}\n
", "4222819:sub_406f63": null, "4223064:sub_407058": null, "4223072:_ZN7CgFsImg10AddClusterEj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_409;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
long long CgFsImg::AddCluster(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rcx\n
    unsigned int v2[4];  // rdi\n
    unsigned long v3;  // rdx\n
\n
    v1 = *((&a0->field_401 + 1));\n
    if (v1 < 4)\n
        return 0;\n
    v2 = *(&(&a0->padding_0)[1]);\n
    v3 = 3;\n
    while (v2[v3])\n
    {\n
        v3 += 1;\n
        if (v1 == v3)\n
            return 0;\n
    }\n
    if ((a1 - 268435448) < -268435446)\n
    {\n
        return 0;\n
    }\n
    else if (!v3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            a1 = v2[a1];\n
        } while ((a1 - 2) < 268435446);\n
        v2[a1] = v3;\n
        v2[v3] = 268435448;\n
        return v3;\n
    }\n
}\n
", "4223181:sub_4070cd": null, "4223184:_ZN7CgFsImg11RebuildTreeEv": "long long CgFsImg::RebuildTree(unsigned int a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    DirectoryTree::ClearTree(a0 + 1061, 0);\n
    return CgFsImg::ParseDirectoryTree(a0, a0 + 1061, *((DirectoryTree::directory_entry(a0 + 1061) + 24)));\n
}\n
", "4223237:sub_407105": null, "4223248:_ZN7CgFsImg12AddDirectoryEPKcS1_": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long CgFsImg::AddDirectory(struct_1 *a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x50]\n
    char v1;  // [bp-0x45]\n
    char v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // r13\n
    struct_1 *v8;  // r15\n
    unsigned long v9;  // r14\n
    struct_2 *v10;  // rax\n
    unsigned long long v12;  // rcx\n
    unsigned int *v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned int v14;  // edi\n
    char *v15;  // rdx\n
    unsigned long long v16;  // rdi\n
\n
    if (!a1)\n
        return 0;\n
    v7 = a2;\n
    if (!a2)\n
        return 0;\n
    v8 = a0;\n
    if (cgc_strlen(a2) <= 11 && !CgFsImg::FileExists(a0, a1, a2))\n
    {\n
        v9 = &a0[1].padding_0[1];\n
        v10 = DirectoryTree::FindFile(v9, a1);\n
        if (v10 && CgFsFile::IsDirectory(v10))\n
        {\n
            v12 = *((&a0->field_401 + 1));\n
            if (v12 >= 4)\n
            {\n
                v13 = 3;\n
                v14 = 1;\n
                while (*((*(&(&v8->padding_0)[1]) + (v13 << 2))))\n
                {\n
                    v13 += 1;\n
                    v14 += 1;\n
                    if (v12 == v13)\n
                        return 0;\n
                }\n
                if (v13 >= 2 && v12 > v13)\n
                {\n
                    v15 = *((&(&v8->field_409)[1] + 1));\n
                    v16 = v15 * v14;\n
                    cgc_memset(v16 + *((&v8->field_401 + 5)), 0, v15);\n
                    goto LABEL_407202;\n
                }\n
                if (!v13)\n
                    goto LABEL_407293;\n
LABEL_407202:\n
                v3 = v13;\n
                cgc_memset(&v0, 32, 0xb);\n
                cgc_memcpy(&v0, v7, cgc_strlen(v7));\n
                v1 = 16;\n
                cgc_memset(&v2, 0, 0xc);\n
                v4 = 0;\n
                CgFsImg::AddMetadataEntry(v8, &v0, v10->field_18);\n
                *((*(&(&v8->padding_0)[1]) + v13 * 4)) = 268435448;\n
                DirectoryTree::ClearTree(v9, 0);\n
                v6 = CgFsImg::ParseDirectoryTree(v8, v9, *((DirectoryTree::directory_entry(v9) + 24)));\n
                *(&v6) = 1;\n
                return v6;\n
            }\n
        }\n
    }\n
LABEL_407293:\n
    return 0;\n
}\n
", "4223652:sub_4072a4": null, "4223664:_ZN7CgFsImg12ClearClusterEj": "typedef struct struct_0 {\n
    char padding_0[1033];\n
    unsigned int field_409;\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_0;\n
\n
long long CgFsImg::ClearCluster(struct_0 *a0, unsigned long a1)\n
{\n
    char *v2;  // rdx\n
    unsigned long long v3;  // rsi\n
    char *v4;  // rdi\n
    unsigned long v5;  // rax\n
\n
    if (a1 < 2)\n
    {\n
        return v5;\n
    }\n
    else if (*(&(&a0->padding_0)[1]) <= a1)\n
    {\n
        return v5;\n
    }\n
    else\n
    {\n
        v2 = *((&a0->field_40d + 5));\n
        v3 = v2 * (a1 - 2);\n
        v4 = v3 + *((&a0->field_409 + 1));\n
        return cgc_memset(v4, 0, v2);\n
    }\n
}\n
", "4223707:sub_4072db": null, "4223712:_ZN7CgFsImg10DeleteFileEPKc": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CgFsImg::DeleteFile(struct_0 *a0)\n
{\n
    unsigned long v1;  // r15\n
    struct_2 *v2;  // rax\n
    unsigned int *v4;  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // rcx\n
    unsigned long v6;  // rdx\n
    unsigned long v7;  // rax\n
\n
    v1 = &a0[1].padding_0[21];\n
    v2 = DirectoryTree::FindFile(v1);\n
    if (!(v2 && CgFsFile::IsFile(v2)))\n
        return 0;\n
    v4 = v2->field_18;\n
    if ((v4 + 67108862) >= -268435446)\n
    {\n
        v5 = *(&(&a0->padding_0)[1]);\n
        do\n
        {\n
            v6 = v4;\n
            v4 = *((v5 + v4 * 4));\n
            *((v5 + v6 * 4)) = 0;\n
        } while ((v4 - 2) < 268435446);\n
    }\n
    CgFsFile::DeleteMetadataEntry(v2);\n
    DirectoryTree::ClearTree(v1, 0);\n
    v7 = CgFsImg::ParseDirectoryTree(a0, v1, *((DirectoryTree::directory_entry(v1) + 24)));\n
    *(&v7) = 1;\n
    return v7;\n
}\n
", "4223867:sub_40737b": null, "4223872:_ZN7CgFsImg16ClearAllClustersEj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CgFsImg::ClearAllClusters(struct_0 *a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // rcx\n
    unsigned long v3;  // rdx\n
\n
    v1 = a1 + 67108862;\n
    if (v1 >= -268435446)\n
    {\n
        v1 = *(&(&a0->padding_0)[1]);\n
        v2 = a1;\n
        do\n
        {\n
            v3 = v2;\n
            v2 = *((v1 + v2 * 4));\n
            *((v1 + v3 * 4)) = 0;\n
        } while ((v2 - 2) < 268435446);\n
    }\n
    *(&v1) = a1 - 2 < 268435446;\n
    return v1;\n
}\n
", "4223940:sub_4073c4": null, "4223952:_ZN7CgFsImg15DeleteDirectoryEPKc": "long long CgFsImg::DeleteDirectory(unsigned long a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // r15\n
\n
    v1 = a0 + 1061;\n
    v2 = DirectoryTree::FindDirectory(v1);\n
    v3 = v2;\n
    if (v2)\n
    {\n
        CgFsImg::DeleteDirectoryHelper(a0, v2, v2 == v1);\n
        DirectoryTree::ClearTree(v1, 0);\n
        v2 = CgFsImg::ParseDirectoryTree(a0, v1, *((DirectoryTree::directory_entry(v1) + 24)));\n
    }\n
    *(&v2) = v3;\n
    return v2;\n
}\n
", "4224046:sub_40742e": null, "4224048:_ZN7CgFsImg21DeleteDirectoryHelperEP13DirectoryTreeb": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_2 *field_401;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
long long CgFsImg::DeleteDirectoryHelper(struct_1 *a0, unsigned long long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rax\n
    unsigned long v6;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rax\n
    void* v8;  // rbx, Other Possible Types: unsigned long long, unsigned long\n
    struct_0 *v16;  // rax\n
    unsigned int *v17;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v18;  // rdx\n
    unsigned long v19;  // rsi\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v2;\n
    DirectoryTree::subdirectories(a1);\n
    if (a2)\n
    {\n
        v8 = 0;\n
        do\n
        {\n
            v5 = DirectoryTree::subdirectories(a1);\n
            if (v5)\n
            {\n
                v6 = v5;\n
            }\n
            else\n
            {\n
                v6 = operator new[](80);\n
                DirectoryTree::__ctor__(v6);\n
                DirectoryTree::__ctor__(v6 + 40);\n
                a2 = 0;\n
            }\n
            v7 = (v8 < 0 ? 0 : v8);\n
            CgFsImg::DeleteDirectoryHelper(a0, v7 * 40 + v6, 0);\n
            v8 = v8 + 1;\n
            DirectoryTree::subdirectories(a1);\n
        } while (v8 < 0);\n
    }\n
    v2 = DirectoryTree::file_list(a1);\n
    if (a2)\n
        return v2;\n
    v16 = DirectoryTree::directory_entry(a1);\n
    v17 = v16->field_18;\n
    if ((v17 + 67108862) < -268435446)\n
        return CgFsFile::DeleteMetadataEntry(v16);\n
    v18 = *(&(&a0->padding_0)[1]);\n
    do\n
    {\n
        v19 = v17;\n
        v17 = *((v18 + v17 * 4));\n
        *((v18 + v19 * 4)) = 0;\n
    } while ((v17 - 2) < 268435446);\n
    return CgFsFile::DeleteMetadataEntry(v16);\n
}\n
", "4224103:sub_407467": null, "4224236:sub_4074ec": null, "4224461:sub_4075cd": null, "4224464:_ZN7CgFsImg11PreviewFileEPKcPPcPj": "typedef struct struct_0 {\n
    char padding_0[1037];\n
    unsigned long long field_40d;\n
    unsigned int field_415;\n
} struct_0;\n
\n
long long CgFsImg::PreviewFile(struct_0 *a0, unsigned long a1, unsigned long long *a2, unsigned int *a3)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v3;  // rax\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v5[8];  // rax\n
    unsigned int v6[8];  // rbx\n
    unsigned int v7;  // r12d\n
    unsigned long v9;  // rax\n
    unsigned long long v10;  // r12\n
    unsigned long v11;  // r12\n
    unsigned int *v12;  // rbp, Other Possible Types: unsigned long\n
    unsigned int v13;  // ebp\n
    char *v14;  // rax\n
\n
    v0 = v3;\n
    *(a3) = 0;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (!a2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v5[0] = DirectoryTree::FindFile(&a0[1].padding_0[9]);\n
        if (!v5)\n
            return 0;\n
        v6 = v5;\n
        v4 = CgFsFile::IsFile(v5);\n
        if (v4)\n
        {\n
            v7 = v6[6];\n
            v13 = v7 - 268435449;\n
            if (v13 >= -268435447)\n
            {\n
                v9 = *((&a0->field_40d + 5));\n
                v10 = v9 * (v7 - 2);\n
                v11 = v10 + *(&(&a0->padding_0)[1]);\n
                if (v9 >= v6[7])\n
                {\n
                    v1 = v13;\n
                    v12 = &v6[7];\n
                    if (CgFsFile::IsDirectory(v6))\n
                        v12 = &a0->field_40d + 5;\n
                    v9 = *(v12);\n
                    v13 = v1;\n
                }\n
                *(a3) = v9;\n
                v14 = operator new[](v9);\n
                *(a2) = v14;\n
                v4 = cgc_memcpy(v14, v11, *(a3));\n
            }\n
            *(&v4) = -268435447 <= v13;\n
            return v4;\n
        }\n
    }\n
}\n
", "4224689:sub_4076b1": null, "4224704:_ZN7CgFsImg12ReadFromFileEPKcjjPPcPj": "typedef struct struct_0 {\n
    char padding_0[1045];\n
    unsigned int field_415;\n
} struct_0;\n
\n
long long CgFsImg::ReadFromFile(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long long *a4, unsigned int *a5)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    int tmp_16;  // tmp #16\n
    unsigned long v1;  // [bp-0x58]\n
    unsigned long long *v2;  // [bp-0x50], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x48]\n
    unsigned long v4;  // [bp-0x38]\n
    unsigned long long *v6;  // rax, Other Possible Types: unsigned long, unsigned int *\n
    unsigned int v7;  // r12d\n
    unsigned int v8;  // r15d\n
    unsigned int v9[8];  // rax\n
    unsigned long long v10;  // rcx\n
    unsigned long v11;  // rdi\n
    struct_0 *v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v13;  // rcx\n
    unsigned int v14;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v15;  // r13, Other Possible Types: unsigned long\n
    unsigned long long *v16;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v18;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long long *v19;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // rdx\n
    unsigned long long v22;  // rax\n
    void* v23;  // rax, Other Possible Types: unsigned long\n
    char *v24;  // rbp\n
    unsigned long long *v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long v26;  // r14\n
    unsigned int v27;  // r12d\n
\n
    *(a5) = 0;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (!a4)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v7 = a2;\n
        v8 = a3;\n
        v3 = a0;\n
        v9[0] = DirectoryTree::FindFile(&a0[1].padding_0[9]);\n
        if (!(v9 && CgFsFile::IsFile(v9)))\n
            return 0;\n
        v10 = v9[7];\n
        if (v10 >= a2)\n
        {\n
            v11 = (!v8 ? *(&v8) : v10);\n
            if (v10 < (v11 + a2))\n
                v11 = v10 - a2;\n
            v1 = v11;\n
            v4 = operator new[](v11);\n
            *(a4) = v4;\n
            v12 = v3;\n
            v6 = CgFsImg::GetFileClusters(v12, v9[6]);\n
            v13 = v6;\n
            v14 = a2;\n
            *(&v6) = 1;\n
            if (!a2)\n
                return v6;\n
            v2 = v13;\n
            v15 = *(a5);\n
            v16 = 0;\n
            v17 = v1;\n
            while (true)\n
            {\n
                v18 = v17 - v15;\n
                if (v17 <= v15)\n
                    break;\n
                v19 = v16;\n
                v20 = *((v12 + 1045));\n
                v6 = v16 * v20;\n
                v16 += 1;\n
                if (v7 >= v6)\n
                {\n
                    v6 = v16 * v20;\n
                    if (v7 < v6)\n
                    {\n
                        v0 = v16;\n
                        v21 = (0 CONCAT v7) /m v20 >> 32;\n
                        if (v20 < v18)\n
                            v18 = v20;\n
                        v22 = v21 + v18;\n
                        tmp_16 = v22;\n
                        v23 = v22 - v20;\n
                        if (tmp_16 < v20)\n
                            v23 = 0;\n
                        v24 = v18 - v23;\n
                        v25 = v2;\n
                        if (!v25)\n
                        {\n
                            v25 = operator new[](32);\n
                            v14 = 0;\n
                        }\n
                        if (v14 <= v19)\n
                            v19 = 0;\n
                        v26 = v19 * 16;\n
                        v2 = v25;\n
                        cgc_memcpy(v15 + v4, v21 + *((v25 + v26)), v24);\n
                        v27 = v7 - v21;\n
                        v12 = v3;\n
                        v7 = v27 + *(&(&v12->padding_0)[1]);\n
                        v6 = a5;\n
                        v15 = v24 + *(a5);\n
                        *(a5) = v15;\n
                        v17 = v1;\n
                        v16 = v0;\n
                    }\n
                }\n
                if (v16 >= v14)\n
                    break;\n
            }\n
            *(&v6) = 1;\n
            return v6;\n
        }\n
    }\n
}\n
", "4224902:sub_407786": null, "4225127:sub_407867": null, "4225136:_ZN7CgFsImg11WriteToFileEPKcjjPcPj": "typedef struct struct_0 {\n
    char padding_0[1045];\n
    unsigned int field_415;\n
} struct_0;\n
\n
long long CgFsImg::WriteToFile(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned int *a5)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    int tmp_16;  // tmp #16\n
    struct_0 *v1;  // [bp-0x50]\n
    unsigned long long *v2;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v5;  // r12d\n
    unsigned int v6[8];  // rax\n
    unsigned long long v8;  // rax\n
    unsigned long v9;  // rdx, Other Possible Types: unsigned int\n
    unsigned long long *v10;  // rcx\n
    unsigned long v11;  // r13, Other Possible Types: unsigned long long\n
    unsigned long long *v12;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v13;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v15;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long *v16;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    unsigned long long v19;  // rax\n
    void* v20;  // rax, Other Possible Types: unsigned long\n
    char *v21;  // rbx\n
    unsigned long long *v22;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v23;  // r15\n
    unsigned int v24;  // r12d\n
\n
    *(a5) = 0;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (!a3)\n
    {\n
        return 0;\n
    }\n
    else if (!a4)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v5 = a2;\n
        v1 = a0;\n
        v6[0] = DirectoryTree::FindFile(&a0[1].padding_0[9]);\n
        if (!(v6 && CgFsFile::IsFile(v6)))\n
            return 0;\n
        v8 = v6[7];\n
        v9 = v8 - a2;\n
        if (v8 >= v5)\n
        {\n
            if (v5 + a3 <= v8)\n
                v9 = a3;\n
            v0 = v9;\n
            v4 = CgFsImg::GetFileClusters(v1, v6[6]);\n
            v10 = v4;\n
            v9 = v9;\n
            *(&v4) = 1;\n
            if (!v9)\n
                return v4;\n
            v2 = v10;\n
            v11 = *(a5);\n
            v12 = 0;\n
            v13 = v1;\n
            v14 = v0;\n
            while (true)\n
            {\n
                v15 = v14 - v11;\n
                if (v14 <= v11)\n
                    break;\n
                v16 = v12;\n
                v17 = *((v13 + 1045));\n
                v4 = v12 * v17;\n
                v12 += 1;\n
                if (v5 >= v4)\n
                {\n
                    v4 = v12 * v17;\n
                    if (v5 < v4)\n
                    {\n
                        v18 = (0 CONCAT v5) /m v17 >> 32;\n
                        if (v17 < v15)\n
                            v15 = v17;\n
                        v19 = v18 + v15;\n
                        tmp_16 = v19;\n
                        v20 = v19 - v17;\n
                        if (tmp_16 < v17)\n
                            v20 = 0;\n
                        v21 = v15 - v20;\n
                        v22 = v2;\n
                        if (!v22)\n
                        {\n
                            v22 = operator new[](32);\n
                            v11 = *(a5);\n
                            v9 = 0;\n
                        }\n
                        if (v9 <= v16)\n
                            v16 = 0;\n
                        v23 = v16 * 16;\n
                        v2 = v22;\n
                        v4 = cgc_memcpy(v18 + *((v22 + v23)), v11 + a4, v21);\n
                        v24 = v5 - v18;\n
                        v13 = v1;\n
                        v5 = v24 + *(&(&v13->padding_0)[1]);\n
                        v11 = v21 + *(a5);\n
                        *(a5) = v11;\n
                        v14 = v0;\n
                    }\n
                }\n
                if (v12 >= v9)\n
                    break;\n
            }\n
            *(&v4) = 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4225317:sub_407925": null, "4225545:sub_407a09": null, "4225552:_ZN7CgFsImg14UpdateFileSizeEPKcj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_409;\n
    char padding_40d[8];\n
    unsigned int field_415;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
long long CgFsImg::UpdateFileSize(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
    unsigned int v4;  // r12d\n
    struct_0 *v5;  // r15\n
    unsigned int v6[8];  // rax\n
    unsigned int v7[8];  // r14\n
    unsigned long long v8;  // rcx\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // r8d\n
    unsigned int v11;  // r9d\n
    unsigned int v12[4];  // rsi\n
    unsigned long long v18;  // r10d\n
\n
    v0 = v2;\n
    if (!a1)\n
        return 0;\n
    v4 = a2;\n
    if (!a2)\n
        return 0;\n
    v5 = a0;\n
    v6[0] = DirectoryTree::FindFile(&a0[1].padding_0[5]);\n
    if (!v6)\n
    {\n
LABEL_407b15:\n
        return 0;\n
    }\n
    v7 = v6;\n
    if (!CgFsFile::IsFile(v6))\n
        goto LABEL_407b15;\n
    v8 = v6[7];\n
    v9 = *(&a0->padding_40d[1]);\n
    v18 = (0 CONCAT v8 - 1) /m v9 + 1;\n
    v3 = (0 CONCAT a2 - 1) /m v9;\n
    v10 = v3;\n
    v11 = v3 + 1;\n
    *(&v3) = 1;\n
    if (v8 == a2)\n
        return v3;\n
    *(&v3) = 1;\n
    if ([D] amd64g_calculate_condition(0x2<64>, 0x7<64>, rcx<8>, rdx<8>, cc_ndep<8>) && v18 <= v10)\n
        v12 = *(&(&a0->padding_0)[1]);\n
    if (v18 <= v11)\n
        goto LABEL_0x407b8f;\n
    else\n
        goto LABEL_0x407b28;\n
}\n
", "4225941:sub_407b95": null, "4225952:_ZN7CgFsImg10PopClusterEjPj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CgFsImg::PopCluster(struct_0 *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v1;  // r8d\n
    unsigned int *v2;  // r9\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // rax\n
\n
    v1 = a1 - 268435448;\n
    if (v1 >= -268435446)\n
    {\n
        v2 = *(&(&a0->padding_0)[1]);\n
        v3 = a1;\n
        do\n
        {\n
            v4 = v3;\n
            v5 = v3;\n
            v3 = v2[v3];\n
        } while ((v3 - 2) < 268435446);\n
        v2[v4] = 268435448;\n
        v2[v5] = 0;\n
        *(a2) = v4;\n
    }\n
    *(&v5) = -268435446 <= v1;\n
    return v5;\n
}\n
", "4226042:sub_407bfa": null, "4226048:_ZN7CgFsImg13DebugMetadataEv": "extern void* cgc_stdout;\n
extern unsigned int g_40b418;\n
extern unsigned int g_40b435;\n
extern unsigned int g_40b448;\n
extern unsigned int g_40b46c;\n
extern unsigned int g_40b473;\n
extern unsigned int g_40b49a;\n
extern unsigned int g_40b90d;\n
extern unsigned int g_40b90e;\n
\n
long long CgFsImg::DebugMetadata(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    void* v3;  // rbx, Other Possible Types: unsigned long\n
    void* v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!*(a0))\n
        return v2;\n
    debug_bhdr(a0 + 1);\n
    cgc_printf(&g_40b90d);\n
    debug_fs_info(a0 + 513);\n
    cgc_printf(&g_40b90d);\n
    cgc_printf(&g_40b418);\n
    cgc_printf(&g_40b435);\n
    cgc_printf(&g_40b448);\n
    v3 = 0;\n
    do\n
    {\n
        cgc_printf(&g_40b46c);\n
        v3 += 1;\n
    } while (v3 != 128);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(&g_40b473);\n
    v4 = 0;\n
    do\n
    {\n
        cgc_printf(&g_40b46c);\n
        v4 += 1;\n
    } while (v4 != 64);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(&g_40b49a);\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4226363:sub_407d3b": null, "4226368:_ZN7CgFsImg18ParseDirectoryTreeEP13DirectoryTree": "long long CgFsImg::ParseDirectoryTree(unsigned int a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return CgFsImg::ParseDirectoryTree(a0, a1, *((DirectoryTree::directory_entry(a1) + 24)));\n
}\n
", "4226407:sub_407d67": null, "4226416:_Z10debug_bhdrRK4bhdr": "extern void* cgc_stdout;\n
extern unsigned int g_40b4de;\n
extern unsigned int g_40b4f4;\n
extern unsigned int g_40b50d;\n
extern unsigned int g_40b527;\n
extern unsigned int g_40b53c;\n
extern unsigned int g_40b556;\n
extern unsigned int g_40b572;\n
extern unsigned int g_40b582;\n
extern unsigned int g_40b58e;\n
extern unsigned int g_40b5a5;\n
extern unsigned int g_40b5c0;\n
extern unsigned int g_40b5f5;\n
extern unsigned int g_40b611;\n
extern unsigned int g_40b628;\n
extern unsigned int g_40b635;\n
extern unsigned int g_40b64b;\n
extern unsigned int g_40b663;\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b6f7;\n
extern unsigned int g_40b71f;\n
extern unsigned int g_40b90e;\n
\n
long long debug_bhdr(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_printf(\"****Bios Header Information****\\n
\");\n
    cgc_printf(&g_40b4de);\n
    cgc_printf(&g_40b4f4);\n
    cgc_printf(&g_40b50d);\n
    cgc_printf(&g_40b527);\n
    cgc_printf(&g_40b53c);\n
    cgc_printf(&g_40b556);\n
    cgc_printf(&g_40b572);\n
    cgc_printf(&g_40b582);\n
    cgc_printf(&g_40b58e);\n
    cgc_printf(&g_40b5a5);\n
    cgc_printf(&g_40b5c0);\n
    cgc_printf(\"\\n
**Extended CgFs Info**\\n
\");\n
    cgc_printf(&g_40b5f5);\n
    cgc_printf(&g_40b611);\n
    cgc_printf(&g_40b628);\n
    cgc_printf(&g_40b635);\n
    cgc_printf(&g_40b64b);\n
    cgc_printf(&g_40b663);\n
    cgc_printf(\"--12 Bytes Reserved--\\n
\");\n
    cgc_printf(\"--16 Bytes Reserved--\\n
\");\n
    cgc_printf(\"--FS TYPE--\\n
\");\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(\"\\n
**Boot code and end sequence**\\n
\");\n
    cgc_printf(\"--Boot Code (419 bytes)--\\n
\");\n
    cgc_printf(&g_40b6f7);\n
    cgc_printf(&g_40b71f);\n
    cgc_printf(\"****End Bios Header****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4227039:sub_407fdf": null, "4227040:_Z13debug_fs_infoRK14fs_info_sector": "extern void* cgc_stdout;\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b7af;\n
extern unsigned int g_40b7c6;\n
extern unsigned int g_40b7ea;\n
extern unsigned int g_40b90e;\n
\n
long long debug_fs_info(unsigned long a0)\n
{\n
    cgc_printf(\"****FS Info Sector****\\n
\");\n
    cgc_printf(\"--FS Signature 1--\\n
\");\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(\"--Reserved Space (480 Bytes)--\\n
\");\n
    cgc_printf(\"--FS Signature 2--\\n
\");\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(&g_40b7af);\n
    cgc_printf(&g_40b7c6);\n
    cgc_printf(\"--12 Bytes Reserved--\\n
\");\n
    cgc_printf(&g_40b7ea);\n
    cgc_printf(\"****End FS Info****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4227392:_Z19debug_file_metadataPK7fs_file": "extern void* cgc_stdout;\n
extern unsigned int g_40b46c;\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b86a;\n
extern unsigned int g_40b886;\n
extern unsigned int g_40b90e;\n
\n
long long debug_file_metadata(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_printf(\"****File Metadata****\\n
\");\n
    cgc_printf(\"--File Name--\\n
\");\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(\"--Attributes--\\n
\");\n
    cgc_printf(&g_40b46c);\n
    cgc_printf(&g_40b90e);\n
    cgc_printf(&g_40b86a);\n
    cgc_printf(&g_40b886);\n
    cgc_printf(\"****End File Metadata****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4227716:sub_408284": null, "4227728:_Z10debug_file5ArrayI12cluster_dataE": "extern void* cgc_stdout;\n
extern unsigned int g_40b46c;\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b90e;\n
\n
long long debug_file(struct struct_0 **a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x44]\n
    struct struct_0 **v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x38]\n
    void* v5;  // rbx, Other Possible Types: unsigned long\n
    struct struct_0 **v6;  // r14, Other Possible Types: unsigned long\n
    void* v7;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    struct struct_0 **v8;  // rax\n
    struct struct_0 **v9;  // rax\n
    unsigned long v10;  // rcx\n
    char *v11;  // r13\n
    unsigned int *v12;  // rbx\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v14;  // r14\n
    unsigned long long v15;  // rsi\n
    unsigned long v16;  // rdi\n
    unsigned long long v17;  // r13\n
\n
    v5 = a1;\n
    v6 = a0;\n
    cgc_printf(\"****File Hex View****\\n
\");\n
    if (!a1)\n
    {\n
        cgc_printf(\"****End File Hex View****\\n
\");\n
        return cgc_fflush(cgc_stdout);\n
    }\n
    v7 = 0;\n
    do\n
    {\n
        if (!v6)\n
        {\n
            v6 = operator new[](32);\n
            v5 = 0;\n
        }\n
        v3 = v5;\n
        v1 = v7;\n
        v8 = (v7 < v5 ? 0 : v7);\n
        v9 = v8 * 16;\n
        v2 = v6;\n
        if (*((8 + v6 + v9)))\n
        {\n
            v10 = v2;\n
            v11 = *((v10 + v9));\n
            v12 = 8 + v10 + v9;\n
            v0 = v11;\n
            v13 = 0;\n
            do\n
            {\n
                if (v13 < *(v12))\n
                {\n
                    cgc_printf(&g_40b46c);\n
                    if ((v13 | 1) < *(v12))\n
                    {\n
                        cgc_printf(&g_40b46c);\n
                        if ((v13 | 2) < *(v12))\n
                        {\n
                            cgc_printf(&g_40b46c);\n
                            if ((v13 | 3) < *(v12))\n
                            {\n
                                cgc_printf(&g_40b46c);\n
                                if ((v13 | 4) < *(v12))\n
                                {\n
                                    cgc_printf(&g_40b46c);\n
                                    if ((v13 | 5) < *(v12))\n
                                    {\n
                                        cgc_printf(&g_40b46c);\n
                                        if ((v13 | 6) < *(v12))\n
                                        {\n
                                            cgc_printf(&g_40b46c);\n
                                            if ((v13 | 7) < *(v12))\n
                                            {\n
                                                cgc_printf(&g_40b46c);\n
                                                if ((v13 | 8) < *(v12))\n
                                                {\n
                                                    cgc_printf(&g_40b46c);\n
                                                    if ((v13 | 9) < *(v12))\n
                                                    {\n
                                                        cgc_printf(&g_40b46c);\n
                                                        if ((v13 | 10) < *(v12))\n
                                                        {\n
                                                            cgc_printf(&g_40b46c);\n
                                                            if ((v13 | 11) < *(v12))\n
                                                            {\n
                                                                cgc_printf(&g_40b46c);\n
                                                                if ((v13 | 12) < *(v12))\n
                                                                {\n
                                                                    cgc_printf(&g_40b46c);\n
                                                                    if ((v13 | 13) < *(v12))\n
                                                                    {\n
                                                                        cgc_printf(&g_40b46c);\n
                                                                        if ((v13 | 14) < *(v12))\n
                                                                        {\n
                                                                            cgc_printf(&g_40b46c);\n
                                                                            if ((v13 | 15) < *(v12))\n
                                                                                cgc_printf(&g_40b46c);\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
                cgc_printf(\"   |   \");\n
                v14 = 0;\n
                while (v14 + v13 < *(v12))\n
                {\n
                    v15 = v11[v14];\n
                    if (v15 == 9)\n
                    {\n
                        v16 = \"\\\\t\";\n
                        goto LABEL_408613;\n
                    }\n
                    else if (v15 == 13)\n
                    {\n
                        v16 = \"\\\\r\";\n
LABEL_408613:\n
                        cgc_printf(v16);\n
                        goto LABEL_40861a;\n
                    }\n
                    else if (v15 == 10)\n
                    {\n
                        v16 = \"\\\\n
\";\n
                        goto LABEL_408613;\n
                    }\n
                    else\n
                    {\n
                        cgc_printf(&g_40b6b8);\n
LABEL_40861a:\n
                        v14 += 1;\n
                        if (v14 == 16)\n
                            break;\n
                    }\n
                }\n
                cgc_printf(&g_40b90e);\n
                v13 += 16;\n
                v17 = v11 + 16;\n
            } while (v13 < *(v12));\n
        }\n
        cgc_printf(&g_40b90e);\n
        v7 = v1 + 1;\n
        v6 = v2;\n
    } while (v7 < v3);\n
}\n
", "4227788:sub_4082cc": null, "4227913:sub_408349": null, "4228611:sub_408603": null, "4228698:sub_40865a": null, "4228713:sub_408669": null, "4228772:sub_4086a4": null, "4228784:_ZN13DirectoryTreeC1Ev": "typedef struct struct_0 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long DirectoryTree::__ctor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_0 = 0;\n
    return v1;\n
}\n
", "4228803:sub_4086c3": null, "4228816:_ZN13DirectoryTreeC2EP7fs_file": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    uint128_t field_8;\n
    uint128_t field_18;\n
} struct_0;\n
\n
long long DirectoryTree::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    *(&(&a0->field_0)[1]) = 0;\n
    *((&a0->field_8 + 8)) = 0;\n
    a0->field_0 = a1;\n
    return v1;\n
}\n
", "4228831:sub_4086df": null, "4228832:_ZN13DirectoryTree8AddEntryEP7fs_file": "char DirectoryTree::AddEntry(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    int v2;  // [bp-0x30]\n
    int v3;  // [bp-0x20]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = a1;\n
    if (!a1)\n
    {\n
        return v5;\n
    }\n
    else if (CgFsFile::IsDirectory(a1))\n
    {\n
        *(&v2) = 0;\n
        *(&v3) = 0;\n
        v1 = a1;\n
        v5 = Array::Append(a0 + 8, &v1);\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = Array::Append(a0 + 24, &v0);\n
        return v5;\n
    }\n
}\n
", "4228929:sub_408741": null, "4228944:_ZN13DirectoryTree8FindFileEPKc": "long long DirectoryTree::FindFile(unsigned long long *a0, char *a1)\n
{\n
    char v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
    unsigned long v3;  // rax\n
    unsigned long long *v4;  // rax\n
\n
    if (a1)\n
    {\n
        if (!cgc_strcmp(\"/\", a1))\n
        {\n
            return *(a0);\n
        }\n
        else if (DirectoryTree::FindFileHelper(a0, a0, a1, &v1, &v0))\n
        {\n
            v4 = *(&v1);\n
            if (v4)\n
            {\n
                v3 = *(v4);\n
                return v3;\n
            }\n
            v3 = *(&v0);\n
            if (v3)\n
                return v3;\n
        }\n
    }\n
    return 0;\n
}\n
", "4229046:sub_4087b6": null, "4229056:_ZN13DirectoryTree14FindFileHelperEPS_PKcPS0_PP7fs_file": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_2 *field_18;\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    uint128_t field_28;\n
    uint128_t field_38;\n
    unsigned long long field_48;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long DirectoryTree::FindFileHelper(unsigned long a0, struct_1 *a1, char *a2, unsigned long long *a3, unsigned long long *a4)\n
{\n
    unsigned long long *v0;  // [bp-0x48]\n
    int tmp_13;  // tmp #13\n
    unsigned long long *v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long long *v4;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    struct_1 *v5;  // rbx\n
    char *v6;  // r15\n
    unsigned long v7;  // r13\n
    char v8;  // r12b\n
    unsigned long v9;  // rbp\n
    void* v10;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    struct_0 *v11;  // rax, Other Possible Types: unsigned long\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // rcx\n
    unsigned long long v15;  // rdi\n
    char *v16;  // rsi\n
    unsigned long long v17;  // rdx\n
    unsigned long v19;  // r12\n
    struct_0 *v20;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v22;  // rbx\n
    struct_0 *v23;  // rax, Other Possible Types: unsigned long\n
    unsigned int v24;  // ecx\n
    unsigned long long *v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long v26;  // rcx\n
    unsigned long long v27;  // rdi\n
    char *v28;  // rsi\n
    unsigned long v29;  // rdx\n
    unsigned int v30;  // ecx\n
    unsigned long v31;  // rcx\n
    unsigned long long *v32;  // rax, Other Possible Types: unsigned long\n
    unsigned long v33;  // rcx\n
\n
    v4 = a3;\n
    v5 = a1;\n
    v1 = a4;\n
    v0 = a3;\n
    while (true)\n
    {\n
LABEL_4087dd:\n
        *(v4) = 0;\n
        *(a4) = 0;\n
        v6 = (*(a2) == 47) + a2;\n
        v7 = 0;\n
        while (true)\n
        {\n
            v8 = v6[v7];\n
            if (!v8)\n
                break;\n
            if (v8 == 47)\n
                break;\n
            v7 += 1;\n
        }\n
        if (v7 << 48 > 0xb000000000000)\n
            break;\n
        v12 = v5->field_10;\n
        if (!v12)\n
        {\n
LABEL_40896e:\n
            if (!v8)\n
            {\n
                v24 = v5->field_20;\n
                v4 = 0;\n
                if (!v24)\n
                    return 0;\n
                do\n
                {\n
                    v25 = v5->field_18;\n
                    if (!v25)\n
                    {\n
                        *(&v5->field_20) = 0x200000000;\n
                        v25 = operator new[](16);\n
                        v5->field_18 = v25;\n
                        v24 = v5->field_20;\n
                    }\n
                    v26 = (v4 < v24 ? 0 : v4);\n
                    v27 = *((v25 + v26 * 8));\n
                    v28 = v6;\n
                    v29 = v7;\n
                    if (CgFsFile::NameEquals())\n
                    {\n
                        v32 = v5->field_18;\n
                        if (!v32)\n
                        {\n
                            *(&v5->field_20) = 0x200000000;\n
                            v32 = operator new[](16);\n
                            v5->field_18 = v32;\n
                        }\n
                        v33 = (v4 < v5->field_20 ? 0 : v4);\n
                        *(v1) = *((v32 + v33 * 8));\n
                        *(&v4) = 1;\n
                        return v4;\n
                    }\n
                    v4 = v4 + 1;\n
                    v30 = v5->field_20;\n
                } while (v4 < v30);\n
            }\n
        }\n
        else\n
        {\n
            v2 = v7;\n
            v9 = v7;\n
            v10 = 0;\n
            do\n
            {\n
                v11 = v5->field_8;\n
                if (!v11)\n
                {\n
                    *(&v5->field_10) = 0x200000000;\n
                    v11 = operator new[](80);\n
                    *((v11 + 16)) = 0;\n
                    *((v11 + 32)) = 0;\n
                    *(v11) = 0;\n
                    *((v11 + 56)) = 0;\n
                    *((v11 + 72)) = 0;\n
                    *((v11 + 40)) = 0;\n
                    v5->field_8 = v11;\n
                    v12 = v5->field_10;\n
                }\n
                v13 = (v10 < v12 ? 0 : v10);\n
                v15 = *((v11 + v13 * 5 * 8));\n
                v16 = v6;\n
                v17 = v9;\n
                if (CgFsFile::NameEquals())\n
                {\n
                    v19 = v2;\n
                    if (v6[v19] != 47)\n
                    {\n
                        v4 = v0;\n
                        if (!v6[v19])\n
                            goto LABEL_408a32;\n
                    }\n
                    else\n
                    {\n
                        tmp_13 = v6[1 + v9];\n
                        v4 = v0;\n
                        if (!tmp_13)\n
                        {\n
LABEL_408a32:\n
                            v23 = v5->field_8;\n
                            if (!v23)\n
                            {\n
                                *(&v5->field_10) = 0x200000000;\n
                                v23 = operator new[](80);\n
                                *((v23 + 16)) = 0;\n
                                *((v23 + 32)) = 0;\n
                                *(v23) = 0;\n
                                *((v23 + 56)) = 0;\n
                                *((v23 + 72)) = 0;\n
                                *((v23 + 40)) = 0;\n
                                v5->field_8 = v23;\n
                            }\n
                            v31 = (v10 < v5->field_10 ? 0 : v10);\n
                            *(v4) = v23 + v31 * 40;\n
                            *(&v4) = 1;\n
                            return v4;\n
                        }\n
                    }\n
                    v20 = v5->field_8;\n
                    if (!v20)\n
                    {\n
                        *(&v5->field_10) = 0x200000000;\n
                        v20 = operator new[](80);\n
                        *((v20 + 16)) = 0;\n
                        *((v20 + 32)) = 0;\n
                        *(v20) = 0;\n
                        *((v20 + 56)) = 0;\n
                        *((v20 + 72)) = 0;\n
                        *((v20 + 40)) = 0;\n
                        v5->field_8 = v20;\n
                    }\n
                    if (v5->field_10 <= v10)\n
                        v10 = 0;\n
                    v22 = v20 + v10 * 40;\n
                    a2 = &v6[v19];\n
                    a4 = v1;\n
                    goto LABEL_4087dd;\n
                }\n
                v10 = v10 + 1;\n
            } while (v10 < v5->field_10);\n
            goto LABEL_40896e;\n
        }\n
    }\n
    return 0;\n
}\n
", "4229142:sub_408816": null, "4229325:sub_4088cd": null, "4229354:sub_4088ea": null, "4229783:sub_408a97": null, "4229792:_ZN13DirectoryTree15directory_entryEv": "long long DirectoryTree::directory_entry(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4229796:sub_408aa4": null, "4229808:_ZN13DirectoryTree13FindDirectoryEPKc": "long long DirectoryTree::FindDirectory(unsigned long a0, char *a1)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
\n
    if (a1)\n
    {\n
        if (!cgc_strcmp(\"/\", a1))\n
        {\n
            return a0;\n
        }\n
        else if (DirectoryTree::FindFileHelper(a0, a0, a1, &v0, &v1))\n
        {\n
            return v0;\n
        }\n
    }\n
    return 0;\n
}\n
", "4229891:sub_408b03": null, "4229904:_ZN13DirectoryTree9ListFilesEPKcb": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long DirectoryTree::ListFiles(unsigned long long a0, struct_0 *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v2;  // [bp-0x30]\n
    unsigned long long v4;  // r14\n
    unsigned long v5;  // rbx\n
    unsigned long long v6;  // r15\n
    unsigned long long v7;  // r12\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v9;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v10;  // rsi, Other Possible Types: unsigned long long\n
    void* v11;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v12;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v13;  // rax, Other Possible Types: unsigned long long\n
\n
    v4 = a2;\n
    v5 = a0;\n
    if (a1)\n
    {\n
        v12 = a1;\n
        if (cgc_strcmp(\"/\", a1))\n
        {\n
            v13 = DirectoryTree::FindFileHelper(v5, v5, a1, &v1, &v2);\n
            if (!v13)\n
                return v13;\n
            v6 = *(&v1);\n
            v7 = v2;\n
            v8 = cgc_strlen(a1);\n
            v0 = 1;\n
            v9 = v4;\n
            v10 = v6;\n
            v11 = v7;\n
            goto LABEL_408ba3;\n
            goto LABEL_408ba3;\n
        }\n
    }\n
    v1 = 0;\n
    v12 = &v1;\n
    v8 = cgc_strlen(&v1);\n
    v0 = 0;\n
    v9 = v4;\n
    v10 = a0;\n
    v11 = 0;\n
LABEL_408ba3:\n
    v13 = DirectoryTree::ListFileHelper(a0, v10, v11, v9, v12, v8);\n
    return v13;\n
}\n
", "4230075:sub_408bbb": null, "4230080:_ZN13DirectoryTree14ListFileHelperEPS_PK7fs_filebPKcib": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_3 *field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    struct struct_1 *field_a;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    uint128_t field_28;\n
    uint128_t field_38;\n
    unsigned long long field_48;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
} struct_3;\n
\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b90e;\n
\n
long long DirectoryTree::ListFileHelper(unsigned long a0, struct_2 *a1, unsigned long long a2, unsigned long a3, unsigned int a4, char *a5, char v4)\n
{\n
    char *v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned long long v3;  // [bp-0x38]\n
    struct_2 *v5;  // r12\n
    char v6;  // r15b\n
    unsigned long v7;  // rax\n
    struct_1 *v8;  // rax\n
    char *v9;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v10;  // rbx, Other Possible Types: unsigned long long\n
    void* v11;  // rbp, Other Possible Types: unsigned long\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // r13d\n
    struct_0 *v14;  // rax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    void* v17;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long *v18;  // rax, Other Possible Types: unsigned long\n
    unsigned long v19;  // rcx\n
    unsigned long long v20;  // rdi\n
    unsigned long long v21;  // rsi\n
    unsigned int v22;  // ecx\n
    struct_0 *v23;  // rax, Other Possible Types: unsigned long\n
    unsigned int v24;  // ecx\n
    unsigned long v25;  // rcx\n
    void* v26;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
\n
    if (a1)\n
    {\n
        v5 = a1;\n
        v3 = a0;\n
        v1 = a3;\n
        v6 = v4;\n
        v10 = a5;\n
        cgc_memcpy(v0, a4, a5);\n
        v8 = a1->field_0;\n
        v0 = operator new[](a5 + 12);\n
        v9 = a5 + v0;\n
        if (v8->field_0 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_0;\n
            v9 += 1;\n
            v10 = a5 + 1;\n
        }\n
        if (v8->field_1 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_1;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_2 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_2;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_3 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_3;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_4 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_4;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_5 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_5;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_6 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_6;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_7 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_7;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_8 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_8;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v8->field_9 != 32 && !v6)\n
        {\n
            *(v9) = v8->field_9;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        *(&v8) = (&v8->field_9)[1];\n
        if (*(&v8) != 32 && !v6)\n
        {\n
            *(v9) = v8;\n
            v9 += 1;\n
            v10 = v10 + 1;\n
        }\n
        if (v0[1 + v10] != 47)\n
        {\n
            if (v10 == 1 && *(v0) == 47)\n
            {\n
                cgc_printf(\"Directory Name: \");\n
                v10 = 1;\n
                goto LABEL_408d82;\n
            }\n
            *(v9) = 47;\n
            v10 = v10 + 1;\n
        }\n
        cgc_printf(\"Directory Name: \");\n
        if (v10 <= 0)\n
            goto LABEL_408dba;\n
LABEL_408d82:\n
        v11 = 0;\n
        do\n
        {\n
            cgc_printf(&g_40b6b8);\n
            v11 += 1;\n
        } while (v10 != v11);\n
LABEL_408dba:\n
        cgc_printf(&g_40b90e);\n
        v12 = a1->field_10;\n
        v2 = v10;\n
        if (v12)\n
        {\n
            v13 = 0;\n
            do\n
            {\n
                if (!a1->field_8)\n
                {\n
                    *(&a1->field_10) = 0x200000000;\n
                    v14 = operator new[](80);\n
                    v14->field_10 = 0;\n
                    v14->field_20 = 0;\n
                    v14->field_0 = 0;\n
                    *((&v14->field_28 + 8)) = 0;\n
                    *((&v14->field_38 + 8)) = 0;\n
                    *(&(&v14->field_20)[1]) = 0;\n
                    a1->field_8 = v14;\n
                    v12 = a1->field_10;\n
                }\n
                cgc_printf(\"    \");\n
                cgc_printf(\"Subdirectory Name: \");\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b6b8);\n
                cgc_printf(&g_40b90e);\n
                v13 += 1;\n
                v15 = a1->field_10;\n
            } while (v13 < v15);\n
        }\n
        else\n
        {\n
            if (!a1->field_20)\n
                return cgc_printf(\"    --Empty Directory--\");\n
        }\n
        v16 = a1->field_20;\n
        if (v16)\n
        {\n
            v17 = 0;\n
            do\n
            {\n
                v18 = v5->field_18;\n
                if (!v18)\n
                {\n
                    *(&v5->field_20) = 0x200000000;\n
                    v18 = operator new[](16);\n
                    v5->field_18 = v18;\n
                    v16 = v5->field_20;\n
                }\n
                v19 = (v17 < v16 ? 0 : v17);\n
                v20 = *((v18 + v19 * 8));\n
                v21 = 1;\n
                _GLOBAL__N_1::PrintFile();\n
                v17 = v17 + 1;\n
                v22 = v5->field_20;\n
            } while (v17 < v22);\n
        }\n
        cgc_printf(&g_40b90e);\n
        if (!v1)\n
            return operator delete[](v0);\n
        v24 = v5->field_10;\n
        if (!v24)\n
            return operator delete[](v0);\n
        v26 = 0;\n
        do\n
        {\n
            v23 = v5->field_8;\n
            if (!v23)\n
            {\n
                *(&v5->field_10) = 0x200000000;\n
                v23 = operator new[](80);\n
                *((v23 + 16)) = 0;\n
                *((v23 + 32)) = 0;\n
                *(v23) = 0;\n
                *((v23 + 56)) = 0;\n
                *((v23 + 72)) = 0;\n
                *((v23 + 40)) = 0;\n
                v5->field_8 = v23;\n
                v24 = v5->field_10;\n
            }\n
            v25 = (v26 < v24 ? 0 : v26);\n
            DirectoryTree::ListFileHelper(v3, v23 + v25 * 40, 0, 1, v0, v2, 0);\n
            v26 = v26 + 1;\n
        } while (v26 < v5->field_10);\n
        return operator delete[](v0);\n
    }\n
    else if (!a2)\n
    {\n
        return v7;\n
    }\n
    else\n
    {\n
        return _GLOBAL__N_1::PrintFile(a2, 0);\n
    }\n
}\n
", "4230646:sub_408df6": null, "4231016:sub_408f68": null, "4231139:sub_408fe3": null, "4231349:sub_4090b5": null, "4231360:_ZN13DirectoryTree9ClearTreeEb": "long long DirectoryTree::ClearTree(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    void* v3;  // r14, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (a1)\n
    {\n
        if (v3)\n
            operator delete(v3);\n
        v3 = 0;\n
    }\n
    *(a0) = v3;\n
    return DirectoryTree::ClearTreeHelper(a0, a0);\n
}\n
", "4231412:sub_4090f4": null, "4231424:_ZN13DirectoryTree15ClearTreeHelperEPS_": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    uint128_t field_28;\n
    uint128_t field_38;\n
    unsigned long long field_48;\n
} struct_0;\n
\n
long long DirectoryTree::ClearTreeHelper(unsigned long long *a0, struct_1 *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long v4;  // [bp-0x8]\n
    unsigned long v6;  // r15\n
    unsigned long v7;  // r14\n
    unsigned long v8;  // rbx\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned int v10;  // ecx\n
    unsigned long v11;  // rcx\n
    unsigned long v12;  // rax, Other Possible Types: unsigned long long\n
    void* v13;  // rbp, Other Possible Types: unsigned long long, unsigned long\n
    unsigned int v14;  // ecx\n
    struct_0 *v15;  // rdi\n
    unsigned long v16;  // rdi\n
\n
    if (!a1)\n
        return v12;\n
    *(&v4) = rbp<8>;\n
    v3 = v6;\n
    v2 = v7;\n
    v1 = v8;\n
    v0 = v12;\n
    v10 = *(&a1->padding_10[0]);\n
    if (v10)\n
    {\n
        v13 = 0;\n
        do\n
        {\n
            v9 = a1->field_8;\n
            if (!v9)\n
            {\n
                *(&a1->padding_10[0]) = 0x200000000;\n
                v9 = operator new[](80);\n
                *((v9 + 16)) = 0;\n
                *((v9 + 32)) = 0;\n
                *(v9) = 0;\n
                *((v9 + 56)) = 0;\n
                *((v9 + 72)) = 0;\n
                *((v9 + 40)) = 0;\n
                a1->field_8 = v9;\n
                v10 = *(&a1->padding_10[0]);\n
            }\n
            v11 = (v13 < v10 ? 0 : v13);\n
            v12 = DirectoryTree::ClearTreeHelper(a0, v9 + v11 * 40);\n
            v13 = v13 + 1;\n
            v14 = *(&a1->padding_10[0]);\n
        } while (v13 < v14);\n
    }\n
    *(a0) = 0;\n
    v15 = a1->field_8;\n
    if (v15)\n
        v12 = operator delete[](v15);\n
    *(&a1->field_8) = 0;\n
    v16 = a1->field_18;\n
    if (v16)\n
        v12 = operator delete[](v16);\n
    *(&a1->field_18) = 0;\n
    return v12;\n
}\n
", "4231467:sub_40912b": null, "4231634:sub_4091d2": null, "4231648:_ZN13DirectoryTree14subdirectoriesEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long DirectoryTree::subdirectories(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4231657:sub_4091e9": null, "4231664:_ZN13DirectoryTree9file_listEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long DirectoryTree::file_list(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4231673:sub_4091f9": null, "4231680:_ZN12_GLOBAL__N_19PrintFileEPK7fs_fileh": "extern unsigned int g_40b6b8;\n
extern unsigned int g_40b90e;\n
\n
long long _GLOBAL__N_1::PrintFile(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a1)\n
    {\n
        do\n
        {\n
            cgc_printf(\"    \");\n
        } while (a1 != 1);\n
    }\n
    cgc_printf(\"File Name: \");\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    cgc_printf(&g_40b6b8);\n
    return cgc_printf(&g_40b90e);\n
}\n
", "4231937:sub_409301": null, "4231952:_ZN5ArrayI13DirectoryTreeE6AppendERKS0_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    uint128_t field_28;\n
    uint128_t field_38;\n
    unsigned long long field_48;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
} struct_2;\n
\n
double Array::Append(long long a0, long long a1)\n
{\n
    struct_0 *v1;  // r15\n
    struct_1 *v2;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v3;  // r13\n
    unsigned long v4;  // r12\n
    unsigned long v5;  // rax\n
    unsigned long v6;  // rdi\n
    uint128_t *v7;  // r13, Other Possible Types: unsigned long\n
    unsigned long v8;  // rax\n
    int v9;  // xmm0\n
\n
    v1 = a0;\n
    v2 = *(&a0[0]);\n
    if (!v2)\n
    {\n
        *(&a0[2]) = 0x200000000;\n
        v2 = operator new[](80);\n
        v2->field_10 = 0;\n
        v2->field_20 = 0;\n
        v2->field_0 = 0;\n
        *((&v2->field_28 + 8)) = 0;\n
        *((&v2->field_38 + 8)) = 0;\n
        *(&(&v2->field_20)[1]) = 0;\n
        *(&a0[0]) = v2;\n
    }\n
    v7 = a0[2];\n
    if (v7 != a0[1])\n
    {\n
        v1->field_8 = v7 + 1;\n
        v8 = v7 * 5;\n
        *((v2 + v8 * 8 + 32)) = a1->field_20;\n
        v9 = a1->field_0;\n
        *((v2 + v8 * 8 + 16)) = a1->field_10;\n
        *((v2 + v8 * 8)) = v9;\n
        return v9;\n
    }\n
    v3 = v7 * 2;\n
    a0[1] = v3;\n
    v4 = v3 * 8 * 5;\n
    v2 = operator new[](v4);\n
    if (v3)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            *((v2 + v5 + 16)) = 0;\n
            *((v2 + v5 + 32)) = 0;\n
            *((v2 + v5)) = 0;\n
            v5 += 40;\n
        } while (v4 != v5);\n
    }\n
    cgc_memcpy(v2, *(&a0[0]), a0[2] * 8 * 5);\n
    v6 = *(&a0[0]);\n
    if (v6)\n
        operator delete[](v6);\n
    v1->field_0 = v2;\n
    v7 = v1->field_8;\n
}\n
", "4232218:sub_40941a": null, "4232224:_ZN5ArrayIP7fs_fileE6AppendERKS1_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long Array::Append(struct_0 *a0, unsigned long long *a1)\n
{\n
    unsigned int v1[3];  // rbx\n
    unsigned long long v2;  // r15, Other Possible Types: unsigned long\n
    unsigned long v3;  // rdi\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // rdi\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = a0->field_0;\n
    if (!v2)\n
    {\n
        *(&a0->field_8) = 0x200000000;\n
        v2 = operator new[](16);\n
        a0->field_0 = v2;\n
    }\n
    v3 = a0->field_8;\n
    if (v3 == v1[1])\n
    {\n
        v4 = v3 * 2;\n
        v1[1] = v4;\n
        v2 = operator new[](v4 * 8);\n
        cgc_memcpy(v2, *(&v1[0]), v1[2] * 8);\n
        v5 = *(&v1[0]);\n
        if (v5)\n
            operator delete[](v5);\n
        *(&v1[0]) = v2;\n
        v3 = v1[2];\n
    }\n
    v6 = *(a1);\n
    v1[2] = v3 + 1;\n
    *((v2 + v3 * 8)) = v6;\n
    return v6;\n
}\n
", "4232356:sub_4094a4": null, "4232368:_ZN8CgFsFile9FreeEntryEPK7fs_file": "char CgFsFile::FreeEntry(char *a0)\n
{\n
    return *(a0) == 229 | !*(a0);\n
}\n
", "4232383:sub_4094bf": null, "4232384:_ZN8CgFsFile9SkipEntryEPK7fs_file": "char CgFsFile::SkipEntry(char a0[12])\n
{\n
    char v1;  // al\n
\n
    v1 = 1;\n
    if (a0[11] != 15)\n
        v1 = a0[0] == 229 | !a0[0];\n
    return v1;\n
}\n
", "4232407:sub_4094d7": null, "4232416:_ZN8CgFsFile10IsDotEntryEPK7fs_file": "char CgFsFile::IsDotEntry(char *a0)\n
{\n
    return *(a0) == 46;\n
}\n
", "4232423:sub_4094e7": null, "4232432:_ZN8CgFsFile11IsDirectoryEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
char CgFsFile::IsDirectory(struct_0 *a0)\n
{\n
    return (a0->field_b & 31);\n
}\n
", "4232440:sub_4094f8": null, "4232448:_ZN8CgFsFile6IsFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
char CgFsFile::IsFile(struct_0 *a0)\n
{\n
    return !(a0->field_b & 31);\n
}\n
", "4232456:sub_409508": null, "4232464:_ZN8CgFsFile12IsSystemFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
char CgFsFile::IsSystemFile(struct_0 *a0)\n
{\n
    return (a0->field_b & 7);\n
}\n
", "4232472:sub_409518": null, "4232480:_ZN8CgFsFile12IsHiddenFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
char CgFsFile::IsHiddenFile(struct_0 *a0)\n
{\n
    return (a0->field_b & 3);\n
}\n
", "4232488:sub_409528": null, "4232496:_ZN8CgFsFile9IsArchiveEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
char CgFsFile::IsArchive(struct_0 *a0)\n
{\n
    return (a0->field_b & 63);\n
}\n
", "4232504:sub_409538": null, "4232512:_ZN8CgFsFile19DeleteMetadataEntryEP7fs_file": "long long CgFsFile::DeleteMetadataEntry(char *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    *(a0) = 229;\n
    return v1;\n
}\n
", "4232516:sub_409544": null, "4232528:_ZN8CgFsFile10NameEqualsEPK7fs_filePKcj": "long long CgFsFile::NameEquals(unsigned long a0, unsigned int a1, char *a2)\n
{\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    char *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2 <= 11)\n
    {\n
        v1 = a2;\n
        v2 = cgc_memcmp(a0, a1, a2);\n
        if (!v2)\n
        {\n
            *(&v2) = 1;\n
            if (a2 > 10)\n
            {\n
                return v2;\n
            }\n
            else if (a2[a0] == 32)\n
            {\n
                while (true)\n
                {\n
                    v2 = v1;\n
                    if (v1 == 10)\n
                        break;\n
                    v1 += 1;\n
                    if (*((a0 + v2 + 1)) != 32)\n
                        break;\n
                }\n
                *(&v2) = 10 <= v1;\n
                return v2;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4232621:sub_4095ad": null, "4232624:_Z10FillBufferPKcj": "extern unsigned int cgc_p1;\n
extern unsigned int cgc_p2;\n
\n
long long FillBuffer(char *a0, unsigned int a1)\n
{\n
    char *v2;  // rax\n
    unsigned long v3;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v4;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long v5;  // rsi\n
\n
    v2 = operator new[](a1);\n
    if (!a1)\n
        return v2;\n
    v3 = cgc_p1;\n
    v4 = cgc_p2;\n
    v5 = 0;\n
    do\n
    {\n
        v3 = (v3 >> 16) + v3 * 47070;\n
        cgc_p1 = v3;\n
        v4 = (v4 >> 16) + v4 * 84818;\n
        cgc_p2 = v4;\n
        v2[v5] = a0[v4 & 4095];\n
        v5 += 1;\n
    } while (a1 != v5);\n
    return v2;\n
}\n
", "4232742:sub_409626": null, "4232752:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_p1;\n
extern unsigned int cgc_p2;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern unsigned int g_40b46c;\n
extern unsigned int g_40b6b8;\n
extern unsigned int g_40b90d;\n
extern unsigned int g_40b90e;\n
extern unsigned int g_40b984;\n
extern unsigned int g_40b99a;\n
extern unsigned int g_40b9a4;\n
extern unsigned int g_40b9b3;\n
extern char g_40b9c0;\n
extern char g_40b9e2;\n
extern unsigned int g_40b9ff;\n
extern unsigned int g_40ba17;\n
extern unsigned int g_40ba3e;\n
extern unsigned int g_40ba4f;\n
extern unsigned int g_40ba62;\n
extern unsigned int g_40ba74;\n
extern unsigned int g_40ba89;\n
extern unsigned int g_40ba96;\n
extern unsigned int g_40baa8;\n
extern unsigned int g_40bab8;\n
extern unsigned int g_40bace;\n
extern unsigned int g_40baf4;\n
extern unsigned int g_40bb0c;\n
extern unsigned int g_40bb16;\n
extern unsigned int g_40bb22;\n
extern unsigned int g_40bb39;\n
extern unsigned int g_40bb58;\n
extern unsigned int g_40bb79;\n
extern unsigned int g_40bb87;\n
extern unsigned int g_40bba6;\n
extern unsigned int g_40bbc6;\n
extern unsigned int g_40bbe6;\n
extern unsigned int g_40bc11;\n
extern unsigned int g_40bc27;\n
extern unsigned int g_40bc45;\n
extern unsigned int g_40bc55;\n
extern unsigned int g_40bc79;\n
extern unsigned int g_40bc95;\n
extern unsigned int g_40bcb9;\n
extern unsigned int g_40bcd1;\n
extern unsigned int g_40bce9;\n
extern unsigned int g_40bcfb;\n
extern unsigned int g_40bd03;\n
extern unsigned int g_40bd0a;\n
extern unsigned int g_40bd24;\n
extern unsigned int g_40bd3d;\n
extern unsigned int g_40bd5d;\n
extern unsigned int g_40bd75;\n
extern unsigned int g_40bd9e;\n
extern unsigned int g_40bdbb;\n
extern unsigned int g_40bdee;\n
extern unsigned int g_40be0c;\n
extern char g_40be27;\n
extern unsigned int g_40be39;\n
extern unsigned int g_40be5c;\n
extern char g_40be7c;\n
extern char g_40be93;\n
extern char g_40beb7;\n
extern unsigned int g_40bed6;\n
\n
int main()\n
{\n
    void* v0;  // [bp-0x8d8], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8c8], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x8bc]\n
    void* v3;  // [bp-0x8b8]\n
    unsigned long v4;  // [bp-0x8a0], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x898]\n
    char v6;  // [bp-0x888]\n
    char v7;  // [bp-0x480]\n
    struct_0 *v9;  // rbx, Other Possible Types: unsigned long\n
    char v10;  // r15b\n
    unsigned long long v11;  // rax\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rdi, Other Possible Types: unsigned int\n
    unsigned long v14;  // rdi\n
    void* v15;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v16;  // rdi\n
    unsigned long v18;  // rax\n
    void* v21;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v22;  // r13\n
    void* v23;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rax\n
    void* v26;  // rbp, Other Possible Types: unsigned long\n
    void* v27;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v28;  // rbx\n
    void* v29;  // rbp, Other Possible Types: unsigned long\n
    void* v30;  // rbx, Other Possible Types: unsigned long\n
\n
    cgc_fxlat(cgc_stdin, \"2281771\");\n
    cgc_fxlat(cgc_stdout, \"2281771\");\n
    cgc_p1 = *(1128776080);\n
    cgc_p2 = *(1128776084);\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_printf(&g_40b984);\n
    cgc_printf(&g_40b90d);\n
    CgFsImg::__base_ctor__(&v7);\n
    v9 = &v6;\n
    v10 = 0;\n
LABEL_4096e0:\n
    cgc_printf(&g_40b99a);\n
    while (true)\n
    {\n
        if (!(v10 & 1))\n
        {\n
            cgc_printf(&g_40b9a4);\n
            cgc_printf(&g_40b9b3);\n
            cgc_printf(\":> \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) >= 0)\n
            {\n
                if (!v6)\n
                    goto LABEL_4096e0;\n
                v11 = cgc_strtol(v9, NULL, 10);\n
                if (v11 == 1)\n
                {\n
                    v10 = CgFsImg::Mount(&v7, cgc_stdin);\n
                    v13 = (v10 ? &g_40b9e2 : &g_40b9c0);\n
                    goto LABEL_40a30e;\n
                }\n
                else\n
                {\n
                    if (!(v11 == 2))\n
                        goto LABEL_4096e0;\n
                    goto LABEL_40a48f;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            cgc_printf(&g_40b9ff);\n
            cgc_printf(&g_40ba17);\n
            cgc_printf(&g_40ba3e);\n
            cgc_printf(&g_40ba4f);\n
            cgc_printf(&g_40ba62);\n
            cgc_printf(&g_40ba74);\n
            cgc_printf(&g_40ba89);\n
            cgc_printf(&g_40ba96);\n
            cgc_printf(&g_40baa8);\n
            cgc_printf(&g_40bab8);\n
            cgc_printf(&g_40bace);\n
            cgc_printf(&g_40baf4);\n
            cgc_printf(&g_40bb0c);\n
            cgc_printf(\":> \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) < 0)\n
                goto LABEL_40a48f;\n
            if (!v6)\n
                goto LABEL_4096e0;\n
            v12 = cgc_strtol(v9, NULL, 10) - 1;\n
            switch (v12)\n
            {\n
            case 0:\n
                cgc_printf(&g_40bb16);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0)\n
                {\n
                    CgFsImg::ListFiles(&v7);\n
                    goto LABEL_4096e0;\n
                }\n
            case 1:\n
                cgc_printf(&g_40bb22);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0)\n
                {\n
                    CgFsImg::ListFiles(&v7);\n
                    goto LABEL_4096e0;\n
                }\n
            case 2:\n
                v3 = 0;\n
                v5 = 0;\n
                cgc_printf(&g_40bb39);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0 && CgFsImg::PreviewFile(&v7, v9, &v3, &v5) && v3 && v5)\n
                {\n
                    v15 = 0;\n
                    do\n
                    {\n
                        cgc_printf(&g_40b46c);\n
                        v15 += 1;\n
                    } while (v15 < v5);\n
                    cgc_printf(&g_40b90e);\n
                    cgc_fflush(cgc_stdout);\n
                    v16 = v3;\n
                    v9 = &v6;\n
                    if (v16)\n
                    {\n
                        operator delete[](v16);\n
                        goto LABEL_4096e0;\n
                    }\n
                }\n
            case 3:\n
                v0 = 0;\n
                v2 = 0;\n
                cgc_printf(&g_40bb58);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0)\n
                {\n
                    cgc_printf(&g_40bb79);\n
                    cgc_printf(\":> \");\n
                    cgc_fflush(cgc_stdout);\n
                    if (cgc_freaduntil(&v3, 16, 14, cgc_stdin) > 0)\n
                    {\n
                        cgc_printf(&g_40bb87);\n
                        cgc_printf(\":> \");\n
                        cgc_fflush(cgc_stdout);\n
                        if (cgc_freaduntil(&v5, 16, 14, cgc_stdin) > 0)\n
                        {\n
                            if (!CgFsImg::ReadFromFile(&v7, &v6, cgc_strtol(&v3, NULL, 10), cgc_strtol(&v5, NULL, 10), &v0, &v2))\n
                                break;\n
                            if (!v0)\n
                                break;\n
                            if (!v2)\n
                                break;\n
                            v23 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40b46c);\n
                                v23 += 1;\n
                            } while (v23 < v2);\n
                            cgc_printf(&g_40b90e);\n
                            cgc_fflush(cgc_stdout);\n
                            v24 = v0;\n
                            if (!v24)\n
                                break;\n
                            goto LABEL_409dd7;\n
                        }\n
                    }\n
                }\n
            case 4:\n
                v0 = 0;\n
                cgc_printf(&g_40bba6);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40bb79);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v3, 16, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40bbc6);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v5, 16, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                v18 = cgc_strtol(&v5, NULL, 10);\n
                if (!v18)\n
                    goto LABEL_4096e0;\n
                *(&v4) = cgc_strtol(&v3, NULL, 10);\n
                v22 = operator new[](v18);\n
                *(&v1) = v18;\n
                cgc_printf(&g_40bbe6);\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_fread(v22, v18, cgc_stdin) <= 0)\n
                {\n
                    operator delete[](v22);\n
                }\n
                else\n
                {\n
                    if (CgFsImg::WriteToFile(&v7, &v6, *(&v4), *(&v1), v22, &v0) && v0)\n
                    {\n
                        cgc_printf(&g_40bc11);\n
                        if (v0)\n
                        {\n
                            v27 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40b46c);\n
                                v27 += 1;\n
                            } while (v27 < v0);\n
                        }\n
                        cgc_printf(&g_40b90e);\n
                        cgc_fflush(cgc_stdout);\n
                    }\n
                    v24 = v22;\n
                    goto LABEL_409dd7;\n
                }\n
            case 5:\n
                cgc_printf(&g_40bc27);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0)\n
                {\n
                    cgc_printf(&g_40bc45);\n
                    cgc_printf(\":> \");\n
                    cgc_fflush(cgc_stdout);\n
                    if (cgc_freaduntil(&v3, 16, 14, cgc_stdin) > 0)\n
                    {\n
                        if (!CgFsImg::UpdateFileSize(&v7, &v6, cgc_strtol(&v3, NULL, 10)))\n
                            cgc_printf(&g_40bc79);\n
                        else\n
                            cgc_printf(&g_40bc55);\n
                        v9 = &v6;\n
                        goto LABEL_409795;\n
                    }\n
                }\n
            case 6:\n
                cgc_memset(&v0, 0, 0xc);\n
                cgc_printf(&g_40bc95);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40bcb9);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v0, 12, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40bcd1);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v3, 16, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40bce9);\n
                cgc_printf(&g_40bcfb);\n
                cgc_printf(&g_40bd03);\n
                cgc_printf(&g_40bd0a);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v5, 16, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                v25 = cgc_strtol(&v5, NULL, 10);\n
                *(&v1) = cgc_strtol(&v3, NULL, 10);\n
                if (v25 == 3)\n
                {\n
                    v26 = FillBuffer(0x4347c000, *(&v1));\n
                }\n
                else\n
                {\n
                    v26 = 0;\n
                    if (v25 == 1)\n
                    {\n
                        v28 = *(&v1);\n
                        v26 = operator new[](v28);\n
                        cgc_printf(&g_40bbe6);\n
                        cgc_fflush(cgc_stdout);\n
                        if (cgc_fread(v26, v28, cgc_stdin) > 0)\n
                        {\n
                            v9 = &v6;\n
                        }\n
                        else\n
                        {\n
                            v24 = v26;\n
LABEL_409dd7:\n
                            operator delete[](v24);\n
                            v9 = &v6;\n
                            goto LABEL_4096e0;\n
                        }\n
                    }\n
                }\n
                if (CgFsImg::AddFile(&v7, v9, &v0, v26, *(&v1)))\n
                {\n
                    v4 = v26;\n
                    cgc_printf(&g_40bd24);\n
                    cgc_printf(&g_40bd3d);\n
                    cgc_printf(\"New file name: \");\n
                    if (cgc_strlen(&v0))\n
                    {\n
                        v29 = 0;\n
                        do\n
                        {\n
                            cgc_printf(&g_40b6b8);\n
                            v29 += 1;\n
                        } while (cgc_strlen(&v0) > v29);\n
                    }\n
                    cgc_printf(&g_40b90e);\n
                    if (v4)\n
                    {\n
                        cgc_printf(&g_40bd5d);\n
                        if (*(&v1))\n
                        {\n
                            v1 = *(&v1);\n
                            v30 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40b46c);\n
                                v30 += 1;\n
                            } while (v1 != v30);\n
                        }\n
                        cgc_printf(&g_40b90e);\n
                        v9 = &v6;\n
                    }\n
                    cgc_fflush(cgc_stdout);\n
                    v26 = v4;\n
                }\n
                if (v26)\n
                {\n
                    operator delete[](v26);\n
                    goto LABEL_4096e0;\n
                }\n
            case 7:\n
                cgc_memset(&v3, 0, 0xc);\n
                cgc_printf(&g_40bd75);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) > 0)\n
                {\n
                    cgc_printf(&g_40bd9e);\n
                    cgc_printf(\":> \");\n
                    cgc_fflush(cgc_stdout);\n
                    if (cgc_freaduntil(&v3, 12, 14, cgc_stdin) > 0 && CgFsImg::AddDirectory(&v7, &v6, &v3))\n
                    {\n
                        cgc_printf(&g_40bdbb);\n
                        cgc_printf(&g_40bd3d);\n
                        cgc_printf(\"New directory name: \");\n
                        if (cgc_strlen(&v3))\n
                        {\n
                            v21 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40b6b8);\n
                                v21 += 1;\n
                            } while (cgc_strlen(&v3) > v21);\n
                        }\n
                        cgc_printf(&g_40b90e);\n
                        cgc_fflush(cgc_stdout);\n
                    }\n
                }\n
            case 8:\n
                cgc_printf(&g_40bdee);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                if (!CgFsImg::DeleteFile(&v7))\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40be0c);\n
                v14 = &g_40be27;\n
                goto LABEL_40a2bb;\n
            case 9:\n
                cgc_printf(&g_40be39);\n
                cgc_printf(\":> \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(v9, 0x400, 14, cgc_stdin) <= 0)\n
                    goto LABEL_4096e0;\n
                if (!CgFsImg::DeleteDirectory(&v7))\n
                    goto LABEL_4096e0;\n
                cgc_printf(&g_40be5c);\n
                v14 = &g_40be7c;\n
LABEL_40a2bb:\n
                cgc_printf(v14);\n
LABEL_409795:\n
                cgc_fflush(cgc_stdout);\n
                goto LABEL_4096e0;\n
            case 10:\n
                CgFsImg::DebugMetadata(&v7);\n
                goto LABEL_4096e0;\n
            case 11:\n
                if (CgFsImg::Unmount(&v7))\n
                    v10 = 0;\n
                v13 = (!(v10 & 1) ? &g_40beb7 : &g_40be93);\n
LABEL_40a30e:\n
                cgc_printf(v13);\n
                goto LABEL_409795;\n
            case 12:\n
LABEL_40a48f:\n
                cgc_printf(&g_40bed6);\n
                cgc_fflush(cgc_stdout);\n
                CgFsImg::__base_dtor__(&v7);\n
                return 0;\n
            default:\n
LABEL_4096e0:\n
                cgc_printf(&g_40b99a);\n
            }\n
        }\n
    }\n
}\n
", "4233122:sub_4097a2": null, "4236488:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:cgc_deallocate": null, "5242944:_ZdaPv": null, "5242952:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}