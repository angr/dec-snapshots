{"4202496:_init": "extern struct_0 *g_406b10;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406b10;\n
    if (g_406b10)\n
        v1 = g_406b10();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406b30;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406b30;\n
    goto *(4221752);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4221728);\n
}\n
", "4202704:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202741:sub_4020f5": null, "4202742:sub_4020f6": null, "4202752:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406b08;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202793:sub_402129": null, "4202800:register_tm_clones": "extern unsigned long long g_406b18;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202857:sub_402169": null, "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406b20;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406b20)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202917:sub_4021a5": null, "4202921:sub_4021a9": null, "4202928:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202937:sub_4021b9": null, "4202944:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_transmit(a0, a1, a2, v6);\n
        if (v0)\n
        {\n
            v4 = 3;\n
            return v4;\n
        }\n
        v2 = v1 + v2;\n
    }\n
}\n
", "4203130:sub_40227a": null, "4203136:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203284:sub_402314": null, "4203296:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203420:sub_40239c": null, "4203424:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203552:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203614:sub_40245e": null, "4203616:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203841:sub_402541": null, "4203856:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    struct_0 *v7;  // rax\n
    unsigned int v8;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v4 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 = v4 >> 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4204063:sub_40261f": null, "4204064:cgc_float_to_str": "long long cgc_float_to_str(char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x42]\n
    char v1;  // [bp-0x41]\n
    unsigned long long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_40291c;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < 5;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_40291c:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204844:sub_40292c": null, "4204848:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x100]\n
    unsigned int v2;  // [bp-0xf4]\n
    unsigned long long *v3;  // [bp-0xf0], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0xe8]\n
    unsigned int *v5;  // [bp-0xe0]\n
    unsigned int v6;  // [bp-0xd4]\n
    unsigned int *v7;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0xc8]\n
    unsigned int v9;  // [bp-0xbc]\n
    unsigned int *v10;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_1 *v11;  // [bp-0xb0]\n
    unsigned int v12;  // [bp-0xa8]\n
    unsigned int v13;  // [bp-0xa4]\n
    char *v14;  // [bp-0xa0], Other Possible Types: unsigned long\n
    struct_3 *v15;  // [bp-0x98], Other Possible Types: unsigned long\n
    unsigned long v16;  // [bp-0x90]\n
    struct_3 *v17;  // [bp-0x88], Other Possible Types: unsigned long\n
    unsigned int v18;  // [bp-0x7c]\n
    struct_3 *v19;  // [bp-0x78], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x6c]\n
    char v21;  // [bp-0x68]\n
    unsigned int v22;  // [bp-0x24]\n
    char *v23;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v24;  // [bp-0xc]\n
    struct_1 *v26;  // rcx\n
    unsigned long long v27;  // rdx\n
    unsigned int *v28;  // rax\n
    struct_1 *v29;  // rcx\n
    unsigned int *v30;  // rdx\n
    unsigned long long v31;  // rdx\n
    unsigned long long *v32;  // rax\n
    struct_1 *v33;  // rcx\n
    unsigned long long *v34;  // rdx\n
    struct_1 *v35;  // rcx\n
    unsigned long long v36;  // rdx\n
    struct struct_0 **v37;  // rax\n
    struct_1 *v38;  // rcx\n
    struct struct_0 **v39;  // rdx\n
    struct_1 *v40;  // rcx\n
    unsigned long long v41;  // rdx\n
    unsigned int *v42;  // rax\n
    struct_1 *v43;  // rcx\n
    unsigned int *v44;  // rdx\n
\n
    v23 = a0;\n
    v22 = 0;\n
    if (!v23)\n
    {\n
        v24 = -1;\n
        return v24;\n
    }\n
    while (true)\n
    {\n
        if (!*(v23))\n
        {\n
            v24 = v22;\n
            return v24;\n
        }\n
        else if (*(v23) != 64)\n
        {\n
            cgc_putc(*(v23));\n
            v23 += 1;\n
            v22 += 1;\n
        }\n
        else\n
        {\n
            v23 += 1;\n
            v13 = *(v23);\n
            if (!v13)\n
            {\n
                v24 = -1;\n
                return v24;\n
            }\n
            if (v13 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v13 == 100)\n
            {\n
                v11 = a1;\n
                v12 = v11->field_0;\n
                if (v12 > 40)\n
                {\n
                    v29 = v11;\n
                    v30 = v29->field_8;\n
                    v29->field_8 = &v30[2];\n
                    v10 = v30;\n
                }\n
                else\n
                {\n
                    v26 = v11;\n
                    v27 = v12;\n
                    v28 = v27 + v26->field_10;\n
                    v26->field_0 = v27 + 8;\n
                    v10 = v28;\n
                }\n
                v20 = *(v10);\n
                cgc_int_to_str(v20, &v21);\n
                for (v19 = &v21; *(v19); v19 += 1)\n
                {\n
                    cgc_putc(*(v19));\n
                    v22 += 1;\n
                }\n
            }\n
            else if (v13 == 102)\n
            {\n
                v4 = a1;\n
                v5 = &v4->field_4;\n
                v6 = v4->field_4;\n
                if (v6 <= 160)\n
                {\n
                    v31 = v6;\n
                    v32 = v31 + v4->field_10;\n
                    *(v5) = v31 + 16;\n
                    v3 = v32;\n
                }\n
                else\n
                {\n
                    v33 = v4;\n
                    v34 = v33->field_8;\n
                    v33->field_8 = &v34[1];\n
                    v3 = v34;\n
                }\n
                v16 = *(v3);\n
                cgc_float_to_str(&v21);\n
                for (v15 = &v21; v15->field_0; v15 += 1)\n
                {\n
                    cgc_putc(v15->field_0);\n
                    v22 += 1;\n
                }\n
            }\n
            else if (v13 == 115)\n
            {\n
                v1 = a1;\n
                v2 = v1->field_0;\n
                if (v2 > 40)\n
                {\n
                    v38 = v1;\n
                    v39 = v38->field_8;\n
                    v38->field_8 = &v39[1];\n
                    v0 = v39;\n
                }\n
                else\n
                {\n
                    v35 = v1;\n
                    v36 = v2;\n
                    v37 = v36 + v35->field_10;\n
                    v35->field_0 = v36 + 8;\n
                    v0 = v37;\n
                }\n
                for (v14 = *(v0); *(v14); v14 += 1)\n
                {\n
                    cgc_putc(*(v14));\n
                    v22 += 1;\n
                }\n
            }\n
            else if (v13 == 120)\n
            {\n
                v8 = a1;\n
                v9 = v8->field_0;\n
                if (v9 <= 40)\n
                {\n
                    v40 = v8;\n
                    v41 = v9;\n
                    v42 = v41 + v40->field_10;\n
                    v40->field_0 = v41 + 8;\n
                    v7 = v42;\n
                }\n
                else\n
                {\n
                    v43 = v8;\n
                    v44 = v43->field_8;\n
                    v43->field_8 = &v44[2];\n
                    v7 = v44;\n
                }\n
                v18 = *(v7);\n
                cgc_int_to_hex(v18, &v21);\n
                for (v17 = &v21; v17->field_0; v17 += 1)\n
                {\n
                    cgc_putc(v17->field_0);\n
                    v22 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v24 = -1;\n
                return v24;\n
            }\n
            v23 += 1;\n
        }\n
    }\n
}\n
", "4205957:sub_402d85": null, "4205968:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4206128:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206179:sub_402e63": null, "4206192:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206243:sub_402ea3": null, "4206256:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4206299:sub_402edb": null, "4206304:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4206347:sub_402f0b": null, "4206352:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206403:sub_402f43": null, "4206416:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206507:sub_402fab": null, "4206512:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4206540:sub_402fcc": null, "4206544:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4206596:sub_403004": null, "4206608:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_4031f9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_4031f9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_4031f9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_403169:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_4031f9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_403169;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_4031f9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4207165:sub_40323d": null, "4207168:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4207560:sub_4033c8": null, "4207568:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4207671:sub_403437": null, "4207680:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = *((a1 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((a0 + v1)) = *((a1 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        *((a0 + v1)) = 0;\n
    }\n
    return a0;\n
}\n
", "4207853:sub_4034ed": null, "4207856:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207974:sub_403566": null, "4207984:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    while (true)\n
    {\n
        v0 += 1;\n
        if (!v0)\n
            break;\n
        *((a0 + v0)) = a1;\n
    }\n
    *((a0 + v0)) = a1;\n
    return a0;\n
}\n
", "4208072:sub_4035c8": null, "4208080:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4208198:sub_403646": null, "4208208:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4208417:sub_403721": null, "4208432:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4208515:sub_403783": null, "4208528:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        *((a0 + v2)) = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        *((a0 + v2)) = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4208705:sub_403841": null, "4208720:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); v1[a1]; v1 += 1)\n
        {\n
            a0[v0] = v1[a1];\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4208882:sub_4038f2": null, "4208896:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209128:sub_4039e8": null, "4209136:cgc_sleep": "long long cgc_sleep(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
\n
    v0 = a0;\n
    v1 = 0;\n
    return cgc_fdwait(a0, v3, v4, v5, v6);\n
}\n
", "4209188:sub_403a24": null, "4209200:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    v0 = a0;\n
    cgc_strlen(a0);\n
    cgc_transmit(a0, v2, v3, v4);\n
    return cgc_transmit(a0, v2, v3, v4);\n
}\n
", "4209282:sub_403a82": null, "4209296:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (*(v0) != a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209412:sub_403b04": null, "4209424:cgc_strtok": "extern struct_0 *cgc_prev_str;\n
extern unsigned int cgc_prev_str_len;\n
extern struct_0 *cgc_prev_str_ptr;\n
extern struct_0 *cgc_token;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char *v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
\n
    v7 = a0;\n
    if (!a1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v7)\n
    {\n
        if (cgc_prev_str)\n
        {\n
            cgc_deallocate(a0, a1);\n
            cgc_prev_str = 0;\n
            cgc_prev_str_len = 0;\n
            cgc_prev_str_ptr = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_prev_str)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (cgc_prev_str_ptr >= &cgc_prev_str[cgc_prev_str_len])\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!cgc_prev_str)\n
    {\n
        if (cgc_strlen(v7) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_prev_str_len = cgc_strlen(v7);\n
        if (cgc_allocate(a0, a1, v10))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_strcpy(cgc_prev_str, v7);\n
        cgc_prev_str_ptr = cgc_prev_str;\n
    }\n
    v7 = &cgc_prev_str_ptr->field_0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_strchr(a1, *(v7)))\n
            v2 = v7 < &cgc_prev_str[cgc_prev_str_len];\n
        if (!(v2 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (v7 >= &cgc_prev_str[cgc_prev_str_len])\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v6 = v7;\n
    v1 = v7;\n
    v5 = &v1[cgc_strlen(v7)];\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v4 = cgc_strchr(v6, a1[v3]);\n
        if (v4 && v4 && v4 < v5)\n
            v5 = v4;\n
        v3 += 1;\n
    }\n
    cgc_token = v6;\n
    *(v5) = 0;\n
    cgc_prev_str_ptr = v5 + 1;\n
    v8 = cgc_token;\n
    return v8;\n
}\n
", "4210134:sub_403dd6": null, "4210144:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v1 = a0;\n
    cgc_transmit(a0, a1, v4, v5);\n
    if (a1 != *(&v0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v0);\n
    return v2;\n
}\n
", "4210227:sub_403e33": null, "4210240:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_strlen(a0);\n
    if (cgc_allocate(a0, v4, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    cgc_bzero(v0, cgc_strlen(a0) + 1);\n
    cgc_strcpy(*(&v1), a0);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4210389:sub_403ed5": null, "4210400:cgc_validatePtr": "long long cgc_validatePtr(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (a0 > 0xbaa8b000 && a0 < 0xbaaab000)\n
        v0 = 1;\n
    if (a0 > 0x8048000 && a0 < 0x804c000)\n
        v0 = 1;\n
    if (!v0)\n
    {\n
        cgc_puts(\"Invalid pointer detected!\");\n
        cgc__terminate(\"Invalid pointer detected!\");\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4210534:sub_403f66": null, "4210544:cgc_validateRet": "long long cgc_validateRet()\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x8]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = 0;\n
    v0 = *((*(&v1) + 8));\n
    if (v0 >= 0x8048000 && v0 <= 0x804c000)\n
        goto LABEL_403fc2;\n
    cgc_puts(\"***** STACK SMASHING DETECTED! *****\");\n
    cgc__terminate(\"***** STACK SMASHING DETECTED! *****\");\n
LABEL_403fc2:\n
    v0 = &v0[1] + 1;\n
    v3 = *(v0) & 255;\n
    if (v3 != 232)\n
    {\n
        cgc_puts(\"***** STACK SMASHING DETECTED! *****\");\n
        v3 = cgc__terminate(\"***** STACK SMASHING DETECTED! *****\");\n
        return v3;\n
    }\n
    return *(v0) & 255;\n
}\n
", "4210688:cgc_recvUntil": "long long cgc_recvUntil(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x1e]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a0;\n
    v4 = a2;\n
    v2 = 0;\n
    v0 = a1;\n
    while (true)\n
    {\n
        v1 = cgc_receive(a0, a1, a2, a3);\n
        if (v1 < 0)\n
        {\n
            cgc_validateRet();\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (v3 == a3)\n
        {\n
            cgc_validateRet();\n
            v6 = v2;\n
            return v6;\n
        }\n
        v2 += 1;\n
        cgc_validatePtr(v0);\n
        *(v0) = v3;\n
        v0 += 1;\n
    }\n
}\n
", "4210871:sub_4040b7": null, "4210880:cgc_bookKeeping": "typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned short field_3;\n
    char field_5;\n
    char field_6;\n
    char padding_7[1];\n
    char field_8;\n
    char padding_9[1];\n
    char field_a;\n
    char field_b;\n
    char padding_c[2];\n
    unsigned int field_e;\n
} struct_0;\n
\n
extern unsigned long long g_4050a1;\n
\n
long long cgc_bookKeeping(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rax\n
    struct_0 *v8;  // rax\n
    struct_0 *v9;  // rax\n
    struct_0 *v10;  // rax\n
\n
    cgc_validatePtr(a0);\n
    if (*((&a0->field_1 + 1)) > 6000)\n
    {\n
        cgc_transmit_all(1, &g_4050a1, 10);\n
        cgc__terminate(1);\n
    }\n
    if (a0->padding_7 == 16)\n
        return cgc_validateRet();\n
    v3 = *((&a0->field_1 + 1));\n
    v0 = (v3 >> 31 CONCAT v3) /m 100 + a0->field_0;\n
    v4 = *(&a0->padding_c[1]);\n
    v1 = v0 + (v4 >> 31 CONCAT v4) /m 100;\n
    v6 = a0;\n
    *(&(&v6->field_0)[1]) = *(&(&v6->field_0)[1]) - v1;\n
    if (a0->padding_9 == -0x10)\n
    {\n
        v7 = a0;\n
        *(&(&v7->field_0)[1]) = *(&(&v7->field_0)[1]) - 5;\n
    }\n
    if (a0->field_a == -48)\n
    {\n
        v8 = a0;\n
        *(&(&v8->field_0)[1]) = *(&(&v8->field_0)[1]) - 2;\n
    }\n
    if (*(&a0->field_3 + 1) == -1 && *(&a0->field_3 + 1) == 1)\n
        goto LABEL_4041ea;\n
    if (a0->field_5 > 20)\n
    {\n
        v9 = a0;\n
        v9->field_0 = v9->field_0 + 1;\n
        v10 = a0;\n
        *((&v10->field_1 + 1)) = *((&v10->field_1 + 1)) + 25;\n
    }\n
LABEL_4041ea:\n
    return cgc_validateRet();\n
}\n
", "4211196:sub_4041fc": null, "4211200:cgc_raiseAlarm": "char cgc_raiseAlarm()\n
{\n
    char v0;  // [bp-0x9]\n
\n
    cgc_memcpy(&v0, \"AAAAAAAAAAAAAAAA\", 16);\n
    return cgc_validateRet();\n
}\n
", "4211242:sub_40422a": null, "4211248:cgc_handleShift": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[2];\n
    unsigned short field_3;\n
    char padding_5[3];\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_handleShift(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // rax\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rax\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_validatePtr(a0);\n
    if (a1 != 114)\n
    {\n
        if (a0->padding_5[2] > 16)\n
        {\n
            v2 = a0;\n
            v2->padding_5[2] = v2->padding_5[2] - 16;\n
            v3 = a0;\n
            (&v3->padding_1)[1] = (&v3->padding_1)[1] + 750;\n
        }\n
    }\n
    else\n
    {\n
        if (a0->padding_5[2] < 96 && (&a0->padding_1)[1] > 500)\n
        {\n
            if (a0->padding_5[2] <= 16)\n
            {\n
                v5 = a0;\n
                v5->padding_5[2] = v5->padding_5[2] + 16;\n
            }\n
            else\n
            {\n
                v0 = a0->field_0;\n
                v4 = a0->padding_5[2];\n
                if (v0 <= (v4 >> 31 CONCAT v4) /m 16 * 10)\n
                {\n
                    v8 = cgc_validateRet();\n
                    return v8;\n
                }\n
                v6 = a0;\n
                v6->padding_5[2] = v6->padding_5[2] + 16;\n
            }\n
            if ((&a0->padding_1)[1] < 750)\n
            {\n
                *(&(&a0->padding_1)[1]) = 0;\n
            }\n
            else\n
            {\n
                v7 = a0;\n
                (&v7->padding_1)[1] = (&v7->padding_1)[1] - 750;\n
            }\n
        }\n
    }\n
    v8 = cgc_validateRet();\n
    return v8;\n
}\n
", "4211562:sub_40436a": null, "4211568:cgc_updateBTMetadata": "long long cgc_updateBTMetadata(unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20]\n
\n
    cgc_validatePtr(a0);\n
    cgc_validatePtr(a1);\n
    v1 = a1 + 1;\n
    v0 = *(v1);\n
    v1 += 1;\n
    if (v0 > 31)\n
        v0 = 31;\n
    cgc_memcpy(a0 + 18, v1, v0);\n
    return cgc_validateRet();\n
}\n
", "4211687:sub_4043e7": null, "4211696:cgc_handleTrunk": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned int field_e;\n
} struct_0;\n
\n
long long cgc_handleTrunk(struct_0 *a0, char a1[2])\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
\n
    cgc_validatePtr(a0);\n
    cgc_validatePtr(a1);\n
    if (a1[0] == -112)\n
    {\n
        v1 = a0;\n
        *(&(&v1->padding_0)[1]) = a1[1] + *(&(&v1->padding_0)[1]);\n
        return cgc_validateRet();\n
    }\n
    if (*(&(&a0->padding_0)[1]) < a1[1])\n
    {\n
        *(&(&a0->padding_0)[1]) = 0;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        *(&(&v2->padding_0)[1]) = *(&(&v2->padding_0)[1]) - a1[1];\n
    }\n
    return cgc_validateRet();\n
}\n
", "4211854:sub_40448e": null, "4211856:cgc_initCar": "typedef struct struct_0 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    char padding_3[4];\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    char field_c;\n
    char field_d;\n
} struct_0;\n
\n
long long cgc_initCar(struct_0 *a0)\n
{\n
    cgc_validatePtr(a0);\n
    a0->field_7 = 16;\n
    a0->padding_3[3] = 16;\n
    a0->field_b = 160;\n
    a0->field_a = 192;\n
    a0->field_9 = 224;\n
    a0->field_c = 249;\n
    a0->field_8 = 117;\n
    *(&(&a0->padding_0)[1]) = 65535;\n
    return cgc_validateRet();\n
}\n
", "4211956:sub_4044f4": null, "4211968:main": "int main(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long v3;  // rsi\n
\n
    v1 = a0;\n
    v0 = v3;\n
    cgc_serviceLoop(); /* do not return */\n
}\n
", "4211988:sub_404514": "int sub_404514()\n
{\n
    char v1;  // [bp+0x10]\n
    unsigned long long v2;  // rbp\n
\n
    cgc_validateRet();\n
    v2 = *(&v1);\n
    return;\n
}\n
", "4212003:sub_404523": null, "4212016:cgc_serviceLoop": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[2];\n
    unsigned short field_3;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    char field_c;\n
    char field_d;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
} struct_0;\n
\n
long long cgc_serviceLoop()\n
{\n
    unsigned int v0;  // [bp-0x26c]\n
    char v1;  // [bp-0x265]\n
    unsigned int v2;  // [bp-0x264]\n
    unsigned short v3;  // [bp-0x25e]\n
    unsigned int v4;  // [bp-0x25c]\n
    char v5;  // [bp-0x255]\n
    unsigned int v6;  // [bp-0x254]\n
    struct_0 *v7;  // [bp-0x250], Other Possible Types: unsigned long\n
    char v8;  // [bp-0x248]\n
    char v9;  // [bp-0x148]\n
    char v10;  // [bp-0x48]\n
    struct_1 *v11;  // [bp-0x10]\n
    struct_1 *v13;  // rax\n
    struct_1 *v14;  // rax\n
    struct_1 *v15;  // rax\n
    struct_1 *v16;  // rax\n
    struct_1 *v17;  // rax\n
    struct_1 *v18;  // rax\n
    struct_1 *v19;  // rax\n
\n
    v11 = &v10;\n
    cgc_validatePtr(v11);\n
    cgc_memset(v11, 0, 0x32);\n
    cgc_validatePtr(v11);\n
    cgc_initCar(v11);\n
    while (true)\n
    {\n
        cgc_memset(&v8, 0, 0x200);\n
        v6 = cgc_recvUntil(0, &v8, 255, 10);\n
        if (v6 <= 0)\n
            cgc__terminate(0);\n
        v7 = &v8;\n
        cgc_bookKeeping(v11);\n
        cgc_validatePtr(v7);\n
        for (; v7 < &v9; v7 += 1)\n
        {\n
            v2 = v7->field_0;\n
            if (v2 != -128 && v2 != -112)\n
            {\n
                if (v2 != -96)\n
                {\n
                    if (v2 == -80)\n
                    {\n
                        cgc_validatePtr(v11);\n
                        if (v11->field_c == -8)\n
                            cgc_raiseAlarm();\n
                    }\n
                    else\n
                    {\n
                        if (v2 == -35)\n
                        {\n
                            cgc_validatePtr(v11);\n
                            cgc_transmit_all(1, v11, 50);\n
                            cgc__terminate(1);\n
                        }\n
                        else if (v2 + 8 < 2)\n
                        {\n
                            cgc_validatePtr(v11);\n
                            v11->field_c = v7->field_0;\n
                            goto LABEL_404da9;\n
                        }\n
                        else if (v2 != 16)\n
                        {\n
                            if (v2 == 32)\n
                            {\n
                                cgc_validatePtr(v11);\n
                                if (v11->field_6 != 16 && !(v11->field_6 == 48))\n
                                    goto LABEL_40474a;\n
                                v11->field_6 = 32;\n
LABEL_40474a:\n
                                goto LABEL_404da9;\n
                            }\n
                            else if (v2 != 48)\n
                            {\n
                                cgc_validatePtr(v11);\n
                                while (true)\n
                                {\n
                                    v1 = 0;\n
                                    if (cgc_validatePtr(v11))\n
                                    {\n
                                        v1 = 0;\n
                                        if (v11->field_6 != 16)\n
                                            v1 = v7 < &v9;\n
                                    }\n
                                    if (!(v1 & 1))\n
                                        break;\n
                                    cgc_validatePtr(v7);\n
                                    v0 = v7->field_0;\n
                                    if (v0 != -127 && v0 != -111)\n
                                    {\n
                                        if (v0 == -64)\n
                                        {\n
                                            cgc_validatePtr(v11);\n
                                            if (v11->field_a != -64)\n
                                                v11->field_a = 192;\n
                                            goto LABEL_404d8d;\n
                                        }\n
                                        if (v0 == -48)\n
                                        {\n
                                            cgc_validatePtr(v11);\n
                                            if (v11->field_a != -48)\n
                                                v11->field_a = 208;\n
                                            goto LABEL_404d8d;\n
                                        }\n
                                        if (v0 == -32)\n
                                        {\n
                                            cgc_validatePtr(v11);\n
                                            if (v11->field_9 != -32)\n
                                                v11->field_9 = 224;\n
                                            goto LABEL_404d8d;\n
                                        }\n
                                        if (v0 == -0x10)\n
                                        {\n
                                            cgc_validatePtr(v11);\n
                                            if (v11->field_9 != -0x10)\n
                                                v11->field_9 = 240;\n
                                            goto LABEL_404d8d;\n
                                        }\n
                                        if (v0 == -1)\n
                                        {\n
                                            v11->field_5 = 0;\n
                                        }\n
                                        else if (v0 - 1 >= 3)\n
                                        {\n
                                            if (v0 == 4)\n
                                            {\n
                                                cgc_validatePtr(v11);\n
                                                cgc_validatePtr(v7);\n
                                                if (v11->field_7 > 48)\n
                                                {\n
                                                    *(&v11->field_3 + 1) = 4;\n
                                                    cgc_updateBTMetadata(v11, v7);\n
                                                }\n
                                                v7 += 1;\n
                                                v5 = v7->field_0;\n
                                                v7 += v5;\n
                                                goto LABEL_404d8d;\n
                                            }\n
                                            else if (v0 != 5)\n
                                            {\n
                                                if (v0 == 16)\n
                                                {\n
                                                    cgc_validatePtr(v11);\n
                                                    if (v11->field_7 == 16)\n
                                                        v11->field_6 = 16;\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                                else if (v0 == 112)\n
                                                {\n
                                                    cgc_validatePtr(v11);\n
                                                    if (v11->field_8 == 117)\n
                                                    {\n
                                                        v17 = v11;\n
                                                        v17->field_0 = v17->field_0 + 1;\n
                                                        v18 = v11;\n
                                                        (&v18->padding_1)[1] = (&v18->padding_1)[1] + 25;\n
                                                    }\n
                                                    else\n
                                                    {\n
                                                        v19 = v11;\n
                                                        (&v19->padding_1)[1] = (&v19->padding_1)[1] + 50;\n
                                                    }\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                                else if (v0 == 113)\n
                                                {\n
                                                    cgc_validatePtr(v11);\n
                                                    v15 = v11;\n
                                                    v15->field_0 = v15->field_0 - 1;\n
                                                    v16 = v11;\n
                                                    (&v16->padding_1)[1] = (&v16->padding_1)[1] - 25;\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                                else if (v0 == 114)\n
                                                {\n
                                                    cgc_validatePtr(v11);\n
                                                    if (v11->field_8 == 116)\n
                                                        cgc_handleShift(v11, 114);\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                                else if (v0 == 115)\n
                                                {\n
                                                    cgc_validatePtr(v11);\n
                                                    if (v11->field_8 == 116)\n
                                                        cgc_handleShift(v11, 115);\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                                else if (v0 - 116 < 2)\n
                                                {\n
                                                    cgc_validatePtr(v7);\n
                                                    cgc_validatePtr(v11);\n
                                                    v11->field_8 = v7->field_0;\n
                                                    goto LABEL_404d8d;\n
                                                }\n
                                            }\n
                                        }\n
                                        cgc_validatePtr(v11);\n
                                        cgc_validatePtr(v7);\n
                                        if (v11->field_7 > 64)\n
                                            *(&v11->field_3 + 1) = v7->field_0;\n
                                        goto LABEL_404d8d;\n
                                    }\n
                                    cgc_validatePtr(v11);\n
                                    if (*(&v11->field_3 + 1) != -1)\n
                                    {\n
                                        v4 = 1;\n
                                        cgc_validatePtr(v7);\n
                                        if (*(v7) == -111)\n
                                            v4 = -1;\n
                                        v3 = *((v7 + 1));\n
                                        v7 += 2;\n
                                        if (v4 != -1)\n
                                        {\n
                                            v13 = v11;\n
                                            v13->field_5 = v13->field_5 + v3;\n
                                        }\n
                                        else if (v11->field_5 < v3)\n
                                        {\n
                                            v11->field_5 = 0;\n
                                        }\n
                                        else\n
                                        {\n
                                            v14 = v11;\n
                                            v14->field_5 = v14->field_5 - v3;\n
                                        }\n
                                    }\n
                                    v7 += 1;\n
LABEL_404d8d:\n
                                    v7 += 1;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                cgc_validatePtr(v11);\n
                                if (v11->field_6 != 16)\n
                                {\n
                                    if (!(v11->field_6 == 32))\n
                                        goto LABEL_404793;\n
                                    if (!(v11->field_7 == 16))\n
                                        goto LABEL_404793;\n
                                }\n
                                v11->field_6 = 48;\n
LABEL_404793:\n
                                goto LABEL_404da9;\n
                            }\n
                            goto LABEL_404da9;\n
                        }\n
                        cgc_validatePtr(v11);\n
                        if (v11->field_7 == 16)\n
                            v11->field_6 = 16;\n
                        else\n
                            *(&(&v11->padding_1)[1]) = 9999;\n
                        goto LABEL_404da9;\n
                    }\n
                }\n
                cgc_validatePtr(v11);\n
                if (v11->field_7 == 16)\n
                    v11->field_b = v7->field_0;\n
                goto LABEL_404da9;\n
            }\n
            cgc_validatePtr(v11);\n
            if (v11->field_7 == 16 && v11->field_b == -80)\n
                cgc_handleTrunk(v11, v7);\n
            v7 += 1;\n
LABEL_404da9:\n
        }\n
    }\n
}\n
", "4214218:sub_404dca": null, "4214224:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x1c]\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_validatePtr(a0);\n
    cgc_validatePtr(a1);\n
    cgc_validatePtr(&a0[v2]);\n
    cgc_validatePtr(&a1[v2]);\n
    for (; v2; v2 -= 1)\n
    {\n
        cgc_validatePtr(v1);\n
        cgc_validatePtr(v0);\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    *(v1) = *(v0);\n
    cgc_validateRet();\n
    return a0;\n
}\n
", "4214416:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc_fdwait": null, "5242904:cgc__terminate": null, "5242912:cgc_transmit": null, "5242920:cgc_allocate": null, "5242928:cgc_rint": null, "5242936:cgc_deallocate": null, "5242944:cgc_log10": null, "5242952:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}