{"4210688:_init": "extern struct_0 *g_40e268;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40e268;\n
    if (g_40e268)\n
        v1 = g_40e268();\n
    return v1;\n
}\n
", "4210720:sub_404020": "extern unsigned long long g_40e280;\n
\n
long long sub_404020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40e280;\n
    goto *(4252296);\n
}\n
", "4210732:sub_40402c": null, "4210736:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210752:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4210768:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4210784:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4210800:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210816:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210832:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4210848:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libstdc++.so::cgc_rint();\n
    return;\n
}\n
", "4210864:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libstdc++.so::cgc_log10();\n
    return;\n
}\n
", "4210880:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4210896:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libstdc++.so::cgc_pow();\n
    return;\n
}\n
", "4210912:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4252240);\n
}\n
", "4210928:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4210965:sub_404115": null, "4210966:sub_404116": null, "4210976:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40e260;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4211017:sub_404149": null, "4211024:register_tm_clones": "extern unsigned long long g_40e270;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4211081:sub_404189": null, "4211088:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_40e250;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40e250)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4211141:sub_4041c5": null, "4211145:sub_4041c9": null, "4211152:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211161:sub_4041d9": null, "4211168:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211219:sub_404213": null, "4211232:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211283:sub_404253": null, "4211296:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211347:sub_404293": null, "4211360:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211433:sub_4042e9": null, "4211440:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211513:sub_404339": null, "4211520:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211571:sub_404373": null, "4211584:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4211644:sub_4043bc": null, "4211648:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4211708:sub_4043fc": null, "4211712:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211803:sub_40445b": null, "4211808:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::__ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = operator new[](1);\n
    a0->field_0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4211868:sub_40449c": null, "4211872:_ZN5CUtil6StringC1ERKS0_": "long long CUtil::String::__ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4211922:sub_4044d2": null, "4211936:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::SetInternal(struct_0 *a0, unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v2;  // rax\n
\n
    if (a0->field_0)\n
    {\n
        v0 = &a0->field_0->field_0;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    a0->field_8 = a1[1];\n
    a0->field_0 = operator new[](a0->field_8 + 1);\n
    cgc_memcpy(a0->field_0, a1[0], a0->field_8, a1);\n
    v2 = a0->field_0;\n
    v2[a0->field_8] = 0;\n
    return v2;\n
}\n
", "4212084:sub_404574": null, "4212096:_ZN5CUtil6StringC2EPKc": "long long CUtil::String::__base_ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4212146:sub_4045b2": null, "4212160:_ZN5CUtil6String11SetInternalEPKc": "long long CUtil::String::SetInternal(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v4;  // rcx\n
    unsigned long v5;  // rax\n
\n
    if (*(a0))\n
    {\n
        v0 = *(a0);\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    if (!a1)\n
    {\n
        *(a0) = operator new[](1);\n
        *(*(a0)) = 0;\n
        *((a0 + 8)) = 0;\n
        return a0;\n
    }\n
    *((a0 + 8)) = cgc_strlen(a1);\n
    v4 = operator new[](*((a0 + 8)) + 1);\n
    v5 = a0;\n
    *(a0) = v4;\n
    cgc_memcpy(*(v5), a1, *((v5 + 8)), v4);\n
    *((*(a0) + *((a0 + 8)))) = 0;\n
    return *(a0);\n
}\n
", "4212359:sub_404687": null, "4212368:_ZN5CUtil6StringD1Ev": "long long CUtil::String::__dtor__(unsigned long long a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4212451:sub_4046e3": null, "4212464:_ZNK5CUtil6StringeqERKS0_": "long long CUtil::String::operator== const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0[1] != a1[1])\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = !cgc_memcmp(a0[0], a1[0], a0[1], a1);\n
    return v0 & 1;\n
}\n
", "4212563:sub_404753": null, "4212576:_ZNK5CUtil6StringneERKS0_": "long long CUtil::String::operator!= const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    return (CUtil::String::operator== const(a0, a1) ^ 255) & 1;\n
}\n
", "4212618:sub_40478a": null, "4212624:_ZN5CUtil6StringaSERKS0_": "long long CUtil::String::operator=(void* a0, unsigned long long a1[2])\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212659:sub_4047b3": null, "4212672:_ZN5CUtil6StringaSEPKc": "long long CUtil::String::operator=(unsigned int a0, unsigned int a1)\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212707:sub_4047e3": null, "4212720:_ZNK5CUtil6StringplERKS0_": "long long CUtil::String::operator+ const(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1[2];  // [bp-0x28]\n
\n
    CUtil::String::__ctor__(v1, a0);\n
    v0 = CUtil::String::operator+=(v1, a1);\n
    CUtil::String::__dtor__(v1);\n
    return v0;\n
}\n
", "4212793:sub_404839": null, "4212800:_ZN5CUtil6StringpLERKS0_": "long long CUtil::String::operator+=(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
\n
    v2 = a0[1] + a1[1];\n
    v1 = operator new[](v2 + 1);\n
    cgc_memcpy(v1, a0[0], a0[1], v1);\n
    cgc_memcpy(&v1[a0[1]], a1[0], a1[1]);\n
    v1[a1[1] + a0[1]] = 0;\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[0] = v1;\n
    a0[1] = v2;\n
    return a0;\n
}\n
", "4213006:sub_40490e": null, "4213008:_ZNK5CUtil6String5c_strEv": "long long CUtil::String::c_str const(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4213025:sub_404921": null, "4213040:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Upper const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_islower(v0[*(a0)]))\n
            v0[*(a0)] = cgc_toupper(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213235:sub_4049f3": null, "4213248:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Lower const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_isupper(v0[*(a0)]))\n
            v0[*(a0)] = cgc_tolower(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213443:sub_404ac3": null, "4213456:_ZNK5CUtil6StringixERKm": "long long CUtil::String::operator[] const(unsigned long long a0[2], unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (*(a1) < a0[1])\n
    {\n
        v0 = *((a0[0] + *(a1)));\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4213567:sub_404b3f": null, "4213568:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::IsEmpty const(struct_0 *a0)\n
{\n
    return !a0->field_8;\n
}\n
", "4213595:sub_404b5b": null, "4213600:_ZNK5CUtil6String4TrimEm": "long long CUtil::String::Trim const(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    CUtil::String::SubString const();\n
    return a0;\n
}\n
", "4213657:sub_404b99": null, "4213664:_ZNK5CUtil6String9SubStringEmm": "extern unsigned long long g_40c034;\n
\n
long long CUtil::String::SubString const(unsigned long long a0[2], unsigned long long a1[2], char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
\n
    v5 = a0;\n
    v4 = a3;\n
    if (v4 > a1[1])\n
        v4 = a1[1];\n
    if (a2 < a1[1] && a2 < v4)\n
    {\n
        v3 = v4 - a2;\n
        v2 = operator new[](v3 + 1);\n
        v1 = 0;\n
        for (v0 = a2; v0 < v4; v0 += 1)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v2[v7] = *((a1[0] + v0));\n
        }\n
        v2[v1] = 0;\n
        CUtil::String::__base_ctor__(a0, v2);\n
        return a0;\n
    }\n
    CUtil::String::__base_ctor__(a0, &g_40c034);\n
    return a0;\n
}\n
", "4213933:sub_404cad": null, "4213936:_ZNK5CUtil6String10TrimSpacesEv": "long long CUtil::String::TrimSpaces const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1[1]; v0 += 1)\n
    {\n
        if (v0[a1[0]] != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(a0, a1, v0, 4294967295);\n
    return a0;\n
}\n
", "4214080:_ZN5CUtil6String5ToIntERj": "long long CUtil::String::ToInt(unsigned long long *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a1) = cgc_atoi(*(a0));\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4214164:sub_404d94": null, "4214176:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::GetLength const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4214194:sub_404db2": null, "4214208:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4214587:sub_404f3b": null, "4214592:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4214784:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4214842:sub_40503a": null, "4214848:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4215040:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        v0->field_10->field_8 = a0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4215141:sub_405165": null, "4215152:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4215433:sub_405289": null, "4215440:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4215545:sub_4052f9": null, "4215552:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long long v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4215854:sub_40542e": null, "4215856:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4215982:sub_4054ae": null, "4215984:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4216134:sub_405546": null, "4216144:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4216358:sub_405626": null, "4216368:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&v0, 1);\n
}\n
", "4216399:sub_40564f": null, "4216400:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4216709:sub_405785": null, "4216720:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4216888:sub_405838": null, "4216896:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4216979:sub_405893": null, "4216992:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4217033:sub_4058c9": null, "4217040:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long v3;  // rcx\n
\n
    while (true)\n
    {\n
        if (a0->field_100 < 0x100)\n
        {\n
            a0->field_100 = a0->field_100 + 1;\n
            (&a0->field_0)[rcx<8>] = a1;\n
            v1 = a2 + 1;\n
            return v1;\n
        }\n
        if (cgc_transmit(a0, a1, a2, v3))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v0))\n
        {\n
            a0->field_100 = a0->field_100 - *(&v0);\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4217254:sub_4059a6": null, "4217264:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4217334:sub_4059f6": null, "4217344:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217508:sub_405aa4": null, "4217520:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    void* v1;  // [bp-0x140]\n
    unsigned long long v2;  // [bp-0x138]\n
    char v3;  // [bp-0x130]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v5 = cgc_WRAPPER_BUFFER_PUTC;\n
    v4 = 0;\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(v2, v5, v1, a0, a1);\n
    if (v4 > 0)\n
    {\n
        if (!cgc_transmit(a0, a1, v8, v9))\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4217709:sub_405b6d": null, "4217712:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned int *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned int *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned int *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned int *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned int *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned int *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[2];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 > 160)\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[2];\n
                        v11 = v72;\n
                    }\n
                    else\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[2];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 <= 40)\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4219658:sub_40630a": null, "4219664:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4219824:cgc_vprintf": "long long cgc_vprintf(char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* **v2;  // [bp-0x20]\n
\n
    v2 = &cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4219898:sub_4063fa": null, "4219904:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4220068:sub_4064a4": null, "4220080:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4220180:sub_406514": null, "4220192:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4220484:sub_406644": null, "4220496:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v11;  // rax\n
    unsigned long v12;  // rcx\n
    unsigned long long v13;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v11 = v4;\n
            v4 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v12 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v12], v7, v12);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v13 = v4;\n
        v4 = v13 - 1;\n
        if (v13 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4221133:sub_4068cd": null, "4221136:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_406f61:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_406f61;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_406f57;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_406f57:\n
            goto LABEL_406f61;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4223482:sub_4071fa": null, "4223488:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4224135:sub_407487": null, "4224144:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4224678:sub_4076a6": null, "4224688:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4224706:sub_4076c2": null, "4224720:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4224745:sub_4076e9": null, "4224752:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4224978:sub_4077d2": null, "4224992:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4225266:sub_4078f2": null, "4225280:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4225368:sub_407958": null, "4225376:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4225533:sub_4079fd": null, "4225536:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(&v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4225699:sub_407aa3": null, "4225712:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < a1; v1 = *(&v0) + v1)\n
    {\n
        if (cgc_receive(a0, a1, v4, v5))\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4225872:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a1)\n
        {\n
            v0 = cgc_transmit(a0, a1, v6, v7);\n
            if (v0)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = (v1 + v2);\n
        }\n
        else\n
        {\n
            v4 = a1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4226013:sub_407bdd": null, "4226016:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4226082:sub_407c22": null, "4226096:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4226162:sub_407c72": null, "4226176:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4226347:sub_407d2b": null, "4226352:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a0[v1] != a1)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4226506:sub_407dca": null, "4226512:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (!cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
        *((v4 + v2)) = 0;\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4227006:sub_407fbe": null, "4227008:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227377:sub_408131": null, "4227392:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227566:sub_4081ee": null, "4227568:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = *(a0);\n
        v0 = *(a1);\n
        if (v1 < v0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        if (v1 > v0)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4227719:sub_408287": null, "4227728:_Z12HexCharToIntcRh": "long long HexCharToInt(unsigned long a0, char *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 >= 65 && a0 <= 70)\n
    {\n
        *(a1) = a0 + -55;\n
        goto LABEL_408337;\n
    }\n
    if (a0 >= 97 && a0 <= 102)\n
    {\n
        *(a1) = a0 + -87;\n
        goto LABEL_408337;\n
    }\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        *(a1) = a0 - 48;\n
LABEL_408337:\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4227919:sub_40834f": null, "4227920:_Z17ConvertToHexCharsPhj": "long long ConvertToHexChars(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x10]\n
    unsigned long v5;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1 * 2;\n
    v5 = v2;\n
    if (v5 < 0)\n
        v5 = -1;\n
    v1 = operator new[](v5);\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v6 = v0;\n
        cgc_sprintf(v1 + v0 * 2, \"$x\", (v3[v6] >> 4) & 15, v6, a4);\n
        v7 = v0;\n
        cgc_sprintf(v1 + v0 * 2 + 1, \"$x\", v3[v7] & 15, v7, a4);\n
    }\n
    return v1;\n
}\n
", "4228107:sub_40840b": null, "4228112:_Z7GetByteN5CUtil6StringEi": "long long GetByte(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned short v0;  // [bp-0x10]\n
    char v1;  // [bp-0xe]\n
    char v2;  // [bp-0xd]\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    HexCharToInt(*((CUtil::String::c_str const(a0) + a1)), &v2);\n
    HexCharToInt(*((CUtil::String::c_str const(a0) + a1 + 1)), &v1);\n
    v0 = v2 * 16;\n
    v0 += v1;\n
    return v0;\n
}\n
", "4228229:sub_408485": null, "4228240:_Z19ConvertBackHexCharsPhj": "long long ConvertBackHexChars(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x2b]\n
    unsigned short v2;  // [bp-0x2a]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    char *v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x10]\n
    unsigned long v9;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v10;  // rcx\n
\n
    v7 = a0;\n
    v6 = a1 >> 1;\n
    v9 = v6;\n
    if (v9 < 0)\n
        v9 = -1;\n
    v5 = operator new[](v9);\n
    v4 = 0;\n
    for (v3 = 0; v3 < a1; v3 += 2)\n
    {\n
        v2 = 0;\n
        HexCharToInt(v7[v3], &v1);\n
        HexCharToInt(v7[1 + v3], &v0);\n
        v2 = v1 * 16;\n
        v2 += v0;\n
        v10 = v4;\n
        v4 = v10 + 1;\n
        v5[v10] = v2;\n
    }\n
    return v5;\n
}\n
", "4228445:sub_40855d": null, "4228448:_Z13PrintHexBytesPhj": "long long PrintHexBytes(unsigned long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a3 = v0;\n
        cgc_printf(\"$x$x\", (*((a0 + v0)) >> 4) & 15, a3[a0] & 15, a3, a4);\n
    }\n
    return cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
}\n
", "4228561:sub_4085d1": null, "4228576:_ZN12CommsMessageC2Ev": "long long CommsMessage::__base_ctor__(void* a0)\n
{\n
    CUtil::String::__ctor__(a0);\n
    return CUtil::String::__ctor__(a0 + 16);\n
}\n
", "4228620:sub_40860c": null, "4228624:_ZN12CommsMessageD2Ev": "long long CommsMessage::__base_dtor__(unsigned long long a0[2])\n
{\n
    CUtil::String::__dtor__(a0 + 1);\n
    return CUtil::String::__dtor__(a0);\n
}\n
", "4228668:sub_40863c": null, "4228672:_Z4swapt": "long long swap(unsigned long a0)\n
{\n
    return (a0 & 255) * 0x100 | ((a0 & 0xff00) >> 8);\n
}\n
", "4228715:sub_40866b": null, "4228720:_Z8swap_intj": "long long swap_int(unsigned long a0)\n
{\n
    return (a0 >> 24) | a0 * 0x100 & 0xff0000 | (a0 >> 8) & 0xff00 | a0 * 0x1000000;\n
}\n
", "4228771:sub_4086a3": null, "4228784:_ZN15OutgoingMessage14SendAsExtendedEv": "typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned short field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_40c125;\n
\n
long long OutgoingMessage::SendAsExtended(struct_1 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x298]\n
    struct_0 *v1;  // [bp-0x290]\n
    struct_0 *v2;  // [bp-0x288]\n
    char *v3;  // [bp-0x278]\n
    unsigned long long v4;  // [bp-0x270]\n
    unsigned int v5;  // [bp-0x264]\n
    unsigned long v6;  // [bp-0x260]\n
    unsigned long long v7[2];  // [bp-0x258]\n
    unsigned long long v8[2];  // [bp-0x248]\n
    char v9;  // [bp-0x238]\n
    unsigned long long v10[2];  // [bp-0x30]\n
    char v11;  // [bp-0x20]\n
\n
    CUtil::String::__ctor__(&v11);\n
    CUtil::String::operator=(&v11, 4243749);\n
    CUtil::String::operator+=(&v11, &a0->padding_0[32]);\n
    CUtil::String::__base_ctor__(v10, \"0100\");\n
    CUtil::String::operator+=(&v11, v10);\n
    CUtil::String::__dtor__(v10);\n
    cgc_bzero(&v9, 0x200);\n
    v1 = &v9;\n
    cgc_sprintf(v1, \"$04x\", swap(a0->field_30), a3, a4);\n
    CUtil::String::__base_ctor__(v8, &v9);\n
    CUtil::String::operator+=(&v11, v8);\n
    CUtil::String::__dtor__(v8);\n
    cgc_bzero(&v9, 0x200);\n
    v2 = &v9;\n
    cgc_sprintf(v2, \"$08x\", swap_int(CUtil::String::GetLength const(&a0[1].padding_0[6]) >> 1), a3, a4);\n
    CUtil::String::__base_ctor__(v7, &v9);\n
    CUtil::String::operator+=(&v11, v7);\n
    CUtil::String::__dtor__(v7);\n
    CUtil::String::operator+=(&v11, &a0[1].padding_0[6]);\n
    v3 = CUtil::String::c_str const(&v11);\n
    v6 = ConvertBackHexChars(v3, CUtil::String::GetLength const(&v11));\n
    v4 = v6;\n
    v5 = cgc_write(v4, CUtil::String::GetLength const(&v11) >> 1);\n
    if (v5 == -1)\n
        cgc__terminate(a0);\n
    *(&v0) = v6;\n
    if (*(&v0))\n
        operator delete[](*(&v0));\n
    return CUtil::String::__dtor__(&v11);\n
}\n
", "4229330:sub_4088d2": null, "4229344:_ZN15OutgoingMessage11SendAsBasicEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned short field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int g_40c125;\n
\n
long long OutgoingMessage::SendAsBasic(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x288]\n
    struct_1 *v1;  // [bp-0x278]\n
    unsigned int v2;  // [bp-0x26c]\n
    unsigned long long v3;  // [bp-0x268]\n
    unsigned long long v4[2];  // [bp-0x260]\n
    unsigned long long v5[2];  // [bp-0x250]\n
    unsigned int v6;  // [bp-0x23c]\n
    char v7;  // [bp-0x238]\n
    unsigned long long v8[2];  // [bp-0x30]\n
    unsigned long long v9;  // [bp-0x20]\n
\n
    CUtil::String::__ctor__(&v9);\n
    CUtil::String::operator=(&v9, 4243749);\n
    CUtil::String::operator+=(&v9, &a0->padding_0[32]);\n
    CUtil::String::__base_ctor__(v8, \"0000\");\n
    CUtil::String::operator+=(&v9, v8);\n
    CUtil::String::__dtor__(v8);\n
    v1 = &v7;\n
    v6 = cgc_sprintf(v1, \"$04x\", swap(a0->field_30), a3, a4);\n
    CUtil::String::__base_ctor__(v5, &v7);\n
    CUtil::String::operator+=(&v9, v5);\n
    CUtil::String::__dtor__(v5);\n
    CUtil::String::__base_ctor__(v4, \"00000000\");\n
    CUtil::String::operator+=(&v9, v4);\n
    CUtil::String::__dtor__(v4);\n
    v3 = ConvertBackHexChars(CUtil::String::c_str const(&v9), 24);\n
    v2 = cgc_write(v3, 12);\n
    if (v2 == -1)\n
        cgc__terminate(a0);\n
    *(&v0) = v3;\n
    if (*(&v0))\n
        operator delete[](*(&v0));\n
    return CUtil::String::__dtor__(&v9);\n
}\n
", "4229736:sub_408a68": null, "4229744:_ZN12CommsMessage7SetBodyEN5CUtil6StringE": "long long CommsMessage::SetBody(unsigned long a0, unsigned long long a1[2])\n
{\n
    return CUtil::String::operator=(a0 + 16, a1);\n
}\n
", "4229775:sub_408a8f": null, "4229776:_ZN12CommsMessage7GetTypeEv": "long long CommsMessage::GetType(unsigned long a0)\n
{\n
    char v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x12]\n
\n
    v2 = 0;\n
    CUtil::String::__ctor__(&v1, a0 + 16);\n
    v2 = GetByte(&v1, 2) * 0x100;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0 + 16);\n
    v2 += GetByte(&v0, 0);\n
    CUtil::String::__dtor__(&v0);\n
    return v2;\n
}\n
", "4229908:sub_408b14": null, "4229920:_ZN12CommsMessage8GetValueEv": "long long CommsMessage::GetValue(unsigned long a0)\n
{\n
    char v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x12]\n
\n
    v2 = 0;\n
    CUtil::String::__ctor__(&v1, a0 + 16);\n
    v2 = GetByte(&v1, 6) * 0x100;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0 + 16);\n
    v2 += GetByte(&v0, 4);\n
    CUtil::String::__dtor__(&v0);\n
    return v2;\n
}\n
", "4230055:sub_408ba7": null, "4230064:_ZN12CommsMessage11GetLenValueEv": "long long CommsMessage::GetLenValue(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x12]\n
\n
    v2 = 0;\n
    CUtil::String::__ctor__(&v1, a0);\n
    v2 = GetByte(&v1, 6) * 0x100;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0);\n
    v2 += GetByte(&v0, 4);\n
    CUtil::String::__dtor__(&v0);\n
    return v2;\n
}\n
", "4230191:sub_408c2f": null, "4230192:_ZN15OutgoingMessage13SetExtMessageEjPh": "long long OutgoingMessage::SetExtMessage(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned long long v1[2];  // [bp-0x38]\n
    unsigned long long v2;  // [bp-0x28]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = ConvertToHexChars(a2, a1, a2, a3, a4);\n
    CUtil::String::__base_ctor__(v1, v2);\n
    CUtil::String::operator=(a0 + 56, v1);\n
    CUtil::String::__dtor__(v1);\n
    v4 = v2;\n
    *(&v0) = v4;\n
    if (v4)\n
    {\n
        v4 = operator delete[](*(&v0));\n
        return v4;\n
    }\n
    return v2;\n
}\n
", "4230307:sub_408ca3": null, "4230320:_ZN15OutgoingMessage10SetVersionEt": "long long OutgoingMessage::SetVersion(unsigned long a0, char a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned long long v1[2];  // [bp-0x30]\n
    unsigned long long v2;  // [bp-0x20]\n
    char v3;  // [bp-0x12]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    *(&v3) = *(&a1);\n
    v2 = ConvertToHexChars(&v3, 2, a2, a3, a4);\n
    CUtil::String::__base_ctor__(v1, v2);\n
    CUtil::String::operator=(a0 + 32, v1);\n
    CUtil::String::__dtor__(v1);\n
    v5 = v2;\n
    *(&v0) = v5;\n
    if (v5)\n
    {\n
        v5 = operator delete[](*(&v0));\n
        return v5;\n
    }\n
    return v2;\n
}\n
", "4230437:sub_408d25": null, "4230448:_ZN15IncomingMessage11GetSensorIdEv": "long long IncomingMessage::GetSensorId(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x14]\n
    char v3;  // [bp-0x12]\n
    char v4;  // [bp-0x11]\n
\n
    v4 = 12;\n
    v3 = 14;\n
    v2 = 0;\n
    CUtil::String::__ctor__(&v1, a0);\n
    v2 = GetByte(&v1, v3) * 0x100;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0);\n
    v2 += GetByte(&v0, v4);\n
    CUtil::String::__dtor__(&v0);\n
    return v2;\n
}\n
", "4230581:sub_408db5": null, "4230592:_ZN15IncomingMessage16GetSensorAddressEv": "long long IncomingMessage::GetSensorAddress(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x58]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x38]\n
    char v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    char v6;  // [bp-0x13]\n
    char v7;  // [bp-0x12]\n
    char v8;  // [bp-0x11]\n
\n
    v8 = 16;\n
    v7 = 18;\n
    v6 = 20;\n
    v5 = 22;\n
    v4 = 0;\n
    CUtil::String::__ctor__(&v3, a0);\n
    v4 = GetByte(&v3, v5) * 0x1000000;\n
    CUtil::String::__dtor__(&v3);\n
    CUtil::String::__ctor__(&v2, a0);\n
    v4 = GetByte(&v2, v6) * 0x10000 + v4;\n
    CUtil::String::__dtor__(&v2);\n
    CUtil::String::__ctor__(&v1, a0);\n
    v4 = GetByte(&v1, v7) * 0x100 + v4;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0);\n
    v4 = GetByte(&v0, v8) + v4;\n
    CUtil::String::__dtor__(&v0);\n
    return v4;\n
}\n
", "4230822:sub_408ea6": null, "4230832:_ZN15IncomingMessage20GetSensorCoefficientEv": "long long IncomingMessage::GetSensorCoefficient(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x58]\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x38]\n
    char v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    char v6;  // [bp-0x13]\n
    char v7;  // [bp-0x12]\n
    char v8;  // [bp-0x11]\n
\n
    v8 = 24;\n
    v7 = 26;\n
    v6 = 28;\n
    v5 = 30;\n
    v4 = 0;\n
    CUtil::String::__ctor__(&v3, a0);\n
    v4 = GetByte(&v3, v5) * 0x1000000;\n
    CUtil::String::__dtor__(&v3);\n
    CUtil::String::__ctor__(&v2, a0);\n
    v4 = GetByte(&v2, v6) * 0x10000 + v4;\n
    CUtil::String::__dtor__(&v2);\n
    CUtil::String::__ctor__(&v1, a0);\n
    v4 = GetByte(&v1, v7) * 0x100 + v4;\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0);\n
    v4 = GetByte(&v0, v8) + v4;\n
    CUtil::String::__dtor__(&v0);\n
    return v4;\n
}\n
", "4231062:sub_408f96": null, "4231072:_ZN15IncomingMessage9ReadInputEv": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    char field_20;\n
} struct_0;\n
\n
long long IncomingMessage::ReadInput(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[2];  // [bp-0x278]\n
    unsigned long long v1[2];  // [bp-0x268]\n
    unsigned long long v2[2];  // [bp-0x258]\n
    char v3;  // [bp-0x248]\n
    unsigned int v4;  // [bp-0x244]\n
    unsigned int v5;  // [bp-0x240]\n
    unsigned short v6;  // [bp-0x23a]\n
    struct_1 *v7;  // [bp-0x238]\n
    struct_1 *v8;  // [bp-0x230], Other Possible Types: unsigned long\n
    char v9;  // [bp-0x219]\n
    char v10;  // [bp-0x218]\n
    struct_1 *v12;  // rax\n
    unsigned long v13;  // rax\n
\n
    v8 = 0;\n
    v7 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            do\n
            {\n
                cgc_receive_bytes(&v9, 1);\n
            } while (v9 != 165);\n
            v12 = v8;\n
            v8 = v12 + 1;\n
            *((&v10 + v12)) = v9;\n
            cgc_receive_bytes(&v9, 1);\n
            if (v9 != 90)\n
                break;\n
            v13 = v8;\n
            v8 = v13 + 1;\n
            (&v10)[v13] = v9;\n
            v6 = 0;\n
            cgc_receive_bytes(&(&v10)[v8], 2);\n
            v6 = *(&(&v10)[v8]);\n
            v8 += 2;\n
            if (v6 <= 508)\n
            {\n
                cgc_receive_bytes(&(&v10)[v8], v6);\n
                v7 = v8 * 2;\n
                v8 = v6 + v8;\n
                v5 = 0;\n
                for (v4 = 0; v4 < v6; v4 += 1)\n
                {\n
                    v5 += (v4 + 1) * (&v10)[v4];\n
                }\n
                *(&v3) = *(&(&v10)[v6]);\n
                cgc_memcpy(&v3, &(&v10)[v6], 4);\n
                if (v5 != *(&v3))\n
                {\n
                    a0->field_20 = 0;\n
                    return a0;\n
                }\n
                a0->field_20 = 1;\n
                (&v10)[v8] = 0;\n
                CUtil::String::__base_ctor__(v2, ConvertToHexChars(&v10, v8, 4, a3, a4));\n
                CUtil::String::operator=(a0, v2);\n
                CUtil::String::__dtor__(v2);\n
                CUtil::String::__base_ctor__(v0, ConvertToHexChars(&v10, v8, 4, a3, a4));\n
                CUtil::String::SubString const(v1, v0, v7, &v7[2 * v6 + 8]);\n
                CUtil::String::operator=(&a0->padding_0[16], v1);\n
                CUtil::String::__dtor__(v1);\n
                return CUtil::String::__dtor__(v0);\n
            }\n
        }\n
    }\n
}\n
", "4231868:sub_4092bc": null, "4231872:_ZN15IncomingMessage16GetProgramValuesEjRjS0_S0_": "long long IncomingMessage::GetProgramValues(unsigned long long a0, unsigned long a1, unsigned int *a2, unsigned long a3, unsigned int *a4)\n
{\n
    char v0;  // [bp-0x100]\n
    char v1;  // [bp-0xf0]\n
    char v2;  // [bp-0xe0]\n
    char v3;  // [bp-0xd0]\n
    char v4;  // [bp-0xc0]\n
    char v5;  // [bp-0xb0]\n
    char v6;  // [bp-0xa0]\n
    char v7;  // [bp-0x90]\n
    char v8;  // [bp-0x80]\n
    char v9;  // [bp-0x70]\n
    char v10;  // [bp-0x60]\n
    char v11;  // [bp-0x50]\n
    char v12;  // [bp-0x3c]\n
    char v13;  // [bp-0x3b]\n
    char v14;  // [bp-0x3a]\n
    char v15;  // [bp-0x39]\n
    unsigned int v16;  // [bp-0x38]\n
    unsigned int v17;  // [bp-0x34]\n
    unsigned int *v20;  // rax\n
    unsigned int *v22;  // rax\n
    unsigned int v23;  // ecx\n
    unsigned int *v24;  // rax\n
    unsigned int v25;  // ecx\n
    unsigned int *v26;  // rax\n
    unsigned int v27;  // ecx\n
    unsigned int *v28;  // rax\n
    unsigned int v29;  // ecx\n
    unsigned int *v30;  // rax\n
    unsigned int *v32;  // rax\n
    unsigned int *v34;  // rax\n
    unsigned int *v35;  // rax\n
\n
    v17 = 16;\n
    v16 = 24;\n
    v15 = a1;\n
    v14 = a1 + 2;\n
    v13 = a1 + 4;\n
    v12 = a1 + 6;\n
    CUtil::String::__ctor__(&v11, a0);\n
    *(a2) = GetByte(&v11, v12) * 0x1000000;\n
    CUtil::String::__dtor__(&v11);\n
    CUtil::String::__ctor__(&v10, a0);\n
    v20 = a2;\n
    *(v20) = (GetByte(&v10, v13) * 0x10000) + *(v20);\n
    CUtil::String::__dtor__(&v10);\n
    CUtil::String::__ctor__(&v9, a0);\n
    v22 = a2;\n
    *(v22) = (GetByte(&v9, v14) * 0x100) + *(v22);\n
    CUtil::String::__dtor__(&v9);\n
    CUtil::String::__ctor__(&v8, a0);\n
    v23 = GetByte(&v8, v15);\n
    v24 = a2;\n
    *(v24) = v23 + *(v24);\n
    CUtil::String::__dtor__(&v8);\n
    v15 = a1 + 8;\n
    v14 = a1 + 10;\n
    v13 = a1 + 12;\n
    v12 = a1 + 14;\n
    CUtil::String::__ctor__(&v7, a0);\n
    *(*(&v23)) = GetByte(&v7, v12) * 0x1000000;\n
    CUtil::String::__dtor__(&v7);\n
    CUtil::String::__ctor__(&v6, a0);\n
    v25 = GetByte(&v6, v13) * 0x10000;\n
    v26 = *(&v23);\n
    *(v26) = v25 + *(v26);\n
    CUtil::String::__dtor__(&v6);\n
    CUtil::String::__ctor__(&v5, a0);\n
    v27 = GetByte(&v5, v14) * 0x100;\n
    v28 = *(&v23);\n
    *(v28) = v27 + *(v28);\n
    CUtil::String::__dtor__(&v5);\n
    CUtil::String::__ctor__(&v4, a0);\n
    v29 = GetByte(&v4, v15);\n
    v30 = *(&v23);\n
    *(v30) = v29 + *(v30);\n
    CUtil::String::__dtor__(&v4);\n
    v15 = a1 + 16;\n
    v14 = a1 + 18;\n
    v13 = a1 + 20;\n
    v12 = a1 + 22;\n
    CUtil::String::__ctor__(&v3, a0);\n
    *(a4) = GetByte(&v3, v12) * 0x1000000;\n
    CUtil::String::__dtor__(&v3);\n
    CUtil::String::__ctor__(&v2, a0);\n
    v32 = a4;\n
    *(v32) = (GetByte(&v2, v13) * 0x10000) + *(v32);\n
    CUtil::String::__dtor__(&v2);\n
    CUtil::String::__ctor__(&v1, a0);\n
    v34 = a4;\n
    *(v34) = (GetByte(&v1, v14) * 0x100) + *(v34);\n
    CUtil::String::__dtor__(&v1);\n
    CUtil::String::__ctor__(&v0, a0);\n
    v35 = a4;\n
    *(v35) = GetByte(&v0, v15) + *(v35);\n
    return CUtil::String::__dtor__(&v0);\n
}\n
", "4232718:sub_40960e": null, "4232720:_ZN10ControllerC2Ev": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
    char padding_2a[2];\n
    unsigned int field_2c;\n
    char field_30;\n
    char field_31;\n
    char padding_32[6];\n
    unsigned long long field_38;\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    char field_48;\n
} struct_0;\n
\n
long long Controller::__base_ctor__(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v3;  // rdi\n
\n
    v1 = a0;\n
    v0 = v1;\n
    CUtil::DoubleListDeclare::__base_ctor__(v0);\n
    Sensor::__ctor__(&v0[1].padding_0[7]);\n
    OutgoingMessage::__base_ctor__(&v0[1].padding_0[39]);\n
    IncomingMessage::__base_ctor__(&v0[2].padding_0[38]);\n
    v3 = v0;\n
    v3->field_28 = 0;\n
    v3->field_40 = 266;\n
    v3->field_2c = -1;\n
    v3->field_30 = 0;\n
    v3->field_31 = 0;\n
    v3->field_38 = 0x4052c00000000000;\n
    v3->field_44 = 0;\n
    v3->field_48 = 0;\n
    Controller::ClearBackupProgram(v3);\n
    return Controller::ClearProgram(v0);\n
}\n
", "4232863:sub_40969f": null, "4232864:_ZN10Controller18ClearBackupProgramEv": "long long Controller::ClearBackupProgram(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    for (v1 = 0; v1 < 10; v1 = v3)\n
    {\n
        ControllerProgram::setStepType(v0 + 384 + v1 * 16, 0);\n
        ControllerProgram::setSensorId(v0 + 384 + v1 * 16, 0);\n
        ControllerProgram::setSetTemp(v0 + 384 + v1 * 16, 0);\n
        ControllerProgram::setDuration(v0 + 384 + v1 * 16, 0);\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4233037:sub_40974d": null, "4233040:_ZN10Controller12ClearProgramEv": "long long Controller::ClearProgram(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    for (v1 = 0; v1 < 10; v1 = v3)\n
    {\n
        ControllerProgram::setStepType(v0 + 224 + v1 * 16, 0);\n
        ControllerProgram::setSensorId(v0 + 224 + v1 * 16, 0);\n
        ControllerProgram::setSetTemp(v0 + 224 + v1 * 16, 0);\n
        ControllerProgram::setDuration(v0 + 224 + v1 * 16, 0);\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4233213:sub_4097fd": null, "4233216:_ZN10ControllerD2Ev": "long long Controller::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    IncomingMessage::__base_dtor__(a0 + 184);\n
    OutgoingMessage::__base_dtor__(a0 + 112);\n
    Sensor::__base_dtor__(a0 + 80);\n
    return CUtil::DoubleListDeclare::__base_dtor__(a0);\n
}\n
", "4233298:sub_409852": null, "4233312:_ZN10Controller9AddSensorEP6Sensor": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long Controller::AddSensor(struct_0 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0->field_28 >= 10)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    CUtil::DoubleList::AddLast(a0, a1);\n
    a0->field_28 = a0->field_28 + 1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4233404:sub_4098bc": null, "4233408:_ZN10Controller9SetSensorEtb": "long long Controller::SetSensor(unsigned long long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v1;  // [bp-0x1b]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = a2 & 1;\n
    v0 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        else if (Sensor::GetType(v0) != a1)\n
        {\n
            v0 = CUtil::DoubleList::GetNext(a0, v0);\n
        }\n
        else\n
        {\n
            Sensor::SetEnabled(v0, v1 & 1);\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4233554:sub_409952": null, "4233568:_ZN10Controller12RemoveSensorEt": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long Controller::RemoveSensor(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v2;  // [bp-0x9]\n
\n
    v1 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        if (Sensor::GetType(v1) == a1)\n
            break;\n
        v1 = CUtil::DoubleList::GetNext(a0, v1);\n
    }\n
    v0 = v1;\n
    if (v0)\n
    {\n
        Sensor::__base_dtor__(v0);\n
        operator delete(v0);\n
    }\n
    a0->field_28 = a0->field_28 - 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4233741:sub_409a0d": null, "4233744:_ZN10Controller14GetSensorCountEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long Controller::GetSensorCount(struct_0 *a0)\n
{\n
    return a0->field_28;\n
}\n
", "4233762:sub_409a22": null, "4233776:_ZN10Controller15PrintSensorListEv": "long long Controller::PrintSensorList(unsigned long long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18], Other Possible Types: unsigned long long\n
\n
    cgc_printf(\"sl:\", a1, a2, a3, a4);\n
    for (v0 = CUtil::DoubleList::GetFirst(a0); v0; v0 = CUtil::DoubleList::GetNext(a0, v0))\n
    {\n
        cgc_printf(\"$d \", Sensor::GetType(v0), a2, a3, a4);\n
    }\n
    return cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
}\n
", "4233901:sub_409aad": null, "4233904:_ZN10Controller10setPowerOnEb": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
    char field_30;\n
    char field_31;\n
} struct_0;\n
\n
long long Controller::setPowerOn(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a1 & 1;\n
    a0->field_30 = v0 & 1;\n
    v2 = v0 & 1;\n
    if (!v2)\n
    {\n
        v2 = a0;\n
        a0->field_31 = 0;\n
        a0->field_2c = -1;\n
    }\n
    return v2;\n
}\n
", "4233971:sub_409af3": null, "4233984:_ZN10Controller10setSetTempEi": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
long long Controller::setSetTemp(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a1 <= 350 && a1 >= 175)\n
    {\n
        a0->field_44 = a1;\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4234062:sub_409b4e": null, "4234064:_ZN10Controller14IsSensorInListEt": "long long Controller::IsSensorInList(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v1;  // [bp-0x9]\n
\n
    v0 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if (Sensor::GetType(v0) == a1)\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 = CUtil::DoubleList::GetNext(a0, v0);\n
    }\n
}\n
", "4234186:sub_409bca": null, "4234192:_ZN10Controller13BackupProgramEv": "long long Controller::BackupProgram(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rax\n
    unsigned long long v5[2];  // rcx\n
    unsigned long long v6[2];  // rax\n
\n
    v3 = a0;\n
    v0 = a0;\n
    for (v1 = 0; v1 < 10; v1 = v3)\n
    {\n
        v4 = v0;\n
        v5 = v4 + 224 + v1 * 16;\n
        v6 = v4 + 384 + v1 * 16;\n
        v6[0] = v5[0];\n
        v6[1] = v5[1];\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4234297:sub_409c39": null, "4234304:_ZN10Controller13RevertProgramEv": "long long Controller::RevertProgram(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rax\n
    unsigned long long v5[2];  // rcx\n
    unsigned long long v6[2];  // rax\n
\n
    v3 = a0;\n
    v0 = a0;\n
    for (v1 = 0; v1 < 10; v1 = v3)\n
    {\n
        v4 = v0;\n
        v5 = v4 + 384 + v1 * 16;\n
        v6 = v4 + 224 + v1 * 16;\n
        v6[0] = v5[0];\n
        v6[1] = v5[1];\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4234409:sub_409ca9": null, "4234416:_ZN10Controller13PrintProgramsEv": "long long Controller::PrintPrograms(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
\n
    v6 = a0;\n
    v3 = a0;\n
    for (v4 = 0; v4 < 10; v4 = v6)\n
    {\n
        v0 = ControllerProgram::getStepType(v3 + 224 + v4 * 16);\n
        v1 = ControllerProgram::getSensorId(v3 + 224 + v4 * 16);\n
        v2 = ControllerProgram::getSetTemp(v3 + 224 + v4 * 16);\n
        cgc_printf(\"Program: $x $x $x $x\\n
\", v0, v1, v2, ControllerProgram::getDuration(v3 + 224 + v4 * 16));\n
        v6 = v4 + 1;\n
    }\n
    return v6;\n
}\n
", "4234616:sub_409d78": null, "4234624:_ZN5CUtil17DoubleListDeclareI6SensorLj16EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 16);\n
}\n
", "4234656:_ZN15OutgoingMessageC2Ev": "long long OutgoingMessage::__base_ctor__(void* a0)\n
{\n
    CommsMessage::__base_ctor__(a0);\n
    CUtil::String::__ctor__(a0 + 32);\n
    return CUtil::String::__ctor__(a0 + 56);\n
}\n
", "4234713:sub_409dd9": null, "4234720:_ZN15IncomingMessageC2Ev": "long long IncomingMessage::__base_ctor__(void* a0)\n
{\n
    return CommsMessage::__base_ctor__(a0);\n
}\n
", "4234747:sub_409dfb": null, "4234752:_ZN5CUtil10DoubleListI6SensorE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
        {\n
            Sensor::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v2;\n
}\n
", "4234848:_ZN15IncomingMessageD2Ev": "long long IncomingMessage::__base_dtor__(unsigned long long a0[2])\n
{\n
    return CommsMessage::__base_dtor__(a0);\n
}\n
", "4234875:sub_409e7b": null, "4234880:_ZN15OutgoingMessageD2Ev": "long long OutgoingMessage::__base_dtor__(unsigned long long a0[2])\n
{\n
    CUtil::String::__dtor__(&a0[3 + 1]);\n
    CUtil::String::__dtor__(a0 + 2);\n
    return CommsMessage::__base_dtor__(a0);\n
}\n
", "4234937:sub_409eb9": null, "4234944:_ZN5CUtil17DoubleListDeclareI6SensorLj16EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4234971:sub_409edb": null, "4234976:_ZN5CUtil10DoubleListI6SensorE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4235076:sub_409f44": null, "4235088:_ZN5CUtil10DoubleListI6SensorE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4235164:sub_409f9c": null, "4235168:_ZN6Sensor7GetTypeEv": "long long Sensor::GetType(unsigned short *a0)\n
{\n
    return *(a0);\n
}\n
", "4235185:sub_409fb1": null, "4235200:_ZN6Sensor10SetEnabledEb": "typedef struct struct_0 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_0;\n
\n
long long Sensor::SetEnabled(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x11]\n
\n
    v0 = a1 & 1;\n
    a0->field_c = v0 & 1;\n
    return a0;\n
}\n
", "4235231:sub_409fdf": null, "4235232:_ZN5CUtil10DoubleListI6SensorE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4235378:sub_40a072": null, "4235392:_ZN17ControllerProgram11setStepTypeEi": "long long ControllerProgram::setStepType(unsigned int *a0, unsigned long a1)\n
{\n
    *(a0) = a1;\n
    return a0;\n
}\n
", "4235414:sub_40a096": null, "4235424:_ZN17ControllerProgram11setSensorIdEi": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long ControllerProgram::setSensorId(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_4 = a1;\n
    return a0;\n
}\n
", "4235447:sub_40a0b7": null, "4235456:_ZN17ControllerProgram10setSetTempEi": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long ControllerProgram::setSetTemp(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_8 = a1;\n
    return a0;\n
}\n
", "4235479:sub_40a0d7": null, "4235488:_ZN17ControllerProgram11setDurationEi": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long ControllerProgram::setDuration(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_c = a1;\n
    return a0;\n
}\n
", "4235511:sub_40a0f7": null, "4235520:_ZN17ControllerProgram11getStepTypeEv": "long long ControllerProgram::getStepType(unsigned int *a0)\n
{\n
    return *(a0);\n
}\n
", "4235536:_ZN17ControllerProgram11getSensorIdEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long ControllerProgram::getSensorId(struct_0 *a0)\n
{\n
    return a0->field_4;\n
}\n
", "4235553:sub_40a121": null, "4235568:_ZN17ControllerProgram10getSetTempEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long ControllerProgram::getSetTemp(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4235585:sub_40a141": null, "4235600:_ZN17ControllerProgram11getDurationEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long ControllerProgram::getDuration(struct_0 *a0)\n
{\n
    return a0->field_c;\n
}\n
", "4235617:sub_40a161": null, "4235632:_ZN5CUtil10DoubleListI6SensorED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4235689:sub_40a1a9": null, "4235696:_ZN5CUtil10DoubleLinkI6SensorED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4235723:sub_40a1cb": null, "4235728:_ZN5CUtil10DoubleLinkI6SensorE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4235819:sub_40a22b": null, "4235824:_ZN5CUtil10DoubleListI6SensorEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4235922:sub_40a292": null, "4235936:_ZN5CUtil10DoubleLinkI6SensorEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4235965:sub_40a2bd": null, "4235968:_ZN5CUtil10DoubleListI6SensorE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4236001:sub_40a2e1": null, "4236016:_ZN5CUtil10DoubleLinkI6SensorE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4236033:sub_40a301": null, "4236048:_ZN6SensorC1Ev": "long long Sensor::__ctor__(unsigned long a0)\n
{\n
    return CUtil::DoubleLink::__base_ctor__(a0 + 16);\n
}\n
", "4236079:sub_40a32f": null, "4236080:_ZN6SensorD2Ev": "long long Sensor::__base_dtor__(unsigned long a0)\n
{\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 16);\n
}\n
", "4236111:sub_40a34f": null, "4236112:_ZN6SensorC2Eiiib": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
long long Sensor::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x1d]\n
\n
    v0 = a4 & 1;\n
    CUtil::DoubleLink::__base_ctor__(&a0[1].padding_2[1]);\n
    a0->field_0 = a1;\n
    a0->field_4 = a2;\n
    a0->field_8 = a3;\n
    a0->field_c = v0 & 1;\n
    return a0;\n
}\n
", "4236195:sub_40a3a3": null, "4236208:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x378]\n
    int s_320;  // [bp-0x320], Other Possible Types: unsigned long\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // [bp-0x36c]\n
    unsigned long v2;  // [bp-0x368]\n
    unsigned long v3;  // [bp-0x360]\n
    unsigned int v4;  // [bp-0x358]\n
    unsigned int v5;  // [bp-0x350]\n
    unsigned int v6;  // [bp-0x34c]\n
    unsigned int v7;  // [bp-0x348]\n
    unsigned int v8;  // [bp-0x344]\n
    unsigned int v9;  // [bp-0x340]\n
    unsigned int v10;  // [bp-0x33c]\n
    unsigned int v11;  // [bp-0x338]\n
    unsigned int v12;  // [bp-0x334]\n
    unsigned int v13;  // [bp-0x32c]\n
    unsigned int v14;  // [bp-0x328]\n
    char v15;  // [bp-0x322]\n
    char v16;  // [bp-0x321]\n
    unsigned int v17;  // [bp-0x314]\n
    unsigned int v18;  // [bp-0x310]\n
    unsigned short v19;  // [bp-0x30a]\n
    char v20;  // [bp-0x308]\n
    unsigned int v21;  // [bp-0x28c]\n
    unsigned int v22;  // [bp-0x288]\n
    char v23;  // [bp-0x284]\n
    unsigned int v24;  // [bp-0x280]\n
    unsigned int v25;  // [bp-0x27c]\n
    unsigned int v26;  // [bp-0x278]\n
    unsigned int v27;  // [bp-0x274]\n
    unsigned int v28;  // [bp-0x270]\n
    unsigned int v29;  // [bp-0x26c]\n
    unsigned int v30;  // [bp-0x268]\n
    unsigned int v31;  // [bp-0x264]\n
    unsigned int v32;  // [bp-0x260]\n
    unsigned short v33;  // [bp-0x25a]\n
    unsigned int v34;  // [bp-0x258]\n
    unsigned int v35;  // [bp-0x254]\n
    char v36;  // [bp-0x250]\n
    char v37;  // [bp-0x240]\n
    char v38;  // [bp-0x160]\n
    char *v39;  // [bp-0x20]\n
    unsigned long v40;  // [bp-0x18]\n
    unsigned int v41;  // [bp-0x10]\n
    unsigned int v42;  // [bp-0xc]\n
    unsigned long v44;  // sil, Other Possible Types: unsigned long long\n
    unsigned long long v50;  // rcx\n
    unsigned int v51;  // eax\n
    struct_0 *v53;  // rdi\n
    unsigned long v55;  // rdx\n
    unsigned long long v56;  // rcx\n
    unsigned int v57;  // eax\n
    struct_0 *v58;  // rdi\n
    unsigned long long v59;  // xmm0lq\n
    unsigned long long v62;  // xmm0lq\n
    struct_0 *v68;  // rdi\n
    int v69;  // xmm0\n
\n
    v42 = 0;\n
    v41 = a0;\n
    v40 = a1;\n
    v39 = 0x4347c000;\n
    Controller::__base_ctor__(&v37);\n
    *(&v4) = Controller::GetMsgOut(&v37);\n
    v44 = Controller::GetVersion(&v37);\n
    OutgoingMessage::SetVersion(*(&v4), v44, a2, a3, a4);\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            IncomingMessage::ReadInput(Controller::GetMsgIn(&v37), v44, a2, a3, 1);\n
            v3 = CommsMessage::GetLenValue(Controller::GetMsgIn(&v37));\n
            CommsMessage::GetMessage(&v36, Controller::GetMsgIn(&v37));\n
            v2 = (CUtil::String::GetLength const(&v36) >> 1) - 4;\n
            CUtil::String::__dtor__(&v36);\n
            a3 = v2;\n
            if (v3 == a3)\n
                break;\n
            cgc_printf(\"Error: length is too long\\n
\", v44, a2, a3, 1);\n
        }\n
        a3 = CommsMessage::GetType(Controller::GetMsgIn(&v37));\n
        v1 = a3;\n
        if (a3 == 1)\n
        {\n
            v35 = CommsMessage::GetValue(Controller::GetMsgIn(&v37));\n
            Controller::setPowerOn(&v37, -(v35 == 1) & 1);\n
            OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
            OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
        }\n
        else if (v1 == 2)\n
        {\n
            v34 = CommsMessage::GetValue(Controller::GetMsgIn(&v37));\n
            if (!(Controller::setSetTemp(&v37, v34) & 1))\n
            {\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 1);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 1, a2, a3, 1);\n
            }\n
            else\n
            {\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
            }\n
        }\n
        else if (v1 == 3)\n
        {\n
            if ((Controller::IsSensorInList(&v37, IncomingMessage::GetSensorId(Controller::GetMsgIn(&v37))) & 1))\n
            {\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 7);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 7, a2, a3, 1);\n
            }\n
            else if (Controller::GetSensorCount(&v37) >= 10)\n
            {\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 8);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 8, a2, a3, 1);\n
            }\n
            else\n
            {\n
                v33 = IncomingMessage::GetSensorId(Controller::GetMsgIn(&v37));\n
                v32 = IncomingMessage::GetSensorAddress(Controller::GetMsgIn(&v37));\n
                v31 = IncomingMessage::GetSensorCoefficient(Controller::GetMsgIn(&v37));\n
                v0 = operator new(32);\n
                Sensor::__base_ctor__(v0, v33, v32, v31, 1);\n
                Controller::AddSensor(&v37, v0);\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
            }\n
        }\n
        else\n
        {\n
            if (v1 == 4)\n
            {\n
                v30 = CommsMessage::GetValue(Controller::GetMsgIn(&v37));\n
                if ((Controller::IsSensorInList(&v37, v30) & 1))\n
                {\n
                    Controller::RemoveSensor(&v37, v30);\n
                    OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
                    OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
                }\n
                else\n
                {\n
                    OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 6);\n
                    OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 6, a2, a3, 1);\n
                }\n
            }\n
            else if (v1 == 5)\n
            {\n
                if (!CommsMessage::GetValue(Controller::GetMsgIn(&v37)))\n
                    Controller::DisableSmokeSensor(&v37);\n
                else\n
                    Controller::EnableSmokeSensor(&v37);\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
            }\n
            else if (v1 == 6)\n
            {\n
                v29 = CommsMessage::GetValue(Controller::GetMsgIn(&v37));\n
                if (v29 > 10)\n
                {\n
                    OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 4);\n
                    OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 4, a2, a3, 1);\n
                }\n
                else\n
                {\n
                    v28 = 16;\n
                    v27 = 24;\n
                    Controller::BackupProgram(&v37);\n
                    Controller::ClearProgram(&v37);\n
                    v26 = 0;\n
                    v25 = 0;\n
                    while (true)\n
                    {\n
                        if (v25 >= v29)\n
                        {\n
                            OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 0);\n
                            OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 0, a2, a3, 1);\n
                            Controller::ClearBackupProgram(&v37);\n
                            break;\n
                        }\n
                        a3 = v27 * v25;\n
                        v21 = v28 + a3;\n
                        IncomingMessage::GetProgramValues(Controller::GetMsgIn(&v37), v21, &v24, &v23, &v22);\n
                        if (v24)\n
                        {\n
                            if (v24 != 1)\n
                            {\n
                                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 4);\n
                                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 4, a2, a3, 1);\n
                                Controller::RevertProgram(&v37);\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                if (*(&v23) < 1800)\n
                                {\n
                                    OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 2);\n
                                    OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 2, a2, a3, 1);\n
                                    Controller::RevertProgram(&v37);\n
                                    break;\n
                                }\n
                            }\n
                        }\n
                        else\n
                        {\n
                            if (!(Controller::IsSensorInList(&v37, *(&v23)) & 1) && *(&v23))\n
                            {\n
                                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 3);\n
                                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 3, a2, a3, 1);\n
                                Controller::RevertProgram(&v37);\n
                                break;\n
                            }\n
                        }\n
                        ControllerProgram::setStepType(&(&v38)[16 * v26], v24);\n
                        if (v24)\n
                            ControllerProgram::setDuration(&(&v38)[16 * v26], *(&v23));\n
                        else\n
                            ControllerProgram::setSensorId(&(&v38)[16 * v26], *(&v23));\n
                        if (v22 < 175)\n
                        {\n
LABEL_40ac00:\n
                            OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 1);\n
                            OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 1, a2, a3, 1);\n
                            Controller::RevertProgram(&v37);\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            if (!(v22 <= 350))\n
                                goto LABEL_40ac00;\n
                            ControllerProgram::setSetTemp(&(&v38)[16 * v26], v22);\n
                            v26 += 1;\n
                            v25 += 1;\n
                        }\n
                    }\n
                }\n
            }\n
            else if (v1 == 7)\n
            {\n
                cgc_bzero(&v20, 0x78);\n
                for (v18 = 0; v18 < 10; v18 += 1)\n
                {\n
                    v19 = ControllerProgram::getStepType(&(&v38)[16 * v18]);\n
                    *(&(&v20)[12 * v18]) = v19;\n
                    if (v19)\n
                        v19 = ControllerProgram::getDuration(&(&v38)[16 * v18]);\n
                    else\n
                        v19 = ControllerProgram::getSensorId(&(&v38)[16 * v18]);\n
                    *(&(&v20)[4 + 12 * v18]) = v19;\n
                    v19 = ControllerProgram::getSetTemp(&(&v38)[16 * v18]);\n
                    a3 = v19;\n
                    *(&(&v20)[8 + 12 * v18]) = a3;\n
                }\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 7);\n
                v44 = 120;\n
                OutgoingMessage::SetExtMessage(Controller::GetMsgOut(&v37), 120, &v20, a3, 1);\n
                OutgoingMessage::SendAsExtended(Controller::GetMsgOut(&v37), 120, a2, a3, 1);\n
            }\n
            else if (v1 == 8)\n
            {\n
                v7 = Controller::GetVersion(&v37);\n
                v8 = Controller::getSetTemp(&v37);\n
                Controller::getCurrentTemp(&v37);\n
                v9 = v69;\n
                v50 = 1;\n
                v51 = ((Controller::getPowerOn(&v37) & 1) == 1 ? 0 : 1);\n
                v10 = v51;\n
                v53 = &v37;\n
                v55 = Controller::getHeaterOn() & 1;\n
                v56 = 1;\n
                v57 = (v55 == 1 ? 0 : 1);\n
                v11 = v57;\n
                v58 = &v37;\n
                a2 = Controller::IsSmokeSensorEnabled() & 1;\n
                a3 = 1;\n
                v12 = (a2 == 1 ? 0 : 1);\n
                v68 = &v37;\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(), 8);\n
                v44 = 24;\n
                OutgoingMessage::SetExtMessage(Controller::GetMsgOut(&v37), 24, &v7, 1, 1);\n
                OutgoingMessage::SendAsExtended(Controller::GetMsgOut(&v37), 24, a2, 1, 1);\n
            }\n
            else if (v1 == 9)\n
            {\n
                v17 = CommsMessage::GetValue(Controller::GetMsgIn(&v37));\n
                Controller::getCurrentTemp(&v37);\n
                s_320 = v69;\n
                v16 = Controller::getPowerOn(&v37) & 1;\n
                v15 = Controller::getHeaterOn(&v37) & 1;\n
                v14 = Controller::getSetTemp(&v37);\n
                for (v13 = 0; v13 < v17; v13 += 1)\n
                {\n
                    if ((v16 & 1) == 1)\n
                    {\n
                        if ((v15 & 1) != 1)\n
                        {\n
                            v62 = s_320;\n
                            if ((((CmpF(v59, 0x4052c00000000000) & 69) | ((CmpF(v59, 0x4052c00000000000) & 69) >> 6)) & 1) != 1)\n
                            {\n
                                tmp_7 = SubV(tmp_9, tmp_8);\n
                                *(&s_320) = tmp_7;\n
                            }\n
                            if ((((CmpF(v14 - 5, s_320) & 69) | ((CmpF(v14 - 5, s_320) & 69) >> 6)) & 1) != 1)\n
                                v15 = 1;\n
                        }\n
                        else\n
                        {\n
                            s_320 =L Conv(128->64, ((0x0<64> CONCAT 0x3ff0000000000000<64>) + Conv(64->128, Load(addr=stack_base-800, size=8, endness=Iend_LE))))<8>\n
                            if ((((CmpF(s_320, v14 + 5) & 69) | ((CmpF(s_320, v14 + 5) & 69) >> 6)) & 1) != 1)\n
                                v15 = 0;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v59 = s_320;\n
                        if ((((CmpF(v59, 0x4052c00000000000) & 69) | ((CmpF(v59, 0x4052c00000000000) & 69) >> 6)) & 1) != 1)\n
                        {\n
                            tmp_7 = SubV(tmp_9, tmp_8);\n
                            *(&s_320) = tmp_7;\n
                        }\n
                    }\n
                }\n
                *(&v69) = v69;\n
                Controller::setCurrentTemp(&v37);\n
                Controller::setPowerOn(&v37, v16 & 1);\n
                v44 = v15 & 1;\n
                Controller::setHeaterOn(&v37, v44);\n
            }\n
            else if (v1 == 10)\n
            {\n
                v6 = 0;\n
                if (Controller::GetVersion(&v37) != 266)\n
                    v6 = 1;\n
                for (v5 = 0; v5 < 0x1000; v5 += 1)\n
                {\n
                    a2 = v5 + 1;\n
                    a3 = a2 * v39[v5];\n
                    v6 += a3;\n
                }\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 10);\n
                v44 = 4;\n
                OutgoingMessage::SetExtMessage(Controller::GetMsgOut(&v37), 4, &v6, a3, 1);\n
                OutgoingMessage::SendAsExtended(Controller::GetMsgOut(&v37), 4, a2, a3, 1);\n
            }\n
            else\n
            {\n
                if (v1 == 255)\n
                    break;\n
                OutgoingMessage::SetResponse(Controller::GetMsgOut(&v37), 5);\n
                OutgoingMessage::SendAsBasic(Controller::GetMsgOut(&v37), 5, a2, a3, 1);\n
            }\n
        }\n
    }\n
    v42 = 0;\n
    Controller::__base_dtor__(&v37);\n
    return v42;\n
}\n
", "4239975:sub_40b267": null, "4239984:_ZN10Controller9GetMsgOutEv": "long long Controller::GetMsgOut(unsigned long a0)\n
{\n
    return a0 + 112;\n
}\n
", "4240002:sub_40b282": null, "4240016:_ZN10Controller10GetVersionEv": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
long long Controller::GetVersion(struct_0 *a0)\n
{\n
    return a0->field_40;\n
}\n
", "4240036:sub_40b2a4": null, "4240048:_ZN10Controller8GetMsgInEv": "long long Controller::GetMsgIn(unsigned long a0)\n
{\n
    return a0 + 184;\n
}\n
", "4240068:sub_40b2c4": null, "4240080:_ZN12CommsMessage10GetMessageEv": "long long CommsMessage::GetMessage(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    CUtil::String::__ctor__(a0, a1);\n
    return a0;\n
}\n
", "4240125:sub_40b2fd": null, "4240128:_ZN15OutgoingMessage11SetResponseEt": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned short field_30;\n
} struct_0;\n
\n
long long OutgoingMessage::SetResponse(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_30 = a1;\n
    return a0;\n
}\n
", "4240157:sub_40b31d": null, "4240160:_ZN10Controller17EnableSmokeSensorEv": "long long Controller::EnableSmokeSensor(unsigned long a0)\n
{\n
    return Sensor::SetEnabled(a0 + 80, 1);\n
}\n
", "4240196:sub_40b344": null, "4240208:_ZN10Controller18DisableSmokeSensorEv": "long long Controller::DisableSmokeSensor(unsigned long a0)\n
{\n
    return Sensor::SetEnabled(a0 + 80, 0);\n
}\n
", "4240241:sub_40b371": null, "4240256:_ZN10Controller14getCurrentTempEv": "long long Controller::getCurrentTemp(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4240275:sub_40b393": null, "4240288:_ZN10Controller10getPowerOnEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
long long Controller::getPowerOn(struct_0 *a0)\n
{\n
    return a0->field_30 & 1;\n
}\n
", "4240310:sub_40b3b6": null, "4240320:_ZN10Controller11getHeaterOnEv": "typedef struct struct_0 {\n
    char padding_0[49];\n
    char field_31;\n
} struct_0;\n
\n
long long Controller::getHeaterOn(struct_0 *a0)\n
{\n
    return a0->field_31 & 1;\n
}\n
", "4240342:sub_40b3d6": null, "4240352:_ZN10Controller10getSetTempEv": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
long long Controller::getSetTemp(struct_0 *a0)\n
{\n
    return a0->field_44;\n
}\n
", "4240369:sub_40b3f1": null, "4240384:_ZN10Controller14setCurrentTempEd": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
long long Controller::setCurrentTemp(struct_0 *a0)\n
{\n
    a0->field_38 = 0;\n
    return a0;\n
}\n
", "4240413:sub_40b41d": null, "4240416:_ZN10Controller11setHeaterOnEb": "typedef struct struct_0 {\n
    char padding_0[49];\n
    char field_31;\n
} struct_0;\n
\n
long long Controller::setHeaterOn(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x11]\n
\n
    v0 = a1 & 1;\n
    a0->field_31 = v0 & 1;\n
    return a0;\n
}\n
", "4240447:sub_40b43f": null, "4240448:_ZN10Controller20IsSmokeSensorEnabledEv": "long long Controller::IsSmokeSensorEnabled(unsigned long a0)\n
{\n
    return Sensor::GetEnabled(a0 + 80) & 1;\n
}\n
", "4240484:sub_40b464": null, "4240496:_ZN6Sensor10GetEnabledEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_0;\n
\n
long long Sensor::GetEnabled(struct_0 *a0)\n
{\n
    return a0->field_c & 1;\n
}\n
", "4240520:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:_ZdaPv": null, "5242944:cgc_rint": null, "5242952:cgc_log10": null, "5242960:cgc_transmit": null, "5242968:cgc_pow": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}