{"4485120:_init": "extern struct_0 *g_46a230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_46a230;\n
    if (g_46a230)\n
        v1 = g_46a230();\n
    return v1;\n
}\n
", "4485152:sub_447020": "extern unsigned long long g_46a250;\n
\n
long long sub_447020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_46a250;\n
    goto *(4629080);\n
}\n
", "4485164:sub_44702c": null, "4485168:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4485184:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4485200:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4485216:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4485232:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4629056);\n
}\n
", "4485248:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4485285:sub_4470a5": null, "4485286:sub_4470a6": null, "4485296:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_46a228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4485337:sub_4470d9": null, "4485344:register_tm_clones": "extern unsigned long long g_46a238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4485401:sub_447119": null, "4485408:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_46a240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_46a240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4485461:sub_447155": null, "4485465:sub_447159": null, "4485472:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4485481:sub_447169": null, "4485488:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdi<8>, cc_ndep<8>))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(a1 * a0);\n
        if (v1)\n
            return cgc_memset(v1, 0, a1 * a0);\n
        return 0;\n
    }\n
}\n
", "4485541:sub_4471a5": null, "4485552:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    return a0 - 48 < 10 | (a0 & -33) - 65 < 26;\n
}\n
", "4485581:sub_4471cd": null, "4485584:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    return (a0 & -33) - 65 < 26;\n
}\n
", "4485599:sub_4471df": null, "4485600:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4485612:sub_4471ec": null, "4485616:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4485628:sub_4471fc": null, "4485632:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4485644:sub_44720c": null, "4485648:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return a0 < 128;\n
}\n
", "4485660:sub_44721c": null, "4485664:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    return a0 == 9 | a0 == 32;\n
}\n
", "4485682:sub_447232": null, "4485696:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    return a0 < 32 | a0 == 127;\n
}\n
", "4485714:sub_447252": null, "4485728:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    return 33 <= a0 & a0 != 127;\n
}\n
", "4485746:sub_447272": null, "4485760:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    return a0 != 127 & 32 <= a0;\n
}\n
", "4485778:sub_447292": null, "4485792:cgc_ispunct": "typedef struct struct_0 {\n
    char padding_0[4505616];\n
    char field_44c010;\n
} struct_0;\n
\n
extern char _punct;\n
\n
long long cgc_ispunct(struct_0 *a0)\n
{\n
    return *((a0 + &_punct));\n
}\n
", "4485807:sub_4472af": null, "4485808:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    return a0 == 32 | a0 - 9 < 5;\n
}\n
", "4485829:sub_4472c5": null, "4485840:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4505744];\n
    char field_44c090;\n
} struct_0;\n
\n
extern char _xdigit;\n
\n
long long cgc_isxdigit(struct_0 *a0)\n
{\n
    return *((a0 + &_xdigit));\n
}\n
", "4485855:sub_4472df": null, "4485856:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4485862:sub_4472e6": null, "4485872:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    if ((a0 - 91) >= -26)\n
        return a0 | 32;\n
    return a0;\n
}\n
", "4485887:sub_4472ff": null, "4485888:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    if ((a0 - 123) >= -26)\n
        return a0 & 95;\n
    return a0;\n
}\n
", "4485903:sub_44730f": null, "4485904:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-10;\n
} struct_0;\n
\n
long long cgc_free(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
    unsigned long long *v2;  // rbx\n
\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (a0[4].field_-10)\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v2 = a0 + 6;\n
        if (*(v2) < 0x40000)\n
        {\n
            cgc_insert_into_flist(v2);\n
            return cgc_coalesce(a0 + 6);\n
        }\n
        return cgc_deallocate(a0);\n
    }\n
}\n
", "4485963:sub_44734b": null, "4485968:cgc_malloc": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    uint128_t field_10;\n
    uint128_t field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_2 *g_481cd8;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned long v2;  // rbx\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long v6;  // r14, Other Possible Types: unsigned long long\n
    unsigned long v7;  // r14\n
    struct_2 *v8;  // rbx, Other Possible Types: unsigned long\n
    struct struct_2 **v9;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v13;  // rdi\n
    unsigned long long v14;  // rax\n
    unsigned long long v15;  // rdi\n
    struct_0 *v16;  // rax\n
\n
    if (!a0)\n
    {\n
LABEL_447425:\n
        return 0;\n
    }\n
    if (a0 - 262120 <= -262145)\n
    {\n
        if (!cgc_allocate(a0, v3, v4))\n
        {\n
            v8 = *(&v0);\n
            v8->field_0 = a0 + 24;\n
            v8->field_8 = 0;\n
            *(&v8->field_10) = 0;\n
            *(&v8->field_20) = 0;\n
            goto LABEL_4474b7;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    v6 = a0 + 7 & -8;\n
    if (!(a0 & 7))\n
        v6 = a0;\n
    if (!(v6 <= 2147483647))\n
        goto LABEL_447425;\n
    v7 = v6 + 24;\n
    v9 = cgc_get_size_class(v7);\n
    if (v9 <= 31)\n
    {\n
        v8 = *((&cgc_free_lists + 0x8 * v9));\n
        if (!v8)\n
            goto LABEL_4473ec;\n
        else\n
            goto LABEL_0x447400;\n
    }\n
    else\n
    {\n
        if (!cgc_allocate(v7, rsi<8>, rdx<8>))\n
        {\n
            v13 = *(&v0);\n
            if (v13)\n
            {\n
                v13->field_0 = 0x40000;\n
                v13->field_8 = 1;\n
                v13->field_10 = 0;\n
                v13->field_20 = 0;\n
                cgc_insert_into_flist(v13);\n
                v8 = g_481cd8;\n
                cgc_remove_from_flist(v8);\n
                v14 = *(v8) - v7;\n
                if (v14 >= 49)\n
                {\n
                    v15 = v7 + v8;\n
                    *((v7 + v8)) = v14;\n
                    *((v7 + v8 + 8)) = 1;\n
                    *((v7 + v8 + 16)) = 0;\n
                    *(v8) = v7;\n
                    *((v7 + v8 + 40)) = v8;\n
                    *((v7 + v8 + 32)) = *((v8 + 32));\n
                    v16 = *((v8 + 32));\n
                    if (v16)\n
                        v16->field_28 = v15;\n
                    *((v8 + 32)) = v15;\n
                    cgc_insert_into_flist(v15);\n
                }\n
LABEL_4474b7:\n
                v2 = v8 + 24;\n
                return v2;\n
            }\n
        }\n
        goto LABEL_447425;\n
    }\n
    while (true)\n
    {\n
        while (true)\n
        {\n
LABEL_4473ec:\n
            v9 += 1;\n
            if (v9 == 32)\n
                break;\n
            v8 = *(&(&cgc_free_lists)[8 * v9]);\n
        }\n
        while (*(v8) < v7)\n
        {\n
            v8 = *((v8 + 16));\n
            if (!v8)\n
                goto LABEL_4473ec;\n
        }\n
    }\n
}\n
", "4486344:sub_4474c8": null, "4486352:cgc_get_size_class": "extern unsigned long long g_46a298;\n
extern unsigned long long g_46a2a0;\n
extern unsigned long long g_46a2a8;\n
extern unsigned long long g_46a2b0;\n
extern unsigned long long g_46a2b8;\n
extern unsigned long long g_46a2c0;\n
extern unsigned long long g_46a2c8;\n
extern unsigned long long g_46a2d0;\n
extern unsigned long long g_46a2d8;\n
extern unsigned long long g_46a2e0;\n
extern unsigned long long g_46a2e8;\n
extern unsigned long long g_46a2f0;\n
extern unsigned long long g_46a2f8;\n
extern unsigned long long g_46a300;\n
extern unsigned long long g_46a308;\n
extern unsigned long long g_46a310;\n
extern unsigned long long g_46a318;\n
extern unsigned long long g_46a320;\n
extern unsigned long long g_46a328;\n
extern unsigned long long g_46a330;\n
extern unsigned long long g_46a338;\n
extern unsigned long long g_46a340;\n
extern unsigned long long g_46a348;\n
extern unsigned long long g_46a350;\n
extern unsigned long long g_46a358;\n
extern unsigned long long g_46a360;\n
extern unsigned long long g_46a368;\n
extern unsigned long long g_46a370;\n
extern unsigned long long g_46a378;\n
extern unsigned long long g_46a380;\n
extern unsigned long long g_46a388;\n
extern unsigned long long size_class_limits;\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = 0;\n
    if (size_class_limits >= a0)\n
        return v1;\n
    v1 = 1;\n
    if (g_46a298 < a0)\n
    {\n
        v1 = 2;\n
        if (g_46a2a0 < a0)\n
        {\n
            v1 = 3;\n
            if (g_46a2a8 < a0)\n
            {\n
                v1 = 4;\n
                if (g_46a2b0 < a0)\n
                {\n
                    v1 = 5;\n
                    if (g_46a2b8 < a0)\n
                    {\n
                        v1 = 6;\n
                        if (g_46a2c0 < a0)\n
                        {\n
                            v1 = 7;\n
                            if (g_46a2c8 < a0)\n
                            {\n
                                v1 = 8;\n
                                if (g_46a2d0 < a0)\n
                                {\n
                                    v1 = 9;\n
                                    if (g_46a2d8 < a0)\n
                                    {\n
                                        v1 = 10;\n
                                        if (g_46a2e0 < a0)\n
                                        {\n
                                            v1 = 11;\n
                                            if (g_46a2e8 < a0)\n
                                            {\n
                                                v1 = 12;\n
                                                if (g_46a2f0 < a0)\n
                                                {\n
                                                    v1 = 13;\n
                                                    if (g_46a2f8 < a0)\n
                                                    {\n
                                                        v1 = 14;\n
                                                        if (g_46a300 < a0)\n
                                                        {\n
                                                            v1 = 15;\n
                                                            if (g_46a308 < a0)\n
                                                            {\n
                                                                v1 = 16;\n
                                                                if (g_46a310 < a0)\n
                                                                {\n
                                                                    v1 = 17;\n
                                                                    if (g_46a318 < a0)\n
                                                                    {\n
                                                                        v1 = 18;\n
                                                                        if (g_46a320 < a0)\n
                                                                        {\n
                                                                            v1 = 19;\n
                                                                            if (g_46a328 < a0)\n
                                                                            {\n
                                                                                v1 = 20;\n
                                                                                if (g_46a330 < a0)\n
                                                                                {\n
                                                                                    v1 = 21;\n
                                                                                    if (g_46a338 < a0)\n
                                                                                    {\n
                                                                                        v1 = 22;\n
                                                                                        if (g_46a340 < a0)\n
                                                                                        {\n
                                                                                            v1 = 23;\n
                                                                                            if (g_46a348 < a0)\n
                                                                                            {\n
                                                                                                v1 = 24;\n
                                                                                                if (g_46a350 < a0)\n
                                                                                                {\n
                                                                                                    v1 = 25;\n
                                                                                                    if (g_46a358 < a0)\n
                                                                                                    {\n
                                                                                                        v1 = 26;\n
                                                                                                        if (g_46a360 < a0)\n
                                                                                                        {\n
                                                                                                            v1 = 27;\n
                                                                                                            if (g_46a368 < a0)\n
                                                                                                            {\n
                                                                                                                v1 = 28;\n
                                                                                                                if (g_46a370 < a0)\n
                                                                                                                {\n
                                                                                                                    v1 = 29;\n
                                                                                                                    if (g_46a378 < a0)\n
                                                                                                                    {\n
                                                                                                                        v1 = 30;\n
                                                                                                                        if (g_46a380 < a0)\n
                                                                                                                            v1 = 31 + (g_46a388 < a0);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4486887:sub_4476e7": null, "4486896:cgc_insert_into_flist": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
extern char cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_0 *a0)\n
{\n
    struct struct_1 **v1;  // rax\n
    struct_1 *v2;  // rdx\n
\n
    v1 = cgc_get_size_class(*(&a0->field_0));\n
    a0->field_8 = 1;\n
    v2 = *((&cgc_free_lists + 0x8 * v1));\n
    if (v2)\n
    {\n
        a0->field_10 = v2;\n
        *((*((&cgc_free_lists + 0x8 * v1)) + 24)) = a0;\n
        *((&cgc_free_lists + 0x8 * v1)) = a0;\n
        a0->field_18 = 0;\n
        return v1;\n
    }\n
    *((&cgc_free_lists + 0x8 * v1)) = a0;\n
    return v1;\n
}\n
", "4486965:sub_447735": null, "4486976:cgc_remove_from_flist": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern char cgc_free_lists;\n
\n
long long cgc_remove_from_flist(struct_1 *a0)\n
{\n
    unsigned long long v1[4];  // rax\n
    struct_3 *v2;  // rcx\n
    struct_0 *v3;  // rdx\n
\n
    v1 = cgc_get_size_class(*(&a0->field_0));\n
    v2 = *(&a0[1].field_0);\n
    if (v2)\n
        v2->field_10 = a0->field_10;\n
    v3 = a0->field_10;\n
    if (v3)\n
        v3->field_18 = v2;\n
    if (*((&cgc_free_lists + 0x8 * v1)) == a0)\n
        *((&cgc_free_lists + 0x8 * v1)) = v3;\n
    *(&a0->field_10) = 0;\n
    a0->field_8 = 0;\n
    return v1;\n
}\n
", "4487053:sub_44778d": null, "4487056:cgc_coalesce": "typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    struct struct_4 *field_20;\n
    struct struct_3 *field_28;\n
} struct_4;\n
\n
typedef struct struct_6 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    struct struct_4 *field_20;\n
    struct struct_1 *field_28;\n
} struct_6;\n
\n
typedef struct struct_9 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    unsigned long long field_20;\n
} struct_9;\n
\n
typedef struct struct_7 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    struct struct_7 *field_20;\n
    struct struct_3 *field_28;\n
} struct_7;\n
\n
typedef struct struct_8 {\n
    struct struct_5 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_8;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern char cgc_free_lists;\n
\n
long long cgc_coalesce(struct_6 *a0)\n
{\n
    struct_4 *v0;  // [bp-0x28]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long, struct_4 *, struct_3 *\n
    struct_9 *v3;  // rbx\n
    struct_8 *v4;  // rax\n
    unsigned long v5;  // rax\n
    struct_0 *v6;  // rdx\n
    struct_0 *v7;  // rcx\n
    unsigned long v8;  // rax\n
    struct_5 *v9;  // rcx\n
    struct_0 *v10;  // rcx\n
    struct_5 *v11;  // rdx\n
    struct_5 *v12;  // rdx\n
    struct_7 *v13;  // r12, Other Possible Types: unsigned long\n
    unsigned long v14;  // rax\n
    unsigned long v15;  // rbx\n
    unsigned long v16;  // rax\n
    struct_0 *v17;  // rcx\n
    struct_0 *v18;  // rcx\n
    unsigned long v19;  // r12\n
    unsigned long v20;  // rax\n
    struct_5 *v21;  // rdx\n
    struct_0 *v22;  // rcx\n
    struct_5 *v23;  // rdx\n
    struct_5 *v24;  // rdx\n
    unsigned long v25;  // r12\n
    unsigned long v26;  // rax\n
    unsigned long v27;  // rbx\n
    unsigned long v28;  // rax\n
    struct_0 *v29;  // rcx\n
    struct_5 *v30;  // rcx\n
    struct_1 *v31;  // rbx\n
    unsigned long v32;  // r12\n
    unsigned long v33;  // rax\n
    struct_4 *v34;  // rcx, Other Possible Types: unsigned long\n
    struct_5 *v35;  // rdx\n
    struct_5 *v36;  // rcx\n
    struct_4 *v37;  // rcx, Other Possible Types: unsigned long\n
    struct_1 *v38;  // rbx\n
    unsigned long long v39;  // r12\n
    unsigned long v40;  // r12\n
    unsigned long v41;  // rax\n
    struct_5 *v42;  // rcx\n
    struct_4 *v43;  // rcx, Other Possible Types: unsigned long\n
    struct_3 *v44;  // rax, Other Possible Types: unsigned long\n
    struct_4 *v45;  // rcx\n
\n
    v0 = v2;\n
    v3 = a0->field_28;\n
    if (!v3)\n
        return v2;\n
    v13 = a0->field_20;\n
    if (!v3->field_8)\n
    {\n
        if (!v13)\n
        {\n
            return v2;\n
        }\n
        else if (!v13->field_8)\n
        {\n
            return v2;\n
        }\n
        else\n
        {\n
            v5 = cgc_get_size_class(*(&v13->field_0));\n
            v7 = v13->padding_18;\n
            if (v7)\n
                v7->field_10 = v13->field_10;\n
            v11 = v13->field_10;\n
            if (v11)\n
                v11->field_18 = v7;\n
            if (*(&(&cgc_free_lists)[8 * v5]) == v13)\n
                *(&(&cgc_free_lists)[8 * v5]) = v11;\n
            *(&v13->field_10) = 0;\n
            v13->field_8 = 0;\n
            v15 = a0->field_0;\n
            v16 = cgc_get_size_class(v15);\n
            v18 = a0->padding_18;\n
            if (v18)\n
                v18->field_10 = a0->field_10;\n
            v23 = a0->field_10;\n
            if (v23)\n
                v23->field_18 = v18;\n
            if (*(&(&cgc_free_lists)[8 * v16]) == a0)\n
                *(&(&cgc_free_lists)[8 * v16]) = v23;\n
            *(&a0->field_10) = 0;\n
            a0->field_8 = 0;\n
            v27 = v15 + a0->field_20->field_0;\n
            a0->field_0 = v27;\n
            v28 = cgc_get_size_class(v27);\n
            a0->field_8 = 1;\n
            v30 = *(&(&cgc_free_lists)[8 * v28]);\n
            if (v30)\n
            {\n
                a0->field_10 = &v30->padding_0;\n
                *((*(&(&cgc_free_lists)[8 * v28]) + 24)) = a0;\n
                *(&(&cgc_free_lists)[8 * v28]) = a0;\n
                *(&a0->padding_18[0]) = 0;\n
                v34 = a0->field_20;\n
                v2 = v34->field_28;\n
                if (!v2)\n
                    goto LABEL_447b26;\n
            }\n
            else\n
            {\n
                *(&(&cgc_free_lists)[8 * v28]) = a0;\n
                v34 = a0->field_20;\n
                v2 = *((v34 + 40));\n
                if (!v2)\n
                    goto LABEL_447b26;\n
            }\n
            *((v2 + 32)) = *((v34 + 32));\n
LABEL_447b26:\n
            v37 = *((v34 + 32));\n
            if (!v37)\n
                return v2;\n
        }\n
LABEL_447b2f:\n
        *((v37 + 40)) = v2;\n
        return v2;\n
    }\n
    if (v13 && v13->field_8)\n
    {\n
        v4 = cgc_get_size_class(*(&v3->field_0));\n
        v6 = v3->padding_18;\n
        if (v6)\n
            v6->field_10 = v3->field_10;\n
        v9 = v3->field_10;\n
        if (v9)\n
            v9->field_18 = v6;\n
        if (*((&cgc_free_lists + 0x8 * v4)) == v3)\n
        {\n
            *((&cgc_free_lists + 0x8 * v4)) = v9;\n
            v13 = a0->field_20;\n
        }\n
        *(&v3->field_10) = 0;\n
        v3->field_8 = 0;\n
        v14 = cgc_get_size_class(*(v13));\n
        v17 = *((v13 + 24));\n
        if (v17)\n
            v17->field_10 = *((v13 + 16));\n
        v21 = *((v13 + 16));\n
        if (v21)\n
            v21->field_18 = v17;\n
        if (*(&(&cgc_free_lists)[8 * v14]) == v13)\n
            *(&(&cgc_free_lists)[8 * v14]) = v21;\n
        *((v13 + 16)) = 0;\n
        *((v13 + 8)) = 0;\n
        v25 = a0->field_0;\n
        v26 = cgc_get_size_class(v25);\n
        v29 = a0->padding_18;\n
        if (v29)\n
            v29->field_10 = a0->field_10;\n
        v35 = a0->field_10;\n
        if (v35)\n
            v35->field_18 = v29;\n
        if (*(&(&cgc_free_lists)[8 * v26]) == a0)\n
            *(&(&cgc_free_lists)[8 * v26]) = v35;\n
        *(&a0->field_10) = 0;\n
        a0->field_8 = 0;\n
        v38 = a0->field_28;\n
        v39 = v25 + v38->field_0;\n
        v38->field_0 = v39;\n
        v40 = v39 + a0->field_20->field_0;\n
        v38->field_0 = v40;\n
        v41 = cgc_get_size_class(v40);\n
        v38->field_8 = 1;\n
        v42 = *(&(&cgc_free_lists)[8 * v41]);\n
        if (v42)\n
        {\n
            v38->field_10 = &v42->padding_0;\n
            *((*(&(&cgc_free_lists)[8 * v41]) + 24)) = v38;\n
            *(&(&cgc_free_lists)[8 * v41]) = v38;\n
            *(&v38->padding_18[0]) = 0;\n
            v43 = a0->field_20;\n
            v44 = v43->field_28;\n
            if (!v44)\n
                goto LABEL_447902;\n
        }\n
        else\n
        {\n
            *(&(&cgc_free_lists)[8 * v41]) = v38;\n
            v43 = a0->field_20;\n
            v44 = *((v43 + 40));\n
            if (!v44)\n
                goto LABEL_447902;\n
        }\n
        *((v44 + 32)) = *((v43 + 32));\n
LABEL_447902:\n
        v45 = *((v43 + 32));\n
        if (v45)\n
        {\n
            v45->field_28 = v44;\n
            v2 = a0->field_28;\n
            if (!v2)\n
                goto LABEL_447a19;\n
            goto LABEL_447a11;\n
        }\n
    }\n
    v2 = a0->field_20;\n
    if (!v2)\n
        return a0->field_20;\n
    if (*((v2 + 8)))\n
        return a0->field_20;\n
    v8 = cgc_get_size_class(*(&v3->field_0));\n
    v10 = v3->padding_18;\n
    if (v10)\n
        v10->field_10 = v3->field_10;\n
    v12 = v3->field_10;\n
    if (v12)\n
        v12->field_18 = v10;\n
    if (*(&(&cgc_free_lists)[8 * v8]) == v3)\n
        *(&(&cgc_free_lists)[8 * v8]) = v12;\n
    *(&v3->field_10) = 0;\n
    v3->field_8 = 0;\n
    v19 = a0->field_0;\n
    v20 = cgc_get_size_class(v19);\n
    v22 = a0->padding_18;\n
    if (v22)\n
        v22->field_10 = a0->field_10;\n
    v24 = a0->field_10;\n
    if (v24)\n
        v24->field_18 = v22;\n
    if (*(&(&cgc_free_lists)[8 * v20]) == a0)\n
        *(&(&cgc_free_lists)[8 * v20]) = v24;\n
    *(&a0->field_10) = 0;\n
    a0->field_8 = 0;\n
    v31 = a0->field_28;\n
    v32 = v19 + v31->field_0;\n
    v31->field_0 = v32;\n
    v33 = cgc_get_size_class(v32);\n
    v31->field_8 = 1;\n
    v36 = *(&(&cgc_free_lists)[8 * v33]);\n
    if (v36)\n
    {\n
        v31->field_10 = &v36->padding_0;\n
        *((*(&(&cgc_free_lists)[8 * v33]) + 24)) = v31;\n
        *(&(&cgc_free_lists)[8 * v33]) = v31;\n
        *(&v31->padding_18[0]) = 0;\n
    }\n
    else\n
    {\n
        *(&(&cgc_free_lists)[8 * v33]) = v31;\n
        v2 = a0->field_28;\n
        if (!v2)\n
            goto LABEL_447a19;\n
LABEL_447a11:\n
        *((v2 + 32)) = a0->field_20;\n
LABEL_447a19:\n
        v37 = a0->field_20;\n
        if (!v37)\n
            return v2;\n
        goto LABEL_447b2f;\n
    }\n
    v2 = a0->field_28;\n
    if (!v2)\n
        goto LABEL_447a19;\n
    goto LABEL_447a11;\n
}\n
", "4488066:sub_447b82": null, "4488080:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) == a1)\n
            return a0 + v1;\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4488120:sub_447bb8": null, "4488128:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4488174:sub_447bee": null, "4488176:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_447c84:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_447c17;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_447c17:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_447c84;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_447c17;\n
}\n
", "4488607:sub_447d9f": null, "4488608:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    int tmp_13;  // tmp #13\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    char *v6;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    int v10;  // xmm1\n
    int v11;  // xmm1\n
    int v12;  // xmm1\n
    int v13;  // xmm1\n
    unsigned long v14;  // rdi\n
    unsigned long v15;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v16;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v17;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v18;  // r10\n
    unsigned long v19;  // r11\n
    unsigned long v20;  // rdi\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    int v25;  // xmm1\n
    unsigned long long v26;  // r10\n
    unsigned long v30;  // rdi\n
    unsigned long v31;  // r8\n
    char *v32;  // r8\n
    char *v33;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r8\n
    char *v35;  // rdi, Other Possible Types: unsigned long\n
    char *v36;  // rdx\n
    char *v37;  // rdi, Other Possible Types: unsigned long\n
    char *v38;  // r9, Other Possible Types: unsigned long\n
    char *v39;  // rcx, Other Possible Types: unsigned long\n
    char *v40;  // rdx, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (a0 < a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_447eef:\n
                if (a2 < 32)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x20;\n
                    v3 = v2 - 32;\n
                    v4 = (v3 >> 5) + 1;\n
                    v5 = v4 & 3;\n
                    if (v3 < 96)\n
                    {\n
                        v14 = 0;\n
                    }\n
                    else\n
                    {\n
                        v15 = v4 & -4;\n
                        v14 = 0;\n
                        do\n
                        {\n
                            v10 = *((a1 + v14 + 16));\n
                            *(&v1[v14]) = *((a1 + v14));\n
                            *(&v1[16 + v14]) = v10;\n
                            v11 = *((a1 + v14 + 48));\n
                            *(&v1[32 + v14]) = *((a1 + v14 + 32));\n
                            *(&v1[48 + v14]) = v11;\n
                            v12 = *((a1 + v14 + 80));\n
                            *(&v1[64 + v14]) = *((a1 + v14 + 64));\n
                            *(&v1[80 + v14]) = v12;\n
                            v13 = *((a1 + v14 + 112));\n
                            *(&v1[96 + v14]) = *((a1 + v14 + 96));\n
                            *(&v1[112 + v14]) = v13;\n
                            v14 -= -128;\n
                            tmp_21 = v15;\n
                            v15 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v5)\n
                    {\n
                        v21 = &v1[v14 + 16];\n
                        v22 = a1 + v14 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v25 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v25;\n
                            v24 += 32;\n
                        } while (v5 * 32 != v24);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_447dd9;\n
                }\n
                v31 = v2;\n
                v2 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v31]) = *((a1 + v31));\n
                    v31 += 8;\n
                } while (v2 != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_447dd9:\n
                v34 = &a2[~(v2)];\n
                v35 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v2] = *((a1 + v2));\n
                        v2 += 1;\n
                        tmp_7 = v35;\n
                        v35 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v1[1 + v2] = *((a1 + v2 + 1));\n
                    v1[2 + v2] = *((a1 + v2 + 2));\n
                    v1[3 + v2] = *((a1 + v2 + 3));\n
                    v2 += 4;\n
                } while (a2 != v2);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_447eef;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_447dd9;\n
    }\n
    else\n
    {\n
        if ([D] amd64g_calculate_condition(0x6<64>, 0x8<64>, rdi<8>, rsi<8>, cc_ndep<8>))\n
            return a0;\n
        if (!a2)\n
            return a0;\n
        if (a2 < 4)\n
        {\n
LABEL_447e77:\n
            v38 = a2;\n
            goto LABEL_447e7a;\n
        }\n
        else\n
        {\n
            if (&a2[a1] > a0 && !(a0 + a2 <= a1))\n
                goto LABEL_447e77;\n
            if (a2 < 16)\n
            {\n
                v6 = 0;\n
            }\n
            else\n
            {\n
                v6 = a2 & -0x10;\n
                v7 = v6 - 16;\n
                v8 = (v7 >> 4) + 1;\n
                v9 = v8 & 3;\n
                if (v7 < 48)\n
                {\n
                    v16 = 0;\n
                }\n
                else\n
                {\n
                    v17 = v8 & -4;\n
                    v18 = v1 + a2 - 16;\n
                    v19 = &a2[a1 + 16];\n
                    v20 = 0;\n
                    do\n
                    {\n
                        *((v18 + v20)) = *((v19 + v20));\n
                        *((-16 + v18 + v20)) = *((v19 + v20 - 16));\n
                        *((-32 + v18 + v20)) = *((v19 + v20 - 32));\n
                        *((-48 + v18 + v20)) = *((v19 + v20 - 48));\n
                        v20 -= 64;\n
                        tmp_13 = v17;\n
                        v17 -= 4;\n
                    } while (tmp_13 != 4);\n
                    v16 = -(v20);\n
                }\n
                if (v9)\n
                {\n
                    v26 = &a2[-1 * v16];\n
                    v30 = 0;\n
                    do\n
                    {\n
                        *(&v1[16 + v30 + v26]) = *((v26 + a1 - 16 + v30));\n
                        v30 -= 16;\n
                    } while (v9 * 16 + v30);\n
                }\n
                if (v6 == a2)\n
                    return v1;\n
                if (!(a2 & 12))\n
                {\n
                    a2 = a2 & 15;\n
                    goto LABEL_447e77;\n
                }\n
            }\n
            v32 = a2 & -4;\n
            v38 = a2 & 3;\n
            v33 = -(v6);\n
            do\n
            {\n
                *((v1 + a2 - 4 + v33)) = *(&a2[4 + v33 + a1]);\n
                v33 -= 4;\n
            } while (!(v32) != v33);\n
            if (v32 == a2)\n
                return v1;\n
LABEL_447e7a:\n
            v36 = v38 - 1;\n
            v37 = v38 & 3;\n
            if (!(v38 & 3))\n
            {\n
                v39 = v38;\n
                if (v36 < 3)\n
                    return v1;\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v39 = v38 - 1;\n
                    v1[1 + v38] = *((a1 + v38 - 1));\n
                    v38 = v39;\n
                    tmp_5 = v37;\n
                    v37 -= 1;\n
                } while (tmp_5 != 1);\n
                if (v36 < 3)\n
                    return v1;\n
            }\n
            v40 = v39;\n
            do\n
            {\n
                v1[1 + v39] = *((a1 + v39 - 1));\n
                v1[2 + v39] = *((a1 + v39 - 2));\n
                v1[3 + v39] = *((a1 + v39 - 3));\n
                v1[4 + v39] = *((a1 + v39 - 4));\n
                v40 -= 4;\n
                v39 = v40;\n
            } while (v40 != 4);\n
            return v1;\n
        }\n
    }\n
}\n
", "4489543:sub_448147": null, "4489552:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_25;  // tmp #25\n
    int tmp_26;  // tmp #26\n
    char *v1;  // rax\n
    char *v2;  // r10, Other Possible Types: unsigned long\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // rcx\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rcx\n
    int v15;  // xmm0\n
    unsigned long long v17;  // rdx\n
    unsigned long v18;  // rcx\n
\n
    v1 = a0;\n
    if (!a0)\n
        return a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
        goto LABEL_4482c9;\n
    }\n
    if (a2 < 32)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v2 = a2 & -0x20;\n
        tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
        v3 = tmp_43;\n
        v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
        v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
        v6 = v2 - 32;\n
        v7 = (v6 >> 5) + 1;\n
        v8 = v7 & 7;\n
        if (v6 < 224)\n
        {\n
            v9 = 0;\n
        }\n
        else\n
        {\n
            v10 = v7 & -8;\n
            v9 = 0;\n
            do\n
            {\n
                *(&v1[v9]) = v5;\n
                *(&v1[16 + v9]) = v5;\n
                *(&v1[32 + v9]) = v5;\n
                *(&v1[48 + v9]) = v5;\n
                *(&v1[64 + v9]) = v5;\n
                *(&v1[80 + v9]) = v5;\n
                *(&v1[96 + v9]) = v5;\n
                *(&v1[112 + v9]) = v5;\n
                *(&v1[128 + v9]) = v5;\n
                *(&v1[144 + v9]) = v5;\n
                *(&v1[160 + v9]) = v5;\n
                *(&v1[176 + v9]) = v5;\n
                *(&v1[192 + v9]) = v5;\n
                *(&v1[208 + v9]) = v5;\n
                *(&v1[224 + v9]) = v5;\n
                *(&v1[240 + v9]) = v5;\n
                v9 += 0x100;\n
                tmp_21 = v10;\n
                v10 -= 8;\n
            } while (tmp_21 != 8);\n
        }\n
        if (v8)\n
        {\n
            v11 = &v1[v9 + 16];\n
            v13 = 0;\n
            do\n
            {\n
                *((-16 + v11 + v13)) = v5;\n
                *((v11 + v13)) = v5;\n
                v13 += 32;\n
            } while (v8 * 32 != v13);\n
        }\n
        if (v2 == a2)\n
            return v1;\n
        if (!(a2 & 24))\n
        {\n
            a0 = &v1[v2];\n
LABEL_4482c9:\n
            v17 = &a2[-1 * v2];\n
            v18 = 0;\n
            do\n
            {\n
                *((a0 + v18)) = a1;\n
                v18 += 1;\n
            } while (v17 != v18);\n
            return v1;\n
        }\n
    }\n
    v14 = v2;\n
    v2 = a2 & -8;\n
    a0 = &v1[v2];\n
    tmp_25 = InterleaveLOV(tmp_26, tmp_26);\n
    v15 = tmp_25;\n
    do\n
    {\n
        *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
        v14 += 8;\n
    } while (v2 != v14);\n
    if (v2 == a2)\n
        return v1;\n
    goto LABEL_4482c9;\n
}\n
", "4489950:sub_4482de": null, "4489952:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    int tmp_5;  // tmp #5\n
    char v0;  // [bp-0x3d]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned long v3;  // r12, Other Possible Types: unsigned long long\n
    void* v4;  // r14, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v5;  // rbp, Other Possible Types: unsigned long long\n
    char v6;  // al\n
    char v7;  // cl\n
\n
    v3 = a1;\n
    v4 = 0;\n
    v1 = a4;\n
    if (a1 >= a2)\n
    {\n
        a3 -= 1;\n
        v3 = (0 CONCAT a1) /m a2 >> 32;\n
        v4 = cgc_output_number_printf(a0, (0 CONCAT a1) /m a2, a2, a3, a4);\n
    }\n
    if (a3 > 0 && !v4)\n
    {\n
        v5 = a3 - 1;\n
        if (a3 + -1)\n
        {\n
            if ((v1 & 1))\n
            {\n
                do\n
                {\n
                    v0 = 48;\n
                    cgc_transmit(a0, a1, a2, a3);\n
                    tmp_5 = v5;\n
                    v5 = v5 - 1;\n
                } while (tmp_5 + -1);\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v0 = 32;\n
                    cgc_transmit(a0, a1, a2, a3);\n
                    tmp_5 = v5;\n
                    v5 = v5 - 1;\n
                } while (tmp_5 + -1);\n
            }\n
        }\n
    }\n
    v6 = (!(v1 & 2) ? v3 + 55 : v3 + 87);\n
    v7 = v3 + 48;\n
    if (10 <= v3)\n
        v7 = v6;\n
    v0 = v7;\n
    cgc_transmit();\n
    return v4 + 1;\n
}\n
", "4490203:sub_4483db": null, "4490208:cgc_fdprintf": "extern unsigned long long g_44c110;\n
\n
long long cgc_fdprintf(unsigned long a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x119]\n
    unsigned int v1;  // [bp-0x118], Other Possible Types: unsigned long long\n
    struct struct_0 **v2;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x108]\n
    char *v4;  // [bp-0xf8], Other Possible Types: unsigned long\n
    char v5;  // [bp-0xf0]\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    unsigned long long v30;  // r13\n
    char *v31;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v32;  // rbx\n
    void* v33;  // r12, Other Possible Types: unsigned long long, unsigned long\n
    void* v34;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v36;  // rcx, Other Possible Types: unsigned long long\n
    unsigned int v37;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v38;  // rcx\n
    unsigned long long v39;  // rcx\n
    struct struct_0 **v40;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v41;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v42;  // rax\n
    struct struct_0 **v43;  // rax\n
    struct struct_0 **v44;  // rax, Other Possible Types: unsigned long\n
    unsigned long v45;  // rcx, Other Possible Types: unsigned long long\n
    struct struct_0 **v46;  // rax, Other Possible Types: unsigned long\n
    unsigned long v47;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v48;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v49;  // rdx, Other Possible Types: unsigned long long\n
    char *v50;  // rbp\n
    unsigned long long v51;  // r12, Other Possible Types: unsigned long\n
    unsigned long v52;  // r14, Other Possible Types: unsigned long long\n
    unsigned long v53;  // rbx\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v4 = a1;\n
    v3 = &v6;\n
    v2 = &v19;\n
    v1 = 206158430224;\n
    if (!*(a1))\n
        return 0;\n
    v30 = a0;\n
    v51 = &v5;\n
    do\n
    {\n
        v31 = a1 + 1;\n
        v4 = v31;\n
        if (*(a1) == 37)\n
        {\n
            v32 = v51;\n
            v33 = 0;\n
            v34 = 0;\n
            a0 = v31;\n
            while (true)\n
            {\n
                v31 = a0 + 1;\n
                v4 = v31;\n
                a3 = *(a0);\n
                a2 = a3;\n
                if ((a2 - 49) >= 9)\n
                    break;\n
                v34 = cgc_strtol();\n
                a0 = v4;\n
            }\n
            a1 = a2 - 88;\n
            switch (a1)\n
            {\n
            case 0:\n
                v33 = v33 | 2;\n
                v36 = v1;\n
                if (v36 > 40)\n
                {\n
LABEL_448562:\n
                    v40 = v2;\n
                    v2 = v40 + 8;\n
LABEL_448570:\n
                    v47 = *(v40);\n
                    v48 = v30;\n
                    v49 = 16;\n
                    goto LABEL_44871a;\n
                }\n
            case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26: case 28: case 30: case 31:\n
LABEL_44854b:\n
                v0 = a3;\n
                goto LABEL_448618;\n
            case 11:\n
                a3 = v1;\n
                if (a3 > 40)\n
                {\n
                    v41 = v2;\n
                    v2 = v41 + 8;\n
                }\n
                else\n
                {\n
                    v41 = a3 + v3;\n
                    a3 = a3 + 8;\n
                    v1 = a3;\n
                }\n
                v51 = rbx<8>;\n
                v0 = *(v41);\n
                goto LABEL_448494;\n
            case 12:\n
                v37 = v1;\n
                if (v37 <= 40)\n
                {\n
                    v42 = v37 + v3;\n
                    v37 = v37 + 8;\n
                    v1 = v37;\n
                    v52 = *(v42);\n
                    if (!(v52 < 0))\n
                        goto LABEL_44867d;\n
                }\n
                else\n
                {\n
                    v43 = v2;\n
                    v2 = v43 + 1;\n
                    v52 = *(v43);\n
                    if (!(v52 < 0))\n
                        goto LABEL_44867d;\n
                }\n
                v0 = 45;\n
                cgc_transmit(a0, a1, &g_44c110, v37);\n
                v52 = -(v52);\n
LABEL_44867d:\n
                cgc_output_number_printf(v30, v52, 10, v34, v33);\n
                v51 = rbx<8>;\n
                break;\n
            case 27:\n
                v38 = v1;\n
                if (v38 <= 40)\n
                {\n
                    v44 = v38 + v3;\n
                    v45 = v38 + 8;\n
                    v1 = v45;\n
                }\n
                else\n
                {\n
                    v44 = v2;\n
                    v45 = v44 + 8;\n
                    v2 = v45;\n
                }\n
                v51 = rbx<8>;\n
                v50 = *(v44);\n
                if (cgc_strlen(v50))\n
                {\n
                    v53 = 0;\n
                    do\n
                    {\n
                        v0 = v50[v53];\n
                        cgc_transmit(a0, a1, &g_44c110, v45);\n
                        v53 += 1;\n
                    } while (cgc_strlen(v50) > v53);\n
                }\n
                break;\n
            case 29:\n
                v39 = v1;\n
                if (v39 > 40)\n
                {\n
                    v46 = v2;\n
                    v2 = v46 + 8;\n
                }\n
                else\n
                {\n
                    v46 = v39 + v3;\n
                    v1 = v39 + 8;\n
                }\n
                v47 = *(v46);\n
                v48 = v30;\n
                v49 = 10;\n
LABEL_44871a:\n
                cgc_output_number_printf(v48, v47, v49, v34, v33);\n
                v51 = rbx<8>;\n
                break;\n
            case 32:\n
                v36 = v1;\n
                if (!(v36 <= 40))\n
                    goto LABEL_448562;\n
                goto LABEL_44853a;\n
            default:\n
                if (a2 == 37)\n
                {\n
                    v0 = 37;\n
LABEL_448618:\n
                    v51 = rbx<8>;\n
                    goto LABEL_448494;\n
                }\n
                if (a2 == 48)\n
                    goto LABEL_0x448516;\n
                else\n
                    goto LABEL_44854b;\n
            }\n
LABEL_44853a:\n
            v40 = v36 + v3;\n
            v1 = v36 + 8;\n
            goto LABEL_448570;\n
        }\n
        v0 = *(a1);\n
LABEL_448494:\n
        cgc_transmit(a0, a1, a2, a3);\n
        a1 = v4;\n
    } while (*(a1));\n
    return 0;\n
}\n
", "4490382:sub_44848e": null, "4490494:sub_4484fe": null, "4490526:sub_44851e": null, "4491072:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long long a3, unsigned long long a4, unsigned long long a5)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    int tmp_35;  // tmp #35\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long v5;  // r15\n
    unsigned long v6;  // r14\n
    unsigned long v7;  // r12\n
    unsigned long v8;  // rbx\n
    char v9;  // r15b\n
    unsigned long long v10;  // rax\n
    void* v11;  // rax, Other Possible Types: unsigned long\n
    unsigned long v12;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v13;  // rcx, Other Possible Types: unsigned long long\n
    char v14[2];  // rdx, Other Possible Types: unsigned long\n
    char v15[2];  // rdx\n
    char v16[2];  // rdx\n
    char v17;  // dl\n
    unsigned long long v18;  // rax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v0 = v8;\n
    v9 = a5;\n
    v12 = a2;\n
    v11 = 0;\n
    if (a2 >= a3)\n
    {\n
        a4 -= 1;\n
        v10 = (0 CONCAT a2) /m a3;\n
        v12 = v10 / 0x100000000;\n
        v11 = cgc_output_number_sprintf(a0, a1, v10, a3, a4, a5);\n
    }\n
    if (a4 > 0 && !v11)\n
    {\n
        v13 = a4 - 1;\n
        if (a4 + -1)\n
        {\n
            v14 = *(a1);\n
            if ((v9 & 1))\n
            {\n
                if ((v13 & 1))\n
                {\n
                    v14[0] = 48;\n
                    v14 = &*(a1)->field_1;\n
                    *(a1) = v14;\n
                    *(a0) = *(a0) + 1;\n
                    v13 = a4 - 2;\n
                }\n
                if (a4 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v14) = 48;\n
                        v16 = *(a1);\n
                        *(a1) = &v16[1];\n
                        *(a0) = *(a0) + 1;\n
                        v16[1] = 48;\n
                        v14 = &*(a1)->field_1;\n
                        *(a1) = v14;\n
                        *(a0) = *(a0) + 1;\n
                        tmp_35 = v13;\n
                        v13 = v13 - 2;\n
                    } while (tmp_35 + -2);\n
                }\n
            }\n
            else\n
            {\n
                if ((v13 & 1))\n
                {\n
                    v14[0] = 32;\n
                    v14 = &*(a1)->field_1;\n
                    *(a1) = v14;\n
                    *(a0) = *(a0) + 1;\n
                    v13 = a4 - 2;\n
                }\n
                if (a4 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v14) = 32;\n
                        v15 = *(a1);\n
                        *(a1) = &v15[1];\n
                        *(a0) = *(a0) + 1;\n
                        v15[1] = 32;\n
                        v14 = &*(a1)->field_1;\n
                        *(a1) = v14;\n
                        *(a0) = *(a0) + 1;\n
                        tmp_35 = v13;\n
                        v13 = v13 - 2;\n
                    } while (tmp_35 + -2);\n
                }\n
            }\n
        }\n
    }\n
    v17 = (10 <= v12 ? 48 : ((!(v9 & 2)) * 32 + 55));\n
    *(a1)->field_0 = v17 + v12;\n
    *(a1) = &*(a1)->field_1;\n
    *(a0) = *(a0) + 1;\n
    v18 = v11 + 1;\n
    return v18;\n
}\n
", "4491391:sub_44887f": null, "4491392:cgc_sprintf": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_sprintf(char *a0, struct_0 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char *v1;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x108], Other Possible Types: unsigned long long\n
    struct struct_2 **v3;  // [bp-0x100], Other Possible Types: unsigned long\n
    unsigned int *v4;  // [bp-0xf8]\n
    struct_0 *v5;  // [bp-0xf0], Other Possible Types: unsigned long\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    struct_1 *v31;  // r14\n
    struct struct_2 **v32;  // r13\n
    struct_0 *v33;  // rdi, Other Possible Types: unsigned long\n
    char *v34;  // rcx\n
    void* v36;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v37;  // rbp\n
    struct_0 *v38;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v39;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v40;  // rcx\n
    unsigned int v41;  // esi\n
    unsigned long long v43;  // rax\n
    char *v44;  // rax, Other Possible Types: unsigned long\n
    unsigned long v45;  // rdx\n
    unsigned long long v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned long v48;  // rdx, Other Possible Types: unsigned long long\n
    struct struct_2 **v49;  // rcx\n
    struct struct_2 **v50;  // rax, Other Possible Types: unsigned long\n
    struct struct_2 **v51;  // rcx, Other Possible Types: unsigned long\n
    char *v52;  // rcx\n
    char *v53;  // rbp\n
    unsigned long v54;  // r14\n
    unsigned int v55;  // r13d\n
    struct_1 *v56;  // rdi, Other Possible Types: unsigned long\n
    struct struct_2 **v57;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v58;  // rcx, Other Possible Types: unsigned long long\n
    struct struct_0 **v59;  // rbx\n
    unsigned long v60;  // r15\n
    struct struct_0 **v61;  // r15\n
    struct_1 *v62;  // r14\n
    struct struct_2 **v63;  // r13\n
    void* v64;  // rax, Other Possible Types: unsigned long\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v1 = a0;\n
    v5 = a1;\n
    v0 = 0;\n
    v4 = &v6;\n
    v3 = &v19;\n
    v2 = 206158430224;\n
    if (!a1->field_-1)\n
    {\n
        v64 = 0;\n
    }\n
    else\n
    {\n
        v31 = &v0;\n
        v32 = &v1;\n
        do\n
        {\n
            v33 = a1 + 1;\n
            v5 = v33;\n
            if (*(a1) != 37)\n
            {\n
                v34 = v1;\n
                *(v34) = *(a1);\n
                v1 = v34 + 1;\n
            }\n
            else\n
            {\n
                v36 = 0;\n
                while (true)\n
                {\n
                    v37 = v36 | 1;\n
                    v38 = v33 + 1;\n
                    v39 = v36;\n
                    do\n
                    {\n
                        v36 = v39;\n
                        v5 = v38;\n
                        v40 = *((v38 - 1));\n
                        v41 = v40;\n
                        v38 += 1;\n
                        v39 = v37;\n
                    } while (v41 == 48);\n
                    switch (v41)\n
                    {\n
                    case 37:\n
                        v44 = v1;\n
                        *(v44) = 37;\n
                        goto LABEL_448a5d;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v43 = cgc_strtol(v38 - 2, &v5, 10);\n
                        v33 = v5;\n
                        continue;\n
                    case 100:\n
                        v45 = v2;\n
                        if (v45 <= 40)\n
                        {\n
                            v2 = v45 + 8;\n
                            v48 = *((v45 + v4));\n
                            if (!(v48 < 0))\n
                                goto LABEL_448a97;\n
                        }\n
                        else\n
                        {\n
                            v49 = v3;\n
                            v3 = v49 + 1;\n
                            v48 = *(v49);\n
                            if (!(v48 < 0))\n
                                goto LABEL_448a97;\n
                        }\n
                        v52 = v1;\n
                        *(v52) = 45;\n
                        v1 = v52 + 1;\n
                        v0 += 1;\n
                        v48 = -(v48);\n
LABEL_448a97:\n
                        v56 = *(&v0);\n
                        v57 = v1;\n
                        v58 = 10;\n
LABEL_448aa2:\n
                        cgc_output_number_sprintf(v56, v57, v48, v58, 0, v36);\n
                        break;\n
                    case 115:\n
                        v46 = v2;\n
                        if (v46 <= 40)\n
                        {\n
                            v50 = v46 + v4;\n
                            v2 = v46 + 8;\n
                        }\n
                        else\n
                        {\n
                            v50 = v3;\n
                            v3 = v50 + 8;\n
                        }\n
                        v53 = *(v50);\n
                        v54 = v1;\n
                        v55 = v0;\n
                        if (cgc_strlen(v53))\n
                        {\n
                            v59 = r15<8>;\n
                            v60 = 0;\n
                            do\n
                            {\n
                                *((v54 + v60)) = v53[v60];\n
                                v60 += 1;\n
                            } while (cgc_strlen(v53) > v60);\n
                            v54 += v60;\n
                            v55 += v60;\n
                            v61 = rbx<8>;\n
                        }\n
                        v1 = v54;\n
                        v0 = v55;\n
                        v62 = &v0;\n
                        v63 = &v1;\n
                        break;\n
                    case 88:\n
                        v36 = v36 | 2;\n
                    case 120:\n
                        v47 = v2;\n
                        if (v47 <= 40)\n
                        {\n
                            v51 = v47 + v4;\n
                            v2 = v47 + 8;\n
                        }\n
                        else\n
                        {\n
                            v51 = v3;\n
                            v3 = v51 + 8;\n
                        }\n
                        v48 = *(v51);\n
                        v56 = r14<8>;\n
                        v57 = r13<8>;\n
                        v58 = 16;\n
                        goto LABEL_448aa2;\n
                    default:\n
                        v44 = v1;\n
                        *(v44) = v40;\n
LABEL_448a5d:\n
                        v1 = v44 + 1;\n
                        goto LABEL_448950;\n
                    }\n
                }\n
            }\n
LABEL_448950:\n
            v0 += 1;\n
            a1 = v5;\n
        } while (*(a1));\n
        a0 = v1;\n
        v64 = v0;\n
    }\n
    *(a0) = 0;\n
    return v64;\n
}\n
", "4491580:sub_44893c": null, "4492095:sub_448b3f": null, "4492096:cgc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-18;\n
} struct_0;\n
\n
long long cgc_realloc(struct_0 *a0, unsigned long long a1)\n
{\n
    char *v1;  // rax\n
    char *v3;  // rdx, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return cgc_malloc(a1);\n
    if (!a1)\n
    {\n
        cgc_free(a0);\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(a1);\n
        if (v1)\n
        {\n
            v3 = a0[3].field_-18 - 24;\n
            if (v3 > a1)\n
                v3 = a1;\n
            cgc_memcpy(v1, a0, v3);\n
            cgc_free(a0);\n
            return v1;\n
        }\n
    }\n
    return 0;\n
}\n
", "4492202:sub_448baa": null, "4492208:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    char v3;  // cl\n
    struct_0 *v4;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rax\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v4 = a0 + 1;\n
        while (true)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v2 != v3)\n
            {\n
                v2 = cgc_tolower(v2);\n
                if (v2 != cgc_tolower(*(v1)))\n
                {\n
                    *(&v2) = *((v4 - 1));\n
                    break;\n
                }\n
            }\n
            v1 += 1;\n
            v2 = *(v4);\n
            v4 += 1;\n
            if (!v2)\n
                goto LABEL_448c07;\n
        }\n
    }\n
LABEL_448c07:\n
    v2 = 0;\n
    v5 = cgc_tolower(v2);\n
    return v5 - cgc_tolower(*(v1));\n
}\n
", "4492230:sub_448bc6": null, "4492325:sub_448c25": null, "4492336:cgc_strcat": "long long cgc_strcat(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_strcpy(cgc_strlen() + a0, a1);\n
    return a0;\n
}\n
", "4492374:sub_448c56": null, "4492384:cgc_strchr": "long long cgc_strchr(char a0[2], unsigned long a1)\n
{\n
    char v1[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // cl, Other Possible Types: char\n
\n
    v1 = a0;\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        do\n
        {\n
            if (v2 == a1)\n
                return v1;\n
            v2 = *((v1 + 1));\n
            v1 += 1;\n
        } while (v2);\n
    }\n
    if (!a1)\n
        return v1;\n
    return 0;\n
}\n
", "4492428:sub_448c8c": null, "4492432:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4492485:sub_448cc5": null, "4492496:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v1;  // rax\n
    char v2;  // cl\n
    unsigned long v3;  // rdi\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    if (!*(a1))\n
    {\n
        *(a0) = 0;\n
        return a0;\n
    }\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = v2;\n
        v2 = a1[1 + v3];\n
        v3 += 1;\n
    } while (v2);\n
    v1[v3] = 0;\n
    return v1;\n
}\n
", "4492543:sub_448cff": null, "4492544:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // rbx\n
    char *v2;  // rax\n
\n
    v1 = cgc_strlen() + 1;\n
    v2 = cgc_malloc(v1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4492603:sub_448d3b": null, "4492608:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((a0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4492636:sub_448d5c": null, "4492640:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    char v2[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    char v3;  // cl\n
    unsigned long long v4;  // rax\n
    unsigned long v5;  // rax, Other Possible Types: char\n
    unsigned long v6;  // rbx\n
\n
    if (!a2)\n
        return 0;\n
    v1 = a1;\n
    v2 = a0;\n
    if (a2 != 1)\n
    {\n
        for (v5 = a0[0]; v5; v2 += 1)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v5 != v3)\n
            {\n
                v4 = cgc_tolower(v5);\n
                if (v4 != cgc_tolower(*(v1)))\n
                    break;\n
            }\n
            v1 += 1;\n
            v5 = *((v2 + 1));\n
        }\n
    }\n
    v6 = cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
    return v6;\n
}\n
", "4492697:sub_448d99": null, "4492757:sub_448dd5": null, "4492768:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_2;  // tmp #2\n
    int tmp_8;  // tmp #8\n
    unsigned long v1;  // rdx, Other Possible Types: unsigned long long\n
    char *v2;  // r8\n
    char *v3;  // r9\n
    char v4;  // al\n
    char v5;  // cl\n
\n
    if (!a2)\n
        return 0;\n
    tmp_2 = a2;\n
    v1 = a2 - 1;\n
    if (tmp_2 == 1)\n
        return *(a0) - *(a1);\n
    v2 = &a0[v1];\n
    v3 = &a1[v1];\n
    while (true)\n
    {\n
        v4 = *(a0);\n
        if (!v4)\n
            return *(a0) - *(a1);\n
        v5 = *(a1);\n
        if (!v5)\n
        {\n
            return *(a0) - *(a1);\n
        }\n
        else if (v4 != v5)\n
        {\n
            return *(a0) - *(a1);\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            a1 += 1;\n
            tmp_8 = v1;\n
            v1 -= 1;\n
            if (tmp_8 == 1)\n
                return *(v2) - *(v3);\n
        }\n
    }\n
}\n
", "4492850:sub_448e32": null, "4492864:cgc_strncpy": "long long cgc_strncpy(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_13;  // tmp #13\n
    unsigned long v1;  // rax\n
    unsigned long v2;  // rbx\n
    char v3;  // cl\n
    unsigned long long *v4;  // r8\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r10\n
    unsigned long long v7;  // r9\n
    uint128_t *v8;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v9;  // r10, Other Possible Types: unsigned long long\n
    unsigned long v10;  // r11\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rsi\n
    unsigned long long *v14;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long *v15;  // rsi\n
    unsigned long v16;  // r9\n
\n
    v1 = a0;\n
    v2 = 0;\n
    if (a2)\n
    {\n
        while (true)\n
        {\n
            v3 = *((a1 + v2));\n
            a0[v2] = v3;\n
            if (!v3)\n
                break;\n
            v2 += 1;\n
            if (a2 == v2)\n
                return a0;\n
        }\n
    }\n
    if (v2 >= a2)\n
        return a0;\n
    v4 = a2 - v2;\n
    if (v4 < 8)\n
    {\n
        do\n
        {\n
LABEL_448f80:\n
            *((v1 + v2)) = 0;\n
            v2 += 1;\n
        } while (a2 != v2);\n
        return v1;\n
    }\n
    if (v4 < 32)\n
    {\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        v14 = v4 & -0x20;\n
        v5 = v14 - 32;\n
        v6 = (v5 >> 5) + 1;\n
        v7 = v6 & 3;\n
        if (v5 < 96)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v9 = v6 & -4;\n
            v10 = v2 + v1 + 112;\n
            v8 = 0;\n
            do\n
            {\n
                *((v10 + v8 - 112)) = 0;\n
                *((v10 + v8 - 96)) = 0;\n
                *((v10 + v8 - 80)) = 0;\n
                *((v10 + v8 - 64)) = 0;\n
                *((v10 + v8 - 48)) = 0;\n
                *((v10 + v8 - 32)) = 0;\n
                *((v10 + v8 - 16)) = 0;\n
                *((v10 + v8)) = 0;\n
                v8 -= -128;\n
                tmp_13 = v9;\n
                v9 -= 4;\n
            } while (tmp_13 != 4);\n
        }\n
        if (v7)\n
        {\n
            v11 = v1 + v8 + v2 + 16;\n
            v13 = 0;\n
            do\n
            {\n
                *((-16 + v11 + v13)) = 0;\n
                *((v11 + v13)) = 0;\n
                v13 += 32;\n
            } while (v7 * 32 != v13);\n
        }\n
        if (v4 == v14)\n
            return v1;\n
        if (!(v4 & 24))\n
        {\n
            v2 += v14;\n
            goto LABEL_448f80;\n
        }\n
    }\n
    v15 = v4 & -8;\n
    v16 = v1 + v2;\n
    v2 += v15;\n
    do\n
    {\n
        *((v16 + v14)) = 0;\n
        v14 += 8;\n
    } while (v15 != v14);\n
    if (v4 == v15)\n
        return v1;\n
    goto LABEL_448f80;\n
}\n
", "4493199:sub_448f8f": null, "4493200:cgc_strsep": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strsep(struct struct_1 **a0, char a1[2])\n
{\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // cl, Other Possible Types: char\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (!v1)\n
        return 0;\n
    v2 = *(v1);\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a1, v2))\n
            {\n
                v1 = *(a0);\n
                if (*((v3 - 1)))\n
                {\n
                    *((v3 - 1)) = 0;\n
                    goto LABEL_448fe9;\n
                }\n
                goto LABEL_448fe7;\n
            }\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
        v1 = *(a0);\n
    }\n
LABEL_448fe7:\n
    v3 = 0;\n
LABEL_448fe9:\n
    *(a0) = v3;\n
    return v1;\n
}\n
", "4493298:sub_448ff2": null, "4493312:cgc_strtol": "long long cgc_strtol(char *a0, unsigned long long *a1, unsigned int a2)\n
{\n
    unsigned long v1;  // r9d, Other Possible Types: unsigned int\n
    void* v2;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    char *v3;  // r8, Other Possible Types: unsigned long, unsigned long long\n
    char *v4;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rbx\n
    unsigned long v6;  // rax\n
    unsigned long long v7;  // r9\n
    char v8[2];  // r8, Other Possible Types: unsigned long\n
    void* v9;  // r10, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v10;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v11;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v12;  // r10\n
    unsigned long long v13;  // rcx\n
    unsigned int v14;  // r11d\n
\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = a0;\n
    if (a2 <= 36 && a2 != 1)\n
    {\n
        v4 = a0;\n
        while (true)\n
        {\n
            v5 = *(v4);\n
            if (v5 - 9 >= 4 && v5 != 32)\n
                break;\n
            v4 += 1;\n
        }\n
        v6 = 0;\n
        *(&v6) = v5 == 45;\n
        v7 = (*((v4 + v6)) == 43) + v6;\n
        v8 = v4 + v7;\n
        if (!a2)\n
        {\n
            a2 = 10;\n
            if (v8[0] == 48)\n
            {\n
                if ((*((v4 + v7 + 1)) | 32) != 120)\n
                {\n
                    v8 = v4 + v7 + 1;\n
                    a2 = 8;\n
                }\n
                else\n
                {\n
                    v8 = v4 + v7 + 2;\n
                    a2 = 16;\n
                }\n
            }\n
        }\n
        else if (a2 == 16)\n
        {\n
            a2 = 16;\n
            if (v8[0] == 48 && (*((v4 + v7 + 1)) | 32) == 120)\n
                v8 = v4 + v7 + 2;\n
        }\n
        v1 = 0;\n
        v9 = 0;\n
        v10 = *(v8);\n
        if (!(v10 - 48 < 10))\n
            goto LABEL_4490e0;\n
        while (true)\n
        {\n
            v11 = v10 - 48;\n
            if (v11 >= a2)\n
                break;\n
            while (true)\n
            {\n
                v12 = a2 * v9;\n
                v13 = v11 + v12;\n
                v1 += 1;\n
                v9 = v13;\n
                v10 = *((v8 + v1));\n
                if (v10 - 48 < 10)\n
                    break;\n
LABEL_4490e0:\n
                v14 = -65;\n
                if (v10 - 65 >= 26)\n
                {\n
                    v14 = -97;\n
                    if (v10 - 97 < 26)\n
                        goto LABEL_4490fa;\n
                    else\n
                        goto LABEL_449120;\n
                }\n
LABEL_4490fa:\n
                v11 = v10 + v14 + 10;\n
                if (v11 >= a2)\n
                    goto LABEL_449120;\n
            }\n
        }\n
LABEL_449120:\n
        v2 = -(v9);\n
        if (v5 != 45)\n
            v2 = v9;\n
        v3 = v8 + v1;\n
    }\n
    if (!a1)\n
        return v2;\n
    if (!v1)\n
        v3 = a0;\n
    *(a1) = v3;\n
    return v2;\n
}\n
", "4493347:sub_449023": null, "4493529:sub_4490d9": null, "4493634:sub_449142": null, "4493648:cgc_strtoul": "long long cgc_strtoul(char *a0, unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4493653:sub_449155": null, "4493664:main": "extern unsigned long long funcs;\n
extern unsigned long long g_46a3a0;\n
extern unsigned long long g_46a470;\n
extern unsigned long long g_46a478;\n
extern unsigned long long secret_key;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x80]\n
    void* v1;  // [bp-0x78]\n
    char v2;  // [bp-0x70]\n
    char v3;  // [bp-0x68]\n
    char v4;  // [bp-0x58]\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rax\n
    struct struct_0 **v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v9;  // rax\n
    unsigned long long v10;  // rbp\n
    void* v11;  // rdi, Other Possible Types: unsigned long\n
    struct struct_0 **v12;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v13;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long v14;  // rdi, Other Possible Types: unsigned long long\n
    struct struct_0 **v15;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v16;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v17;  // rcx, Other Possible Types: unsigned long long\n
\n
    g_46a428 - secret_key(0);\n
    funcs - secret_key(3735928559);\n
    g_46a490 - secret_key(&v3, 128);\n
    g_46a400 - secret_key(&v3, \"It is a melancholy object to those, who walk through this great town, or travel in the country, when they see the streets, the roads and cabbin-doors crowded with beggars of the female sex, followed by three, four, or six children, all in rags, and importuning every passenger for an alms. These mothers instead of being able to work for their honest livelihood, are forced to employ all their time in stroling to beg sustenance for their helpless infants who, as they grow up, either turn thieves for want of work, or leave their dear native country, to fight for the Pretender in Spain, or sell themselves to the Barbadoes. I think it is agreed by all parties, that this prodigious number of children in the arms, or on the backs, or at the heels of their mothers, and frequently of their fathers, is in the present deplorable state of the kingdom, a very great additional grievance; and therefore whoever could find out a fair, cheap and easy method of making these children sound and useful members of the common-wealth,\");\n
    if (!g_46a460 - secret_key(&v0))\n
        return 0;\n
    while (true)\n
    {\n
        v6 = *(&v0);\n
        if (v6 > 942831951)\n
        {\n
            if (v6 - 1765380981 < 2)\n
            {\n
                if (g_46a468 - secret_key(&v4, 32) >= 0)\n
                {\n
                    v9 = g_46a3e0 - secret_key(&v4, *(&v0) == 1765380982);\n
                    v12 = g_46a478 - secret_key;\n
                    if (v9 < 0)\n
                    {\n
                        v14 = 3;\n
                        goto LABEL_449229;\n
                    }\n
                    else\n
                    {\n
                        v13 = v9;\n
                        v12(0);\n
                        v17 = g_46a470;\n
                        goto LABEL_44921f;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                if (v6 == 942831952)\n
                {\n
                    if (g_46a460 - secret_key(&v2))\n
                    {\n
                        g_46a3e8 - secret_key(7, *(&v2));\n
LABEL_4494fb:\n
                        v12 = g_46a478 - secret_key;\n
                        v14 = 0;\n
                        goto LABEL_449229;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v6 == 944121411 && g_46a468 - secret_key(&v4, 32) >= 0)\n
                    {\n
                        v12 = g_46a478 - secret_key;\n
                        if (g_46a3f0 - secret_key(&v4))\n
                        {\n
                            v14 = 0;\n
                            goto LABEL_449229;\n
                        }\n
                    }\n
                }\n
            }\n
            v12 = g_46a478 - secret_key;\n
            v14 = 1;\n
            goto LABEL_449229;\n
        }\n
        if (v6 > 10371)\n
        {\n
            if (v6 == 10372)\n
            {\n
                v7 = g_46a408 - secret_key(&v3, 0);\n
                v12 = g_46a478 - secret_key;\n
                if (v7)\n
                {\n
                    v13 = v7;\n
                    v12(0);\n
                    g_46a480 - secret_key(v7);\n
                    v17 = g_46a3a0;\n
LABEL_44921f:\n
                    v12 = v17 - secret_key;\n
                    v14 = v13;\n
                    goto LABEL_449229;\n
                }\n
            }\n
            else if (v6 == 898201906 && g_46a460 - secret_key(&v2))\n
            {\n
                v15 = funcs - secret_key;\n
                v16 = *(&v2);\n
                goto LABEL_4494bf;\n
            }\n
        }\n
        else\n
        {\n
            if (v6 != 6513)\n
            {\n
                if (!v6)\n
                {\n
                    g_46a478 - secret_key(0);\n
                    return 0;\n
                }\n
LABEL_44922d:\n
                if (!g_46a460 - secret_key(&v0))\n
                    return 0;\n
            }\n
            else\n
            {\n
                v8 = g_46a3a0 - secret_key;\n
                v11 = 0;\n
                v8(v11);\n
                v10 = g_46a408 - secret_key(&v3, 1);\n
                if (!v10)\n
                {\n
                    v12 = g_46a478 - secret_key;\n
                }\n
                else\n
                {\n
                    if (g_46a438 - secret_key(v10) >= 3)\n
                    {\n
                        if (*((g_46a438 - secret_key(v10) + v10 - 2)) == 46)\n
                            goto LABEL_4493d0;\n
                        v1 = 0;\n
                        g_46a478 - secret_key(0);\n
                        g_46a480 - secret_key(v10);\n
                        if (g_46a460 - secret_key(&v1) && v1)\n
                            g_46a400 - secret_key(&v3, v10);\n
                        v15 = g_46a3a0 - secret_key;\n
                        v16 = v10;\n
                    }\n
                    else\n
                    {\n
LABEL_4493d0:\n
                        v8 = g_46a3a0 - secret_key;\n
                        v11 = v10;\n
                        continue;\n
                    }\n
LABEL_4494bf:\n
                    v15(v16);\n
                    goto LABEL_4494fb;\n
                }\n
                v14 = 2;\n
LABEL_449229:\n
                v12(v14);\n
                goto LABEL_44922d;\n
            }\n
        }\n
    }\n
}\n
", "4494039:sub_4492d7": null, "4494138:sub_44933a": null, "4494278:sub_4493c6": null, "4494786:sub_4495c2": null, "4494800:cgc_my_protect": "extern uint128_t funcs;\n
extern uint128_t g_46a3a0;\n
extern uint128_t g_46a3b0;\n
extern uint128_t g_46a3c0;\n
extern uint128_t g_46a3d0;\n
extern uint128_t g_46a3e0;\n
extern uint128_t g_46a3f0;\n
extern uint128_t g_46a400;\n
extern uint128_t g_46a410;\n
extern uint128_t g_46a420;\n
extern uint128_t g_46a430;\n
extern uint128_t g_46a440;\n
extern uint128_t g_46a450;\n
extern uint128_t g_46a460;\n
extern uint128_t g_46a470;\n
extern uint128_t g_46a480;\n
extern uint128_t g_46a490;\n
extern uint128_t g_46a4a0;\n
extern uint128_t g_46a4b0;\n
extern unsigned long long g_46a4c0;\n
extern unsigned long long secret_key;\n
\n
long long cgc_my_protect(unsigned long a0)\n
{\n
    unsigned long long v1;  // rax\n
    int v2;  // xmm0\n
\n
    v1 = a0 - secret_key;\n
    v2 = ((0 CONCAT a0 - secret_key) >> 32) CONCAT (0 CONCAT a0 - secret_key) CONCAT ((0 CONCAT a0 - secret_key) >> 32) CONCAT (0 CONCAT a0 - secret_key);\n
    *(&funcs) = funcs + v2;\n
    *(&g_46a3a0) = g_46a3a0 + v2;\n
    *(&g_46a3b0) = g_46a3b0 + v2;\n
    *(&g_46a3c0) = g_46a3c0 + v2;\n
    *(&g_46a3d0) = g_46a3d0 + v2;\n
    *(&g_46a3e0) = g_46a3e0 + v2;\n
    *(&g_46a3f0) = g_46a3f0 + v2;\n
    *(&g_46a400) = g_46a400 + v2;\n
    *(&g_46a410) = g_46a410 + v2;\n
    *(&g_46a420) = g_46a420 + v2;\n
    *(&g_46a430) = g_46a430 + v2;\n
    *(&g_46a440) = g_46a440 + v2;\n
    *(&g_46a450) = g_46a450 + v2;\n
    *(&g_46a460) = g_46a460 + v2;\n
    *(&g_46a470) = g_46a470 + v2;\n
    *(&g_46a480) = g_46a480 + v2;\n
    *(&g_46a490) = g_46a490 + v2;\n
    *(&g_46a4a0) = g_46a4a0 + v2;\n
    *(&g_46a4b0) = v2 + g_46a4b0;\n
    g_46a4c0 = g_46a4c0 + a0 - secret_key;\n
    secret_key = a0;\n
    return v1;\n
}\n
", "4495211:sub_44976b": null, "4495216:cgc_my_strdup": "long long cgc_my_strdup(unsigned long long a0)\n
{\n
    unsigned long long v2;  // rax\n
\n
    v2 = g_46a398 - secret_key(g_46a438 - secret_key() + 1, 1);\n
    if (v2)\n
    {\n
        g_46a3b0 - secret_key(v2, a0);\n
        return v2;\n
    }\n
    return 0;\n
}\n
", "4495316:sub_4497d4": null, "4495328:cgc_my_strcpy": "long long cgc_my_strcpy(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    g_46a438 - secret_key(a1);\n
    goto *(4629432) - *(4728496);\n
}\n
", "4495394:sub_449822": null, "4495408:cgc_my_memcpy": "long long cgc_my_memcpy(unsigned long a0, char *a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    unsigned long long v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rcx\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    unsigned long v6;  // r9, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rcx\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    int v10;  // xmm1\n
    int v11;  // xmm1\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rcx\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return v1;\n
    if (a2 >= 8)\n
    {\n
        v1 = a1 + a2;\n
        if (v1 <= a0)\n
        {\n
LABEL_4498c4:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v7 = 0;\n
                }\n
                else\n
                {\n
                    v6 = v4 & -4;\n
                    v7 = 0;\n
                    do\n
                    {\n
                        v8 = *(&a1[16 + v7]);\n
                        *((a0 + v7)) = *(&a1[v7]);\n
                        *((a0 + v7 + 16)) = v8;\n
                        v9 = *(&a1[48 + v7]);\n
                        *((a0 + v7 + 32)) = *(&a1[32 + v7]);\n
                        *((a0 + v7 + 48)) = v9;\n
                        v10 = *(&a1[80 + v7]);\n
                        *((a0 + v7 + 64)) = *(&a1[64 + v7]);\n
                        *((a0 + v7 + 80)) = v10;\n
                        v11 = *(&a1[112 + v7]);\n
                        *((a0 + v7 + 96)) = *(&a1[96 + v7]);\n
                        *((a0 + v7 + 112)) = v11;\n
                        v7 -= -128;\n
                        tmp_21 = v6;\n
                        v6 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = a0 + v7 + 16;\n
                    v13 = &a1[v7 + 16];\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_449858;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *((a0 + v17)) = *(&a1[v17]);\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_449858:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1 = a1[v2];\n
                    *((a0 + v2)) = v1;\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                *((a0 + v2)) = a1[v2];\n
                *((a0 + v2 + 1)) = a1[1 + v2];\n
                *((a0 + v2 + 2)) = a1[2 + v2];\n
                v1 = a1[3 + v2];\n
                *((a0 + v2 + 3)) = v1;\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else\n
        {\n
            v1 = &a2[a0];\n
            if (v1 <= a1)\n
                goto LABEL_4498c4;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_449858;\n
}\n
", "4495839:sub_4499df": null, "4495840:cgc_my_strncmp": "long long cgc_my_strncmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v2;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
\n
    if (!a2)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        while (*((a0 + v2)))\n
        {\n
            if (!*((a1 + v2)))\n
                break;\n
            v3 = g_46a3d0 - secret_key();\n
            if (v3)\n
                return v3;\n
            v2 += 1;\n
            if (a2 == v2)\n
                return 0;\n
        }\n
    }\n
    if (v2 == a2)\n
        return 0;\n
    goto g_46a3d0 - secret_key;\n
}\n
", "4495989:sub_449a75": null, "4496000:cgc_my_strcmp": "long long cgc_my_strcmp(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // al, Other Possible Types: char\n
    char *v2;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
\n
    v1 = *(a0);\n
    if (!*(a0))\n
    {\n
LABEL_449ad3:\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        while (*((a1 + v2)))\n
        {\n
            v3 = g_46a3d0 - secret_key(v1);\n
            if (v3)\n
                return v3;\n
            v1 = a0[1 + v2];\n
            v2 += 1;\n
            if (!v1)\n
                goto LABEL_449ad3;\n
        }\n
    }\n
    goto *(4629456) - *(4728496);\n
}\n
", "4496127:sub_449aff": null, "4496128:cgc_my_bytecmp": "long long cgc_my_bytecmp(unsigned long a0, unsigned long a1)\n
{\n
    return a0 - a1;\n
}\n
", "4496135:sub_449b07": null, "4496144:cgc_my_to_lower": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_my_to_lower(char *a0)\n
{\n
    unsigned long v1;  // al, Other Possible Types: char\n
    struct_0 *v2;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (!*(a0))\n
        return v1;\n
    v2 = a0 + 1;\n
    do\n
    {\n
        *((v2 - 1)) = v1 | 32;\n
        v1 = *(v2);\n
        v2 += 1;\n
    } while (v1);\n
    return v1;\n
}\n
", "4496177:sub_449b31": null, "4496192:cgc_my_search_words": "extern unsigned long long words;\n
\n
long long cgc_my_search_words(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long v4;  // rbp\n
    unsigned long long v5;  // rsi\n
    unsigned long v6;  // r14\n
\n
    v0 = v2;\n
    v3 = g_46a438 - secret_key();\n
    if (!words)\n
        return -1;\n
    v4 = !a1 | 6;\n
    v6 = 0;\n
    while (true)\n
    {\n
        if (!funcs[v4] - secret_key(a0))\n
            return v6;\n
        v5 = (&words)[1 + v6];\n
        v6 += 1;\n
        if (!v5)\n
            return -1;\n
    }\n
}\n
", "4496352:cgc_my_sort_words": "extern unsigned long long g_46a4d8;\n
extern unsigned long long words[3];\n
\n
long long cgc_my_sort_words(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long long v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v4;  // r13d\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7[3];  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // rsi\n
\n
    v0 = v2;\n
    if (!g_46a4d8)\n
        return v2;\n
    while (true)\n
    {\n
        v4 = 1;\n
        v7 = &words[0];\n
        if (a1)\n
        {\n
            do\n
            {\n
                v2 = (&funcs)[a0] - secret_key(*(v7));\n
                if ((v2 & 0x80000000))\n
                {\n
                    v2 = *(v7);\n
                    v5 = *((v7 + 8));\n
                    *((v7 + 8)) = v2;\n
                    *(v7) = v5;\n
                    v4 = 0;\n
                }\n
                v6 = *((v7 + 16));\n
                v7 += 8;\n
            } while (v6);\n
        }\n
        else\n
        {\n
            do\n
            {\n
                v2 = (&funcs)[a0] - secret_key(*(v7));\n
                if (v2 > 0)\n
                {\n
                    v2 = *(v7);\n
                    v8 = *((v7 + 8));\n
                    *((v7 + 8)) = v2;\n
                    *(v7) = v8;\n
                    v4 = 0;\n
                }\n
                v9 = *((v7 + 16));\n
                v7 += 8;\n
            } while (v9);\n
        }\n
        if (v4)\n
        {\n
            return v2;\n
        }\n
        else if (!g_46a4d8)\n
        {\n
            return v2;\n
        }\n
    }\n
}\n
", "4496476:sub_449c5c": null, "4496537:sub_449c99": null, "4496580:sub_449cc4": null, "4496592:cgc_my_add_word": "extern char words;\n
\n
long long cgc_my_add_word(unsigned long long a0)\n
{\n
    unsigned long long *v2;  // rbx, Other Possible Types: unsigned long\n
\n
    if (!g_46a3f8 - secret_key())\n
        return 0;\n
    v2 = -1;\n
    do\n
    {\n
        v2 += 1;\n
    } while (*(&words));\n
    if (v2 > 11999)\n
        return 0;\n
    *(&(&words)[8 * v2]) = g_46a3a8 - secret_key(a0);\n
    *(&(&words)[8 + 8 * v2]) = 0;\n
    return 1;\n
}\n
", "4496713:sub_449d49": null, "4496720:cgc_my_verify_word": "extern unsigned long long g_46a430;\n
extern unsigned long long secret_key;\n
\n
long long cgc_my_verify_word(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x29]\n
    unsigned int v3;  // ebp\n
    unsigned long long v4;  // rax\n
    unsigned int v5;  // r12d\n
    unsigned long v6;  // r14\n
\n
    v3 = 0;\n
    v4 = g_46a438 - secret_key();\n
    v5 = v4 - 3;\n
    if (v4 >= 4)\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            g_46a430 - secret_key(&v0, a0, 3, g_46a430 - secret_key);\n
            v1 = 0;\n
            if (g_46a3e0 - secret_key(&v0, 1) >= 0)\n
                break;\n
            v3 += 1;\n
            if (v5 == v3)\n
                return 0;\n
        }\n
    }\n
    v6 = (v3 == v5 ? g_46a3e0 - secret_key(a0, 0) >> 63 : 0);\n
    return v6;\n
}\n
", "4496915:sub_449e13": null, "4496928:cgc_my_analyze_text": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long g_46a3b8;\n
extern unsigned long long g_46a4a8;\n
extern unsigned long long secret_key;\n
\n
long long cgc_my_analyze_text(unsigned long a0, char a1[2])\n
{\n
    unsigned long long v0;  // [bp-0xc0]\n
    int tmp_9;  // tmp #9\n
    char v1;  // [bp-0xb8]\n
    char v2;  // [bp-0x78]\n
    unsigned long v4;  // al, Other Possible Types: unsigned long long, char\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
    char v6[2];  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v7;  // r13\n
    unsigned long long v8;  // rdi\n
    unsigned int v9;  // r14d\n
    char v10[2];  // rax\n
    unsigned long long v11;  // rbx\n
    unsigned long v12;  // r13, Other Possible Types: unsigned long long\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
\n
    v0 = a0;\n
    v2 = 0;\n
    v4 = a1[0];\n
    if (a1[0])\n
    {\n
        v5 = a1;\n
        while (true)\n
        {\n
            v4 = g_46a440 - secret_key(v4);\n
            if (!v4)\n
            {\n
                *(&v4) = *((v5 + 1));\n
                v5 += 1;\n
                if (!a1[1])\n
                    break;\n
            }\n
            else\n
            {\n
                *(&v4) = *(v5);\n
                if (!*(v5))\n
                    break;\n
                v6 = v5;\n
                while (true)\n
                {\n
                    v4 = g_46a440 - secret_key(v4);\n
                    if (!v4)\n
                        break;\n
                    v4 = *((v6 + 1));\n
                    v6 += 1;\n
                    if (!v4)\n
                        break;\n
                }\n
                v7 = v6 - v5;\n
                if (v7 <= 63)\n
                {\n
                    do\n
                    {\n
                        v8 = *(v6);\n
                        if (!v8)\n
                        {\n
                            v9 = 0;\n
                            goto LABEL_449f37;\n
                        }\n
                        v9 = 0;\n
                        if (g_46a440 - secret_key(v8))\n
                            goto LABEL_449f37;\n
                        v10 = v6 + 1;\n
                        tmp_9 = *(v6);\n
                        v6 = v10;\n
                    } while (tmp_9 != 46);\n
                    v9 = 1;\n
                    v6 = v10;\n
LABEL_449f37:\n
                    g_46a3b8 - secret_key(&v1, v5, v7, g_46a3b8 - secret_key);\n
                    *((&v1 + v7)) = 0;\n
                    g_46a3d8 - secret_key(&v1);\n
                    while (true)\n
                    {\n
                        v11 = v0;\n
                        v12 = g_46a4a0 - secret_key(v11, &v2);\n
                        if (!v12)\n
                        {\n
                            v4 = g_46a398 - secret_key(1, 16);\n
                            if (!v4)\n
                                break;\n
                            v12 = v4;\n
                            g_46a490 - secret_key(v4, 8);\n
                            g_46a4a8 - secret_key(v11, &v2, v4, g_46a4a8 - secret_key);\n
                        }\n
                        g_46a4a8 - secret_key(v12, &v1, g_46a4a0 - secret_key(v12, &v1) + 1);\n
                        v4 = g_46a3b0 - secret_key(&v2, &v1);\n
                        if (!v9)\n
                            break;\n
                        v1 = 0;\n
                        v9 = 0;\n
                    }\n
                }\n
                *(&v4) = *(v6);\n
                v5 = v6;\n
                if (!*(v6))\n
                    break;\n
            }\n
        }\n
        if (!v1)\n
            return v4;\n
    }\n
    v1 = 0;\n
    v13 = g_46a4a0 - secret_key(v0, &v2);\n
    if (!v13)\n
    {\n
        v4 = g_46a398 - secret_key(1, 16);\n
        if (!v4)\n
            return v4;\n
        v13 = v4;\n
        g_46a490 - secret_key(v4, 8);\n
        g_46a4a8 - secret_key(v0, &v2, v4, g_46a4a8 - secret_key);\n
    }\n
    v4 = g_46a4a8 - secret_key(v13, &v1, g_46a4a0 - secret_key(v13, &v1) + 1);\n
    return v4;\n
}\n
", "4496980:sub_449e54": null, "4497180:sub_449f1c": null, "4497710:sub_44a12e": null, "4497712:cgc_my_generate_text": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long g_463b54;\n
extern unsigned long long g_46a3b8;\n
extern unsigned long long secret_key;\n
\n
long long cgc_my_generate_text(unsigned long long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0xb8]\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
    unsigned long v5;  // r13, Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // r14\n
    unsigned long long v8;  // rax\n
    char v10;  // cl\n
    unsigned long long v11;  // r14\n
    struct_0 *v12;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v13;  // rdi, Other Possible Types: unsigned long\n
\n
    v2 = &g_463b54;\n
    v3 = 0;\n
    do\n
    {\n
        v4 = g_46a418 - secret_key(g_46a4a0 - secret_key(a0, v2), v3);\n
        if (!v4)\n
            return 0;\n
        v2 = v4;\n
        if (!a1)\n
        {\n
            v5 = v4;\n
        }\n
        else\n
        {\n
            v5 = v4;\n
            if (!g_46a420 - secret_key(0, 10))\n
                v5 = g_46a410 - secret_key(0);\n
        }\n
        v6 = g_46a438 - secret_key(v5);\n
        v7 = v6;\n
        v8 = v6 + v3;\n
        if (v8 - 123 < -128)\n
        {\n
            v13 = &v0;\n
            v12 = v3 + 2;\n
            *((v3 + v13 + 1)) = 11822;\n
            goto LABEL_44a30d;\n
        }\n
        if (!v3)\n
        {\n
            g_46a3b8 - secret_key(&v0, v5, v7, g_46a3b8 - secret_key);\n
            v0 &= 223;\n
            v3 = 0;\n
            goto LABEL_44a184;\n
        }\n
        if (!g_46a3c8 - secret_key(v5, \"s\"))\n
        {\n
            v10 = 39;\n
        }\n
        else\n
        {\n
            v10 = 32;\n
            if (!g_46a3c8 - secret_key(v5, &g_463b54))\n
                goto LABEL_44a2ba;\n
        }\n
        (&v0)[v3] = v10;\n
        v3 += 1;\n
LABEL_44a2ba:\n
        g_46a3b8 - secret_key(&(&v0)[v3], v5, v7, g_46a3b8 - secret_key);\n
LABEL_44a184:\n
        v3 += v7;\n
    } while (g_46a3c8 - secret_key(v2, &g_463b54));\n
    v11 = v7 - 123 + v3;\n
    v12 = v3;\n
    v13 = &v0;\n
LABEL_44a30d:\n
    (&v0)[v3] = 46;\n
    *((v12 + v13 + 1)) = 0;\n
    return g_46a3a8 - secret_key();\n
}\n
", "4497747:sub_44a153": null, "4497960:sub_44a228": null, "4498091:sub_44a2ab": null, "4498235:sub_44a33b": null, "4498240:cgc_my_random_word": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern unsigned long long g_463b54;\n
\n
long long cgc_my_random_word(unsigned long long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    int tmp_2;  // tmp #2\n
    char v1;  // [bp-0x28]\n
    unsigned long long v3;  // r12\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long\n
    void* v6;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v7;  // rax, Other Possible Types: unsigned long\n
    unsigned long v8;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v9;  // rax\n
\n
    v3 = a0;\n
    g_46a4b8 - secret_key();\n
    v5 = *(&v1);\n
    if (!v5)\n
        return 0;\n
    v6 = 0;\n
    do\n
    {\n
        v6 += *((v5 + 24));\n
        g_46a4c0 - secret_key(a0, &v0);\n
        v5 = *(&v1);\n
    } while (v5);\n
    if (!v6)\n
        return 0;\n
    v8 = g_46a420 - secret_key(0, v6);\n
    g_46a4b8 - secret_key(v3, &v0);\n
    v7 = *(&v1);\n
    if (v7)\n
    {\n
        while (true)\n
        {\n
            tmp_2 = v8;\n
            v8 -= *((v7 + 24));\n
            if (tmp_2 < *((v7 + 24)))\n
                break;\n
            g_46a4c0 - secret_key(v3, &v0);\n
            v7 = *(&v1);\n
            if (!v7)\n
                break;\n
        }\n
    }\n
    if (!g_46a4a0 - secret_key(v3, &g_463b54))\n
        return *((*(&v1) + 16));\n
    v9 = g_46a420 - secret_key(0, 10);\n
    if (a1 < 30)\n
    {\n
        if (a1 < 20)\n
        {\n
            if (v9 > 8)\n
                return &g_463b54;\n
        }\n
        else\n
        {\n
            if (v9 > 4)\n
                return &g_463b54;\n
        }\n
    }\n
    else\n
    {\n
        if (v9 > 2)\n
            return &g_463b54;\n
    }\n
}\n
", "4498596:sub_44a4a4": null, "4498608:cgc_my_randint": "long long cgc_my_randint(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // r15\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v5;  // rdx, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = a1 - a0;\n
    do\n
    {\n
        v4 = cgc_tornado();\n
        v5 = 4294967295;\n
        if (!v3 >> 32)\n
            v5 = (0 CONCAT -1) /m v3 >> 32;\n
    } while ((v5 ^ 4294967295) <= v4);\n
    if (v4 >= v3)\n
        v4 = (0 CONCAT v4) /m v3 >> 32;\n
    return v4 + a0;\n
}\n
", "4498708:sub_44a514": null, "4498720:cgc_my_strncpy": "long long cgc_my_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!a2)\n
        return v1;\n
    v1 = 1;\n
    while (true)\n
    {\n
        *((a0 + v1 - 1)) = *((a1 + v1 - 1));\n
        if (!*((a1 + v1 - 1)))\n
            break;\n
        v1 += 1;\n
        if (1 >= a2)\n
            break;\n
    }\n
    return v1;\n
}\n
", "4498765:sub_44a54d": null, "4498768:cgc_my_strlen": "long long cgc_my_strlen(unsigned long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((a0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4498796:sub_44a56c": null, "4498800:cgc_my_read": "long long cgc_my_read(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (!g_46a460 - secret_key(&v0))\n
    {\n
        return -1;\n
    }\n
    else if (v0 > a1)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        return -(g_46a458 - secret_key(a0) < 1) | v0;\n
    }\n
}\n
", "4498895:sub_44a5cf": null, "4498896:cgc_my_read_all": "long long cgc_my_read_all(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    int tmp_5;  // tmp #5\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // rax\n
    unsigned long v7;  // rbx, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    if (a1)\n
    {\n
        v3 = a1;\n
        v7 = a0;\n
        do\n
        {\n
            if (cgc_receive(a0, a1, v4, v5))\n
                return 0;\n
            v6 = v0;\n
            if (!v6)\n
                return 0;\n
            v7 += v6;\n
            tmp_5 = v3;\n
            v3 -= v6;\n
        } while (tmp_5 != v6);\n
    }\n
    return 1;\n
}\n
", "4498986:sub_44a62a": null, "4498992:cgc_my_read_uint": "long long cgc_my_read_uint(unsigned long long *a0)\n
{\n
    char v0;  // [bp-0x1a]\n
    char v1;  // [bp-0x19]\n
    char v2;  // [bp-0x18]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!g_46a458 - secret_key(&v0, 1))\n
        return 0;\n
    v5 = v0;\n
    if (v5 < 0)\n
    {\n
        if (v5 == 255)\n
        {\n
            if (g_46a458 - secret_key(&v2, 8))\n
                v5 = *(&v2);\n
            else\n
                return 0;\n
        }\n
        else\n
        {\n
            if (g_46a458 - secret_key(&v1, 1))\n
                v5 = v1 | (v0 & 127) * 0x100;\n
            else\n
                return 0;\n
        }\n
    }\n
    *(a0) = v5;\n
    return 1;\n
}\n
", "4499170:sub_44a6e2": null, "4499184:cgc_my_read_string": "long long cgc_my_read_string(unsigned long a0, unsigned long a1)\n
{\n
    char *v1;  // rax\n
\n
    if (!a1)\n
        return 0;\n
    v1 = g_46a450 - secret_key();\n
    if (v1 >= 0)\n
    {\n
        v1[a0] = 0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4499230:sub_44a71e": null, "4499232:cgc_my_write_uint": "long long cgc_my_write_uint(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: char\n
    unsigned long long v3;  // rsi\n
\n
    if (a0 <= 127)\n
    {\n
        v0 = a0;\n
    }\n
    else if (a0 > 32511)\n
    {\n
        v0 = 255;\n
        v1 = a0;\n
    }\n
    else\n
    {\n
        v0 = a0 / 0x100 | 128;\n
        v1 = a0;\n
    }\n
    return cgc_transmit(a0, v3);\n
}\n
", "4499328:cgc_my_write_error": "long long cgc_my_write_error()\n
{\n
    goto *(4629616) - *(4728496);\n
}\n
", "4499346:sub_44a792": null, "4499360:cgc_my_write_string": "extern unsigned long long g_46a470;\n
extern unsigned long long secret_key;\n
\n
long long cgc_my_write_string(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v0 = v2;\n
    v3 = g_46a438 - secret_key();\n
    g_46a470 - secret_key(v3);\n
    return cgc_transmit(v3, v4, v5, g_46a470 - secret_key);\n
}\n
", "4499436:sub_44a7ec": null, "4499440:cgc_my_hash_string": "long long cgc_my_hash_string(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v2;  // cl, Other Possible Types: char\n
    char *v3;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = 3735928559;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v3 = a0 + 1;\n
        do\n
        {\n
            v1 = v2 ^ v1 + v1 * 12;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    if ((v1 | a1) >> 32)\n
        return (0 CONCAT v1) /m a1 >> 64;\n
    return (0 CONCAT v1) /m a1 >> 32;\n
}\n
", "4499510:sub_44a836": null, "4499520:cgc_my_htbl_init": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_my_htbl_init(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_0 = 0;\n
    a0->field_4 = a1;\n
    v1 = g_46a398 - secret_key(a1, 8);\n
    a0->field_8 = v1;\n
    return v1;\n
}\n
", "4499575:sub_44a877": null, "4499584:cgc_my_htbl_enlarge": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long cgc_my_htbl_enlarge(struct_1 *a0)\n
{\n
    unsigned long long v1;  // r15\n
    struct struct_3 **v2;  // rax, Other Possible Types: unsigned long\n
    struct struct_3 **v3;  // r13\n
    unsigned long v4;  // rax\n
    struct_0 *v5;  // rcx\n
    struct_3 *v6;  // rdx\n
    struct_0 *v7;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // r12, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_4 * 2 + 2;\n
    v2 = g_46a398 - secret_key(v1, 8);\n
    if (!v2)\n
        return v2;\n
    v3 = v2;\n
    v8 = a0->field_4;\n
    if (v8)\n
    {\n
        v9 = 0;\n
        do\n
        {\n
            v7 = a0->field_8[v9].field_0;\n
            if (v7)\n
            {\n
                do\n
                {\n
                    v4 = g_46a488 - secret_key(*((v7 + 16)), v1);\n
                    v5 = *(v7);\n
                    v6 = v3[v4];\n
                    *(v7) = v6;\n
                    *((v7 + 8)) = 0;\n
                    if (v6)\n
                        v6->field_8 = v7;\n
                    v3[v4] = v7;\n
                    v7 = v5;\n
                } while (v5);\n
                v8 = a0->field_4;\n
            }\n
            v9 += 1;\n
        } while (v9 < v8);\n
    }\n
    v2 = g_46a3a0 - secret_key(a0->field_8);\n
    a0->field_8 = v3;\n
    a0->field_4 = v1;\n
    return v2;\n
}\n
", "4499658:sub_44a8ca": null, "4499694:sub_44a8ee": null, "4499804:sub_44a95c": null, "4499808:cgc_my_htbl_get": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_my_htbl_get(struct_1 *a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = *((a0->field_8 + g_46a488 - secret_key(a1, a0->field_4) * 8));\n
    if (!v4)\n
        return 0;\n
    while (true)\n
    {\n
        if (!g_46a3c8 - secret_key(a1, *((v4 + 16))))\n
            return *((v4 + 24));\n
        v4 = *(v4);\n
        if (!v4)\n
            return 0;\n
    }\n
}\n
", "4499931:sub_44a9db": null, "4499936:cgc_my_htbl_set": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
long long cgc_my_htbl_set(struct_2 *a0, unsigned long long a1, unsigned long a2)\n
{\n
    struct_0 *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2[4];  // rax\n
    unsigned long long v3[4];  // r12\n
    unsigned long long v4;  // rax\n
    struct struct_1 **v5;  // rax\n
    unsigned long v6;  // rcx\n
    struct_1 *v7;  // rdx\n
\n
    v1 = a0->field_8[g_46a488 - secret_key(a1, a0->field_4)].field_0;\n
    if (v1)\n
    {\n
        do\n
        {\n
            if (!g_46a3c8 - secret_key(a1, *((v1 + 16))))\n
            {\n
                *((v1 + 24)) = a2;\n
                return *((v1 + 24));\n
            }\n
            v1 = *(v1);\n
        } while (v1);\n
    }\n
    if (a0->field_0 << 1 >= a0->field_4)\n
        g_46a498 - secret_key(a0);\n
    if (!a0->field_8)\n
        return 0;\n
    v2 = cgc_malloc(32);\n
    if (v2)\n
    {\n
        v3 = v2;\n
        v4 = g_46a3a8 - secret_key(a1);\n
        v3[2] = v4;\n
        if (!v4)\n
        {\n
            cgc_free(v3);\n
        }\n
        else\n
        {\n
            v3[3] = a2;\n
            v5 = g_46a488 - secret_key(a1, a0->field_4);\n
            v6 = a0->field_8;\n
            v7 = *((v6 + v5 * 8));\n
            v3[0] = v7;\n
            v3[1] = 0;\n
            if (v7)\n
                v7->field_8 = v3;\n
            *((v6 + v5 * 8)) = v3;\n
            a0->field_0 = a0->field_0 + 1;\n
        }\n
    }\n
}\n
", "4500234:sub_44ab0a": null, "4500240:cgc_my_htbl_free": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[16];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_my_htbl_free(struct struct_1 **a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v6;  // rbp\n
    struct struct_0 **v7;  // r13, Other Possible Types: unsigned long\n
    struct struct_0 **v8;  // rdi\n
\n
    v0 = v2;\n
    v4 = *((a0 + 4));\n
    if (v4)\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            v5 = (a0[1])[v7].field_0;\n
            if (v5)\n
            {\n
                do\n
                {\n
                    v6 = *(v5);\n
                    (&funcs)[a1] - secret_key(*((v5 + 24)));\n
                    g_46a3a0 - secret_key(v5);\n
                    v5 = v6;\n
                } while (v6);\n
                v4 = *((a0 + 4));\n
            }\n
            v7 += 1;\n
        } while (v7 < v4);\n
    }\n
    v8 = a0[1];\n
    *(&a0) = 0;\n
    return g_46a3a0 - secret_key(v8);\n
}\n
", "4500276:sub_44ab34": null, "4500421:sub_44abc5": null, "4500432:cgc_my_htbl_first": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_my_htbl_first(struct_0 *a0, unsigned long long a1[2])\n
{\n
    unsigned long long *v1;  // rdx\n
    unsigned long long *v2;  // rax\n
    unsigned long v3;  // rcx\n
    unsigned long long v4;  // rax\n
\n
    v1 = a0->field_4;\n
    v2 = a0->field_8;\n
    v3 = 0;\n
    if (v1)\n
    {\n
        while (!v2[v3])\n
        {\n
            v3 += 1;\n
            if (v1 == v3)\n
            {\n
                v3 = v1;\n
                break;\n
            }\n
        }\n
    }\n
    a1[0] = v3;\n
    v4 = v2[v3];\n
    a1[1] = v4;\n
    return v4;\n
}\n
", "4500479:sub_44abff": null, "4500480:cgc_my_htbl_next": "typedef struct struct_1 {\n
    struct struct_2 *field_0;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_my_htbl_next(struct_3 *a0, struct_1 *a1)\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v2;  // r8, Other Possible Types: unsigned long\n
    struct struct_0 **v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a1->field_8;\n
    if (!v1)\n
        return a1->field_8;\n
    v1 = *(v1);\n
    if (!v1)\n
    {\n
        v3 = a1->field_0;\n
        v2 = v3 + 1;\n
        if (v2 <= v2)\n
            v2 = a0->field_4;\n
        do\n
        {\n
            v3 += 1;\n
            if (v3 >= v2)\n
            {\n
                v3 = v2;\n
                a1->field_0 = v2;\n
                if (false)\n
                {\n
LABEL_44ac5b:\n
                    v1 = *((a0->field_8 + v3 * 8));\n
                    goto LABEL_44ac63;\n
                }\n
LABEL_44ac4c:\n
                v1 = 0;\n
                goto LABEL_44ac63;\n
            }\n
        } while (!*((a0->field_8 + (v3 << 3))));\n
        a1->field_0 = v3;\n
        if (!(v3 == v2))\n
            goto LABEL_44ac5b;\n
        goto LABEL_44ac4c;\n
    }\n
LABEL_44ac63:\n
    a1->field_8 = v1;\n
    return v1;\n
}\n
", "4500584:sub_44ac68": null, "4500592:cgc_my_random_dict_word": "extern unsigned long long words;\n
\n
long long cgc_my_random_dict_word()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = -1;\n
    v4 = &words;\n
    do\n
    {\n
        v3 += 1;\n
        v4 += 8;\n
    } while (words);\n
    return (&words)[g_46a420 - secret_key(0)];\n
}\n
", "4500655:sub_44acaf": null, "4500656:cgc_my_init": "extern unsigned long long secret_key;\n
\n
long long cgc_my_init()\n
{\n
    unsigned long v1;  // rax\n
\n
    secret_key = 305419896;\n
    return v1;\n
}\n
", "4500668:sub_44acbc": null, "4500672:cgc_tornado_mix": "extern char W;\n
extern unsigned int available_bytes;\n
extern unsigned int idx;\n
\n
double cgc_tornado_mix()\n
{\n
    int tmp_134;  // tmp #134\n
    int tmp_133;  // tmp #133\n
    int tmp_143;  // tmp #143\n
    int tmp_142;  // tmp #142\n
    int v1;  // xmm0\n
    int v3;  // xmm1\n
\n
    v1 = *(&(&W)[16 * idx]);\n
    tmp_134 = ShrNV(tmp_133, 11);\n
    v3 = tmp_134 & 295082357930985076630276746218512777215;\n
    tmp_143 = ShlNV(tmp_142, 18);\n
    *(&W) = ...;\n
    idx = idx + 1 - ((idx + 1 >> 2) * 881018933 >> 35) * 156;\n
    available_bytes = 624;\n
    return v1;\n
}\n
", "4500929:sub_44adc1": null, "4500944:cgc_tornado_init": "typedef struct struct_0 {\n
    char padding_0[4725984];\n
    uint128_t field_481ce0;\n
} struct_0;\n
\n
extern char W;\n
extern unsigned int available_bytes;\n
extern unsigned int idx;\n
extern char initialized;\n
\n
long long cgc_tornado_init()\n
{\n
    int tmp_113;  // tmp #113\n
    int tmp_112;  // tmp #112\n
    int tmp_121;  // tmp #121\n
    int tmp_120;  // tmp #120\n
    unsigned int v1;  // edx\n
    unsigned int *v2;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
    int v7;  // xmm1\n
    unsigned long long v8;  // rdi\n
    int v10;  // xmm2\n
    unsigned long long v12;  // rdx\n
    unsigned long v13;  // rax\n
    struct_0 *v14;  // rdx, Other Possible Types: unsigned long\n
\n
    initialized = 1;\n
    available_bytes = 0;\n
    idx = 0;\n
    v1 = 305419896;\n
    v2 = 3;\n
    do\n
    {\n
        v3 = v1 * 3735928559 - 1412567268;\n
        *(&(&W)[12 + 4 * v2]) = v3;\n
        v4 = v3 * 3735928559 - 1412567268;\n
        *(&(&W)[8 + 4 * v2]) = v4;\n
        v5 = v4 * 3735928559 - 1412567268;\n
        *(&(&W)[4 + 4 * v2]) = v5;\n
        v1 = v5 * 3735928559 - 1412567268;\n
        *(&(&W)[4 * v2]) = v1;\n
        v2 += 4;\n
    } while (v2 != 627);\n
    v14 = 0;\n
    v6 = 1000;\n
    do\n
    {\n
        v7 = *(&(&W)[16 * v14]);\n
        v8 = v14 + 154 - ((v14 + 154 >> 2) * 3361 >> 17) * 156;\n
        tmp_113 = ShrNV(tmp_112, 11);\n
        v10 = tmp_113 & 295082357930985076630276746218512777215;\n
        tmp_121 = ShlNV(tmp_120, 18);\n
        v12 = idx + 1;\n
        *(&W) = ((*(&(&W)[16 * v8]) >> 64) >> 8 CONCAT *(&(&W)[16 * v8]) >> 8 | (*(&(&W)[16 * v8]) >> 64) * 0x100000000000000) ^ (v7 / 0x10000000000000000 * 0x100 | v7 >> 56 CONCAT v7 * 0x100) ^ v7 ^ tmp_121 ^ v10 ^ *(&(&W)[16 * idx]);\n
        v13 = v12 / 156 * 156;\n
        v14 = v12 - v13;\n
        idx = v14;\n
        available_bytes = 624;\n
        v6 -= 1;\n
    } while (true);\n
    return v13;\n
}\n
", "4501338:sub_44af5a": null, "4501344:cgc_tornado": "typedef struct struct_0 {\n
    char padding_0[4725984];\n
    uint128_t field_481ce0;\n
} struct_0;\n
\n
extern char W;\n
extern unsigned int available_bytes;\n
extern unsigned int idx;\n
extern char initialized;\n
\n
long long cgc_tornado()\n
{\n
    int tmp_134;  // tmp #134\n
    int tmp_133;  // tmp #133\n
    int tmp_143;  // tmp #143\n
    int tmp_142;  // tmp #142\n
    int tmp_113;  // tmp #113\n
    int tmp_112;  // tmp #112\n
    int tmp_121;  // tmp #121\n
    int tmp_120;  // tmp #120\n
    unsigned int v1;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    int v4;  // xmm2\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edx\n
    unsigned int *v9;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v10;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v11;  // ecx\n
    int v13;  // xmm3\n
    unsigned int v15;  // eax\n
    unsigned long long v16;  // rax\n
\n
    if (initialized)\n
    {\n
        v1 = available_bytes;\n
        if (available_bytes >= 4)\n
        {\n
            v15 = *(&W);\n
        }\n
        else\n
        {\n
            tmp_134 = ShrNV(tmp_133, 11);\n
            v4 = tmp_134 & 295082357930985076630276746218512777215;\n
            tmp_143 = ShlNV(tmp_142, 18);\n
            *(&W) = ...;\n
            idx = idx + 1 - ((idx + 1 >> 2) * 881018933 >> 35) * 156;\n
            v15 = *(&W);\n
            v1 = 624;\n
        }\n
        v16 = v15 - v1 / 4 + 624;\n
        available_bytes = v1 - 4;\n
        return v16;\n
    }\n
    initialized = 1;\n
    available_bytes = 0;\n
    idx = 0;\n
    v2 = 305419896;\n
    v9 = 3;\n
    do\n
    {\n
        v6 = v2 * 3735928559 - 1412567268;\n
        *(&(&W)[12 + 4 * v9]) = v6;\n
        v7 = v6 * 3735928559 - 1412567268;\n
        *(&(&W)[8 + 4 * v9]) = v7;\n
        v8 = v7 * 3735928559 - 1412567268;\n
        *(&(&W)[4 + 4 * v9]) = v8;\n
        v2 = v8 * 3735928559 - 1412567268;\n
        *(&(&W)[4 * v9]) = v2;\n
        v9 += 4;\n
    } while (v9 != 627);\n
    v10 = 0;\n
    v11 = 1000;\n
    while (true)\n
    {\n
        tmp_113 = ShrNV(tmp_112, 11);\n
        v13 = tmp_113 & 295082357930985076630276746218512777215;\n
        tmp_121 = ShlNV(tmp_120, 18);\n
        *(&W) = ...;\n
        v10 = idx + 1 - ((idx + 1 >> 2) * 881018933 >> 35) * 156;\n
        idx = v10;\n
        available_bytes = 624;\n
        v11 -= 1;\n
    }\n
}\n
", "4502080:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_transmit": null, "5242896:cgc_allocate": null, "5242904:cgc_deallocate": null, "5242912:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}