{"4210688:_init": "extern struct_0 *g_40d268;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d268;\n
    if (g_40d268)\n
        v1 = g_40d268();\n
    return v1;\n
}\n
", "4210720:sub_404020": "extern unsigned long long g_40d280;\n
\n
long long sub_404020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d280;\n
    goto *(4248200);\n
}\n
", "4210732:sub_40402c": null, "4210736:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210752:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4210768:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4210784:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4210800:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4210816:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210832:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210848:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4210864:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libstdc++.so::cgc_rint();\n
    return;\n
}\n
", "4210880:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libstdc++.so::cgc_log10();\n
    return;\n
}\n
", "4210896:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4210912:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libstdc++.so::cgc_pow();\n
    return;\n
}\n
", "4210928:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4248144);\n
}\n
", "4210944:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4210981:sub_404125": null, "4210982:sub_404126": null, "4210992:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40d260;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4211033:sub_404159": null, "4211040:register_tm_clones": "extern unsigned long long g_40d270;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4211097:sub_404199": null, "4211104:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40d250;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d250)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4211157:sub_4041d5": null, "4211161:sub_4041d9": null, "4211168:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211177:sub_4041e9": null, "4211184:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211235:sub_404223": null, "4211248:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211299:sub_404263": null, "4211312:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211363:sub_4042a3": null, "4211376:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211449:sub_4042f9": null, "4211456:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211529:sub_404349": null, "4211536:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211587:sub_404383": null, "4211600:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4211660:sub_4043cc": null, "4211664:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4211724:sub_40440c": null, "4211728:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211819:sub_40446b": null, "4211824:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::__ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = operator new[](1);\n
    a0->field_0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4211884:sub_4044ac": null, "4211888:_ZN5CUtil6StringC1ERKS0_": "long long CUtil::String::__ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4211938:sub_4044e2": null, "4211952:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::SetInternal(struct_0 *a0, unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v2;  // rax\n
\n
    if (a0->field_0)\n
    {\n
        v0 = &a0->field_0->field_0;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    a0->field_8 = a1[1];\n
    a0->field_0 = operator new[](a0->field_8 + 1);\n
    cgc_memcpy(a0->field_0, a1[0], a0->field_8, a1);\n
    v2 = a0->field_0;\n
    v2[a0->field_8] = 0;\n
    return v2;\n
}\n
", "4212100:sub_404584": null, "4212112:_ZN5CUtil6StringC2EPKc": "long long CUtil::String::__base_ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4212162:sub_4045c2": null, "4212176:_ZN5CUtil6String11SetInternalEPKc": "long long CUtil::String::SetInternal(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v4;  // rcx\n
    unsigned long v5;  // rax\n
\n
    if (*(a0))\n
    {\n
        v0 = *(a0);\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    if (!a1)\n
    {\n
        *(a0) = operator new[](1);\n
        *(*(a0)) = 0;\n
        *((a0 + 8)) = 0;\n
        return a0;\n
    }\n
    *((a0 + 8)) = cgc_strlen(a1);\n
    v4 = operator new[](*((a0 + 8)) + 1);\n
    v5 = a0;\n
    *(a0) = v4;\n
    cgc_memcpy(*(v5), a1, *((v5 + 8)), v4);\n
    *((*(a0) + *((a0 + 8)))) = 0;\n
    return *(a0);\n
}\n
", "4212375:sub_404697": null, "4212384:_ZN5CUtil6StringD1Ev": "long long CUtil::String::__dtor__(unsigned long long a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4212467:sub_4046f3": null, "4212480:_ZNK5CUtil6StringeqERKS0_": "long long CUtil::String::operator== const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0[1] != a1[1])\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = !cgc_memcmp(a0[0], a1[0], a0[1], a1);\n
    return v0 & 1;\n
}\n
", "4212579:sub_404763": null, "4212592:_ZNK5CUtil6StringneERKS0_": "long long CUtil::String::operator!= const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    return (CUtil::String::operator== const(a0, a1) ^ 255) & 1;\n
}\n
", "4212634:sub_40479a": null, "4212640:_ZN5CUtil6StringaSERKS0_": "long long CUtil::String::operator=(void* a0, unsigned long long a1[2])\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212675:sub_4047c3": null, "4212688:_ZN5CUtil6StringaSEPKc": "long long CUtil::String::operator=(unsigned int a0, unsigned int a1)\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212723:sub_4047f3": null, "4212736:_ZNK5CUtil6StringplERKS0_": "long long CUtil::String::operator+ const(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1[2];  // [bp-0x28]\n
\n
    CUtil::String::__ctor__(v1, a0);\n
    v0 = CUtil::String::operator+=(v1, a1);\n
    CUtil::String::__dtor__(v1);\n
    return v0;\n
}\n
", "4212809:sub_404849": null, "4212816:_ZN5CUtil6StringpLERKS0_": "long long CUtil::String::operator+=(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
\n
    v2 = a0[1] + a1[1];\n
    v1 = operator new[](v2 + 1);\n
    cgc_memcpy(v1, a0[0], a0[1], v1);\n
    cgc_memcpy(&v1[a0[1]], a1[0], a1[1]);\n
    v1[a1[1] + a0[1]] = 0;\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[0] = v1;\n
    a0[1] = v2;\n
    return a0;\n
}\n
", "4213022:sub_40491e": null, "4213024:_ZNK5CUtil6String5c_strEv": "long long CUtil::String::c_str const(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4213041:sub_404931": null, "4213056:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Upper const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_islower(v0[*(a0)]))\n
            v0[*(a0)] = cgc_toupper(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213251:sub_404a03": null, "4213264:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Lower const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_isupper(v0[*(a0)]))\n
            v0[*(a0)] = cgc_tolower(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213459:sub_404ad3": null, "4213472:_ZNK5CUtil6StringixERKm": "long long CUtil::String::operator[] const(unsigned long long a0[2], unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (*(a1) < a0[1])\n
    {\n
        v0 = *((a0[0] + *(a1)));\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4213583:sub_404b4f": null, "4213584:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::IsEmpty const(struct_0 *a0)\n
{\n
    return !a0->field_8;\n
}\n
", "4213611:sub_404b6b": null, "4213616:_ZNK5CUtil6String4TrimEm": "long long CUtil::String::Trim const(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    CUtil::String::SubString const();\n
    return a0;\n
}\n
", "4213673:sub_404ba9": null, "4213680:_ZNK5CUtil6String9SubStringEmm": "extern unsigned long long g_40b034;\n
\n
long long CUtil::String::SubString const(unsigned long long a0[2], unsigned long long a1[2], char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
\n
    v5 = a0;\n
    v4 = a3;\n
    if (v4 > a1[1])\n
        v4 = a1[1];\n
    if (a2 < a1[1] && a2 < v4)\n
    {\n
        v3 = v4 - a2;\n
        v2 = operator new[](v3 + 1);\n
        v1 = 0;\n
        for (v0 = a2; v0 < v4; v0 += 1)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v2[v7] = v0[a1[0]];\n
        }\n
        v2[v1] = 0;\n
        CUtil::String::__base_ctor__(a0, v2);\n
        return a0;\n
    }\n
    CUtil::String::__base_ctor__(a0, &g_40b034);\n
    return a0;\n
}\n
", "4213949:sub_404cbd": null, "4213952:_ZNK5CUtil6String10TrimSpacesEv": "long long CUtil::String::TrimSpaces const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1[1]; v0 += 1)\n
    {\n
        if (v0[a1[0]] != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(a0, a1, v0, 4294967295);\n
    return a0;\n
}\n
", "4214096:_ZN5CUtil6String5ToIntERj": "long long CUtil::String::ToInt(unsigned long long *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a1) = cgc_atoi(*(a0));\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4214180:sub_404da4": null, "4214192:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::GetLength const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4214210:sub_404dc2": null, "4214224:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4214603:sub_404f4b": null, "4214608:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4214800:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4214858:sub_40504a": null, "4214864:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4215056:cgc_unlink": "long long cgc_unlink(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (*((a0 + 16)))\n
        *((*((a0 + 16)) + 8)) = *((v0 + 8));\n
    v2 = a0;\n
    if (!*((a0 + 8)))\n
        return v2;\n
    v2 = *((a0 + 8));\n
    *((v2 + 16)) = *((a0 + 16));\n
}\n
", "4215157:sub_405175": null, "4215168:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = *((v1 + 8)))\n
    {\n
        if (*(v1) >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4215449:sub_405299": null, "4215456:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4215561:sub_405309": null, "4215568:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long long v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4215870:sub_40543e": null, "4215872:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4215998:sub_4054be": null, "4216000:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4216150:sub_405556": null, "4216160:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4216374:sub_405636": null, "4216384:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&v0, 1);\n
}\n
", "4216415:sub_40565f": null, "4216416:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4216725:sub_405795": null, "4216736:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4216904:sub_405848": null, "4216912:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4216995:sub_4058a3": null, "4217008:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4217049:sub_4058d9": null, "4217056:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long v6;  // rcx\n
\n
    if (a0->field_100 >= 0x100)\n
    {\n
        for (v1 = a0; a0->field_100 > 0; v1 = &(&v1->field_0)[*(&v0)])\n
        {\n
            if (cgc_transmit(a0, a1, a2, rcx<8>))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            else if (*(&v0))\n
            {\n
                v6 = a0->field_100 - *(&v0);\n
                *(&a0->field_100) = v6;\n
            }\n
            else\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(&v6) = a0->field_100;\n
    *(&a0->field_100) = v6 + 1;\n
    (&a0->field_0)[v6] = a1;\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4217315:sub_4059e3": null, "4217328:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4217398:sub_405a36": null, "4217408:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217572:sub_405ae4": null, "4217584:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x158]\n
    unsigned long v1;  // [bp-0x150]\n
    unsigned int v2;  // [bp-0x144]\n
    void* v3;  // [bp-0x140]\n
    unsigned long long v4;  // [bp-0x138]\n
    char v5;  // [bp-0x130]\n
    unsigned short v6;  // [bp-0x30]\n
    unsigned long long v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, a0, a1);\n
    v1 = &v5;\n
    while (true)\n
    {\n
        if (v6 > 0)\n
        {\n
            if (cgc_transmit(v4, v7, v3, a0))\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
            if (!*(&v0))\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
            v6 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v8 = v2;\n
            return v8;\n
        }\n
    }\n
}\n
", "4217851:sub_405bfb": null, "4217856:cgc_wrapper_output": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, struct_2 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_2 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_1 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_2 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned int *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_2 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_2 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_2 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_2 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v47;  // [bp-0x18]\n
    struct_2 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_2 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_2 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_2 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_2 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_2 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_2 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_2 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_2 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned int *v74;  // rax\n
    struct_2 *v75;  // rcx\n
    unsigned int *v76;  // rdx\n
    struct_2 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_1 **v79;  // rax\n
    struct_2 *v80;  // rcx\n
    struct struct_1 **v81;  // rdx\n
    struct_2 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_2 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[2];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 <= 160)\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    else\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 <= 40)\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    else\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4219802:sub_40639a": null, "4219808:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4219968:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4220132:sub_4064e4": null, "4220144:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4220244:sub_406554": null, "4220256:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if (!(v2 & 8))\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
        else\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4220548:sub_406684": null, "4220560:cgc_printf_helper_int": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_1 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 += 1)\n
    {\n
        v11 = v0 + 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4221197:sub_40690d": null, "4221200:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_406fa1:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_406fa1;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_406f97;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_406f97:\n
            goto LABEL_406fa1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4223546:sub_40723a": null, "4223552:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4224199:sub_4074c7": null, "4224208:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4224742:sub_4076e6": null, "4224752:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4224770:sub_407702": null, "4224784:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4224809:sub_407729": null, "4224816:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4225042:sub_407812": null, "4225056:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4225330:sub_407932": null, "4225344:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4225432:sub_407998": null, "4225440:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4225597:sub_407a3d": null, "4225600:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4225763:sub_407ae3": null, "4225776:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < a1; v1 = *(&v0) + v1)\n
    {\n
        if (cgc_receive(a0, a1, v4, v5))\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4225939:sub_407b93": null, "4225952:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a1)\n
        {\n
            v0 = cgc_transmit(a0, a1, v6, v7);\n
            if (v0)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = (v1 + v2);\n
        }\n
        else\n
        {\n
            v4 = a1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4226093:sub_407c2d": null, "4226096:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4226162:sub_407c72": null, "4226176:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4226242:sub_407cc2": null, "4226256:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4226427:sub_407d7b": null, "4226432:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a0[v1] != a1)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4226586:sub_407e1a": null, "4226592:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            *((v4 + v2)) = 0;\n
        }\n
        else\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4227086:sub_40800e": null, "4227088:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227457:sub_408181": null, "4227472:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227646:sub_40823e": null, "4227648:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = *(a0);\n
        v0 = *(a1);\n
        if (v1 < v0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (v1 <= v0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4227799:sub_4082d7": null, "4227808:_Z17ConvertToHexCharsPhj": "long long ConvertToHexChars(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x10]\n
    unsigned long v5;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1 * 2;\n
    v5 = v2;\n
    if (v5 < 0)\n
        v5 = -1;\n
    v1 = operator new[](v5);\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v6 = v0;\n
        cgc_sprintf(v1 + v0 * 2, \"$x\", (v3[v6] >> 4) & 15, v6, a4);\n
        v7 = v0;\n
        cgc_sprintf(v1 + v0 * 2 + 1, \"$x\", v3[v7] & 15, v7, a4);\n
    }\n
    return v1;\n
}\n
", "4227995:sub_40839b": null, "4228000:_Z13VerifyMacTypeh": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long VerifyMacType(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 5)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if (a0 == (&_ZN13FitnessSensor13m_sensorArrayE)[v0])\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4228096:_Z10GetMacTypeh": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long GetMacType(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 5)\n
        {\n
            v1 = 255;\n
            return v1;\n
        }\n
        if (a0 == (&_ZN13FitnessSensor13m_sensorArrayE)[v0])\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4228190:sub_40845e": null, "4228192:_ZN13FitnessSensorC2EtjPhj": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[5];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[5];\n
    char *field_8;\n
    char field_10;\n
} struct_1;\n
\n
long long FitnessSensor::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v3;  // rdi\n
    struct_0 *v5;  // rax\n
    unsigned long long v6;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v7;  // rax\n
\n
    v1 = a0;\n
    v0 = v1;\n
    CUtil::DoubleLink::__base_ctor__(&v0[1].padding_3[4]);\n
    v3 = v0;\n
    v3->field_0 = a1;\n
    v3->field_10 = 0;\n
    if (!(FitnessSensor::SetMAC(v3, a2) & 1))\n
        v0->field_10 = 1;\n
    v5 = v0;\n
    v5->field_8 = 0;\n
    v6 = v5->field_2;\n
    if (v6 != 4)\n
        return v6;\n
    if (!a4)\n
        return v6;\n
    v7 = v0;\n
    v7->field_8 = operator new[](a4 + 1);\n
    v6 = cgc_memcpy(v7->field_8, a3, a4);\n
}\n
", "4228374:sub_408516": null, "4228384:_ZN13FitnessSensor6SetMACEj": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
    unsigned int field_3;\n
    char padding_7[9];\n
    char field_10;\n
} struct_0;\n
\n
long long FitnessSensor::SetMAC(struct_0 *a0, unsigned long a1)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = a1;\n
    v1 = swap_int(v1);\n
    v0 = &v1;\n
    if (!(VerifyMacType(v0->field_0) & 1))\n
    {\n
        a0->padding_7[8] = 1;\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    tmp_6 = GetMacType(v0->field_0);\n
    a0->field_2 = tmp_6;\n
    *(&(&a0->field_2)[1]) = *(&v0);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4228517:sub_4085a5": null, "4228528:_Z8swap_intj": "long long swap_int(unsigned long a0)\n
{\n
    return (a0 >> 24) | a0 * 0x100 & 0xff0000 | (a0 >> 8) & 0xff00 | a0 * 0x1000000;\n
}\n
", "4228579:sub_4085e3": null, "4228592:_ZN13FitnessSensor11GetMacAsIntEv": "long long FitnessSensor::GetMacAsInt(char a0[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    v0 = a0[3] * 0x1000000;\n
    v0 = a0[4] * 0x10000 + v0;\n
    v0 = a0[5] * 0x100 + v0;\n
    v0 = a0[6] + v0;\n
    return v0;\n
}\n
", "4228665:sub_408639": null, "4228672:_ZN13FitnessSensor7SetUserEt": "typedef struct struct_0 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
} struct_0;\n
\n
long long FitnessSensor::SetUser(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a1 == a0->field_12)\n
    {\n
        v0 = 6;\n
        return v0;\n
    }\n
    a0->field_12 = a1;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4228742:sub_408686": null, "4228752:_Z15AlreadyInValuesh": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long AlreadyInValues(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 5)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if ((&_ZN13FitnessSensor13m_sensorArrayE)[v0] == a0)\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4228848:_ZN13FitnessSensor18GenerateTypeValuesEv": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long FitnessSensor::GenerateTypeValues()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x13]\n
    unsigned short v3;  // [bp-0x12]\n
    char *v4;  // [bp-0x10]\n
    unsigned long long v6;  // rdx\n
    unsigned int v7;  // eax\n
\n
    v4 = 0x4347c000;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 0; v1 < 5; v1 += 1)\n
    {\n
        v0 = 0;\n
        do\n
        {\n
            v6 = v0;\n
            v0 = v6 + 1;\n
            v2 = v4[v6 + v3];\n
            v7 = AlreadyInValues(v2) & 1;\n
        } while (v7 == 1);\n
        (&_ZN13FitnessSensor13m_sensorArrayE)[v1] = v2;\n
        v3 = v4[1 + v3];\n
    }\n
    return 1;\n
}\n
", "4229018:sub_40879a": null, "4229024:_ZN13FitnessSensor18GetSensorTypeValueEhRh": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long FitnessSensor::GetSensorTypeValue(unsigned long a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 5)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if ((&_ZN13FitnessSensor13m_sensorArrayE)[v0] == a0)\n
        {\n
            *(a1) = v0;\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4229135:sub_40880f": null, "4229136:_ZN13FitnessSensor17HandleHeartSensorEt": "long long FitnessSensor::HandleHeartSensor(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4229153:sub_408821": null, "4229168:_ZN13FitnessSensor16HandleStepSensorEt": "long long FitnessSensor::HandleStepSensor(unsigned long a0)\n
{\n
    return (a0 >> 31 CONCAT a0) /m 2;\n
}\n
", "4229196:sub_40884c": null, "4229200:_ZN13FitnessSensor17HandleScaleSensorEt": "long long FitnessSensor::HandleScaleSensor(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4229217:sub_408861": null, "4229232:_ZN13FitnessSensor16HandleBikeSensorEt": "long long FitnessSensor::HandleBikeSensor(unsigned long a0)\n
{\n
    unsigned short v0;  // [bp-0xc]\n
\n
    v0 = (a0 >> 31 CONCAT a0) /m 3;\n
    return v0;\n
}\n
", "4229265:sub_408891": null, "4229280:_ZN13FitnessSensor15HandleRunSensorEt": "long long FitnessSensor::HandleRunSensor(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4229297:sub_4088b1": null, "4229312:_ZN13FitnessSensor5PrintEv": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[1];\n
    char field_4;\n
    char padding_5[1];\n
    char field_6;\n
    char padding_7[11];\n
    unsigned short field_12;\n
} struct_0;\n
\n
long long FitnessSensor::Print(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0->field_6;\n
    return cgc_printf(\"SENSOR ID $x / TYPE: $x / OWNER: $x MAC: $x$x$x\\n
\", a0->field_0, a0->field_2, a0->field_12, a0->field_4);\n
}\n
", "4229376:_ZN5CUtil10DoubleLinkI13FitnessSensorEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4229405:sub_40891d": null, "4229408:_ZN13SensorManagerD1Ev": "long long SensorManager::__dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0 + 48);\n
    CUtil::DoubleList::DeleteAll(a0 + 48);\n
    CUtil::DoubleListDeclare::__base_dtor__(a0 + 48);\n
    return CUtil::DoubleListDeclare::__base_dtor__(a0);\n
}\n
", "4229478:sub_408966": null, "4229488:_ZN13SensorManager12PrintSensorsEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long SensorManager::PrintSensors(struct_0 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    cgc_printf(\"  print sensors for user: $x\\n
\", a0->field_28, a2, a3, a4);\n
    for (v0 = CUtil::DoubleList::GetFirst(a0); v0; v0 = CUtil::DoubleList::GetNext(a0, v0))\n
    {\n
        FitnessSensor::Print(v0);\n
    }\n
    return cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
}\n
", "4229601:sub_4089e1": null, "4229616:_ZN13SensorManager11ListSensorsERt": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long SensorManager::ListSensors(unsigned long long a0, unsigned short *a1)\n
{\n
    unsigned int v0;  // [bp-0xec]\n
    char *v1;  // [bp-0xe0]\n
    unsigned int v2;  // [bp-0xd4]\n
    char *v3;  // [bp-0xd0]\n
    char v4;  // [bp-0xc8]\n
    char v5;  // [bp-0xc2]\n
    char v6[7];  // [bp-0xc0], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0xb4]\n
    unsigned long v8;  // [bp-0xb0], Other Possible Types: unsigned long long\n
    unsigned int v9;  // [bp-0xa4]\n
    struct_0 *v10;  // [bp-0xa0]\n
    char v11;  // [bp-0x98]\n
\n
    *(a1) = 0;\n
    cgc_bzero(&v11, 0x7e);\n
    v10 = &v11;\n
    v9 = 0;\n
    for (v8 = CUtil::DoubleList::GetFirst(a0 + 48); v8; v8 = CUtil::DoubleList::GetNext(a0 + 48, v8))\n
    {\n
        if (v9 >= 7)\n
            break;\n
        v9 += 1;\n
        v7 = 0;\n
        for (*(&v6) = CUtil::DoubleList::GetFirst(a0); v6; v6 = CUtil::DoubleList::GetNext(a0, v6))\n
        {\n
            v0 = FitnessSensor::GetUser(v6);\n
            if (v0 == User::GetId(v8))\n
            {\n
                if (v7 >= 3)\n
                    break;\n
                v7 += 1;\n
                *(&v5) = FitnessSensor::GetID(v6);\n
                *(&v4) = FitnessSensor::GetMacAsInt(v6);\n
                cgc_memcpy(&v10[*(a1)], &v5, 2);\n
                *(a1) = *(a1) + 2;\n
                cgc_memcpy(&v10[*(a1)], &v4, 4);\n
                *(a1) = *(a1) + 4;\n
                if (FitnessSensor::GetType(v6) == 4)\n
                {\n
                    v3 = FitnessSensor::GetData(v6);\n
                    if (v3)\n
                    {\n
                        v2 = cgc_strlen(v3);\n
                        if (*(a1) < 126 - v2 + 1)\n
                        {\n
                            cgc_memcpy(&v10[*(a1)], v3, v2);\n
                            *(a1) = *(a1) + v2;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v1 = operator new[](*(a1));\n
    cgc_memcpy(v1, &v11, *(a1));\n
    return v1;\n
}\n
", "4230343:sub_408cc7": null, "4230352:_ZN13SensorManager9ListHwIdsERtPh": "extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
long long SensorManager::ListHwIds(unsigned long a0, unsigned short *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    *(a1) = 0;\n
    for (v0 = 0; v0 < 5; v0 += 1)\n
    {\n
        a2[v0] = (&_ZN13FitnessSensor13m_sensorArrayE)[v0];\n
        *(a1) = *(a1) + 1;\n
    }\n
    return 1;\n
}\n
", "4230456:sub_408d38": null, "4230464:_Z11MacsAreSame15SensorMacFormatS_": "long long MacsAreSame(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (a0 == a1 && a0 == a1 && a0 == a1 && a0 == a1)\n
    {\n
        v2 = 1;\n
        return v2 & 1;\n
    }\n
    v2 = 0;\n
    return v2 & 1;\n
}\n
", "4230561:sub_408da1": null, "4230576:_ZN13SensorManager9GetSensorEt": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long SensorManager::GetSensor(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (v0)\n
        {\n
            if (FitnessSensor::GetID(v0) == a1 && FitnessSensor::GetUser(v0) == a0->field_28)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
            v0 = CUtil::DoubleList::GetNext(a0, v0);\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4230733:sub_408e4d": null, "4230736:_ZN13SensorManager9AddSensorEP13FitnessSensor": "long long SensorManager::AddSensor(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    char v4;  // [bp-0x51]\n
    unsigned long v5;  // [bp-0x48], Other Possible Types: unsigned long long\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned long v9;  // [bp-0x28], Other Possible Types: unsigned long long\n
    unsigned int v10;  // [bp-0xc]\n
\n
    for (v9 = CUtil::DoubleList::GetFirst(a0); v9; v9 = CUtil::DoubleList::GetNext(a0, v9))\n
    {\n
        v3 = FitnessSensor::GetUser(v9);\n
        v4 = 0;\n
        if (v3 == FitnessSensor::GetUser(a1))\n
        {\n
            v8 = FitnessSensor::GetMAC(a1);\n
            v7 = FitnessSensor::GetMAC(v9);\n
            v4 = MacsAreSame(v8, v7);\n
        }\n
        if ((v4 & 1))\n
        {\n
            v10 = 1;\n
            return v10;\n
        }\n
        v2 = FitnessSensor::GetUser(v9);\n
        if (v2 == FitnessSensor::GetUser(a1))\n
        {\n
            v1 = FitnessSensor::GetID(a1);\n
            if (v1 == FitnessSensor::GetID(v9))\n
            {\n
                v10 = 1;\n
                return v10;\n
            }\n
        }\n
    }\n
    v6 = 0;\n
    for (v5 = CUtil::DoubleList::GetFirst(a0); v5; v5 = CUtil::DoubleList::GetNext(a0, v5))\n
    {\n
        v0 = FitnessSensor::GetUser(v5);\n
        if (v0 == FitnessSensor::GetUser(a1))\n
            v6 += 1;\n
    }\n
    if (v6 >= 3)\n
    {\n
        v10 = 2;\n
        return v10;\n
    }\n
    CUtil::DoubleList::AddLast(a0, a1);\n
    v10 = 0;\n
    return v10;\n
}\n
", "4231169:sub_409001": null, "4231184:_ZN13SensorManager12RemoveSensorEtt": "long long SensorManager::RemoveSensor(unsigned long long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v2;  // [bp-0x9]\n
\n
    v1 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        if (FitnessSensor::GetID(v1) == a1 && FitnessSensor::GetUser(v1) == a2)\n
            break;\n
        v1 = CUtil::DoubleList::GetNext(a0, v1);\n
    }\n
    v0 = v1;\n
    if (v0)\n
    {\n
        FitnessSensor::__base_dtor__(v0);\n
        operator delete(v0);\n
    }\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4231376:_ZN13SensorManager14SetCurrentUserEt": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long SensorManager::SetCurrentUser(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v1;  // [bp-0x9]\n
\n
    if (a1 == 255)\n
    {\n
        a0->field_28 = 255;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = CUtil::DoubleList::GetFirst(&a0[1].padding_0[6]);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 255;\n
            return v1;\n
        }\n
        else if (User::GetId(v0) != a1)\n
        {\n
            v0 = CUtil::DoubleList::GetNext(&a0[1].padding_0[6], v0);\n
        }\n
        else\n
        {\n
            a0->field_28 = a1;\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4231555:sub_409183": null, "4231568:_ZN13SensorManager7AddUserEP4User": "long long SensorManager::AddUser(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned long v1;  // [bp-0x30], Other Possible Types: unsigned long long\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x9]\n
\n
    v2 = 0;\n
    for (v1 = CUtil::DoubleList::GetFirst(a0 + 48); v1; v1 = CUtil::DoubleList::GetNext(a0 + 48, v1))\n
    {\n
        v2 += 1;\n
        v0 = User::GetId(v1);\n
        if (v0 == User::GetId(a1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
    if (v2 >= 7)\n
    {\n
        v3 = 2;\n
        return v3;\n
    }\n
    CUtil::DoubleList::AddLast(a0 + 48, a1);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4231763:sub_409253": null, "4231776:_ZN13SensorManager12VerifySensorEt": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long SensorManager::VerifySensor(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v1;  // [bp-0x9]\n
\n
    v0 = CUtil::DoubleList::GetFirst(a0);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if (FitnessSensor::GetID(v0) == a1 && FitnessSensor::GetUser(v0) == a0->field_28)\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 = CUtil::DoubleList::GetNext(a0, v0);\n
    }\n
}\n
", "4231929:sub_4092f9": null, "4231936:_ZN13SensorManager11AddDistanceEtt": "long long SensorManager::AddDistance(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    char v1;  // [bp-0x9]\n
\n
    v0 = CUtil::DoubleList::GetFirst(a0 + 48);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        if (User::GetId(v0) == a2)\n
        {\n
            User::AddTotalDistance(v0, a1);\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        v0 = CUtil::DoubleList::GetNext(a0 + 48, v0);\n
    }\n
}\n
", "4232094:sub_40939e": null, "4232096:_ZN5CUtil10DoubleListI4UserE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
        {\n
            User::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v2;\n
}\n
", "4232192:_ZN5CUtil17DoubleListDeclareI4UserLj16EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4232219:sub_40941b": null, "4232224:_ZN5CUtil17DoubleListDeclareI13FitnessSensorLj24EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4232251:sub_40943b": null, "4232256:_ZN5CUtil10DoubleListI13FitnessSensorE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4232332:sub_40948c": null, "4232336:_ZN5CUtil10DoubleListI13FitnessSensorE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4232482:sub_409522": null, "4232496:_ZN5CUtil10DoubleListI4UserE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4232572:sub_40957c": null, "4232576:_ZN13FitnessSensor7GetUserEv": "typedef struct struct_0 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
} struct_0;\n
\n
long long FitnessSensor::GetUser(struct_0 *a0)\n
{\n
    return a0->field_12;\n
}\n
", "4232594:sub_409592": null, "4232608:_ZN4User5GetIdEv": "long long User::GetId(unsigned short *a0)\n
{\n
    return *(a0);\n
}\n
", "4232625:sub_4095b1": null, "4232640:_ZN13FitnessSensor5GetIDEv": "long long FitnessSensor::GetID(unsigned short *a0)\n
{\n
    return *(a0);\n
}\n
", "4232657:sub_4095d1": null, "4232672:_ZN13FitnessSensor7GetTypeEv": "typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
} struct_0;\n
\n
long long FitnessSensor::GetType(struct_0 *a0)\n
{\n
    return a0->field_2;\n
}\n
", "4232690:sub_4095f2": null, "4232704:_ZN13FitnessSensor7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long FitnessSensor::GetData(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4232722:sub_409612": null, "4232736:_ZN5CUtil10DoubleListI4UserE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4232882:sub_4096b2": null, "4232896:_ZN13FitnessSensor6GetMACEv": "typedef struct struct_0 {\n
    char padding_0[3];\n
    unsigned int field_3;\n
} struct_0;\n
\n
long long FitnessSensor::GetMAC(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = *(&(&a0->padding_0)[1]);\n
    return v0;\n
}\n
", "4232919:sub_4096d7": null, "4232928:_ZN5CUtil10DoubleListI13FitnessSensorE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4233028:sub_409744": null, "4233040:_ZN13FitnessSensorD2Ev": "long long FitnessSensor::__base_dtor__(unsigned long a0)\n
{\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
}\n
", "4233071:sub_40976f": null, "4233072:_ZN5CUtil10DoubleListI4UserE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4233172:sub_4097d4": null, "4233184:_ZN4User16AddTotalDistanceEt": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long User::AddTotalDistance(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_c = a1 + a0->field_c;\n
    return a0;\n
}\n
", "4233215:sub_4097ff": null, "4233216:_ZN5CUtil10DoubleListI4UserED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4233273:sub_409839": null, "4233280:_ZN5CUtil10DoubleLinkI4UserED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4233307:sub_40985b": null, "4233312:_ZN5CUtil10DoubleLinkI4UserE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4233403:sub_4098bb": null, "4233408:_ZN5CUtil10DoubleListI13FitnessSensorED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4233465:sub_4098f9": null, "4233472:_ZN5CUtil10DoubleListI13FitnessSensorE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(void* a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        *(&v0) = CUtil::DoubleList::GetFirst(a0);\n
        if (*(&v0))\n
        {\n
            FitnessSensor::__base_dtor__(*(&v0));\n
            operator delete(*(&v0));\n
        }\n
    }\n
    return v2;\n
}\n
", "4233568:_ZN5CUtil10DoubleLinkI13FitnessSensorED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4233595:sub_40997b": null, "4233600:_ZN5CUtil10DoubleListI13FitnessSensorE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4233633:sub_4099a1": null, "4233648:_ZN5CUtil10DoubleLinkI13FitnessSensorE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4233739:sub_409a0b": null, "4233744:_ZN5CUtil10DoubleListI4UserE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4233777:sub_409a31": null, "4233792:_ZN4UserD2Ev": "long long User::__base_dtor__(unsigned long a0)\n
{\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 16);\n
}\n
", "4233823:sub_409a5f": null, "4233824:_ZN5CUtil10DoubleLinkI13FitnessSensorE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4233841:sub_409a71": null, "4233856:_ZN5CUtil10DoubleLinkI4UserE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4233873:sub_409a91": null, "4233888:_Z12SendResponseth": "char SendResponse(char a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x14]\n
    char v1;  // [bp-0x13]\n
    char v2;  // [bp-0x12]\n
    char v3;  // [bp-0x11]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0xf]\n
    char v6;  // [bp-0xe]\n
    char v7;  // [bp-0xc]\n
    char v8;  // [bp-0xa]\n
\n
    *(&v8) = *(&a0);\n
    v0 = 195;\n
    v1 = 60;\n
    v2 = 51;\n
    v3 = 0;\n
    v4 = 3;\n
    v5 = 0;\n
    cgc_memcpy(&v6, &a0, 2);\n
    v7 = a1;\n
    return cgc_write(&v0, 9);\n
}\n
", "4233981:sub_409afd": null, "4233984:_Z9ReadInputv": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long ReadInput()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    struct_0 *v2;  // [bp-0x28]\n
    unsigned short v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x1a]\n
    char v5;  // [bp-0x19]\n
    struct_0 *v6;  // [bp-0x18]\n
    struct_0 *v7;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v9;  // rdi, Other Possible Types: unsigned long long\n
\n
    v2 = operator new(16);\n
    memset(v2, 0, 16);\n
    v6 = v2;\n
    v6->field_8 = 0;\n
    v3 = 0;\n
    cgc_receive_bytes(&v4, 1);\n
    if (v4 == 195)\n
    {\n
        cgc_receive_bytes(&v5, 1);\n
        if (v5 != 60)\n
        {\n
            v3 = 2;\n
        }\n
        else\n
        {\n
            cgc_receive_bytes(v6, 2);\n
            cgc_receive_bytes(&v6->field_2, 2);\n
            if (v6->field_2 > 0x100)\n
            {\n
                v3 = 2;\n
            }\n
            else\n
            {\n
                v9 = v6->field_2 + 1;\n
                if (v9 < 0)\n
                    v9 = -1;\n
                v6->field_8 = operator new[](v9);\n
                cgc_receive_bytes(v6->field_8, v6->field_2);\n
                *((v6->field_8 + v6->field_2)) = 0;\n
                v7 = v6;\n
                return v7;\n
            }\n
        }\n
        SendResponse(0, v3);\n
    }\n
    if (v6)\n
    {\n
        if (v6->field_8)\n
        {\n
            *(&v1) = v6->field_8;\n
            if (*(&v1))\n
                operator delete[](*(&v1));\n
        }\n
        v0 = v6;\n
        if (v0)\n
            operator delete(v0);\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4234412:sub_409cac": null, "4234416:_Z16VerifyMagicMatchPhS_": "long long VerifyMagicMatch(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x9]\n
\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= 5)\n
            {\n
                v3 = 0;\n
                return v3 & 1;\n
            }\n
            if (a0[v2] == a1[v1])\n
                break;\n
            v1 += 1;\n
        }\n
        v0 = 3;\n
    }\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4234567:sub_409d47": null, "4234576:main": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_0;\n
\n
extern char _ZN13FitnessSensor13m_sensorArrayE;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0[4];  // [bp-0x178]\n
    unsigned int v1;  // [bp-0x170]\n
    unsigned short v2;  // [bp-0x166]\n
    unsigned short v3;  // [bp-0x164]\n
    unsigned short v4;  // [bp-0x162]\n
    unsigned short v5;  // [bp-0x160]\n
    unsigned short v6;  // [bp-0x15e]\n
    unsigned int v7;  // [bp-0x15c]\n
    unsigned long long v8;  // [bp-0x158]\n
    unsigned int v9;  // [bp-0x150]\n
    unsigned int v10;  // [bp-0x148]\n
    unsigned int v11;  // [bp-0x140]\n
    void* v12;  // [bp-0x138]\n
    void* v13;  // [bp-0x130]\n
    unsigned int v14;  // [bp-0x124]\n
    char v15[4];  // [bp-0x120]\n
    char v16;  // [bp-0x111]\n
    unsigned short v17;  // [bp-0x10a]\n
    char v18[4];  // [bp-0x108]\n
    char *v19;  // [bp-0x100]\n
    unsigned short v20;  // [bp-0xf6]\n
    char v21;  // [bp-0xf3]\n
    unsigned short v22;  // [bp-0xf2]\n
    unsigned short v23;  // [bp-0xf0]\n
    unsigned short v24;  // [bp-0xee]\n
    unsigned short v25;  // [bp-0xec]\n
    unsigned short v26;  // [bp-0xea]\n
    unsigned short v27;  // [bp-0xe8]\n
    unsigned short v28;  // [bp-0xe6]\n
    unsigned short v29;  // [bp-0xe4]\n
    unsigned short v30;  // [bp-0xe2]\n
    unsigned short v31;  // [bp-0xe0]\n
    unsigned short v32;  // [bp-0xde]\n
    unsigned short v33;  // [bp-0xdc]\n
    unsigned short v34;  // [bp-0xda]\n
    unsigned short v35;  // [bp-0xd8]\n
    unsigned short v36;  // [bp-0xd6]\n
    unsigned int v37;  // [bp-0xd4]\n
    void* v38;  // [bp-0xd0]\n
    unsigned short v39;  // [bp-0xc2]\n
    char v40;  // [bp-0xbf]\n
    unsigned short v41;  // [bp-0xbe]\n
    unsigned int v42;  // [bp-0xbc]\n
    unsigned int v43;  // [bp-0xb8]\n
    unsigned int v44;  // [bp-0xb4]\n
    unsigned long long v45;  // [bp-0xb0]\n
    unsigned short v46;  // [bp-0xa2]\n
    unsigned short v47;  // [bp-0xa0]\n
    char v48;  // [bp-0x9d]\n
    unsigned int v49;  // [bp-0x9c]\n
    unsigned long long v50;  // [bp-0x98]\n
    unsigned int v51;  // [bp-0x90]\n
    unsigned short v52;  // [bp-0x8a]\n
    unsigned int v53;  // [bp-0x88]\n
    unsigned int v54;  // [bp-0x84]\n
    char v55;  // [bp-0x80]\n
    struct_1 *v56;  // [bp-0x28]\n
    unsigned long long v57;  // [bp-0x20]\n
    unsigned long v58;  // [bp-0x18]\n
    unsigned int v59;  // [bp-0x10]\n
    unsigned int v60;  // [bp-0xc]\n
    unsigned long v62;  // rcx\n
    unsigned long v64;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v67;  // rdi, Other Possible Types: unsigned long long\n
\n
    v60 = 0;\n
    v59 = a0;\n
    v58 = a1;\n
    v57 = 0x4347c000;\n
    SensorManager::__base_ctor__(&v55);\n
    FitnessSensor::GenerateTypeValues();\n
    for (v54 = 0; v54 < 5; v54 += 1)\n
    {\n
        if (!(&_ZN13FitnessSensor13m_sensorArrayE)[v54])\n
        {\n
            v62 = v54;\n
            cgc_printf(\"fnd: $x \", (&_ZN13FitnessSensor13m_sensorArrayE)[v62], a2, v62, a4);\n
        }\n
    }\n
    SensorManager::SetCurrentUser(&v55, 255);\n
    while (true)\n
    {\n
        do\n
        {\n
            v56 = ReadInput();\n
        } while (!v56);\n
        v14 = v56->field_0;\n
        if (v14 == 1)\n
        {\n
            if (SensorManager::GetCurrentUser(&v55) == 255)\n
            {\n
                SendResponse(1, 3);\n
                continue;\n
            }\n
            else\n
            {\n
                v53 = 6;\n
                if (v56->field_2 >= 6)\n
                {\n
                    v52 = *(&v56->field_8->field_0);\n
                    v51 = *(&v56->field_8->field_1);\n
                    v12 = operator new(40);\n
                    FitnessSensor::__base_ctor__(v12, v52, v51, &v56->field_8[1].field_1, v56->field_2 - 6);\n
                    v50 = v12;\n
                    v13 = v50;\n
                    FitnessSensor::SetUser(v13, SensorManager::GetCurrentUser(&v55));\n
                    if ((FitnessSensor::IsInvalid(v50) & 1) == 1)\n
                    {\n
                        SendResponse(1, 7);\n
                        *(&v11) = v50;\n
                        if (*(&v11))\n
                        {\n
                            FitnessSensor::__base_dtor__(*(&v11));\n
                            operator delete(*(&v11));\n
                        }\n
                        goto LABEL_40a815;\n
                    }\n
                    else\n
                    {\n
                        v49 = SensorManager::AddSensor(&v55, v50);\n
                        if (v49 == 1)\n
                        {\n
                            SendResponse(1, 1);\n
                            *(&v10) = v50;\n
                            if (*(&v10))\n
                            {\n
                                FitnessSensor::__base_dtor__(*(&v10));\n
                                operator delete(*(&v10));\n
                            }\n
                            goto LABEL_40a815;\n
                        }\n
                        else if (v49 != 2)\n
                        {\n
                            SendResponse(1, 0);\n
                            goto LABEL_40a815;\n
                        }\n
                        else\n
                        {\n
                            SendResponse(1, 12);\n
                            *(&v9) = v50;\n
                            if (*(&v9))\n
                            {\n
                                FitnessSensor::__base_dtor__(*(&v9));\n
                                operator delete(*(&v9));\n
                            }\n
                            goto LABEL_40a815;\n
                        }\n
                    }\n
                }\n
                else\n
                {\n
                    SendResponse(1, 2);\n
                    continue;\n
                }\n
            }\n
        }\n
        if (v14 == 2)\n
        {\n
            v48 = v56->field_8->field_0;\n
            v47 = v48 * 3 + 3;\n
            if (v56->field_2 == v47)\n
            {\n
                v46 = *(&(&v56->field_8->field_0)[1]);\n
                v8 = operator new(32);\n
                User::__ctor__(v8, v46);\n
                v45 = v8;\n
                v44 = 3;\n
                for (v43 = 0; v43 < v48 - 1; v44 += 3)\n
                {\n
                    v7 = (&v56->field_8->field_0)[v44];\n
                    if (v7 == 1)\n
                    {\n
                        User::SetWeight(v45, *(&(&v56->field_8->field_0)[1 + v44]));\n
                    }\n
                    else if (v7 != 2)\n
                    {\n
                        SendResponse(2, 2);\n
                    }\n
                    else\n
                    {\n
                        User::SetHeight(v45, *(&(&v56->field_8->field_0)[1 + v44]));\n
                    }\n
                    v43 += 1;\n
                }\n
                v42 = SensorManager::AddUser(&v55, v45);\n
                if (v42 == 2)\n
                {\n
                    SendResponse(2, 8);\n
                }\n
                else if (v42 != 1)\n
                {\n
                    SendResponse(2, 0);\n
                }\n
                else\n
                {\n
                    SendResponse(2, 9);\n
                }\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                SendResponse(2, 2);\n
                continue;\n
            }\n
        }\n
        if (v14 == 3)\n
        {\n
            if (v56->field_2 != 2)\n
            {\n
                SendResponse(3, 2);\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                v41 = *(&v56->field_8->field_0);\n
                v40 = SensorManager::SetCurrentUser(&v55, v41);\n
                if (!v40)\n
                {\n
                    SendResponse(3, 0);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    SendResponse(3, 6);\n
                    goto LABEL_40a815;\n
                }\n
            }\n
        }\n
        if (v14 != 4)\n
        {\n
            if (v14 == 11)\n
            {\n
                v20 = 0;\n
                v19 = SensorManager::ListSensors(&v55, &v20);\n
                v64 = v20 + 6;\n
                if (v64 < 0)\n
                    v64 = -1;\n
                *(&v18) = operator new[](v64);\n
                v18[0] = 195;\n
                v18[1] = 60;\n
                v18[2] = 51;\n
                v18[3] = 0;\n
                cgc_memcpy(v18 + 1, &v20, 2);\n
                cgc_memcpy(&v18[1 + 2], v19, v20);\n
                *(&v1) = v19;\n
                if (*(&v1))\n
                    operator delete[](*(&v1));\n
                cgc_write(v18, v20 + 6);\n
                *(&v0) = v18;\n
                if (v0)\n
                    operator delete[](v0);\n
                goto LABEL_40a815;\n
            }\n
            else if (v14 == 12)\n
            {\n
                if (v56->field_2 != 2)\n
                {\n
                    SendResponse(12, 2);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    v22 = *(&v56->field_8->field_0);\n
                    if (!(SensorManager::VerifySensor(&v55, v22) & 1))\n
                    {\n
                        SendResponse(12, 4);\n
                        goto LABEL_40a815;\n
                    }\n
                    else\n
                    {\n
                        v2 = v22;\n
                        v21 = SensorManager::RemoveSensor(&v55, v2, SensorManager::GetCurrentUser(&v55)) & 1;\n
                        if ((v21 & 1))\n
                        {\n
                            SendResponse(12, 0);\n
                            goto LABEL_40a815;\n
                        }\n
                        else\n
                        {\n
                            SendResponse(12, 2);\n
                            goto LABEL_40a815;\n
                        }\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                if (v14 == 51)\n
                {\n
                    v17 = 0;\n
                    cgc_bzero(&v16, 0x7);\n
                    SensorManager::ListHwIds(&v55, &v17, &v16);\n
                    v67 = v17 + 6;\n
                    if (v67 < 0)\n
                        v67 = -1;\n
                    *(&v15) = operator new[](v67);\n
                    v15[0] = 195;\n
                    v15[1] = 60;\n
                    v15[2] = 68;\n
                    v15[3] = 119;\n
                    cgc_memcpy(v15 + 1, &v17, 2);\n
                    cgc_memcpy(&v15[1 + 2], &v16, v17);\n
                    cgc_write(v15, v17 + 6);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    if (v14 == 255)\n
                        break;\n
                    SendResponse(0, 2);\n
                }\n
            }\n
        }\n
        v39 = *(&v56->field_8->field_0);\n
        if (!(SensorManager::VerifySensor(&v55, v39) & 1))\n
        {\n
            SendResponse(4, 4);\n
            goto LABEL_40a815;\n
        }\n
        v38 = SensorManager::GetSensor(&v55, v39);\n
        if (!v38)\n
        {\n
            SendResponse(4, 4);\n
            goto LABEL_40a815;\n
        }\n
        v37 = FitnessSensor::GetType(v38);\n
        if (v37 == 4)\n
        {\n
            if (v56->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                v36 = *(&v56->field_8->field_0);\n
                v35 = v56->field_8->field_1;\n
                v34 = FitnessSensor::HandleBikeSensor(v35);\n
                v6 = v34;\n
                if (!(SensorManager::AddDistance(&v55, v6, SensorManager::GetCurrentUser(&v55)) & 1))\n
                    SendResponse(4, 2);\n
                else\n
                    SendResponse(4, 0);\n
                goto LABEL_40a815;\n
            }\n
        }\n
        if (!v37)\n
        {\n
            if (v56->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                v33 = *(&v56->field_8->field_0);\n
                v32 = v56->field_8->field_1;\n
                if (!(SensorManager::VerifySensor(&v55, v33) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    v31 = FitnessSensor::HandleHeartSensor(v32);\n
                    v5 = v31;\n
                    if (!(SensorManager::AddDistance(&v55, v5, SensorManager::GetCurrentUser(&v55)) & 1))\n
                        SendResponse(4, 2);\n
                    else\n
                        SendResponse(4, 0);\n
                    goto LABEL_40a815;\n
                }\n
            }\n
        }\n
        if (v37 == 2)\n
        {\n
            if (v56->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                v30 = *(&v56->field_8->field_0);\n
                v29 = v56->field_8->field_1;\n
                if (!(SensorManager::VerifySensor(&v55, v30) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    v28 = FitnessSensor::HandleScaleSensor(v29);\n
                    v4 = v28;\n
                    if ((SensorManager::AddDistance(&v55, v4, SensorManager::GetCurrentUser(&v55)) & 1))\n
                        SendResponse(4, 0);\n
                    else\n
                        SendResponse(4, 2);\n
                    goto LABEL_40a815;\n
                }\n
            }\n
        }\n
        if (v37 == 1)\n
        {\n
            if (v56->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_40a815;\n
            }\n
            else\n
            {\n
                v27 = *(&v56->field_8->field_0);\n
                v26 = v56->field_8->field_1;\n
                if (!(SensorManager::VerifySensor(&v55, v27) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_40a815;\n
                }\n
                else\n
                {\n
                    v25 = FitnessSensor::HandleStepSensor(v26);\n
                    v3 = v25;\n
                    if ((SensorManager::AddDistance(&v55, v3, SensorManager::GetCurrentUser(&v55)) & 1))\n
                        SendResponse(4, 0);\n
                    else\n
                        SendResponse(4, 2);\n
                    goto LABEL_40a815;\n
                }\n
            }\n
        }\n
        if (v37 != 3)\n
        {\n
            SendResponse(4, 2);\n
        }\n
        else\n
        {\n
            if (v56->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_40a815;\n
            }\n
            v24 = *(&v56->field_8->field_0);\n
            v23 = v56->field_8->field_1;\n
            if ((SensorManager::VerifySensor(&v55, v24) & 1))\n
            {\n
                FitnessSensor::HandleRunSensor(v23);\n
                SendResponse(4, 0);\n
            }\n
            else\n
            {\n
                SendResponse(4, 4);\n
            }\n
        }\n
LABEL_40a815:\n
    }\n
    v60 = 0;\n
    SensorManager::__dtor__(&v55);\n
    return v60;\n
}\n
", "4238118:sub_40ab26": null, "4238128:_ZN13SensorManagerC2Ev": "long long SensorManager::__base_ctor__(unsigned long long a0)\n
{\n
    CUtil::DoubleListDeclare::__base_ctor__(a0);\n
    return CUtil::DoubleListDeclare::__base_ctor__(a0 + 48);\n
}\n
", "4238172:sub_40ab5c": null, "4238176:_ZN13SensorManager14GetCurrentUserEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long SensorManager::GetCurrentUser(struct_0 *a0)\n
{\n
    return a0->field_28;\n
}\n
", "4238194:sub_40ab72": null, "4238208:_ZN13FitnessSensor9IsInvalidEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
long long FitnessSensor::IsInvalid(struct_0 *a0)\n
{\n
    return a0->field_10 & 1;\n
}\n
", "4238230:sub_40ab96": null, "4238240:_ZN4User9SetWeightEt": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
long long User::SetWeight(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_2 = a1;\n
    return a0;\n
}\n
", "4238269:sub_40abbd": null, "4238272:_ZN4User9SetHeightEt": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
long long User::SetHeight(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_4 = a1;\n
    return a0;\n
}\n
", "4238301:sub_40abdd": null, "4238304:_ZN5CUtil17DoubleListDeclareI13FitnessSensorLj24EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 24);\n
}\n
", "4238336:_ZN5CUtil17DoubleListDeclareI4UserLj16EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 16);\n
}\n
", "4238368:_ZN5CUtil10DoubleListI13FitnessSensorEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4238466:sub_40ac82": null, "4238480:_ZN5CUtil10DoubleListI4UserEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4238578:sub_40acf2": null, "4238592:_ZN5CUtil10DoubleLinkI4UserEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4238621:sub_40ad1d": null, "4238624:_ZN4UserC1Et": "long long User::__ctor__(unsigned short *a0, unsigned long a1)\n
{\n
    CUtil::DoubleLink::__base_ctor__(a0 + 8);\n
    *(a0) = a1;\n
    return a0;\n
}\n
", "4238677:sub_40ad55": null, "4238688:_ZN4User16SetBloodPressureEt": "typedef struct struct_0 {\n
    char padding_0[10];\n
    unsigned short field_a;\n
} struct_0;\n
\n
long long User::SetBloodPressure(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a1 >= 20 && a1 <= 150)\n
    {\n
        a0->field_a = a1;\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4238774:sub_40adb6": null, "4238784:_ZN4User10SetBodyFatEt": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long User::SetBodyFat(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a1 >= 0 && a1 <= 100)\n
    {\n
        a0->field_8 = a1;\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4238868:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:memset": null, "5242904:cgc_receive": null, "5242912:cgc_allocate": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:_ZdaPv": null, "5242952:cgc_rint": null, "5242960:cgc_log10": null, "5242968:cgc_transmit": null, "5242976:cgc_pow": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}