{"4206592:_init": "extern struct_0 *g_40e800;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40e800;\n
    if (g_40e800)\n
        v1 = g_40e800();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40e818;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40e818;\n
    goto *(4253728);\n
}\n
", "4206636:sub_40302c": null, "4206640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206656:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206672:__cxa_atexit": "// attributes: PLT stub\n
int __cxa_atexit()\n
{\n
    ::libc.so.0::__cxa_atexit();\n
    return;\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206704:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206720:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206736:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206752:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206768:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4253672);\n
}\n
", "4206784:_GLOBAL__sub_I_service.cc": "extern unsigned long long cgc_g_fort;\n
\n
long long _GLOBAL__sub_I_service.cc()\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
\n
    CFortress::__ctor__(&cgc_g_fort);\n
    return __cxa_atexit(&cgc_g_fort, v1, v2);\n
}\n
", "4206823:sub_4030e7": null, "4206832:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206869:sub_403115": null, "4206870:sub_403116": null, "4206880:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40e7f8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206921:sub_403149": null, "4206928:register_tm_clones": "extern unsigned long long g_40e808;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206985:sub_403189": null, "4206992:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40e7e8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40e7e8)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207045:sub_4031c5": null, "4207049:sub_4031c9": null, "4207056:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207065:sub_4031d9": null, "4207072:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4207130:sub_40321a": null, "4207136:cgc_isascii": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isascii(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 1;\n
}\n
", "4207154:sub_403232": null, "4207168:cgc_isdigit": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isdigit(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 2;\n
}\n
", "4207186:sub_403252": null, "4207200:cgc_isprint": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isprint(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 16;\n
}\n
", "4207218:sub_403272": null, "4207232:cgc_isalnum": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isalnum(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 14;\n
}\n
", "4207250:sub_403292": null, "4207264:cgc_isalpha": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isalpha(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 12;\n
}\n
", "4207282:sub_4032b2": null, "4207296:cgc_islower": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_islower(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 4;\n
}\n
", "4207314:sub_4032d2": null, "4207328:cgc_isupper": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isupper(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 8;\n
}\n
", "4207346:sub_4032f2": null, "4207360:cgc_isspace": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isspace(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 64;\n
}\n
", "4207378:sub_403312": null, "4207392:cgc_ispunct": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_ispunct(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 32;\n
}\n
", "4207410:sub_403332": null, "4207424:cgc_iscntrl": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_iscntrl(struct_0 *a0)\n
{\n
    return *((a0 + &__ctype)) & 4294967168;\n
}\n
", "4207442:sub_403352": null, "4207456:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(struct_0 *a0)\n
{\n
    if ((*((a0 + &__ctype)) & 8))\n
        return (a0 ^ 32) - 65 < 6 | (((&__ctype)[a0 ^ 32] & 2) >> 1);\n
    return a0 - 65 < 6 | (((&__ctype)[a0] & 2) >> 1);\n
}\n
", "4207504:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(struct_0 *a0)\n
{\n
    if ((*((a0 + &__ctype)) & 8))\n
        return a0 ^ 32;\n
    return a0;\n
}\n
", "4207527:sub_4033a7": null, "4207536:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(struct_0 *a0)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // ecx\n
    unsigned long long v3;  // rax\n
    unsigned long long v5;  // rax\n
\n
    v1 = a0 ^ 32;\n
    if (!(*((a0 + &__ctype)) & 8))\n
        v1 = a0;\n
    if (!((&__ctype)[v1] & 2))\n
    {\n
        v2 = v1 - 65;\n
        v3 = v1 - 55;\n
        return (v2 < 6 ? 0 : v3);\n
    }\n
    v5 = v1 - 48;\n
    return v5;\n
}\n
", "4207588:sub_4033e4": null, "4207600:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(struct_0 *a0)\n
{\n
    if ((*((a0 + &__ctype)) & 8))\n
        return a0 ^ 32;\n
    return a0;\n
}\n
", "4207623:sub_403407": null, "4207632:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate(v3);\n
    return cgc_exit(v3, v4, v5, v6, v7, v8);\n
}\n
", "4207648:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4207664:cgc_fflush": "long long cgc_fflush(unsigned int a0[3])\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
    void* v4;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    void* v8;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v0 = v2;\n
    v3 = a0[2];\n
    if (v3 == -1)\n
        return 0;\n
    if (a0[1] != 1)\n
    {\n
        v4 = 0;\n
        while (v4 < a0[1] - v3)\n
        {\n
            v4 += v0;\n
            if (cgc_transmit(a0, v5, v6, v7))\n
            {\n
                v8 = 4294967295;\n
                goto LABEL_403497;\n
            }\n
        }\n
    }\n
    v8 = 0;\n
LABEL_403497:\n
    *(&a0[2]) = 0;\n
    return v8;\n
}\n
", "4207791:sub_4034af": null, "4207792:cgc_fbuffered": "long long cgc_fbuffered(unsigned int a0[4], unsigned long long a1)\n
{\n
    unsigned int *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // rax\n
    unsigned int *v4;  // rax, Other Possible Types: unsigned long\n
    void* v5;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0[2];\n
    if (v3 != -1)\n
    {\n
        if (a0[1] == 1)\n
        {\n
            v4 = &a0[3];\n
        }\n
        else\n
        {\n
            v0 = &a0[3];\n
            v5 = 0;\n
            while (v5 < a0[3] - v3)\n
            {\n
                v5 += *(&v1);\n
                if (cgc_transmit(a0, a1, v6, v7))\n
                    break;\n
            }\n
            v4 = v0;\n
        }\n
        *(v4) = 0;\n
    }\n
    a0[2] = -(a1 < 1);\n
    a0[3] = 0;\n
    return -(a1 < 1);\n
}\n
", "4207953:sub_403551": null, "4207968:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fread(unsigned long long a0, struct_0 *a1, struct_0 *a2)\n
{\n
    struct_0 *v0;  // [bp-0x30], Other Possible Types: unsigned long, char\n
    struct_0 *v2;  // r14\n
    struct_0 *v3;  // r12\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rax\n
    struct_0 *v7;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v8;  // eax\n
    struct_0 *v11;  // rcx, Other Possible Types: unsigned long\n
\n
    v2 = a2;\n
    v3 = a1;\n
    v4 = a2->field_8;\n
    if (v4 == *(&a2[1].padding_0[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        if (!cgc_receive(a0, a1, a2, v11))\n
        {\n
            v6 = *(&v0);\n
            if (v6)\n
                *(&a2[1].padding_0[0]) = v6;\n
        }\n
        v4 = a2->field_8;\n
    }\n
    if (v4 != -1)\n
    {\n
        v7 = *(&a2[1].padding_0[0]) - v4;\n
        if (v7 > a1)\n
            v7 = a1;\n
        v0 = v7;\n
        a1 = &a2->padding_0[v4 + 16];\n
        a2 = v7;\n
        cgc_memcpy();\n
        v8 = v2->field_8 + v7;\n
        v2->field_8 = v8;\n
        if (v8 == *(&v2[1].padding_0[0]))\n
            *(&v2->field_8) = 0;\n
        if (!(v7 < v3))\n
            goto LABEL_403650;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        if (0 >= a1)\n
        {\n
LABEL_403650:\n
            return v7;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (cgc_receive(a0, a1, a2, v11))\n
            return -1;\n
        v11 = v0;\n
        if (!v11)\n
            return -1;\n
        v7 += v11;\n
        if (v7 >= v3)\n
            return v7;\n
    }\n
}\n
", "4208225:sub_403661": null, "4208240:cgc_freaduntil": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_freaduntil(unsigned long a0, unsigned long long a1, unsigned long long a2, struct_0 *a3)\n
{\n
    char v0;  // [bp-0x49]\n
    int tmp_1;  // tmp #1\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x38]\n
    unsigned int v5;  // r13d\n
    unsigned long v6;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v8;  // rax\n
    struct_1 *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rax\n
    char *v11;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v12;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v13;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rax\n
    unsigned int v15;  // eax\n
\n
    v5 = a2;\n
    v6 = a1 - 1;\n
    if (a1 == 1)\n
    {\n
        v11 = 0;\n
    }\n
    else\n
    {\n
        v3 = &a3[1].padding_0[4];\n
        v11 = 0;\n
        while (true)\n
        {\n
            v7 = a3->field_8;\n
            if (v7 == -1 && !cgc_receive(a0, a1, a2, a3))\n
            {\n
                v9 = &v0;\n
                if (!(!*(&v1)))\n
                    goto LABEL_40373b;\n
                goto LABEL_4037f3;\n
            }\n
            if (v7 == *(&a3[1].padding_0[0]))\n
            {\n
                *(&a3->field_8) = 0;\n
                if (!(!cgc_receive(a0, a1, a2, a3)))\n
                    goto LABEL_4037f3;\n
                v8 = *(&v2);\n
                if (!v8)\n
                    goto LABEL_4037f3;\n
                *(&a3[1].padding_0[0]) = v8;\n
                if (v8 < 0)\n
                    goto LABEL_4037f3;\n
                v7 = a3->field_8;\n
            }\n
            a3->field_8 = v7 + 1;\n
            v9 = &a3->padding_0[v7 + 16];\n
LABEL_40373b:\n
            v10 = *(v9);\n
            if (v10 == v5)\n
                break;\n
            *((a0 + v11)) = v10;\n
            v11 += 1;\n
            if (v6 == v11)\n
                goto LABEL_403765;\n
        }\n
    }\n
    tmp_1 = v6;\n
    v6 = v11;\n
    if (v11 != tmp_1)\n
    {\n
LABEL_4037fc:\n
        *((a0 + v6)) = 0;\n
        return v6;\n
    }\n
LABEL_403765:\n
    do\n
    {\n
        v12 = a3->field_8;\n
        if (v12 == -1)\n
        {\n
            if (!(!cgc_receive(a0, a1, a2, a3)))\n
                goto LABEL_4037f3;\n
            v13 = &v0;\n
            if (!(!*(&v1)))\n
                continue;\n
        }\n
        else\n
        {\n
            if (v12 == *(&a3[1].padding_0[0]))\n
            {\n
                *(&a3->field_8) = 0;\n
                if (!(!cgc_receive(a0, a1, a2, a3)))\n
                    goto LABEL_4037f3;\n
                v14 = *(&v2);\n
                if (!v14)\n
                    goto LABEL_4037f3;\n
                *(&a3[1].padding_0[0]) = v14;\n
                if (v14 < 0)\n
                    goto LABEL_4037f3;\n
                v12 = a3->field_8;\n
            }\n
            a3->field_8 = v12 + 1;\n
            v13 = &a3->padding_0[v12 + 16];\n
        }\n
        v15 = *(v13);\n
    } while (v15 != v5);\n
    goto LABEL_4037fc;\n
LABEL_4037f3:\n
    return -1;\n
}\n
", "4208586:sub_4037ca": null, "4208659:sub_403813": null, "4208672:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4208687:sub_40382f": null, "4208688:cgc_fwrite": "long long cgc_fwrite(unsigned long long a0, unsigned long long a1, unsigned int a2[4])\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v4;  // rax\n
    void* v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rcx\n
    void* v7;  // r12, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rbp\n
\n
    v0 = v2;\n
    if (a2[2] != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v4 = a2[3];\n
            if (v4 + a1 >= 0x400)\n
            {\n
                v7 = 0x400 - v4;\n
                cgc_memcpy(16 + a2 + v4, a0, v7);\n
                a2[3] = a2[3] + v7;\n
                cgc_fflush(a2);\n
                if (v7 < a1)\n
                    goto LABEL_4038e9;\n
            }\n
            else\n
            {\n
                v7 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_4038e9:\n
                    v8 = a1 - v7;\n
                    cgc_memcpy(16 + a2 + a2[3], a0 + v7, v8);\n
                    a2[3] = a2[3] + v8;\n
                    return a1;\n
                }\n
            }\n
            return v7;\n
        }\n
    }\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 >= a1)\n
            return a1;\n
        v5 += v0;\n
        if (cgc_transmit(a2, a1, a2, v6))\n
            return -1;\n
    }\n
}\n
", "4208927:sub_40391f": null, "4208928:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4208943:sub_40392f": null, "4208944:cgc_malloc_alloc": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
    char padding_18[1016];\n
    unsigned long long field_410;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern unsigned long long g_40b110;\n
extern unsigned long long g_40b142;\n
\n
long long cgc_malloc_alloc(struct_1 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long long v2;  // rbx\n
    struct_1 *v4;  // rbx\n
    struct_1 *v5;  // r12\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rbx\n
    struct_0 *v11;  // r15, Other Possible Types: unsigned long, void*\n
\n
    if (a1 > 2147483647)\n
        return 0;\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
        return tiny_alloc(a0, 4);\n
    if (v2 <= 15)\n
        return tiny_alloc(a0, v2);\n
    if (v2 > 131071)\n
    {\n
        if (!cgc_allocate(a0, a1, v7))\n
        {\n
            v11 = *(&v0);\n
            *(v11) = a0;\n
            *((v11 + 8)) = v2 + 4111 & -0x1000;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    v4 = v2 + 31;\n
    v5 = v4 & -0x10;\n
    if (!(v4 & -0x10))\n
    {\n
        v9 = 4294967295;\n
    }\n
    else if (v5 < 513)\n
    {\n
        v10 = v4 / 16;\n
        v9 = v10 + 2;\n
        if (v10 > 128)\n
            v11 = 0;\n
    }\n
    else if (v5 <= 0x1200)\n
    {\n
        v9 = (&v5[524576157].padding_18[816] >> 7) + 34;\n
    }\n
    else\n
    {\n
        v9 = 130;\n
        if (v5 <= 0x20000)\n
            v9 = (&v5[8393218528].padding_18[232] >> 11) + 66;\n
    }\n
    v11 = (&a0->field_0)[v9];\n
    if (!v11)\n
        goto LABEL_0x403bd0;\n
    else\n
        goto LABEL_0x403bf0;\n
}\n
", "4209856:tiny_alloc": "long long tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned short v6[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned int v7;  // edx\n
    unsigned short *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v12;  // rbp\n
    unsigned long long v13;  // r13\n
    unsigned short *v14;  // r12\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v9 = *((a0 + v4 * 8));\n
    if (v9)\n
    {\n
        *((a0 + v5 * 8)) = *(&v9);\n
        return v9;\n
    }\n
    v6 = *((a0 + v5 * 8 + 5144));\n
    if (v6)\n
    {\n
        v7 = v6[0];\n
        a1 = v6[1];\n
    }\n
    else\n
    {\n
        v8 = *((a0 + 5168));\n
        if (v8)\n
        {\n
            v9 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v10))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v12 = v0;\n
            v13 = v12 + 1048575;\n
            v14 = v13 & -0x100000;\n
            if (v14 > v12)\n
                cgc_deallocate(a0);\n
            if ((v12 + 0x200000) > (v14 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v13 >> 20) + 1048)) = 1;\n
            v8 = v14;\n
            *((a0 + 5168)) = v14;\n
            v9 = 0;\n
            if (!v14)\n
                return 0;\n
        }\n
        v15 = v8;\n
        v6 = v8 + v9;\n
        *((a0 + v5 * 8 + 5144)) = v6;\n
        *((v15 + v9)) = v3;\n
        *((v15 + v9 + 2)) = v3;\n
        v16 = v9 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v7 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v6 + 2)) = v17;\n
    if (v7 + v17 < 4097)\n
        return a1 + v6;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4210295:sub_403e77": null, "4210304:malloc_free": "typedef struct struct_1 {\n
    unsigned long long field_-10;\n
    unsigned long long field_-8;\n
    unsigned long long field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    unsigned long long field_8;\n
    struct struct_3 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_3;\n
\n
long long malloc_free(struct_1 *a0, struct_1 *a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rcx, Other Possible Types: unsigned long\n
    struct_1 *v4;  // r9\n
    char v5;  // al\n
    unsigned long v6;  // rax\n
    unsigned long long v7;  // rdi\n
    struct_2 *v8;  // r11\n
    struct_2 *v9;  // r8\n
    struct_2 *v10;  // rax, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v12;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v13;  // r10\n
    unsigned long v14;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v15;  // r10\n
    struct_0 *v16;  // rcx\n
    struct_4 *v17;  // rdi\n
    unsigned long long v18;  // r11\n
    struct_2 *v19;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v20;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v21;  // rax\n
    unsigned long v22;  // rcx\n
    struct_0 *v23;  // rdx\n
    struct_4 *v24;  // rdi\n
    unsigned long v25;  // rax\n
    struct_4 *v26;  // rax\n
    unsigned long v27;  // rdi, Other Possible Types: unsigned long long\n
    struct_2 *v28;  // rsi, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v0;\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = *(1048 + &a0->field_-10 + (a1 >> 20));\n
    if (v5 != 2)\n
    {\n
        if (v5 == 1)\n
        {\n
            v6 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            a1->field_-10 = (&a0->field_-10)[v6];\n
            (&a0->field_-10)[v6] = a1;\n
            return v0;\n
        }\n
        if (v5)\n
            return v0;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v11 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_404269;\n
        }\n
        else\n
        {\n
            if (a1->field_0 != a0)\n
            {\n
                v3 = a0;\n
                v12 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v12 = a1->field_-8;\n
                if (v12 - 0x20000 <= 2147356671 && !(v12 & 4095))\n
                    return cgc_deallocate(a0, a1);\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v3, v12);\n
        }\n
    }\n
    else if (!(v3 & 7))\n
    {\n
        v19 = &a1->field_0;\n
        v7 = v19->field_8;\n
        if ((v7 & 1))\n
        {\n
            v11 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_404269;\n
        }\n
        else if (v7 - 131073 <= -131058)\n
        {\n
            v11 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_404269;\n
        }\n
        else\n
        {\n
            v8 = v19->field_0;\n
            v9 = v7 + v19;\n
            v10 = v19 - v8;\n
            if (!v8)\n
                v10 = v8;\n
            if (!v10)\n
            {\n
                if (v9->field_0 == v7)\n
                    goto LABEL_403fbf;\n
                goto LABEL_404272;\n
            }\n
            else\n
            {\n
                v13 = *((v10 + 8));\n
                if (!((v13 & -2) == v8))\n
                    goto LABEL_40428c;\n
                if (v9->field_0 == v7)\n
                {\n
                    if ((v13 & 1))\n
                    {\n
                        if (v8 <= 15)\n
                        {\n
                            v15 = v13 / 4 - 1;\n
                        }\n
                        else if (v8 <= 0x200)\n
                        {\n
                            v15 = (v13 >> 4) + 2;\n
                        }\n
                        else if (v8 <= 0x1200)\n
                        {\n
                            v15 = (v8 + 22906492224 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v15 = 130;\n
                            if (v8 <= 0x20000)\n
                                v15 = (&v8[366503875733].field_8 >> 11) + 66;\n
                        }\n
                        *((v10 + 8)) = v8;\n
                        v16 = *((v10 + 16));\n
                        if (v16)\n
                            v16->field_18 = *((v10 + 24));\n
                        v17 = *((v10 + 24));\n
                        if (v17)\n
                            v17->field_10 = v16;\n
                        if ((&v4->field_-10)[v15] == v10)\n
                            (&v4->field_-10)[v15] = v17;\n
                        *((v10 + 16)) = 0;\n
                        v18 = v8 + v19->field_8;\n
                        *((v10 + 8)) = v18;\n
                        v9->field_0 = v18;\n
                        v19 = v10;\n
                        v14 = v9->field_8;\n
                        if (!(!(v14 & 1)))\n
                            goto LABEL_4040d4;\n
                        goto LABEL_403fcc;\n
                    }\n
LABEL_403fbf:\n
                    v14 = v9->field_8;\n
                    if ((v14 & 1))\n
                    {\n
LABEL_4040d4:\n
                        v21 = v14 & -2;\n
                        if (v21 <= 15)\n
                        {\n
                            v22 = v14 / 4 - 1;\n
                        }\n
                        else if (v21 <= 0x200)\n
                        {\n
                            v22 = (v14 >> 4) + 2;\n
                        }\n
                        else if (v21 <= 0x1200)\n
                        {\n
                            v22 = (0x7ffffffe00 + v21 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v22 = 130;\n
                            if (v21 <= 0x20000)\n
                                v22 = (0x7ffffffee00 + v21 >> 11) + 66;\n
                        }\n
                        v9->field_8 = v21;\n
                        v23 = v9->field_10;\n
                        if (v23)\n
                            v23->field_18 = v9[1].field_0;\n
                        v24 = v9[1].field_0;\n
                        if (v24)\n
                            v24->field_10 = v23;\n
                        if ((&v4->field_-10)[v22] == v9)\n
                            (&v4->field_-10)[v22] = v24;\n
                        *(&v9->field_10) = 0;\n
                        v25 = v21 + *((v19 + 8));\n
                        *((v19 + 8)) = v25;\n
                        *((v19 + v25)) = v25;\n
                        v20 = *((v19 + 8));\n
                        if (v20 > 15)\n
                        {\n
LABEL_404191:\n
                            if (v20 <= 0x200)\n
                            {\n
                                v3 = (v20 >> 4) + 2;\n
                            }\n
                            else if (v20 <= 0x1200)\n
                            {\n
                                v3 = (0x7ffffffe00 + v20 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v3 = 130;\n
                                if (v20 <= 0x20000)\n
                                    v3 = (0x7ffffffee00 + v20 >> 11) + 66;\n
                            }\n
LABEL_4041e7:\n
                            if ((v20 & 1))\n
                            {\n
                                v10 = cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
                            }\n
                            else\n
                            {\n
                                *((v19 + 8)) = v20 | 1;\n
                                *((v19 + 16)) = 0;\n
                                *((v19 + 24)) = (&v4->field_-10)[v3];\n
                                (&v4->field_-10)[v3] = v19;\n
                                v26 = *((v19 + 24));\n
                                if (!v26)\n
                                    return v0;\n
                                v26->field_10 = v19;\n
                                return v0;\n
                            }\n
LABEL_40428c:\n
                            v27 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
                            v28 = v10;\n
LABEL_404295:\n
                            cgc_heap_error(v27, v28, v3);\n
                            return cgc_malloc_size(v27, v28, v3, v3, v9, v4);\n
                        }\n
LABEL_403fda:\n
                        v3 = v20 / 4 - 1;\n
                        goto LABEL_4041e7;\n
                    }\n
LABEL_403fcc:\n
                    v20 = *((v19 + 8));\n
                    if (!(v20 <= 15))\n
                        goto LABEL_404191;\n
                    goto LABEL_403fda;\n
                }\n
            }\n
        }\n
    }\n
    v11 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_404269:\n
    cgc_heap_error(v11, v3);\n
LABEL_404272:\n
    v27 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
    v28 = v9;\n
    goto LABEL_404295;\n
}\n
", "4211360:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4211404:sub_4042cc": null, "4211408:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(void* a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r12\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 > 2147483647)\n
    {\n
LABEL_4042e1:\n
        return 0;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        return 0;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v3 = a1 / 0x100000;\n
    if (!(*(1048 + a0 + v3) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_404363;\n
    }\n
    else\n
    {\n
        if (*(1048 + a0 + v3) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_404363;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_404363:\n
                v5 = cgc_malloc_alloc(a0, a2);\n
                if (v5)\n
                {\n
                    cgc_memcpy(v5, a1);\n
                    malloc_free(a0, a1);\n
                    return v5;\n
                }\n
                goto LABEL_4042e1;\n
            }\n
        }\n
    }\n
    return a1;\n
}\n
", "4211668:sub_4043d4": null, "4211680:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4211856:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4211892:sub_4044b4": null, "4211904:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4211950:sub_4044ee": null, "4211952:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_404584:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_404517;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_404517:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_404584;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_404517;\n
}\n
", "4212383:sub_40469f": null, "4212384:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_4047f5:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_4046d9;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_4046d9:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_4047f5;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_4046d9;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_404803:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_404787;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_404787:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_404803;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_404787;\n
    }\n
}\n
", "4213311:sub_404a3f": null, "4213312:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_404bb0;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_404bb0:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4213694:sub_404bbe": null, "4213696:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4213908:sub_404c94": null, "4213920:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return cgc__vsfprintf();\n
    }\n
    return cgc__vsfprintf();\n
}\n
", "4213998:sub_404cee": null, "4214000:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4214209:sub_404dc1": null, "4214224:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4214307:sub_404e23": null, "4214320:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4214473:sub_404ec9": null, "4214480:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4214493:sub_404edd": null, "4214496:cgc__vsfprintf": "long long cgc__vsfprintf(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_16;  // tmp #16\n
    int tmp_2;  // tmp #2\n
    unsigned long v0;  // [bp-0x1c8]\n
    int tmp_50;  // tmp #50\n
    int tmp_70;  // tmp #70\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0xa1]\n
    unsigned long v2;  // [bp-0xa0]\n
    unsigned long v3;  // [bp-0x98]\n
    unsigned long v4;  // [bp-0x90]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x87]\n
    char v7;  // [bp-0x76]\n
    char v8;  // [bp-0x75]\n
    char v9;  // [bp-0x74]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned long v11;  // [bp-0x38]\n
    unsigned long v13;  // rbx\n
    unsigned long v14;  // rbp\n
    char v15;  // al, Other Possible Types: unsigned long\n
    unsigned long v16;  // r15\n
    unsigned int v17;  // eax\n
    char v18;  // r13b\n
    unsigned long v19;  // rax\n
    char v20;  // cc_dep1\n
    char v21;  // cc_dep2\n
    unsigned long v22;  // r12\n
    unsigned long v23;  // rcx\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rax\n
    unsigned long v28;  // rsi\n
    unsigned int v29;  // cc_dep1\n
    unsigned long v30;  // rsi\n
    unsigned long v31;  // rdi\n
    unsigned long v32;  // rcx\n
    unsigned long v33;  // rax\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // r13\n
    unsigned long v36;  // rax\n
    unsigned long v37;  // r13\n
    unsigned long v38;  // rbx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // r12\n
    unsigned long v41;  // rbp\n
    unsigned long v42;  // rbp\n
    unsigned long v43;  // rbp\n
    unsigned long v44;  // r14\n
    unsigned long v45;  // rax\n
    unsigned int v46;  // ebp\n
    unsigned long v47;  // r12\n
    unsigned long v48;  // r13\n
    unsigned long v49;  // r14\n
    unsigned long v50;  // r8\n
    unsigned long v51;  // r9\n
\n
    v13 = a3;\n
    v4 = a1;\n
    v14 = a0 + 1;\n
    v3 = v14;\n
    v15 = *(a0);\n
    if (!*(a0))\n
    {\n
        v44 = 0;\n
    }\n
    else\n
    {\n
        v16 = a2;\n
        v34 = &v5;\n
        v10 = 20 + -0x1 * &v5;\n
        v44 = 0;\n
        v2 = v13;\n
        while (true)\n
        {\n
            if (v15 != 37)\n
            {\n
                if (v44 < 2147483647)\n
                {\n
                    v1 = v15;\n
                    if (v16)\n
                    {\n
                        a2 = v16;\n
                        cgc_fwrite(&v1, 1, v16);\n
                    }\n
                    if (v13)\n
                        *((v13 + v44)) = v1;\n
                    v14 = v3;\n
                }\n
                else if (v44 == -1)\n
                {\n
                    goto LABEL_4054d3;\n
                }\n
                v44 += 1;\n
                v34 = v14 + 1;\n
                v3 = v34;\n
                tmp_16 = *(v14);\n
                v15 = *(v14);\n
                v14 = v34;\n
                if (!(!tmp_16))\n
                    continue;\n
                goto LABEL_40545a;\n
            }\n
            a0 = v14 + 1;\n
            v3 = a0;\n
            v17 = *(v14);\n
            v18 = 32;\n
            if (v17 == 32)\n
            {\n
LABEL_404f83:\n
                if (!(*(a0) - 48 <= 9))\n
                    goto LABEL_404ffa;\n
                goto LABEL_404f8b;\n
            }\n
            else if (v17 != 48)\n
            {\n
                if (!v17)\n
                    goto LABEL_40545a;\n
                v3 = v14;\n
                a0 = v14;\n
                goto LABEL_404f83;\n
            }\n
            else\n
            {\n
                v18 = 48;\n
                if (*(a0) - 48 <= 9)\n
                {\n
LABEL_404f8b:\n
                    v19 = cgc_strtoul();\n
                    a0 = v3;\n
                    goto LABEL_404ffc;\n
                }\n
                else\n
                {\n
LABEL_404ffa:\n
                    v19 = 0;\n
LABEL_404ffc:\n
                    v34 = a0 + 1;\n
                    v3 = v34;\n
                    a2 = *(a0);\n
                    *(&v13) = 1;\n
                    if (a2 == 104)\n
                    {\n
                        a2 = a0 + 2;\n
                        v20 = *((a0 + 1));\n
                        v21 = 104;\n
                    }\n
                    else if (a2 == 108)\n
                    {\n
                        v20 = *((a0 + 1));\n
                        v21 = 108;\n
                        a2 = a0 + 2;\n
                        *(&v13) = *((a0 + 1)) != 108;\n
                    }\n
                    else\n
                    {\n
                        if (!a2)\n
                            goto LABEL_405455;\n
                        goto LABEL_405039;\n
                    }\n
                    if (v20 == v21)\n
                        v34 = a2;\n
                    a0 = v34;\n
LABEL_405039:\n
                    v22 = a0 + 1;\n
                    v3 = v22;\n
                    *(&a2) = *(a0);\n
                    v34 = *(a0);\n
                    a1 = v34 - 88;\n
                    if (a1 > 32)\n
                    {\n
                        v13 = v2;\n
                        if (!v34)\n
                        {\n
                            v47 = v22 - v14;\n
                            if (v44 < 2147483647)\n
                            {\n
                                v48 = 2147483647 - v44;\n
                                if (v48 > v47)\n
                                    v48 = v47;\n
                                if (v16)\n
                                    cgc_fwrite(v14, v48, v16);\n
                                if (v13)\n
                                    cgc_memcpy(v13 + v44, v14, v48);\n
                            }\n
                            tmp_2 = v44;\n
                            v44 += v47;\n
                            if (__CFADD__(tmp_2, v47))\n
                                goto LABEL_4054d3;\n
                            goto LABEL_40545a;\n
                        }\n
                        else\n
                        {\n
                            v40 = v22 - v14;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_4053ff;\n
                            v37 = 2147483647 - v44;\n
                            if (v37 > v40)\n
                                v37 = v40;\n
                            if (v16)\n
                                cgc_fwrite(v14, v37, v16);\n
                            if (!v13)\n
                                goto LABEL_4053ff;\n
                            a0 = v13 + v44;\n
                            a1 = v14;\n
                            a2 = v37;\n
                            goto LABEL_4053fa;\n
                        }\n
                    }\n
                    v0 = 4831842305;\n
                    if (((*(&v0 + ((a1 & 63) >> 3)) >> (a1 & 63 & 7)) & 1))\n
                    {\n
                        v11 = v19;\n
                        if (a2 != 100)\n
                        {\n
                            a1 = v4;\n
                            if (v13)\n
                            {\n
                                v25 = *(a1);\n
                                v13 = v2;\n
                                if (v25 > 40)\n
                                {\n
                                    v31 = *((a1 + 8));\n
                                    *((a1 + 8)) = v31 + 8;\n
                                }\n
                                else\n
                                {\n
                                    v31 = v25 + *((a1 + 16));\n
                                    *(a1) = v25 + 8;\n
                                }\n
                                v32 = *(v31);\n
                                if (a2 == 117)\n
                                    a0 = 10;\n
                                else\n
                                    a0 = 16;\n
                                v42 = (a2 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                if (!v32)\n
                                {\n
                                    v7 = *(v42);\n
                                    a1 = &v7;\n
                                }\n
                                else\n
                                {\n
                                    do\n
                                    {\n
                                        *((a1 - 1)) = *((v42 + ((0 CONCAT v32) /m a0 >> 32)));\n
                                        a1 = &v7;\n
                                        tmp_50 = v32;\n
                                        v32 = (0 CONCAT v32) /m a0;\n
                                    } while (tmp_50 >= a0);\n
                                }\n
                                v41 = &v5;\n
                                cgc_memmove(&v5, a1, v10 + a1);\n
                                goto LABEL_4052ec;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            a2 = v4;\n
                            v41 = &v5;\n
                            if (v13)\n
                            {\n
                                v24 = *(a2);\n
                                if (v24 <= 40)\n
                                {\n
                                    v28 = v24 + *((a2 + 16));\n
                                    *(a2) = v24 + 8;\n
                                    v38 = *(v28);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                        goto LABEL_40520f;\n
                                }\n
                                else\n
                                {\n
                                    v30 = *((a2 + 8));\n
                                    *((a2 + 8)) = v30 + 8;\n
                                    v38 = *(v30);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                    {\n
LABEL_40520f:\n
                                        v5 = 45;\n
                                        v38 = -(v38);\n
                                        v9 = 0;\n
                                        a1 = &v9;\n
                                        a0 = &v6;\n
                                        do\n
                                        {\n
                                            v39 = 3435973837 * v38 >> 35;\n
                                            a2 = v39 * 2;\n
                                            *((a1 - 1)) = *((4240124 + v38 + -5 * a2));\n
                                            a1 -= 1;\n
                                            tmp_70 = v38;\n
                                            v38 = v39;\n
                                        } while (tmp_70 > 9);\n
                                        v41 = &v5;\n
LABEL_40525d:\n
                                        cgc_memmove(a0, a1, a1 - a0 + 20);\n
                                        v13 = v2;\n
LABEL_4052ec:\n
                                        v45 = cgc_strlen(v41);\n
                                        v40 = v45;\n
                                        v34 = v11;\n
                                        if (v34 > v45)\n
                                        {\n
                                            v46 = v45 - v34;\n
                                            do\n
                                            {\n
                                                if (v44 < 2147483647)\n
                                                {\n
                                                    v1 = v18;\n
                                                    if (v16)\n
                                                    {\n
                                                        a2 = v16;\n
                                                        cgc_fwrite(&v1, 1, v16);\n
                                                    }\n
                                                    if (v13)\n
                                                        *((v13 + v44)) = v1;\n
                                                }\n
                                                else\n
                                                {\n
                                                    if (!(v44 == -1))\n
                                                        continue;\n
                                                }\n
                                                tmp_2 = v44;\n
                                                v44 += 1;\n
                                                tmp_12 = v46 + 1;\n
                                                v46 += 1;\n
                                            } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                                        }\n
                                        if (!(v44 < 2147483647))\n
                                            goto LABEL_4053ff;\n
                                        v43 = 2147483647 - v44;\n
                                        if (v43 > v45)\n
                                            v43 = v45;\n
                                        if (v16)\n
                                        {\n
                                            a1 = v43;\n
                                            a2 = v16;\n
                                            cgc_fwrite(&v5, v43, v16);\n
                                        }\n
                                        if (!v13)\n
                                            goto LABEL_4053ff;\n
                                        a0 = v13 + v44;\n
                                        a1 = &v5;\n
LABEL_4053f7:\n
                                        a2 = v43;\n
LABEL_4053fa:\n
                                        cgc_memcpy(a0, a1, a2);\n
LABEL_4053ff:\n
                                        tmp_2 = v44;\n
                                        v44 += v40;\n
                                        if (__CFADD__(tmp_2, v40))\n
                                            goto LABEL_4054d3;\n
                                        goto LABEL_405408;\n
                                    }\n
                                }\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                a0 = &v5;\n
                                if (!v29)\n
                                {\n
                                    v7 = 48;\n
                                    a0 = &v5;\n
                                    a1 = &v7;\n
                                    goto LABEL_40525d;\n
                                }\n
                            }\n
                        }\n
LABEL_405455:\n
                        v13 = v2;\n
LABEL_40545a:\n
                        if (v44 < 2147483647)\n
                            goto LABEL_40546b;\n
                        if (v44 == -1)\n
                        {\n
LABEL_4054d3:\n
                            cgc__terminate(a0);\n
                            return cgc_realloc(a0, a1, a2, v34, v50, v51);\n
                        }\n
                        goto LABEL_405475;\n
                    }\n
                    else if (a1 == 11)\n
                    {\n
                        a2 = v4;\n
                        v23 = *(a2);\n
                        if (v23 <= 40)\n
                        {\n
                            v27 = v23 + *((a2 + 16));\n
                            v34 = v23 + 8;\n
                            *(a2) = v34;\n
                            v13 = v2;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_405440;\n
                            goto LABEL_4051c6;\n
                        }\n
                        else\n
                        {\n
                            v27 = *((a2 + 8));\n
                            v34 = v27 + 8;\n
                            *((a2 + 8)) = v34;\n
                            v13 = v2;\n
                            if (v44 < 2147483647)\n
                            {\n
LABEL_4051c6:\n
                                v1 = *(v27);\n
                                if (v16)\n
                                {\n
                                    a2 = v16;\n
                                    cgc_fwrite(&v1, 1, v16);\n
                                }\n
                                if (v13)\n
                                {\n
                                    *((v13 + v44)) = v1;\n
                                    goto LABEL_40544a;\n
                                }\n
                            }\n
                            else\n
                            {\n
LABEL_405440:\n
                                if (v44 == -1)\n
                                    goto LABEL_4054d3;\n
LABEL_40544a:\n
                                v44 += 1;\n
LABEL_405408:\n
                                v15 = v3;\n
                                v14 = v15 + 1;\n
                                v3 = v14;\n
                                *(&v15) = *(v15);\n
                                if (!*(&v15))\n
                                    goto LABEL_40545a;\n
                            }\n
                        }\n
                    }\n
                    else if (a1 == 27)\n
                    {\n
                        a2 = v4;\n
                        v26 = *(a2);\n
                        if (v26 > 40)\n
                        {\n
                            v33 = *((a2 + 8));\n
                            v34 = v33 + 8;\n
                            *((a2 + 8)) = v34;\n
                        }\n
                        else\n
                        {\n
                            v33 = v26 + *((a2 + 16));\n
                            v34 = v26 + 8;\n
                            *(a2) = v34;\n
                        }\n
                        v13 = v2;\n
                        v35 = *(v33);\n
                        v36 = cgc_strlen(v35);\n
                        v40 = v36;\n
                        if (!(v44 < 2147483647))\n
                            goto LABEL_4053ff;\n
                        v43 = 2147483647 - v44;\n
                        if (v43 > v36)\n
                            v43 = v36;\n
                        if (v16)\n
                            cgc_fwrite(v35, v43, v16);\n
                        if (!v13)\n
                            goto LABEL_4053ff;\n
                        a0 = v13 + v44;\n
                        a1 = v35;\n
                        goto LABEL_4053f7;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_40546b:\n
    if (v13)\n
        *((v13 + v44)) = 0;\n
LABEL_405475:\n
    v49 = v44 + 1;\n
    return v49;\n
}\n
", "4214568:sub_404f28": null, "4214689:sub_404fa1": null, "4215562:sub_40530a": null, "4215639:sub_405357": null, "4216032:cgc_realloc": "extern void g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4216050:sub_4054f2": null, "4216064:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4216161:sub_405561": null, "4216176:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4216272:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4216329:sub_405609": null, "4216336:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4216389:sub_405645": null, "4216400:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4216453:sub_405685": null, "4216464:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216525:sub_4056cd": null, "4216528:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4216562:sub_4056f2": null, "4216576:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    char v6[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v6 = a0;\n
    v4 = &a0[a2];\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v3))\n
        {\n
            v5 = cgc_tolower(v2);\n
            if (v5 != cgc_tolower(*(v3)))\n
                break;\n
            if (v6 >= v4)\n
                break;\n
            v3 += 1;\n
            v2 = *((v6 + 1));\n
            v6 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    v7 = (v6 == v4 ? *(v6) - *(v3) : 0);\n
    return v7;\n
}\n
", "4216687:sub_40576f": null, "4216688:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_4057d4:\n
        v17 = v3;\n
        goto LABEL_405906;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_4057d4;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_405906:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4217130:sub_40592a": null, "4217136:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217207:sub_405977": null, "4217216:cgc_strsep": "long long cgc_strsep(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    unsigned long v3;  // r15\n
    unsigned long v4;  // rbx\n
    unsigned long v5;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rbx\n
    unsigned long v9;  // rbx\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v5 = cgc_strchr(a1, v2);\n
            if (v5)\n
            {\n
                v7 = v3 + v4;\n
                if (!*((v3 + v4)))\n
                    goto LABEL_4059c5;\n
                v8 = v4 + 1;\n
                v9 = v8 + v3;\n
                goto LABEL_4059c7;\n
            }\n
            v4 = v4 + 1;\n
            v2 = *((v3 + v4));\n
        } while (v2);\n
        v6 = v4;\n
    }\n
    v7 = v6 + v3;\n
LABEL_4059c5:\n
    v9 = 0;\n
LABEL_4059c7:\n
    *(a0) = v9;\n
    *(v7) = 0;\n
    return *(a0);\n
}\n
", "4217329:sub_4059f1": null, "4217344:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4217423:sub_405a4f": null, "4217424:cgc_strtol": "typedef struct struct_0 {\n
    char field_0;\n
    void* field_1;\n
} struct_0;\n
\n
long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long, struct_0 *\n
    void* v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    void* v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    void* v24;  // rdi\n
    unsigned int v25;  // ebp\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // edx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405c28;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_405b11;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_405b11:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_405b50:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_405c59;\n
LABEL_405b66:\n
                *(&v18) = *(v16);\n
LABEL_405b68:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_405b75:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 > 2147483647)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405c28;\n
                }\n
LABEL_405c59:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405c28;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405c28;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_405b75;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_405b50;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_405b46:\n
            v19 = 16;\n
            goto LABEL_405b66;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_405b66;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_405b68;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_405b46;\n
LABEL_405c28:\n
    v31 = (!v25 ? -0x80000000 : -(v26));\n
    v32 = (!v25 ? 2147483647 : v26);\n
    if (v30 < 0)\n
        v32 = v31;\n
    return v32;\n
}\n
", "4217769:sub_405ba9": null, "4217967:sub_405c6f": null, "4217968:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    void* v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    void* v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    void* v24;  // rdi\n
    void* v25;  // rbp, Other Possible Types: unsigned long, unsigned long long, unsigned int\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned long v32;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405e48;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_405d31;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_405d31:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_405d70:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_405e84;\n
LABEL_405d86:\n
                *(&v18) = *(v16);\n
LABEL_405d88:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_405d95:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 >> 32)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405e48;\n
                }\n
LABEL_405e84:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405e48;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405e48;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_405d95;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_405d70;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_405d66:\n
            v19 = 16;\n
            goto LABEL_405d86;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_405d86;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_405d88;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_405d66;\n
LABEL_405e48:\n
    if (v30 < 0)\n
    {\n
        v31 = (v26 == -0x80000000 ? 1 : v25);\n
        if (v26 <= 2147483647)\n
            v31 = v25;\n
        v26 = -(v26);\n
        v25 = v31;\n
    }\n
    v32 = (!v25 ? 4294967295 : v26);\n
    return v32;\n
}\n
", "4218313:sub_405dc9": null, "4218522:sub_405e9a": null, "4218528:_ZN9CExplorerC2EPKc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    char padding_20[17];\n
    unsigned short field_31;\n
} struct_0;\n
\n
extern char g_40e5a0;\n
\n
long long CExplorer::__base_ctor__(struct_0 *a0, unsigned int a1)\n
{\n
    a0->field_0 = &g_40e5a0;\n
    a0->field_8 = 4294968296;\n
    a0->field_10 = 0;\n
    *(&(&a0->padding_20)[1]) = 1;\n
    return cgc_strcpy(&a0->padding_20, cgc_strndup(a1, 16));\n
}\n
", "4218601:sub_405ee9": null, "4218608:_ZN9CExplorer10GetNextExpEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
double CExplorer::GetNextExp(long long a0)\n
{\n
    int tmp_29;  // tmp #29\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // ecx\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v4;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // xmm1\n
    int v6;  // xmm0, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v1 = a0->field_c;\n
    if (v1 <= 0)\n
        return v3;\n
    v2 = v1 & 7;\n
    if (v1 - 1 < 7)\n
    {\n
        v6 = 0;\n
        v6 = 0x3ff0000000000000;\n
    }\n
    else\n
    {\n
        v4 = v1 & -8;\n
        v6 = 0;\n
        *(&v6) = 0x3ff0000000000000;\n
        v5 = 0;\n
        v5 = 4607857958744122982;\n
        do\n
        {\n
            v6 = v6 * v5 * v5 * v5 * v5 * v5 * v5 * v5 * v5;\n
            tmp_29 = v4;\n
            v4 = v4 - 8;\n
        } while (tmp_29 + -8);\n
    }\n
    if (!v2)\n
    {\n
        v7 = v6 * 0x408f400000000000;\n
        return v7;\n
    }\n
    do\n
    {\n
        v6 *= 0 CONCAT 4607857958744122982;\n
        tmp_8 = v2;\n
        v2 = v2 - 1;\n
    } while (tmp_8 + -1);\n
}\n
", "4218761:sub_405f89": null, "4218768:_ZN9CExplorer7GainExpEi": "long long CExplorer::GainExp(unsigned int a0[4], unsigned long a1)\n
{\n
    int tmp_29;  // tmp #29\n
    int tmp_8;  // tmp #8\n
    unsigned long long v1;  // r8\n
    unsigned long long v2;  // r10, Other Possible Types: unsigned long\n
    unsigned int v3;  // r11d\n
    unsigned long long v4;  // xmm0\n
    unsigned long long v5;  // xmm2\n
    int v6;  // xmm3\n
    unsigned long v7;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm3\n
    unsigned long v10;  // rdx, Other Possible Types: unsigned int, unsigned long long\n
    unsigned long long v11;  // rbx\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx, Other Possible Types: unsigned int, unsigned long long\n
\n
    v1 = a0[3];\n
    if (v1 == 100)\n
        return 0;\n
    v2 = a0[2];\n
    if (v1 >= 100)\n
    {\n
        v13 = v1;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        v4 = 0;\n
        v4 = 0x3ff0000000000000;\n
        v5 = 0;\n
        v5 = 4607857958744122982;\n
        v13 = v1;\n
        while (true)\n
        {\n
            if (v13 <= 0)\n
            {\n
                v10 = 1000;\n
            }\n
            else\n
            {\n
                v6 = v4;\n
                if ((v1 - 1) + v3 >= 7)\n
                {\n
                    v7 = v13 & -8;\n
                    v6 = v4;\n
                    do\n
                    {\n
                        v6 = v6 * v5 * v5 * v5 * v5 * v5 * v5 * v5 * v5;\n
                        tmp_29 = v7;\n
                        v7 = v7 - 8;\n
                    } while (tmp_29 + -8);\n
                }\n
                if ((v13 & 7))\n
                {\n
                    v8 = v13 & 7;\n
                    do\n
                    {\n
                        v6 *= v5;\n
                        tmp_8 = v8;\n
                        v8 = v8 - 1;\n
                    } while (tmp_8 + -1);\n
                }\n
                v9 = v6 * (0 CONCAT 0x408f400000000000);\n
                v10 = v9;\n
            }\n
            v11 = v10 - v2;\n
            v12 = a1 - v11;\n
            if (v12 < v11)\n
                break;\n
            v13 = v13 + 1;\n
            a0[3] = v13;\n
            v3 += 1;\n
            v2 = v10;\n
            a1 = v12;\n
            if (v13 == 100)\n
            {\n
                v13 = 100;\n
                goto LABEL_406077;\n
            }\n
        }\n
    }\n
    v10 = v2;\n
LABEL_406077:\n
    a0[2] = v10 + v12;\n
    *(&v12) = v1 < v13;\n
    return v12;\n
}\n
", "4218931:sub_406033": null, "4219012:sub_406084": null, "4219024:_ZN9CExplorer12ReplaceSkillEP6CSkilli": "long long CExplorer::ReplaceSkill(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    if (a2 <= 1)\n
        *((a0 + a2 * 8 + 16)) = a1;\n
    return a2;\n
}\n
", "4219037:sub_40609d": null, "4219040:_ZN9CExplorer11GetCountersEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long CExplorer::GetCounters(struct struct_0 *a0[4])\n
{\n
    struct_0 *v1;  // rax\n
    void* v2;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rcx, Other Possible Types: unsigned long\n
\n
    v1 = a0[2];\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        v3 = a0[3];\n
        if (!v3)\n
            return 0;\n
    }\n
    else\n
    {\n
        v2 = v1->field_8;\n
        v3 = a0[3];\n
        if (!v3)\n
            return v2;\n
    }\n
    v2 = v2 | *((v3 + 8));\n
    return v2;\n
}\n
", "4219078:sub_4060c6": null, "4219088:_ZN9CExplorer10ChangeNameEPKc": "long long CExplorer::ChangeName(unsigned long a0, char *a1)\n
{\n
    return cgc_strcpy(a0 + 32, a1);\n
}\n
", "4219097:sub_4060d9": null, "4219104:_ZN9CFortressC1Ev": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned long long field_14;\n
    char padding_1c[4];\n
    uint128_t field_20;\n
    uint128_t field_30;\n
    uint128_t field_40;\n
    uint128_t field_50;\n
} struct_0;\n
\n
long long CFortress::__ctor__(struct_0 *a0)\n
{\n
    *(&(&a0->padding_0)[1]) = 4294967346;\n
    *(&a0->padding_1c) = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    a0->field_40 = 0;\n
    return cgc_memset(a0, 0, 0x11);\n
}\n
", "4219149:sub_40610d": null, "4219152:_ZN9CFortressD2Ev": "long long CFortress::__base_dtor__(unsigned long a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = a0;\n
    v2 = *((a0 + 72));\n
    if (v2)\n
    {\n
        do\n
        {\n
            a0 = *((a0 + 64));\n
            *((v1 + 64)) = *((a0 + 8));\n
            *((v1 + 72)) = v2 - 1;\n
            operator delete(a0);\n
            v2 = *((v1 + 72));\n
        } while (v2);\n
    }\n
    while (true)\n
    {\n
        v3 = *((a0 + 56));\n
        if (!v3)\n
            break;\n
        a0 = *((a0 + 48));\n
        *((v1 + 48)) = *((a0 + 8));\n
        *((v1 + 56)) = v3 - 1;\n
        operator delete(a0);\n
    }\n
    while (true)\n
    {\n
        v4 = *((a0 + 40));\n
        if (!v4)\n
            break;\n
        a0 = *((a0 + 32));\n
        *((v1 + 32)) = *((a0 + 8));\n
        *((v1 + 40)) = v4 - 1;\n
        operator delete(a0);\n
    }\n
    return *((a0 + 40));\n
}\n
", "4219204:sub_406144": null, "4219252:sub_406174": null, "4219300:sub_4061a4": null, "4219312:_ZN9CFortress9GetSupplyEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long CFortress::GetSupply(struct_0 *a0)\n
{\n
    return a0->field_14;\n
}\n
", "4219316:sub_4061b4": null, "4219328:_ZN9CFortress9AddSupplyEi": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
char CFortress::AddSupply(struct_0 *a0, unsigned long a1)\n
{\n
    int tmp_20;  // tmp #20\n
    unsigned int v1;  // esi\n
\n
    tmp_20 = a1 / 0x80000000 & 1;\n
    v1 = a1 + a0->field_14;\n
    if (!(2001 <= v1 & tmp_20))\n
        a0->field_14 = v1;\n
    return 2001 <= v1 & tmp_20 ^ 1;\n
}\n
", "4219355:sub_4061db": null, "4219360:_ZN9CFortress9SubSupplyEi": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long CFortress::SubSupply(struct_0 *a0, unsigned long a1)\n
{\n
    int tmp_12;  // tmp #12\n
    unsigned long long v1;  // rax\n
    char v2;  // rax\n
\n
    if (a1 < 0)\n
        return 0;\n
    v1 = a0->field_14;\n
    tmp_12 = v1;\n
    v2 = v1 - a1;\n
    if ((tmp_12 - a1) < 0)\n
        return 0;\n
    a0->field_14 = v2;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4219380:sub_4061f4": null, "4219392:_ZN9CFortress6GetDayEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long CFortress::GetDay(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4219396:sub_406204": null, "4219408:_ZN9CFortress7NextDayEi": "typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    struct struct_3 *field_20;\n
    unsigned long long field_28;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[12];\n
    struct struct_1 *field_30;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
extern unsigned long long cgc_stdout;\n
\n
long long CFortress::NextDay(struct_4 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    int tmp_37;  // tmp #37\n
    int tmp_2;  // tmp #2\n
    struct struct_0 **v1;  // [bp-0x58], Other Possible Types: void*\n
    struct_0 *v2;  // [bp-0x50]\n
    struct_4 *v3;  // [bp-0x40]\n
    unsigned long v4;  // [bp-0x38]\n
    struct_4 *v6;  // r14, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
    struct_2 *v8;  // r12, Other Possible Types: unsigned long\n
    unsigned int v9;  // edx\n
    unsigned long v10;  // rdx, Other Possible Types: unsigned long long\n
    struct_3 *v11;  // rax, Other Possible Types: unsigned long\n
    void* v12;  // rbp\n
    void* v13;  // rbp\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // eax\n
    struct_1 *v16;  // rbp\n
    unsigned long v17;  // rax, Other Possible Types: unsigned long long\n
    void* v18;  // r14, Other Possible Types: unsigned long\n
    void* v19;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v20;  // rax, Other Possible Types: unsigned long\n
    void* v21;  // r13, Other Possible Types: unsigned long\n
    unsigned int v22;  // ecx\n
    unsigned int v23;  // edx\n
    unsigned long v24;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v25[2];  // rax\n
    unsigned long long v26;  // rbp\n
    struct_0 *v27;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v28;  // rcx\n
    struct_3 *v29;  // rcx, Other Possible Types: unsigned long, unsigned long long, struct struct_0 **, unsigned int\n
    void* v30;  // rbp, Other Possible Types: unsigned long\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // r15d\n
    void* v33;  // rbx, Other Possible Types: unsigned long\n
    void* v34;  // rdi, Other Possible Types: unsigned long\n
    void* v35;  // r13, Other Possible Types: unsigned long\n
    struct_0 *v36;  // r12\n
    void* v37;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v38;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v39;  // rax, Other Possible Types: unsigned long\n
    unsigned int v40;  // edx\n
    unsigned int v41;  // ecx\n
    unsigned long long v42;  // r15\n
    unsigned long v43;  // rbp\n
    unsigned long long v44;  // rax\n
    struct_3 *v45;  // rdi, Other Possible Types: unsigned long\n
    struct_3 *v46;  // rdx\n
    struct_0 *v47;  // rdi, Other Possible Types: unsigned long\n
\n
    v6 = a0;\n
    a0->field_18 = a0->field_18 + a1;\n
    v2 = 0;\n
    v7 = a0->field_28;\n
    v29 = 1;\n
    if (!v7)\n
    {\n
        v30 = 0;\n
        v38 = a0->field_14;\n
        if (!(v38 <= 999))\n
            goto LABEL_4066a9;\n
    }\n
    else\n
    {\n
        v32 = a1;\n
        v1 = cgc_stdout;\n
        v34 = 0;\n
        v33 = 0;\n
        v30 = 0;\n
        v3 = v6;\n
        do\n
        {\n
            v0 = v34;\n
            if (v7 <= v33)\n
            {\n
                v8 = 0;\n
                if (!(!CMission::IsAvail(0)))\n
                    goto LABEL_406260;\n
LABEL_406323:\n
                *((v8 + 20)) = *((v8 + 20)) - v32;\n
                if (CMission::GetDuration(v8) > 0)\n
                {\n
LABEL_406260:\n
                    v31 = v0;\n
                    continue;\n
                }\n
                else\n
                {\n
                    v4 = v30;\n
                    if (!CMission::Complete(v8))\n
                    {\n
                        v13 = v1;\n
                        cgc_fprintf(v13, \"\\n
### MISSION FAILED :( ###\\n
\");\n
                        CMission::GetName(v8);\n
                        cgc_fprintf(v13, \"- - %s - -\\n
\");\n
LABEL_4064fc:\n
                        v25 = operator new(16);\n
                        v25[0] = v8;\n
                        v25[1] = 0;\n
                        v29 = &v2;\n
                        v26 = v4;\n
                        v6 = v3;\n
                        v32 = a1;\n
                        v31 = v0;\n
                        if (v26)\n
                        {\n
                            v27 = v2;\n
                            do\n
                            {\n
                                v28 = v27;\n
                                v27 = *((v27 + 8));\n
                            } while (v27);\n
                            v29 = &v28->field_8;\n
                        }\n
                        *(v29) = v25;\n
                        v30 = v26 + 1;\n
                    }\n
                    else\n
                    {\n
                        v12 = v1;\n
                        cgc_fprintf(v12, \"\\n
### MISSION SUCCESS :) ###\\n
\");\n
                        CMission::GetName(v8);\n
                        cgc_fprintf(v12, \"+ + %s + +\\n
\");\n
                        v14 = *((v8 + 32));\n
                        v15 = *((v6 + 20)) + v14;\n
                        if (v14 < 0 && !(v15 <= 2000))\n
                            goto LABEL_406399;\n
                        *((v6 + 20)) = v15;\n
LABEL_406399:\n
                        cgc_fprintf(v1, \" => +%d Supply\\n
\");\n
                        v16 = *((v8 + 48));\n
                        v17 = v16->field_8;\n
                        if (v17)\n
                        {\n
                            v18 = 0;\n
                            v19 = 0;\n
                            do\n
                            {\n
                                if (v17 <= v19)\n
                                {\n
                                    v21 = 0;\n
                                    continue;\n
                                }\n
                                v20 = v16->field_0;\n
                                if (v19)\n
                                {\n
                                    v22 = v19 - 1;\n
                                    if ((v19 & 7))\n
                                    {\n
                                        v23 = v18 & 7;\n
                                        do\n
                                        {\n
                                            v20 = *((v20 + 8));\n
                                        } while (v23 != 1);\n
                                        v24 = v18 - 1;\n
                                        if (v22 < 7)\n
                                            goto LABEL_4063d0;\n
                                    }\n
                                    else\n
                                    {\n
                                        v24 = v19;\n
                                        if (v22 < 7)\n
                                            goto LABEL_4063d0;\n
                                    }\n
                                    do\n
                                    {\n
                                        v20 = *((*((*((*((*((*((*((*((v20 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                                        tmp_37 = v24;\n
                                        v24 = v24 - 8;\n
                                    } while (tmp_37 + -8);\n
                                }\n
LABEL_4063d0:\n
                                v21 = *(v20);\n
                                cgc_fprintf(v1, \" => <%s> +%d Experience %s\\n
\");\n
                                v19 += 1;\n
                                v17 = v16->field_8;\n
                                v18 = v18 + 1;\n
                            } while (v17 > v19);\n
                        }\n
                        goto LABEL_4064fc;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                v11 = *((v6 + 32));\n
                if (v33)\n
                {\n
                    v29 = v33 - 1;\n
                    if ((v33 & 7))\n
                    {\n
                        v9 = v34 & 7;\n
                        do\n
                        {\n
                            v11 = *((v11 + 8));\n
                        } while (v9 != 1);\n
                        v10 = v34 - 1;\n
                        if (v29 < 7)\n
                            goto LABEL_4062f5;\n
                    }\n
                    else\n
                    {\n
                        v10 = v33;\n
                        if (v29 < 7)\n
                            goto LABEL_4062f5;\n
                    }\n
                    do\n
                    {\n
                        v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v10;\n
                        v10 = v10 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
LABEL_4062f5:\n
                v8 = *(v11);\n
                if (!(!CMission::IsAvail(v8)))\n
                    goto LABEL_406260;\n
                goto LABEL_406323;\n
            }\n
            v33 += 1;\n
            v7 = *((v6 + 40));\n
            v34 = v31 + 1;\n
        } while (v7 > v33);\n
        v35 = 0;\n
        if (v30)\n
        {\n
            *(&v1) = !v30;\n
            v36 = v2;\n
            v37 = 0;\n
            do\n
            {\n
                v39 = v36;\n
                if (v37)\n
                {\n
                    v40 = v37 - 1;\n
                    v39 = v36;\n
                    v29 = v37;\n
                    if ((v37 & 7))\n
                    {\n
                        v41 = v35 & 7;\n
                        v39 = v36;\n
                        do\n
                        {\n
                            v39 = *((v39 + 8));\n
                        } while (v41 != 1);\n
                        v29 = v35 - 1;\n
                    }\n
                    if (v40 >= 7)\n
                    {\n
                        do\n
                        {\n
                            v39 = *((*((*((*((*((*((*((*((v39 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                            tmp_37 = v29;\n
                            v29 = v29 - 8;\n
                        } while (tmp_37 + -8);\n
                    }\n
                }\n
                v42 = v30;\n
                v43 = *(v39);\n
                v44 = *((v6 + 40));\n
                if (v44)\n
                {\n
                    v45 = *((v6 + 32));\n
                    if (!v45)\n
                        continue;\n
                    v29 = v45;\n
                    if (v45->field_0 != v43)\n
                    {\n
                        do\n
                        {\n
                            v46 = v29;\n
                            v29 = *((v29 + 8));\n
                            if (!v29)\n
                                continue;\n
                        } while (*(v29) != v43);\n
                        if (v29 != v45)\n
                        {\n
                            v46->field_8 = *((v29 + 8));\n
                            v45 = v29;\n
                            goto LABEL_406668;\n
                        }\n
                    }\n
                    *((v6 + 32)) = v45->field_8;\n
LABEL_406668:\n
                    *((v6 + 40)) = v44 - 1;\n
                    operator delete(v45);\n
                }\n
                if (v43)\n
                {\n
                    CMission::__dtor__(v43);\n
                    operator delete(v43);\n
                }\n
                v37 += 1;\n
                v35 = v35 + 1;\n
                v30 = v42;\n
            } while (v37 != v42);\n
            *(&v29) = v1;\n
            v38 = *((v6 + 20));\n
            if (!(v38 <= 999))\n
                goto LABEL_4066a9;\n
        }\n
        else\n
        {\n
            v30 = 0;\n
            *(&v29) = 1;\n
            v38 = *((v6 + 20));\n
            if (!(v38 <= 999))\n
                goto LABEL_4066a9;\n
        }\n
    }\n
    v38 = v38 + 100;\n
    *((v6 + 20)) = v38;\n
LABEL_4066a9:\n
    if (v29)\n
        return v38;\n
    v47 = v2;\n
    do\n
    {\n
        v38 = operator delete(v47);\n
        v47 = *((v47 + 8));\n
        tmp_2 = v30;\n
        v30 -= 1;\n
    } while (tmp_2 != 1);\n
    return v38;\n
}\n
", "4219487:sub_40625f": null, "4219658:sub_40630a": null, "4219846:sub_4063c6": null, "4220010:sub_40646a": null, "4220280:sub_406578": null, "4220499:sub_406653": null, "4220673:sub_406701": null, "4220688:_ZN9CFortress11GetMissionsEv": "long long CFortress::GetMissions(unsigned long a0)\n
{\n
    return a0 + 32;\n
}\n
", "4220693:sub_406715": null, "4220704:_ZN9CFortress12GetExplorersEv": "long long CFortress::GetExplorers(unsigned long a0)\n
{\n
    return a0 + 48;\n
}\n
", "4220709:sub_406725": null, "4220720:_ZN9CFortress9GetSkillsEv": "long long CFortress::GetSkills(unsigned long a0)\n
{\n
    return a0 + 64;\n
}\n
", "4220725:sub_406735": null, "4220736:_ZN9CFortress23GetNumAvailableMissionsEv": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
    unsigned long long field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long CFortress::GetNumAvailableMissions(struct_1 *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    int tmp_37;  // tmp #37\n
    unsigned long v2;  // rax\n
    void* v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edx\n
    struct_0 *v6;  // rax, Other Possible Types: unsigned long\n
    unsigned long v7;  // rdx, Other Possible Types: unsigned long long\n
    void* v8;  // r15, Other Possible Types: unsigned long\n
    void* v9;  // rbp, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a0->field_28)\n
        return 0;\n
    v3 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v6 = a0->field_20;\n
        if (v9)\n
        {\n
            v4 = v9 - 1;\n
            if (!(v9 & 7))\n
            {\n
                v7 = v9;\n
                if (v4 < 7)\n
                    continue;\n
            }\n
            else\n
            {\n
                v5 = v3 & 7;\n
                do\n
                {\n
                    v6 = *((v6 + 8));\n
                } while (v5 != 1);\n
                v7 = v3 - 1;\n
                if (v4 < 7)\n
                    continue;\n
            }\n
            do\n
            {\n
                v6 = *((*((*((*((*((*((*((*((v6 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                tmp_37 = v7;\n
                v7 = v7 - 8;\n
            } while (tmp_37 + -8);\n
        }\n
        v8 += CMission::IsAvail(*(v6));\n
        v9 += 1;\n
        v3 = v3 + 1;\n
    } while (a0->field_28 > v9);\n
    return v8;\n
}\n
", "4220766:sub_40675e": null, "4220854:sub_4067b6": null, "4220939:sub_40680b": null, "4220944:_ZN9CFortress24GetNumAvailableExplorersEv": "typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_0 *field_30;\n
    unsigned long long field_38;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[49];\n
    char field_31;\n
    char field_32;\n
} struct_1;\n
\n
long long CFortress::GetNumAvailableExplorers(struct_2 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned long long v1;  // r8\n
    struct_0 *v2;  // r9\n
    void* v3;  // r11, Other Possible Types: unsigned long\n
    void* v4;  // rdi, Other Possible Types: unsigned long\n
    void* v5;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // r10d\n
    struct_0 *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v9;  // rsi, Other Possible Types: unsigned long long\n
    char v10[51];  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v11;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v12;  // rsi, Other Possible Types: unsigned long long\n
\n
    v1 = a0->field_38;\n
    if (!v1)\n
        return 0;\n
    v2 = a0->field_30;\n
    v3 = 0;\n
    v4 = 0;\n
    v5 = 0;\n
    do\n
    {\n
        if (!v4)\n
        {\n
            v10 = v2->field_0;\n
            if (!(!v10[49]))\n
                goto LABEL_40693d;\n
LABEL_406830:\n
            v10 = 0;\n
            continue;\n
        }\n
        else\n
        {\n
            v6 = v3 & 7;\n
            v7 = v4 - 1;\n
            v8 = v2;\n
            v9 = v4;\n
            if ((v4 & 7))\n
            {\n
                v8 = v2;\n
                do\n
                {\n
                    v8 = *((v8 + 8));\n
                } while (v6 != 1);\n
                v9 = v3 - 1;\n
            }\n
            if (v7 >= 7)\n
            {\n
                do\n
                {\n
                    v8 = *((*((*((*((*((*((*((*((v8 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v9;\n
                    v9 = v9 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            if (!*((*(v8) + 49)))\n
                goto LABEL_406830;\n
            v11 = v2;\n
            v12 = v4;\n
            if ((v4 & 7))\n
            {\n
                v11 = v2;\n
                do\n
                {\n
                    v11 = *((v11 + 8));\n
                } while (v6 != 1);\n
                v12 = v3 - 1;\n
            }\n
            if (v7 >= 7)\n
            {\n
                do\n
                {\n
                    v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v12;\n
                    v12 = v12 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            v10 = *(v11);\n
LABEL_40693d:\n
            *(&v10) = *((v10 + 50));\n
        }\n
        v5 += v10;\n
        v4 += 1;\n
        v3 = v3 + 1;\n
    } while (v4 != v1);\n
    return v5;\n
}\n
", "4220971:sub_40682b": null, "4221226:sub_40692a": null, "4221263:sub_40694f": null, "4221264:_ZN9CFortress20GetNumHiredExplorersEv": "typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_1 *field_30;\n
    unsigned long long field_38;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[50];\n
    char field_32;\n
} struct_0;\n
\n
long long CFortress::GetNumHiredExplorers(struct_2 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned long long v1;  // r8\n
    struct_1 *v2;  // r9\n
    void* v3;  // r11, Other Possible Types: unsigned long\n
    unsigned int v4;  // r10d\n
    unsigned int v5;  // ecx\n
    struct_1 *v6;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rcx, Other Possible Types: unsigned long long\n
    void* v8;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    void* v9;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_38;\n
    if (!v1)\n
        return 0;\n
    v2 = a0->field_30;\n
    v3 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v6 = v2;\n
        if (v9)\n
        {\n
            v4 = v9 - 1;\n
            v6 = v2;\n
            v7 = v9;\n
            if ((v9 & 7))\n
            {\n
                v5 = v3 & 7;\n
                v6 = v2;\n
                do\n
                {\n
                    v6 = *((v6 + 8));\n
                } while (v5 != 1);\n
                v7 = v3 - 1;\n
            }\n
            if (v4 >= 7)\n
            {\n
                do\n
                {\n
                    v6 = *((*((*((*((*((*((*((*((v6 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v7;\n
                    v7 = v7 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        v8 += *((*(v6) + 50));\n
        v9 += 1;\n
        v3 = v3 + 1;\n
    } while (v9 != v1);\n
    return v8;\n
}\n
", "4221290:sub_40696a": null, "4221438:sub_4069fe": null, "4221440:_ZN9CFortress11GetAvgLevelEv": "typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_1 *field_30;\n
    unsigned long long field_38;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[34];\n
    char field_32;\n
} struct_0;\n
\n
long long CFortress::GetAvgLevel(struct_2 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned long long v1;  // r8\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // r11\n
    void* v4;  // rdx, Other Possible Types: unsigned long\n
    void* v5;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // r14d\n
    unsigned long v8;  // rbp, Other Possible Types: unsigned long long\n
    struct_0 *v9;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v10;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v11;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v12;  // rbp, Other Possible Types: unsigned long long\n
    unsigned int v13;  // r9d\n
    unsigned int v14;  // r10d\n
\n
    v1 = a0->field_38;\n
    if (!v1)\n
        return 1;\n
    v3 = a0->field_30;\n
    v4 = 0;\n
    v5 = 0;\n
    v13 = 0;\n
    v14 = 0;\n
    do\n
    {\n
        if (!v5)\n
        {\n
            v9 = v3->field_0;\n
            if (!v9->field_32)\n
                continue;\n
        }\n
        else\n
        {\n
            v6 = v4 & 7;\n
            v7 = v5 - 1;\n
            v10 = v3;\n
            v8 = v5;\n
            if ((v5 & 7))\n
            {\n
                v10 = v3;\n
                do\n
                {\n
                    v10 = *((v10 + 8));\n
                } while (v6 != 1);\n
                v8 = v4 - 1;\n
            }\n
            if (v7 >= 7)\n
            {\n
                do\n
                {\n
                    v10 = *((*((*((*((*((*((*((*((v10 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v8;\n
                    v8 = v8 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            if (!*((*(v10) + 50)))\n
                continue;\n
            v11 = v3;\n
            v12 = v5;\n
            if ((v5 & 7))\n
            {\n
                v11 = v3;\n
                do\n
                {\n
                    v11 = *((v11 + 8));\n
                } while (v6 != 1);\n
                v12 = v4 - 1;\n
            }\n
            if (v7 >= 7)\n
            {\n
                do\n
                {\n
                    v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v12;\n
                    v12 = v12 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            v9 = *(v11);\n
        }\n
        v13 += *((v9 + 12));\n
        v14 += 1;\n
        v5 += 1;\n
        v4 = v4 + 1;\n
    } while (v5 != v1);\n
    if (!v14)\n
        return 1;\n
    v2 = (v13 >> 31 CONCAT v13) /m v14;\n
    if (v2)\n
        return (v13 >> 31 CONCAT v13) /m v14;\n
    return 1;\n
}\n
", "4221478:sub_406a26": null, "4221738:sub_406b2a": null, "4221791:sub_406b5f": null, "4221792:_ZN9CFortress8SetOwnerEPc": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
long long CFortress::SetOwner(char *a0, struct_0 *a1)\n
{\n
    a1->field_10 = 0;\n
    return cgc_strcpy(a0, a1);\n
}\n
", "4221801:sub_406b69": null, "4221808:_ZN8CMissionC1EPKcRK12CRequirementRK7CReward": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    uint128_t field_8;\n
    unsigned int field_18;\n
    unsigned long long field_1c;\n
    char field_24;\n
    char padding_25[3];\n
    unsigned int field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CMission::__ctor__(struct_1 *a0, unsigned int a1, struct_0 *a2, unsigned long long *a3)\n
{\n
    unsigned long long v1;  // rax\n
\n
    *((&a0->field_8 + 8)) = a2->field_10;\n
    *(&(&a0->field_0)[1]) = a2->field_0;\n
    *((&a0->field_8 + 12)) = *(a3);\n
    *(&(&a0->field_18)[1]) = 1;\n
    *(&a0->field_1c) = 0;\n
    v1 = cgc_strndup(a1, 32);\n
    a0->field_0 = v1;\n
    return v1;\n
}\n
", "4221864:sub_406ba8": null, "4221872:_ZN8CMissionD1Ev": "typedef struct struct_13 {\n
    unsigned long long field_0;\n
    char padding_8[40];\n
    struct struct_12 *field_30;\n
} struct_13;\n
\n
typedef struct struct_12 {\n
    struct struct_10 *field_0;\n
    unsigned long long field_8;\n
} struct_12;\n
\n
typedef struct struct_10 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[32];\n
    struct struct_11 *field_30;\n
} struct_10;\n
\n
typedef struct struct_11 {\n
    struct struct_8 *field_0;\n
} struct_11;\n
\n
typedef struct struct_8 {\n
    char padding_0[48];\n
    struct struct_9 *field_30;\n
} struct_8;\n
\n
typedef struct struct_9 {\n
    struct struct_6 *field_0;\n
} struct_9;\n
\n
typedef struct struct_6 {\n
    char padding_0[48];\n
    struct struct_7 *field_30;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    struct struct_4 *field_0;\n
} struct_7;\n
\n
typedef struct struct_4 {\n
    char padding_0[48];\n
    struct struct_5 *field_30;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    struct struct_2 *field_0;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_3 *field_30;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[48];\n
    struct struct_1 *field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CMission::__dtor__(struct_13 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_12 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    cgc_free(a0->field_0);\n
    v3 = *((a0 + 48));\n
    if (v3)\n
    {\n
        v4 = v3->field_8;\n
        if (v4)\n
        {\n
            do\n
            {\n
                a0 = v3->field_0;\n
                v3->field_0 = a0->field_8;\n
                v3->field_8 = v4 - 1;\n
                operator delete(a0);\n
                v4 = v3->field_8;\n
            } while (v4);\n
        }\n
        operator delete(v3);\n
    }\n
    CReward::__dtor__(a0 + 28);\n
    return CRequirement::__base_dtor__(...);\n
}\n
", "4221981:sub_406c1d": null, "4221984:_ZN8CMission14SetRequirementERK12CRequirement": "typedef struct struct_0 {\n
    char padding_0[8];\n
    uint128_t field_8;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    uint128_t field_0;\n
    unsigned int field_10;\n
} struct_1;\n
\n
double CMission::SetRequirement(long long a0, long long a1)\n
{\n
    int v1;  // xmm0\n
\n
    *((&a0->field_8 + 8)) = a1->field_10;\n
    v1 = a1->field_0;\n
    *(&(&a0->padding_0)[1]) = v1;\n
    return v1;\n
}\n
", "4221998:sub_406c2e": null, "4222000:_ZN8CMission14GetRequirementEv": "long long CMission::GetRequirement(unsigned long a0)\n
{\n
    return a0 + 8;\n
}\n
", "4222005:sub_406c35": null, "4222016:_ZN8CMission9SetRewardERK7CReward": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned long long field_1c;\n
} struct_0;\n
\n
long long CMission::SetReward(struct_0 *a0, unsigned long long *a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    v1 = *(a1);\n
    *(&(&a0->padding_0)[1]) = v1;\n
    return v1;\n
}\n
", "4222024:sub_406c48": null, "4222032:_ZN8CMission9GetRewardEv": "long long CMission::GetReward(unsigned long a0)\n
{\n
    return a0 + 28;\n
}\n
", "4222037:sub_406c55": null, "4222048:_ZN8CMission7IsAvailEv": "typedef struct struct_0 {\n
    char padding_0[36];\n
    char field_24;\n
} struct_0;\n
\n
char CMission::IsAvail(struct_0 *a0)\n
{\n
    return a0->field_24;\n
}\n
", "4222052:sub_406c64": null, "4222064:_ZN8CMission7GetNameEv": "long long CMission::GetName(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4222068:sub_406c74": null, "4222080:_ZN8CMission11GetReqLevelEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long CMission::GetReqLevel(struct_0 *a0)\n
{\n
    return a0->field_c;\n
}\n
", "4222084:sub_406c84": null, "4222096:_ZN8CMission11GetReqGroupEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long CMission::GetReqGroup(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4222100:sub_406c94": null, "4222112:_ZN8CMission12GetReqSupplyEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CMission::GetReqSupply(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4222116:sub_406ca4": null, "4222128:_ZN8CMission11GetDurationEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long CMission::GetDuration(struct_0 *a0)\n
{\n
    return a0->field_14;\n
}\n
", "4222132:sub_406cb4": null, "4222144:_ZN8CMission16GetReqTypeStringEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long CMission::GetReqTypeString(struct_0 *a0)\n
{\n
    return CRequirement::ReqTypeToString(a0->field_8);\n
}\n
", "4222152:sub_406cc8": null, "4222160:_ZN8CMission12EvalCountersERK5CListIP9CExplorerE": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
long long CMission::EvalCounters(struct_1 *a0, struct_3 *a1)\n
{\n
    int tmp_37;  // tmp #37\n
    void* v1;  // rbx, Other Possible Types: unsigned long\n
    void* v2;  // rbp, Other Possible Types: unsigned long\n
    unsigned int v3;  // r12d\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edx\n
    unsigned long v6;  // rdx, Other Possible Types: unsigned long long\n
    struct_0 *v7;  // rax, Other Possible Types: unsigned long\n
    unsigned int v8;  // r12d\n
    unsigned long long v9;  // r12\n
\n
    if (!a1->field_8)\n
    {\n
        v3 = -1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        v2 = 0;\n
        v8 = 0;\n
        do\n
        {\n
            v7 = a1->field_0;\n
            if (v2)\n
            {\n
                v4 = v2 - 1;\n
                if (!(v2 & 7))\n
                {\n
                    v6 = v2;\n
                    if (v4 < 7)\n
                        continue;\n
                }\n
                else\n
                {\n
                    v5 = v1 & 7;\n
                    do\n
                    {\n
                        v7 = *((v7 + 8));\n
                    } while (v5 != 1);\n
                    v6 = v1 - 1;\n
                    if (v4 < 7)\n
                        continue;\n
                }\n
                do\n
                {\n
                    v7 = *((*((*((*((*((*((*((*((v7 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v6;\n
                    v6 = v6 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            v8 |= CExplorer::GetCounters(*(v7));\n
            v2 += 1;\n
            v1 = v1 + 1;\n
        } while (a1->field_8 > v2);\n
        v3 = ~(v8);\n
    }\n
    v9 = v3 & a0->field_8;\n
    return v9;\n
}\n
", "4222194:sub_406cf2": null, "4222278:sub_406d46": null, "4222373:sub_406da5": null, "4222384:_ZN8CMission7ExecuteERK5CListIP9CExplorerE": "typedef struct struct_3 {\n
    char padding_0[36];\n
    char field_24;\n
    char padding_25[11];\n
    unsigned long long field_30;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[49];\n
    char field_31;\n
} struct_0;\n
\n
long long CMission::Execute(struct_3 *a0, struct struct_2 **a1)\n
{\n
    int tmp_37;  // tmp #37\n
    struct struct_1 **v1;  // rax, Other Possible Types: unsigned long\n
    struct struct_1 **v2;  // r12\n
    struct struct_1 **v3;  // r15\n
    unsigned long long v4[2];  // rax\n
    struct_1 *v5;  // rcx\n
    struct_1 *v6;  // rdx, Other Possible Types: unsigned long\n
    struct struct_1 **v7;  // rcx, Other Possible Types: unsigned long\n
    struct_2 *v8;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v9;  // r8\n
    void* v10;  // rcx, Other Possible Types: unsigned long\n
    struct struct_1 **v11;  // rdx, Other Possible Types: unsigned long\n
    struct_1 *v12;  // rsi, Other Possible Types: unsigned long\n
    unsigned int v13;  // ebx\n
    struct struct_1 **v14;  // rdi, Other Possible Types: unsigned long\n
    unsigned int v15;  // edi\n
\n
    a0->field_24 = 0;\n
    v1 = operator new(16);\n
    v2 = v1;\n
    *(&v1) = 0;\n
    v8 = *(a1);\n
    if (!v8)\n
    {\n
        a0->field_30 = v1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    do\n
    {\n
        v3 = v1;\n
        v4 = operator new(16);\n
        v4[0] = *(v8);\n
        v4[1] = 0;\n
        if (!v3)\n
        {\n
            v7 = v2;\n
        }\n
        else\n
        {\n
            v6 = *(v2);\n
            do\n
            {\n
                v5 = v6;\n
                v6 = *((v6 + 8));\n
            } while (v6);\n
            v7 = &v5->field_8;\n
        }\n
        *(v7) = v4;\n
        v1 = v3 + 1;\n
        v2[1] = v1;\n
        v8 = *((v8 + 8));\n
    } while (v8);\n
    a0->field_30 = v2;\n
    if (!v1)\n
        return v3 + 1;\n
    v9 = *(v2);\n
    v10 = 0;\n
    v11 = 0;\n
    do\n
    {\n
        v12 = v9;\n
        if (v11)\n
        {\n
            v13 = v11 - 1;\n
            v12 = v9;\n
            v14 = v11;\n
            if ((v11 & 7))\n
            {\n
                v15 = v10 & 7;\n
                v12 = v9;\n
                do\n
                {\n
                    v12 = *((v12 + 8));\n
                } while (v15 != 1);\n
                v14 = v10 - 1;\n
            }\n
            if (v13 >= 7)\n
            {\n
                do\n
                {\n
                    v12 = *((*((*((*((*((*((*((*((v12 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v14;\n
                    v14 = v14 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        *((*(v12) + 49)) = 0;\n
        v1 = v11 + 1;\n
        v10 = v10 + 1;\n
        v11 = v1;\n
    } while (v3);\n
    return v1;\n
}\n
", "4222438:sub_406de6": null, "4222553:sub_406e59": null, "4222712:sub_406ef8": null, "4222720:_ZN8CMission8CompleteEv": "typedef struct struct_3 {\n
    char padding_0[48];\n
    struct struct_2 *field_30;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[49];\n
    char field_31;\n
} struct_0;\n
\n
extern unsigned long long cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
\n
long long CMission::Complete(struct_3 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned int *v1;  // rax\n
    unsigned int v2;  // edx\n
    unsigned long long v3;  // rdx\n
    char *v4;  // rbp\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // edx\n
    struct_2 *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v9;  // r8, Other Possible Types: unsigned long long\n
    void* v10;  // r14, Other Possible Types: unsigned long, char\n
    struct_1 *v11;  // r9\n
    void* v12;  // rsi, Other Possible Types: unsigned long\n
    void* v13;  // rdi, Other Possible Types: unsigned long\n
    struct_1 *v14;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v15;  // ecx\n
    unsigned long v16;  // rbp, Other Possible Types: unsigned long long\n
    unsigned int v17;  // ebp\n
\n
    v1 = CMission::Check();\n
    v2 = cgc_g_randIdx + 4095;\n
    if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
        v2 = cgc_g_randIdx;\n
    v3 = v2 & -0x1000;\n
    v4 = cgc_g_randIdx - v3;\n
    v5 = cgc_g_randIdx - v3;\n
    *(&v5) = v4[cgc_g_rand];\n
    cgc_g_randIdx = cgc_g_randIdx + 2;\n
    v6 = *(v1);\n
    if (v6)\n
    {\n
        v7 = v4[cgc_g_rand] - ((v5 * 163 >> 14) * 101);\n
        v10 = v7 <= v6;\n
        v8 = a0->field_30;\n
        v9 = v8->field_8;\n
        if (!v9)\n
            goto LABEL_40702a;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        v8 = a0->field_30;\n
        v9 = *((v8 + 8));\n
        if (!v9)\n
            goto LABEL_40702a;\n
    }\n
    v11 = *(v8);\n
    v12 = 0;\n
    v13 = 0;\n
    do\n
    {\n
        v14 = v11;\n
        if (v13)\n
        {\n
            v15 = v13 - 1;\n
            v14 = v11;\n
            v16 = v13;\n
            if ((v13 & 7))\n
            {\n
                v17 = v12 & 7;\n
                v14 = v11;\n
                do\n
                {\n
                    v14 = *((v14 + 8));\n
                } while (v17 != 1);\n
                v16 = v12 - 1;\n
            }\n
            if (v15 >= 7)\n
            {\n
                do\n
                {\n
                    v14 = *((*((*((*((*((*((*((*((v14 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v16;\n
                    v16 = v16 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        *((*(v14) + 49)) = 1;\n
        v13 += 1;\n
        v12 = v12 + 1;\n
    } while (v13 != v9);\n
LABEL_40702a:\n
    operator delete(v1);\n
    return v10;\n
}\n
", "4222867:sub_406f93": null, "4223034:sub_40703a": null, "4223040:_ZN8CMission5CheckERK5CListIP9CExplorerE": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long CMission::Check(unsigned int a0[7], struct_2 *a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_37;  // tmp #37\n
    int tmp_12;  // tmp #12\n
    unsigned long v2;  // rax\n
    unsigned int v3[4];  // r15\n
    void* v4;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned long v7;  // rdx, Other Possible Types: unsigned long long\n
    struct_1 *v8;  // rax, Other Possible Types: unsigned long\n
    unsigned int v9;  // r13d\n
    void* v10;  // rbp, Other Possible Types: unsigned long\n
    void* v11;  // rax, Other Possible Types: unsigned long\n
    unsigned int v12;  // r13d\n
    unsigned long long v13;  // r13\n
    unsigned int v14;  // r8d\n
    unsigned long v15;  // r13\n
    unsigned int v16;  // edx\n
    struct_1 *v17;  // r11\n
    unsigned int v18;  // r10d\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    void* v20;  // rcx, Other Possible Types: unsigned long\n
    struct_1 *v21;  // rsi, Other Possible Types: unsigned long\n
    unsigned int v22;  // r14d\n
    unsigned long v23;  // rbx, Other Possible Types: unsigned long long\n
    unsigned int v24;  // ebx\n
    unsigned int v25;  // esi\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // ecx\n
\n
    v0 = v2;\n
    v3 = operator new(16);\n
    v4 = 0;\n
    if (!a1->field_8)\n
    {\n
        v12 = -1;\n
        v11 = 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        v9 = 0;\n
        do\n
        {\n
            v8 = a1->field_0;\n
            if (v10)\n
            {\n
                v5 = v10 - 1;\n
                if (!(v10 & 7))\n
                {\n
                    v7 = v10;\n
                    if (v5 < 7)\n
                        continue;\n
                }\n
                else\n
                {\n
                    v6 = v4 & 7;\n
                    do\n
                    {\n
                        v8 = *((v8 + 8));\n
                    } while (v6 != 1);\n
                    v7 = v4 - 1;\n
                    if (v5 < 7)\n
                        continue;\n
                }\n
                do\n
                {\n
                    v8 = *((*((*((*((*((*((*((*((v8 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v7;\n
                    v7 = v7 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
            v9 |= CExplorer::GetCounters(*(v8));\n
            v10 += 1;\n
            v11 = a1->field_8;\n
            v4 = v4 + 1;\n
        } while (v11 > v10);\n
        v12 = ~(v9);\n
    }\n
    tmp_12 = v12 & a0[2];\n
    v13 = v12 & a0[2];\n
    v3[1] = v13;\n
    v14 = a0[6];\n
    v3[2] = v14;\n
    v3[3] = v11;\n
    if (tmp_12)\n
    {\n
        v15 = (v13 - (v13 / 2 & 1431655765) >> 2) & 858993459;\n
        v16 = ((((v15 >> 4) + v15) & 252645135) * 16843009 >> 24) * -25 + 100;\n
        v3[0] = v16;\n
        if (!v11)\n
            goto LABEL_40724d;\n
    }\n
    else\n
    {\n
        v16 = 100;\n
        v3[0] = 100;\n
        if (!v11)\n
            goto LABEL_40724d;\n
    }\n
    v17 = a1->field_0;\n
    v18 = a0[3];\n
    v19 = 0;\n
    v20 = 0;\n
    do\n
    {\n
        v21 = v17;\n
        if (v20)\n
        {\n
            v22 = v20 - 1;\n
            v21 = v17;\n
            v23 = v20;\n
            if ((v20 & 7))\n
            {\n
                v24 = v19 & 7;\n
                v21 = v17;\n
                do\n
                {\n
                    v21 = *((v21 + 8));\n
                } while (v24 != 1);\n
                v23 = v19 - 1;\n
            }\n
            if (v22 >= 7)\n
            {\n
                do\n
                {\n
                    v21 = *((*((*((*((*((*((*((*((v21 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v23;\n
                    v23 = v23 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        v25 = *((*(v21) + 12));\n
        v26 = -((v18 - v25) * 5);\n
        if (v18 <= v25)\n
            v26 = 0;\n
        v16 = v16 + v26 + 5;\n
        v20 += 1;\n
        v19 = v19 + 1;\n
    } while (v20 != v11);\n
    v3[0] = v16;\n
LABEL_40724d:\n
    v27 = 0;\n
    if (v16 >= 0 && v14 <= v11)\n
    {\n
        v27 = 100;\n
        if (v16 < 101)\n
            return v3;\n
    }\n
    v3[0] = v27;\n
    return v3;\n
}\n
", "4223091:sub_407073": null, "4223190:sub_4070d6": null, "4223407:sub_4071af": null, "4223607:sub_407277": null, "4223616:_ZN12CRequirementC1ENS_4TypeEiiii": "long long CRequirement::__ctor__(unsigned int a0[5], unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0[0] = a1;\n
    a0[1] = a2;\n
    a0[2] = a3;\n
    a0[3] = a4;\n
    a0[4] = a5;\n
    return v1;\n
}\n
", "4223633:sub_407291": null, "4223648:_ZN12CRequirementD2Ev": "long long CRequirement::__base_dtor__()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4223649:sub_4072a1": null, "4223664:_ZN12CRequirement15ReqTypeToStringENS_4TypeE": "long long CRequirement::ReqTypeToString(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char *v3;  // rax\n
    char *v4;  // r14\n
    char *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(0x200);\n
    v4 = v3;\n
    cgc_memset(v3, 0, 0x200);\n
    v5 = v3;\n
    if (!(a0 & 1))\n
    {\n
        if (!(!(a0 & 2)))\n
            goto LABEL_407368;\n
        goto LABEL_4072e8;\n
    }\n
    else\n
    {\n
        cgc_strcpy(v3, \"GROUND,\");\n
        v5 = &v3[cgc_strlen(\"GROUND,\")];\n
        if (!(a0 & 2))\n
        {\n
LABEL_4072e8:\n
            if (!(!(a0 & 4)))\n
                goto LABEL_40738f;\n
            goto LABEL_4072f2;\n
        }\n
        else\n
        {\n
LABEL_407368:\n
            cgc_strcpy(v5, \"AERIAL,\");\n
            v5 += cgc_strlen(\"AERIAL,\");\n
            if (!(a0 & 4))\n
            {\n
LABEL_4072f2:\n
                if (!(!(a0 & 8)))\n
                    goto LABEL_4073b6;\n
                goto LABEL_4072fc;\n
            }\n
            else\n
            {\n
LABEL_40738f:\n
                cgc_strcpy(v5, \"NAVAL,\");\n
                v5 += cgc_strlen(\"NAVAL,\");\n
                if (!(a0 & 8))\n
                {\n
LABEL_4072fc:\n
                    if (!(!(a0 & 16)))\n
                        goto LABEL_4073dd;\n
                    goto LABEL_407306;\n
                }\n
                else\n
                {\n
LABEL_4073b6:\n
                    cgc_strcpy(v5, \"INTEL,\");\n
                    v5 += cgc_strlen(\"INTEL,\");\n
                    if (!(a0 & 16))\n
                    {\n
LABEL_407306:\n
                        if (!(a0 & 32))\n
                            goto LABEL_407326;\n
                        goto LABEL_40730c;\n
                    }\n
                    else\n
                    {\n
LABEL_4073dd:\n
                        cgc_strcpy(v5, \"SPECIAL,\");\n
                        v5 += cgc_strlen(\"SPECIAL,\");\n
                        if (!(a0 & 32))\n
                            goto LABEL_407326;\n
LABEL_40730c:\n
                        cgc_strcpy(v5, \"RESCUE,\");\n
                        cgc_strlen(\"RESCUE,\");\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_407326:\n
    v4[1 + cgc_strlen(v4)] = 0;\n
    return v4;\n
}\n
", "4224009:sub_407409": null, "4224016:_ZN7CRewardC2Eii": "long long CReward::__base_ctor__(unsigned int a0[2], unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0[0] = a1;\n
    a0[1] = a2;\n
    return v1;\n
}\n
", "4224022:sub_407416": null, "4224032:_ZN7CRewardD1Ev": "long long CReward::__dtor__()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4224033:sub_407421": null, "4224048:_Z18CreateMoreMissionsv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char cgc_g_fort;\n
extern struct_2 *cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
extern char g_40f698;\n
extern char g_missions;\n
\n
long long CreateMoreMissions()\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    int tmp_143;  // tmp #143\n
    unsigned int v1;  // [bp-0x54]\n
    char v2;  // [bp-0x50]\n
    char v3;  // [bp-0x38]\n
    unsigned int v5;  // edx\n
    char *v6;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v10;  // edx\n
    unsigned long long v11;  // rdx\n
    unsigned long long v12;  // rdx\n
    unsigned long long v13;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v14;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v15;  // ebp, Other Possible Types: unsigned int\n
    unsigned long long v16;  // rdi\n
    unsigned int v17;  // ebx\n
    unsigned long long v18;  // rsi\n
    unsigned int v19;  // edi\n
    unsigned long v20;  // r13\n
    unsigned int v21;  // edi\n
    unsigned long long v22;  // rcx\n
    unsigned long v23;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v24;  // r14\n
    void* v25;  // rbx\n
    unsigned int v26;  // edx\n
    unsigned long long v27;  // rdx\n
    struct_1 *v28;  // rbp\n
    unsigned long long v29[2];  // rax\n
    unsigned long long v30;  // rcx\n
    struct_0 *v31;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v32;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v33;  // rdx\n
\n
    v5 = cgc_g_randIdx + 4095;\n
    if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
        v5 = cgc_g_randIdx;\n
    v6 = cgc_g_rand;\n
    v7 = v5 & -0x1000;\n
    v1 = (cgc_g_rand[cgc_g_randIdx + -1 * v7].field_0 & 3) + 1;\n
    v9 = cgc_g_randIdx + 2;\n
    cgc_g_randIdx = v9;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v10 = v9 + 4095;\n
        if ((v9 >> 31 & 1 ^ 1))\n
            v10 = v9;\n
        v11 = v10 & -0x1000;\n
        v12 = *((v6 + v9 - v11));\n
        *(&v12) = v12 - (v12 * 171 >> 9) * 3;\n
        cgc_g_randIdx = v9 + 2;\n
        v13 = v12 + 1;\n
        v14 = v9 + 6;\n
        v15 = 0;\n
        do\n
        {\n
            v16 = v14 - 4;\n
            v17 = v14 + 4091;\n
            if ((v16 >> 31 & 1 ^ 1))\n
                v17 = v16;\n
            v15 = ...;\n
            cgc_g_randIdx = v14 - 2;\n
            v14 = v14 + 2;\n
            tmp_143 = v13;\n
            v13 = v13 - 1;\n
        } while (tmp_143 + -1);\n
        v18 = v14 - 4;\n
        v19 = v14 + 4091;\n
        if ((v18 >> 31 & 1 ^ 1))\n
            v19 = v18;\n
        v20 = v6[4 + -(v19 & -0x1000) + v14] - (v6[4 + -(v19 & -0x1000) + v14] * 137 >> 12) * 30 + 1;\n
        cgc_g_randIdx = v14 - 2;\n
        v21 = v14 + 4093;\n
        if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
            v21 = cgc_g_randIdx;\n
        v22 = v6[2 + -(v21 & -0x1000) + v14];\n
        cgc_g_randIdx = v14;\n
        v23 = v12;\n
        if (!v12)\n
            v23 = 1;\n
        v24 = v23;\n
        CRequirement::__ctor__(&v2, v15, CFortress::GetAvgLevel(&cgc_g_fort), v20, v22 - ((v22 * 205 >> 10) & -2) * 5 + 1, v24);\n
        CReward::__base_ctor__(&v3, v24 * CFortress::GetAvgLevel(&cgc_g_fort) * 100, v20 * (v20 & 3));\n
        v25 = operator new(56);\n
        v26 = cgc_g_randIdx + 4095;\n
        if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
            v26 = cgc_g_randIdx;\n
        v27 = v26 & -0x1000;\n
        CMission::__ctor__(v25, *(&(&g_missions)[16 * cgc_g_rand[cgc_g_randIdx + -1 * v27].field_0 + -80 * ((cgc_g_rand[cgc_g_randIdx + -1 * v27].field_0 * 205 >> 10) & -0x4)]), &v2, &v3);\n
        cgc_g_randIdx = cgc_g_randIdx + 2;\n
        v28 = CFortress::GetMissions(&cgc_g_fort);\n
        v29 = operator new(16);\n
        v29[0] = v25;\n
        v29[1] = 0;\n
        v30 = v28->field_8;\n
        if (!v30)\n
        {\n
            v32 = v28;\n
        }\n
        else\n
        {\n
            v31 = v28->field_0;\n
            do\n
            {\n
                v33 = v31;\n
                v31 = *((v31 + 8));\n
            } while (v31);\n
            v32 = &v33->field_8;\n
        }\n
        *(v32) = v29;\n
        v28->field_8 = v30 + 1;\n
        CReward::__dtor__();\n
        if (v0 == v1)\n
            break;\n
        v0 += 1;\n
        v6 = cgc_g_rand;\n
        v9 = cgc_g_randIdx;\n
    }\n
    return CRequirement::__base_dtor__();\n
}\n
", "4224706:sub_4076c2": null, "4224800:_Z18InitializeMissionsv": "long long InitializeMissions()\n
{\n
    return CreateMoreMissions();\n
}\n
", "4224805:sub_407725": null, "4224816:_Z16InitializeSkillsv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_g_fort;\n
extern unsigned int g_40f698;\n
extern unsigned int g_40f69c;\n
extern unsigned long long g_40f6a0;\n
extern unsigned int g_40f6a8;\n
extern unsigned int g_40f6ac;\n
extern unsigned long long g_40f6b0;\n
extern unsigned int g_40f6b8;\n
extern unsigned int g_40f6bc;\n
extern unsigned long long g_40f6c0;\n
extern unsigned int g_40f6c8;\n
extern unsigned int g_40f6cc;\n
extern unsigned long long g_40f6d0;\n
extern unsigned int g_40f6d8;\n
extern unsigned int g_40f6dc;\n
extern unsigned long long g_40f6e0;\n
extern unsigned int g_40f6e8;\n
extern unsigned int g_40f6ec;\n
extern unsigned long long g_skills;\n
\n
long long InitializeSkills()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // r14\n
    struct_1 *v4;  // rbx\n
    unsigned long long v5[2];  // rax\n
    unsigned long long v6;  // rcx\n
    struct_0 *v7;  // rsi, Other Possible Types: unsigned long\n
    struct_0 *v8;  // rdx\n
    struct_1 *v9;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v10;  // r14\n
    struct_1 *v11;  // rbx\n
    unsigned long long v12[2];  // rax\n
    unsigned long long v13;  // rcx\n
    struct_0 *v14;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v15;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v16;  // rdx\n
    unsigned long long v17;  // r14\n
    struct_1 *v18;  // rbx\n
    unsigned long long v19[2];  // rax\n
    unsigned long long v20;  // rcx\n
    struct_0 *v21;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v22;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v23;  // rdx\n
    unsigned long long v24;  // r14\n
    struct_1 *v25;  // rbx\n
    unsigned long long v26[2];  // rax\n
    unsigned long long v27;  // rcx\n
    struct_0 *v28;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v29;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v30;  // rdx\n
    unsigned long long v31;  // r14\n
    struct_1 *v32;  // rbx\n
    unsigned long long v33[2];  // rax\n
    unsigned long long v34;  // rcx\n
    struct_0 *v35;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v36;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v37;  // rdx\n
    unsigned long long v38;  // r14\n
    struct_1 *v39;  // rbx\n
    unsigned long long v40[2];  // rax\n
    unsigned long long v41;  // rcx\n
    struct_0 *v42;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v43;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v44;  // rdx\n
\n
    v0 = v2;\n
    v3 = operator new(16);\n
    CSkill::__base_ctor__(v3, g_skills, g_40f698, g_40f69c);\n
    v4 = CFortress::GetSkills(&cgc_g_fort);\n
    v5 = operator new(16);\n
    v5[0] = v3;\n
    v5[1] = 0;\n
    v6 = v4->field_8;\n
    if (!v6)\n
    {\n
        v9 = v4;\n
    }\n
    else\n
    {\n
        v7 = v4->field_0;\n
        do\n
        {\n
            v8 = v7;\n
            v7 = *((v7 + 8));\n
        } while (v7);\n
        v9 = &v8->field_8;\n
    }\n
    *(v9) = v5;\n
    v4->field_8 = v6 + 1;\n
    v10 = operator new(16);\n
    CSkill::__base_ctor__(v10, g_40f6a0, g_40f6a8, g_40f6ac);\n
    v11 = CFortress::GetSkills(&cgc_g_fort);\n
    v12 = operator new(16);\n
    v12[0] = v10;\n
    v12[1] = 0;\n
    v13 = v11->field_8;\n
    if (!v13)\n
    {\n
        v15 = v11;\n
    }\n
    else\n
    {\n
        v14 = v11->field_0;\n
        do\n
        {\n
            v16 = v14;\n
            v14 = *((v14 + 8));\n
        } while (v14);\n
        v15 = &v16->field_8;\n
    }\n
    *(v15) = v12;\n
    v11->field_8 = v13 + 1;\n
    v17 = operator new(16);\n
    CSkill::__base_ctor__(v17, g_40f6b0, g_40f6b8, g_40f6bc);\n
    v18 = CFortress::GetSkills(&cgc_g_fort);\n
    v19 = operator new(16);\n
    v19[0] = v17;\n
    v19[1] = 0;\n
    v20 = v18->field_8;\n
    if (!v20)\n
    {\n
        v22 = v18;\n
    }\n
    else\n
    {\n
        v21 = v18->field_0;\n
        do\n
        {\n
            v23 = v21;\n
            v21 = *((v21 + 8));\n
        } while (v21);\n
        v22 = &v23->field_8;\n
    }\n
    *(v22) = v19;\n
    v18->field_8 = v20 + 1;\n
    v24 = operator new(16);\n
    CSkill::__base_ctor__(v24, g_40f6c0, g_40f6c8, g_40f6cc);\n
    v25 = CFortress::GetSkills(&cgc_g_fort);\n
    v26 = operator new(16);\n
    v26[0] = v24;\n
    v26[1] = 0;\n
    v27 = v25->field_8;\n
    if (!v27)\n
    {\n
        v29 = v25;\n
    }\n
    else\n
    {\n
        v28 = v25->field_0;\n
        do\n
        {\n
            v30 = v28;\n
            v28 = *((v28 + 8));\n
        } while (v28);\n
        v29 = &v30->field_8;\n
    }\n
    *(v29) = v26;\n
    v25->field_8 = v27 + 1;\n
    v31 = operator new(16);\n
    CSkill::__base_ctor__(v31, g_40f6d0, g_40f6d8, g_40f6dc);\n
    v32 = CFortress::GetSkills(&cgc_g_fort);\n
    v33 = operator new(16);\n
    v33[0] = v31;\n
    v33[1] = 0;\n
    v34 = v32->field_8;\n
    if (!v34)\n
    {\n
        v36 = v32;\n
    }\n
    else\n
    {\n
        v35 = v32->field_0;\n
        do\n
        {\n
            v37 = v35;\n
            v35 = *((v35 + 8));\n
        } while (v35);\n
        v36 = &v37->field_8;\n
    }\n
    *(v36) = v33;\n
    v32->field_8 = v34 + 1;\n
    v38 = operator new(16);\n
    CSkill::__base_ctor__(v38, g_40f6e0, g_40f6e8, g_40f6ec);\n
    v39 = CFortress::GetSkills(&cgc_g_fort);\n
    v40 = operator new(16);\n
    v40[0] = v38;\n
    v40[1] = 0;\n
    v41 = v39->field_8;\n
    if (!v41)\n
    {\n
        v43 = v39;\n
    }\n
    else\n
    {\n
        v42 = v39->field_0;\n
        do\n
        {\n
            v44 = v42;\n
            v42 = *((v42 + 8));\n
        } while (v42);\n
        v43 = &v44->field_8;\n
    }\n
    *(v43) = v40;\n
    v39->field_8 = v41 + 1;\n
    return v40;\n
}\n
", "4225592:sub_407a38": null, "4225600:_Z19InitializeExplorersv": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
extern unsigned int cgc_g_fort;\n
extern unsigned long long cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
extern char g_explorers;\n
\n
long long InitializeExplorers()\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_37;  // tmp #37\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r14\n
    unsigned long long *v4;  // r13, Other Possible Types: unsigned long\n
    unsigned long v5;  // r12\n
    struct_2 *v6;  // rax\n
    unsigned int v7;  // ecx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rbp\n
    unsigned long v11;  // rcx, Other Possible Types: unsigned long long\n
    struct_3 *v12;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v13;  // rdx, Other Possible Types: unsigned long long\n
    unsigned int v14;  // eax\n
    struct_4 *v15;  // rbx\n
    unsigned long long v16[2];  // rax\n
    unsigned long long v17;  // rcx\n
    struct_4 *v18;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v19;  // rsi, Other Possible Types: unsigned long\n
    struct_0 *v20;  // rdx\n
\n
    v0 = v2;\n
    v3 = operator new(16);\n
    v4 = 0;\n
    CSkill::__base_ctor__(v3, \"No Skill\", 0, 0);\n
    do\n
    {\n
        v5 = operator new(56);\n
        CExplorer::__base_ctor__(v5, *(&(&g_explorers)[8 * v4]));\n
        v6 = CFortress::GetSkills(&cgc_g_fort);\n
        v7 = cgc_g_randIdx + 4095;\n
        if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
            v7 = cgc_g_randIdx;\n
        v8 = v7 & -0x1000;\n
        v9 = *((cgc_g_rand + cgc_g_randIdx - v8));\n
        v10 = v6->field_8;\n
        v11 = v9;\n
        if (v9 >= v10)\n
            v11 = (0 CONCAT v9) /m v10 >> 32;\n
        cgc_g_randIdx = cgc_g_randIdx + 2;\n
        v12 = v6->field_0;\n
        if (v11)\n
        {\n
            v13 = v9;\n
            if (v9 >= v10)\n
                v13 = (0 CONCAT v9) /m v10 >> 32;\n
            v14 = v11 & 7;\n
            if ((v11 & 7))\n
            {\n
                do\n
                {\n
                    v11 = v11 - 1;\n
                    v12 = *((v12 + 8));\n
                } while (v14 != 1);\n
            }\n
            if ((v9 - 1 + v13 - v9) >= 7)\n
            {\n
                do\n
                {\n
                    v12 = *((*((*((*((*((*((*((*((v12 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v11;\n
                    v11 = v11 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        CExplorer::ReplaceSkill(v5, *(v12), 0);\n
        CExplorer::ReplaceSkill(v5, v3, 1);\n
        v15 = CFortress::GetExplorers(&cgc_g_fort);\n
        v16 = operator new(16);\n
        v16[0] = v5;\n
        v16[1] = 0;\n
        v17 = v15->field_8;\n
        if (!v17)\n
        {\n
            v18 = v15;\n
        }\n
        else\n
        {\n
            v19 = v15->field_0;\n
            do\n
            {\n
                v20 = v19;\n
                v19 = *((v19 + 8));\n
            } while (v19);\n
            v18 = &v20->field_8;\n
        }\n
        *(v18) = v16;\n
        v15->field_8 = v17 + 1;\n
        v4 += 1;\n
    } while (v4 != 20);\n
    return v16;\n
}\n
", "4225655:sub_407a77": null, "4226052:sub_407c04": null, "4226064:_Z18PrintWelcomeBannerc": "extern unsigned long long banner;\n
extern void* cgc_stdout;\n
\n
long long PrintWelcomeBanner(unsigned long a0)\n
{\n
    return cgc_fprintf(cgc_stdout, banner);\n
}\n
", "4226090:sub_407c2a": null, "4226096:_Z13PrintMainMenuv": "extern char cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
long long PrintMainMenu()\n
{\n
    unsigned long long v1;  // rax\n
    unsigned int v2;  // ebp\n
\n
    cgc_fbuffered(cgc_stdout, 1);\n
    CFortress::GetMissions(&cgc_g_fort);\n
    CFortress::GetNumAvailableMissions(&cgc_g_fort);\n
    CFortress::GetDay(&cgc_g_fort);\n
    CFortress::GetNumHiredExplorers(&cgc_g_fort);\n
    CFortress::GetSupply(&cgc_g_fort);\n
    v1 = cgc_fprintf(cgc_stdout, \"\\n
Day-%03d => [%d mission] | [%d explorer] | [%d supply]\\n
\");\n
    if (v1 >= 2)\n
    {\n
        v2 = v1 + 1;\n
        do\n
        {\n
            cgc_fprintf(cgc_stdout, \"-\");\n
            v2 -= 1;\n
        } while (v2 > 2);\n
    }\n
    cgc_fprintf(cgc_stdout, \"\\n
\");\n
    cgc_fprintf(cgc_stdout, \"0. Next day!\\n
\");\n
    cgc_fprintf(cgc_stdout, \"1. Missions\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. Explorers\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Give up\\n
\");\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4226364:sub_407d3c": null, "4226368:_Z16PrintMissionMenuv": "extern void cgc_g_fort;\n
extern unsigned int cgc_stdout[4];\n
\n
long long PrintMissionMenu()\n
{\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fprintf(cgc_stdout, \"\\n
]]] Missions [[[\\n
\");\n
    CFortress::GetNumAvailableMissions(&cgc_g_fort);\n
    cgc_fprintf(cgc_stdout, \"1. Send mission (%d available)\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. View current missions\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Back\\n
\");\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4226485:sub_407db5": null, "4226496:_Z17PrintExplorerMenuv": "extern unsigned int cgc_stdout[4];\n
extern char g_hidden;\n
\n
long long PrintExplorerMenu()\n
{\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fprintf(cgc_stdout, \"\\n
]]] Explorers [[[\\n
\");\n
    cgc_fprintf(cgc_stdout, \"1. Hire explorer\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. View current explorers\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Remove explorer\\n
\");\n
    cgc_fprintf(cgc_stdout, \"4. Learn skills\\n
\");\n
    cgc_fprintf(cgc_stdout, \"5. Back\\n
\");\n
    if (!g_hidden)\n
    {\n
        cgc_fprintf(cgc_stdout, \"6. Change explorer name\\n
\");\n
        return cgc_fbuffered(cgc_stdout, 0);\n
    }\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4226670:sub_407e6e": null, "4226672:_Z13PrintMissionsR5CListIP8CMissionE": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern unsigned long long cgc_stdout;\n
\n
long long PrintMissions(struct_1 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned long v0;  // [bp-0x78]\n
    unsigned long v1;  // [bp-0x70]\n
    unsigned long v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    struct_1 *v5;  // [bp-0x48]\n
    unsigned long v6;  // [bp-0x40]\n
    unsigned long v7;  // [bp-0x38]\n
    unsigned long v9;  // rax, Other Possible Types: unsigned long long\n
    void* v10;  // rdi, Other Possible Types: unsigned long\n
    void* v11;  // rbx, Other Possible Types: unsigned long\n
    void* v12;  // r14\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // edx\n
    struct_0 *v15;  // rax, Other Possible Types: unsigned long\n
    unsigned long v16;  // rdx, Other Possible Types: unsigned long long\n
    void* v17;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v18;  // rbp\n
\n
    v5 = a0;\n
    v9 = a0->field_8;\n
    if (!v9)\n
        return a0->field_8;\n
    v6 = cgc_stdout;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = v6;\n
    do\n
    {\n
        v4 = v10;\n
        if (v9 <= v11)\n
        {\n
            v17 = 0;\n
            continue;\n
        }\n
        v15 = v5->field_0;\n
        if (v11)\n
        {\n
            v13 = v11 - 1;\n
            if ((v11 & 7))\n
            {\n
                v14 = v10 & 7;\n
                do\n
                {\n
                    v15 = *((v15 + 8));\n
                } while (v14 != 1);\n
                v16 = v10 - 1;\n
                if (v13 < 7)\n
                    goto LABEL_407eb0;\n
            }\n
            else\n
            {\n
                v16 = v11;\n
                if (v13 < 7)\n
                    goto LABEL_407eb0;\n
            }\n
            do\n
            {\n
                v15 = *((*((*((*((*((*((*((*((v15 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                tmp_37 = v16;\n
                v16 = v16 - 8;\n
            } while (tmp_37 + -8);\n
        }\n
LABEL_407eb0:\n
        v17 = *(v15);\n
        v18 = CMission::GetReqTypeString(v17);\n
        v7 = CMission::GetName(v17);\n
        v3 = CMission::GetReqLevel(v17);\n
        CMission::GetReqGroup(v17);\n
        v2 = v18;\n
        v1 = CMission::GetReqSupply(v17);\n
        v0 = CMission::GetDuration(v17);\n
        cgc_fprintf(v12, \"%d. %s [LVL %d] [GRP %d] [DUR %d] [COST %d] <%s>\\n
\");\n
        cgc_fprintf(v12, \"   ==> +%d supply, +%d experience\\n
\");\n
        cgc_free(v18);\n
        v11 += 1;\n
        v9 = v5->field_8;\n
        v10 = v4 + 1;\n
    } while (v9 > v11);\n
    return v5->field_8;\n
}\n
", "4226733:sub_407ead": null, "4226985:sub_407fa9": null, "4227081:sub_408009": null, "4227088:_Z14PrintExplorersR5CListIP9CExplorerE": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_0 *field_18;\n
    char padding_20[18];\n
    char field_32;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_stdout[4];\n
extern char g_40b8c8;\n
\n
long long PrintExplorers(struct_3 *a0)\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned long v0;  // [bp-0x58]\n
    unsigned long v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x44]\n
    char v3;  // [bp-0x40]\n
    struct_3 *v4;  // [bp-0x38]\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
    void* v7;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v8;  // r14\n
    unsigned int v9;  // ecx\n
    struct_2 *v11;  // rax, Other Possible Types: unsigned long\n
    unsigned long v12;  // rdx, Other Possible Types: unsigned long long\n
    struct_1 *v13;  // r13, Other Possible Types: unsigned long\n
    unsigned long v14;  // rbx\n
    char *v15;  // rbp\n
    char *v16;  // rbp\n
\n
    cgc_fbuffered(cgc_stdout, 1);\n
    v4 = a0;\n
    v6 = v4->field_8;\n
    if (!v6)\n
        return cgc_fbuffered(a0, 0);\n
    a0 = 0;\n
    v7 = 0;\n
    v8 = *(&v3);\n
    do\n
    {\n
        v2 = a0;\n
        if (v6 <= v7)\n
        {\n
            v13 = 0;\n
            continue;\n
        }\n
        v11 = v4->field_0;\n
        if (v7)\n
        {\n
            v9 = v7 - 1;\n
            if ((v7 & 7))\n
            {\n
                do\n
                {\n
                    v11 = *((v11 + 8));\n
                } while ((a0 & 7) != 1);\n
                v12 = a0 - 1;\n
                if (v9 < 7)\n
                    goto LABEL_408060;\n
            }\n
            else\n
            {\n
                v12 = v7;\n
                if (v9 < 7)\n
                    goto LABEL_408060;\n
            }\n
            do\n
            {\n
                v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                tmp_37 = v12;\n
                v12 = v12 - 8;\n
            } while (tmp_37 + -8);\n
        }\n
LABEL_408060:\n
        v13 = *(v11);\n
        v14 = (!*((v13 + 50)) ? \"hired\" : \"not-hired\");\n
        v1 = v14;\n
        v0 = CExplorer::GetNextExp(v13) + *((v13 + 8));\n
        cgc_fprintf(v8, \"%d. %s [LVL %d] [EXP %d/%d] (%s)\\n
\");\n
        v15 = CRequirement::ReqTypeToString(*((*((v13 + 16)) + 8)));\n
        cgc_fprintf(v8, \"   ==> Skill #1: %s <%s>\\n
\");\n
        cgc_free(v15);\n
        v16 = CRequirement::ReqTypeToString(*((*((v13 + 24)) + 8)));\n
        cgc_fprintf(v8, \"   ==> Skill #2: %s <%s>\\n
\");\n
        cgc_free(v16);\n
        v7 += 1;\n
        v6 = v4->field_8;\n
        a0 = v2 + 1;\n
    } while (v6 > v7);\n
    return cgc_fbuffered(v2 + 1, 0);\n
}\n
", "4227163:sub_40805b": null, "4227513:sub_4081b9": null, "4227620:sub_408224": null, "4227632:_Z17HandleSendMissionv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    struct struct_4 *field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_3;\n
\n
typedef struct struct_8 {\n
    struct struct_6 *field_0;\n
    unsigned long long field_8;\n
} struct_8;\n
\n
typedef struct struct_6 {\n
    struct struct_7 *field_0;\n
    struct struct_6 *field_8;\n
} struct_6;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_5;\n
\n
typedef struct struct_7 {\n
    char padding_0[49];\n
    char field_31;\n
    char field_32;\n
} struct_7;\n
\n
extern char cgc_g_fort;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern char g_40b8c8;\n
\n
long long HandleSendMission()\n
{\n
    int tmp_37;  // tmp #37\n
    void* v0;  // [bp-0xd8], Other Possible Types: unsigned long\n
    int tmp_2;  // tmp #2\n
    int v1;  // [bp-0xd0], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0xc8]\n
    struct_0 *v3;  // [bp-0xc0]\n
    struct_0 *v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    struct_4 *v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    struct_3 *v8;  // [bp-0x98]\n
    void* v9;  // [bp-0x90]\n
    unsigned long v10;  // [bp-0x88]\n
    struct_2 *v11;  // [bp-0x80]\n
    char v12;  // [bp-0x78]\n
    struct_1 *v14;  // rax\n
    struct_1 *v15;  // r14\n
    unsigned long v16;  // rax, Other Possible Types: unsigned long long\n
    void* v17;  // r13, Other Possible Types: unsigned long\n
    void* v18;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // edx\n
    unsigned long v21;  // rdx, Other Possible Types: unsigned long long\n
    struct_0 *v22;  // rax, Other Possible Types: unsigned long\n
    void* v23;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v24[2];  // rax\n
    struct struct_4 **v25;  // rcx, Other Possible Types: unsigned long\n
    struct_4 *v26;  // rdx, Other Possible Types: unsigned long\n
    struct_4 *v27;  // rcx\n
    unsigned long v28;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v29;  // rax, Other Possible Types: unsigned long long\n
    struct_4 *v30;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v31;  // edx\n
    struct_3 *v32;  // rbp\n
    struct_8 *v33;  // rax\n
    struct_8 *v34;  // r13\n
    unsigned long v35;  // rax, Other Possible Types: unsigned long long\n
    void* v36;  // rbp, Other Possible Types: unsigned long\n
    void* v37;  // rbx, Other Possible Types: unsigned long\n
    void* v38;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    struct_6 *v39;  // rcx, Other Possible Types: unsigned long\n
    char v40[51];  // r12, Other Possible Types: unsigned long\n
    unsigned int v41;  // edx\n
    unsigned int v42;  // esi\n
    unsigned long v43;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long v44[2];  // rax\n
    struct struct_0 **v45;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v46;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v47;  // rcx\n
    unsigned int v48[4];  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v49;  // rax\n
    char *v50;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v51;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v52;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v53;  // edx\n
    unsigned long long v54;  // rbx\n
    struct_0 *v55;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v56;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v57[2];  // rax\n
    struct_2 *v58;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v59;  // rcx\n
    struct_3 *v60;  // rbp\n
    unsigned int v61[2];  // r12\n
    struct_3 *v63;  // rbx\n
    struct_0 *v64;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v65;  // rax, Other Possible Types: unsigned long long\n
    struct_5 *v66;  // rdi\n
    struct_4 *v67;  // rdi, Other Possible Types: unsigned long\n
    void* v68;  // r15, Other Possible Types: unsigned long, unsigned long long\n
\n
    if (!CFortress::GetNumAvailableMissions(&cgc_g_fort))\n
        return cgc_fprintf(cgc_stdout, \"\\n
No missions available. Check back later.\\n
\");\n
    v14 = CFortress::GetMissions(&cgc_g_fort);\n
    v15 = v14;\n
    v6 = 0;\n
    v16 = v14->field_8;\n
    v17 = 0;\n
    if (!v16)\n
    {\n
        v68 = 0;\n
    }\n
    else\n
    {\n
        v18 = 0;\n
        v68 = 0;\n
        do\n
        {\n
            if (v16 <= v18)\n
            {\n
                v23 = 0;\n
                if (!CMission::IsAvail(NULL))\n
                    continue;\n
LABEL_408352:\n
                v24 = operator new(16);\n
                v24[0] = v23;\n
                v24[1] = 0;\n
                v25 = &v6;\n
                if (v68)\n
                {\n
                    v26 = v6;\n
                    do\n
                    {\n
                        v27 = v26;\n
                        v26 = *((v26 + 8));\n
                    } while (v26);\n
                    v25 = &v27->field_8;\n
                }\n
                *(v25) = v24;\n
                v68 += 1;\n
            }\n
            else\n
            {\n
                v22 = v15->field_0;\n
                if (v18)\n
                {\n
                    v19 = v18 - 1;\n
                    if ((v18 & 7))\n
                    {\n
                        v20 = v17 & 7;\n
                        do\n
                        {\n
                            v22 = *((v22 + 8));\n
                        } while (v20 != 1);\n
                        v21 = v17 - 1;\n
                        if (v19 < 7)\n
                            goto LABEL_408325;\n
                    }\n
                    else\n
                    {\n
                        v21 = v18;\n
                        if (v19 < 7)\n
                            goto LABEL_408325;\n
                    }\n
                    do\n
                    {\n
                        v22 = *((*((*((*((*((*((*((*((v22 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v21;\n
                        v21 = v21 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
LABEL_408325:\n
                v23 = *(v22);\n
                if (!CMission::IsAvail(v23))\n
                    continue;\n
                goto LABEL_408352;\n
            }\n
            v18 += 1;\n
            v16 = v15->field_8;\n
            v17 = v17 + 1;\n
        } while (v16 > v18);\n
    }\n
    v7 = v68;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Available missions ...\\n
\");\n
    PrintMissions(&v6);\n
    if (!CFortress::GetNumAvailableExplorers(&cgc_g_fort))\n
    {\n
        v28 = \"\\n
No explorers available.\\n
\";\n
        goto LABEL_4084fb;\n
    }\n
    else\n
    {\n
        cgc_fprintf(cgc_stdout, \"\\n
select> \");\n
        if (cgc_freaduntil(&v12, 64, 10, cgc_stdin) < 0)\n
            cgc_exit();\n
        v29 = cgc_strtoul(&v12, NULL, 10);\n
        if (v29 < v68)\n
        {\n
            v30 = v6;\n
            if (v29)\n
            {\n
                v31 = v29 - 1;\n
                if ((v29 & 7))\n
                {\n
                    do\n
                    {\n
                        v30 = *((v30 + 8));\n
                    } while ((v29 & 7) != 1);\n
                    v29 -= 1;\n
                }\n
                if (v31 >= 7)\n
                {\n
                    do\n
                    {\n
                        v30 = *((*((*((*((*((*((*((*((v30 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v29;\n
                        v29 = v29 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
            }\n
            v32 = *(v30);\n
            if (CMission::GetReqSupply(v32) > CFortress::GetSupply(&cgc_g_fort))\n
            {\n
                v28 = \"You don't have enough supply.\\n
\";\n
                goto LABEL_4084fb;\n
            }\n
            else\n
            {\n
                v8 = v32;\n
                v9 = cgc_stdin;\n
                v10 = cgc_stdout;\n
                *(&v1) = 0;\n
                v4 = 0;\n
                v33 = CFortress::GetExplorers(&cgc_g_fort);\n
                v34 = v33;\n
                v35 = v33->field_8;\n
                v36 = 0;\n
                if (!v35)\n
                {\n
                    v38 = 0;\n
                }\n
                else\n
                {\n
                    v37 = 0;\n
                    v38 = 0;\n
                    do\n
                    {\n
                        if (v35 <= v37)\n
                        {\n
                            v40 = 0;\n
                            if (!*(49))\n
                                continue;\n
LABEL_40862f:\n
                            if (*((v40 + 50)))\n
                            {\n
                                v44 = operator new(16);\n
                                v44[0] = v40;\n
                                v44[1] = 0;\n
                                v45 = &v4;\n
                                if (v38)\n
                                {\n
                                    v46 = v4;\n
                                    do\n
                                    {\n
                                        v47 = v46;\n
                                        v46 = *((v46 + 8));\n
                                    } while (v46);\n
                                    v45 = &v47->field_8;\n
                                }\n
                                *(v45) = v44;\n
                                v38 += 1;\n
                                v35 = v34->field_8;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            v39 = v34->field_0;\n
                            if (v37)\n
                            {\n
                                v41 = v37 - 1;\n
                                if ((v37 & 7))\n
                                {\n
                                    v42 = v36 & 7;\n
                                    do\n
                                    {\n
                                        v39 = *((v39 + 8));\n
                                    } while (v42 != 1);\n
                                    v43 = v36 - 1;\n
                                    if (v41 < 7)\n
                                        goto LABEL_408605;\n
                                }\n
                                else\n
                                {\n
                                    v43 = v37;\n
                                    if (v41 < 7)\n
                                        goto LABEL_408605;\n
                                }\n
                                do\n
                                {\n
                                    v39 = *((*((*((*((*((*((*((*((v39 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                                    tmp_37 = v43;\n
                                    v43 = v43 - 8;\n
                                } while (tmp_37 + -8);\n
                            }\n
LABEL_408605:\n
                            v40 = *(v39);\n
                            if (!*((v40 + 49)))\n
                                continue;\n
                            goto LABEL_40862f;\n
                        }\n
                        v37 += 1;\n
                        v36 = v36 + 1;\n
                    } while (v35 > v37);\n
                }\n
                v5 = v38;\n
                v48 = v10;\n
                cgc_fprintf(v48, \"\\n
... Available explorers ...\\n
\");\n
                PrintExplorers(&v4);\n
                cgc_fprintf(v48, \"\\n
select> \");\n
                if (cgc_freaduntil(&v12, 64, 10, v9) < 0)\n
                    cgc_exit();\n
                v11 = &v12;\n
                v49 = cgc_strsep(&v11, \",\");\n
                if (v49)\n
                {\n
                    v50 = v49;\n
                    v3 = v4;\n
                    v0 = 0;\n
                    do\n
                    {\n
                        if (cgc_strlen(v50))\n
                        {\n
                            v51 = cgc_strtoul(v50, NULL, 10);\n
                            if (!(v51 < v38))\n
                                continue;\n
                            v52 = v3;\n
                            if (v51)\n
                            {\n
                                v53 = v51 - 1;\n
                                if ((v51 & 7))\n
                                {\n
                                    v52 = v3;\n
                                    do\n
                                    {\n
                                        v52 = *((v52 + 8));\n
                                    } while ((v51 & 7) != 1);\n
                                    v51 -= 1;\n
                                    if (v53 < 7)\n
                                        goto LABEL_4087f5;\n
                                }\n
                                else\n
                                {\n
                                    v52 = v3;\n
                                    if (v53 < 7)\n
                                        goto LABEL_4087f5;\n
                                }\n
                                do\n
                                {\n
                                    v52 = *((*((*((*((*((*((*((*((v52 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                                    tmp_37 = v51;\n
                                    v51 = v51 - 8;\n
                                } while (tmp_37 + -8);\n
                            }\n
LABEL_4087f5:\n
                            v54 = *(v52);\n
                            v55 = v1;\n
                            if (v0)\n
                            {\n
                                v56 = v55;\n
                                if (v55)\n
                                {\n
                                    while (*(v56) != v54)\n
                                    {\n
                                        v56 = *((v56 + 8));\n
                                        if (!v56)\n
                                            goto LABEL_408822;\n
                                    }\n
                                }\n
                            }\n
LABEL_408822:\n
                            v57 = operator new(16);\n
                            v57[0] = v54;\n
                            v57[1] = 0;\n
                            v58 = &v1;\n
                            if (v0)\n
                            {\n
                                do\n
                                {\n
                                    v59 = v55;\n
                                    v55 = *((v55 + 8));\n
                                } while (v55);\n
                                v58 = &v59->field_8;\n
                            }\n
                            *(v58) = v57;\n
                            v0 += 1;\n
                            v2 = v0;\n
                        }\n
                        v50 = cgc_strsep(&v11, \",\");\n
                    } while (v50);\n
                    v48 = v10;\n
                    if (v0)\n
                    {\n
                        cgc_fbuffered(v48, 1);\n
                        v60 = v8;\n
                        v61 = CMission::Check(v60, &v1);\n
                        cgc_fprintf(v48, \"\\n
////////////////////////////\\n
\");\n
                        CMission::GetName(v60);\n
                        cgc_fprintf(v48, \"%s\\n
\");\n
                        cgc_fprintf(v48, \"////////////////////////////\\n
\");\n
                        cgc_fprintf(v48, \" - Success: %d%%\\n
\");\n
                        cgc_fprintf(v48, \" - Missing: %s\\n
\");\n
                        cgc_free(CRequirement::ReqTypeToString(v61[1]));\n
                        cgc_fprintf(v48, \" - Needed: %d\\n
\");\n
                        cgc_fprintf(v48, \" - Supplied: %d\\n
\");\n
                        cgc_fprintf(v48, \"////////////////////////////\\n
\");\n
                        cgc_fprintf(v48, \"confirm?> \");\n
                        cgc_fbuffered(v48, 0);\n
                        if (cgc_freaduntil(&v12, 64, 10, v9) < 0)\n
                            cgc_exit();\n
                        if (cgc_strcmp(&v12, \"y\") && !(!cgc_strcmp(&v12, \"Y\")))\n
                            goto LABEL_408a11;\n
                        v63 = v8;\n
                        CMission::Execute(v63, &v1);\n
                        v63->field_28 = v61[0];\n
                        CFortress::SubSupply(&cgc_g_fort, CMission::GetReqSupply(v63));\n
LABEL_408a11:\n
                        operator delete(v61);\n
                        if (!v38)\n
                            goto LABEL_408a7c;\n
                        goto LABEL_408a36;\n
                    }\n
                }\n
                cgc_fprintf(v48, \"No explorer is selected.\\n
\");\n
                if (!v38)\n
                    goto LABEL_408a7c;\n
LABEL_408a36:\n
                v64 = v4;\n
                do\n
                {\n
                    operator delete(v64);\n
                    v64 = *((v64 + 8));\n
                    tmp_2 = v38;\n
                    v38 -= 1;\n
                } while (tmp_2 != 1);\n
                while (true)\n
                {\n
LABEL_408a7c:\n
                    v65 = (&v1)[8];\n
                    if (!v65)\n
                        break;\n
                    v66 = v1;\n
                    v1 = v66->field_8;\n
                    v2 = v65 - 1;\n
                    operator delete(v66);\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v28 = \"Invalid mission.\\n
\";\n
LABEL_4084fb:\n
            v65 = cgc_fprintf(cgc_stdout, v28);\n
        }\n
    }\n
    if (!v68)\n
        return v65;\n
    v67 = v6;\n
    do\n
    {\n
        v65 = operator delete(v67);\n
        v67 = *((v67 + 8));\n
        tmp_2 = v68;\n
        v68 -= 1;\n
    } while (tmp_2 != 1);\n
    return v65;\n
}\n
", "4227721:sub_408289": null, "4227898:sub_40833a": null, "4228473:sub_408579": null, "4228629:sub_408615": null, "4228918:sub_408736": null, "4229716:sub_408a54": null, "4229771:sub_408a8b": null, "4229776:_Z18HandleViewMissionsv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
long long HandleViewMissions()\n
{\n
    void* v0;  // [bp-0x48]\n
    int tmp_37;  // tmp #37\n
    struct_1 *v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    struct_1 *v4;  // rax\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    void* v6;  // r14, Other Possible Types: unsigned long\n
    void* v7;  // rbp\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned long v10;  // rdx, Other Possible Types: unsigned long long\n
    struct_0 *v11;  // rax, Other Possible Types: unsigned long\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v13;  // r15d\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
\n
    v4 = CFortress::GetMissions(&cgc_g_fort);\n
    v0 = cgc_stdout;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Current missions ...\\n
\");\n
    v1 = v4;\n
    v5 = v4->field_8;\n
    if (!v5)\n
        return cgc_fprintf(v0, \"No missions :(\\n
\");\n
    v6 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v7 = v0;\n
    do\n
    {\n
        if (v5 <= v14)\n
        {\n
            v12 = 0;\n
            if (!(!CMission::IsAvail(NULL)))\n
                continue;\n
LABEL_408bb2:\n
            v2 = CMission::GetName(v12);\n
            CMission::GetDuration(v12);\n
            cgc_fprintf(v7, \"%d. %s [%d%%] -- %d days left\\n
\");\n
            cgc_fprintf(v7, \"   ==> +%d supply, +%d experience\\n
\");\n
            v13 += 1;\n
        }\n
        else\n
        {\n
            v11 = v1->field_0;\n
            if (v14)\n
            {\n
                v8 = v14 - 1;\n
                if ((v14 & 7))\n
                {\n
                    v9 = v6 & 7;\n
                    do\n
                    {\n
                        v11 = *((v11 + 8));\n
                    } while (v9 != 1);\n
                    v10 = v6 - 1;\n
                    if (v8 < 7)\n
                        goto LABEL_408b85;\n
                }\n
                else\n
                {\n
                    v10 = v14;\n
                    if (v8 < 7)\n
                        goto LABEL_408b85;\n
                }\n
                do\n
                {\n
                    v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v10;\n
                    v10 = v10 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
LABEL_408b85:\n
            v12 = *(v11);\n
            if (!(!CMission::IsAvail(v12)))\n
                continue;\n
            goto LABEL_408bb2;\n
        }\n
        v14 += 1;\n
        v5 = v1->field_8;\n
        v6 = v6 + 1;\n
    } while (v5 > v14);\n
    if (!v13)\n
        return cgc_fprintf(v0, \"No missions :(\\n
\");\n
    return v1->field_8;\n
}\n
", "4229866:sub_408aea": null, "4230042:sub_408b9a": null, "4230223:sub_408c4f": null, "4230224:_Z18HandleHireExplorerv": "extern char cgc_g_fort;\n
extern char cgc_stdin;\n
extern char cgc_stdout;\n
\n
long long HandleHireExplorer()\n
{\n
    unsigned long v0;  // [bp-0x68]\n
    int tmp_37;  // tmp #37\n
    int tmp_2;  // tmp #2\n
    unsigned long v1;  // [bp-0x60]\n
    char v2;  // [bp-0x58]\n
    unsigned long v4;  // r15\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rbx\n
    unsigned long v8;  // r13\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // esi\n
    unsigned long v11;  // rsi\n
    unsigned long v12;  // rcx\n
    unsigned long v13;  // rax\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdx\n
    unsigned long v16;  // rcx\n
    unsigned long v17;  // rbp\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rcx\n
    unsigned int v20;  // edx\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // r12\n
    unsigned long v23;  // rax\n
\n
    v4 = CFortress::GetExplorers(&cgc_g_fort);\n
    cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
    if (!(*((v4 + 8)) && *((v4 + 8)) != CFortress::GetNumHiredExplorers(&cgc_g_fort)))\n
        return cgc_fprintf(cgc_stdout, \"No explorers to hire :(\\n
\");\n
    if (CFortress::GetNumHiredExplorers(&cgc_g_fort) != 15)\n
    {\n
        v0 = 0;\n
        v6 = *((v4 + 8));\n
        v7 = 0;\n
        if (!v6)\n
        {\n
            v22 = 0;\n
        }\n
        else\n
        {\n
            v17 = 0;\n
            v22 = 0;\n
            do\n
            {\n
                if (v6 <= v17)\n
                {\n
                    v8 = 0;\n
                    if (!(!*(50)))\n
                        continue;\n
LABEL_408dae:\n
                    v13 = operator new(16);\n
                    *(v13) = v8;\n
                    *((v13 + 8)) = 0;\n
                    v14 = &v0;\n
                    if (v22)\n
                    {\n
                        v15 = v0;\n
                        do\n
                        {\n
                            v16 = v15;\n
                            v15 = *((v15 + 8));\n
                        } while (v15);\n
                        v14 = v16 + 8;\n
                    }\n
                    *(v14) = v13;\n
                    v22 += 1;\n
                    v6 = *((v4 + 8));\n
                }\n
                else\n
                {\n
                    v12 = *(v4);\n
                    if (v17)\n
                    {\n
                        v9 = v17 - 1;\n
                        if ((v17 & 7))\n
                        {\n
                            v10 = v7 & 7;\n
                            do\n
                            {\n
                                v12 = *((v12 + 8));\n
                            } while (v10 != 1);\n
                            v11 = v7 - 1;\n
                            if (v9 < 7)\n
                                goto LABEL_408d85;\n
                        }\n
                        else\n
                        {\n
                            v11 = v17;\n
                            if (v9 < 7)\n
                                goto LABEL_408d85;\n
                        }\n
                        do\n
                        {\n
                            v12 = *((*((*((*((*((*((*((*((v12 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                            tmp_37 = v11;\n
                            v11 = v11 - 8;\n
                        } while (tmp_37 + -8);\n
                    }\n
LABEL_408d85:\n
                    v8 = *(v12);\n
                    if (!(!*((v8 + 50))))\n
                        continue;\n
                    goto LABEL_408dae;\n
                }\n
                v17 += 1;\n
                v7 = v7 + 1;\n
            } while (v6 > v17);\n
        }\n
        v1 = v22;\n
        PrintExplorers(&v0);\n
        cgc_fprintf(cgc_stdout, \"\\n
select> \");\n
        if (cgc_freaduntil(&v2, 32, 10, cgc_stdin) < 0)\n
            cgc_exit();\n
        v18 = cgc_strtoul(&v2, NULL, 10);\n
        if (v18 >= v22)\n
        {\n
            v23 = cgc_fprintf(cgc_stdout, \"Invalid explorer.\\n
\");\n
            if (!v22)\n
                return v23;\n
        }\n
        else\n
        {\n
            v19 = v0;\n
            if (v18)\n
            {\n
                v20 = v18 - 1;\n
                if ((v18 & 7))\n
                {\n
                    do\n
                    {\n
                        v19 = *((v19 + 8));\n
                    } while ((v18 & 7) != 1);\n
                    v18 -= 1;\n
                }\n
                if (v20 >= 7)\n
                {\n
                    do\n
                    {\n
                        v19 = *((*((*((*((*((*((*((*((v19 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v18;\n
                        v18 = v18 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
            }\n
            v23 = *(v19);\n
            *((v23 + 50)) = 1;\n
            if (!v22)\n
                return *(v19);\n
        }\n
        v21 = v0;\n
        do\n
        {\n
            v23 = operator delete(v21);\n
            v21 = *((v21 + 8));\n
            tmp_2 = v22;\n
            v22 -= 1;\n
        } while (tmp_2 != 1);\n
        return v23;\n
    }\n
    else\n
    {\n
        return cgc_fprintf(cgc_stdout, \"Can't hire more :(\\n
\");\n
    }\n
}\n
", "4230394:sub_408cfa": null, "4230549:sub_408d95": null, "4230929:sub_408f11": null, "4230944:_Z19HandleViewExplorersv": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[50];\n
    char field_32;\n
} struct_1;\n
\n
extern unsigned int cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
long long HandleViewExplorers()\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    int tmp_37;  // tmp #37\n
    int tmp_2;  // tmp #2\n
    unsigned long v1;  // [bp-0x38]\n
    struct_3 *v3;  // rax\n
    struct_3 *v4;  // r14\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    void* v6;  // r15, Other Possible Types: unsigned long\n
    void* v7;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // esi\n
    unsigned long v10;  // rsi, Other Possible Types: unsigned long long\n
    struct_2 *v11;  // rcx, Other Possible Types: unsigned long\n
    struct_1 *v12;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v13[2];  // rax\n
    struct struct_0 **v14;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v15;  // rdx, Other Possible Types: unsigned long\n
    struct_0 *v16;  // rcx\n
    void* v17;  // r13, Other Possible Types: unsigned long, unsigned long long\n
    struct_0 *v18;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v19;  // rax\n
\n
    v3 = CFortress::GetExplorers(&cgc_g_fort);\n
    v4 = v3;\n
    v0 = 0;\n
    v5 = v3->field_8;\n
    v6 = 0;\n
    if (!v5)\n
    {\n
        v17 = 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v17 = 0;\n
        do\n
        {\n
            if (v5 <= v7)\n
            {\n
                v12 = 0;\n
                if (!*(50))\n
                    continue;\n
LABEL_40901c:\n
                v13 = operator new(16);\n
                v13[0] = v12;\n
                v13[1] = 0;\n
                v14 = &v0;\n
                if (v17)\n
                {\n
                    v15 = v0;\n
                    do\n
                    {\n
                        v16 = v15;\n
                        v15 = *((v15 + 8));\n
                    } while (v15);\n
                    v14 = &v16->field_8;\n
                }\n
                *(v14) = v13;\n
                v17 += 1;\n
                v5 = v4->field_8;\n
            }\n
            else\n
            {\n
                v11 = v4->field_0;\n
                if (v7)\n
                {\n
                    v8 = v7 - 1;\n
                    if ((v7 & 7))\n
                    {\n
                        v9 = v6 & 7;\n
                        do\n
                        {\n
                            v11 = *((v11 + 8));\n
                        } while (v9 != 1);\n
                        v10 = v6 - 1;\n
                        if (v8 < 7)\n
                            goto LABEL_408ff5;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7;\n
                        if (v8 < 7)\n
                            goto LABEL_408ff5;\n
                    }\n
                    do\n
                    {\n
                        v11 = *((*((*((*((*((*((*((*((v11 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v10;\n
                        v10 = v10 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
LABEL_408ff5:\n
                v12 = *(v11);\n
                if (!*((v12 + 50)))\n
                    continue;\n
                goto LABEL_40901c;\n
            }\n
            v7 += 1;\n
            v6 = v6 + 1;\n
        } while (v5 > v7);\n
    }\n
    v1 = v17;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Current explorers (%d/%d) ...\\n
\");\n
    if (!v17)\n
        return cgc_fprintf(cgc_stdout, \"No explorers :(\\n
\");\n
    PrintExplorers(&v0);\n
    v18 = v0;\n
    do\n
    {\n
        v19 = operator delete(v18);\n
        v18 = *((v18 + 8));\n
        tmp_2 = v17;\n
        v17 -= 1;\n
    } while (tmp_2 != 1);\n
    return v19;\n
}\n
", "4231010:sub_408f62": null, "4231171:sub_409003": null, "4231424:_Z20HandleRemoveExplorerv": "extern char cgc_g_fort;\n
extern char cgc_stdin;\n
extern char cgc_stdout;\n
\n
long long HandleRemoveExplorer()\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    int tmp_37;  // tmp #37\n
    int tmp_2;  // tmp #2\n
    unsigned long v1;  // [bp-0x40]\n
    char v2;  // [bp-0x38]\n
    unsigned long v4;  // rax\n
    unsigned long v5;  // r14\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // r13\n
    unsigned long v8;  // rbx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // esi\n
    unsigned long v11;  // rsi\n
    unsigned long v12;  // rcx\n
    unsigned long v13;  // rbp\n
    unsigned long v14;  // rax\n
    unsigned long v15;  // rcx\n
    unsigned long v16;  // rdx\n
    unsigned long v17;  // rcx\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rcx\n
    unsigned int v20;  // edx\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rax\n
    unsigned long v23;  // r15\n
\n
    v4 = CFortress::GetExplorers(&cgc_g_fort);\n
    v5 = v4;\n
    v0 = 0;\n
    v6 = *((v4 + 8));\n
    v7 = 0;\n
    if (!v6)\n
    {\n
        v23 = 0;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        v23 = 0;\n
        do\n
        {\n
            if (v6 <= v8)\n
            {\n
                v13 = 0;\n
                if (!*(50))\n
                    continue;\n
LABEL_4091ec:\n
                if (*((v13 + 49)))\n
                {\n
                    v14 = operator new(16);\n
                    *(v14) = v13;\n
                    *((v14 + 8)) = 0;\n
                    v15 = &v0;\n
                    if (v23)\n
                    {\n
                        v16 = v0;\n
                        do\n
                        {\n
                            v17 = v16;\n
                            v16 = *((v16 + 8));\n
                        } while (v16);\n
                        v15 = v17 + 8;\n
                    }\n
                    *(v15) = v14;\n
                    v23 += 1;\n
                    v6 = *((v5 + 8));\n
                }\n
            }\n
            else\n
            {\n
                v12 = *(v5);\n
                if (v8)\n
                {\n
                    v9 = v8 - 1;\n
                    if ((v8 & 7))\n
                    {\n
                        v10 = v7 & 7;\n
                        do\n
                        {\n
                            v12 = *((v12 + 8));\n
                        } while (v10 != 1);\n
                        v11 = v7 - 1;\n
                        if (v9 < 7)\n
                            goto LABEL_4091c5;\n
                    }\n
                    else\n
                    {\n
                        v11 = v8;\n
                        if (v9 < 7)\n
                            goto LABEL_4091c5;\n
                    }\n
                    do\n
                    {\n
                        v12 = *((*((*((*((*((*((*((*((v12 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v11;\n
                        v11 = v11 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
LABEL_4091c5:\n
                v13 = *(v12);\n
                if (!*((v13 + 50)))\n
                    continue;\n
                goto LABEL_4091ec;\n
            }\n
            v8 += 1;\n
            v7 = v7 + 1;\n
        } while (v6 > v8);\n
    }\n
    v1 = v23;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Removable explorers ...\\n
\");\n
    if (!v23)\n
        return cgc_fprintf(cgc_stdout, \"No explorers :(\\n
\");\n
    PrintExplorers(&v0);\n
    cgc_fprintf(cgc_stdout, \"\\n
select> \");\n
    if (cgc_freaduntil(&v2, 8, 10, cgc_stdin) < 0)\n
        cgc_exit();\n
    v18 = cgc_strtoul(&v2, NULL, 10);\n
    if (v18 >= v23)\n
    {\n
        cgc_fprintf(cgc_stdout, \"Invalid explorer.\\n
\");\n
    }\n
    else\n
    {\n
        v19 = v0;\n
        if (v18)\n
        {\n
            v20 = v18 - 1;\n
            if ((v18 & 7))\n
            {\n
                do\n
                {\n
                    v19 = *((v19 + 8));\n
                } while ((v18 & 7) != 1);\n
                v18 -= 1;\n
            }\n
            if (v20 >= 7)\n
            {\n
                do\n
                {\n
                    v19 = *((*((*((*((*((*((*((*((v19 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v18;\n
                    v18 = v18 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        *((*(v19) + 50)) = 0;\n
    }\n
    v21 = v0;\n
    do\n
    {\n
        v22 = operator delete(v21);\n
        v21 = *((v21 + 8));\n
        tmp_2 = v23;\n
        v23 -= 1;\n
    } while (tmp_2 != 1);\n
    return v22;\n
}\n
", "4231487:sub_40913f": null, "4231635:sub_4091d3": null, "4232097:sub_4093a1": null, "4232112:_Z17HandleLearnSkillsv": "extern char cgc_g_fort;\n
extern char cgc_stdin;\n
extern char cgc_stdout;\n
\n
long long HandleLearnSkills()\n
{\n
    int tmp_37;  // tmp #37\n
    char v0;  // [bp-0x68]\n
    int tmp_2;  // tmp #2\n
    unsigned long v1;  // [bp-0x60]\n
    unsigned long v2;  // [bp-0x58]\n
    unsigned long v3;  // [bp-0x50]\n
    unsigned long v4;  // [bp-0x48]\n
    unsigned long v5;  // [bp-0x40]\n
    unsigned long v6;  // [bp-0x38]\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // r12\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // rbx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // esi\n
    unsigned long v15;  // rsi\n
    unsigned long v16;  // rcx\n
    unsigned long v17;  // rbp\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rcx\n
    unsigned long v20;  // rdx\n
    unsigned long v21;  // rcx\n
    unsigned long v22;  // rax\n
    unsigned long v23;  // rcx\n
    unsigned int v24;  // edx\n
    unsigned long v25;  // rax\n
    unsigned int v26;  // ecx\n
    unsigned int v27;  // edx\n
    unsigned long v28;  // rdx\n
    unsigned long v29;  // rax\n
    unsigned long v30;  // r13\n
    unsigned long v31;  // rax\n
    unsigned long v32;  // r13\n
    unsigned long v33;  // rbp\n
    unsigned long v34;  // rbx\n
    unsigned long v35;  // rax\n
    unsigned long v36;  // r12\n
    unsigned long v37;  // r12\n
    unsigned long v38;  // rax\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rsi\n
    unsigned int v41;  // edx\n
    unsigned long v42;  // r15\n
    unsigned long v43;  // rax\n
    unsigned long v44;  // rdi\n
    unsigned long v45;  // rax\n
    unsigned long v46;  // r14\n
\n
    v8 = CFortress::GetExplorers(&cgc_g_fort);\n
    v9 = v8;\n
    v1 = 0;\n
    v10 = *((v8 + 8));\n
    v11 = 0;\n
    if (!v10)\n
    {\n
        v46 = 0;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v46 = 0;\n
        do\n
        {\n
            if (v10 <= v12)\n
            {\n
                v17 = 0;\n
                if (!*(50))\n
                    continue;\n
LABEL_4094ac:\n
                if (*((v17 + 49)))\n
                {\n
                    v18 = operator new(16);\n
                    *(v18) = v17;\n
                    *((v18 + 8)) = 0;\n
                    v19 = &v1;\n
                    if (v46)\n
                    {\n
                        v20 = v1;\n
                        do\n
                        {\n
                            v21 = v20;\n
                            v20 = *((v20 + 8));\n
                        } while (v20);\n
                        v19 = v21 + 8;\n
                    }\n
                    *(v19) = v18;\n
                    v46 += 1;\n
                    v10 = *((v9 + 8));\n
                }\n
            }\n
            else\n
            {\n
                v16 = *(v9);\n
                if (v12)\n
                {\n
                    v13 = v12 - 1;\n
                    if ((v12 & 7))\n
                    {\n
                        v14 = v11 & 7;\n
                        do\n
                        {\n
                            v16 = *((v16 + 8));\n
                        } while (v14 != 1);\n
                        v15 = v11 - 1;\n
                        if (v13 < 7)\n
                            goto LABEL_409485;\n
                    }\n
                    else\n
                    {\n
                        v15 = v12;\n
                        if (v13 < 7)\n
                            goto LABEL_409485;\n
                    }\n
                    do\n
                    {\n
                        v16 = *((*((*((*((*((*((*((*((v16 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                        tmp_37 = v15;\n
                        v15 = v15 - 8;\n
                    } while (tmp_37 + -8);\n
                }\n
LABEL_409485:\n
                v17 = *(v16);\n
                if (!*((v17 + 50)))\n
                    continue;\n
                goto LABEL_4094ac;\n
            }\n
            v12 += 1;\n
            v11 = v11 + 1;\n
        } while (v10 > v12);\n
    }\n
    v2 = v46;\n
    v32 = cgc_stdout;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
    if (!v46)\n
        return cgc_fprintf(cgc_stdout, \"No explorers :(\\n
\");\n
    PrintExplorers(&v1);\n
    cgc_fprintf(cgc_stdout, \"\\n
select> \");\n
    if (cgc_freaduntil(&v0, 8, 10, cgc_stdin) < 0)\n
        cgc_exit();\n
    v22 = cgc_strtoul(&v0, NULL, 10);\n
    if (v22 >= v46)\n
    {\n
        v40 = \"Invalid explorer.\\n
\";\n
        goto LABEL_40982c;\n
    }\n
    v23 = v1;\n
    v4 = cgc_stdin;\n
    if (v22)\n
    {\n
        v24 = v22 - 1;\n
        if ((v22 & 7))\n
        {\n
            do\n
            {\n
                v23 = *((v23 + 8));\n
            } while ((v22 & 7) != 1);\n
            v22 -= 1;\n
        }\n
        if (v24 >= 7)\n
        {\n
            do\n
            {\n
                v23 = *((*((*((*((*((*((*((*((v23 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                tmp_37 = v22;\n
                v22 = v22 - 8;\n
            } while (tmp_37 + -8);\n
        }\n
    }\n
    v3 = *(v23);\n
    v25 = CFortress::GetSkills(&cgc_g_fort);\n
    v34 = v25;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Skills ...\\n
\");\n
    v35 = *((v25 + 8));\n
    if (v35)\n
    {\n
        v36 = 0;\n
        v33 = 0;\n
        v6 = cgc_stdout;\n
        v5 = v34;\n
        do\n
        {\n
            if (v35 <= v33)\n
            {\n
                v30 = 0;\n
                continue;\n
            }\n
            v29 = *(v34);\n
            if (v33)\n
            {\n
                v26 = v33 - 1;\n
                if ((v33 & 7))\n
                {\n
                    v27 = v36 & 7;\n
                    do\n
                    {\n
                        v29 = *((v29 + 8));\n
                    } while (v27 != 1);\n
                    v28 = v36 - 1;\n
                    if (v26 < 7)\n
                        goto LABEL_409640;\n
                }\n
                else\n
                {\n
                    v28 = v33;\n
                    if (v26 < 7)\n
                        goto LABEL_409640;\n
                }\n
                do\n
                {\n
                    v29 = *((*((*((*((*((*((*((*((v29 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v28;\n
                    v28 = v28 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
LABEL_409640:\n
            v30 = *(v29);\n
            v31 = CRequirement::ReqTypeToString(*((v30 + 8)));\n
            v32 = v6;\n
            cgc_fprintf(v32, \"%d. [%s] (counters <%s>) - %d supply\\n
\");\n
            cgc_free(v31);\n
            v33 += 1;\n
            v34 = v5;\n
            v35 = *((v34 + 8));\n
            v36 = v36 + 1;\n
        } while (v35 > v33);\n
    }\n
    cgc_fprintf(v32, \"\\n
select> \");\n
    v37 = v4;\n
    if (cgc_freaduntil(&v0, 8, 10, v37) < 0)\n
        cgc_exit();\n
    v38 = cgc_strtoul(&v0, NULL, 10);\n
    if (v38 >= *((v34 + 8)))\n
    {\n
        v40 = \"Invalid skill.\\n
\";\n
        goto LABEL_40982c;\n
    }\n
    else\n
    {\n
        v39 = *(v34);\n
        if (v38)\n
        {\n
            v41 = v38 - 1;\n
            if ((v38 & 7))\n
            {\n
                do\n
                {\n
                    v39 = *((v39 + 8));\n
                } while ((v38 & 7) != 1);\n
                v38 -= 1;\n
            }\n
            if (v41 >= 7)\n
            {\n
                do\n
                {\n
                    v39 = *((*((*((*((*((*((*((*((v39 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v38;\n
                    v38 = v38 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        v42 = *(v39);\n
        if (*((v42 + 12)) > CFortress::GetSupply(&cgc_g_fort))\n
        {\n
            v40 = \"Insufficient supply.\\n
\";\n
            goto LABEL_40982c;\n
        }\n
        cgc_fprintf(v32, \"\\n
slot? (1,2)> \");\n
        if (cgc_freaduntil(&v0, 8, 10, v37) < 0)\n
            cgc_exit();\n
        v43 = cgc_strtoul(&v0, NULL, 10);\n
        if (v43 - 3 > -3)\n
        {\n
            CExplorer::ReplaceSkill(v3, v42, v43 - 1);\n
            CFortress::SubSupply(&cgc_g_fort, *((v42 + 12)));\n
        }\n
        else\n
        {\n
            v40 = \"Invalid slot.\\n
\";\n
LABEL_40982c:\n
            cgc_fprintf(v32, v40);\n
        }\n
    }\n
    v44 = v1;\n
    do\n
    {\n
        v45 = operator delete(v44);\n
        v44 = *((v44 + 8));\n
        tmp_2 = v46;\n
        v46 -= 1;\n
    } while (tmp_2 != 1);\n
    return v45;\n
}\n
", "4232178:sub_4093f2": null, "4232339:sub_409493": null, "4232763:sub_40963b": null, "4232922:sub_4096da": null, "4233437:sub_4098dd": null, "4233440:_Z16HandleChangeNamev": "typedef struct struct_6 {\n
    struct struct_4 *field_0;\n
    unsigned long long field_8;\n
} struct_6;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    struct struct_5 *field_0;\n
    struct struct_4 *field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[49];\n
    char field_31;\n
    char field_32;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_g_fort;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long HandleChangeName()\n
{\n
    struct_2 *v0;  // [bp-0x248]\n
    int tmp_37;  // tmp #37\n
    int tmp_2;  // tmp #2\n
    char v1[2];  // [bp-0x240]\n
    char v2;  // [bp-0x238]\n
    char v3;  // [bp-0x228]\n
    struct_6 *v5;  // rax\n
    struct_6 *v6;  // r14\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
    void* v8;  // r13, Other Possible Types: unsigned long\n
    void* v9;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rsi, Other Possible Types: unsigned long long\n
    struct_4 *v14;  // rcx, Other Possible Types: unsigned long\n
    char v15[51];  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v16[2];  // rax\n
    struct struct_2 **v17;  // rcx, Other Possible Types: unsigned long\n
    struct_2 *v18;  // rdx, Other Possible Types: unsigned long\n
    struct_2 *v19;  // rcx\n
    struct_2 *v20;  // r13\n
    unsigned int v21;  // edx\n
    struct_2 *v22;  // rax, Other Possible Types: unsigned long\n
    unsigned long v23;  // rcx, Other Possible Types: unsigned long long\n
    unsigned int v24;  // ecx\n
    void* v25;  // rbx, Other Possible Types: unsigned long\n
    void* v26;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v27;  // rax, Other Possible Types: unsigned long long\n
    struct_2 *v28;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v29;  // edx\n
    struct struct_1 **v30;  // rbx\n
    struct_2 *v31;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v32;  // rax\n
    void* v33;  // r12, Other Possible Types: unsigned long\n
\n
    v5 = CFortress::GetExplorers(&cgc_g_fort);\n
    v6 = v5;\n
    v0 = 0;\n
    v7 = v5->field_8;\n
    if (!v7)\n
    {\n
        cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
        return cgc_fprintf(cgc_stdout, \"No explorers :(\\n
\");\n
    }\n
    v8 = 0;\n
    v9 = 0;\n
    v33 = 0;\n
    do\n
    {\n
        if (v7 <= v9)\n
        {\n
            v15 = 0;\n
            if (!*(50))\n
                continue;\n
LABEL_4099dc:\n
            if (*((v15 + 49)))\n
            {\n
                v16 = operator new(16);\n
                v16[0] = v15;\n
                v16[1] = 0;\n
                v17 = &v0;\n
                if (v33)\n
                {\n
                    v18 = v0;\n
                    do\n
                    {\n
                        v19 = v18;\n
                        v18 = *((v18 + 8));\n
                    } while (v18);\n
                    v17 = &v19->field_8;\n
                }\n
                *(v17) = v16;\n
                v33 += 1;\n
                v7 = v6->field_8;\n
            }\n
        }\n
        else\n
        {\n
            v14 = v6->field_0;\n
            if (v9)\n
            {\n
                v11 = v9 - 1;\n
                if ((v9 & 7))\n
                {\n
                    v12 = v8 & 7;\n
                    do\n
                    {\n
                        v14 = *((v14 + 8));\n
                    } while (v12 != 1);\n
                    v13 = v8 - 1;\n
                    if (v11 < 7)\n
                        goto LABEL_4099b5;\n
                }\n
                else\n
                {\n
                    v13 = v9;\n
                    if (v11 < 7)\n
                        goto LABEL_4099b5;\n
                }\n
                do\n
                {\n
                    v14 = *((*((*((*((*((*((*((*((v14 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v13;\n
                    v13 = v13 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
LABEL_4099b5:\n
            v15 = *(v14);\n
            if (!*((v15 + 50)))\n
                continue;\n
            goto LABEL_4099dc;\n
        }\n
        v9 += 1;\n
        v8 = v8 + 1;\n
    } while (v7 > v9);\n
    cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
    if (!v33)\n
        return cgc_fprintf(cgc_stdout, \"No explorers :(\\n
\");\n
    v20 = v0;\n
    v26 = 0;\n
    v25 = 0;\n
    do\n
    {\n
        if (v25)\n
        {\n
            v21 = v25 - 1;\n
            v22 = v20;\n
            v23 = v25;\n
            if ((v25 & 7))\n
            {\n
                v24 = v26 & 7;\n
                v22 = v20;\n
                do\n
                {\n
                    v22 = *((v22 + 8));\n
                } while (v24 != 1);\n
                v23 = v26 - 1;\n
            }\n
            if (v21 >= 7)\n
            {\n
                do\n
                {\n
                    v22 = *((*((*((*((*((*((*((*((v22 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v23;\n
                    v23 = v23 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        cgc_fprintf(cgc_stdout, \"%d. %s\\n
\");\n
        v25 += 1;\n
        v26 = v26 + 1;\n
    } while (v25 != v33);\n
    cgc_fprintf(cgc_stdout, \"\\n
select> \");\n
    if (cgc_freaduntil(v1, 8, 10, cgc_stdin) < 0)\n
        cgc_exit();\n
    v27 = cgc_strtoul(v1, NULL, 10);\n
    if (v27 >= v33)\n
    {\n
        cgc_fprintf(cgc_stdout, \"Invalid explorer.\\n
\");\n
    }\n
    else\n
    {\n
        v28 = v0;\n
        if (v27)\n
        {\n
            v29 = v27 - 1;\n
            if ((v27 & 7))\n
            {\n
                do\n
                {\n
                    v28 = *((v28 + 8));\n
                } while ((v27 & 7) != 1);\n
                v27 -= 1;\n
            }\n
            if (v29 >= 7)\n
            {\n
                do\n
                {\n
                    v28 = *((*((*((*((*((*((*((*((v28 + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8)) + 8));\n
                    tmp_37 = v27;\n
                    v27 = v27 - 8;\n
                } while (tmp_37 + -8);\n
            }\n
        }\n
        v30 = *(v28);\n
        cgc_fprintf(cgc_stdout, \"\\n
New name? \");\n
        if (cgc_freaduntil(&v2, 0x200, 10, cgc_stdin) < 0)\n
            cgc_exit();\n
        v3 = 0;\n
        *(v30)->field_0(v30, &v2);\n
    }\n
    v31 = v0;\n
    do\n
    {\n
        v32 = operator delete(v31);\n
        v31 = *((v31 + 8));\n
        tmp_2 = v33;\n
        v33 -= 1;\n
    } while (tmp_2 != 1);\n
    return v32;\n
}\n
", "4233506:sub_409922": null, "4233667:sub_4099c3": null, "4233831:sub_409a67": null, "4234388:sub_409c94": null, "4234400:main": "extern unsigned long long banner;\n
extern char cgc_g_fort;\n
extern unsigned long long cgc_g_rand;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern char g_hidden;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x66]\n
    char v1[2];  // [bp-0x65]\n
    unsigned long v2;  // [bp-0x60]\n
    char v3;  // [bp-0x58]\n
\n
    cgc_g_rand = 0x4347c000;\n
    if (cgc_freaduntil(&v3, 32, 10, cgc_stdin) < 0)\n
        cgc_exit();\n
    CFortress::SetOwner(&cgc_g_fort, &v3);\n
    cgc_fprintf(cgc_stdout, banner);\n
    CreateMoreMissions();\n
    InitializeSkills();\n
    InitializeExplorers();\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    while (true)\n
                    {\n
                        PrintMainMenu();\n
                        *(&g_hidden) = (CFortress::GetSupply(&cgc_g_fort) == 1337 ? 0 : CFortress::GetDay(&cgc_g_fort) == 1) ^ 1;\n
                        if (cgc_freaduntil(&v0, 6, 10, cgc_stdin) < 0)\n
                            return 0;\n
                        if (cgc_strcmp(&v0, \"0\"))\n
                            break;\n
                        CFortress::NextDay(&cgc_g_fort, 1);\n
                        if (CFortress::GetNumAvailableMissions(&cgc_g_fort) <= 2)\n
                            CreateMoreMissions();\n
                    }\n
                    if (cgc_strtoul(&v0, NULL, 10) != 1)\n
                        break;\n
                    while (true)\n
                    {\n
                        cgc_fbuffered(cgc_stdout, 1);\n
                        cgc_fprintf(cgc_stdout, \"\\n
]]] Missions [[[\\n
\");\n
                        CFortress::GetNumAvailableMissions(&cgc_g_fort);\n
                        cgc_fprintf(cgc_stdout, \"1. Send mission (%d available)\\n
\");\n
                        cgc_fprintf(cgc_stdout, \"2. View current missions\\n
\");\n
                        cgc_fprintf(cgc_stdout, \"3. Back\\n
\");\n
                        cgc_fbuffered(cgc_stdout, 0);\n
                        if (cgc_freaduntil(&v0, 6, 10, cgc_stdin) < 0)\n
                            break;\n
                        if (!cgc_strcmp(&v0, \"1\"))\n
                        {\n
                            HandleSendMission();\n
                        }\n
                        else if (!cgc_strcmp(&v0, \"2\"))\n
                        {\n
                            HandleViewMissions();\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_strcmp(&v0, \"3\"))\n
                                break;\n
                            cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
                        }\n
                    }\n
                }\n
                if (cgc_memcmp(&v0, \"2\", 2))\n
                    break;\n
                while (true)\n
                {\n
                    cgc_fbuffered(cgc_stdout, 1);\n
                    cgc_fprintf(cgc_stdout, \"\\n
]]] Explorers [[[\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"1. Hire explorer\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"2. View current explorers\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"3. Remove explorer\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"4. Learn skills\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"5. Back\\n
\");\n
                    if (!g_hidden)\n
                        cgc_fprintf(cgc_stdout, \"6. Change explorer name\\n
\");\n
                    cgc_fbuffered(cgc_stdout, 0);\n
                    if (cgc_freaduntil(&v0, 6, 10, cgc_stdin) < 0)\n
                        break;\n
                    if (!cgc_strcmp(&v0, \"1\"))\n
                        HandleHireExplorer();\n
                    if (!cgc_strcmp(&v0, \"2\"))\n
                    {\n
                        HandleViewExplorers();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v0, \"3\"))\n
                    {\n
                        HandleRemoveExplorer();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v0, \"4\"))\n
                    {\n
                        HandleLearnSkills();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v0, \"5\"))\n
                        break;\n
                    if (g_hidden)\n
                    {\n
LABEL_40a0e9:\n
                        cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
                    }\n
                    else\n
                    {\n
                        if (!(!cgc_strcmp(&v0, \"6\")))\n
                            goto LABEL_40a0e9;\n
                        HandleChangeName();\n
                    }\n
                }\n
            }\n
            if (cgc_strcmp(&v0, \"3\"))\n
                break;\n
            cgc_fprintf(cgc_stdout, \"Boo.\\n
\");\n
            cgc_exit();\n
        }\n
        if (v0 != 45)\n
        {\n
LABEL_409d40:\n
            cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
        }\n
        else\n
        {\n
            if (!(!cgc_memcmp(v1, \"1337\", 5)))\n
                goto LABEL_409d40;\n
            v2 = CFortress::GetSupply(&cgc_g_fort);\n
            if (cgc_strtoul(v1, NULL, 10) > v2)\n
                CFortress::AddSupply(&cgc_g_fort, 1287);\n
            if (cgc_freaduntil(&v0, 6, 10, cgc_stdin) < 0)\n
                return 0;\n
            CFortress::NextDay(&cgc_g_fort, cgc_strtoul(&v0, NULL, 10));\n
        }\n
    }\n
}\n
", "4234628:sub_409d84": null, "4234932:sub_409eb4": null, "4235159:sub_409f97": null, "4235178:sub_409faa": null, "4235519:sub_40a0ff": null, "4235560:sub_40a128": null, "4235654:sub_40a186": null, "4235664:_ZN6CSkillC2EPKcN12CRequirement4TypeEi": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long CSkill::__base_ctor__(struct_0 *a0, unsigned int a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_8 = a2;\n
    a0->field_c = a3;\n
    v1 = cgc_strndup(a1, 16);\n
    a0->field_0 = v1;\n
    return v1;\n
}\n
", "4235695:sub_40a1af": null, "4235696:_ZN6CSkillD1Ev": "long long CSkill::__dtor__()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4235697:sub_40a1b1": null, "4235712:_ZN6CSkill9IsCounterEN12CRequirement4TypeE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
char CSkill::IsCounter(struct_0 *a0, unsigned long a1)\n
{\n
    return !(~(a1) & a0->field_8);\n
}\n
", "4235724:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_receive": null, "5242896:cgc_allocate": null, "5242904:__cxa_atexit": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:cgc_deallocate": null, "5242944:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}