{"4198400:_init": "extern struct_0 *g_40d6b0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d6b0;\n
    if (g_40d6b0)\n
        v1 = g_40d6b0();\n
    return v1;\n
}\n
", "4198432:sub_401020": "extern unsigned long long g_40d6d0;\n
\n
long long sub_401020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d6d0;\n
    goto *(4249304);\n
}\n
", "4198444:sub_40102c": null, "4198448:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198464:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198480:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198496:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4249280);\n
}\n
", "4198512:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4198549:sub_401095": null, "4198550:sub_401096": null, "4198560:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_40d6a8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4198601:sub_4010c9": null, "4198608:register_tm_clones": "extern unsigned long long g_40d6b8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4198665:sub_401109": null, "4198672:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned long long g_40d6c0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__TMC_END__)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d6c0)\n
    {\n
        __TMC_END__ = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4198725:sub_401145": null, "4198729:sub_401149": null, "4198736:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198745:sub_401159": null, "4198752:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        a1[v0] = a0[v0];\n
    }\n
    return v0;\n
}\n
", "4198843:sub_4011bb": null, "4198848:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 65535)\n
        {\n
            v1 = 65535;\n
            return v1;\n
        }\n
        else if (a0[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4198943:sub_40121f": null, "4198944:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a0[v0] == a1[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4199072:cgc_memclr": "long long cgc_memclr(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a0[v0] = 0;\n
    }\n
    return v0;\n
}\n
", "4199141:sub_4012e5": null, "4199152:cgc_recv_all": "long long cgc_recv_all(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = 1; v1 < a0; v1 += v2)\n
    {\n
        v0 = cgc_receive(a0, a1, v6, v7);\n
        if (v0)\n
        {\n
            v4 = v0;\n
            return v4;\n
        }\n
        if (!v2)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
    if (v1 != a0)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4199338:sub_4013aa": null, "4199344:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v1 < a1)\n
        {\n
            v0 = cgc_transmit(a0, a1, v6, v7);\n
            if (v0)\n
            {\n
                v4 = v0;\n
                return v4;\n
            }\n
            if (!v2)\n
            {\n
                v4 = 1;\n
                return v4;\n
            }\n
            v1 += v2;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199507:sub_401453": null, "4199520:cgc_init_account": "extern char cgc_ACCOUNTS;\n
\n
long long cgc_init_account(unsigned long a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ymm0\n
\n
    v2 = &(&cgc_ACCOUNTS)[420 * a0];\n
    *(v2) = v3;\n
    for (v0 = 0; v0 < 32; v0 = v2)\n
    {\n
        (&cgc_ACCOUNTS)[4 + 420 * a0 + v0] = a1[v0];\n
        v2 = v0 + 1;\n
    }\n
    return v2;\n
}\n
", "4199641:sub_4014d9": null, "4199648:cgc_next_holding": "extern char cgc_ACCOUNTS;\n
\n
long long cgc_next_holding(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 32)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if ((&cgc_ACCOUNTS)[40 + 420 * a0 + 12 * v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &(&cgc_ACCOUNTS)[420 * a0 + 36 + 12 * v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4199801:sub_401579": null, "4199808:cgc_init_holding": "extern char cgc_ACCOUNTS;\n
\n
long long cgc_init_holding(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x28]\n
\n
    v1 = &(&cgc_ACCOUNTS)[36 + 420 * a0 + 12 * a1];\n
    *(v1) = a3;\n
    v0 = &v1[1];\n
    return cgc_memcpy(a2, v0, cgc_strlen(a2));\n
}\n
", "4199929:sub_4015f9": null, "4199936:cgc_init_accounts": "extern unsigned int g_402083;\n
extern unsigned int g_4056c5;\n
extern unsigned int g_40d9e1;\n
extern unsigned int g_41451e;\n
extern unsigned int g_41813f;\n
extern unsigned int g_41957f;\n
extern unsigned int g_41b09b;\n
extern unsigned int g_41be70;\n
extern unsigned int g_41e4a8;\n
extern unsigned int g_4217db;\n
extern unsigned int g_4237c4;\n
extern unsigned int g_42654a;\n
extern char g_602aaa;\n
extern char g_6073e0;\n
extern char g_713805;\n
extern char g_803e90;\n
extern char g_803ea1;\n
extern char g_80725a;\n
\n
long long cgc_init_accounts()\n
{\n
    cgc_init_account(0, \"f97adfe8fa275092adf100d06900aed0\");\n
    cgc_init_account(1, \"11160ee476ee4d0e967bc19123306bb6\");\n
    cgc_init_account(2, \"0c5701cee646b0f3f87a0fe9db5a024b\");\n
    cgc_init_account(3, \"747bcc0e0f08aefb72860b6ec9c435cc\");\n
    cgc_init_account(4, \"e2cb96336c57f7b627157a85ed2703dd\");\n
    cgc_init_account(5, \"ccefe6f38a3b0dc38ad5b0522eb0e029\");\n
    cgc_init_account(6, \"1a0843b9fa65a1b261f2504c9e879f91\");\n
    cgc_init_account(7, \"43bf8cc93f259c6c468f6f49b02f8f86\");\n
    cgc_init_account(8, \"2d97f928e3f5147c39eddcd134675558\");\n
    cgc_init_account(9, \"18cdc243dc965537e08908cc7740f698\");\n
    cgc_init_account(10, \"824b37f224ed67d898cddd9144327522\");\n
    cgc_init_account(11, \"1a5bec5a98f816d4a9e2ed5ef764ec33\");\n
    cgc_init_account(12, \"ded4773c7efa13ca2f176735cf32f718\");\n
    cgc_init_account(13, \"57c02d796238b4a27093332f5757dd04\");\n
    cgc_init_account(14, \"4943cc5abda9e094a722a3127dbb9be3\");\n
    cgc_init_account(15, \"113ac07641cb7675d2dce9bf1ccf697e\");\n
    cgc_init_account(16, \"2306dd49e6a25060e8f8aece11173fdb\");\n
    cgc_init_account(17, \"c122c416d1415d0cb34e9dba6dc18c87\");\n
    cgc_init_account(18, \"f163ff8824fac3c605d53f37e5e614b9\");\n
    cgc_init_account(19, \"7fb252b79b9d4b1c36ac952e7c647394\");\n
    cgc_init_account(20, \"0376ec02f502a3ae1a776494f67ad2bd\");\n
    cgc_init_account(21, \"c35b360d25bbb643a064315b05cbb761\");\n
    cgc_init_account(22, \"ec3603d1a80fc0a9c584ee82bfc0be67\");\n
    cgc_init_account(23, \"1500be58a39ce15068039c989a4a9caf\");\n
    cgc_init_account(24, \"ea512ff327d39e37ddd7f5b169970469\");\n
    cgc_init_account(25, \"019fc054eac8fb229d6f79a7e33e7ce2\");\n
    cgc_init_account(26, \"5f8e90f5fb1f023a116032fc5aeba703\");\n
    cgc_init_account(27, \"d722a3ddd133b5170fb6fc5bfdacdcbc\");\n
    cgc_init_account(28, \"707bd2a4e33ca64c0bd14e8f77f1eea0\");\n
    cgc_init_account(29, \"eeacf644840aec168a972e22ab7ed436\");\n
    cgc_init_account(30, \"290b277185b2f6118f8748cd128b61ad\");\n
    cgc_init_account(31, \"51174b4b91682fa90c995b29c1d122cc\");\n
    cgc_init_account(32, \"241fe5c8bf8b3937860801e13759315b\");\n
    cgc_init_account(33, \"e68614df50cdb2377dcd34ab21d8e6c9\");\n
    cgc_init_account(34, \"819deb8ca551b6a9644f35750c37c231\");\n
    cgc_init_account(35, \"fdf1252401682267f80c76625403710d\");\n
    cgc_init_account(36, \"a8c9e2d05a8ef23cdc219d377d53e878\");\n
    cgc_init_account(37, \"aa5e73418a4d8ebcbf4242c08c78a415\");\n
    cgc_init_account(38, \"de153b1b106b6558dfa7260bc58525c0\");\n
    cgc_init_account(39, \"6cad7fb4bdc6971c41b568563e048c53\");\n
    cgc_init_account(40, \"b8809d33c0df937314815215820d9d65\");\n
    cgc_init_account(41, \"db5adad297a95000a7da8eb236d1cfe9\");\n
    cgc_init_account(42, \"424df7c2b9ef58790a33b52f67b5191f\");\n
    cgc_init_account(43, \"336cfe590bd1bcd823899b14493cf23c\");\n
    cgc_init_account(44, \"66e360b7b285f86c994233c5ab38bea5\");\n
    cgc_init_account(45, \"56ce86e58a14fc504cf6998b870aa804\");\n
    cgc_init_account(46, \"828606bf767986d4cc7b4ec8e9aff92a\");\n
    cgc_init_account(47, \"7179eff9bc72122b89beff120d2c8734\");\n
    cgc_init_account(48, \"6549b8e98be71bac2abd6996627bce4e\");\n
    cgc_init_account(49, \"acece5019f5ed9a0cacf2e0b1d431afd\");\n
    cgc_init_account(50, \"4d170b9c1c7031ef97163bbec3b80bbd\");\n
    cgc_init_account(51, \"9efb58f255f7ad220640a95f2a9c77f2\");\n
    cgc_init_account(52, \"9ef33ee3414ccd3b1eb43bc0b8ce49e2\");\n
    cgc_init_account(53, \"34d94e3a5578082d38538c3424b77270\");\n
    cgc_init_account(54, \"79b7fa5d363e03383f11ecdd92d97447\");\n
    cgc_init_account(55, \"9079765c700058627dce99bafd54432a\");\n
    cgc_init_account(56, \"ff1d7b03b27d0a6870d60f9d4795e92b\");\n
    cgc_init_account(57, \"edb3c285ddfc94bd1afcd62832eca795\");\n
    cgc_init_account(58, \"4ab3d2acc0ab50efa85ebf5c684bd530\");\n
    cgc_init_account(59, \"72558d6c2d653b9082933d372ef1b269\");\n
    cgc_init_account(60, \"a0faff8d8717d436c7e8e8f522ed1803\");\n
    cgc_init_account(61, \"2232fd538ff3aafb810a5f688046dd17\");\n
    cgc_init_account(62, \"6a6d931e932772b36d61ddcc41dbc221\");\n
    cgc_init_account(63, \"ec577dba35a82e1b26f613ece6c6840d\");\n
    cgc_init_account(64, \"2e63fb8baa93b26763b6ca1ef3c8585d\");\n
    cgc_init_account(65, \"005b04f8c3b18b9fa4faa9b02e7baf73\");\n
    cgc_init_account(66, \"569cadedd7e85c73126b13f6a1d227e3\");\n
    cgc_init_account(67, \"257a1c63f6715d7fa2cb06a5650afb9f\");\n
    cgc_init_account(68, \"03b5c42113686b52870b485d1817fd85\");\n
    cgc_init_account(69, \"7018e4ac5d1268d370b2ca79da5057a0\");\n
    cgc_init_account(70, \"cf643ea74cdf6b26939ee46b4625b9ea\");\n
    cgc_init_account(71, \"ac6bf456bd7a791853878fb217774250\");\n
    cgc_init_account(72, \"6500045faaaa7b12bef294b0f0af0a09\");\n
    cgc_init_account(73, \"c3385a46c4adb2cdcbb1e25a3927ccb8\");\n
    cgc_init_account(74, \"bb2404390204fe5d8beb9cd13a526e9c\");\n
    cgc_init_account(75, \"5ab2beaec063d59802bcad0c5cd39b6d\");\n
    cgc_init_account(76, \"1142c827f4f3cc46e08866d9e88eedd1\");\n
    cgc_init_account(77, \"4c37e154220c50c1077493851d1011ea\");\n
    cgc_init_account(78, \"d5a1152a053af0b1f9b387346866d5b2\");\n
    cgc_init_account(79, \"512457dc65f54d89dc8706d032b45443\");\n
    cgc_init_account(80, \"26127ebcfa0b1669559784ea1824d250\");\n
    cgc_init_account(81, \"f186934fb856ca0110151ad296da653f\");\n
    cgc_init_account(82, \"76910c570029849e0eaaa589b26e3759\");\n
    cgc_init_account(83, \"0ef281a265db8cc1a2f26adce8f09539\");\n
    cgc_init_account(84, \"c168709a6158047f520dd8f1442a92a0\");\n
    cgc_init_account(85, \"d2663cd7f26b91bf2eb322e6025d1df4\");\n
    cgc_init_account(86, \"7118b3ce1daf916b9499f69024791473\");\n
    cgc_init_account(87, \"cc190a7badd466d6e430b2966429bcb5\");\n
    cgc_init_account(88, \"799da893ad735b3a669e144d5aa67dab\");\n
    cgc_init_account(89, \"2932fb4aa9794a0caf3b263659419c26\");\n
    cgc_init_account(90, \"83796f2ba285775fc968c6061cd6a1c0\");\n
    cgc_init_account(91, \"0ab61be15e4ae36dd434cd6f104e2fc4\");\n
    cgc_init_account(92, \"5df66a4add8373aca93b06f6c982e0e3\");\n
    cgc_init_account(93, \"fbc29f5043a4e28c92312f32ff687511\");\n
    cgc_init_account(94, \"fcaf38921282e14608214823e0597e21\");\n
    cgc_init_account(95, \"cc5bac4d6c1e3f99b99a5792f19b15b4\");\n
    cgc_init_account(96, \"35f40bd506c8086a2569f2ca2dde1b29\");\n
    cgc_init_account(97, \"3a37a6af6981bfa12cfae817c2231447\");\n
    cgc_init_account(98, \"45629735ff7a20ca7c1aa375525be9e4\");\n
    cgc_init_account(99, \"d97236f062e48047aedd7957122c8238\");\n
    cgc_init_holding(0, 0, \"GOOG\", 12697418);\n
    cgc_init_holding(0, 1, \"SK3WL\", 13609627);\n
    cgc_init_holding(0, 2, \"NRFIN\", 5962175);\n
    cgc_init_holding(0, 3, \"KPRCA\", 2164075);\n
    cgc_init_holding(0, 4, \"AAPL\", 7107186);\n
    cgc_init_holding(0, 5, \"OAK\", 9147668);\n
    cgc_init_holding(0, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(0, 7, \"PALM\", 12454340);\n
    cgc_init_holding(0, 8, \"CROMU\", 13645664);\n
    cgc_init_holding(0, 9, \"PIRATE\", 9417541);\n
    cgc_init_holding(0, 10, \"MAPLE\", 10179641);\n
    cgc_init_holding(1, 0, \"GOOG\", 12929200);\n
    cgc_init_holding(1, 1, \"SK3WL\", 14026567);\n
    cgc_init_holding(1, 2, \"NRFIN\", 16257266);\n
    cgc_init_holding(1, 3, \"KPRCA\", 1501564);\n
    cgc_init_holding(1, 4, \"AAPL\", 6155379);\n
    cgc_init_holding(1, 5, \"OAK\", 16460465);\n
    cgc_init_holding(1, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(1, 7, \"PALM\", 10590440);\n
    cgc_init_holding(1, 8, \"CROMU\", 4065689);\n
    cgc_init_holding(1, 9, \"PIRATE\", 12342544);\n
    cgc_init_holding(1, 10, \"MAPLE\", 13571855);\n
    cgc_init_holding(2, 0, \"GOOG\", 9562695);\n
    cgc_init_holding(2, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(2, 2, \"NRFIN\", 8335444);\n
    cgc_init_holding(2, 3, \"KPRCA\", 3689543);\n
    cgc_init_holding(2, 4, \"AAPL\", 11318699);\n
    cgc_init_holding(2, 5, \"OAK\", 15206633);\n
    cgc_init_holding(2, 6, \"DDTEK\", 6387741);\n
    cgc_init_holding(2, 7, \"PALM\", 15315607);\n
    cgc_init_holding(2, 8, \"CROMU\", 15930862);\n
    cgc_init_holding(2, 9, \"PIRATE\", 1207764);\n
    cgc_init_holding(2, 10, \"MAPLE\", 6822811);\n
    cgc_init_holding(3, 0, \"GOOG\", 13230134);\n
    cgc_init_holding(3, 1, \"SK3WL\", 6577574);\n
    cgc_init_holding(3, 2, \"NRFIN\", 7860633);\n
    cgc_init_holding(3, 3, \"KPRCA\", 6681541);\n
    cgc_init_holding(3, 4, \"AAPL\", 4580790);\n
    cgc_init_holding(3, 5, \"OAK\", 5084198);\n
    cgc_init_holding(3, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(3, 7, \"PALM\", 7264059);\n
    cgc_init_holding(3, 8, \"CROMU\", 3060599);\n
    cgc_init_holding(3, 9, \"PIRATE\", 4860182);\n
    cgc_init_holding(3, 10, \"MAPLE\", 11247052);\n
    cgc_init_holding(4, 0, \"GOOG\", 15570477);\n
    cgc_init_holding(4, 1, \"SK3WL\", 3432318);\n
    cgc_init_holding(4, 2, \"NRFIN\", 12741618);\n
    cgc_init_holding(4, 3, \"KPRCA\", 3172918);\n
    cgc_init_holding(4, 4, \"AAPL\", 7604478);\n
    cgc_init_holding(4, 5, \"OAK\", 6492051);\n
    cgc_init_holding(4, 6, \"DDTEK\", 6761905);\n
    cgc_init_holding(4, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(4, 8, \"CROMU\", 9215083);\n
    cgc_init_holding(4, 9, \"PIRATE\", 11751177);\n
    cgc_init_holding(4, 10, \"MAPLE\", 6121063);\n
    cgc_init_holding(5, 0, \"GOOG\", 16767060);\n
    cgc_init_holding(5, 1, \"SK3WL\", 3120718);\n
    cgc_init_holding(5, 2, \"NRFIN\", 2222454);\n
    cgc_init_holding(5, 3, \"KPRCA\", 15925974);\n
    cgc_init_holding(5, 4, \"AAPL\", 9007607);\n
    cgc_init_holding(5, 5, \"OAK\", 3734544);\n
    cgc_init_holding(5, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(5, 7, \"PALM\", 9858813);\n
    cgc_init_holding(5, 8, \"CROMU\", 1140598);\n
    cgc_init_holding(5, 9, \"PIRATE\", 14471737);\n
    cgc_init_holding(5, 10, \"MAPLE\", 5019638);\n
    cgc_init_holding(6, 0, \"GOOG\", 6875083);\n
    cgc_init_holding(6, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(6, 2, \"NRFIN\", 10347720);\n
    cgc_init_holding(6, 3, \"KPRCA\", 3731967);\n
    cgc_init_holding(6, 4, \"AAPL\", 13351890);\n
    cgc_init_holding(6, 5, \"OAK\", 1050721);\n
    cgc_init_holding(6, 6, \"DDTEK\", 1875851);\n
    cgc_init_holding(6, 7, \"PALM\", &g_41b09b);\n
    cgc_init_holding(6, 8, \"CROMU\", 16431291);\n
    cgc_init_holding(6, 9, \"PIRATE\", 15860601);\n
    cgc_init_holding(6, 10, \"MAPLE\", 6882954);\n
    cgc_init_holding(7, 0, \"GOOG\", 16635781);\n
    cgc_init_holding(7, 1, \"SK3WL\", 10306122);\n
    cgc_init_holding(7, 2, \"NRFIN\", 7533549);\n
    cgc_init_holding(7, 3, \"KPRCA\", 11826853);\n
    cgc_init_holding(7, 4, \"AAPL\", 16602355);\n
    cgc_init_holding(7, 5, \"OAK\", 5836793);\n
    cgc_init_holding(7, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(7, 7, \"PALM\", 11905535);\n
    cgc_init_holding(7, 8, \"CROMU\", 12145804);\n
    cgc_init_holding(7, 9, \"PIRATE\", 13676509);\n
    cgc_init_holding(7, 10, \"MAPLE\", 10686102);\n
    cgc_init_holding(8, 0, \"GOOG\", 11880185);\n
    cgc_init_holding(8, 1, \"SK3WL\", 5848188);\n
    cgc_init_holding(8, 2, \"NRFIN\", 3691309);\n
    cgc_init_holding(8, 3, \"KPRCA\", 14501760);\n
    cgc_init_holding(8, 4, \"AAPL\", 12428824);\n
    cgc_init_holding(8, 5, \"OAK\", 4757678);\n
    cgc_init_holding(8, 6, \"DDTEK\", 2714757);\n
    cgc_init_holding(8, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(8, 8, \"CROMU\", 13154036);\n
    cgc_init_holding(8, 9, \"PIRATE\", 1984745);\n
    cgc_init_holding(8, 10, \"MAPLE\", 10440271);\n
    cgc_init_holding(9, 0, \"GOOG\", 2806291);\n
    cgc_init_holding(9, 1, \"SK3WL\", 2472935);\n
    cgc_init_holding(9, 2, \"NRFIN\", 10294218);\n
    cgc_init_holding(9, 3, \"KPRCA\", 1667285);\n
    cgc_init_holding(9, 4, \"AAPL\", 12327449);\n
    cgc_init_holding(9, 5, \"OAK\", 5585729);\n
    cgc_init_holding(9, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(9, 7, \"PALM\", 7133955);\n
    cgc_init_holding(9, 8, \"CROMU\", 3133595);\n
    cgc_init_holding(9, 9, \"PIRATE\", 11437347);\n
    cgc_init_holding(9, 10, \"MAPLE\", 2946842);\n
    cgc_init_holding(10, 0, \"GOOG\", 15636185);\n
    cgc_init_holding(10, 1, \"SK3WL\", 3810043);\n
    cgc_init_holding(10, 2, \"NRFIN\", 1757482);\n
    cgc_init_holding(10, 3, \"KPRCA\", 7349362);\n
    cgc_init_holding(10, 4, \"AAPL\", 2772326);\n
    cgc_init_holding(10, 5, \"OAK\", 6657587);\n
    cgc_init_holding(10, 6, \"DDTEK\", 4557832);\n
    cgc_init_holding(10, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(10, 8, \"CROMU\", 1007084);\n
    cgc_init_holding(10, 9, \"PIRATE\", 11768340);\n
    cgc_init_holding(10, 10, \"MAPLE\", 14135472);\n
    cgc_init_holding(11, 0, \"GOOG\", 8960182);\n
    cgc_init_holding(11, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(11, 2, \"NRFIN\", 12269480);\n
    cgc_init_holding(11, 3, \"KPRCA\", 11421740);\n
    cgc_init_holding(11, 4, \"AAPL\", 9016835);\n
    cgc_init_holding(11, 5, \"OAK\", 11283725);\n
    cgc_init_holding(11, 6, \"DDTEK\", 3155420);\n
    cgc_init_holding(11, 7, \"PALM\", 14404065);\n
    cgc_init_holding(11, 8, \"CROMU\", 6893048);\n
    cgc_init_holding(11, 9, \"PIRATE\", 13478505);\n
    cgc_init_holding(11, 10, \"MAPLE\", 14703193);\n
    cgc_init_holding(12, 0, \"GOOG\", 11688733);\n
    cgc_init_holding(12, 1, \"SK3WL\", 13295258);\n
    cgc_init_holding(12, 2, \"NRFIN\", 15108918);\n
    cgc_init_holding(12, 3, \"KPRCA\", 14035081);\n
    cgc_init_holding(12, 4, \"AAPL\", 16044264);\n
    cgc_init_holding(12, 5, \"OAK\", 16391840);\n
    cgc_init_holding(12, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(12, 7, \"PALM\", 12502629);\n
    cgc_init_holding(12, 8, \"CROMU\", 12604407);\n
    cgc_init_holding(12, 9, \"PIRATE\", 10121798);\n
    cgc_init_holding(12, 10, \"MAPLE\", 9433220);\n
    cgc_init_holding(13, 0, \"GOOG\", 11524495);\n
    cgc_init_holding(13, 1, \"SK3WL\", 1168846);\n
    cgc_init_holding(13, 2, \"NRFIN\", 3230299);\n
    cgc_init_holding(13, 3, \"KPRCA\", 2193972);\n
    cgc_init_holding(13, 4, \"AAPL\", 8841774);\n
    cgc_init_holding(13, 5, \"OAK\", 5088434);\n
    cgc_init_holding(13, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(13, 7, \"PALM\", 11436443);\n
    cgc_init_holding(13, 8, \"CROMU\", 6832703);\n
    cgc_init_holding(13, 9, \"PIRATE\", 1615197);\n
    cgc_init_holding(13, 10, \"MAPLE\", 14707618);\n
    cgc_init_holding(14, 0, \"GOOG\", 11979219);\n
    cgc_init_holding(14, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(14, 2, \"NRFIN\", 4503091);\n
    cgc_init_holding(14, 3, \"KPRCA\", 10393294);\n
    cgc_init_holding(14, 4, \"AAPL\", 13581203);\n
    cgc_init_holding(14, 5, \"OAK\", 15458811);\n
    cgc_init_holding(14, 6, \"DDTEK\", 1351048);\n
    cgc_init_holding(14, 7, \"PALM\", 11574131);\n
    cgc_init_holding(14, 8, \"CROMU\", 9216316);\n
    cgc_init_holding(14, 9, \"PIRATE\", 7530688);\n
    cgc_init_holding(14, 10, \"MAPLE\", 1355327);\n
    cgc_init_holding(15, 0, \"GOOG\", 3608426);\n
    cgc_init_holding(15, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(15, 2, \"NRFIN\", 6898679);\n
    cgc_init_holding(15, 3, \"KPRCA\", 3984264);\n
    cgc_init_holding(15, 4, \"AAPL\", 5892330);\n
    cgc_init_holding(15, 5, \"OAK\", 16657794);\n
    cgc_init_holding(15, 6, \"DDTEK\", 3241989);\n
    cgc_init_holding(15, 7, \"PALM\", 1396362);\n
    cgc_init_holding(15, 8, \"CROMU\", 5049554);\n
    cgc_init_holding(15, 9, \"PIRATE\", 14805136);\n
    cgc_init_holding(15, 10, \"MAPLE\", 15810129);\n
    cgc_init_holding(16, 0, \"GOOG\", 10472799);\n
    cgc_init_holding(16, 1, \"SK3WL\", 11170086);\n
    cgc_init_holding(16, 2, \"NRFIN\", 13261757);\n
    cgc_init_holding(16, 3, \"KPRCA\", &g_41451e);\n
    cgc_init_holding(16, 4, \"AAPL\", 13749354);\n
    cgc_init_holding(16, 5, \"OAK\", 5570437);\n
    cgc_init_holding(16, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(16, 7, \"PALM\", 10770226);\n
    cgc_init_holding(16, 8, \"CROMU\", 6944056);\n
    cgc_init_holding(16, 9, \"PIRATE\", 10885405);\n
    cgc_init_holding(16, 10, \"MAPLE\", 7438621);\n
    cgc_init_holding(17, 0, \"GOOG\", 1160878);\n
    cgc_init_holding(17, 1, \"SK3WL\", 10548236);\n
    cgc_init_holding(17, 2, \"NRFIN\", 1045249);\n
    cgc_init_holding(17, 3, \"KPRCA\", 1080544);\n
    cgc_init_holding(17, 4, \"AAPL\", 14443389);\n
    cgc_init_holding(17, 5, \"OAK\", 15469281);\n
    cgc_init_holding(17, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(17, 7, \"PALM\", 5223098);\n
    cgc_init_holding(17, 8, \"CROMU\", 9362632);\n
    cgc_init_holding(17, 9, \"PIRATE\", 3557867);\n
    cgc_init_holding(17, 10, \"MAPLE\", 3424844);\n
    cgc_init_holding(18, 0, \"GOOG\", 10955106);\n
    cgc_init_holding(18, 1, \"SK3WL\", 6616950);\n
    cgc_init_holding(18, 2, \"NRFIN\", 12400890);\n
    cgc_init_holding(18, 3, \"KPRCA\", 7731846);\n
    cgc_init_holding(18, 4, \"AAPL\", 10431312);\n
    cgc_init_holding(18, 5, \"OAK\", 7502579);\n
    cgc_init_holding(18, 6, \"DDTEK\", 9146814);\n
    cgc_init_holding(18, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(18, 8, \"CROMU\", 5557237);\n
    cgc_init_holding(18, 9, \"PIRATE\", 12472140);\n
    cgc_init_holding(18, 10, \"MAPLE\", 10605366);\n
    cgc_init_holding(19, 0, \"GOOG\", 11682743);\n
    cgc_init_holding(19, 1, \"SK3WL\", 12213053);\n
    cgc_init_holding(19, 2, \"NRFIN\", 13150087);\n
    cgc_init_holding(19, 3, \"KPRCA\", 1058239);\n
    cgc_init_holding(19, 4, \"AAPL\", 11739330);\n
    cgc_init_holding(19, 5, \"OAK\", 8524322);\n
    cgc_init_holding(19, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(19, 7, \"PALM\", 6767717);\n
    cgc_init_holding(19, 8, \"CROMU\", 16382912);\n
    cgc_init_holding(19, 9, \"PIRATE\", 7020133);\n
    cgc_init_holding(19, 10, \"MAPLE\", 10949651);\n
    cgc_init_holding(20, 0, \"GOOG\", 6361454);\n
    cgc_init_holding(20, 1, \"SK3WL\", 10624090);\n
    cgc_init_holding(20, 2, \"NRFIN\", 9729863);\n
    cgc_init_holding(20, 3, \"KPRCA\", 5489966);\n
    cgc_init_holding(20, 4, \"AAPL\", 1644367);\n
    cgc_init_holding(20, 5, \"OAK\", 13704543);\n
    cgc_init_holding(20, 6, \"DDTEK\", 13296132);\n
    cgc_init_holding(20, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(20, 8, \"CROMU\", 12534300);\n
    cgc_init_holding(20, 9, \"PIRATE\", 3314227);\n
    cgc_init_holding(20, 10, \"MAPLE\", 8091103);\n
    cgc_init_holding(21, 0, \"GOOG\", 15116102);\n
    cgc_init_holding(21, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(21, 2, \"NRFIN\", 7163303);\n
    cgc_init_holding(21, 3, \"KPRCA\", 2411851);\n
    cgc_init_holding(21, 4, \"AAPL\", 1282178);\n
    cgc_init_holding(21, 5, \"OAK\", 3917628);\n
    cgc_init_holding(21, 6, \"DDTEK\", 10812358);\n
    cgc_init_holding(21, 7, \"PALM\", 15979282);\n
    cgc_init_holding(21, 8, \"CROMU\", 9688700);\n
    cgc_init_holding(21, 9, \"PIRATE\", 7870488);\n
    cgc_init_holding(21, 10, \"MAPLE\", 6164509);\n
    cgc_init_holding(22, 0, \"GOOG\", 4077423);\n
    cgc_init_holding(22, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(22, 2, \"NRFIN\", 9445055);\n
    cgc_init_holding(22, 3, \"KPRCA\", 12406389);\n
    cgc_init_holding(22, 4, \"AAPL\", 13620598);\n
    cgc_init_holding(22, 5, \"OAK\", 3267007);\n
    cgc_init_holding(22, 6, \"DDTEK\", 4471790);\n
    cgc_init_holding(22, 7, \"PALM\", 13305435);\n
    cgc_init_holding(22, 8, \"CROMU\", 4483329);\n
    cgc_init_holding(22, 9, \"PIRATE\", 5539467);\n
    cgc_init_holding(22, 10, \"MAPLE\", 16179529);\n
    cgc_init_holding(23, 0, \"GOOG\", 15257167);\n
    cgc_init_holding(23, 1, \"SK3WL\", 4086382);\n
    cgc_init_holding(23, 2, \"NRFIN\", 10537523);\n
    cgc_init_holding(23, 3, \"KPRCA\", 1924550);\n
    cgc_init_holding(23, 4, \"AAPL\", 7884583);\n
    cgc_init_holding(23, 5, \"OAK\", 7048308);\n
    cgc_init_holding(23, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(23, 7, \"PALM\", 6235064);\n
    cgc_init_holding(23, 8, \"CROMU\", 2426566);\n
    cgc_init_holding(23, 9, \"PIRATE\", 15526648);\n
    cgc_init_holding(23, 10, \"MAPLE\", 6321120);\n
    cgc_init_holding(24, 0, \"GOOG\", 1065341);\n
    cgc_init_holding(24, 1, \"SK3WL\", 11509928);\n
    cgc_init_holding(24, 2, \"NRFIN\", 2120379);\n
    cgc_init_holding(24, 3, \"KPRCA\", 8701824);\n
    cgc_init_holding(24, 4, \"AAPL\", 9024411);\n
    cgc_init_holding(24, 5, \"OAK\", 16086740);\n
    cgc_init_holding(24, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(24, 7, \"PALM\", 11273924);\n
    cgc_init_holding(24, 8, \"CROMU\", 8791335);\n
    cgc_init_holding(24, 9, \"PIRATE\", 8773724);\n
    cgc_init_holding(24, 10, \"MAPLE\", 15272393);\n
    cgc_init_holding(25, 0, \"GOOG\", 4140026);\n
    cgc_init_holding(25, 1, \"SK3WL\", 1454170);\n
    cgc_init_holding(25, 2, \"NRFIN\", 5145732);\n
    cgc_init_holding(25, 3, \"KPRCA\", 9224234);\n
    cgc_init_holding(25, 4, \"AAPL\", 8689009);\n
    cgc_init_holding(25, 5, \"OAK\", 16382073);\n
    cgc_init_holding(25, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(25, 7, \"PALM\", 6269156);\n
    cgc_init_holding(25, 8, \"CROMU\", 13240935);\n
    cgc_init_holding(25, 9, \"PIRATE\", 14765083);\n
    cgc_init_holding(25, 10, \"MAPLE\", 4798408);\n
    cgc_init_holding(26, 0, \"GOOG\", 2784024);\n
    cgc_init_holding(26, 1, \"SK3WL\", 13549293);\n
    cgc_init_holding(26, 2, \"NRFIN\", 2667817);\n
    cgc_init_holding(26, 3, \"KPRCA\", 3492991);\n
    cgc_init_holding(26, 4, \"AAPL\", 3847288);\n
    cgc_init_holding(26, 5, \"OAK\", 5313095);\n
    cgc_init_holding(26, 6, \"DDTEK\", 6009818);\n
    cgc_init_holding(26, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(26, 8, \"CROMU\", 8466828);\n
    cgc_init_holding(26, 9, \"PIRATE\", 1507424);\n
    cgc_init_holding(26, 10, \"MAPLE\", 14210083);\n
    cgc_init_holding(27, 0, \"GOOG\", 8770132);\n
    cgc_init_holding(27, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(27, 2, \"NRFIN\", 7530052);\n
    cgc_init_holding(27, 3, \"KPRCA\", 9274559);\n
    cgc_init_holding(27, 4, \"AAPL\", 16244414);\n
    cgc_init_holding(27, 5, \"OAK\", 13591144);\n
    cgc_init_holding(27, 6, \"DDTEK\", 12820445);\n
    cgc_init_holding(27, 7, \"PALM\", 7494192);\n
    cgc_init_holding(27, 8, \"CROMU\", 3214744);\n
    cgc_init_holding(27, 9, \"PIRATE\", 9732092);\n
    cgc_init_holding(27, 10, \"MAPLE\", 5384540);\n
    cgc_init_holding(28, 0, \"GOOG\", 14101661);\n
    cgc_init_holding(28, 1, \"SK3WL\", 9880693);\n
    cgc_init_holding(28, 2, \"NRFIN\", 4824828);\n
    cgc_init_holding(28, 3, \"KPRCA\", 6640789);\n
    cgc_init_holding(28, 4, \"AAPL\", 5985061);\n
    cgc_init_holding(28, 5, \"OAK\", 12082003);\n
    cgc_init_holding(28, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(28, 7, \"PALM\", 11992980);\n
    cgc_init_holding(28, 8, \"CROMU\", 6663090);\n
    cgc_init_holding(28, 9, \"PIRATE\", 15536331);\n
    cgc_init_holding(28, 10, \"MAPLE\", 1693762);\n
    cgc_init_holding(29, 0, \"GOOG\", 2499199);\n
    cgc_init_holding(29, 1, \"SK3WL\", 4406436);\n
    cgc_init_holding(29, 2, \"NRFIN\", 14519628);\n
    cgc_init_holding(29, 3, \"KPRCA\", 7419909);\n
    cgc_init_holding(29, 4, \"AAPL\", 10165991);\n
    cgc_init_holding(29, 5, \"OAK\", 4372799);\n
    cgc_init_holding(29, 6, \"DDTEK\", 6544820);\n
    cgc_init_holding(29, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(29, 8, \"CROMU\", 16537451);\n
    cgc_init_holding(29, 9, \"PIRATE\", 1716661);\n
    cgc_init_holding(29, 10, \"MAPLE\", 5788997);\n
    cgc_init_holding(30, 0, \"GOOG\", 6611019);\n
    cgc_init_holding(30, 1, \"SK3WL\", 12997587);\n
    cgc_init_holding(30, 2, \"NRFIN\", 1091133);\n
    cgc_init_holding(30, 3, \"KPRCA\", 15135738);\n
    cgc_init_holding(30, 4, \"AAPL\", 8348263);\n
    cgc_init_holding(30, 5, \"OAK\", 4912346);\n
    cgc_init_holding(30, 6, \"DDTEK\", 4385542);\n
    cgc_init_holding(30, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(30, 8, \"CROMU\", 15877165);\n
    cgc_init_holding(30, 9, \"PIRATE\", 15099072);\n
    cgc_init_holding(30, 10, \"MAPLE\", 1874078);\n
    cgc_init_holding(31, 0, \"GOOG\", 16304977);\n
    cgc_init_holding(31, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(31, 2, \"NRFIN\", 5052570);\n
    cgc_init_holding(31, 3, \"KPRCA\", 2877027);\n
    cgc_init_holding(31, 4, \"AAPL\", &g_41be70);\n
    cgc_init_holding(31, 5, \"OAK\", 1627498);\n
    cgc_init_holding(31, 6, \"DDTEK\", 3976235);\n
    cgc_init_holding(31, 7, \"PALM\", 9268624);\n
    cgc_init_holding(31, 8, \"CROMU\", 5030385);\n
    cgc_init_holding(31, 9, \"PIRATE\", 3795706);\n
    cgc_init_holding(31, 10, \"MAPLE\", 5022202);\n
    cgc_init_holding(32, 0, \"GOOG\", 16145286);\n
    cgc_init_holding(32, 1, \"SK3WL\", 15701401);\n
    cgc_init_holding(32, 2, \"NRFIN\", 7052302);\n
    cgc_init_holding(32, 3, \"KPRCA\", 8553136);\n
    cgc_init_holding(32, 4, \"AAPL\", 14804565);\n
    cgc_init_holding(32, 5, \"OAK\", 7324258);\n
    cgc_init_holding(32, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(32, 7, \"PALM\", 10434500);\n
    cgc_init_holding(32, 8, \"CROMU\", 14462869);\n
    cgc_init_holding(32, 9, \"PIRATE\", 13583913);\n
    cgc_init_holding(32, 10, \"MAPLE\", 10595086);\n
    cgc_init_holding(33, 0, \"GOOG\", 13202499);\n
    cgc_init_holding(33, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(33, 2, \"NRFIN\", 12766986);\n
    cgc_init_holding(33, 3, \"KPRCA\", 12046145);\n
    cgc_init_holding(33, 4, \"AAPL\", 11015974);\n
    cgc_init_holding(33, 5, \"OAK\", 16370510);\n
    cgc_init_holding(33, 6, \"DDTEK\", 3796352);\n
    cgc_init_holding(33, 7, \"PALM\", 13760909);\n
    cgc_init_holding(33, 8, \"CROMU\", 15326706);\n
    cgc_init_holding(33, 9, \"PIRATE\", 1693165);\n
    cgc_init_holding(33, 10, \"MAPLE\", 6146198);\n
    cgc_init_holding(34, 0, \"GOOG\", 14201410);\n
    cgc_init_holding(34, 1, \"SK3WL\", 8511288);\n
    cgc_init_holding(34, 2, \"NRFIN\", 1063994);\n
    cgc_init_holding(34, 3, \"KPRCA\", 6268552);\n
    cgc_init_holding(34, 4, \"AAPL\", 15198355);\n
    cgc_init_holding(34, 5, \"OAK\", 15873769);\n
    cgc_init_holding(34, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(34, 7, \"PALM\", 6637311);\n
    cgc_init_holding(34, 8, \"CROMU\", 0xf88b00);\n
    cgc_init_holding(34, 9, \"PIRATE\", 10642319);\n
    cgc_init_holding(34, 10, \"MAPLE\", 7302469);\n
    cgc_init_holding(35, 0, \"GOOG\", 16050794);\n
    cgc_init_holding(35, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(35, 2, \"NRFIN\", 3856488);\n
    cgc_init_holding(35, 3, \"KPRCA\", 4569063);\n
    cgc_init_holding(35, 4, \"AAPL\", 15567455);\n
    cgc_init_holding(35, 5, \"OAK\", 2392423);\n
    cgc_init_holding(35, 6, \"DDTEK\", 16498540);\n
    cgc_init_holding(35, 7, \"PALM\", 5971020);\n
    cgc_init_holding(35, 8, \"CROMU\", &g_4217db);\n
    cgc_init_holding(35, 9, \"PIRATE\", 15865335);\n
    cgc_init_holding(35, 10, \"MAPLE\", 11754313);\n
    cgc_init_holding(36, 0, \"GOOG\", 2479175);\n
    cgc_init_holding(36, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(36, 2, \"NRFIN\", 3822240);\n
    cgc_init_holding(36, 3, \"KPRCA\", 11635880);\n
    cgc_init_holding(36, 4, \"AAPL\", 8990382);\n
    cgc_init_holding(36, 5, \"OAK\", 1264252);\n
    cgc_init_holding(36, 6, \"DDTEK\", 2171273);\n
    cgc_init_holding(36, 7, \"PALM\", 9414321);\n
    cgc_init_holding(36, 8, \"CROMU\", 14730966);\n
    cgc_init_holding(36, 9, \"PIRATE\", 7244390);\n
    cgc_init_holding(36, 10, \"MAPLE\", 8947020);\n
    cgc_init_holding(37, 0, \"GOOG\", 15679785);\n
    cgc_init_holding(37, 1, \"SK3WL\", 8646879);\n
    cgc_init_holding(37, 2, \"NRFIN\", 8806663);\n
    cgc_init_holding(37, 3, \"KPRCA\", 5198906);\n
    cgc_init_holding(37, 4, \"AAPL\", 12170318);\n
    cgc_init_holding(37, 5, \"OAK\", 8386977);\n
    cgc_init_holding(37, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(37, 7, \"PALM\", 11035897);\n
    cgc_init_holding(37, 8, \"CROMU\", 7972249);\n
    cgc_init_holding(37, 9, \"PIRATE\", 9495625);\n
    cgc_init_holding(37, 10, \"MAPLE\", 14516338);\n
    cgc_init_holding(38, 0, \"GOOG\", 15969557);\n
    cgc_init_holding(38, 1, \"SK3WL\", 13218669);\n
    cgc_init_holding(38, 2, \"NRFIN\", 6567289);\n
    cgc_init_holding(38, 3, \"KPRCA\", 13161176);\n
    cgc_init_holding(38, 4, \"AAPL\", 12798783);\n
    cgc_init_holding(38, 5, \"OAK\", 4921208);\n
    cgc_init_holding(38, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(38, 7, \"PALM\", 6433043);\n
    cgc_init_holding(38, 8, \"CROMU\", 14405305);\n
    cgc_init_holding(38, 9, \"PIRATE\", 2158462);\n
    cgc_init_holding(38, 10, \"MAPLE\", 13782478);\n
    cgc_init_holding(39, 0, \"GOOG\", 4860109);\n
    cgc_init_holding(39, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(39, 2, \"NRFIN\", 1571076);\n
    cgc_init_holding(39, 3, \"KPRCA\", 13933799);\n
    cgc_init_holding(39, 4, \"AAPL\", 7004055);\n
    cgc_init_holding(39, 5, \"OAK\", 12118951);\n
    cgc_init_holding(39, 6, \"DDTEK\", 11810231);\n
    cgc_init_holding(39, 7, \"PALM\", 14670828);\n
    cgc_init_holding(39, 8, \"CROMU\", &g_41957f);\n
    cgc_init_holding(39, 9, \"PIRATE\", 3730513);\n
    cgc_init_holding(39, 10, \"MAPLE\", 3767108);\n
    cgc_init_holding(40, 0, \"GOOG\", 4822938);\n
    cgc_init_holding(40, 1, \"SK3WL\", 5772139);\n
    cgc_init_holding(40, 2, \"NRFIN\", 7993294);\n
    cgc_init_holding(40, 3, \"KPRCA\", 8806511);\n
    cgc_init_holding(40, 4, \"AAPL\", 9141741);\n
    cgc_init_holding(40, 5, \"OAK\", 2945848);\n
    cgc_init_holding(40, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(40, 7, \"PALM\", 16722448);\n
    cgc_init_holding(40, 8, \"CROMU\", 12282640);\n
    cgc_init_holding(40, 9, \"PIRATE\", 14585954);\n
    cgc_init_holding(40, 10, \"MAPLE\", 9488914);\n
    cgc_init_holding(41, 0, \"GOOG\", 16777118);\n
    cgc_init_holding(41, 1, \"SK3WL\", 2552391);\n
    cgc_init_holding(41, 2, \"NRFIN\", 10080659);\n
    cgc_init_holding(41, 3, \"KPRCA\", 8860583);\n
    cgc_init_holding(41, 4, \"AAPL\", 1356122);\n
    cgc_init_holding(41, 5, \"OAK\", 4099862);\n
    cgc_init_holding(41, 6, \"DDTEK\", 5354722);\n
    cgc_init_holding(41, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(41, 8, \"CROMU\", 6737652);\n
    cgc_init_holding(41, 9, \"PIRATE\", 6075612);\n
    cgc_init_holding(41, 10, \"MAPLE\", 15594271);\n
    cgc_init_holding(42, 0, \"GOOG\", 13790057);\n
    cgc_init_holding(42, 1, \"SK3WL\", 5159107);\n
    cgc_init_holding(42, 2, \"NRFIN\", 5646950);\n
    cgc_init_holding(42, 3, \"KPRCA\", 1164374);\n
    cgc_init_holding(42, 4, \"AAPL\", 2481370);\n
    cgc_init_holding(42, 5, \"OAK\", 2834358);\n
    cgc_init_holding(42, 6, \"DDTEK\", 8643482);\n
    cgc_init_holding(42, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(42, 8, \"CROMU\", 1215390);\n
    cgc_init_holding(42, 9, \"PIRATE\", 3940411);\n
    cgc_init_holding(42, 10, \"MAPLE\", 9107762);\n
    cgc_init_holding(43, 0, \"GOOG\", 7702169);\n
    cgc_init_holding(43, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(43, 2, \"NRFIN\", 10362436);\n
    cgc_init_holding(43, 3, \"KPRCA\", 15077270);\n
    cgc_init_holding(43, 4, \"AAPL\", 14129608);\n
    cgc_init_holding(43, 5, \"OAK\", 14233452);\n
    cgc_init_holding(43, 6, \"DDTEK\", 16448692);\n
    cgc_init_holding(43, 7, \"PALM\", 9150686);\n
    cgc_init_holding(43, 8, \"CROMU\", 10499415);\n
    cgc_init_holding(43, 9, \"PIRATE\", 2691104);\n
    cgc_init_holding(43, 10, \"MAPLE\", 15821369);\n
    cgc_init_holding(44, 0, \"GOOG\", 9713656);\n
    cgc_init_holding(44, 1, \"SK3WL\", 4753509);\n
    cgc_init_holding(44, 2, \"NRFIN\", 14443410);\n
    cgc_init_holding(44, 3, \"KPRCA\", 7617582);\n
    cgc_init_holding(44, 4, \"AAPL\", 8641563);\n
    cgc_init_holding(44, 5, \"OAK\", 11563330);\n
    cgc_init_holding(44, 6, \"DDTEK\", 13496268);\n
    cgc_init_holding(44, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(44, 8, \"CROMU\", 16040095);\n
    cgc_init_holding(44, 9, \"PIRATE\", 5411080);\n
    cgc_init_holding(44, 10, \"MAPLE\", 9992150);\n
    cgc_init_holding(45, 0, \"GOOG\", 9704535);\n
    cgc_init_holding(45, 1, \"SK3WL\", 14950974);\n
    cgc_init_holding(45, 2, \"NRFIN\", 3479247);\n
    cgc_init_holding(45, 3, \"KPRCA\", 8800218);\n
    cgc_init_holding(45, 4, \"AAPL\", 10062457);\n
    cgc_init_holding(45, 5, \"OAK\", 12240112);\n
    cgc_init_holding(45, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(45, 7, \"PALM\", 5254871);\n
    cgc_init_holding(45, 8, \"CROMU\", 12010930);\n
    cgc_init_holding(45, 9, \"PIRATE\", 5428519);\n
    cgc_init_holding(45, 10, \"MAPLE\", 3168296);\n
    cgc_init_holding(46, 0, \"GOOG\", 15197400);\n
    cgc_init_holding(46, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(46, 2, \"NRFIN\", 12293353);\n
    cgc_init_holding(46, 3, \"KPRCA\", 7231493);\n
    cgc_init_holding(46, 4, \"AAPL\", 15038197);\n
    cgc_init_holding(46, 5, \"OAK\", 7537714);\n
    cgc_init_holding(46, 6, \"DDTEK\", 8976901);\n
    cgc_init_holding(46, 7, \"PALM\", 5854179);\n
    cgc_init_holding(46, 8, \"CROMU\", 13599544);\n
    cgc_init_holding(46, 9, \"PIRATE\", 6037412);\n
    cgc_init_holding(46, 10, \"MAPLE\", 1147968);\n
    cgc_init_holding(47, 0, \"GOOG\", 14545414);\n
    cgc_init_holding(47, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(47, 2, \"NRFIN\", 12402620);\n
    cgc_init_holding(47, 3, \"KPRCA\", 4575737);\n
    cgc_init_holding(47, 4, \"AAPL\", 7790090);\n
    cgc_init_holding(47, 5, \"OAK\", 3512099);\n
    cgc_init_holding(47, 6, \"DDTEK\", 7019948);\n
    cgc_init_holding(47, 7, \"PALM\", 4138803);\n
    cgc_init_holding(47, 8, \"CROMU\", 6069633);\n
    cgc_init_holding(47, 9, \"PIRATE\", 11084242);\n
    cgc_init_holding(47, 10, \"MAPLE\", 11015884);\n
    cgc_init_holding(48, 0, \"GOOG\", 4126452);\n
    cgc_init_holding(48, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(48, 2, \"NRFIN\", 11633903);\n
    cgc_init_holding(48, 3, \"KPRCA\", 12098836);\n
    cgc_init_holding(48, 4, \"AAPL\", 13406575);\n
    cgc_init_holding(48, 5, \"OAK\", 5137850);\n
    cgc_init_holding(48, 6, \"DDTEK\", 13244385);\n
    cgc_init_holding(48, 7, \"PALM\", 16412901);\n
    cgc_init_holding(48, 8, \"CROMU\", 6759125);\n
    cgc_init_holding(48, 9, \"PIRATE\", 4359236);\n
    cgc_init_holding(48, 10, \"MAPLE\", 6563685);\n
    cgc_init_holding(49, 0, \"GOOG\", 7100466);\n
    cgc_init_holding(49, 1, \"SK3WL\", 13433096);\n
    cgc_init_holding(49, 2, \"NRFIN\", 10989497);\n
    cgc_init_holding(49, 3, \"KPRCA\", 2311380);\n
    cgc_init_holding(49, 4, \"AAPL\", 7502571);\n
    cgc_init_holding(49, 5, \"OAK\", 12389247);\n
    cgc_init_holding(49, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(49, 7, \"PALM\", 3104833);\n
    cgc_init_holding(49, 8, \"CROMU\", 1310083);\n
    cgc_init_holding(49, 9, \"PIRATE\", 1396315);\n
    cgc_init_holding(49, 10, \"MAPLE\", 16022222);\n
    cgc_init_holding(50, 0, \"GOOG\", 9521571);\n
    cgc_init_holding(50, 1, \"SK3WL\", 9851935);\n
    cgc_init_holding(50, 2, \"NRFIN\", 6779201);\n
    cgc_init_holding(50, 3, \"KPRCA\", 8971014);\n
    cgc_init_holding(50, 4, \"AAPL\", 10194938);\n
    cgc_init_holding(50, 5, \"OAK\", 9568752);\n
    cgc_init_holding(50, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(50, 7, \"PALM\", 12504729);\n
    cgc_init_holding(50, 8, \"CROMU\", 16567495);\n
    cgc_init_holding(50, 9, \"PIRATE\", 12482248);\n
    cgc_init_holding(50, 10, \"MAPLE\", 14402093);\n
    cgc_init_holding(51, 0, \"GOOG\", 8938918);\n
    cgc_init_holding(51, 1, \"SK3WL\", 16422979);\n
    cgc_init_holding(51, 2, \"NRFIN\", 9717293);\n
    cgc_init_holding(51, 3, \"KPRCA\", 12927708);\n
    cgc_init_holding(51, 4, \"AAPL\", 4023909);\n
    cgc_init_holding(51, 5, \"OAK\", 4624917);\n
    cgc_init_holding(51, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(51, 7, \"PALM\", 11195165);\n
    cgc_init_holding(51, 8, \"CROMU\", 3630205);\n
    cgc_init_holding(51, 9, \"PIRATE\", 1666946);\n
    cgc_init_holding(51, 10, \"MAPLE\", 4870922);\n
    cgc_init_holding(52, 0, \"GOOG\", 1282578);\n
    cgc_init_holding(52, 1, \"SK3WL\", 3522009);\n
    cgc_init_holding(52, 2, \"NRFIN\", 14292547);\n
    cgc_init_holding(52, 3, \"KPRCA\", 1776975);\n
    cgc_init_holding(52, 4, \"AAPL\", 6899032);\n
    cgc_init_holding(52, 5, \"OAK\", 11253110);\n
    cgc_init_holding(52, 6, \"DDTEK\", 13974089);\n
    cgc_init_holding(52, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(52, 8, \"CROMU\", 9976917);\n
    cgc_init_holding(52, 9, \"PIRATE\", &g_41e4a8);\n
    cgc_init_holding(52, 10, \"MAPLE\", 11286875);\n
    cgc_init_holding(53, 0, \"GOOG\", 12585617);\n
    cgc_init_holding(53, 1, \"SK3WL\", 7232735);\n
    cgc_init_holding(53, 2, \"NRFIN\", 1775133);\n
    cgc_init_holding(53, 3, \"KPRCA\", 15060652);\n
    cgc_init_holding(53, 4, \"AAPL\", 14787293);\n
    cgc_init_holding(53, 5, \"OAK\", 5493411);\n
    cgc_init_holding(53, 6, \"DDTEK\", 1941501);\n
    cgc_init_holding(53, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(53, 8, \"CROMU\", 14717141);\n
    cgc_init_holding(53, 9, \"PIRATE\", 11124581);\n
    cgc_init_holding(53, 10, \"MAPLE\", 10364605);\n
    cgc_init_holding(54, 0, \"GOOG\", 13862266);\n
    cgc_init_holding(54, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(54, 2, \"NRFIN\", 13113962);\n
    cgc_init_holding(54, 3, \"KPRCA\", 16235160);\n
    cgc_init_holding(54, 4, \"AAPL\", 10907064);\n
    cgc_init_holding(54, 5, \"OAK\", 5753074);\n
    cgc_init_holding(54, 6, \"DDTEK\", 3400066);\n
    cgc_init_holding(54, 7, \"PALM\", 8520428);\n
    cgc_init_holding(54, 8, \"CROMU\", 0xcb2e00);\n
    cgc_init_holding(54, 9, \"PIRATE\", 1092891);\n
    cgc_init_holding(54, 10, \"MAPLE\", 11637532);\n
    cgc_init_holding(55, 0, \"GOOG\", 8247773);\n
    cgc_init_holding(55, 1, \"SK3WL\", 4520806);\n
    cgc_init_holding(55, 2, \"NRFIN\", 12714003);\n
    cgc_init_holding(55, 3, \"KPRCA\", 12930141);\n
    cgc_init_holding(55, 4, \"AAPL\", 16665840);\n
    cgc_init_holding(55, 5, \"OAK\", 5912732);\n
    cgc_init_holding(55, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(55, 7, \"PALM\", 3599110);\n
    cgc_init_holding(55, 8, \"CROMU\", 9691210);\n
    cgc_init_holding(55, 9, \"PIRATE\", 5729274);\n
    cgc_init_holding(55, 10, \"MAPLE\", 9155966);\n
    cgc_init_holding(56, 0, \"GOOG\", 2473636);\n
    cgc_init_holding(56, 1, \"SK3WL\", 8030245);\n
    cgc_init_holding(56, 2, \"NRFIN\", 2154361);\n
    cgc_init_holding(56, 3, \"KPRCA\", 15066579);\n
    cgc_init_holding(56, 4, \"AAPL\", 11435178);\n
    cgc_init_holding(56, 5, \"OAK\", 9445123);\n
    cgc_init_holding(56, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(56, 7, \"PALM\", 15336216);\n
    cgc_init_holding(56, 8, \"CROMU\", 2024765);\n
    cgc_init_holding(56, 9, \"PIRATE\", 8916118);\n
    cgc_init_holding(56, 10, \"MAPLE\", 14447678);\n
    cgc_init_holding(57, 0, \"GOOG\", 9638472);\n
    cgc_init_holding(57, 1, \"SK3WL\", 8460099);\n
    cgc_init_holding(57, 2, \"NRFIN\", 16471372);\n
    cgc_init_holding(57, 3, \"KPRCA\", 5887745);\n
    cgc_init_holding(57, 4, \"AAPL\", 6038510);\n
    cgc_init_holding(57, 5, \"OAK\", &g_4056c5);\n
    cgc_init_holding(57, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(57, 7, \"PALM\", 15256299);\n
    cgc_init_holding(57, 8, \"CROMU\", 13022481);\n
    cgc_init_holding(57, 9, \"PIRATE\", 15319177);\n
    cgc_init_holding(57, 10, \"MAPLE\", 13204310);\n
    cgc_init_holding(58, 0, \"GOOG\", 13859747);\n
    cgc_init_holding(58, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(58, 2, \"NRFIN\", 4166866);\n
    cgc_init_holding(58, 3, \"KPRCA\", 6713079);\n
    cgc_init_holding(58, 4, \"AAPL\", 7908228);\n
    cgc_init_holding(58, 5, \"OAK\", 15410039);\n
    cgc_init_holding(58, 6, \"DDTEK\", 16148226);\n
    cgc_init_holding(58, 7, \"PALM\", 1492497);\n
    cgc_init_holding(58, 8, \"CROMU\", 5704136);\n
    cgc_init_holding(58, 9, \"PIRATE\", 4759536);\n
    cgc_init_holding(58, 10, \"MAPLE\", 14976006);\n
    cgc_init_holding(59, 0, \"GOOG\", 6094082);\n
    cgc_init_holding(59, 1, \"SK3WL\", 2480789);\n
    cgc_init_holding(59, 2, \"NRFIN\", 16055547);\n
    cgc_init_holding(59, 3, \"KPRCA\", 7692201);\n
    cgc_init_holding(59, 4, \"AAPL\", 7394235);\n
    cgc_init_holding(59, 5, \"OAK\", 12207680);\n
    cgc_init_holding(59, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(59, 7, \"PALM\", 15624481);\n
    cgc_init_holding(59, 8, \"CROMU\", 8729836);\n
    cgc_init_holding(59, 9, \"PIRATE\", 7247667);\n
    cgc_init_holding(59, 10, \"MAPLE\", 1864472);\n
    cgc_init_holding(60, 0, \"GOOG\", 6143374);\n
    cgc_init_holding(60, 1, \"SK3WL\", 6514718);\n
    cgc_init_holding(60, 2, \"NRFIN\", 8077271);\n
    cgc_init_holding(60, 3, \"KPRCA\", 10153214);\n
    cgc_init_holding(60, 4, \"AAPL\", 1822598);\n
    cgc_init_holding(60, 5, \"OAK\", 10901156);\n
    cgc_init_holding(60, 6, \"DDTEK\", 9443404);\n
    cgc_init_holding(60, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(60, 8, \"CROMU\", 9853321);\n
    cgc_init_holding(60, 9, \"PIRATE\", 12226631);\n
    cgc_init_holding(60, 10, \"MAPLE\", 12759456);\n
    cgc_init_holding(61, 0, \"GOOG\", 15053460);\n
    cgc_init_holding(61, 1, \"SK3WL\", 2844003);\n
    cgc_init_holding(61, 2, \"NRFIN\", 13464004);\n
    cgc_init_holding(61, 3, \"KPRCA\", 9305531);\n
    cgc_init_holding(61, 4, \"AAPL\", 10214556);\n
    cgc_init_holding(61, 5, \"OAK\", 6983249);\n
    cgc_init_holding(61, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(61, 7, \"PALM\", 1987918);\n
    cgc_init_holding(61, 8, \"CROMU\", 11312556);\n
    cgc_init_holding(61, 9, \"PIRATE\", 8102804);\n
    cgc_init_holding(61, 10, \"MAPLE\", 16147711);\n
    cgc_init_holding(62, 0, \"GOOG\", 2843061);\n
    cgc_init_holding(62, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(62, 2, \"NRFIN\", 5779362);\n
    cgc_init_holding(62, 3, \"KPRCA\", 14292545);\n
    cgc_init_holding(62, 4, \"AAPL\", 15510736);\n
    cgc_init_holding(62, 5, \"OAK\", 2856217);\n
    cgc_init_holding(62, 6, \"DDTEK\", 11561860);\n
    cgc_init_holding(62, 7, \"PALM\", 16580772);\n
    cgc_init_holding(62, 8, \"CROMU\", 11043724);\n
    cgc_init_holding(62, 9, \"PIRATE\", 14155851);\n
    cgc_init_holding(62, 10, \"MAPLE\", 11034770);\n
    cgc_init_holding(63, 0, \"GOOG\", 14609439);\n
    cgc_init_holding(63, 1, \"SK3WL\", 10511271);\n
    cgc_init_holding(63, 2, \"NRFIN\", 1852432);\n
    cgc_init_holding(63, 3, \"KPRCA\", 10827303);\n
    cgc_init_holding(63, 4, \"AAPL\", 5241151);\n
    cgc_init_holding(63, 5, \"OAK\", 2778639);\n
    cgc_init_holding(63, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(63, 7, \"PALM\", 13442907);\n
    cgc_init_holding(63, 8, \"CROMU\", 8417882);\n
    cgc_init_holding(63, 9, \"PIRATE\", 11015539);\n
    cgc_init_holding(63, 10, \"MAPLE\", 2447684);\n
    cgc_init_holding(64, 0, \"GOOG\", 6339394);\n
    cgc_init_holding(64, 1, \"SK3WL\", 3673932);\n
    cgc_init_holding(64, 2, \"NRFIN\", 2319024);\n
    cgc_init_holding(64, 3, \"KPRCA\", 1867974);\n
    cgc_init_holding(64, 4, \"AAPL\", 2271985);\n
    cgc_init_holding(64, 5, \"OAK\", 3711519);\n
    cgc_init_holding(64, 6, \"DDTEK\", 1942460);\n
    cgc_init_holding(64, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(64, 8, \"CROMU\", 7933304);\n
    cgc_init_holding(64, 9, \"PIRATE\", 8379052);\n
    cgc_init_holding(64, 10, \"MAPLE\", 9294378);\n
    cgc_init_holding(65, 0, \"GOOG\", 2591017);\n
    cgc_init_holding(65, 1, \"SK3WL\", 5478390);\n
    cgc_init_holding(65, 2, \"NRFIN\", 3848650);\n
    cgc_init_holding(65, 3, \"KPRCA\", 9231715);\n
    cgc_init_holding(65, 4, \"AAPL\", 9178149);\n
    cgc_init_holding(65, 5, \"OAK\", 1417773);\n
    cgc_init_holding(65, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(65, 7, \"PALM\", 3150120);\n
    cgc_init_holding(65, 8, \"CROMU\", 3591382);\n
    cgc_init_holding(65, 9, \"PIRATE\", 12120170);\n
    cgc_init_holding(65, 10, \"MAPLE\", 8404641);\n
    cgc_init_holding(66, 0, \"GOOG\", 3249878);\n
    cgc_init_holding(66, 1, \"SK3WL\", 5677542);\n
    cgc_init_holding(66, 2, \"NRFIN\", 2899829);\n
    cgc_init_holding(66, 3, \"KPRCA\", 4525060);\n
    cgc_init_holding(66, 4, \"AAPL\", 5684300);\n
    cgc_init_holding(66, 5, \"OAK\", 8285880);\n
    cgc_init_holding(66, 6, \"DDTEK\", 3114578);\n
    cgc_init_holding(66, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(66, 8, \"CROMU\", 3136496);\n
    cgc_init_holding(66, 9, \"PIRATE\", 7436642);\n
    cgc_init_holding(66, 10, \"MAPLE\", 9557924);\n
    cgc_init_holding(67, 0, \"GOOG\", 9943232);\n
    cgc_init_holding(67, 1, \"SK3WL\", 10243760);\n
    cgc_init_holding(67, 2, \"NRFIN\", 11205024);\n
    cgc_init_holding(67, 3, \"KPRCA\", 5172102);\n
    cgc_init_holding(67, 4, \"AAPL\", 4061144);\n
    cgc_init_holding(67, 5, \"OAK\", 12408111);\n
    cgc_init_holding(67, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(67, 7, \"PALM\", 14784684);\n
    cgc_init_holding(67, 8, \"CROMU\", 16070561);\n
    cgc_init_holding(67, 9, \"PIRATE\", 4604413);\n
    cgc_init_holding(67, 10, \"MAPLE\", 9280211);\n
    cgc_init_holding(68, 0, \"GOOG\", 10721570);\n
    cgc_init_holding(68, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(68, 2, \"NRFIN\", 1371650);\n
    cgc_init_holding(68, 3, \"KPRCA\", 11461531);\n
    cgc_init_holding(68, 4, \"AAPL\", 3230262);\n
    cgc_init_holding(68, 5, \"OAK\", 2427359);\n
    cgc_init_holding(68, 6, \"DDTEK\", 1282727);\n
    cgc_init_holding(68, 7, \"PALM\", 7075011);\n
    cgc_init_holding(68, 8, \"CROMU\", 2277629);\n
    cgc_init_holding(68, 9, \"PIRATE\", 10275192);\n
    cgc_init_holding(68, 10, \"MAPLE\", &g_40d9e1);\n
    cgc_init_holding(69, 0, \"GOOG\", 11367300);\n
    cgc_init_holding(69, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(69, 2, \"NRFIN\", 9873926);\n
    cgc_init_holding(69, 3, \"KPRCA\", 10169213);\n
    cgc_init_holding(69, 4, \"AAPL\", &g_4237c4);\n
    cgc_init_holding(69, 5, \"OAK\", 8465192);\n
    cgc_init_holding(69, 6, \"DDTEK\", 1696409);\n
    cgc_init_holding(69, 7, \"PALM\", 6159680);\n
    cgc_init_holding(69, 8, \"CROMU\", 4010481);\n
    cgc_init_holding(69, 9, \"PIRATE\", 14469126);\n
    cgc_init_holding(69, 10, \"MAPLE\", 15804958);\n
    cgc_init_holding(70, 0, \"GOOG\", 6949049);\n
    cgc_init_holding(70, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(70, 2, \"NRFIN\", 2358002);\n
    cgc_init_holding(70, 3, \"KPRCA\", 11345952);\n
    cgc_init_holding(70, 4, \"AAPL\", 12242159);\n
    cgc_init_holding(70, 5, \"OAK\", 2239732);\n
    cgc_init_holding(70, 6, \"DDTEK\", 5356987);\n
    cgc_init_holding(70, 7, \"PALM\", 11822903);\n
    cgc_init_holding(70, 8, \"CROMU\", 1714463);\n
    cgc_init_holding(70, 9, \"PIRATE\", 2558635);\n
    cgc_init_holding(70, 10, \"MAPLE\", 8127364);\n
    cgc_init_holding(71, 0, \"GOOG\", 13736182);\n
    cgc_init_holding(71, 1, \"SK3WL\", 16294150);\n
    cgc_init_holding(71, 2, \"NRFIN\", 4851774);\n
    cgc_init_holding(71, 3, \"KPRCA\", 2328528);\n
    cgc_init_holding(71, 4, \"AAPL\", 8097256);\n
    cgc_init_holding(71, 5, \"OAK\", 12756603);\n
    cgc_init_holding(71, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(71, 7, \"PALM\", 10697697);\n
    cgc_init_holding(71, 8, \"CROMU\", 15419543);\n
    cgc_init_holding(71, 9, \"PIRATE\", 4160055);\n
    cgc_init_holding(71, 10, \"MAPLE\", 8095420);\n
    cgc_init_holding(72, 0, \"GOOG\", &g_42654a);\n
    cgc_init_holding(72, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(72, 2, \"NRFIN\", 1464943);\n
    cgc_init_holding(72, 3, \"KPRCA\", 1728588);\n
    cgc_init_holding(72, 4, \"AAPL\", 13875405);\n
    cgc_init_holding(72, 5, \"OAK\", 11729595);\n
    cgc_init_holding(72, 6, \"DDTEK\", 12116345);\n
    cgc_init_holding(72, 7, \"PALM\", 9579724);\n
    cgc_init_holding(72, 8, \"CROMU\", 5214966);\n
    cgc_init_holding(72, 9, \"PIRATE\", 12151145);\n
    cgc_init_holding(72, 10, \"MAPLE\", 8362213);\n
    cgc_init_holding(73, 0, \"GOOG\", 10997557);\n
    cgc_init_holding(73, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(73, 2, \"NRFIN\", 3512052);\n
    cgc_init_holding(73, 3, \"KPRCA\", 7866577);\n
    cgc_init_holding(73, 4, \"AAPL\", 8637268);\n
    cgc_init_holding(73, 5, \"OAK\", 2921250);\n
    cgc_init_holding(73, 6, \"DDTEK\", 15339788);\n
    cgc_init_holding(73, 7, \"PALM\", 6429327);\n
    cgc_init_holding(73, 8, \"CROMU\", 5708918);\n
    cgc_init_holding(73, 9, \"PIRATE\", 0xd1ab00);\n
    cgc_init_holding(73, 10, \"MAPLE\", 0x6bfd00);\n
    cgc_init_holding(74, 0, \"GOOG\", 16146022);\n
    cgc_init_holding(74, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(74, 2, \"NRFIN\", 8084313);\n
    cgc_init_holding(74, 3, \"KPRCA\", 10747493);\n
    cgc_init_holding(74, 4, \"AAPL\", 9331574);\n
    cgc_init_holding(74, 5, \"OAK\", 14612865);\n
    cgc_init_holding(74, 6, \"DDTEK\", 14456201);\n
    cgc_init_holding(74, 7, \"PALM\", 15638824);\n
    cgc_init_holding(74, 8, \"CROMU\", 5114190);\n
    cgc_init_holding(74, 9, \"PIRATE\", 15954376);\n
    cgc_init_holding(74, 10, \"MAPLE\", 5308003);\n
    cgc_init_holding(75, 0, \"GOOG\", 7113924);\n
    cgc_init_holding(75, 1, \"SK3WL\", &g_402083);\n
    cgc_init_holding(75, 2, \"NRFIN\", 7302506);\n
    cgc_init_holding(75, 3, \"KPRCA\", 14673068);\n
    cgc_init_holding(75, 4, \"AAPL\", 15710354);\n
    cgc_init_holding(75, 5, \"OAK\", 7975668);\n
    cgc_init_holding(75, 6, \"DDTEK\", 15730691);\n
    cgc_init_holding(75, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(75, 8, \"CROMU\", 3410437);\n
    cgc_init_holding(75, 9, \"PIRATE\", 8906117);\n
    cgc_init_holding(75, 10, \"MAPLE\", 9414731);\n
    cgc_init_holding(76, 0, \"GOOG\", 14833268);\n
    cgc_init_holding(76, 1, \"SK3WL\", 5009385);\n
    cgc_init_holding(76, 2, \"NRFIN\", 16662223);\n
    cgc_init_holding(76, 3, \"KPRCA\", 12544022);\n
    cgc_init_holding(76, 4, \"AAPL\", 1708631);\n
    cgc_init_holding(76, 5, \"OAK\", 6890600);\n
    cgc_init_holding(76, 6, \"DDTEK\", 6346253);\n
    cgc_init_holding(76, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(76, 8, \"CROMU\", 2017784);\n
    cgc_init_holding(76, 9, \"PIRATE\", 2516169);\n
    cgc_init_holding(76, 10, \"MAPLE\", 15957197);\n
    cgc_init_holding(77, 0, \"GOOG\", 16725064);\n
    cgc_init_holding(77, 1, \"SK3WL\", &g_41813f);\n
    cgc_init_holding(77, 2, \"NRFIN\", 11590977);\n
    cgc_init_holding(77, 3, \"KPRCA\", 15983349);\n
    cgc_init_holding(77, 4, \"AAPL\", 12612147);\n
    cgc_init_holding(77, 5, \"OAK\", 16268769);\n
    cgc_init_holding(77, 6, \"DDTEK\", 12190990);\n
    cgc_init_holding(77, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(77, 8, \"CROMU\", 16133556);\n
    cgc_init_holding(77, 9, \"PIRATE\", 2124874);\n
    cgc_init_holding(77, 10, \"MAPLE\", 14701799);\n
    cgc_init_holding(78, 0, \"GOOG\", 2787457);\n
    cgc_init_holding(78, 1, \"SK3WL\", 5750399);\n
    cgc_init_holding(78, 2, \"NRFIN\", 16412843);\n
    cgc_init_holding(78, 3, \"KPRCA\", 15409168);\n
    cgc_init_holding(78, 4, \"AAPL\", 6932703);\n
    cgc_init_holding(78, 5, \"OAK\", 8020924);\n
    cgc_init_holding(78, 6, \"DDTEK\", 2190798);\n
    cgc_init_holding(78, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(78, 8, \"CROMU\", 10638180);\n
    cgc_init_holding(78, 9, \"PIRATE\", 8047783);\n
    cgc_init_holding(78, 10, \"MAPLE\", 14872850);\n
    cgc_init_holding(79, 0, \"GOOG\", 5712747);\n
    cgc_init_holding(79, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(79, 2, \"NRFIN\", 5038932);\n
    cgc_init_holding(79, 3, \"KPRCA\", 16287904);\n
    cgc_init_holding(79, 4, \"AAPL\", 7591532);\n
    cgc_init_holding(79, 5, \"OAK\", 1801423);\n
    cgc_init_holding(79, 6, \"DDTEK\", 4942595);\n
    cgc_init_holding(79, 7, \"PALM\", 6893675);\n
    cgc_init_holding(79, 8, \"CROMU\", 10679577);\n
    cgc_init_holding(79, 9, \"PIRATE\", 8771892);\n
    cgc_init_holding(79, 10, \"MAPLE\", 8812499);\n
    cgc_init_holding(80, 0, \"GOOG\", 3494735);\n
    cgc_init_holding(80, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(80, 2, \"NRFIN\", 15660796);\n
    cgc_init_holding(80, 3, \"KPRCA\", 7079911);\n
    cgc_init_holding(80, 4, \"AAPL\", 3192245);\n
    cgc_init_holding(80, 5, \"OAK\", 8257291);\n
    cgc_init_holding(80, 6, \"DDTEK\", 1102113);\n
    cgc_init_holding(80, 7, \"PALM\", 9285787);\n
    cgc_init_holding(80, 8, \"CROMU\", 7689556);\n
    cgc_init_holding(80, 9, \"PIRATE\", 11300844);\n
    cgc_init_holding(80, 10, \"MAPLE\", 3570038);\n
    cgc_init_holding(81, 0, \"GOOG\", 3671913);\n
    cgc_init_holding(81, 1, \"SK3WL\", 14140569);\n
    cgc_init_holding(81, 2, \"NRFIN\", 1582316);\n
    cgc_init_holding(81, 3, \"KPRCA\", 8350548);\n
    cgc_init_holding(81, 4, \"AAPL\", 15291318);\n
    cgc_init_holding(81, 5, \"OAK\", 7800388);\n
    cgc_init_holding(81, 6, \"DDTEK\", 7152120);\n
    cgc_init_holding(81, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(81, 8, \"CROMU\", 5563149);\n
    cgc_init_holding(81, 9, \"PIRATE\", 4914026);\n
    cgc_init_holding(81, 10, \"MAPLE\", 1023698);\n
    cgc_init_holding(82, 0, \"GOOG\", 16486627);\n
    cgc_init_holding(82, 1, \"SK3WL\", 6574802);\n
    cgc_init_holding(82, 2, \"NRFIN\", 16413030);\n
    cgc_init_holding(82, 3, \"KPRCA\", 14936637);\n
    cgc_init_holding(82, 4, \"AAPL\", 3672900);\n
    cgc_init_holding(82, 5, \"OAK\", 13902760);\n
    cgc_init_holding(82, 6, \"DDTEK\", 8258594);\n
    cgc_init_holding(82, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(82, 8, \"CROMU\", 12641224);\n
    cgc_init_holding(82, 9, \"PIRATE\", 8376158);\n
    cgc_init_holding(82, 10, \"MAPLE\", 3275268);\n
    cgc_init_holding(83, 0, \"GOOG\", 11912262);\n
    cgc_init_holding(83, 1, \"SK3WL\", 6228655);\n
    cgc_init_holding(83, 2, \"NRFIN\", 14793059);\n
    cgc_init_holding(83, 3, \"KPRCA\", 7595741);\n
    cgc_init_holding(83, 4, \"AAPL\", 1758682);\n
    cgc_init_holding(83, 5, \"OAK\", 2460156);\n
    cgc_init_holding(83, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(83, 7, \"PALM\", 10657454);\n
    cgc_init_holding(83, 8, \"CROMU\", 15520122);\n
    cgc_init_holding(83, 9, \"PIRATE\", 1399931);\n
    cgc_init_holding(83, 10, \"MAPLE\", 7799706);\n
    cgc_init_holding(84, 0, \"GOOG\", 14374714);\n
    cgc_init_holding(84, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(84, 2, \"NRFIN\", 6560926);\n
    cgc_init_holding(84, 3, \"KPRCA\", 15669180);\n
    cgc_init_holding(84, 4, \"AAPL\", 12366596);\n
    cgc_init_holding(84, 5, \"OAK\", 9024028);\n
    cgc_init_holding(84, 6, \"DDTEK\", 7452913);\n
    cgc_init_holding(84, 7, \"PALM\", 10582196);\n
    cgc_init_holding(84, 8, \"CROMU\", 2746395);\n
    cgc_init_holding(84, 9, \"PIRATE\", 11199896);\n
    cgc_init_holding(84, 10, \"MAPLE\", 8404624);\n
    cgc_init_holding(85, 0, \"GOOG\", 10457180);\n
    cgc_init_holding(85, 1, \"SK3WL\", 8013075);\n
    cgc_init_holding(85, 2, \"NRFIN\", 8314568);\n
    cgc_init_holding(85, 3, \"KPRCA\", 7326279);\n
    cgc_init_holding(85, 4, \"AAPL\", 12665809);\n
    cgc_init_holding(85, 5, \"OAK\", 2397706);\n
    cgc_init_holding(85, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(85, 7, \"PALM\", 5660432);\n
    cgc_init_holding(85, 8, \"CROMU\", 10432953);\n
    cgc_init_holding(85, 9, \"PIRATE\", 12261688);\n
    cgc_init_holding(85, 10, \"MAPLE\", 12782155);\n
    cgc_init_holding(86, 0, \"GOOG\", 9567690);\n
    cgc_init_holding(86, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(86, 2, \"NRFIN\", 15521683);\n
    cgc_init_holding(86, 3, \"KPRCA\", 15940535);\n
    cgc_init_holding(86, 4, \"AAPL\", 3745123);\n
    cgc_init_holding(86, 5, \"OAK\", 2678419);\n
    cgc_init_holding(86, 6, \"DDTEK\", 1698777);\n
    cgc_init_holding(86, 7, \"PALM\", 10671356);\n
    cgc_init_holding(86, 8, \"CROMU\", 1393160);\n
    cgc_init_holding(86, 9, \"PIRATE\", 7388263);\n
    cgc_init_holding(86, 10, \"MAPLE\", 8568913);\n
    cgc_init_holding(87, 0, \"GOOG\", 16702215);\n
    cgc_init_holding(87, 1, \"SK3WL\", 9128904);\n
    cgc_init_holding(87, 2, \"NRFIN\", 5635369);\n
    cgc_init_holding(87, 3, \"KPRCA\", 15665003);\n
    cgc_init_holding(87, 4, \"AAPL\", 11689635);\n
    cgc_init_holding(87, 5, \"OAK\", 6718626);\n
    cgc_init_holding(87, 6, \"DDTEK\", 14856793);\n
    cgc_init_holding(87, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(87, 8, \"CROMU\", 13131543);\n
    cgc_init_holding(87, 9, \"PIRATE\", 7093023);\n
    cgc_init_holding(87, 10, \"MAPLE\", 12546139);\n
    cgc_init_holding(88, 0, \"GOOG\", 8969934);\n
    cgc_init_holding(88, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(88, 2, \"NRFIN\", 2934940);\n
    cgc_init_holding(88, 3, \"KPRCA\", 8910883);\n
    cgc_init_holding(88, 4, \"AAPL\", 3531946);\n
    cgc_init_holding(88, 5, \"OAK\", 15537263);\n
    cgc_init_holding(88, 6, \"DDTEK\", 2483600);\n
    cgc_init_holding(88, 7, \"PALM\", 6217737);\n
    cgc_init_holding(88, 8, \"CROMU\", 16624633);\n
    cgc_init_holding(88, 9, \"PIRATE\", 15306041);\n
    cgc_init_holding(88, 10, \"MAPLE\", 5975488);\n
    cgc_init_holding(89, 0, \"GOOG\", 14401400);\n
    cgc_init_holding(89, 1, \"SK3WL\", 2836599);\n
    cgc_init_holding(89, 2, \"NRFIN\", 10175949);\n
    cgc_init_holding(89, 3, \"KPRCA\", 2925119);\n
    cgc_init_holding(89, 4, \"AAPL\", 2570426);\n
    cgc_init_holding(89, 5, \"OAK\", 8634400);\n
    cgc_init_holding(89, 6, \"DDTEK\", 6959244);\n
    cgc_init_holding(89, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(89, 8, \"CROMU\", 14143461);\n
    cgc_init_holding(89, 9, \"PIRATE\", 12596979);\n
    cgc_init_holding(89, 10, \"MAPLE\", 3518919);\n
    cgc_init_holding(90, 0, \"GOOG\", 13688486);\n
    cgc_init_holding(90, 1, \"SK3WL\", 10770343);\n
    cgc_init_holding(90, 2, \"NRFIN\", 13479577);\n
    cgc_init_holding(90, 3, \"KPRCA\", 3711162);\n
    cgc_init_holding(90, 4, \"AAPL\", 16061864);\n
    cgc_init_holding(90, 5, \"OAK\", 10855270);\n
    cgc_init_holding(90, 6, \"DDTEK\", 12291769);\n
    cgc_init_holding(90, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(90, 8, \"CROMU\", 7482761);\n
    cgc_init_holding(90, 9, \"PIRATE\", 10481084);\n
    cgc_init_holding(90, 10, \"MAPLE\", 10474951);\n
    cgc_init_holding(91, 0, \"GOOG\", 11854170);\n
    cgc_init_holding(91, 1, \"SK3WL\", 1002800);\n
    cgc_init_holding(91, 2, \"NRFIN\", 9758578);\n
    cgc_init_holding(91, 3, \"KPRCA\", 10599882);\n
    cgc_init_holding(91, 4, \"AAPL\", 14373358);\n
    cgc_init_holding(91, 5, \"OAK\", 3491571);\n
    cgc_init_holding(91, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(91, 7, \"PALM\", 8742348);\n
    cgc_init_holding(91, 8, \"CROMU\", 10194246);\n
    cgc_init_holding(91, 9, \"PIRATE\", 14896322);\n
    cgc_init_holding(91, 10, \"MAPLE\", 15584914);\n
    cgc_init_holding(92, 0, \"GOOG\", 2709273);\n
    cgc_init_holding(92, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(92, 2, \"NRFIN\", 6682562);\n
    cgc_init_holding(92, 3, \"KPRCA\", 3447284);\n
    cgc_init_holding(92, 4, \"AAPL\", 9172244);\n
    cgc_init_holding(92, 5, \"OAK\", 7673008);\n
    cgc_init_holding(92, 6, \"DDTEK\", 7230331);\n
    cgc_init_holding(92, 7, \"PALM\", 11705022);\n
    cgc_init_holding(92, 8, \"CROMU\", 9207167);\n
    cgc_init_holding(92, 9, \"PIRATE\", 15335959);\n
    cgc_init_holding(92, 10, \"MAPLE\", 6256057);\n
    cgc_init_holding(93, 0, \"GOOG\", 6853876);\n
    cgc_init_holding(93, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(93, 2, \"NRFIN\", 1481538);\n
    cgc_init_holding(93, 3, \"KPRCA\", 13172296);\n
    cgc_init_holding(93, 4, \"AAPL\", 14457233);\n
    cgc_init_holding(93, 5, \"OAK\", 9962927);\n
    cgc_init_holding(93, 6, \"DDTEK\", 14147388);\n
    cgc_init_holding(93, 7, \"PALM\", 12221322);\n
    cgc_init_holding(93, 8, \"CROMU\", 6393747);\n
    cgc_init_holding(93, 9, \"PIRATE\", 16596042);\n
    cgc_init_holding(93, 10, \"MAPLE\", 5943723);\n
    cgc_init_holding(94, 0, \"GOOG\", 11970548);\n
    cgc_init_holding(94, 1, \"SK3WL\", 8225578);\n
    cgc_init_holding(94, 2, \"NRFIN\", 3727297);\n
    cgc_init_holding(94, 3, \"KPRCA\", 6302378);\n
    cgc_init_holding(94, 4, \"AAPL\", 15614148);\n
    cgc_init_holding(94, 5, \"OAK\", 14270557);\n
    cgc_init_holding(94, 6, \"DDTEK\", 3765633);\n
    cgc_init_holding(94, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(94, 8, \"CROMU\", 9647374);\n
    cgc_init_holding(94, 9, \"PIRATE\", 5053676);\n
    cgc_init_holding(94, 10, \"MAPLE\", 2402456);\n
    cgc_init_holding(95, 0, \"GOOG\", 12314570);\n
    cgc_init_holding(95, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(95, 2, \"NRFIN\", 15021239);\n
    cgc_init_holding(95, 3, \"KPRCA\", 8283273);\n
    cgc_init_holding(95, 4, \"AAPL\", 5548686);\n
    cgc_init_holding(95, 5, \"OAK\", 15807611);\n
    cgc_init_holding(95, 6, \"DDTEK\", 16561606);\n
    cgc_init_holding(95, 7, \"PALM\", 11124284);\n
    cgc_init_holding(95, 8, \"CROMU\", 13590917);\n
    cgc_init_holding(95, 9, \"PIRATE\", 11378273);\n
    cgc_init_holding(95, 10, \"MAPLE\", 16135094);\n
    cgc_init_holding(96, 0, \"GOOG\", 1003383);\n
    cgc_init_holding(96, 1, \"SK3WL\", 4294967295);\n
    cgc_init_holding(96, 2, \"NRFIN\", 13581236);\n
    cgc_init_holding(96, 3, \"KPRCA\", 15529685);\n
    cgc_init_holding(96, 4, \"AAPL\", 12596233);\n
    cgc_init_holding(96, 5, \"OAK\", 10046791);\n
    cgc_init_holding(96, 6, \"DDTEK\", 5229777);\n
    cgc_init_holding(96, 7, \"PALM\", 13897105);\n
    cgc_init_holding(96, 8, \"CROMU\", 12115604);\n
    cgc_init_holding(96, 9, \"PIRATE\", 14707702);\n
    cgc_init_holding(96, 10, \"MAPLE\", 16634243);\n
    cgc_init_holding(97, 0, \"GOOG\", 3508084);\n
    cgc_init_holding(97, 1, \"SK3WL\", 8303761);\n
    cgc_init_holding(97, 2, \"NRFIN\", 12053208);\n
    cgc_init_holding(97, 3, \"KPRCA\", 1426317);\n
    cgc_init_holding(97, 4, \"AAPL\", 7446843);\n
    cgc_init_holding(97, 5, \"OAK\", 15625017);\n
    cgc_init_holding(97, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(97, 7, \"PALM\", 8714698);\n
    cgc_init_holding(97, 8, \"CROMU\", 5724050);\n
    cgc_init_holding(97, 9, \"PIRATE\", 14289022);\n
    cgc_init_holding(97, 10, \"MAPLE\", 2516546);\n
    cgc_init_holding(98, 0, \"GOOG\", 5255555);\n
    cgc_init_holding(98, 1, \"SK3WL\", 8304671);\n
    cgc_init_holding(98, 2, \"NRFIN\", 6669642);\n
    cgc_init_holding(98, 3, \"KPRCA\", 3654473);\n
    cgc_init_holding(98, 4, \"AAPL\", 9432303);\n
    cgc_init_holding(98, 5, \"OAK\", 6476300);\n
    cgc_init_holding(98, 6, \"DDTEK\", 16520773);\n
    cgc_init_holding(98, 7, \"PALM\", 4294967295);\n
    cgc_init_holding(98, 8, \"CROMU\", 9705914);\n
    cgc_init_holding(98, 9, \"PIRATE\", 11793019);\n
    cgc_init_holding(98, 10, \"MAPLE\", 7968175);\n
    cgc_init_holding(99, 0, \"GOOG\", 10028966);\n
    cgc_init_holding(99, 1, \"SK3WL\", 15284950);\n
    cgc_init_holding(99, 2, \"NRFIN\", 9615739);\n
    cgc_init_holding(99, 3, \"KPRCA\", 10343294);\n
    cgc_init_holding(99, 4, \"AAPL\", 5544000);\n
    cgc_init_holding(99, 5, \"OAK\", 8899801);\n
    cgc_init_holding(99, 6, \"DDTEK\", 4294967295);\n
    cgc_init_holding(99, 7, \"PALM\", 14290409);\n
    cgc_init_holding(99, 8, \"CROMU\", 9381942);\n
    cgc_init_holding(99, 9, \"PIRATE\", 7062546);\n
    return cgc_init_holding(99, 10, \"MAPLE\", 15755308);\n
}\n
", "4231776:cgc_checksum": "extern char cgc_ACCOUNTS;\n
\n
long long cgc_checksum(unsigned long a0, unsigned long a1, char *a2, char *a3)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    char *v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x3c]\n
    char v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x10]\n
    char v9;  // [bp-0xc]\n
    unsigned int v11;  // ymm0\n
    unsigned long v12;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v11;\n
    for (v6 = 0; v6 < 32; v6 += 1)\n
    {\n
        a3[v6] = 0;\n
    }\n
    v5 = 24;\n
    for (v4 = 0; v4 < 8; v4 += 1)\n
    {\n
        a3[v4] = a2[v4];\n
        a3[v4 + v5] = a2[v4];\n
    }\n
    cgc_memcpy(&v8, a3 + 8, 4);\n
    cgc_memcpy(&v9, a3 + 12, 4);\n
    *(&v3) = a0 * 2 + a1;\n
    v2 = 16;\n
    cgc_memcpy(&v3, &a3[v2], 4);\n
    v1 = &(&cgc_ACCOUNTS)[420 * a0 + 4];\n
    v12 = cgc_memcpy(v1, &a3[4 + v2], 4);\n
    for (v0 = 0; v0 < 32; v0 = v12)\n
    {\n
        a3[v0] = a3[v0] ^ v1[v0];\n
        v12 = v0 + 1;\n
    }\n
    return v12;\n
}\n
", "4232154:sub_4093da": null, "4232160:cgc_match_holding": "extern char cgc_ACCOUNTS;\n
\n
long long cgc_match_holding(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < 32)\n
        {\n
            v1 = &(&cgc_ACCOUNTS)[420 * a0 + 36 + 12 * v2];\n
            v0 = cgc_memcmp(a1 + 8, v1 + 4, 8);\n
            if (!v0)\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4232322:sub_409482": null, "4232336:cgc_add_holding": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_add_holding(unsigned long long a0, struct_0 *a1)\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
\n
    v0 = cgc_match_holding(a0, a1);\n
    if (!v0)\n
        cgc__terminate(a0);\n
    if (*(v0) != -1)\n
        *(v0) = *(v0) + a1->field_4;\n
    return v0;\n
}\n
", "4232430:sub_4094ee": null, "4232432:cgc_dec_holding": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_dec_holding(unsigned long long a0, struct_0 *a1)\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
\n
    v0 = cgc_match_holding(a0, a1);\n
    if (!v0)\n
        cgc__terminate(a0);\n
    if (*(v0) > a1->field_4)\n
        *(v0) = *(v0) - a1->field_4;\n
    return v0;\n
}\n
", "4232532:sub_409554": null, "4232544:cgc_fill_order": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern unsigned int cgc_ACCOUNTS;\n
\n
long long cgc_fill_order(unsigned long long a0, struct_1 *a1, unsigned int *a2)\n
{\n
    int tmp_121;  // tmp #121\n
    int tmp_122;  // tmp #122\n
    int tmp_119;  // tmp #119\n
    unsigned int *v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // ymm0\n
    int v7;  // xmm0\n
    int v10;  // xmm0\n
    int v11;  // xmm0\n
\n
    v3 = &a2[1];\n
    v6 = a1->field_4;\n
    s_2c =L (xmm0<16> * Conv(32->128, Load(addr=Load(addr=stack_base-40, size=8, endness=Iend_LE), size=4, endness=Iend_LE)))<4>\n
    tmp_121 = SubV(tmp_122, tmp_119);\n
    *(&(&cgc_ACCOUNTS)[105 * a0]) = tmp_121;\n
    v10 = 0;\n
    *(&v10) = (&cgc_ACCOUNTS)[105 * *(a2)];\n
    xmm0<16> = (xmm0<16> + Conv(32->128, Load(addr=stack_base-44, size=4, endness=Iend_LE)))\n
    (&cgc_ACCOUNTS)[105 * *(a2)] = v11;\n
    v1 = cgc_match_holding(*(a2), a1);\n
    if (!v1)\n
        cgc__terminate(a0);\n
    cgc_dec_holding(*(a2), a1);\n
    v0 = cgc_match_holding(a0, a1);\n
    if (!v0)\n
        cgc__terminate(a0);\n
    cgc_add_holding(a0, a1);\n
    if (a1->field_4 > v3->field_4)\n
        cgc__terminate(a0);\n
    v3->field_4 = v3->field_4 - a1->field_4;\n
    if (!v3->field_4)\n
    {\n
        v3->field_8 = 0;\n
        v3->field_0 = 0;\n
        v4 = 0xff0000;\n
        return v4;\n
    }\n
    else if (*(v0) != -1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 238;\n
        return v4;\n
    }\n
}\n
", "4232961:sub_409701": null, "4232976:cgc_match_symbol": "long long cgc_match_symbol(unsigned long a0, unsigned long a1)\n
{\n
    return cgc_memcmp(a0 + 8, a1 + 8, 8);\n
}\n
", "4233024:cgc_get_current_ask": "extern char ORDERBOOK;\n
\n
long long cgc_get_current_ask(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (v1 < 0x400)\n
    {\n
        if (*(&(&ORDERBOOK)[56 + 60 * v1]) != 255)\n
        {\n
LABEL_409845:\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = cgc_memcmp(&(&ORDERBOOK)[60 * v1 + 12], a0, 8);\n
            if (v0)\n
            {\n
LABEL_409840:\n
                goto LABEL_409845;\n
            }\n
            if (*(&(&ORDERBOOK)[8 + 60 * v1]) <= 0)\n
                goto LABEL_409840;\n
            if (*(&(&ORDERBOOK)[52 + 60 * v1]) >= v2 && !(!v2))\n
                goto LABEL_40983b;\n
            v2 = *(&(&ORDERBOOK)[52 + 60 * v1]);\n
            v3 = *(&(&ORDERBOOK)[4 + 60 * v1]);\n
LABEL_40983b:\n
            goto LABEL_409840;\n
        }\n
    }\n
    return v1 + 1;\n
}\n
", "4233315:sub_409863": null, "4233328:cgc_find_sell_order": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
extern char ORDERBOOK;\n
\n
long long cgc_find_sell_order(unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x14]\n
\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < 0x400; v2 += 1)\n
    {\n
        v1 = &(&ORDERBOOK)[4 + 60 * v2];\n
        v0 = 1;\n
        if (v1 && v1->field_8)\n
            v0 = cgc_match_symbol(v1, a0);\n
        if (v1 && !v0 && !(CmpF(a0[0], v1->field_0) & 1) && v1->field_4 > 0 && v1->field_4 >= a0[1])\n
        {\n
            if (!v4)\n
            {\n
                v4 = *(&(&ORDERBOOK)[52 + 60 * v2]);\n
                v3 = &(&ORDERBOOK)[60 * v2];\n
            }\n
            else if (*(&(&ORDERBOOK)[52 + 60 * v2]) < v4)\n
            {\n
                v4 = *(&(&ORDERBOOK)[52 + 60 * v2]);\n
                v3 = &(&ORDERBOOK)[60 * v2];\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4233708:sub_4099ec": null, "4233712:cgc_add_to_order_book": "extern unsigned int ORDERBOOK;\n
extern unsigned int ORDER_ID;\n
\n
long long cgc_add_to_order_book(unsigned int a0[2], unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 0x400)\n
        {\n
            v2 = 16777215;\n
            return v2;\n
        }\n
        if (!(&ORDERBOOK)[3 + 15 * v1])\n
            break;\n
        v1 += 1;\n
    }\n
    v0 = &(&ORDERBOOK)[3 + 15 * v1];\n
    cgc_memcpy(a0 + 1, v0, 8);\n
    (&ORDERBOOK)[2 + 15 * v1] = a0[1];\n
    (&ORDERBOOK)[1 + 15 * v1] = a0[0];\n
    (&ORDERBOOK)[15 * v1] = a1;\n
    if (a2 && a2 != 255)\n
        cgc__terminate(a0);\n
    (&ORDERBOOK)[14 + 15 * v1] = a2;\n
    (&ORDERBOOK)[13 + 15 * v1] = ORDER_ID;\n
    ORDER_ID = ORDER_ID + 1;\n
    v2 = 153;\n
    return v2;\n
}\n
", "4234061:sub_409b4d": null, "4234064:cgc_check_account_balance_can_buy": null, "4234176:cgc_generic_resp": "long long cgc_generic_resp(unsigned int a0[3], unsigned long a1, unsigned long a2)\n
{\n
    a0[0] = 1;\n
    a0[1] = a1;\n
    a0[2] = a2;\n
    return a0;\n
}\n
", "4234222:sub_409bee": null, "4234224:cgc_gen_order_fill_msg": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_gen_order_fill_msg(unsigned int a0[3], unsigned long a1, char *a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
\n
    cgc_generic_resp(a0, a1, a4);\n
    if (a1 && a1 != 255)\n
        cgc__terminate(a0);\n
    v0 = &a0[2];\n
    cgc_memcpy(a2, v0, 8);\n
    v0->field_8 = a3;\n
    return 4;\n
}\n
", "4234349:sub_409c6d": null, "4234352:cgc_check_account_holding_in_qty_sell": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char cgc_ACCOUNTS;\n
\n
long long cgc_check_account_holding_in_qty_sell(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = &(&cgc_ACCOUNTS)[420 * a1];\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 32)\n
        {\n
            v3 = 136;\n
            return v3;\n
        }\n
        v0 = v2 + 36 + v1 * 12;\n
        if (!cgc_memcmp(v0 + 1, a0 + 1, 8))\n
            break;\n
        v1 += 1;\n
    }\n
    if (a0->field_4 <= *(v0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = 102;\n
    return v3;\n
}\n
", "4234546:sub_409d32": null, "4234560:cgc_fill_buy_order": "long long cgc_fill_buy_order(unsigned long a0, unsigned int *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a1)\n
    {\n
        v0 = 136;\n
        return v0;\n
    }\n
    v0 = cgc_fill_order(a0, a2, a1);\n
    return v0;\n
}\n
", "4234630:sub_409d86": null, "4234640:cgc_run_option_transaction": "long long cgc_run_option_transaction(unsigned long a0, unsigned int a1[2], unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (!a2)\n
    {\n
        v3 = cgc_check_account_balance_can_buy(a1, a0);\n
        if (v3)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v2 = cgc_find_sell_order(a1);\n
        v1 = cgc_fill_buy_order(a0, v2, a1);\n
        if (!v1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v4 = v1;\n
        return v4;\n
    }\n
    else if (a2 == 255)\n
    {\n
        v0 = cgc_check_account_holding_in_qty_sell(a1, a0);\n
        if (v0)\n
        {\n
            v4 = v0;\n
            return v4;\n
        }\n
        v4 = cgc_add_to_order_book(a1, a0, 255);\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 241;\n
        return v4;\n
    }\n
}\n
", "4234864:cgc_get_data_len": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_get_data_len(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    v0 = a0->field_4;\n
    if (!v0)\n
    {\n
        v1 = 40;\n
        return v1;\n
    }\n
    else if (v0 == 255)\n
    {\n
        v1 = 40;\n
        return v1;\n
    }\n
    else if (v0 != 0xdd00)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 4;\n
        return v1;\n
    }\n
}\n
", "4234986:sub_409eea": null, "4234992:cgc_recv_rest": "long long cgc_recv_rest(void* a0)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
\n
    v0 = cgc_get_data_len(a0);\n
    return cgc_recv_all(v0, a0 + 32);\n
}\n
", "4235040:cgc_err_resp": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_err_resp(unsigned long a0, unsigned int a1[5], struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    if (a0 != 238)\n
    {\n
        a2->field_18 = a0;\n
        a2->field_8 = a1[2];\n
        a2->field_4 = 65535;\n
        a2->field_0 = 1;\n
        v1 = 32;\n
        return v1;\n
    }\n
    v0 = &a1[1 + 1];\n
    cgc_memcpy(a1[4], &a2->field_18, a1[3]);\n
    a2->field_c = a1[3];\n
    v1 = a2->field_c;\n
    return v1;\n
}\n
", "4235211:sub_409fcb": null, "4235216:cgc_checksum_order": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_checksum_order(unsigned long a0, struct_0 *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    cgc_checksum(a0, a1->field_4, a1 + 1, a2);\n
    v0 = cgc_memcmp(a2, a1 + 2, 32);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 204;\n
    return v1;\n
}\n
", "4235333:sub_40a045": null, "4235344:cgc_run_sell": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_run_sell(unsigned int a0[3], unsigned int a1[3])\n
{\n
    unsigned long v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned long long v2;  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c]\n
    char v6;  // [bp-0x48]\n
    struct_0 *v7;  // [bp-0x20]\n
    unsigned long long v9;  // rax, Other Possible Types: unsigned long\n
\n
    v7 = &a0[2];\n
    v5 = cgc_checksum_order(a0[2], v7, &v6);\n
    if (v5)\n
        cgc__terminate(a0);\n
    v4 = cgc_run_option_transaction(a0[2], v7, a0[1]);\n
    v3 = 0;\n
    if (!v4)\n
    {\n
        v0 = cgc_gen_order_fill_msg(a1, 255, v7 + 1, v7->field_4, a0[2]);\n
        v9 = cgc_transmit_all(a1, v0 + 32);\n
        if (!v9)\n
            return v9;\n
        v9 = cgc__terminate(a0);\n
    }\n
    else\n
    {\n
        v2 = cgc_err_resp(v4, a0, a1);\n
        v9 = cgc_transmit_all(a1, v2);\n
        v1 = v9;\n
        if (!v1)\n
            return v9;\n
        v9 = cgc__terminate(a0);\n
    }\n
}\n
", "4235607:sub_40a157": null, "4235616:cgc_run_buy": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_run_buy(unsigned int a0[3], unsigned int a1[3])\n
{\n
    unsigned long v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x5c]\n
    unsigned long long v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    char v5;  // [bp-0x48]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
\n
    v6 = &a0[2];\n
    v4 = cgc_checksum_order(a0[2], v6, &v5);\n
    if (v4)\n
        cgc__terminate(a0);\n
    v3 = cgc_run_option_transaction(a0[2], v6, a0[1]);\n
    if (!v3)\n
    {\n
        v0 = cgc_gen_order_fill_msg(a1, 0, v6 + 1, v6->field_4, a0[2]);\n
        v8 = cgc_transmit_all(a1, v0 + 32);\n
        if (!v8)\n
            return v8;\n
        v8 = cgc__terminate(a0);\n
    }\n
    else\n
    {\n
        v2 = cgc_err_resp(v3, a0, a1);\n
        v8 = cgc_transmit_all(a1, v2);\n
        v1 = v8;\n
        if (v1)\n
            v8 = cgc__terminate(a0);\n
        if (v3 != 238)\n
            return v8;\n
        v8 = cgc__terminate(a0);\n
    }\n
}\n
", "4235892:sub_40a274": null, "4235904:cgc_run_quote": "long long cgc_run_quote(void* a0, unsigned int *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x20]\n
    unsigned int v3;  // ymm0\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
    unsigned long long v7;  // r9\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = &a0[24];\n
    if (!v1 + 1)\n
    {\n
        cgc__terminate(a0);\n
        main(a0, a1, v4, v5, v6, v7); /* do not return */\n
    }\n
    cgc_get_current_ask(v1 + 1);\n
    *(v1) = v3;\n
    v0 = cgc_get_data_len(a0);\n
    cgc_memcpy(a0, a1, v0 + 32);\n
    *(a1) = 1;\n
    v8 = cgc_transmit_all(a1, v0 + 32);\n
    if (v8)\n
    {\n
        v8 = cgc__terminate(a0);\n
        return v8;\n
    }\n
    return v8;\n
}\n
", "4236080:main": "int main(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x803c]\n
    unsigned int v1;  // [bp-0x8038]\n
    unsigned int v2;  // [bp-0x8034]\n
    unsigned int v3;  // [bp-0x8030]\n
    unsigned int v4;  // [bp-0x802c]\n
    unsigned int v5[3];  // [bp-0x8028]\n
    unsigned int v6[3];  // [bp-0x8020]\n
    char v7;  // [bp-0x8018]\n
    char v8;  // [bp-0x4018]\n
    unsigned long v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned long v13;  // rsi\n
\n
    v11 = 0;\n
    v10 = a0;\n
    v9 = v13;\n
    cgc_init_accounts();\n
    *(&v6[0]) = &v8;\n
    *(&v5[0]) = &v7;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v3 += 1;\n
        cgc_memclr(v6, 32);\n
        v2 = cgc_recv_all(32, v6);\n
        if (v2)\n
            cgc__terminate(32);\n
        if (v6[0])\n
            cgc__terminate(32);\n
        if (v6[2] >= 100)\n
            cgc__terminate(32);\n
        v1 = cgc_recv_rest(v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        v0 = v6[1];\n
        if (!v0)\n
        {\n
            cgc_run_buy(v6, v5);\n
        }\n
        else if (v0 == 255)\n
        {\n
            cgc_run_sell(v6, v5);\n
        }\n
        else if (v0 == 0xdd00)\n
        {\n
            cgc_run_quote(v6, v5);\n
        }\n
        else if (v0 == 65535)\n
        {\n
            cgc__terminate(a0);\n
        }\n
        v4 += 1;\n
    }\n
}\n
", "4236532:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}