{"4202496:_init": "extern struct_0 *g_40c630;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40c630;\n
    if (g_40c630)\n
        v1 = g_40c630();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40c650;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40c650;\n
    goto *(4245080);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202624:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4245056);\n
}\n
", "4202672:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202709:sub_4020d5": null, "4202710:sub_4020d6": null, "4202720:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40c628;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202761:sub_402109": null, "4202768:register_tm_clones": "extern unsigned long long g_40c638;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202825:sub_402149": null, "4202832:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_40c640;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40c640)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202885:sub_402185": null, "4202889:sub_402189": null, "4202896:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202905:sub_402199": null, "4202912:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202963:sub_4021d3": null, "4202976:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203027:sub_402213": null, "4203040:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203091:sub_402253": null, "4203104:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203177:sub_4022a9": null, "4203184:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203257:sub_4022f9": null, "4203264:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203315:sub_402333": null, "4203328:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4203388:sub_40237c": null, "4203392:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4203452:sub_4023bc": null, "4203456:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203547:sub_40241b": null, "4203552:cgc_SetFsError": "extern char FS_ERROR;\n
\n
long long cgc_SetFsError(unsigned long long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = FS_ERROR;\n
    if (!FS_ERROR)\n
        v1 = cgc_strncpy(&FS_ERROR, a0, 63);\n
    return v1;\n
}\n
", "4203607:sub_402457": null, "4203616:cgc_ClearFsError": "extern char FS_ERROR;\n
\n
long long cgc_ClearFsError()\n
{\n
    unsigned long v1;  // rax\n
\n
    FS_ERROR = 0;\n
    return v1;\n
}\n
", "4203629:sub_40246d": null, "4203632:cgc_FsError": "extern char FS_ERROR;\n
\n
long long cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4203645:sub_40247d": null, "4203648:cgc_DestroyFilesystem": "extern struct_0 *cgc_FS;\n
\n
long long cgc_DestroyFilesystem()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < cgc_FS->field_4; v0 += 1)\n
    {\n
        if (*((cgc_FS->field_8 + (v0 << 3))))\n
        {\n
            if (*(*((cgc_FS->field_8 + (v0 << 3)))))\n
            {\n
                cgc_free(*(*((cgc_FS->field_8 + v0 * 8))));\n
                *(*((cgc_FS->field_8 + v0 * 8))) = 0;\n
            }\n
            if (*((*((cgc_FS->field_8 + (v0 << 3))) + 8)))\n
            {\n
                cgc_free(*((*((cgc_FS->field_8 + v0 * 8)) + 8)));\n
                *((*((cgc_FS->field_8 + v0 * 8)) + 8)) = 0;\n
            }\n
            if (*((*((cgc_FS->field_8 + (v0 << 3))) + 24)))\n
            {\n
                cgc_free(*((*((cgc_FS->field_8 + v0 * 8)) + 24)));\n
                *((*((cgc_FS->field_8 + v0 * 8)) + 24)) = 0;\n
            }\n
            cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
            *((cgc_FS->field_8 + v0 * 8)) = 0;\n
        }\n
    }\n
    cgc_free(cgc_FS);\n
    cgc_FS = 0;\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4204091:sub_40263b": null, "4204096:cgc_InitFilesystem": "extern unsigned long long FD;\n
extern unsigned long long FS_ERROR;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_InitFilesystem(unsigned long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rax\n
\n
    cgc_bzero(&FS_ERROR, 64);\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"MaxFiles should be > 0\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    if (cgc_FS)\n
        cgc_DestroyFilesystem();\n
    cgc_FS = cgc_calloc(16);\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    v2 = cgc_calloc(a0 * 32);\n
    cgc_FS->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_FS->field_4 = a0;\n
    if (!cgc_Login(\"root\"))\n
    {\n
        cgc_SetFsError(\"Login failed\");\n
        cgc_free(cgc_FS->field_8);\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!cgc_InitPasswd(a1))\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(\"Failed to init the passwd file\");\n
        cgc_free(cgc_FS->field_8);\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        cgc_bzero(&FD, 64);\n
        cgc_ClearFsError();\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4204483:sub_4027c3": null, "4204496:cgc_Login": "extern void* cgc_CurrentUser;\n
\n
long long cgc_Login(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = cgc_calloc(cgc_strlen(a0) + 1);\n
    if (!v0)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_strcpy(v0, a0);\n
    if (cgc_CurrentUser)\n
    {\n
        cgc_free(cgc_CurrentUser);\n
        cgc_CurrentUser = 0;\n
    }\n
    cgc_CurrentUser = v0;\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4204676:sub_402884": null, "4204688:cgc_InitPasswd": "long long cgc_InitPasswd(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid root password\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = cgc_fopen(\"passwd\", \"w\");\n
    if (!v0)\n
    {\n
        cgc_SetFsError(\"Unable to open passwd file\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_fwrite(\"root:\", 5, 1, v0);\n
    cgc_fwrite(a0, cgc_strlen(a0), 1, v0);\n
    cgc_fclose(v0);\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4204877:sub_40294d": null, "4204880:cgc_Logout": "extern void* cgc_CurrentUser;\n
\n
long long cgc_Logout()\n
{\n
    if (cgc_CurrentUser)\n
        cgc_free(cgc_CurrentUser);\n
    cgc_CurrentUser = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4204933:sub_402985": null, "4204944:cgc_FindFile": "extern struct_0 *cgc_FS;\n
\n
long long cgc_FindFile(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= cgc_FS->field_4)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((cgc_FS->field_8 + (v0 << 3))) && *(*((cgc_FS->field_8 + (v0 << 3)))) && !cgc_strcmp(*(*((cgc_FS->field_8 + (v0 << 3)))), a0))\n
        {\n
            v1 = *((cgc_FS->field_8 + v0 * 8));\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4205143:sub_402a57": null, "4205152:cgc_CreateEmptyFile": "extern unsigned long long cgc_CurrentUser;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_CreateEmptyFile(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
    unsigned long long v5;  // rax\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (!cgc_CurrentUser)\n
    {\n
        cgc_SetFsError(\"Must login first\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if ((a1 & 153))\n
    {\n
        cgc_SetFsError(\"Invalid mode\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (cgc_FindFile(a0))\n
    {\n
        cgc_SetFsError(\"File already exists\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= cgc_FS->field_4)\n
        {\n
LABEL_402d46:\n
            if (v0 != cgc_FS->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v1 = *((cgc_FS->field_8 + v0 * 8));\n
                return v1;\n
            }\n
            cgc_SetFsError(\"No free inodes\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((cgc_FS->field_8 + (v0 << 3))))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = cgc_calloc(32);\n
            *((cgc_FS->field_8 + v0 * 8)) = v3;\n
            if (!v3)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v1 = 0;\n
                return v1;\n
            }\n
            v4 = cgc_calloc(cgc_strlen(a0) + 1);\n
            *(*((cgc_FS->field_8 + v0 * 8))) = v4;\n
            if (!v4)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
                *((cgc_FS->field_8 + v0 * 8)) = 0;\n
                v1 = 0;\n
                return v1;\n
            }\n
            cgc_strcpy(*(*((cgc_FS->field_8 + v0 * 8))), a0);\n
            v5 = cgc_calloc(9);\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 8)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                cgc_free(*(*((cgc_FS->field_8 + v0 * 8))));\n
                *(*((cgc_FS->field_8 + v0 * 8))) = 0;\n
                cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
                *((cgc_FS->field_8 + v0 * 8)) = 0;\n
                v1 = 0;\n
                return v1;\n
            }\n
            cgc_strcpy(*((*((cgc_FS->field_8 + v0 * 8)) + 8)), cgc_CurrentUser);\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 16)) = a1;\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 20)) = 0;\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 24)) = 0;\n
            goto LABEL_402d46;\n
            goto LABEL_402d46;\n
        }\n
    }\n
}\n
", "4205975:sub_402d97": null, "4205984:cgc_fopen": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_3 FD;\n
extern unsigned long long cgc_CurrentUser;\n
extern unsigned long long cgc_FS;\n
\n
long long cgc_fopen(unsigned long long a0, char *a1)\n
{\n
    struct_1 *v0;  // [bp-0x38]\n
    struct_2 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (a0 && a1)\n
    {\n
        if (cgc_strlen(a1) > 1)\n
        {\n
            cgc_SetFsError(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a1) != 114 && *(a1) != 119)\n
        {\n
            cgc_SetFsError(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!cgc_CurrentUser)\n
        {\n
            cgc_SetFsError(\"Must login first\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = cgc_FindFile(a0);\n
        if (!v1 && *(a1) == 114)\n
        {\n
            cgc_SetFsError(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1)\n
        {\n
            for (v2 = 0; v2 < 8; v2 += 1)\n
            {\n
                if ((&FD.field_0)[v2] && (&FD.field_0)[v2]->field_0 == v1)\n
                {\n
                    cgc_SetFsError(\"File is already open\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (v1 && cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            if (cgc_strcmp(v1->field_8, cgc_CurrentUser))\n
            {\n
                if (*(a1) == 114 && !(v1->field_10 & 64))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a1) == 119 && !(v1->field_10 & 96))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a1) == 114 && !(v1->field_10 & 4))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a1) == 119 && !(v1->field_10 & 6))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        v0 = cgc_calloc(16);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if (!(&FD.field_0)[v2])\n
            {\n
                (&FD.field_0)[v2] = &v0->field_0;\n
                break;\n
            }\n
        }\n
        if (v2 == 8)\n
        {\n
            cgc_SetFsError(\"No free file descriptors\");\n
            cgc_free(v0);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a1) != 119)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_8 = 4;\n
            v0->field_c = 0;\n
        }\n
        else if (v1)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_8 = 6;\n
            v0->field_c = 0;\n
            v0->field_0->field_14 = 0;\n
            if (v0->field_0->field_18)\n
            {\n
                cgc_free(v0->field_0->field_18);\n
                v0->field_0->field_18 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v1 = cgc_CreateEmptyFile(a0, 6);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(\"Failed to create file\");\n
                (&FD.field_0)[v2] = 0;\n
                cgc_free(v0);\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0->field_0 = &v1;\n
            v0->field_8 = 6;\n
            v0->field_c = 0;\n
        }\n
        cgc_ClearFsError();\n
        v3 = v0;\n
        return v3;\n
    }\n
    cgc_SetFsError(\"Invalid filename or mode\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4207237:sub_403285": null, "4207248:cgc_fclose": "extern unsigned long long FD[4];\n
\n
long long cgc_fclose(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x19]\n
    char v1;  // [bp-0x9]\n
    char v2;  // [bp-0x8]\n
    unsigned long long v4;  // rbp\n
\n
    v4 = &v2;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid file pointer\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < 8; v0 += 1)\n
    {\n
        if (FD[v0] == a0)\n
            FD[v0] = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free(a0);\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207403:sub_40332b": null, "4207408:cgc_fread": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long a1, unsigned long a2, struct_1 *a3)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_1 *v3;  // rcx\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax\n
\n
    v0 = a3;\n
    if (a0 && v0)\n
    {\n
        if (!v0->field_0->field_18)\n
        {\n
            cgc_SetFsError(\"End of file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a2 * a1 > v0->field_0->field_14 - v0->field_c)\n
        {\n
            v3 = v0;\n
            cgc_memcpy(a0, v0->field_0->field_18 + v0->field_c, v0->field_0->field_14 - v3->field_c, v3);\n
            v4 = v0;\n
            v4->field_c = v0->field_0->field_14 - v0->field_c + v4->field_c;\n
            cgc_ClearFsError();\n
            v1 = v0->field_0->field_14 - v0->field_c;\n
            return v1;\n
        }\n
        else\n
        {\n
            cgc_memcpy(a0, v0->field_0->field_18 + v0->field_c, a2 * a1);\n
            v5 = v0;\n
            v5->field_c = a2 * a1 + v5->field_c;\n
            cgc_ClearFsError();\n
            v1 = a2 * a1;\n
            return v1;\n
        }\n
    }\n
    cgc_SetFsError(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4207740:sub_40347c": null, "4207744:cgc_fwrite": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long a1, unsigned long a2, struct struct_0 **a3)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    if (a0 && a3)\n
    {\n
        v0 = cgc_calloc(*(a3)->field_14 + a2 * a1);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(a3)->field_18)\n
            cgc_memcpy(v0, *(a3)->field_18, *(a3)->field_14);\n
        cgc_memcpy(v0 + *(a3)->field_14, a0, a2 * a1);\n
        v3 = *(a3);\n
        v3->field_14 = a2 * a1 + v3->field_14;\n
        if (*(a3)->field_18)\n
            cgc_free(*(a3)->field_18);\n
        *(a3)->field_18 = v0;\n
        cgc_ClearFsError();\n
        v1 = a2 * a1;\n
        return v1;\n
    }\n
    cgc_SetFsError(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4208058:sub_4035ba": null, "4208064:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fgets(char *a0, unsigned long a1, struct_2 *a2)\n
{\n
    char v0;  // [bp-0x2d]\n
    int tmp_62;  // tmp #62\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_2 *v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    struct_2 *v6;  // rdx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
\n
    v2 = a2;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid buffer\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v2)\n
    {\n
        cgc_SetFsError(\"Invalid file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2->field_c == v2->field_0->field_14)\n
    {\n
        cgc_SetFsError(\"End of file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2->field_0->field_18)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2->field_c < v2->field_0->field_14)\n
                v0 = v1 < a1 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = v2->field_0->field_18;\n
            v6 = v2;\n
            v7 = v6->field_c;\n
            v6->field_c = v7 + 1;\n
            tmp_62 = v5[v7];\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a0[v8] = tmp_62;\n
            if (v2->field_0->field_18[1 + v2->field_c].field_0 == 10)\n
                break;\n
        }\n
        a0[v1] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"End of file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4208445:sub_40373d": null, "4208448:cgc_ListFiles": "extern struct_0 *cgc_FS;\n
\n
long long cgc_ListFiles(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x21]\n
    char v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1f]\n
    char v5;  // [bp-0x1e]\n
    char v6;  // [bp-0x1d]\n
    unsigned int v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x9]\n
    unsigned long long v10;  // xmm0lq\n
    int v12;  // xmm0\n
    unsigned long long v13;  // rax\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (a0)\n
    {\n
        v1 = 79;\n
        for (v7 = 0; v7 < cgc_FS->field_4; v7 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v7 << 3))))\n
            {\n
                v0 = cgc_strlen(*(*((cgc_FS->field_8 + v7 * 8))));\n
                if (v0 >= 32)\n
                    v1 = v0 + v1;\n
                else\n
                    v1 += 32;\n
                v1 += 1;\n
                v0 = cgc_strlen(*((*((cgc_FS->field_8 + v7 * 8)) + 8)));\n
                if (v0 >= 32)\n
                    v1 = v0 + v1;\n
                else\n
                    v1 += 32;\n
                v1 += 1;\n
                if (!*((*((cgc_FS->field_8 + (v7 << 3))) + 20)))\n
                {\n
                    v1 += 8;\n
                }\n
                else\n
                {\n
                    v10 = *((*((cgc_FS->field_8 + v7 * 8)) + 20));\n
                    cgc_log10();\n
                    v12 = xmm0<16> + (0 CONCAT 0x3ff0000000000000);\n
                    v0 = v12;\n
                    if (v12 >= 8)\n
                        v1 = v0 + v1;\n
                    else\n
                        v1 += 8;\n
                }\n
                v1 += 6;\n
            }\n
        }\n
        v13 = cgc_calloc(v1);\n
        *(a0) = v13;\n
        if (!v13)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!a0)\n
        cgc_printf(\"$-32s $-32s $-8s $-4s\\n
\", \"Filename\", \"Owner\", \"Size\", \"Mode\");\n
    else\n
        cgc_sprintf(*(a0), \"$-32s $-32s $-8s $-4s\\n
\", \"Filename\", \"Owner\", \"Size\", \"Mode\");\n
    for (v7 = 0; v7 < cgc_FS->field_4; v7 += 1)\n
    {\n
        if (*((cgc_FS->field_8 + (v7 << 3))))\n
        {\n
            if (!a0)\n
                cgc_printf(\"$-32s $-32s $-8d \", *(*((cgc_FS->field_8 + v7 * 8))), *((*((cgc_FS->field_8 + v7 * 8)) + 8)), *((*((cgc_FS->field_8 + v7 * 8)) + 20)));\n
            else\n
                cgc_sprintf(*(a0), \"$s$-32s $-32s $-8d \", *(a0), *(*((cgc_FS->field_8 + v7 * 8))), *((*((cgc_FS->field_8 + v7 * 8)) + 8)), *((*((cgc_FS->field_8 + v7 * 8)) + 20)));\n
            cgc_memset(&v2, 45, 5);\n
            v6 = 0;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 4))\n
                v2 = 114;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 6))\n
                v3 = 119;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 64))\n
                v4 = 114;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 96))\n
                v5 = 119;\n
            if (!a0)\n
                cgc_printf(\"$-4s\\n
\", &v2);\n
            else\n
                cgc_sprintf(*(a0), \"$s$-4s\\n
\", *(a0), &v2);\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v8 = 1;\n
    return v8;\n
}\n
", "4209545:sub_403b89": null, "4209552:cgc_DeleteFile": "extern struct_0 FD;\n
extern unsigned long long cgc_CurrentUser;\n
extern struct_2 *cgc_FS;\n
\n
long long cgc_DeleteFile(unsigned long long a0)\n
{\n
    unsigned long long v0[4];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x9]\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!cgc_CurrentUser)\n
    {\n
        cgc_SetFsError(\"Must login first\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        for (v2 = 0; v2 < cgc_FS->field_4; v2 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v2 << 3))) && !cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a0))\n
            {\n
                v0[0] = *((cgc_FS->field_8 + v2 * 8));\n
                v1 = v2;\n
                break;\n
            }\n
        }\n
        if (v2 == cgc_FS->field_4)\n
        {\n
            cgc_SetFsError(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if ((&FD.field_0)[v2] && (&FD.field_0)[v2]->field_0 == v0)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, v0[1]))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_free(v0[0]);\n
        if (v0[1])\n
            cgc_free(v0[1]);\n
        if (v0[3])\n
            cgc_free(v0[3]);\n
        cgc_free(v0);\n
        *((cgc_FS->field_8 + v1 * 8)) = 0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4210151:sub_403de7": null, "4210160:cgc_RenameFile": "extern unsigned long long cgc_CurrentUser;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_RenameFile(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x38]\n
    unsigned long long v1[2];  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x9]\n
\n
    v1[0] = 0;\n
    if (a0 && a1)\n
    {\n
        for (v2 = 0; v2 < cgc_FS->field_4; v2 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v2 << 3))) && *(*((cgc_FS->field_8 + (v2 << 3)))))\n
            {\n
                if (!cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a0))\n
                    v1[0] = *((cgc_FS->field_8 + v2 * 8));\n
                if (!cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a1))\n
                {\n
                    cgc_SetFsError(\"Destination file already exists\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (!v1)\n
        {\n
            cgc_SetFsError(\"Source file not found\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, *((v1 + 8))))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = cgc_calloc(cgc_strlen(a1) + 1);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_strcpy(v0, a1);\n
        cgc_free(*(v1));\n
        *(v1) = v0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    cgc_SetFsError(\"Invalid filename\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4210672:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangeMode(unsigned long long a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid user\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(a1 & 153))\n
    {\n
        v0 = cgc_FindFile(a0);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"Unable to find file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, v0->field_8))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0->field_10 = a1;\n
        cgc_ClearFsError();\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Invalid mode\");\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4210912:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangeOwner(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28]\n
    char v2;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid owner\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        v1 = cgc_FindFile(a0);\n
        if (!v1)\n
        {\n
            cgc_SetFsError(\"Unable to find file\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_UserExists(a1))\n
        {\n
            v0 = cgc_calloc(cgc_strlen(a1) + 1);\n
            if (!v0)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v2 = 0;\n
                return v2;\n
            }\n
            cgc_strcpy(v0, a1);\n
            if (v1->field_8)\n
                cgc_free(v1->field_8);\n
            v1->field_8 = v0;\n
            cgc_ClearFsError();\n
            v2 = 1;\n
            return v2;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(\"Invalid user\");\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4211251:sub_404233": null, "4211264:cgc_UserExists": "long long cgc_UserExists(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xb0]\n
    char v1;  // [bp-0xa8]\n
    void* v2;  // [bp-0x20]\n
    char v3;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_fopen(\"passwd\", \"r\");\n
    if (!v2)\n
    {\n
        cgc_SetFsError(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!cgc_fgets(&v1, 127, v2))\n
        {\n
            cgc_fclose(v2);\n
            cgc_ClearFsError();\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = cgc_strtok(&v1, \":\");\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"Failed to parse passwd file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!cgc_strcmp(v0, a0))\n
        {\n
            cgc_fclose(v2);\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4211537:sub_404351": null, "4211552:cgc_Uid": "extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_Uid()\n
{\n
    return cgc_puts(cgc_CurrentUser);\n
}\n
", "4211584:cgc_AddUser": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_AddUser(unsigned long long a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0xd0]\n
    struct_0 *v1;  // [bp-0xc8]\n
    unsigned long v2;  // [bp-0xc0]\n
    char v3;  // [bp-0xb8]\n
    struct struct_0 **v4;  // [bp-0x30]\n
    void* v5;  // [bp-0x28]\n
    char v6;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strlen(a0) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strlen(a1) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_UserExists(a0))\n
    {\n
        v5 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v5)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v6 = 0;\n
            return v6;\n
        }\n
        v4 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v4)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        while (true)\n
        {\n
            if (!cgc_fgets(&v3, 127, v5))\n
            {\n
                cgc_sprintf(&v3, \"$s:$s\", a0, a1);\n
                v0 = &v3;\n
                cgc_fwrite(v0, cgc_strlen(&v3), 1, v4);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(\"passwd\");\n
                cgc_RenameFile(\"~passwd\", \"passwd\");\n
                cgc_ClearFsError();\n
                v6 = 1;\n
                return v6;\n
            }\n
            v1 = &v3;\n
            v2 = cgc_fwrite(v1, cgc_strlen(&v3), 1, v4);\n
            if (v2 != cgc_strlen(&v3))\n
            {\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                cgc_DeleteFile(\"~passwd\");\n
                v6 = 0;\n
                return v6;\n
            }\n
            else if (*(&v2 + cgc_strlen(&v3)) != 10 && cgc_fwrite(\"\\n
\", 1, 1, v4) != 1)\n
            {\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                cgc_DeleteFile(\"~passwd\");\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"User already exists\");\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4212402:sub_4046b2": null, "4212416:cgc_DeleteUser": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_DeleteUser(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0xc8]\n
    unsigned long v1;  // [bp-0xc0]\n
    struct struct_0 **v2;  // [bp-0xb8]\n
    void* v3;  // [bp-0xb0]\n
    char v4;  // [bp-0xa1]\n
    unsigned long long v5;  // [bp-0xa0]\n
    char v6;  // [bp-0x98]\n
    char v7;  // [bp-0x9]\n
\n
    v4 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (cgc_strcmp(a0, \"root\"))\n
    {\n
        v3 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v3)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v7 = 0;\n
            return v7;\n
        }\n
        v2 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v2)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v3);\n
            v7 = 0;\n
            return v7;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v6, 127, v3))\n
                {\n
                    cgc_fclose(v3);\n
                    cgc_fclose(v2);\n
                    if (v4)\n
                    {\n
                        cgc_DeleteFile(\"passwd\");\n
                        cgc_RenameFile(\"~passwd\", \"passwd\");\n
                        cgc_ClearFsError();\n
                        v7 = 1;\n
                        return v7;\n
                    }\n
                    cgc_SetFsError(\"User not found\");\n
                    cgc_fclose(v3);\n
                    cgc_fclose(v2);\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v7 = 0;\n
                    return v7;\n
                }\n
            } while (!cgc_strlen(&v6));\n
            v5 = cgc_strtok(&v6, \":\");\n
            if (!v5)\n
            {\n
                cgc_SetFsError(\"Failed to parse passwd file\");\n
                cgc_fclose(v3);\n
                cgc_fclose(v2);\n
                cgc_DeleteFile(\"~passwd\");\n
                v7 = 0;\n
                return v7;\n
            }\n
            if (cgc_strcmp(v5, a0))\n
            {\n
                (&v6)[cgc_strlen(v5)] = 58;\n
                v0 = &v6;\n
                v1 = cgc_fwrite(v0, cgc_strlen(&v6), 1, v2);\n
                if (v1 != cgc_strlen(&v6))\n
                    break;\n
            }\n
            else\n
            {\n
                v4 = 1;\n
            }\n
        }\n
        cgc_fclose(v3);\n
        cgc_fclose(v2);\n
        cgc_SetFsError(\"Unable to write tmp passwd file\");\n
        cgc_DeleteFile(\"~passwd\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Can't delete root user\");\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4213208:sub_4049d8": null, "4213216:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangePasswd(unsigned long long a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    struct_0 *v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    struct struct_0 **v4;  // [bp-0xc8]\n
    void* v5;  // [bp-0xc0]\n
    char v6;  // [bp-0xb1]\n
    unsigned long long v7;  // [bp-0xb0]\n
    char v8;  // [bp-0xa8]\n
    char v9;  // [bp-0x9]\n
\n
    v6 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen(a1) <= 32)\n
    {\n
        if (cgc_strcmp(cgc_CurrentUser, a0) && cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            cgc_SetFsError(\"Must be root or the user being changed\");\n
            v9 = 0;\n
            return v9;\n
        }\n
        v5 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v5)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v9 = 0;\n
            return v9;\n
        }\n
        v4 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v4)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(\"User not found\");\n
                        cgc_fclose(v5);\n
                        cgc_fclose(v4);\n
                        cgc_DeleteFile(\"~passwd\");\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                    cgc_DeleteFile(\"passwd\");\n
                    cgc_RenameFile(\"~passwd\", \"passwd\");\n
                    cgc_ClearFsError();\n
                    v9 = 1;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen(&v8));\n
            v7 = cgc_strtok(&v8, \":\");\n
            if (!v7)\n
            {\n
                cgc_SetFsError(\"Failed to parse passwd file\");\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(\"~passwd\");\n
                v9 = 0;\n
                return v9;\n
            }\n
            else if (!cgc_strcmp(v7, a0))\n
            {\n
                cgc_sprintf(&v8, \"$s:$s\\n
\", a0, a1);\n
                v2 = &v8;\n
                v3 = cgc_fwrite(v2, cgc_strlen(&v8), 1, v4);\n
                if (v3 != cgc_strlen(&v8))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                (&v8)[cgc_strlen(v7)] = 58;\n
                v0 = &v8;\n
                v1 = cgc_fwrite(v0, cgc_strlen(&v8), 1, v4);\n
                if (v1 != cgc_strlen(&v8))\n
                {\n
                    cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4214234:sub_404dda": null, "4214240:cgc_CheckPasswd": "extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_CheckPasswd(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0xd1]\n
    void* v1;  // [bp-0xd0], Other Possible Types: unsigned long long, unsigned long\n
    void* v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb9]\n
    unsigned long long v4;  // [bp-0xb8]\n
    unsigned long long v5;  // [bp-0xb0]\n
    char v6;  // [bp-0xa9]\n
    char v7;  // [bp-0xa8]\n
    char v8;  // [bp-0x9]\n
\n
    v3 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen(a1) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!cgc_CurrentUser)\n
        {\n
            cgc_Login(\"root\");\n
            v0 = 1;\n
        }\n
        else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            v1 = cgc_calloc(cgc_strlen(cgc_CurrentUser) + 1);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v1, cgc_CurrentUser);\n
            cgc_Logout();\n
            cgc_Login(\"root\");\n
        }\n
        v2 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v2)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            if (v1)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v1);\n
                cgc_free(v1);\n
            }\n
            if (v0)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v2))\n
                        {\n
                            cgc_fclose(v2);\n
                            if (!v3)\n
                            {\n
                                cgc_SetFsError(\"User not found\");\n
                                if (v1)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v1);\n
                                    cgc_free(v1);\n
                                }\n
                                if (v0)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v1)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v1);\n
                                    cgc_free(v1);\n
                                }\n
                                if (v0)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen(&v7));\n
                    if ((&v6)[cgc_strlen(&v7)] == 10)\n
                        (&v6)[cgc_strlen(&v7)] = 0;\n
                    v5 = cgc_strtok(&v7, \":\");\n
                    if (!v5)\n
                    {\n
                        cgc_SetFsError(\"Failed to parse passwd file\");\n
                        cgc_fclose(v2);\n
                        if (v1)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v1);\n
                            cgc_free(v1);\n
                        }\n
                        if (v0)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v5, a0));\n
                v4 = cgc_strtok(0, \":\");\n
                if (!v4)\n
                {\n
                    cgc_SetFsError(\"Failed to parse passwd file\");\n
                    cgc_fclose(v2);\n
                    if (v1)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v1);\n
                        cgc_free(v1);\n
                    }\n
                    if (v0)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v4, a1));\n
            cgc_ClearFsError();\n
            cgc_fclose(v2);\n
            if (v1)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v1);\n
                cgc_free(v1);\n
            }\n
            if (v0)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4215387:sub_40525b": null, "4215392:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4215771:sub_4053db": null, "4215776:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4215968:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4216026:sub_4054da": null, "4216032:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4216224:cgc_unlink": "long long cgc_unlink(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (*((a0 + 16)))\n
        *((*((a0 + 16)) + 8)) = *((v0 + 8));\n
    v2 = a0;\n
    if (!*((a0 + 8)))\n
        return v2;\n
    v2 = *((a0 + 8));\n
    *((v2 + 16)) = *((a0 + 16));\n
}\n
", "4216325:sub_405605": null, "4216336:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = *((v1 + 8)))\n
    {\n
        if (*(v1) >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4216617:sub_405729": null, "4216624:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4216729:sub_405799": null, "4216736:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v1 = cgc_freelist_alloc(v3);\n
        v4 = v1;\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4217046:sub_4058d6": null, "4217056:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4217182:sub_40595e": null, "4217184:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4217334:sub_4059f6": null, "4217344:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v5 = v2;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v5 = v1 + 1;\n
    }\n
    return v5;\n
}\n
", "4217558:sub_405ad6": null, "4217568:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&a0, 1);\n
}\n
", "4217599:sub_405aff": null, "4217600:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4217909:sub_405c35": null, "4217920:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4218088:sub_405ce8": null, "4218096:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4218179:sub_405d43": null, "4218192:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4218233:sub_405d79": null, "4218240:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4218310:sub_405dc6": null, "4218320:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4218484:sub_405e74": null, "4218496:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4218656:cgc_vprintf": "long long cgc_vprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned long long v2;  // [bp-0x20]\n
\n
    v2 = cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4218730:sub_405f6a": null, "4218736:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long long *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned long long *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned long long *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 <= 40)\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    else\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[1];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 > 160)\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[2];\n
                        v11 = v72;\n
                    }\n
                    else\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4220682:sub_40670a": null, "4220688:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4220852:sub_4067b4": null, "4220864:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4220964:sub_406824": null, "4220976:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4221268:sub_406954": null, "4221280:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v11;  // rax\n
    unsigned long v12;  // rcx\n
    unsigned long long v13;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v11 = v4;\n
            v4 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 += 1)\n
    {\n
        v12 = v0 + 1;\n
        v7 = v8(a0, (&v1)[v12], v7, v12);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v13 = v4;\n
        v4 = v13 - 1;\n
        if (v13 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4221917:sub_406bdd": null, "4221920:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_407271:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_407271;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_407267;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_407267:\n
            goto LABEL_407271;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4224266:sub_40750a": null, "4224272:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4224919:sub_407797": null, "4224928:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(v6 & 4))\n
                v3 = v4(a0, 32, v3);\n
            else\n
                v3 = v4(a0, 48, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4225462:sub_4079b6": null, "4225472:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4225490:sub_4079d2": null, "4225504:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4225529:sub_4079f9": null, "4225536:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4225762:sub_407ae2": null, "4225776:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4226050:sub_407c02": null, "4226064:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4226152:sub_407c68": null, "4226160:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!v0[a1])\n
            break;\n
        v0[a0] = v0[a1];\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4226317:sub_407d0d": null, "4226320:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4226483:sub_407db3": null, "4226496:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4226562:sub_407e02": null, "4226576:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4226642:sub_407e52": null, "4226656:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4226827:sub_407f0b": null, "4226832:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (a0[v1] == a1)\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4226986:sub_407faa": null, "4226992:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            *((v4 + v2)) = 0;\n
        }\n
        else\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4227486:sub_40819e": null, "4227488:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227857:sub_408311": null, "4227872:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4228046:sub_4083ce": null, "4228048:cgc_ReadBytes": "long long cgc_ReadBytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    for (v1 = 0; v1 < a1; v1 += *(&v0))\n
    {\n
        if (cgc_receive(a0, a1, v4, v5))\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    return v1;\n
}\n
", "4228174:sub_40844e": null, "4228176:cgc_SendBytes": "long long cgc_SendBytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    for (v1 = 0; v1 < a1; v1 += *(&v0))\n
    {\n
        if (cgc_transmit(a0, a1, v4, v5))\n
            cgc__terminate(a0);\n
        if (*(&v0) != a1 - v1)\n
            cgc__terminate(a0);\n
    }\n
    return v1;\n
}\n
", "4228315:sub_4084db": null, "4228320:cgc_CallocAndRead": "long long cgc_CallocAndRead(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long long v2;  // rax\n
\n
    v0 = a1;\n
    v0 += 1;\n
    v2 = cgc_calloc(v0);\n
    *(a0) = v2;\n
    if (!v2)\n
        cgc__terminate(a0);\n
    v0 -= 1;\n
    return cgc_ReadBytes(*(a0), v0);\n
}\n
", "4228408:sub_408538": null, "4228416:cgc_ReceiveRequest": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[39];\n
    char field_28;\n
    char padding_29[15];\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    char field_4;\n
    char field_5;\n
} struct_0;\n
\n
long long cgc_ReceiveRequest()\n
{\n
    unsigned long v0;  // [bp-0x58]\n
    struct_0 *v1;  // [bp-0x50]\n
    struct_0 *v2;  // [bp-0x48]\n
    struct_0 *v3;  // [bp-0x40]\n
    struct_0 *v4;  // [bp-0x38]\n
    struct_0 *v5;  // [bp-0x30]\n
    struct_2 *v6;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x20]\n
    char v8;  // [bp-0x12]\n
    char v9;  // [bp-0x11]\n
\n
    v7 = &v8;\n
    v6 = cgc_calloc(64);\n
    if (!v6)\n
        cgc__terminate(64);\n
    cgc_ReadBytes(&v8, 1);\n
    v6->field_0 = v7->field_0;\n
    v0 = v7->field_0;\n
    switch (v0)\n
    {\n
    case 0:\n
        cgc_ReadBytes(&v9, 2);\n
        v5 = &v9;\n
        cgc_CallocAndRead(&v6->padding_1[7], v5->field_0);\n
        cgc_CallocAndRead(&v6->padding_1[15], v5->padding_1[0]);\n
        return v6;\n
    case 1:\n
        return v6;\n
    case 2:\n
        cgc_ReadBytes(&v9, 6);\n
        v4 = &v9;\n
        cgc_CallocAndRead(&v6->padding_1[23], v4->field_5);\n
        v6->field_38 = *(&v4->field_0);\n
        v6->field_3c = v4->field_4;\n
        return v6;\n
    case 3: case 4:\n
        cgc_ReadBytes(&v9, 2);\n
        v3 = &v9;\n
        cgc_CallocAndRead(&v6->padding_1[23], v3->padding_1[0]);\n
        v6->field_3c = v3->field_0;\n
        v6->field_28 = v3->field_0;\n
        cgc_CallocAndRead(&v6->padding_29[7], v3->field_0);\n
        return v6;\n
    case 5:\n
        cgc_ReadBytes(&v9, 1);\n
        v2 = &v9;\n
        cgc_CallocAndRead(&v6->padding_1[23], v2->field_0);\n
        return v6;\n
    case 6:\n
        cgc_ReadBytes(&v9, 2);\n
        v1 = &v9;\n
        cgc_CallocAndRead(&v6->padding_1[23], v1->field_0);\n
        cgc_CallocAndRead(&v6->padding_1[31], v1->padding_1[0]);\n
        return v6;\n
    default:\n
        cgc_free(v6);\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4228954:sub_40875a": null, "4228960:cgc_HandleLogin": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
long long cgc_HandleLogin(unsigned long long a0[3], struct_0 *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (!cgc_CheckPasswd(a0[1], a0[2]))\n
        {\n
            a1->field_1 = 1;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (cgc_Login(a0[1]))\n
        {\n
            a1->field_1 = 0;\n
            v0 = 1;\n
            return v0;\n
        }\n
        else\n
        {\n
            a1->field_1 = 2;\n
            v0 = 0;\n
            return v0;\n
        }\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4229113:sub_4087f9": null, "4229120:cgc_HandleDir": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    unsigned short field_2;\n
    unsigned long long field_4;\n
} struct_0;\n
\n
long long cgc_HandleDir(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (cgc_ListFiles(&v0))\n
        {\n
            a1->field_1 = 0;\n
            a1->field_2 = cgc_strlen(v0);\n
            *(&(&a1->field_2)[1]) = v0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        a1->field_1 = 2;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4229255:sub_408887": null, "4229264:cgc_HandleRead": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char padding_20[24];\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    unsigned short field_2;\n
    unsigned long long field_4;\n
} struct_1;\n
\n
long long cgc_HandleRead(struct_0 *a0, struct_1 *a1)\n
{\n
    char v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28]\n
    char v4;  // [bp-0x9]\n
    unsigned long long v6;  // rax\n
\n
    if (a0 && a1)\n
    {\n
        if (a0->field_18)\n
        {\n
            v3 = cgc_fopen(a0->field_18, \"r\");\n
            if (!v3)\n
            {\n
                a1->field_1 = 3;\n
                v4 = 0;\n
                return v4;\n
            }\n
            for (v2 = 0; v2 < a0->field_38; v2 = v1 + v2)\n
            {\n
                if (a0->field_38 - v2 <= 128)\n
                {\n
                    v1 = cgc_fread(&v0, a0->field_38 - v2, 1, v3);\n
                    if (!v1)\n
                    {\n
                        a1->field_1 = 2;\n
                        cgc_fclose(v3);\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                }\n
                else\n
                {\n
                    v1 = cgc_fread(&v0, 128, 1, v3);\n
                    if (!v1)\n
                    {\n
                        a1->field_1 = 2;\n
                        cgc_fclose(v3);\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            v6 = cgc_calloc(a0->field_3c);\n
            *(&(&a1->field_2)[1]) = v6;\n
            if (!v6)\n
            {\n
                a1->field_1 = 2;\n
                cgc_fclose(v3);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1 = cgc_fread(*(&(&a1->field_2)[1]), a0->field_3c, 1, v3);\n
            if (!v1)\n
            {\n
                a1->field_1 = 2;\n
                cgc_fclose(v3);\n
                v4 = 0;\n
                return v4;\n
            }\n
            a1->field_2 = v1;\n
            cgc_fclose(v3);\n
            a1->field_1 = 0;\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            a1->field_1 = 3;\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4229773:sub_408a8d": null, "4229776:cgc_HandleWrite": "typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char padding_20[8];\n
    char field_28;\n
    char padding_29[7];\n
    unsigned long long field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
long long cgc_HandleWrite(struct_1 *a0, struct_0 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    char v1;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (a0->field_18)\n
        {\n
            v0 = cgc_fopen(a0->field_18, \"w\");\n
            if (!v0)\n
            {\n
                a1->field_1 = 3;\n
                v1 = 0;\n
                return v1;\n
            }\n
            else if (!cgc_fwrite(a0->field_30, a0->field_28, 1, v0))\n
            {\n
                a1->field_1 = 2;\n
                cgc_fclose(v0);\n
                v1 = 0;\n
                return v1;\n
            }\n
            else\n
            {\n
                cgc_fclose(v0);\n
                a1->field_1 = 0;\n
                v1 = 1;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            a1->field_1 = 3;\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4230002:sub_408b72": null, "4230016:cgc_HandleWriteAppend": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char padding_20[8];\n
    char field_28;\n
    char padding_29[7];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_2;\n
\n
long long cgc_HandleWriteAppend(struct_0 *a0, struct_2 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x40]\n
    struct struct_1 **v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned long v3;  // [bp-0x28]\n
    char v4;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (a0->field_18)\n
        {\n
            v1 = cgc_fopen(a0->field_18, \"r\");\n
            if (!v1)\n
            {\n
                a1->field_1 = 3;\n
                v4 = 0;\n
                return v4;\n
            }\n
            v2 = *(v1)->field_14;\n
            v3 = cgc_calloc(v2);\n
            if (!v3)\n
            {\n
                a1->field_1 = 2;\n
                cgc_fclose(v1);\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (cgc_fread(v3, v2, 1, v1) == v2)\n
            {\n
                cgc_fclose(v1);\n
                v0 = cgc_fopen(a0->field_18, \"w\");\n
                if (!v0)\n
                {\n
                    a1->field_1 = 2;\n
                    cgc_free(v3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                else if (cgc_fwrite(v3, v2, 1, v0) == v2)\n
                {\n
                    cgc_free(v3);\n
                    if (cgc_fwrite(a0->field_30, a0->field_28, 1, v0))\n
                    {\n
                        cgc_fclose(v0);\n
                        a1->field_1 = 0;\n
                        v4 = 1;\n
                        return v4;\n
                    }\n
                    a1->field_1 = 2;\n
                    cgc_fclose(v0);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                else\n
                {\n
                    a1->field_1 = 2;\n
                    cgc_free(v3);\n
                    cgc_fclose(v0);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                a1->field_1 = 2;\n
                cgc_free(v3);\n
                cgc_fclose(v1);\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            a1->field_1 = 3;\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4230513:sub_408d71": null, "4230528:cgc_HandleDel": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_1;\n
\n
long long cgc_HandleDel(struct_0 *a0, struct_1 *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (cgc_DeleteFile(a0->field_18))\n
        {\n
            a1->field_1 = 0;\n
            v0 = 1;\n
            return v0;\n
        }\n
        a1->field_1 = 4;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4230635:sub_408deb": null, "4230640:cgc_HandleRename": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
long long cgc_HandleRename(unsigned long long a0[5], struct_0 *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 && a1)\n
    {\n
        if (cgc_RenameFile(a0[3], a0[4]))\n
        {\n
            a1->field_1 = 0;\n
            v0 = 1;\n
            return v0;\n
        }\n
        a1->field_1 = 5;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4230755:sub_408e63": null, "4230768:cgc_HandleRequest": "long long cgc_HandleRequest(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = cgc_calloc(12);\n
    if (!v1)\n
        cgc__terminate(12);\n
    *(v1) = *(a0);\n
    v0 = *(a0);\n
    switch (v0)\n
    {\n
    case 0:\n
        cgc_HandleLogin(a0, v1);\n
        break;\n
    case 1:\n
        cgc_HandleDir(a0, v1);\n
        break;\n
    case 2:\n
        cgc_HandleRead(a0, v1);\n
        break;\n
    case 3:\n
        cgc_HandleWrite(a0, v1);\n
        break;\n
    case 4:\n
        cgc_HandleWriteAppend(a0, v1);\n
        break;\n
    case 5:\n
        cgc_HandleDel(a0, v1);\n
        break;\n
    case 6:\n
        cgc_HandleRename(a0, v1);\n
        break;\n
    default:\n
        cgc_free(v1);\n
        v1 = 0;\n
        break;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4231049:sub_408f89": null, "4231056:cgc_SendResponse": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned long long field_4;\n
} struct_0;\n
\n
long long cgc_SendResponse(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (cgc_SendBytes(a0, 4) != 4)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0->field_2)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else if (cgc_SendBytes(*(&(&a0->field_2)[1]), a0->field_2) == a0->field_2)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4231206:sub_409026": null, "4231216:cgc_FreeRequest": "long long cgc_FreeRequest(unsigned long long a0[7])\n
{\n
    unsigned int v0[13];  // [bp-0x18], Other Possible Types: void*\n
    char v1;  // [bp-0x9]\n
\n
    *(&v0[0]) = a0;\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (*(&v0[2]))\n
    {\n
        cgc_free(*(&v0[2]));\n
        *(&v0[2]) = 0;\n
    }\n
    if (*(&v0[4]))\n
    {\n
        cgc_free(*(&v0[4]));\n
        *(&v0[4]) = 0;\n
    }\n
    if (*(&v0[6]))\n
    {\n
        cgc_free(*(&v0[6]));\n
        *(&v0[6]) = 0;\n
    }\n
    if (*(&v0[8]))\n
    {\n
        cgc_free(*(&v0[8]));\n
        *(&v0[8]) = 0;\n
    }\n
    if (*(&v0[12]))\n
    {\n
        cgc_free(*(&v0[12]));\n
        *(&v0[12]) = 0;\n
    }\n
    cgc_free(v0);\n
    v0 = 0;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4231479:sub_409137": null, "4231488:cgc_FreeResponse": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned long long field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_FreeResponse(struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: void*\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &a0->padding_0;\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (*(&v0->field_4))\n
    {\n
        cgc_free(*(&v0->field_4));\n
        *(&v0->field_4) = 0;\n
    }\n
    cgc_free(v0);\n
    v0 = 0;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4231591:sub_4091a7": null, "4231600:main": "int main(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    char v1;  // [bp-0x43]\n
    unsigned int *v2;  // [bp-0x38]\n
    void* v3;  // [bp-0x30]\n
    char *v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long v10;  // rsi\n
    unsigned long long v11;  // rax\n
\n
    v8 = 0;\n
    v7 = a0;\n
    v6 = v10;\n
    v5 = 10;\n
    v2 = 0x4347c000;\n
    if (!cgc_InitFilesystem(v5, \"rootpasswd\"))\n
    {\n
        v11 = cgc_FsError();\n
        cgc_puts(v11);\n
        cgc__terminate(v11);\n
    }\n
    cgc_seed_prng(*(v2));\n
    cgc_bzero(&v1, 0xb);\n
    for (v0 = 0; v0 < 10; v0 += 1)\n
    {\n
        (&v1)[v0] = cgc_random_in_range(65, 122);\n
    }\n
    if (!cgc_AddUser(\"user\", &v1))\n
        cgc__terminate(\"user\");\n
    while (true)\n
    {\n
        v4 = cgc_ReceiveRequest();\n
        if (v4)\n
        {\n
            v3 = cgc_HandleRequest(v4);\n
            if (v3)\n
            {\n
                cgc_SendResponse(v3);\n
                cgc_FreeRequest(v4);\n
                cgc_FreeResponse(v3);\n
            }\n
            else\n
            {\n
                cgc_FreeRequest(v4);\n
            }\n
        }\n
    }\n
}\n
", "4231892:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:cgc_log10": null, "5242936:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}