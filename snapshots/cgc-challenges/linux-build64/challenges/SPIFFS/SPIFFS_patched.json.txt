{"4206592:_init": "extern struct_0 *g_40d400;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d400;\n
    if (g_40d400)\n
        v1 = g_40d400();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40d420;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d420;\n
    goto *(4248616);\n
}\n
", "4206636:sub_40302c": null, "4206640:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206656:strncpy": "// attributes: PLT stub\n
char * strncpy(char *to, char *from, unsigned int size)\n
{\n
    return ::libc.so.0::strncpy(to, from, size);\n
}\n
", "4206672:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206688:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206704:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206720:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4206736:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206752:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206768:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206784:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206800:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4248592);\n
}\n
", "4206816:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206853:sub_403105": null, "4206854:sub_403106": null, "4206864:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40d3f8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206905:sub_403139": null, "4206912:register_tm_clones": "extern unsigned long long g_40d408;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206969:sub_403179": null, "4206976:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40d410;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d410)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207029:sub_4031b5": null, "4207033:sub_4031b9": null, "4207040:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207049:sub_4031c9": null, "4207056:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
\n
    v1 = a1 * a0;\n
    v0 = cgc_malloc(v1);\n
    cgc_memset(v0, 0, v1);\n
    return v0;\n
}\n
", "4207123:sub_403213": null, "4207136:cgc_malloc": "extern struct_0 *g_memManager;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct struct_0 *v0[2];  // [bp-0x50]\n
    unsigned long long *v1;  // [bp-0x48]\n
    unsigned long long *v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x38]\n
    unsigned long v4;  // [bp-0x30]\n
    struct struct_0 *v5[2];  // [bp-0x28]\n
    unsigned long long *v6;  // [bp-0x20]\n
    unsigned long long *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v8;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long *v10;  // rax\n
    unsigned long long *v11;  // rax\n
\n
    v8 = a0;\n
    if (v8 < 8)\n
    {\n
        v8 = 8;\n
    }\n
    else if ((v8 & 3))\n
    {\n
        v8 = (v8 >> 2) + 1;\n
        v8 *= 4;\n
    }\n
    v7 = &g_memManager->field_0;\n
    while (true)\n
    {\n
        if (!v7)\n
            v7 = cgc_add_free_list(v8);\n
        v6 = v7;\n
        v5[0] = v7 + (*(v6) & -4) - 8;\n
        if (*(v6) >= v8)\n
            break;\n
        v7 = v5[0];\n
    }\n
    v4 = v7 + 8;\n
    v3 = *(v6) - v8;\n
    *(v6) = v8;\n
    v10 = v6;\n
    *(v10) = *(v10) | 1;\n
    if (v3 >= 24)\n
    {\n
        v2 = v7 + v8 + 8;\n
        v1 = v2;\n
        *(v1) = v3 - 8;\n
        v0[0] = &v5[0];\n
        if (-8 + v1 + (*(v1) & -4) != v5)\n
        {\n
            cgc_printf(\"Footer != in malloc\");\n
            cgc__terminate(\"Footer != in malloc\");\n
        }\n
        if (g_memManager != v7)\n
        {\n
            if (v0[1])\n
                *((-8 + &v0[1]->field_0 + (v0[1]->field_0 & -4))) = v2;\n
            if (v0[0])\n
                *((&v0[0]->field_0 + (v0[0]->field_0 & -4))) = v2;\n
        }\n
        else\n
        {\n
            g_memManager = v1;\n
            if (v0[0])\n
                *((&v0[0]->field_0 + (v0[0]->field_0 & -4))) = v1;\n
        }\n
        v11 = v6;\n
        *(v11) = *(v11) | 2;\n
    }\n
    else if (g_memManager != v7)\n
    {\n
        if (v5[1])\n
            *((-8 + &v5[1]->field_0 + (v5[1]->field_0 & -4))) = v5[0];\n
        if (v5[0])\n
            *((&v5[0]->field_0 + (v5[0]->field_0 & -4))) = v5[1];\n
    }\n
    else\n
    {\n
        g_memManager = v5[0];\n
        if (v5[0])\n
            *((&v5[0]->field_0 + (v5[0]->field_0 & -4))) = 0;\n
    }\n
    cgc_memset(v7 + 8, 0, v8);\n
    return v7 + 8;\n
}\n
", "4207906:sub_403522": null, "4207920:cgc_add_free_list": "extern struct_0 *g_memManager;\n
\n
long long cgc_add_free_list(unsigned long long a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v3 = a0 + 4;\n
    if ((v3 & 4095))\n
    {\n
        v3 = (v3 >> 12) + 1;\n
        v3 *= 0x1000;\n
    }\n
    if (cgc_allocate(a0, v5, v6))\n
        cgc__terminate(a0);\n
    v1 = *(&v2);\n
    v0[0] = *(&v2) + v3 - 16;\n
    *(v1) = v3 - 8;\n
    v0[1] = 0;\n
    v0[0] = g_memManager;\n
    g_memManager = v1;\n
    return v1;\n
}\n
", "4208115:sub_4035f3": null, "4208128:cgc_free": "extern struct_0 *g_memManager;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x40]\n
    struct struct_0 *v1[2];  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x30]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned long long *v4;  // [bp-0x20]\n
    unsigned long long *v5;  // [bp-0x18]\n
    unsigned long long *v7;  // rax\n
    unsigned long long *v8;  // rax\n
    unsigned long long *v9;  // rax, Other Possible Types: struct struct_0 **, struct struct_0 *[2], unsigned long\n
\n
    v5 = a0 - 8;\n
    if (!(*(v5) & 1))\n
        cgc__terminate(a0);\n
    if ((*(v5) & 2))\n
    {\n
        v4 = a0 + (*(v5) & -4);\n
        if (!(*(v4) & 1))\n
        {\n
            v3 = (*(v5) & -4) + (*(v4) & -4) + 8;\n
            *(v5) = v3;\n
            if ((*(v4) & 2))\n
            {\n
                v8 = v5;\n
                *(v8) = *(v8) | 2;\n
            }\n
            if (g_memManager != v4)\n
            {\n
                v1[0] = -8 + v5 + v3;\n
                if (v1[1])\n
                    *((-8 + &v1[1]->field_0 + (v1[1]->field_0 & -4))) = v5;\n
                v9 = v1;\n
                if (v9[0])\n
                {\n
                    v9 = v1[0];\n
                    *((v9 + (v1[0]->field_0 & -4))) = v5;\n
                }\n
            }\n
            else\n
            {\n
                g_memManager = v5;\n
                v2 = -8 + v5 + v3;\n
                v9 = v2;\n
                if (*(v9))\n
                {\n
                    v9 = *(v2);\n
                    *((v9 + (*(v2)->field_0 & -4))) = v5;\n
                }\n
            }\n
            return v9;\n
        }\n
    }\n
    v7 = v5;\n
    *(v7) = *(v7) & -2;\n
    v0[0] = -8 + v5 + (*(v5) & -4);\n
    v0[0] = g_memManager;\n
    v0[1] = 0;\n
    if (g_memManager)\n
        *((&g_memManager->field_0 + (g_memManager->field_0 & -4))) = v5;\n
    v9 = v5;\n
    g_memManager = v9;\n
    return v5;\n
}\n
", "4208668:sub_40381c": null, "4208672:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4208820:sub_4038b4": null, "4208832:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4208956:sub_40393c": null, "4208960:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4209088:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return v0;\n
}\n
", "4209171:sub_403a13": null, "4209184:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4209235:sub_403a53": null, "4209248:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4209299:sub_403a93": null, "4209312:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4209355:sub_403acb": null, "4209360:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4209403:sub_403afb": null, "4209408:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4209459:sub_403b33": null, "4209472:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4209563:sub_403b9b": null, "4209568:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4209596:sub_403bbc": null, "4209600:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4209652:sub_403bf4": null, "4209664:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long long v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_403de9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_403de9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_403de9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_403d59:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_403de9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_403d59;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_403de9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4210221:sub_403e2d": null, "4210224:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a0;\n
    if (!v5)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v5)); v5 += 1);\n
    for (v2 = 0; *(v5); v5 += 1)\n
    {\n
        if (*(v5) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v5) != 43)\n
            {\n
                if (!cgc_isdigit(*(v5)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v6 = 0;\n
                    return v6;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v5) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
    if (v4 > 2147483647)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v0 = v4;\n
    v0 *= v3;\n
    v6 = v0;\n
    return v6;\n
}\n
", "4210662:sub_403fe6": null, "4210672:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a1 + v0)); v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4210775:sub_404057": null, "4210784:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = v1[a1];\n
        if (!(v0 & 1))\n
            break;\n
        v1[a0] = v1[a1];\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        v1[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4210957:sub_40410d": null, "4210960:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4211078:sub_404186": null, "4211088:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    while (true)\n
    {\n
        v0 -= 1;\n
        if (!v0)\n
            break;\n
        *((a0 + v0)) = a1;\n
    }\n
    *((a0 + v0)) = a1;\n
    return a0;\n
}\n
", "4211176:sub_4041e8": null, "4211184:cgc_strcmp": "long long cgc_strcmp(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[a0] && !v0[a1])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!v0[a0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (v0[a1])\n
        {\n
            if (v0[a0] < v0[a1])\n
            {\n
                v1 = -1;\n
                return v1;\n
            }\n
            if (v0[a0] > v0[a1])\n
            {\n
                v1 = 1;\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4211439:sub_4042ef": null, "4211440:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4211649:sub_4043c1": null, "4211664:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4211724:sub_40440c": null, "4211728:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    v1 = a1 - v2;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        else if (!cgc_receive(a0, a1, v6, v7))\n
        {\n
            v1 -= v0;\n
            v2 = v0 + v2;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4211888:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        v2[a0] = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v0 != a1)\n
        {\n
            v2[a0] = v0;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            return v2;\n
        }\n
    }\n
}\n
", "4212089:sub_404579": null, "4212096:cgc_receive_until_flush": "long long cgc_receive_until_flush(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v2[a0] = 0;\n
            if (cgc_receive(a0, a1, a2, v4))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            if (v0 == a1)\n
                return v2;\n
            v2[a0] = v0;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                if (cgc_receive(a0, a1, a2, v4))\n
                {\n
                    return v2;\n
                }\n
                else if (v0 == a1)\n
                {\n
                    return v2;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4212333:sub_40466d": null, "4212336:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); v1[a1]; v1 += 1)\n
        {\n
            a0[v0] = v1[a1];\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4212498:sub_404712": null, "4212512:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4212744:sub_404808": null, "4212752:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x18], Other Possible Types: char\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v1 = 0;\n
    if (!a0)\n
        return v4;\n
    v0 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        v4 = v1;\n
        if (v4 < v0)\n
        {\n
            v4 = cgc_transmit(a0, v5, v6, v7);\n
            if (v4)\n
                return v4;\n
            v1 = *(&v2) + v1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            while (true)\n
            {\n
                if (v2 == 1)\n
                    return v4;\n
                v4 = cgc_transmit(a0, v5, v6, v7);\n
                if (v4)\n
                    return v4;\n
            }\n
        }\n
    }\n
}\n
", "4212946:sub_4048d2": null, "4212960:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (*(v0) != a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4213076:sub_404954": null, "4213088:cgc_strtok": "extern struct_0 *cgc_prev_str;\n
extern unsigned int cgc_prev_str_len;\n
extern struct_0 *cgc_prev_str_ptr;\n
extern struct_0 *cgc_token;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char *v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
\n
    v7 = a0;\n
    if (!a1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v7)\n
    {\n
        if (cgc_prev_str)\n
        {\n
            cgc_deallocate(a0, a1);\n
            cgc_prev_str = 0;\n
            cgc_prev_str_len = 0;\n
            cgc_prev_str_ptr = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_prev_str)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (cgc_prev_str_ptr >= &cgc_prev_str[cgc_prev_str_len])\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!cgc_prev_str)\n
    {\n
        if (cgc_strlen(v7) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_prev_str_len = cgc_strlen(v7);\n
        if (cgc_allocate(a0, a1, v10))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_strcpy(cgc_prev_str, v7);\n
        cgc_prev_str_ptr = cgc_prev_str;\n
    }\n
    v7 = &cgc_prev_str_ptr->field_0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_strchr(a1, *(v7)))\n
            v2 = v7 < &cgc_prev_str[cgc_prev_str_len];\n
        if (!(v2 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (v7 >= &cgc_prev_str[cgc_prev_str_len])\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v6 = v7;\n
    v1 = v7;\n
    v5 = &v1[cgc_strlen(v7)];\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v4 = cgc_strchr(v6, a1[v3]);\n
        if (v4 && v4 && v4 < v5)\n
            v5 = v4;\n
        v3 += 1;\n
    }\n
    cgc_token = v6;\n
    *(v5) = 0;\n
    cgc_prev_str_ptr = v5 + 1;\n
    v8 = cgc_token;\n
    return v8;\n
}\n
", "4213798:sub_404c26": null, "4213808:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        if (cgc_transmit(a0, a1, v4, v5))\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        v0 = *(&v1) + v0;\n
    }\n
}\n
", "4213962:sub_404cca": null, "4213968:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_strlen(a0);\n
    if (cgc_allocate(a0, v4, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    cgc_bzero(v0, cgc_strlen(a0) + 1);\n
    cgc_strcpy(*(&v1), a0);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4214117:sub_404d65": null, "4214128:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    v0 = 0;\n
    while (!v0)\n
    {\n
        if (cgc_transmit(a0, v2, v3, v4))\n
            cgc__terminate(a0);\n
    }\n
    return a0;\n
}\n
", "4214214:sub_404dc6": null, "4214224:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4214449:sub_404eb1": null, "4214464:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v7;  // rax\n
    unsigned int v8;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v4 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        v3->field_0 = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4214671:sub_404f8f": null, "4214672:cgc_float_to_str": "long long cgc_float_to_str(char *a0, unsigned long a1)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x4a]\n
    char v1;  // [bp-0x49]\n
    unsigned long long v2;  // [bp-0x48]\n
    char *v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_405291;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < a1;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_405291:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4215457:sub_4052a1": null, "4215472:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    char v0;  // [bp-0x159]\n
    unsigned long v1;  // [bp-0x158]\n
    struct struct_0 **v2;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v3;  // [bp-0x148]\n
    unsigned int v4;  // [bp-0x13c]\n
    unsigned long v5;  // [bp-0x138]\n
    struct struct_0 **v6;  // [bp-0x130], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x128]\n
    unsigned int *v8;  // [bp-0x120]\n
    unsigned int v9;  // [bp-0x114]\n
    unsigned long v10;  // [bp-0x110]\n
    struct struct_0 **v11;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x100]\n
    unsigned int v13;  // [bp-0xf4]\n
    unsigned long v14;  // [bp-0xf0]\n
    unsigned int *v15;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xe0]\n
    unsigned int v17;  // [bp-0xd4]\n
    unsigned int *v18;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xc8]\n
    unsigned int v20;  // [bp-0xc0]\n
    unsigned int v21;  // [bp-0xbc]\n
    char *v22;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_3 *v23;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xa8]\n
    struct_3 *v25;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0x94]\n
    struct_3 *v27;  // [bp-0x90], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x88]\n
    char v29;  // [bp-0x81]\n
    unsigned int v30;  // [bp-0x80]\n
    unsigned int v31;  // [bp-0x7c]\n
    unsigned int v32;  // [bp-0x78]\n
    unsigned int v33;  // [bp-0x74]\n
    unsigned int v34;  // [bp-0x70]\n
    unsigned int v35;  // [bp-0x6c]\n
    char v36;  // [bp-0x68]\n
    unsigned int v37;  // [bp-0x24]\n
    char *v38;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v39;  // [bp-0xc]\n
    struct_1 *v41;  // rcx\n
    unsigned long long v42;  // rdx\n
    unsigned int *v43;  // rax\n
    struct_1 *v44;  // rcx\n
    unsigned int *v45;  // rdx\n
    struct_1 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax\n
    struct_1 *v49;  // rcx\n
    unsigned int *v50;  // rdx\n
    struct_1 *v51;  // rcx\n
    unsigned long long v52;  // rdx\n
    struct struct_0 **v53;  // rax\n
    struct_1 *v54;  // rcx\n
    struct struct_0 **v55;  // rdx\n
    unsigned long long v56;  // rdx\n
    struct struct_0 **v57;  // rax\n
    struct_1 *v58;  // rcx\n
    struct struct_0 **v59;  // rdx\n
    struct_1 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    struct struct_0 **v62;  // rax\n
    struct_1 *v63;  // rcx\n
    struct struct_0 **v64;  // rdx\n
\n
    v38 = a0;\n
    v37 = 0;\n
    if (!v38)\n
    {\n
        v39 = -1;\n
        return v39;\n
    }\n
    while (*(v38))\n
    {\n
        if (*(v38) != 64)\n
        {\n
            cgc_putc(*(v38));\n
            v38 += 1;\n
            v37 += 1;\n
LABEL_405cb6:\n
        }\n
        else\n
        {\n
            v38 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v38) == 64)\n
            {\n
                cgc_putc(64);\n
                v38 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 45)\n
            {\n
                v32 = 1;\n
                v38 += 1;\n
            }\n
            if (cgc_isdigit(*(v38)))\n
            {\n
                if (*(v38) == 48)\n
                {\n
                    v33 = 1;\n
                    v38 += 1;\n
                }\n
                if (cgc_isdigit(*(v38)))\n
                {\n
                    for (v35 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
                }\n
            }\n
            if (*(v38) == 46)\n
            {\n
                v38 += 1;\n
                for (v34 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
            }\n
            if (*(v38) == 99)\n
            {\n
                v19 = a1;\n
                v20 = v19->field_0;\n
                if (v20 <= 40)\n
                {\n
                    v41 = v19;\n
                    v42 = v20;\n
                    v43 = v42 + v41->field_10;\n
                    v41->field_0 = v42 + 8;\n
                    v18 = v43;\n
                }\n
                else\n
                {\n
                    v44 = v19;\n
                    v45 = v44->field_8;\n
                    v44->field_8 = &v45[2];\n
                    v18 = v45;\n
                }\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                cgc_putc(v29);\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 100)\n
            {\n
                v16 = a1;\n
                v17 = v16->field_0;\n
                if (v17 > 40)\n
                {\n
                    v49 = v16;\n
                    v50 = v49->field_8;\n
                    v49->field_8 = &v50[2];\n
                    v15 = v50;\n
                }\n
                else\n
                {\n
                    v46 = v16;\n
                    v47 = v17;\n
                    v48 = v47 + v46->field_10;\n
                    v46->field_0 = v47 + 8;\n
                    v15 = v48;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; v27->field_0; v27 += 1)\n
                {\n
                    cgc_putc(v27->field_0);\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 120)\n
            {\n
                v12 = a1;\n
                v13 = v12->field_0;\n
                if (v13 > 40)\n
                {\n
                    v54 = v12;\n
                    v55 = v54->field_8;\n
                    v54->field_8 = &v55[1];\n
                    v11 = v55;\n
                }\n
                else\n
                {\n
                    v51 = v12;\n
                    v52 = v13;\n
                    v53 = v52 + v51->field_10;\n
                    v51->field_0 = v52 + 8;\n
                    v11 = v53;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; v25->field_0; v25 += 1)\n
                {\n
                    cgc_putc(v25->field_0);\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 102)\n
            {\n
                v7 = a1;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 > 160)\n
                {\n
                    v58 = v7;\n
                    v59 = v58->field_8;\n
                    v58->field_8 = &v59[1];\n
                    v6 = v59;\n
                }\n
                else\n
                {\n
                    v56 = v9;\n
                    v57 = v56 + v7->field_10;\n
                    *(v8) = v56 + 16;\n
                    v6 = v57;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; v23->field_0; v23 += 1)\n
                {\n
                    cgc_putc(v23->field_0);\n
                    v37 += 1;\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (!(*(v38) == 115))\n
                goto LABEL_405cb6;\n
            v3 = a1;\n
            v4 = v3->field_0;\n
            if (v4 > 40)\n
            {\n
                v63 = v3;\n
                v64 = v63->field_8;\n
                v63->field_8 = &v64[1];\n
                v2 = v64;\n
            }\n
            else\n
            {\n
                v60 = v3;\n
                v61 = v4;\n
                v62 = v61 + v60->field_10;\n
                v60->field_0 = v61 + 8;\n
                v2 = v62;\n
            }\n
            v22 = *(v2);\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_405b53;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_405b53:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (!v33)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                cgc_putc(*(v22));\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v37 += 1;\n
                }\n
            }\n
            v38 += 1;\n
        }\n
    }\n
    v39 = v37;\n
    return v39;\n
}\n
", "4218061:sub_405ccd": null, "4218064:cgc_vsprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_vsprintf(char *a0, char *a1, struct_2 *a2)\n
{\n
    char v0;  // [bp-0x169]\n
    unsigned long v1;  // [bp-0x168]\n
    struct struct_1 **v2;  // [bp-0x160], Other Possible Types: unsigned long\n
    struct_2 *v3;  // [bp-0x158]\n
    unsigned int v4;  // [bp-0x14c]\n
    unsigned long v5;  // [bp-0x148]\n
    unsigned long long *v6;  // [bp-0x140], Other Possible Types: unsigned long\n
    struct_2 *v7;  // [bp-0x138]\n
    unsigned int *v8;  // [bp-0x130]\n
    unsigned int v9;  // [bp-0x124]\n
    unsigned long v10;  // [bp-0x120]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x110]\n
    unsigned int v13;  // [bp-0x104]\n
    unsigned long v14;  // [bp-0x100]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_2 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xd0]\n
    unsigned int v21;  // [bp-0xcc]\n
    char *v22;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_0 *v23;  // [bp-0xc0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xb8]\n
    struct_0 *v25;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0xa4]\n
    struct_0 *v27;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x98]\n
    char v29;  // [bp-0x91]\n
    unsigned int v30;  // [bp-0x90]\n
    unsigned int v31;  // [bp-0x8c]\n
    unsigned int v32;  // [bp-0x88]\n
    unsigned int v33;  // [bp-0x84]\n
    unsigned int v34;  // [bp-0x80]\n
    unsigned int v35;  // [bp-0x7c]\n
    char v36;  // [bp-0x78]\n
    unsigned int v37;  // [bp-0x2c]\n
    struct_2 *v38;  // [bp-0x28]\n
    char *v39;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v40;  // [bp-0xc]\n
    struct_2 *v42;  // rcx\n
    unsigned long long v43;  // rdx\n
    unsigned int *v44;  // rax\n
    struct_2 *v45;  // rcx\n
    unsigned int *v46;  // rdx\n
    struct_2 *v47;  // rcx\n
    unsigned long long v48;  // rdx\n
    unsigned int *v49;  // rax\n
    struct_2 *v50;  // rcx\n
    unsigned int *v51;  // rdx\n
    struct_2 *v52;  // rcx\n
    unsigned long long v53;  // rdx\n
    unsigned int *v54;  // rax\n
    struct_2 *v55;  // rcx\n
    unsigned int *v56;  // rdx\n
    unsigned long long v57;  // rdx\n
    unsigned long long *v58;  // rax\n
    struct_2 *v59;  // rcx\n
    unsigned long long *v60;  // rdx\n
    struct_2 *v61;  // rcx\n
    unsigned long long v62;  // rdx\n
    struct struct_1 **v63;  // rax\n
    struct_2 *v64;  // rcx\n
    struct struct_1 **v65;  // rdx\n
\n
    v39 = a1;\n
    v38 = a2;\n
    v37 = 0;\n
    if (!v39)\n
    {\n
        v40 = -1;\n
        return v40;\n
    }\n
    while (*(v39))\n
    {\n
        if (*(v39) != 64)\n
        {\n
            a0[v37] = *(v39);\n
            v39 += 1;\n
            v37 += 1;\n
LABEL_4067bb:\n
        }\n
        else\n
        {\n
            v39 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v39) == 64)\n
            {\n
                a0[v37] = 64;\n
                v39 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 45)\n
            {\n
                v32 = 1;\n
                v39 += 1;\n
            }\n
            if (cgc_isdigit(*(v39)))\n
            {\n
                if (*(v39) == 48)\n
                {\n
                    v33 = 1;\n
                    v39 += 1;\n
                }\n
                if (cgc_isdigit(*(v39)))\n
                {\n
                    for (v35 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
                }\n
            }\n
            if (*(v39) == 46)\n
            {\n
                v39 += 1;\n
                for (v34 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
            }\n
            if (*(v39) == 99)\n
            {\n
                v19 = v38;\n
                v20 = v19->field_0;\n
                if (v20 > 40)\n
                {\n
                    v45 = v19;\n
                    v46 = v45->field_8;\n
                    v45->field_8 = &v46[2];\n
                    v18 = v46;\n
                }\n
                else\n
                {\n
                    v42 = v19;\n
                    v43 = v20;\n
                    v44 = v43 + v42->field_10;\n
                    v42->field_0 = v43 + 8;\n
                    v18 = v44;\n
                }\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                a0[v37] = v29;\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 100)\n
            {\n
                v16 = v38;\n
                v17 = v16->field_0;\n
                if (v17 > 40)\n
                {\n
                    v50 = v16;\n
                    v51 = v50->field_8;\n
                    v50->field_8 = &v51[2];\n
                    v15 = v51;\n
                }\n
                else\n
                {\n
                    v47 = v16;\n
                    v48 = v17;\n
                    v49 = v48 + v47->field_10;\n
                    v47->field_0 = v48 + 8;\n
                    v15 = v49;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; v27->field_0; v27 += 1)\n
                {\n
                    a0[v37] = v27->field_0;\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 120)\n
            {\n
                v12 = v38;\n
                v13 = v12->field_0;\n
                if (v13 > 40)\n
                {\n
                    v55 = v12;\n
                    v56 = v55->field_8;\n
                    v55->field_8 = &v56[2];\n
                    v11 = v56;\n
                }\n
                else\n
                {\n
                    v52 = v12;\n
                    v53 = v13;\n
                    v54 = v53 + v52->field_10;\n
                    v52->field_0 = v53 + 8;\n
                    v11 = v54;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; *(v25); v25 += 1)\n
                {\n
                    a0[v37] = *(v25);\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 102)\n
            {\n
                v7 = v38;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 > 160)\n
                {\n
                    v59 = v7;\n
                    v60 = v59->field_8;\n
                    v59->field_8 = &v60[1];\n
                    v6 = v60;\n
                }\n
                else\n
                {\n
                    v57 = v9;\n
                    v58 = v57 + v7->field_10;\n
                    *(v8) = v57 + 16;\n
                    v6 = v58;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; *(v23); v23 += 1)\n
                {\n
                    a0[v37] = *(v23);\n
                    v37 += 1;\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (!(*(v39) == 115))\n
                goto LABEL_4067bb;\n
            v3 = v38;\n
            v4 = v3->field_0;\n
            if (v4 > 40)\n
            {\n
                v64 = v3;\n
                v65 = v64->field_8;\n
                v64->field_8 = &v65[1];\n
                v2 = v65;\n
            }\n
            else\n
            {\n
                v61 = v3;\n
                v62 = v4;\n
                v63 = v62 + v61->field_10;\n
                v61->field_0 = v62 + 8;\n
                v2 = v63;\n
            }\n
            v22 = *(v2);\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_406627;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_406627:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (!v33)\n
                        a0[v37] = 32;\n
                    else\n
                        a0[v37] = 48;\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                a0[v37] = *(v22);\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    a0[v37] = 32;\n
                    v37 += 1;\n
                }\n
            }\n
            v39 += 1;\n
        }\n
    }\n
    v40 = v37;\n
    return v40;\n
}\n
", "4220882:sub_4067d2": null, "4220896:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x10f8]\n
    unsigned long v1;  // [bp-0x10f0]\n
    unsigned long v2;  // [bp-0x10e8]\n
    unsigned long v3;  // [bp-0x10e0]\n
    unsigned long v4;  // [bp-0x10d8]\n
    unsigned long v5;  // [bp-0x10d0]\n
    int v6;  // [bp-0x10c8]\n
    int v7;  // [bp-0x10b8]\n
    int v8;  // [bp-0x10a8]\n
    int v9;  // [bp-0x1098]\n
    int v10;  // [bp-0x1088]\n
    int v11;  // [bp-0x1078]\n
    int v12;  // [bp-0x1068]\n
    int v13;  // [bp-0x1058]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4221071:sub_40688f": null, "4221072:cgc_sprintf": "long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4221236:sub_406934": null, "4221248:cgc_die": "long long cgc_die(unsigned int a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long long v1;  // r9\n
\n
    cgc_printf(\"\\n
******************\\n
@s\\n
*****************\\n
\", a0, a2, a3, a4);\n
    cgc__terminate(\"\\n
******************\\n
@s\\n
*****************\\n
\");\n
    return cgc_mallocOrDie(\"\\n
******************\\n
@s\\n
*****************\\n
\", a1, a2, a3, a4, v1);\n
}\n
", "4221296:cgc_mallocOrDie": "long long cgc_mallocOrDie(unsigned long a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char *v0;  // [bp-0x20]\n
\n
    v0 = cgc_malloc(a0);\n
    if (!v0)\n
        cgc_die(a1, a1, a2, a3, a4);\n
    cgc_bzero(v0, a0);\n
    return v0;\n
}\n
", "4221367:sub_4069b7": null, "4221376:cgc_init_data": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned int field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
    char padding_11[7];\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    unsigned long long field_40;\n
} struct_0;\n
\n
extern unsigned int g_40b099;\n
\n
long long cgc_init_data(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_1 *v1;  // [bp-0x10]\n
    unsigned long long v3;  // rax\n
\n
    v1 = 0;\n
    v1 = cgc_mallocOrDie(56, \"Failed to malloc workingData\", a2, a3, a4);\n
    v1->field_0 = cgc_mallocOrDie(80, \"Failed to malloc root node\", a2, a3, a4);\n
    v1->field_0->field_38 = 0;\n
    v1->field_0->field_8 = 0;\n
    v1->field_0->field_18 = 0;\n
    v1->field_30 = 0;\n
    v1->field_0->field_10 = 68;\n
    v1->field_8 = v1->field_0;\n
    v1->field_20 = cgc__add_user(\"root\", 0);\n
    v1->field_28 = cgc__add_group(\"root\", 0);\n
    v1->field_10 = v1->field_20;\n
    v1->field_18 = v1->field_28;\n
    cgc_add_user_to_group(v1->field_20, v1->field_28);\n
    v3 = cgc_add_perm(v1->field_20, 0, v1->field_0);\n
    v1->field_0->field_20 = v3;\n
    cgc_add_perm(0, v1->field_28, v1->field_0, v3);\n
    v1->field_0->field_30 = 0;\n
    v1->field_0->field_38 = 0;\n
    v1->field_0->field_40 = 0;\n
    *(&v0) = cgc_mallocOrDie(5, \"Failed to malloc root name\", a2, a3, a4);\n
    v1->field_0->field_28 = *(&v0);\n
    cgc_strcpy(*(&v0), &g_40b099);\n
    return v1;\n
}\n
", "4221797:sub_406b65": null, "4221808:cgc__add_user": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc__add_user(unsigned int a0, struct_0 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned long long v3[3];  // [bp-0x28]\n
    unsigned long long v4[3];  // [bp-0x10]\n
\n
    v3[0] = cgc_mallocOrDie(24, \"Failed to allocate user\", a2, a3, a4);\n
    *(&v2) = cgc_mallocOrDie(cgc_strlen(a0) + 1, \"Failed to allocate username\", a2, a3, a4);\n
    cgc_strcpy(*(&v2), a0);\n
    v3[2] = *(&v2);\n
    if (!a1)\n
    {\n
        v3[0] = 0;\n
    }\n
    else\n
    {\n
        v1 = a1;\n
        for (v0 = a1->field_8; v0; v0 = *((v0 + 8)))\n
        {\n
            v1 = v0;\n
        }\n
        *((v1 + 8)) = v3;\n
        v3[0] = v1;\n
    }\n
    v3[1] = 0;\n
    v4[0] = v3;\n
    return v4;\n
}\n
", "4222057:sub_406c69": null, "4222064:cgc__add_group": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_1;\n
\n
long long cgc__add_group(unsigned int a0, struct_0 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x30]\n
    struct_1 *v3;  // [bp-0x28]\n
    struct_1 *v4;  // [bp-0x20], Other Possible Types: struct_0 *\n
    struct_1 *v5;  // [bp-0x10]\n
\n
    v4 = a1;\n
    v3 = cgc_mallocOrDie(40, \"Failed to allocate group\", a2, a3, a4);\n
    *(&v2) = cgc_mallocOrDie(cgc_strlen(a0) + 1, \"Failed to allocate groupName\", a2, a3, a4);\n
    cgc_strcpy(*(&v2), a0);\n
    v3->field_20 = *(&v2);\n
    v3->field_0 = 0;\n
    v3->field_18 = 0;\n
    v3->field_10 = 0;\n
    if (!v4)\n
    {\n
        v4 = v3;\n
    }\n
    else\n
    {\n
        v1 = v4;\n
        for (v0 = v1; v0; v0 = *((v1 + 16)))\n
        {\n
            v1 = v0;\n
        }\n
        v3->field_8 = v1;\n
        *((v1 + 16)) = v3;\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4222317:sub_406d6d": null, "4222320:cgc_add_user_to_group": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_add_user_to_group(unsigned long a0, struct_1 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v2[3];  // [bp-0x20]\n
\n
    v2[0] = cgc_mallocOrDie(24, \"Failed to allocate newUser\", a2, a3, a4);\n
    v2[2] = a0;\n
    v2[1] = 0;\n
    if (!a1->field_18)\n
    {\n
        a1->field_18 = &v2[0];\n
        v2[0] = 0;\n
        a1->field_0 = 1;\n
        return v2;\n
    }\n
    v1 = a1->field_18;\n
    for (v0 = v1; v0; v0 = *((v0 + 8)))\n
    {\n
        v1 = v0;\n
    }\n
    *((v1 + 8)) = v2;\n
    v2[0] = v1;\n
    a1->field_0 = a1->field_0 + 1;\n
    return v2;\n
}\n
", "4222534:sub_406e46": null, "4222544:cgc_add_perm": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern unsigned int g_40b0ed;\n
\n
long long cgc_add_perm(unsigned long a0, unsigned long long a1, struct_1 *a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long v2[4];  // [bp-0x30]\n
    unsigned long long v3[4];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0 && !a1)\n
        goto LABEL_406e90;\n
    if (!a0)\n
        goto LABEL_406e9c;\n
    if (!a1)\n
        goto LABEL_406e9c;\n
LABEL_406e90:\n
    cgc_die(4239597, a1, a2, a3, a4);\n
LABEL_406e9c:\n
    v2[0] = cgc_mallocOrDie(32, \"Failed to malloc pPerms\", a2, a3, a4);\n
    if (a0)\n
        v2[2] = a0;\n
    if (a1)\n
        v2[3] = a1;\n
    if (!a2->field_20)\n
    {\n
        a2->field_20 = &v2[0];\n
    }\n
    else\n
    {\n
        v1 = a2->field_20;\n
        for (v0 = v1; v0; v0 = *((v1 + 8)))\n
        {\n
            if (*((v1 + 16)) && *((v1 + 16)) == a0)\n
            {\n
                v3[0] = 0;\n
                return v3;\n
            }\n
            if (*((v1 + 24)) && *((v1 + 24)) == a1)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v1 = v0;\n
        }\n
        *((v1 + 8)) = v2;\n
        v2[0] = v1;\n
        v2[1] = 0;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4222920:sub_406fc8": null, "4222928:cgc_find_perm_by_name": "typedef struct struct_3 {\n
    char padding_0[32];\n
    struct struct_2 *field_20;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    struct struct_6 *field_8;\n
    struct struct_5 *field_10;\n
    struct struct_4 *field_18;\n
} struct_6;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_find_perm_by_name(unsigned int a0, struct_3 *a1, unsigned long long a2)\n
{\n
    struct_6 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    cgc_validate_current_perms(a1, a2);\n
    v0 = &a1->field_20->padding_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((v0 + 16)) && !cgc_strcmp(*((*((v0 + 16)) + 16)), a0))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        if (v0->field_18 && !cgc_strcmp(*(&v0->field_18->field_20), a0))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = *((v0 + 8));\n
    }\n
}\n
", "4223145:sub_4070a9": null, "4223152:cgc_validate_current_perms": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
    unsigned int field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_validate_current_perms(struct_1 *a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_20;\n
    v1 = v3;\n
    v0 = 0;\n
    if (!v1)\n
        return a0->field_20;\n
    v3 = v1;\n
    if (!v3->field_10)\n
    {\n
        v3 = v1;\n
        if (!v3->field_18)\n
        {\n
            v3 = cgc_printf(\"Bad perm @s\\n
\", *(&a0->field_28), a2, a3, a4);\n
            return v3;\n
        }\n
    }\n
    for (; v1; v1 = v3)\n
    {\n
        if (v1->field_10)\n
        {\n
            if (cgc_is_user_valid(v1->field_10, a1))\n
                v0 = v1->field_8;\n
            else\n
                v0 = cgc_delete_perms(a0, v1);\n
        }\n
        if (v1->field_18)\n
        {\n
            if (cgc_is_group_valid(v1->field_18, a1))\n
                v0 = v1->field_8;\n
            else\n
                v0 = cgc_delete_perms(a0, v1);\n
        }\n
        v3 = v0;\n
    }\n
    return v3;\n
}\n
", "4223461:sub_4071e5": null, "4223472:cgc_delete_perms": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
} struct_3;\n
\n
long long cgc_delete_perms(struct_0 *a0, struct_2 *a1)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    unsigned long long *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = &a1->field_8->field_0;\n
    if (a1->field_0)\n
        a1->field_0->field_8 = a1->field_8;\n
    if (!a1->field_0)\n
        a0->field_20 = a1->field_8;\n
    if (a1->field_8)\n
        a1->field_8->field_0 = a1->field_0;\n
    cgc_free(a1);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4223647:sub_40729f": null, "4223648:cgc_is_user_valid": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_is_user_valid(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a1->field_20;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0 == a0)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 = v0->field_8;\n
    }\n
}\n
", "4223738:sub_4072fa": null, "4223744:cgc_is_group_valid": "typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_is_group_valid(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a1->field_28;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0 != a0)\n
        {\n
            v0 = v0->field_10;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4223834:sub_40735a": null, "4223840:cgc__add_node": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char field_10;\n
    char padding_11[7];\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    unsigned long long field_40;\n
    unsigned long long field_48;\n
} struct_0;\n
\n
long long cgc__add_node(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v3;  // ecx\n
\n
    v1 = cgc_mallocOrDie(80, \"Failed to mallod node\", a2, a3, a4);\n
    v1->field_38 = a3;\n
    v1->field_0 = 0;\n
    v1->field_48 = 0;\n
    v1->field_40 = 0;\n
    v1->field_10 = a0;\n
    v3 = a1;\n
    v1->field_18 = a1;\n
    v1->field_20 = cgc_add_perm(a4, 0, v1, a1, a4);\n
    *(&v0) = cgc_mallocOrDie(cgc_strlen(a2) + 1, \"Failed to malloc name\", a2, a1, a4);\n
    cgc_strcpy(*(&v0), a2);\n
    v1->field_28 = *(&v0);\n
    v1->field_30 = 0;\n
    v1->field_38 = a3;\n
    if (!*((a3 + 64)))\n
    {\n
        *((a3 + 64)) = v1;\n
        *((a3 + 72)) = v1;\n
        v1->field_8 = 0;\n
        return v1;\n
    }\n
    *(*((a3 + 72))) = v1;\n
    v1->field_8 = *((a3 + 72));\n
    *((a3 + 72)) = v1;\n
    return v1;\n
}\n
", "4224174:sub_4074ae": null, "4224176:cgc_get_file_size": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long cgc_get_file_size(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v1 = a0->field_8;\n
    for (v0 = 0; v1; v1 = v1->field_18)\n
    {\n
        v0 = v1->field_8 + v0;\n
    }\n
    return v0;\n
}\n
", "4224249:sub_4074f9": null, "4224256:cgc_delete_file_bytes": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
long long cgc_delete_file_bytes(struct_2 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    struct_1 *v4;  // [bp-0x28], Other Possible Types: struct_0 *, unsigned long\n
    struct_0 *v5;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v5 = a0->field_8;\n
    v4 = &a0->field_8->field_0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (v5)\n
    {\n
        v2 = *((v5 + 8)) + v2;\n
        if (v1 == 1)\n
        {\n
            v5 = cgc_delete_chunk(a0, v5);\n
        }\n
        else\n
        {\n
            if (v2 >= a1)\n
            {\n
                v4 = v5;\n
                v1 = 1;\n
                v3 = v2 - a1;\n
            }\n
            v5 = v5->field_18;\n
        }\n
    }\n
    v2 = *((v4 + 8)) - v3;\n
    *(&v0) = cgc_mallocOrDie(v2, \"Failed to malloc filechunk\", a2, a3, a4);\n
    cgc_memcpy(*(&v0), *(v4), v2);\n
    cgc_free(*(v4));\n
    *((v4 + 8)) = v2;\n
    *(v4) = *(&v0);\n
    return v4;\n
}\n
", "4224517:sub_407605": null, "4224528:cgc_delete_chunk": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_1 *field_10;\n
    struct struct_2 *field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
long long cgc_delete_chunk(struct_0 *a0, struct_3 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v3;  // rax\n
    struct_0 *v4;  // rax\n
\n
    v0 = a1->field_18;\n
    if (!a1)\n
    {\n
        cgc_puts(\"delete_chunk called with NULL\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (a1->field_10)\n
    {\n
        a1->field_10->field_18 = a1->field_18;\n
        if (!a1->field_18)\n
            a0->field_10 = 0;\n
        else\n
            a1->field_18->field_10 = a1->field_10;\n
        v4 = a0;\n
        v4->field_0 = v4->field_0 - 1;\n
    }\n
    else\n
    {\n
        a0->field_8 = a1->field_18;\n
        if (!a1->field_18)\n
        {\n
            a0->field_10 = 0;\n
            a0->field_0 = 0;\n
        }\n
        else\n
        {\n
            a1->field_18->field_10 = 0;\n
            v3 = a0;\n
            v3->field_0 = v3->field_0 - 1;\n
        }\n
    }\n
    cgc_free(a1->field_0);\n
    cgc_free(a1);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4224819:sub_407733": null, "4224832:cgc_add_file_chunk": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
long long cgc_add_file_chunk(unsigned int a0, struct_2 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
\n
    v0 = cgc_mallocOrDie(32, \"Failed to malloc filechunk\", a2, a3, a4);\n
    *(&v0->field_0) = cgc_mallocOrDie(a2, \"Failed to malloc chunk\", a2, a3, a4);\n
    cgc_memcpy(*(&v0->field_0), a0, a2);\n
    v0->field_8 = a2;\n
    if (!a1->field_10)\n
    {\n
        a1->field_8 = v0;\n
        a1->field_10 = &v0->field_0;\n
        v0->field_10 = 0;\n
        a1->field_0 = 1;\n
    }\n
    else\n
    {\n
        a1->field_0 = a1->field_0 + 1;\n
        a1->field_10->field_18 = v0;\n
        v0->field_10 = a1->field_10;\n
        a1->field_10 = &v0->field_0;\n
    }\n
    v0->field_18 = 0;\n
    return v0;\n
}\n
", "4225071:sub_40782f": null, "4225072:cgc_add_file": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_add_file(unsigned int a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4, unsigned long a5)\n
{\n
    struct_0 *v0;  // [bp-0x48]\n
    unsigned long v1;  // [bp-0x40]\n
    void* v2;  // [bp-0x38]\n
\n
    v2 = cgc_mallocOrDie(24, \"Failed to malloc file\", a2, a3, a4);\n
    if (a2 > 0)\n
        v1 = cgc_add_file_chunk(a4, v2, a2, a3, a4);\n
    v0 = cgc__add_node(70, a1, a3, a0, a5);\n
    v0->field_30 = v2;\n
    return v0;\n
}\n
", "4225204:sub_4078b4": null, "4225216:cgc_delete_file": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_delete_file(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0->field_8; v0; v0 = cgc_delete_chunk(a0, v0));\n
    return cgc_free(a0);\n
}\n
", "4225288:sub_407908": null, "4225296:cgc_delete_node": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
    char field_10;\n
    char padding_11[15];\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    struct struct_3 *field_38;\n
    unsigned long long field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[64];\n
    unsigned long long field_40;\n
    unsigned long long field_48;\n
} struct_3;\n
\n
long long cgc_delete_node(struct_1 *a0, unsigned long long *a1)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x20]\n
\n
    v3 = a0->field_0;\n
    if (a0 == *(a1))\n
        cgc_puts(\"can not delete root directory\");\n
    if (a0->field_10 == 70)\n
    {\n
        v2 = a0->field_30;\n
        cgc_delete_file(v2);\n
    }\n
    if (a0->field_10 == 68)\n
    {\n
        for (v1 = a0->field_40; v1; v1 = cgc_delete_node(v1, a1));\n
    }\n
    if (a0->field_8)\n
    {\n
        a0->field_8->field_0 = a0->field_0;\n
        if (!a0->field_0)\n
            a0->field_38->field_48 = a0->field_8;\n
        else\n
            a0->field_0->field_8 = a0->field_8;\n
    }\n
    else\n
    {\n
        a0->field_38->field_40 = a0->field_0;\n
        if (!a0->field_0)\n
        {\n
            a0->field_38->field_40 = 0;\n
            a0->field_38->field_48 = 0;\n
        }\n
        else\n
        {\n
            a0->field_0->field_8 = 0;\n
        }\n
    }\n
    for (v0 = a0->field_20; v0; v0 = cgc_delete_perms(a0, v0));\n
    cgc_free(a0->field_28);\n
    cgc_free(a0);\n
    return v3;\n
}\n
", "4225720:sub_407ab8": null, "4225728:cgc_add_directory": "long long cgc_add_directory(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3)\n
{\n
    unsigned long long v0[10];  // [bp-0x30]\n
\n
    v0[0] = cgc__add_node(68, a0, a1, a2, a3);\n
    v0[8] = 0;\n
    v0[9] = 0;\n
    return v0;\n
}\n
", "4225814:sub_407b16": null, "4225824:cgc_add_user": "typedef struct struct_0 {\n
    char padding_0[32];\n
    void* field_20;\n
} struct_0;\n
\n
long long cgc_add_user(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    return cgc__add_user(a0, a1->field_20, a2, a3, a4);\n
}\n
", "4225863:sub_407b47": null, "4225872:cgc_is_user_in_group": "typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_is_user_in_group(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a1->field_18;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0->field_10 != a0)\n
        {\n
            v0 = v0->field_8;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4225969:sub_407bb1": null, "4225984:cgc_remove_user_from_group": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
} struct_3;\n
\n
long long cgc_remove_user_from_group(unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    struct_2 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax\n
\n
    v1 = cgc_is_user_in_group(a0, a1);\n
    v0 = 0;\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_0)\n
    {\n
        if (!v1->field_8)\n
        {\n
            v1->field_0->field_8 = 0;\n
        }\n
        else\n
        {\n
            v1->field_0->field_8 = v1->field_8;\n
            v1->field_8->field_0 = v1->field_0;\n
        }\n
        v5 = a1;\n
        v5->field_0 = v5->field_0 - 1;\n
    }\n
    else if (!v1->field_8)\n
    {\n
        a1->field_18 = 0;\n
        a1->field_0 = 0;\n
    }\n
    else\n
    {\n
        a1->field_18 = v1->field_8;\n
        v1->field_8->field_0 = 0;\n
        v4 = a1;\n
        v4->field_0 = v4->field_0 - 1;\n
    }\n
    v0 = v1->field_0;\n
    cgc_free(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4226289:sub_407cf1": null, "4226304:cgc_remove_user": "typedef struct struct_4 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
    struct struct_3 *field_28;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long cgc_remove_user(struct_1 *a0, struct_4 *a1)\n
{\n
    void* v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    struct_3 *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1->field_28;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        cgc_puts(\"Bad call:remove_user\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        cgc_puts(\"Can not delete root\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0 != a1->field_20)\n
    {\n
        for (v0 = 0; v2; v2 = *((v2 + 16)))\n
        {\n
            cgc_remove_user_from_group(a0, v2);\n
        }\n
        a0->field_0->field_8 = a0->field_8;\n
        if (a0->field_8)\n
            a0->field_8->field_0 = a0->field_0;\n
        v1 = a0->field_0;\n
        cgc_free(a0->field_10);\n
        cgc_free(a0);\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4226603:sub_407e2b": null, "4226608:cgc_remove_group": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_10;\n
    struct struct_1 *field_18;\n
    unsigned long long field_20;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_2;\n
\n
long long cgc_remove_group(struct_3 *a0, struct_4 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        cgc_puts(\"bad call to remove_group\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0 == a1->field_28)\n
    {\n
        cgc_puts(\"Unable to delete group root\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v1 = a0->field_18;\n
        for (v0 = v1; v1; v1 = *((v1 + 8)))\n
        {\n
            v0 = v1;\n
        }\n
        for (; v0; v0 = cgc_remove_user_from_group(*((v0 + 16)), a0));\n
        if (a0->field_8)\n
            a0->field_8->field_10 = a0->field_10;\n
        if (a0->field_10)\n
            a0->field_10->field_8 = a0->field_8;\n
        v2 = a0->field_8;\n
        cgc_free(a0->field_20);\n
        cgc_free(a0);\n
        v3 = v2;\n
        return v3;\n
    }\n
}\n
", "4226947:sub_407f83": null, "4226960:cgc_find_user_by_name": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned int field_10;\n
} struct_1;\n
\n
long long cgc_find_user_by_name(unsigned int a0, struct_2 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = &a1->field_20->padding_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (cgc_strcmp(a0, *((v0 + 16))))\n
        {\n
            v0 = *((v0 + 8));\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4227081:sub_408009": null, "4227088:cgc_find_user_by_number": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
long long cgc_find_user_by_number(unsigned long a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v1 = a1->field_20;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        if (v0 == a0)\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        v0 += 1;\n
        v1 = v1->field_8;\n
    }\n
}\n
", "4227202:sub_408082": null, "4227216:cgc_add_group": "typedef struct struct_0 {\n
    char padding_0[40];\n
    void* field_28;\n
} struct_0;\n
\n
long long cgc_add_group(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    return cgc__add_group(a0, a1->field_28, a2, a3, a4);\n
}\n
", "4227255:sub_4080b7": null, "4227264:cgc_find_group_by_number": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
long long cgc_find_group_by_number(unsigned long a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v1 = a1->field_28;\n
    v0 = 0;\n
    while (v1)\n
    {\n
        if (v0 == a0)\n
        {\n
            v2 = v1;\n
            v1 = 0;\n
        }\n
        else\n
        {\n
            v0 += 1;\n
            v1 = *((v1 + 16));\n
        }\n
    }\n
    return v2;\n
}\n
", "4227378:sub_408132": null, "4227392:cgc_find_group_by_name": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    unsigned int field_20;\n
} struct_2;\n
\n
long long cgc_find_group_by_name(unsigned int a0, struct_1 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (a1->field_28)\n
    {\n
        for (v0 = &a1->field_28->padding_0; v0; v0 = *((v0 + 16)))\n
        {\n
            if (!cgc_strcmp(a0, *((v0 + 32))))\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4227533:sub_4081cd": null, "4227536:cgc_recursive_path": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    char padding_2c[12];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
long long cgc_recursive_path(unsigned long long a0, struct_0 *a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v6;  // rax\n
\n
    if (a1 == a0)\n
    {\n
        *(&v3) = cgc_mallocOrDie(cgc_strlen(*(&a1->field_28)) + 2, \"Failed to allocate endName\", a2, a3, a4);\n
        cgc_strcpy(*(&v3), *(&a1->field_28));\n
        v4 = *(&v3);\n
        return v4;\n
    }\n
    else if (a1->field_38)\n
    {\n
        v2 = cgc_recursive_path(a0, a1->field_38, a2, a3, a4);\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_strlen(v2);\n
        v6 = cgc_strlen(*(&a1->field_28));\n
        v1 = cgc_mallocOrDie(v0 + v6 + 2, \"Failed to allocate retpath\", a2, v6, a4);\n
        cgc_strcpy(v1, v2);\n
        cgc_strcat(v1, \"/\");\n
        cgc_strcat(v1, *(&a1->field_28));\n
        cgc_free(v2);\n
        v4 = v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4227835:sub_4082fb": null, "4227840:cgc_str_of_path": "long long cgc_str_of_path(char *a0, unsigned long long *a1, void* a2, unsigned long long a3, unsigned long long a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x28]\n
\n
    v1 = cgc_recursive_path(*(a1), a2, a2, a3, a4);\n
    v0 = cgc_strlen(v1);\n
    if (v0 >= 4000)\n
    {\n
        v0 = 3999;\n
        cgc_puts(\"Path exceeds max path size and has been truncated\");\n
    }\n
    strncpy(a0, v1, v0);\n
    return cgc_free(v1);\n
}\n
", "4227957:sub_408375": null, "4227968:cgc_find_node_by_name": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[32];\n
    unsigned long long field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[32];\n
    unsigned int field_28;\n
} struct_0;\n
\n
long long cgc_find_node_by_name(unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = &a1->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcmp(a0, *(&v0->field_28)))\n
        {\n
            v0 = v0->field_0;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4228076:sub_4083ec": null, "4228080:cgc_find_directory_by_name": "typedef struct struct_1 {\n
    char padding_0[64];\n
    void* field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_8[8];\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    char field_10;\n
} struct_2;\n
\n
long long cgc_find_directory_by_name(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_find_node_by_name(a0, a1->field_40);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0->field_10 != 68)\n
        {\n
            v0 = cgc_find_node_by_name(a0, v0->field_0);\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4228201:sub_408469": null, "4228208:cgc_find_file_by_name": "typedef struct struct_1 {\n
    char padding_0[64];\n
    void* field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_8[8];\n
    char field_10;\n
    char padding_11[31];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_find_file_by_name(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_find_node_by_name(a0, a1->field_40);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0->field_10 != 70)\n
        {\n
            v0 = cgc_find_node_by_name(a0, v0->field_0);\n
        }\n
        else\n
        {\n
            v1 = *((v0 + 48));\n
            return v1;\n
        }\n
    }\n
}\n
", "4228333:sub_4084ed": null, "4228336:cgc_find_file_node_by_name": "typedef struct struct_1 {\n
    char padding_0[64];\n
    void* field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_8[8];\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    char field_10;\n
} struct_2;\n
\n
long long cgc_find_file_node_by_name(unsigned long a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_find_node_by_name(a0, a1->field_40);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0->field_10 == 70)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 = cgc_find_node_by_name(a0, v0->field_0);\n
    }\n
}\n
", "4228457:sub_408569": null, "4228464:main": "int main(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    *(&v1) = a1;\n
    v0 = cgc_init_data(a0, a1, a2, a3, a4);\n
    cgc_start_UI(v0);\n
    return 0;\n
}\n
", "4228512:cgc_strict_atoi": "long long cgc_strict_atoi(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = cgc_atoi(a0);\n
            return v2;\n
        }\n
        if (a0[v1] > 57)\n
            break;\n
        if (a0[v1] < 48)\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4228658:sub_408632": null, "4228672:cgc_get_int": "long long cgc_get_int(unsigned int a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1a]\n
\n
    cgc_printf(\"@s :\", a0, a2, a3, a4);\n
    v1 = cgc_receive_until(&v2, 10, 9);\n
    (&v2)[v1] = 0;\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if ((&v2)[v0] <= 57 && !((&v2)[v0] < 48))\n
            goto LABEL_4086bd;\n
        (&v2)[v0] = 48;\n
LABEL_4086bd:\n
    }\n
    v1 = cgc_atoi(&v2);\n
    return v1;\n
}\n
", "4228837:sub_4086e5": null, "4228848:cgc_get_string": "long long cgc_get_string(char *a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
\n
    cgc_printf(\"@s >\", a2, a2, a3, a4);\n
    v0 = cgc_receive_until(a0, 10, a1);\n
    a0[v0] = 0;\n
    return v0;\n
}\n
", "4228928:cgc_print_prompt": "typedef struct struct_1 {\n
    char padding_0[8];\n
    void* field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_print_prompt(struct_1 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xfb8]\n
\n
    cgc_bzero(&v0, 4000);\n
    cgc_str_of_path(&v0, a0, a0->field_8, a3, a4);\n
    return cgc_printf(\"@s@@SPIFF:@s/\", *(&a0->field_10->field_10), &v0, a3, a4);\n
}\n
", "4229026:sub_4087a2": null, "4229040:cgc_print_help": "long long cgc_print_help(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v2;  // rcx\n
    unsigned long v3;  // rcx\n
\n
    cgc_printf(\"< \", a1, a2, a3, a4);\n
    for (v0 = 0; v0 < a1 - 1; v0 += 1)\n
    {\n
        v2 = v0;\n
        cgc_printf(\"@s, \", *((a0 + v2 * 8)), a2, v2, a4);\n
    }\n
    v3 = a1 - 1;\n
    return cgc_printf(\"@s >\\n
\", *((a0 + v3 * 8)), a2, v3, a4);\n
}\n
", "4229170:sub_408832": null, "4229184:cgc_parse_arg": "long long cgc_parse_arg(unsigned long a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 1;\n
    v0 = cgc_strlen(a1);\n
    for (v1 = 0; v1 < v0; v1 += 1)\n
    {\n
        if (a1[v1] != 32)\n
        {\n
            if (v2 == 1)\n
                v3 = v1;\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                cgc_bzero(a0 + v4 * 0x100, 0x100);\n
                cgc_strncpy(a0 + v4 * 0x100, &a1[v3], v1 - v3);\n
                if (v4 == 15)\n
                    break;\n
                v4 += 1;\n
            }\n
            v2 = 1;\n
            v3 = v1;\n
        }\n
    }\n
    if (v3 < v1)\n
    {\n
        cgc_bzero(a0 + v4 * 0x100, 0x100);\n
        cgc_strncpy(a0 + v4 * 0x100, &a1[v3], v1 - v3);\n
        v4 += 1;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4229527:sub_408997": null, "4229536:cgc_print_perms": "typedef struct struct_3 {\n
    char padding_0[32];\n
    struct struct_2 *field_20;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    struct struct_6 *field_8;\n
    struct struct_5 *field_10;\n
    struct struct_4 *field_18;\n
} struct_6;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_print_perms(struct_3 *a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_6 *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_2 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = &a0->field_20->padding_0;\n
    v2 = cgc_validate_current_perms(a0, a1, a2, a3, a4);\n
    for (; v0; v0 = v2)\n
    {\n
        if (*((v0 + 16)))\n
            cgc_printf(\" @s\", *((*((v0 + 16)) + 16)), a2, a3, a4);\n
        if (v0->field_18)\n
            cgc_printf(\" @s\", *(&v0->field_18->field_20), a2, a3, a4);\n
        v2 = v0->field_8;\n
    }\n
    return v2;\n
}\n
", "4229693:sub_408a3d": null, "4229696:cgc_print_user_list": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_print_user_list(struct_1 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = &a0->field_20->padding_0;\n
    v0 = 0;\n
    v3 = cgc_printf(\"UID    NAME\\n
__________\\n
\", a1, a2, a3, a4);\n
    for (; v1; v1 = v3)\n
    {\n
        cgc_printf(\"@d @s\\n
\", v0, *(&v1->field_10), a3, a4);\n
        v0 += 1;\n
        v3 = v1->field_8;\n
    }\n
    return v3;\n
}\n
", "4229809:sub_408ab1": null, "4229824:cgc_print_group_list": "typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_print_group_list(struct_1 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = &a0->field_28->padding_0;\n
    v0 = 0;\n
    v3 = cgc_printf(\"GUID     NAME\\n
____________________\\n
\", a1, a2, a3, a4);\n
    for (; v1; v1 = v3)\n
    {\n
        cgc_printf(\"@d @s\\n
\", v0, *(&v1->field_20), a3, a4);\n
        v0 += 1;\n
        v3 = v1->field_10;\n
    }\n
    return v3;\n
}\n
", "4229937:sub_408b31": null, "4229952:cgc_print_users_in_group": "typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    struct struct_4 *field_8;\n
    struct struct_3 *field_10;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_print_users_in_group(struct_2 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_4 *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_1 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = &a0->field_18->padding_0;\n
    v0 = 0;\n
    v3 = cgc_printf(\"Count Name\\n
____________________\\n
\", a1, a2, a3, a4);\n
    for (; v1; v1 = v3)\n
    {\n
        cgc_printf(\"@d @s\\n
\", v0, *(&v1->field_10->field_10), a3, a4);\n
        v0 += 1;\n
        v3 = v1->field_8;\n
    }\n
    return v3;\n
}\n
", "4230069:sub_408bb5": null, "4230080:cgc_find_group": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_find_group(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = cgc_strict_atoi(a0);\n
    if (cgc_strcmp(a0, \"root\") && cgc_strcmp(a0, \"0\"))\n
    {\n
        if (v0)\n
        {\n
            v1 = cgc_find_group_by_number(v0, a1);\n
            if (v1)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
        v1 = cgc_find_group_by_name(a0, a1);\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = a1->field_28;\n
    return v2;\n
}\n
", "4230273:sub_408c81": null, "4230288:cgc_find_user": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_find_user(unsigned long a0, struct_0 *a1)\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v2 = 0;\n
    v1 = cgc_strict_atoi(a0);\n
    v0 = 0;\n
    if (cgc_strcmp(a0, \"root\"))\n
        v0 = cgc_strcmp(a0, \"0\");\n
    if (!(v0 & 1))\n
    {\n
        v3 = a1->field_20;\n
        return v3;\n
    }\n
    if (v1)\n
    {\n
        v2 = cgc_find_user_by_number(v1, a1);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
    v2 = cgc_find_user_by_name(a0, a1);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4230505:sub_408d69": null, "4230512:cgc_print_working_dir": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
    char padding_8[8];\n
    char field_10;\n
    char padding_11[7];\n
    unsigned int field_18;\n
    char padding_1c[12];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    void* field_30;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    char field_10;\n
    char padding_11[7];\n
    unsigned int field_18;\n
    char padding_1c[12];\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
long long cgc_print_working_dir(struct_2 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_3 *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = &a0->field_8->field_40->field_0;\n
    v2 = cgc_printf(\"Type  Size     Date     Name       Perms\\n
_______________________________________\\n
\", a1, a2, a3, a4);\n
    for (; v0; v0 = v2)\n
    {\n
        if (*((v0 + 16)) == 70)\n
        {\n
            cgc_printf(\"FILE @d  @x   @s  \", cgc_get_file_size(*((v0 + 48))), *((v0 + 24)), *((v0 + 40)), a4);\n
            cgc_print_perms(v0, a0, a2, a3, a4);\n
            cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
        }\n
        if (v0->field_10 == 68)\n
        {\n
            cgc_printf(\"DIR  @d  @x   @s \", 80, *((v0 + 24)), *(&v0->field_28), a4);\n
            cgc_print_perms(v0, a0, a2, a3, a4);\n
            cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
        }\n
        v2 = v0->field_0;\n
    }\n
    return v2;\n
}\n
", "4230753:sub_408e61": null, "4230768:cgc_main_loop": "typedef struct struct_2 {\n
    char padding_0[16];\n
    char field_10;\n
    char padding_11[31];\n
    struct struct_1 *field_30;\n
    char padding_38[8];\n
    unsigned long long field_40;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    struct struct_3 *field_8;\n
    struct struct_5 *field_10;\n
    struct struct_4 *field_18;\n
    char padding_20[16];\n
    unsigned int field_30;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_7;\n
\n
typedef struct struct_3 {\n
    char padding_0[56];\n
    unsigned long long field_38;\n
    void* field_40;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
} struct_4;\n
\n
extern unsigned int g_40b099;\n
extern unsigned int g_40b330;\n
extern unsigned int g_40b354;\n
extern unsigned int g_40b374;\n
extern char g_40b394;\n
extern unsigned int g_40b3b4;\n
extern unsigned int g_40b715;\n
extern void g_40d010;\n
extern unsigned long long g_40d060;\n
extern unsigned long long g_40d068;\n
extern unsigned long long g_40d070;\n
extern unsigned long long g_40d078;\n
extern void g_40d080;\n
extern void g_40d0c0;\n
extern void g_40d100;\n
\n
long long cgc_main_loop(struct_6 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x2280]\n
    unsigned long v1;  // [bp-0x2278]\n
    unsigned int v2;  // [bp-0x226c]\n
    unsigned int v3;  // [bp-0x2268]\n
    unsigned int v4;  // [bp-0x2264]\n
    unsigned long v5;  // [bp-0x2260]\n
    unsigned long v6;  // [bp-0x2258]\n
    unsigned long v7;  // [bp-0x2250]\n
    unsigned long v8;  // [bp-0x2248]\n
    void* v9;  // [bp-0x2240], Other Possible Types: unsigned long\n
    struct_0 *v10;  // [bp-0x2238], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x2230], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x2228]\n
    void* v13;  // [bp-0x2220], Other Possible Types: unsigned long\n
    void* v14;  // [bp-0x2218], Other Possible Types: unsigned long, unsigned int\n
    struct_2 *v15;  // [bp-0x2210], Other Possible Types: unsigned long\n
    void* v16;  // [bp-0x2208], Other Possible Types: unsigned long\n
    void* v17;  // [bp-0x2200], Other Possible Types: unsigned long long\n
    char v18;  // [bp-0x21f8]\n
    void* v19;  // [bp-0x1258]\n
    unsigned int v20;  // [bp-0x1250]\n
    unsigned int v21;  // [bp-0x124c]\n
    unsigned int v22;  // [bp-0x1248]\n
    unsigned int v23;  // [bp-0x1244]\n
    unsigned int v24;  // [bp-0x1240]\n
    unsigned int v25;  // [bp-0x123c]\n
    char v26;  // [bp-0x1238]\n
    char v27;  // [bp-0x1138]\n
    char v28;  // [bp-0x1038]\n
    char v29;  // [bp-0xf38]\n
    char v30;  // [bp-0xe38]\n
    char v31;  // [bp-0xd38]\n
    char v32;  // [bp-0x138]\n
    char v33;  // [bp-0xf8]\n
    char v34;  // [bp-0xb8]\n
    unsigned int v35;  // [bp-0x78]\n
    unsigned long v36;  // [bp-0x70]\n
    unsigned long v37;  // [bp-0x68]\n
    unsigned long v38;  // [bp-0x60]\n
    char v39;  // [bp-0x58]\n
    unsigned long long v41[9];  // rdx, Other Possible Types: unsigned long, unsigned long long\n
\n
    memcpy(&v39, &g_40d010, 72);\n
    *(&v35) = g_40d060;\n
    v36 = g_40d068;\n
    v37 = g_40d070;\n
    v38 = g_40d078;\n
    memcpy(&v34, &g_40d080, 64);\n
    memcpy(&v33, &g_40d0c0, 64);\n
    v41 = 64;\n
    memcpy(&v32, &g_40d100, 64);\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    while (true)\n
    {\n
        v21 = 0;\n
        v22 = 0;\n
        v23 = 0;\n
        v24 = 0;\n
        v25 = 0;\n
        v19 = 0;\n
        cgc_bzero(&v18, 4000);\n
        v17 = 0;\n
        v15 = 0;\n
        v14 = 0;\n
        v13 = 0;\n
        v12 = 0;\n
        v11 = 0;\n
        v10 = 0;\n
        v9 = 0;\n
        cgc_bzero(&v26, 0x100);\n
        cgc_print_prompt(a0, 0x100, v41, a3, a4);\n
        v41 = &g_40b099;\n
        cgc_get_string(&v26, 255, 4239513, a3, a4);\n
        for (v23 = 0; v23 < 16; v23 += 1)\n
        {\n
            cgc_bzero(&(&v27)[0x100 * v23], 0x100);\n
        }\n
        v25 = cgc_parse_arg(&v27, &v26);\n
        v22 = 0;\n
        v21 = 100;\n
        for (v24 = 0; v24 < 18; v24 += 1)\n
        {\n
            if (!cgc_strcmp(*(&(&v39)[8 * v24]), &v27))\n
                v21 = v24;\n
        }\n
        v8 = v21;\n
        switch (v8)\n
        {\n
        case 0:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 8; v24 += 1)\n
            {\n
                if (!cgc_strcmp(*(&(&v35)[2 * v24]), &v28))\n
                    v21 = v24;\n
            }\n
            v7 = v21;\n
            switch (v7)\n
            {\n
            case 0:\n
                a0->field_30 = cgc_get_time();\n
                break;\n
            case 1:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"missing user name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = cgc_find_user(&v29, a0);\n
                    if (!v14)\n
                        cgc_printf(\"unknown user: @s\\n
\", &v29, &g_40b099, &g_40b3b4, a4);\n
                    else\n
                        a0->field_10 = v14;\n
                    break;\n
                }\n
            case 2:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"missing group name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v13 = cgc_find_group(&v29, a0);\n
                    if (!v13)\n
                        cgc_printf(\"unknown group: @s\\n
\", &v29, &g_40b099, &g_40b3b4, a4);\n
                    else\n
                        a0->field_18 = v13;\n
                    break;\n
                }\n
            case 3:\n
                cgc_print_help(&v35, 8, 4239513, 4240308, a4);\n
                break;\n
            default:\n
                cgc_printf(\"Invalid command: @s\\n
\", &v28, &g_40b099, &g_40b330, a4);\n
            }\n
            break;\n
        case 1:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 16; v24 += 1)\n
            {\n
                if (!cgc_strcmp(*(&(&v34)[8 * v24]), &v28))\n
                    v21 = v24;\n
            }\n
            v6 = v21;\n
            switch (v6)\n
            {\n
            case 0:\n
                cgc_strofdate(a0->field_30);\n
                break;\n
            case 1:\n
                cgc_printf(\"@s\\n
\", *(&a0->field_10->field_10), &g_40b099, &g_40b394, a4);\n
                break;\n
            case 2:\n
                cgc_printf(\"@s\\n
\", *(&a0->field_18->field_20), &g_40b099, &g_40b394, a4);\n
                break;\n
            case 3:\n
                cgc_bzero(&v18, 4000);\n
                v41 = a0->field_8;\n
                cgc_str_of_path(&v18, a0, v41, &g_40b394, a4);\n
                cgc_printf(\"@s/\\n
\", &v18, v41, &g_40b394, a4);\n
                break;\n
            case 4:\n
                cgc_print_help(&v34, 16, 4239513, 4240276, a4);\n
                break;\n
            case 5:\n
                cgc_print_user_list(a0, 255, 4239513, 4240276, a4);\n
                break;\n
            case 6:\n
                cgc_print_group_list(a0, 255, 4239513, 4240276, a4);\n
                break;\n
            case 7:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"missing group name or number\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v13 = cgc_find_group(&v29, a0);\n
                    if (v13)\n
                    {\n
                        cgc_print_users_in_group(v13, a0, 4239513, 4240276, a4);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        cgc_printf(\"unknown group: @s\\n
\", &v29, &g_40b099, &g_40b394, a4);\n
                        break;\n
                    }\n
                }\n
            default:\n
                cgc_printf(\"Invalid command: @s\\n
\", &v28, &g_40b099, &g_40b330, a4);\n
            }\n
            break;\n
        case 2:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 16; v24 += 1)\n
            {\n
                if (!cgc_strcmp(*(&(&v33)[8 * v24]), &v28))\n
                    v21 = v24;\n
            }\n
            v5 = v21;\n
            switch (v5)\n
            {\n
            case 0:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_bzero(&v18, 4000);\n
                    v41 = \"UserName\";\n
                    cgc_get_string(&v18, 128, 4240981, 4240244, a4);\n
                    cgc_strcpy(&v29, &v18);\n
                }\n
                v14 = cgc_find_user(&v29, a0);\n
                if (v14)\n
                    cgc_puts(\"Username already in use\");\n
                else\n
                    cgc_add_user(&v29, a0, v41, 4240244, a4);\n
                break;\n
            case 1:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_bzero(&v18, 4000);\n
                    v41 = \"GroupName\";\n
                    cgc_get_string(&v18, 128, 4241014, 4240244, a4);\n
                    cgc_strcpy(&v29, &v18);\n
                }\n
                v13 = cgc_find_group(&v29, a0);\n
                if (v13)\n
                    cgc_puts(\"Groupname already in use\");\n
                else\n
                    cgc_add_group(&v29, a0, v41, 4240244, a4);\n
                break;\n
            case 2:\n
                v22 = cgc_atoi(&v30);\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Filename required\");\n
                    break;\n
                }\n
                if (v22 > 1000000)\n
                {\n
                    cgc_puts(\"Too big\");\n
                    break;\n
                }\n
                if (cgc_find_node_by_name(&v29, a0->field_8->field_40))\n
                {\n
                    cgc_puts(\"There is another file or directory with that name\");\n
                    break;\n
                }\n
                if (v22 <= 0)\n
                {\n
                    v16 = 0;\n
                }\n
                else\n
                {\n
                    v16 = cgc_mallocOrDie(v22, \"Failed to allocate tempBuf\", 4239513, 4240244, a4);\n
                    cgc_puts(\"-----Begin File-----\");\n
                    v4 = v22;\n
                    a3 = cgc_receive_bytes(v16, v22);\n
                    if (v4 != a3)\n
                    {\n
                        cgc_die(4241173, 255, &g_40b099, a3, a4);\n
                        break;\n
                    }\n
                }\n
                a3 = &v29;\n
                a4 = v16;\n
                v15 = cgc_add_file(a0->field_8, a0->field_30, v22, &v29, a4, a0->field_10);\n
                break;\n
            case 3:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Directory name required\");\n
                    break;\n
                }\n
                else if (cgc_find_node_by_name(&v29, a0->field_8->field_40))\n
                {\n
                    cgc_puts(\"There is another file or directory with that name\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v41 = a0->field_8;\n
                    a3 = a0->field_10;\n
                    v15 = cgc_add_directory(a0->field_30, &v29, v41[0], a3);\n
                    break;\n
                }\n
            case 4:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"username or number required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    *(&v14) = cgc_find_user(&v29, a0);\n
                    if (!v14)\n
                    {\n
                        cgc_puts(\"User does not exist, add user first\");\n
                    }\n
                    else\n
                    {\n
                        v9 = cgc_is_user_in_group(*(&v14), a0->field_18);\n
                        if (v9)\n
                        {\n
                            v41 = *(&a0->field_18->field_20);\n
                            cgc_printf(\"@s is already in @s\\n
\", &v29, v41, &g_40b374, a4);\n
                        }\n
                        else\n
                        {\n
                            cgc_add_user_to_group(*(&v14), a0->field_18, &g_40b099, &g_40b374, a4);\n
                        }\n
                    }\n
                    break;\n
                }\n
            case 5:\n
                if (cgc_strcmp(&v29, &g_40b099) && cgc_strcmp(&v29, \" \"))\n
                {\n
                    v3 = !cgc_strcmp(&v30, \"user\");\n
                    if (!(v3 ^ !cgc_strcmp(&v30, \"group\")))\n
                    {\n
                        cgc_puts(\"'user' or 'group'\");\n
                        break;\n
                    }\n
                    if (!cgc_strcmp(&v31, &g_40b099))\n
                    {\n
                        cgc_puts(\"user name, group name, or number required\");\n
                        break;\n
                    }\n
                    v15 = cgc_find_node_by_name(&v29, a0->field_8->field_40);\n
                    if (!v15)\n
                    {\n
                        cgc_puts(\"Invalid file or directory\");\n
                        break;\n
                    }\n
                    if (v15->field_10 == 76)\n
                    {\n
                        v15 = v15->field_40;\n
                        break;\n
                    }\n
                    if (!cgc_strcmp(&v30, \"user\"))\n
                    {\n
                        v14 = cgc_find_user(&v31, a0);\n
                        v13 = 0;\n
                        if (!v14)\n
                        {\n
                            cgc_printf(\"user @s not found\\n
\", &v31, &g_40b099, &g_40b374, a4);\n
                            break;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v13 = cgc_find_group(&v31, a0);\n
                        v14 = 0;\n
                        if (!v13)\n
                        {\n
                            cgc_printf(\"group @s not found\\n
\", &v31, &g_40b099, &g_40b374, a4);\n
                            break;\n
                        }\n
                    }\n
                    cgc_validate_current_perms(v15, a0, 4239513, 4240244, a4);\n
                    v11 = cgc_add_perm(v14, v13, v15, 4240244, a4);\n
                    break;\n
                }\n
                cgc_puts(\"name of file or directory required\");\n
                break;\n
            case 6:\n
                v22 = cgc_atoi(&v30);\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Filename required\");\n
                    break;\n
                }\n
                else if (v22 > 1000000)\n
                {\n
                    cgc_puts(\"Too big\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v12 = cgc_find_file_by_name(&v29, a0->field_8);\n
                    if (!v12)\n
                    {\n
                        cgc_puts(\"No file in working directory by that name\");\n
                        break;\n
                    }\n
                    else if (v22 <= 0)\n
                    {\n
                        v17 = 0;\n
                        cgc_puts(\"Can not add 0 bytes to file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v17 = cgc_mallocOrDie(v22, \"Failed to allocate tempBuf\", 4239513, 4240244, a4);\n
                        cgc_puts(\"-----Begin File-----\");\n
                        v2 = v22;\n
                        a3 = cgc_receive_bytes(v17, v22);\n
                        if (v2 == a3)\n
                        {\n
                            v10 = cgc_add_file_chunk(v17, v12, v22, a3, a4);\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            cgc_die(4241173, 255, &g_40b099, a3, a4);\n
                            break;\n
                        }\n
                    }\n
                }\n
            case 7:\n
                cgc_print_help(&v33, 16, 4239513, 4240244, a4);\n
                break;\n
            default:\n
                cgc_printf(\"Invalid command: @s\\n
\", &v28, &g_40b099, &g_40b330, a4);\n
            }\n
            break;\n
        case 3:\n
            v21 = 100;\n
            for (v24 = 0; v24 < 16; v24 += 1)\n
            {\n
                if (!cgc_strcmp(*(&(&v32)[8 * v24]), &v28))\n
                    v21 = v24;\n
            }\n
            v1 = v21;\n
            switch (v1)\n
            {\n
            case 0:\n
                cgc_bzero(&v18, 4000);\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    v41 = \"User Name or number\";\n
                    cgc_get_string(&v18, 128, 4241535, 4240212, a4);\n
                    cgc_strcpy(&v29, &v18);\n
                }\n
                v14 = cgc_find_user(&v29, a0);\n
                if (!v14)\n
                    cgc_puts(\"No such user found\");\n
                else\n
                    cgc_remove_user(v14, a0);\n
                break;\n
            case 1:\n
                cgc_bzero(&v18, 4000);\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    v41 = \"Group Name or number\";\n
                    cgc_get_string(&v18, 128, 4241574, 4240212, a4);\n
                    cgc_strcpy(&v29, &v18);\n
                }\n
                v13 = cgc_find_group(&v29, a0);\n
                if (v13)\n
                    cgc_remove_group(v13, a0);\n
                else\n
                    cgc_puts(\"no such group found\");\n
                break;\n
            case 2:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Filename required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = cgc_find_file_node_by_name(&v29, a0->field_8);\n
                    if (!v15)\n
                    {\n
                        cgc_puts(\"No such file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        cgc_delete_node(v15, a0);\n
                        break;\n
                    }\n
                }\n
            case 3:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Directory name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = cgc_find_directory_by_name(&v29, a0->field_8);\n
                    if (!v15)\n
                    {\n
                        cgc_puts(\"No such directory\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        cgc_delete_node(v15, a0);\n
                        break;\n
                    }\n
                }\n
            case 4:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"User name required\");\n
                    break;\n
                }\n
                else if (!cgc_strcmp(&v30, &g_40b099))\n
                {\n
                    cgc_puts(\"group name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    *(&v14) = cgc_find_user(&v29, a0);\n
                    if (!v14)\n
                    {\n
                        cgc_puts(\"No such user\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v13 = cgc_find_group(&v30, a0);\n
                        if (!v13)\n
                        {\n
                            cgc_puts(\"No such group\");\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v9 = cgc_is_user_in_group(*(&v14), v13);\n
                            if (!v9)\n
                            {\n
                                cgc_puts(\"User is not in group\");\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                cgc_remove_user_from_group(*(&v14), v13);\n
                                break;\n
                            }\n
                        }\n
                    }\n
                }\n
            case 5:\n
                if (!cgc_strcmp(&v30, &g_40b099))\n
                {\n
                    cgc_puts(\"User or group name required\");\n
                    break;\n
                }\n
                else if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"file name required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = cgc_find_node_by_name(&v29, a0->field_8->field_40);\n
                    if (!v15)\n
                    {\n
                        cgc_puts(\"No such file\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v11 = cgc_find_perm_by_name(&v30, v15, a0);\n
                        if (v11)\n
                            cgc_delete_perms(v15, v11);\n
                        else\n
                            cgc_puts(\"No such user permission on file\");\n
                        break;\n
                    }\n
                }\n
            case 6:\n
                if (!cgc_strcmp(&v29, &g_40b099))\n
                {\n
                    cgc_puts(\"Filename required\");\n
                    break;\n
                }\n
                else\n
                {\n
                    v20 = cgc_strict_atoi(&v30);\n
                    if (!v20)\n
                    {\n
                        cgc_puts(\"zero bytes deleted\");\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v15 = cgc_find_file_node_by_name(&v29, a0->field_8);\n
                        v12 = v15->field_30;\n
                        if (!v15)\n
                        {\n
                            cgc_puts(\"No such file\");\n
                            cgc_printf(\"@s\\n
\", &v29, &g_40b099, &g_40b354, a4);\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v22 = cgc_get_file_size(v12);\n
                            if (v20 > v22)\n
                                cgc_puts(\"Too many bytes\");\n
                            v22 -= v20;\n
                            cgc_delete_file_bytes(v12, v22, &g_40b099, &g_40b354, a4);\n
                            break;\n
                        }\n
                    }\n
                }\n
            case 7:\n
                cgc_print_help(&v32, 16, 4239513, 4240212, a4);\n
                break;\n
            default:\n
                cgc_print_help(&v32, 16, 4239513, 4240176, a4);\n
            }\n
            break;\n
        case 4:\n
            goto LABEL_40a785;\n
        case 5:\n
            cgc_print_help(&v39, 18, 4239513, 4240176, a4);\n
            break;\n
        case 6:\n
            cgc_print_working_dir(a0, 255, 4239513, 4240176, a4);\n
            break;\n
        case 7:\n
            if (!cgc_strcmp(&v28, &g_40b099))\n
            {\n
                cgc_puts(\"Filename required\");\n
                break;\n
            }\n
            else\n
            {\n
                v12 = cgc_find_file_by_name(&v28, a0->field_8);\n
                if (v12)\n
                {\n
                    v10 = v12->field_8;\n
                    cgc_puts(\"-----Begin File-----\");\n
                    for (; v10; v10 = *((v10 + 24)))\n
                    {\n
                        v0 = *((v10 + 8));\n
                        if (v0 != cgc_write(v10, *((v10 + 8))))\n
                            cgc_puts(\"file write failed\");\n
                    }\n
                    cgc_puts(\"-----END File-----\");\n
                }\n
                break;\n
            }\n
        case 8:\n
            if (!cgc_strcmp(&v28, &g_40b099))\n
            {\n
                cgc_puts(\"directory required\");\n
                break;\n
            }\n
            else if (!cgc_strcmp(&v28, \"..\"))\n
            {\n
                if (a0->field_8->field_38)\n
                    a0->field_8 = a0->field_8->field_38;\n
                break;\n
            }\n
            else\n
            {\n
                v15 = cgc_find_directory_by_name(&v28, a0->field_8);\n
                if (v15)\n
                {\n
                    a0->field_8 = &v15->padding_0;\n
                    break;\n
                }\n
                else\n
                {\n
                    cgc_puts(\"No such directory in working directory\");\n
                    break;\n
                }\n
            }\n
        default:\n
            cgc_printf(\"Invalid command @s\\n
\", &v27, &g_40b099, a3, a4);\n
            cgc_print_help(&v39, 18, 4239513, a3, a4);\n
        }\n
    }\n
LABEL_40a785:\n
    return cgc_puts(\"exiting\");\n
}\n
", "4237198:sub_40a78e": null, "4237200:cgc_strofdate": "extern void g_40d140;\n
extern void g_40d180;\n
\n
long long cgc_strofdate(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xf8]\n
    unsigned int v1;  // [bp-0xf0]\n
    unsigned int v2;  // [bp-0xe0]\n
    unsigned int v3;  // [bp-0xd8]\n
    unsigned int v4;  // [bp-0xcc]\n
    char v5;  // [bp-0xc8]\n
    char v6;  // [bp-0xc4]\n
    char v7;  // [bp-0xc0]\n
    char v8;  // [bp-0xb8]\n
    char v9;  // [bp-0xb4]\n
    char v10;  // [bp-0xa8]\n
    char v11;  // [bp-0x48]\n
\n
    memcpy(&v11, &g_40d140, 56);\n
    memcpy(&v10, &g_40d180, 96);\n
    cgc_date_from_epoch(a0, &v5);\n
    v4 = (0 CONCAT (0 CONCAT a0) /m 86400) /m 7 >> 32;\n
    *(&v3) = *(&(&v11)[8 * v4]);\n
    *(&v2) = *(&(&v10)[8 + 8 * *(&v6)]);\n
    v0 = *(&v8);\n
    v1 = *(&v9);\n
    return cgc_printf(\"@s, @s @d @d @d:@d:@d GMT\\n
\", *(&v3), *(&v2), *(&v5), *(&v7));\n
}\n
", "4237423:sub_40a86f": null, "4237424:cgc_date_from_epoch": "extern void g_40b3d0;\n
\n
long long cgc_date_from_epoch(unsigned long a0, unsigned int a1[6])\n
{\n
    char v0;  // [bp-0x78]\n
    unsigned int v1;  // [bp-0x74]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v12;  // eax\n
    unsigned int v15;  // eax\n
\n
    v10 = 1970;\n
    v9 = 1;\n
    v8 = 1;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = a0;\n
    v3 = 1;\n
    while (v3)\n
    {\n
        v2 = 0x1e28500;\n
        v12 = v10;\n
        if (!(v12 >> 31 CONCAT v12) /m 4 >> 32 && !(v10 == 2100))\n
            goto LABEL_40a8ef;\n
        v2 = 31536000;\n
LABEL_40a8ef:\n
        if (v4 <= v2)\n
        {\n
            v3 = 0;\n
        }\n
        else\n
        {\n
            v4 -= v2;\n
            v10 += 1;\n
        }\n
    }\n
    memcpy(&v0, &g_40b3d0, 48);\n
    v15 = v10;\n
    if (!(v15 >> 31 CONCAT v15) /m 4 >> 32 && !(v10 == 2100))\n
        goto LABEL_40a95d;\n
    v1 = 28;\n
LABEL_40a95d:\n
    v3 = 1;\n
    while (v3)\n
    {\n
        if (v4 <= *(&(&v0)[4 + 4 * v9]) * 86400)\n
        {\n
            v3 = 0;\n
        }\n
        else\n
        {\n
            v4 = v4 - *(&(&v0)[4 + 4 * v9]) * 86400;\n
            v9 += 1;\n
        }\n
    }\n
    for (; v4 >= 86400; v8 += 1)\n
    {\n
        v4 -= 86400;\n
    }\n
    for (; v4 >= 3600; v7 += 1)\n
    {\n
        v4 -= 3600;\n
    }\n
    for (; v4 >= 60; v6 += 1)\n
    {\n
        v4 -= 60;\n
    }\n
    v5 = v4;\n
    a1[0] = v10;\n
    a1[1] = v9;\n
    a1[2] = v8;\n
    a1[3] = v7;\n
    a1[4] = v6;\n
    a1[5] = v5;\n
    return a1;\n
}\n
", "4237951:sub_40aa7f": null, "4237952:cgc_make_epoch": "extern void g_40b400;\n
\n
long long cgc_make_epoch(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    char v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v6;  // eax\n
\n
    v4 = 0;\n
    memcpy(&v2, &g_40b400, 48);\n
    if (!(a0 >> 31 CONCAT a0) /m 4 >> 32 && !(a0 == 2100))\n
        goto LABEL_40aae0;\n
    v3 = 28;\n
LABEL_40aae0:\n
    v1 = 1970;\n
    while (v1 < a0)\n
    {\n
        v6 = v1;\n
        if ((v6 >> 31 CONCAT v6) /m 4 >> 32)\n
        {\n
LABEL_40ab14:\n
            v4 += 31536000;\n
            goto LABEL_40ab2f;\n
        }\n
        else\n
        {\n
            if (v1 == 2100)\n
                goto LABEL_40ab14;\n
            v4 += 0x1e28500;\n
LABEL_40ab2f:\n
            v1 += 1;\n
        }\n
    }\n
    for (v0 = 1; v0 < a1; v0 += 1)\n
    {\n
        v4 = *(&(&v2)[4 + 4 * v0]) * 86400 + v4;\n
    }\n
    v4 = (a2 - 1) * 86400 + v4;\n
    v4 = a3 * 3600 + v4;\n
    v4 = a4 * 60 + v4;\n
    v4 = a5 + v4;\n
    return v4;\n
}\n
", "4238260:sub_40abb4": null, "4238272:cgc_get_time": "extern char g_40b430;\n
extern unsigned int g_40bad9;\n
extern unsigned int g_40bb0d;\n
extern unsigned int g_40bb2d;\n
extern unsigned int g_40bb37;\n
extern unsigned int g_40bb4a;\n
extern unsigned int g_40bb5f;\n
\n
long long cgc_get_time(unsigned long a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v9;  // eax\n
\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 100;\n
    v3 = 100;\n
    v2 = 100;\n
    cgc_puts(\"Please enter the date as prompted\");\n
    for (; !v7; LABEL_40ac44:\n
)\n
    {\n
        v7 = cgc_get_int(4242137, a1, a2, a3, a4);\n
        if (v7 >= 1970 && v7 <= 2105)\n
            goto LABEL_40ac44;\n
        cgc_puts(\"Bad value for year\");\n
        v7 = 0;\n
    }\n
    for (; !v6; LABEL_40ac8e:\n
)\n
    {\n
        v6 = cgc_get_int(4242189, a1, a2, a3, a4);\n
        if (v6 >= 1 && v6 <= 12)\n
            goto LABEL_40ac8e;\n
        cgc_puts(\"Bad value for month\");\n
        v6 = 0;\n
    }\n
    for (; !v5; LABEL_40ad15:\n
)\n
    {\n
        memcpy(&v0, &g_40b430, 48);\n
        v9 = v7;\n
        a3 = 4;\n
        a2 = (v9 >> 31 CONCAT v9) /m 4 / 0x100000000;\n
        if (!a2 && !(v7 == 2100))\n
            goto LABEL_40acdf;\n
        v1 = 28;\n
LABEL_40acdf:\n
        v5 = cgc_get_int(4242221, &g_40b430, a2, 4, a4);\n
        if (v5 >= 1)\n
        {\n
            a3 = v6 - 1;\n
            if (v5 <= *(&(&v0)[4 * a3]))\n
                goto LABEL_40ad15;\n
        }\n
        v5 = 0;\n
    }\n
    for (; v4 == 100; v4 = 100)\n
    {\n
        v4 = cgc_get_int(4242231, &g_40b430, a2, a3, a4);\n
    }\n
    for (; v3 == 100; v3 = 100)\n
    {\n
        v3 = cgc_get_int(4242250, &g_40b430, a2, a3, a4);\n
    }\n
    for (; v2 == 100; v2 = 100)\n
    {\n
        v2 = cgc_get_int(4242271, &g_40b430, a2, a3, a4);\n
    }\n
    return cgc_make_epoch(v7, v6, v5, v4, v3, v2);\n
}\n
", "4238805:sub_40add5": null, "4238816:cgc_start_UI": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
long long cgc_start_UI(struct_0 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long long v1;  // rax\n
\n
    cgc_puts(\"Welcome to SPIFFS (Somewhat Poorly Implemented Fast File System)\");\n
    v1 = cgc_get_time(\"Welcome to SPIFFS (Somewhat Poorly Implemented Fast File System)\", a1, a2, a3, a4);\n
    a0->field_30 = v1;\n
    return cgc_main_loop(a0, a1, a2, v1, a4);\n
}\n
", "4238872:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:strncpy": null, "5242904:cgc__terminate": null, "5242912:cgc_transmit": null, "5242920:cgc_allocate": null, "5242928:memcpy": null, "5242936:cgc_rint": null, "5242944:cgc_deallocate": null, "5242952:cgc_log10": null, "5242960:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}