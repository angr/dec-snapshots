{"4210688:_init": "extern struct_0 *g_4c64d0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_4c64d0;\n
    if (g_4c64d0)\n
        v1 = g_4c64d0();\n
    return v1;\n
}\n
", "4210720:sub_404020": "extern unsigned long long g_4c64f0;\n
\n
long long sub_404020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_4c64f0;\n
    goto *(5006584);\n
}\n
", "4210732:sub_40402c": null, "4210736:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4210752:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4210768:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4210784:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4210800:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4210816:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4210832:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4210848:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(5006560);\n
}\n
", "4210864:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4210901:sub_4040d5": null, "4210902:sub_4040d6": null, "4210912:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_4c64c8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4210953:sub_404109": null, "4210960:register_tm_clones": "extern unsigned long long g_4c64d8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4211017:sub_404149": null, "4211024:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_4c64e0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_4c64e0)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4211077:sub_404185": null, "4211081:sub_404189": null, "4211088:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211097:sub_404199": null, "4211104:cgc_promptc": "long long cgc_promptc(unsigned long long a0, unsigned long a1, unsigned long long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (cgc_sendall(1, a2, cgc_strlen(a2)) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc_recvline(0, a0, a1);\n
    if (v1 >= 0)\n
        return v1;\n
    if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc__terminate(1);\n
    return v1;\n
}\n
", "4211265:sub_404241": null, "4211280:cgc_sendall": "long long cgc_sendall(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
        else if (!cgc_transmit(a0, a1, a2, v7))\n
        {\n
            v3 = v1 + v3;\n
            v0 = v1 + v0;\n
            v2 -= v1;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4211478:sub_404316": null, "4211488:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4211547:sub_40435b": null, "4211552:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
long long cgc_recvline(unsigned long long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v3)\n
    {\n
        while (v2)\n
        {\n
            v3 += 1;\n
            if (cgc_receive(a0, a1, a2, v7))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v0 += 1;\n
            v2 -= 1;\n
            if (*((v3 - 1)) == 10)\n
                break;\n
        }\n
        if (*((v3 - 1)) != 10)\n
        {\n
            v5 = -2;\n
            return v5;\n
        }\n
        *((v3 - 1)) = 0;\n
        v5 = v0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4211806:sub_40445e": null, "4211808:cgc_sendline": "long long cgc_sendline(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
\n
    v0 = cgc_sendall(a0, a1, a2);\n
    if (v0 < 0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!cgc_transmit(a0, a1, a2, v3))\n
    {\n
        v0 += 1;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4211933:sub_4044dd": null, "4211936:cgc_recv": "long long cgc_recv(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v3 += 1;\n
            if (cgc_receive(a0, a1, a2, v7))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v0 += 1;\n
            v2 -= 1;\n
        }\n
        else\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4212131:sub_4045a3": null, "4212144:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a1;\n
    for (v0 = a0; *(v1); v1 += 1)\n
    {\n
        *(v0) = *(v1);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - a0 - 1;\n
}\n
", "4212253:sub_40461d": null, "4212256:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    v2 = a1;\n
    v1 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - a0 < a2)\n
            v0 = *(v2);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(v2);\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    v4 = v1;\n
    v1 = v4 + 1;\n
    *(v4) = 0;\n
    return -1 + v1 - a0;\n
}\n
", "4212414:sub_4046be": null, "4212416:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    cgc_strcpy(v0, a1);\n
    return a0;\n
}\n
", "4212493:sub_40470d": null, "4212496:cgc_streq": "long long cgc_streq(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x22]\n
    char v1;  // [bp-0x21]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(v2);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(v2);\n
    v4 = v0 & 1;\n
    return v4;\n
}\n
", "4212677:sub_4047c5": null, "4212688:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x2a]\n
    char v1;  // [bp-0x29]\n
    unsigned long v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(v3))\n
            {\n
                v7 = v2;\n
                v2 = v7 - 1;\n
                v1 = v7;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v4) != *(v3))\n
        {\n
            v5 = 1;\n
            return v5;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v4))\n
        v0 = !*(v3);\n
    v5 = (v0 ^ 255) & 1;\n
    return v5;\n
}\n
", "4212905:sub_4048a9": null, "4212912:cgc_startswith": "long long cgc_startswith(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
        {\n
            v3 = !*(v1);\n
            return v3;\n
        }\n
        if (*(v2) != *(v1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
}\n
", "4213066:sub_40494a": null, "4213072:cgc_uint2str": "long long cgc_uint2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned long v7;  // rcx\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v1 = (0 CONCAT v1) /m 10;\n
    } while (v1 > 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v6 = v2;\n
    v2 = v6 - 1;\n
    v6[a0] = 0;\n
    do\n
    {\n
        v0 = (0 CONCAT v3) /m 10 >> 32;\n
        v7 = v2;\n
        v2 = v7 - 1;\n
        *((a0 + v7)) = v0 + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
    } while (v3 > 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4213282:sub_404a22": null, "4213296:cgc_int2str": "long long cgc_int2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned int v7;  // eax\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rcx\n
    unsigned int v11;  // eax\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (v3 >= 0)\n
    {\n
        v3 *= -1;\n
    }\n
    else if (a1 >= 3)\n
    {\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v6[a0] = 45;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v7 = v1;\n
        v1 = (v7 >> 31 CONCAT v7) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v9 = v2;\n
    v2 = v9 - 1;\n
    *((a0 + v9)) = 0;\n
    do\n
    {\n
        v0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) * -1;\n
        v10 = v2;\n
        v2 = v10 - 1;\n
        *((a0 + v10)) = v0 + 48;\n
        v11 = v3;\n
        v3 = (v11 >> 31 CONCAT v11) /m 10;\n
    } while (v3 < 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4213575:sub_404b47": null, "4213584:cgc_str2uint": "long long cgc_str2uint(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = 10;\n
    if (!a0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (a0[v0] < 48)\n
        {\n
LABEL_404bdf:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(a0[v0] <= 57))\n
                goto LABEL_404bdf;\n
            v2 *= 10;\n
            v2 = a0[v0] - 48 + v2;\n
        }\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4213762:sub_404c02": null, "4213776:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = a1;\n
    }\n
    return a0;\n
}\n
", "4213853:sub_404c5d": null, "4213856:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4213939:sub_404cb3": null, "4213952:cgc_b2hex": "long long cgc_b2hex(unsigned long a0, char a1[3])\n
{\n
    if ((a0 >> 4) < 10)\n
        a1[0] = (a0 >> 4) + 48;\n
    else\n
        a1[0] = (a0 >> 4) - -55;\n
    if ((a0 & 15) < 10)\n
        a1[1] = (a0 & 15) + 48;\n
    else\n
        a1[1] = (a0 & 15) - -55;\n
    a1[2] = 0;\n
    return a1;\n
}\n
", "4214102:sub_404d56": null, "4214112:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4214210:sub_404dc2": null, "4214224:cgc___umoddi3": "long long cgc___umoddi3(unsigned long a0, unsigned long a1)\n
{\n
    return a0 - a1 * (a0 >> 31 CONCAT a0) /m a1;\n
}\n
", "4214260:sub_404df4": null, "4214272:cgc_sleep": "long long cgc_sleep(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
\n
    v0 = a0;\n
    v1 = 0;\n
    return cgc_fdwait(a0, v3, v4, v5, v6);\n
}\n
", "4214324:sub_404e34": null, "4214336:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) == *((a1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4214452:sub_404eb4": null, "4214464:cgc___free": "extern unsigned int cgc___hcookie[4];\n
extern unsigned long long cgc_freed;\n
\n
long long cgc___free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
    unsigned long v2;  // rcx\n
    unsigned long long v3;  // rax\n
\n
    if (!a0)\n
        return v3;\n
    v0 = a0 - 32;\n
    if (a1 && cgc___hcookie[a1] != *(v0))\n
        cgc___heap_cookie_fail();\n
    cgc_remove(v0);\n
    v2 = a1;\n
    v3 = cgc_insert((&cgc_freed)[v2], v0, a1, v2);\n
    return v3;\n
}\n
", "4214592:cgc_remove": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
long long cgc_remove(struct_2 *a0)\n
{\n
    a0->field_8->field_10 = a0->field_10;\n
    a0->field_10->field_8 = a0->field_8;\n
    a0->field_10 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4214666:sub_404f8a": null, "4214672:cgc_insert": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern char cgc___hcookie;\n
\n
long long cgc_insert(struct_2 *a0, struct_1 *a1, unsigned long a2)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
\n
    v0 = a1;\n
    a1->field_0 = *(&(&cgc___hcookie)[4 * a2]);\n
    a1->field_10 = a0;\n
    a1->field_8 = a0->field_8;\n
    a1->field_8->field_10 = a1;\n
    a0->field_8 = a1;\n
    return a0;\n
}\n
", "4214766:sub_404fee": null, "4214768:cgc_nmalloc": "long long cgc_nmalloc(unsigned long long a0)\n
{\n
    return cgc___malloc(a0, 0);\n
}\n
", "4214797:sub_40500d": null, "4214800:cgc___malloc": "extern char cgc___hcookie;\n
extern char cgc_allocated;\n
extern char cgc_curleft;\n
extern char cgc_freed;\n
extern char cgc_heapinit_done;\n
extern char cgc_lastpage;\n
\n
long long cgc___malloc(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x89]\n
    unsigned long v1;  // [bp-0x88]\n
    unsigned long v2;  // [bp-0x80]\n
    unsigned long v3;  // [bp-0x78]\n
    unsigned int v4;  // [bp-0x6c]\n
    unsigned long v5;  // [bp-0x68]\n
    unsigned long v6;  // [bp-0x60]\n
    unsigned int v7;  // [bp-0x54]\n
    unsigned long v8;  // [bp-0x50]\n
    unsigned int v9;  // [bp-0x44]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned int v11;  // [bp-0x34]\n
    unsigned long v12;  // [bp-0x30]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned long v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x14]\n
    unsigned long v16;  // [bp-0x10]\n
    unsigned long v18;  // rdx\n
    unsigned long v19;  // rax\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // rcx\n
\n
    v5 = a0;\n
    v4 = a1;\n
    if (!cgc_heapinit_done)\n
        cgc_heapinit();\n
    if (!v5)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v3 = (&cgc_freed)[a1];\n
    v2 = 0;\n
    v1 = 0;\n
    v5 += 32;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((v3 + 24)) < v5)\n
        {\n
            v16 = v3;\n
            v15 = a1;\n
            if (v15 && *(v16) != *((&cgc___hcookie + 4 * v15)))\n
                cgc___heap_cookie_fail();\n
            v18 = a1;\n
            v0 = *((v16 + 16)) != (&cgc_freed)[a1];\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        while (true)\n
        {\n
            v14 = v3;\n
            v13 = a1;\n
            if (v13 && *(v14) != *((&cgc___hcookie + 4 * v13)))\n
                cgc___heap_cookie_fail();\n
            if (*((v14 + 16)) != v3 + *((v3 + 24)))\n
                break;\n
            v12 = v3;\n
            v11 = a1;\n
            if (v11 && *(v12) != *((&cgc___hcookie + 4 * v11)))\n
                cgc___heap_cookie_fail();\n
            v2 = *((v12 + 16));\n
            cgc_remove(v2);\n
            v19 = v3;\n
            *((v19 + 24)) = *((v2 + 24)) + *((v19 + 24));\n
        }\n
        v10 = v3;\n
        v9 = a1;\n
        if (v9 && *(v10) != *((&cgc___hcookie + 4 * v9)))\n
            cgc___heap_cookie_fail();\n
        v18 = a1;\n
        if (*((v10 + 16)) == (&cgc_freed)[a1])\n
            break;\n
        v8 = v3;\n
        v7 = a1;\n
        if (v7)\n
        {\n
            v18 = v7;\n
            if (*(v8) != *((&cgc___hcookie + 4 * v18)))\n
                cgc___heap_cookie_fail();\n
        }\n
        v3 = *((v8 + 16));\n
    }\n
    if (a1 && *((&cgc___hcookie + 4 * a1)) != *(v3))\n
        cgc___heap_cookie_fail();\n
    if (*((v3 + 24)) >= v5)\n
    {\n
        cgc_remove(v3);\n
        if (*((v3 + 24)) > v5 + 33)\n
        {\n
            v2 = v3 + v5;\n
            *((v2 + 24)) = *((v3 + 24)) - v5;\n
            *((v3 + 24)) = v5;\n
            cgc_insert((&cgc_freed)[a1], v2, v4);\n
        }\n
        cgc_insert((&cgc_allocated)[v4], v3, a1);\n
        v6 = v3 + 32;\n
        return v6;\n
    }\n
    else if (v5 > *((&cgc_curleft + 4 * a1)))\n
    {\n
        if (*((&cgc_curleft + 4 * a1)) > 32)\n
        {\n
            v3 = (&cgc_lastpage)[a1];\n
            *((v3 + 24)) = *((&cgc_curleft + 4 * a1));\n
            cgc_insert((&cgc_freed)[a1], v3, v4);\n
        }\n
        if (cgc_allocate(a0, a1, v18))\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        *((v3 + 24)) = v5;\n
        cgc_insert((&cgc_allocated)[v4], v3, a1);\n
        (&cgc_lastpage)[a1] = v3 + v5;\n
        if (!(v5 & 4095))\n
            *((&cgc_curleft + 4 * a1)) = 0;\n
        else\n
            *((&cgc_curleft + 4 * a1)) = 0x1000 - (v5 & 4095);\n
        v6 = v3 + 32;\n
        return v6;\n
    }\n
    else\n
    {\n
        v3 = (&cgc_lastpage)[a1];\n
        *((v3 + 24)) = v5;\n
        v20 = a1;\n
        (&cgc_lastpage)[v20] = v5 + (&cgc_lastpage)[v20];\n
        v21 = a1;\n
        *((&cgc_curleft + 4 * v21)) = *((&cgc_curleft + 4 * v21)) - v5;\n
        cgc_insert((&cgc_allocated)[a1], v3, v4);\n
        v6 = v3 + 32;\n
        return v6;\n
    }\n
}\n
", "4216085:sub_405515": null, "4216096:cgc_smalloc": "long long cgc_smalloc(unsigned int a0)\n
{\n
    return cgc___malloc(a0, 1);\n
}\n
", "4216128:cgc_ssmalloc": "long long cgc_ssmalloc(unsigned int a0)\n
{\n
    return cgc___malloc(a0, 2);\n
}\n
", "4216160:cgc_malloc": "extern struct_0 *mallocp;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    if (!mallocp)\n
        cgc_setheap(0);\n
    return mallocp(a0);\n
}\n
", "4216212:sub_405594": null, "4216224:cgc_setheap": "extern unsigned int cgc___htype;\n
extern unsigned long long freep;\n
extern unsigned long long mallocp;\n
\n
long long cgc_setheap(unsigned long a0)\n
{\n
    unsigned long long v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a0 == 269484304)\n
    {\n
        cgc___htype = 0;\n
        mallocp = cgc_nmalloc;\n
        freep = cgc_nfree;\n
        return cgc_nfree;\n
    }\n
    if (a0 == -255787026)\n
    {\n
        cgc___htype = 1;\n
        mallocp = cgc_smalloc;\n
        v1 = cgc_sfree;\n
        freep = cgc_sfree;\n
    }\n
    else\n
    {\n
        cgc___htype = 2;\n
        mallocp = cgc_ssmalloc;\n
        v1 = cgc_ssfree;\n
        freep = cgc_ssfree;\n
    }\n
    return v1;\n
}\n
", "4216388:sub_405644": null, "4216400:cgc_nfree": "long long cgc_nfree(unsigned int a0)\n
{\n
    return cgc___free(a0, 0);\n
}\n
", "4216429:sub_40566d": null, "4216432:cgc_sfree": "long long cgc_sfree(unsigned int a0)\n
{\n
    return cgc___free(a0, 1);\n
}\n
", "4216464:cgc_ssfree": "long long cgc_ssfree(unsigned int a0)\n
{\n
    return cgc___free(a0, 2);\n
}\n
", "4216496:cgc_free": "extern struct_0 *freep;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    if (!freep)\n
        cgc_setheap(0);\n
    return freep(a0);\n
}\n
", "4216548:sub_4056e4": null, "4216560:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v0) = cgc_malloc(a0);\n
    if (!*(&v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_memset(*(&v0), 0, a0);\n
    v1 = *(&v0);\n
    return v1;\n
}\n
", "4216641:sub_405741": null, "4216656:cgc_checkheap": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
extern unsigned int cgc___hcookie[4];\n
extern unsigned int cgc___htype;\n
extern struct_1 cgc_allocated;\n
extern struct_1 cgc_freed;\n
\n
long long cgc_checkheap()\n
{\n
    struct_0 *v0;  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x44]\n
    struct_0 *v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x24]\n
    struct_0 *v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x14]\n
    struct_0 *v9;  // [bp-0x10]\n
\n
    v1 = cgc___htype;\n
    v0 = (&cgc_freed.field_0)[v1];\n
    do\n
    {\n
        v5 = v0;\n
        v4 = v1;\n
        if (v4 && v5->field_0 != cgc___hcookie[v4])\n
            cgc___heap_cookie_fail();\n
        v0 = v5->field_10;\n
    } while (v0 != (&cgc_freed.field_0)[v1]);\n
    do\n
    {\n
        v9 = v0;\n
        v8 = v1;\n
        if (v8 && v9->field_0 != cgc___hcookie[v8])\n
            cgc___heap_cookie_fail();\n
        v0 = *(&v9->padding_4[4]);\n
    } while (v0 != (&cgc_freed.field_0)[v1]);\n
    v0 = (&cgc_allocated.field_0)[v1];\n
    do\n
    {\n
        v3 = v0;\n
        v2 = v1;\n
        if (v2 && v3->field_0 != cgc___hcookie[v2])\n
            cgc___heap_cookie_fail();\n
        v0 = v3->field_10;\n
    } while (v0 != (&cgc_allocated.field_0)[v1]);\n
    do\n
    {\n
        v7 = v0;\n
        v6 = v1;\n
        if (v6 && v7->field_0 != cgc___hcookie[v6])\n
            cgc___heap_cookie_fail();\n
        v0 = *(&v7->padding_4[4]);\n
    } while (v0 != (&cgc_allocated.field_0)[v1]);\n
    return *(&v7->padding_4[4]);\n
}\n
", "4217109:sub_405915": null, "4217120:cgc___stack_cookie_init": "long long cgc___stack_cookie_init()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v4 = cgc_random(v1, v2, v3);\n
    if (!v4)\n
        return v4;\n
    if (cgc_sendline(1, \"The essence of chaos.\", 21) < 0)\n
        cgc__terminate(1);\n
    v4 = cgc__terminate(1);\n
    return v4;\n
}\n
", "4217207:sub_405977": null, "4217216:cgc__cookie_fail": "long long cgc__cookie_fail()\n
{\n
    unsigned long long v1;  // rcx\n
    unsigned long long v2;  // r8\n
    unsigned long long v3;  // r9\n
\n
    if (cgc_sendline(1, \"Friend is someone to share the last cookie with.\", 48) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
    return cgc___stack_cookie_fail(1, \"Friend is someone to share the last cookie with.\", 48, v1, v2, v3);\n
}\n
", "4217280:cgc___stack_cookie_fail": "long long cgc___stack_cookie_fail()\n
{\n
    return cgc__cookie_fail();\n
}\n
", "4217291:sub_4059cb": null, "4217296:cgc___heap_cookie_fail": "long long cgc___heap_cookie_fail()\n
{\n
    return cgc__cookie_fail();\n
}\n
", "4217307:sub_4059db": null, "4217312:cgc_heapinit": "extern unsigned int cgc___hcookie;\n
extern struct_0 *cgc_allocated;\n
extern char cgc_allocatedc;\n
extern struct_0 *cgc_freed;\n
extern char cgc_freedc;\n
extern char cgc_heapinit_done;\n
extern unsigned int g_4c69d4;\n
\n
long long cgc_heapinit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rax, Other Possible Types: unsigned long\n
\n
    v5 = cgc_random(v2, v3, v4);\n
    if (v5)\n
    {\n
        if (cgc_sendline(1, \"The essence of chaos.\", 21) < 0)\n
            cgc__terminate(1);\n
        v5 = cgc__terminate(1);\n
    }\n
    g_4c69d4 = 1354825710;\n
    for (v0 = 0; v0 < 3; v0 = v5)\n
    {\n
        (&cgc_allocated)[v0] = &(&cgc_allocatedc)[32 * v0];\n
        (&cgc_freed)[v0] = &(&cgc_freedc)[32 * v0];\n
        (&cgc_allocated)[v0]->field_10 = (&cgc_allocated)[v0];\n
        (&cgc_allocated)[v0]->field_8 = (&cgc_allocated)[v0];\n
        (&cgc_allocated)[v0]->field_0 = (&cgc___hcookie)[v0];\n
        (&cgc_freed)[v0]->field_0 = (&cgc___hcookie)[v0];\n
        (&cgc_freed)[v0]->field_10 = (&cgc_freed)[v0];\n
        (&cgc_freed)[v0]->field_8 = (&cgc_freed)[v0];\n
        cgc_heapinit_done = 1;\n
        v5 = v0 + 1;\n
    }\n
    return v5;\n
}\n
", "4217723:sub_405b7b": null, "4217728:cgc_dupe_open": "long long cgc_dupe_open(unsigned int a0[6])\n
{\n
    unsigned int v0[6];  // [bp-0x20]\n
    unsigned int v1[6];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v0[0]) = a0;\n
    if (a0[0] <= 3 && v0[4] < a0[2])\n
    {\n
        if (a0[2] > 0)\n
        {\n
            cgc_setheap(a0[5]);\n
            v1 = a0;\n
            return v1;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    *(&v1[0]) = 0;\n
    return v1;\n
}\n
", "4217851:sub_405bfb": null, "4217856:cgc_dupe_next": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long cgc_dupe_next(unsigned int a0[5])\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1[5];  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned int v4[5];  // rax\n
    unsigned int v5[5];  // rax\n
\n
    *(&v1[0]) = a0;\n
    v0 = 0;\n
    if (a0[3] <= 0x10000 && a0[3] >= 0)\n
    {\n
        if (a0[2] <= 0x300000 && a0[2] >= 0)\n
        {\n
            v0 = cgc_malloc(a0[3] + 12);\n
            if (!v0)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (a0[4] + 8 <= v1[2])\n
            {\n
                v0->field_0 = a0;\n
                cgc_memcpy(&v0->padding_8, &v1[1 + 1] + a0[4], 8);\n
                v4 = a0;\n
                v4[4] = v4[4] + 8;\n
                if (v0->field_c > 0 && v1[4] + v0->field_c <= a0[2] && v0->field_c <= a0[3])\n
                {\n
                    cgc_memcpy(v0 + 1, &v1[1 + 1] + a0[4], v0->field_c);\n
                    v5 = a0;\n
                    v5[4] = v0->field_c + v5[4];\n
                    v2 = v0;\n
                    return v2;\n
                }\n
                cgc_free(v0);\n
                v2 = 0;\n
                return v2;\n
            }\n
            else\n
            {\n
                cgc_free(v0);\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218277:sub_405da5": null, "4218288:cgc_dupe_free": "long long cgc_dupe_free(unsigned long long a0)\n
{\n
    return cgc_free(a0);\n
}\n
", "4218315:sub_405dcb": null, "4218320:cgc_dupe_close": "long long cgc_dupe_close(unsigned long long a0)\n
{\n
    return cgc_free(a0);\n
}\n
", "4218347:sub_405deb": null, "4218352:cgc_process_llama": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long cgc_process_llama(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    struct_0 *v4;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = v2;\n
    if (24 > v1)\n
        return 24;\n
    if (cgc_sendline(1, \"\\n
\\n
===llama===\\n
\\n
\", 15) < 0)\n
        cgc__terminate(1);\n
    v4 = v0->field_14;\n
    if (v4 >= 100)\n
        return v0->field_14;\n
    v1 -= 24;\n
    v4 = v2 + 1;\n
    v2 = v4;\n
    if (v1 <= 0)\n
        return v4;\n
    v4 = (&llama_dissectors)[v0->field_14](&v2, &v1);\n
}\n
", "4218527:sub_405e9f": null, "4218528:cgc_process_dupe": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
long long cgc_process_dupe(unsigned int a0[4])\n
{\n
    char v0;  // [bp-0x19]\n
    struct_1 *v1;  // [bp-0x18]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = 0;\n
    if (cgc_sendline(1, \"Starting dissection...\", 22) < 0)\n
        cgc__terminate(1);\n
    while (true)\n
    {\n
        v1 = cgc_dupe_next(a0);\n
        v0 = 0;\n
        if (v1)\n
            v0 = v1;\n
        if (!(v0 & 1))\n
            break;\n
        if (cgc_sendline(1, \"\\n
\\n
====New Packet====\", 20) < 0)\n
            cgc__terminate(1);\n
        if (v1->field_c > a0[3])\n
        {\n
LABEL_405f6a:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(a0[1] < 1))\n
                goto LABEL_405f6a;\n
            (&phy_dissectors)[a0[1]](v1 + 1, v1->field_c);\n
        }\n
    }\n
    v3 = cgc_sendline(1, \"\\n
\\n
===Dissection finished===\", 27);\n
    if (v3 < 0)\n
    {\n
        v3 = cgc__terminate(1);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218824:sub_405fc8": null, "4218832:cgc_process_llamainutilely": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamainutilely(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x60]\n
    char v1;  // [bp-0x51]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    char v4;  // [bp-0x48]\n
    char v5;  // [bp-0x2e]\n
    char v6[2];  // [bp-0x28]\n
    unsigned short v7;  // [bp-0x1a]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int *v10;  // rax\n
    unsigned int *v11;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = cgc__cookie;\n
    v2 = -1;\n
    if (cgc_sendline(1, \"===llamainutilely===\", 20) < 0)\n
        cgc__terminate(1);\n
    v8 = a1;\n
    *(&v6) = *(a0);\n
    memset(&v5, 0, 6);\n
    if (*(v8) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v6[0] << 8))\n
        v1 = v6[1];\n
    v7 = v1 & 1;\n
    cgc_uint2str(&v5, 6, v7);\n
    v0 = &v5;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v5)) < 0)\n
        cgc__terminate(1);\n
    v10 = v8;\n
    *(v10) = *(v10) - 2;\n
    *(a0) = *(a0) + 1;\n
    v3 ^= cgc__cookie;\n
    if (v3)\n
        cgc___stack_cookie_fail();\n
    v11 = a1;\n
    if (*(a1) > 0 && v2 >= 0)\n
    {\n
        v11 = v2;\n
        if (v11 < 0)\n
            v11 = *(&(&v4)[8 * v2])(a0, a1);\n
    }\n
    return v11;\n
}\n
", "4219263:sub_40617f": null, "4219264:cgc_process_llamaantioxygen": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6140;\n
extern unsigned long long g_4c6148;\n
extern unsigned long long g_4c6150;\n
\n
long long cgc_process_llamaantioxygen(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x610]\n
    struct_0 *v1;  // [bp-0x608]\n
    char v2;  // [bp-0x5f9]\n
    struct_0 *v3;  // [bp-0x5f8]\n
    char v4;  // [bp-0x5e9]\n
    struct_0 *v5;  // [bp-0x5e8]\n
    struct_0 *v6;  // [bp-0x5e0]\n
    char v7;  // [bp-0x5d5]\n
    unsigned int v8;  // [bp-0x5d4]\n
    struct_0 *v9;  // [bp-0x5d0]\n
    struct_0 *v10;  // [bp-0x5c8]\n
    struct_0 *v11;  // [bp-0x5c0]\n
    char v12;  // [bp-0x5b1]\n
    struct_0 *v13;  // [bp-0x5b0]\n
    struct_0 *v14;  // [bp-0x5a8]\n
    char v15;  // [bp-0x599]\n
    struct_0 *v16;  // [bp-0x598]\n
    char v17;  // [bp-0x589]\n
    struct_0 *v18;  // [bp-0x588]\n
    char v19;  // [bp-0x579]\n
    struct_0 *v20;  // [bp-0x578]\n
    unsigned int v21;  // [bp-0x56c]\n
    struct_0 *v22;  // [bp-0x568]\n
    struct_0 *v23;  // [bp-0x560]\n
    struct_0 *v24;  // [bp-0x558]\n
    struct_0 *v25;  // [bp-0x550]\n
    struct_0 *v26;  // [bp-0x548]\n
    struct_0 *v27;  // [bp-0x540]\n
    unsigned int v28;  // [bp-0x534]\n
    struct_0 *v29;  // [bp-0x530]\n
    char v30;  // [bp-0x521]\n
    unsigned int v31;  // [bp-0x520]\n
    unsigned int v32;  // [bp-0x51c]\n
    unsigned long v33;  // [bp-0x518]\n
    unsigned long v34;  // [bp-0x510]\n
    unsigned long v35;  // [bp-0x508]\n
    char v36;  // [bp-0x4ee]\n
    char v37[2];  // [bp-0x4e8]\n
    unsigned short v38;  // [bp-0x4da]\n
    unsigned int *v39;  // [bp-0x4d8]\n
    struct struct_1 **v40;  // [bp-0x4d0]\n
    char v41;  // [bp-0x4c8]\n
    char v42[8];  // [bp-0x4a8]\n
    unsigned int v43;  // [bp-0x4a0]\n
    unsigned int *v44;  // [bp-0x498]\n
    struct struct_1 **v45;  // [bp-0x490]\n
    char v46;  // [bp-0x488]\n
    char v47[8];  // [bp-0x468]\n
    unsigned int v48;  // [bp-0x460]\n
    unsigned int *v49;  // [bp-0x458]\n
    struct struct_1 **v50;  // [bp-0x450]\n
    char v51;  // [bp-0x448]\n
    char v52[8];  // [bp-0x428]\n
    unsigned int v53;  // [bp-0x420]\n
    unsigned int *v54;  // [bp-0x418]\n
    struct struct_1 **v55;  // [bp-0x410]\n
    char v56;  // [bp-0x408]\n
    char v57[8];  // [bp-0x3e8]\n
    unsigned int v58;  // [bp-0x3e0]\n
    unsigned int *v59;  // [bp-0x3d8]\n
    struct struct_1 **v60;  // [bp-0x3d0]\n
    char v61;  // [bp-0x3c8]\n
    char v62[8];  // [bp-0x3a8]\n
    unsigned int v63;  // [bp-0x3a0]\n
    unsigned int *v64;  // [bp-0x398]\n
    struct struct_1 **v65;  // [bp-0x390]\n
    char v66;  // [bp-0x388]\n
    char v67[8];  // [bp-0x368]\n
    unsigned int v68;  // [bp-0x360]\n
    unsigned int *v69;  // [bp-0x358]\n
    struct struct_1 **v70;  // [bp-0x350]\n
    unsigned long v71;  // [bp-0x348]\n
    char v72;  // [bp-0x339]\n
    unsigned int *v73;  // [bp-0x338]\n
    struct struct_1 **v74;  // [bp-0x330]\n
    unsigned long v75;  // [bp-0x328]\n
    char v76;  // [bp-0x319]\n
    unsigned int *v77;  // [bp-0x318]\n
    struct struct_1 **v78;  // [bp-0x310]\n
    unsigned long v79;  // [bp-0x308]\n
    char v80;  // [bp-0x2f9]\n
    unsigned int *v81;  // [bp-0x2f8]\n
    struct struct_1 **v82;  // [bp-0x2f0]\n
    char *v83;  // [bp-0x2e8]\n
    unsigned int *v84;  // [bp-0x2e0]\n
    struct struct_1 **v85;  // [bp-0x2d8]\n
    char *v86;  // [bp-0x2d0]\n
    unsigned int *v87;  // [bp-0x2c8]\n
    struct struct_1 **v88;  // [bp-0x2c0]\n
    char *v89;  // [bp-0x2b8]\n
    unsigned int v90;  // [bp-0x2ac]\n
    unsigned int *v91;  // [bp-0x2a8]\n
    struct struct_1 **v92;  // [bp-0x2a0]\n
    char *v93;  // [bp-0x298]\n
    unsigned int v94;  // [bp-0x28c]\n
    unsigned int *v95;  // [bp-0x288]\n
    struct struct_1 **v96;  // [bp-0x280]\n
    char v97;  // [bp-0x278]\n
    unsigned short v98;  // [bp-0x272]\n
    unsigned int *v99;  // [bp-0x270]\n
    struct struct_1 **v100;  // [bp-0x268]\n
    char v101;  // [bp-0x25d]\n
    char v102;  // [bp-0x259]\n
    unsigned int *v103;  // [bp-0x258]\n
    struct struct_1 **v104;  // [bp-0x250]\n
    char v105;  // [bp-0x245]\n
    char v106;  // [bp-0x241]\n
    unsigned int *v107;  // [bp-0x240]\n
    struct struct_1 **v108;  // [bp-0x238]\n
    unsigned short *v109;  // [bp-0x230]\n
    unsigned int *v110;  // [bp-0x228]\n
    struct struct_1 **v111;  // [bp-0x220]\n
    char *v112;  // [bp-0x218]\n
    unsigned int *v113;  // [bp-0x210]\n
    struct struct_1 **v114;  // [bp-0x208]\n
    unsigned short *v115;  // [bp-0x200]\n
    unsigned int *v116;  // [bp-0x1f8]\n
    struct struct_1 **v117;  // [bp-0x1f0]\n
    char v118;  // [bp-0x1e8]\n
    unsigned int v119;  // [bp-0x1d0]\n
    unsigned int *v120;  // [bp-0x1c8]\n
    struct struct_1 **v121;  // [bp-0x1c0]\n
    char v122;  // [bp-0x1b8]\n
    unsigned int v123;  // [bp-0x1ac]\n
    unsigned int *v124;  // [bp-0x1a8]\n
    struct struct_1 **v125;  // [bp-0x1a0]\n
    char v126;  // [bp-0x198]\n
    unsigned int v127;  // [bp-0x18c]\n
    unsigned int *v128;  // [bp-0x188]\n
    struct struct_1 **v129;  // [bp-0x180]\n
    char v130;  // [bp-0x178]\n
    unsigned int v131;  // [bp-0x16c]\n
    unsigned int *v132;  // [bp-0x168]\n
    struct struct_1 **v133;  // [bp-0x160]\n
    char v134;  // [bp-0x158]\n
    unsigned int v135;  // [bp-0x14c]\n
    unsigned int *v136;  // [bp-0x148]\n
    struct struct_1 **v137;  // [bp-0x140]\n
    char v138;  // [bp-0x138]\n
    unsigned int v139;  // [bp-0x12c]\n
    unsigned int *v140;  // [bp-0x128]\n
    struct struct_1 **v141;  // [bp-0x120]\n
    char v142;  // [bp-0x118]\n
    unsigned int v143;  // [bp-0x10c]\n
    unsigned int *v144;  // [bp-0x108]\n
    struct struct_1 **v145;  // [bp-0x100]\n
    unsigned long v146;  // [bp-0xf8]\n
    unsigned short v147;  // [bp-0xea]\n
    unsigned int *v148;  // [bp-0xe8]\n
    struct struct_1 **v149;  // [bp-0xe0]\n
    unsigned long v150;  // [bp-0xd8]\n
    unsigned short v151;  // [bp-0xca]\n
    unsigned int *v152;  // [bp-0xc8]\n
    struct struct_1 **v153;  // [bp-0xc0]\n
    char v154;  // [bp-0xb4]\n
    char v155[4];  // [bp-0xa8]\n
    unsigned int v156;  // [bp-0x9c]\n
    unsigned int *v157;  // [bp-0x98]\n
    struct struct_1 **v158;  // [bp-0x90]\n
    char *v159;  // [bp-0x88]\n
    unsigned int v160;  // [bp-0x7c]\n
    unsigned int *v161;  // [bp-0x78]\n
    struct struct_1 **v162;  // [bp-0x70]\n
    char v163;  // [bp-0x68]\n
    unsigned int v164;  // [bp-0x50]\n
    unsigned int *v165;  // [bp-0x48]\n
    struct struct_1 **v166;  // [bp-0x40]\n
    char v167;  // [bp-0x38]\n
    unsigned int v168;  // [bp-0x20]\n
    unsigned int *v169;  // [bp-0x18]\n
    struct struct_1 **v170;  // [bp-0x10]\n
    unsigned int *v172;  // rax\n
    struct struct_1 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_1 **v175;  // rax\n
    struct struct_1 **v176;  // rax\n
    unsigned int *v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_1 **v179;  // rax\n
    struct struct_1 **v181;  // rax\n
    unsigned int *v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_1 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_1 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_1 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_1 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_1 **v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_1 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_1 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_1 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_1 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_1 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_1 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_1 **v207;  // rax\n
    struct struct_1 **v209;  // rax\n
    unsigned int *v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_1 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_1 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_1 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_1 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_1 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_1 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_1 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_1 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_1 **v229;  // rax\n
    struct struct_1 **v231;  // rax\n
    unsigned int *v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_1 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_1 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_1 **v239;  // rax\n
    struct struct_1 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_1 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_1 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_1 **v247;  // rax\n
    struct struct_1 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_1 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_1 **v253;  // rax\n
    unsigned int *v254;  // rax, Other Possible Types: unsigned long\n
\n
    v33 = g_4c6140;\n
    v34 = g_4c6148;\n
    v35 = g_4c6150;\n
    v32 = cgc__cookie;\n
    v31 = -1;\n
    if (cgc_sendline(1, \"===llamaantioxygen===\", 21) < 0)\n
        cgc__terminate(1);\n
    v70 = a0;\n
    v69 = a1;\n
    *(&v67[0]) = *(v70);\n
    memset(&v66, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if (v67[0] << 56)\n
    {\n
        v30 = 0;\n
        if (v67[1] << 48)\n
        {\n
            v30 = 0;\n
            if (v67[2] << 40)\n
            {\n
                v30 = 0;\n
                if (v67[3] << 32)\n
                {\n
                    v30 = 0;\n
                    if ((v67[4] << 24))\n
                    {\n
                        v30 = 0;\n
                        if ((v67[5] << 16))\n
                        {\n
                            v30 = 0;\n
                            if ((v67[6] << 8))\n
                                v30 = v67[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v68) = v30 & 1;\n
    cgc_uint2str(&v66, 21, *(&v68));\n
    v29 = &v66;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v172 = v69;\n
    *(v172) = *(v172) - 8;\n
    v173 = v70;\n
    *(v173) = *(v173) + 8;\n
    v82 = a0;\n
    v81 = a1;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(v82)->field_0;\n
    v174 = v81;\n
    *(v174) = *(v174) - 1;\n
    v175 = v82;\n
    *(v175) = *(v175) + 1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_40650a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40650a:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v176 = v82;\n
    *(v176) = &(*(v176))[v80];\n
    v177 = v81;\n
    *(v177) = *(v177) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v88 = a0;\n
    v87 = a1;\n
    v86 = &*(v88)->field_0;\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v178 = v87;\n
    *(v178) = *(v178) - 1;\n
    v179 = v88;\n
    *(v179) = *(v179) + 1;\n
    v31 = *(v86);\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v95) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v95);\n
    v94 = v28;\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = cgc_calloc(134);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v93, \"Str: \");\n
    cgc_strncpy(v93 + 5, *(v96), v94);\n
    v181 = v96;\n
    *(v181) = &(*(v181))[4 + cgc_strlen(v93)];\n
    v183 = v95;\n
    *(v183) = *(v183) - (cgc_strlen(v93) + -4);\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 6);\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 6, v98);\n
    v27 = &v97;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v184 = v99;\n
    *(v184) = *(v184) - 2;\n
    v185 = v100;\n
    *(v185) = *(v185) + 2;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 4);\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(v108)->field_0;\n
    cgc_uint2str(&v105, 4, v106);\n
    v26 = &v105;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v186 = v107;\n
    *(v186) = *(v186) - 1;\n
    v187 = v108;\n
    *(v187) = *(v187) + 1;\n
    v117 = a0;\n
    v116 = a1;\n
    v115 = &*(v117);\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v188 = v116;\n
    *(v188) = *(v188) - 2;\n
    v189 = v117;\n
    *(v189) = *(v189) + 2;\n
    v31 = *(v115);\n
    v121 = a0;\n
    v120 = a1;\n
    memset(&v118, 0, 21);\n
    if (*(v120) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v119) = *(&*(v121));\n
    cgc_uint2str(&v118, 21, *(&v119));\n
    v25 = &v118;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v190 = v120;\n
    *(v190) = *(v190) - 8;\n
    v191 = v121;\n
    *(v191) = *(v191) + 8;\n
    v125 = a0;\n
    v124 = a1;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    cgc_uint2str(&v122, 12, v123);\n
    v24 = &v122;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v122)) < 0)\n
        cgc__terminate(1);\n
    v192 = v124;\n
    *(v192) = *(v192) - 4;\n
    v193 = v125;\n
    *(v193) = *(v193) + 4;\n
    v145 = a0;\n
    v144 = a1;\n
    memset(&v142, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v143 = *(&*(v145));\n
    cgc_uint2str(&v142, 12, v143);\n
    v23 = &v142;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v142)) < 0)\n
        cgc__terminate(1);\n
    v194 = v144;\n
    *(v194) = *(v194) - 4;\n
    v195 = v145;\n
    *(v195) = *(v195) + 4;\n
    v149 = a0;\n
    v148 = a1;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = *(&*(v149));\n
    v196 = v148;\n
    *(v196) = *(v196) - 2;\n
    v197 = v149;\n
    *(v197) = *(v197) + 2;\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_406f32;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_406f32:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v198 = v148;\n
    *(v198) = *(v198) - v147;\n
    v199 = v149;\n
    *(v199) = &(*(v199))[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v141 = a0;\n
    v140 = a1;\n
    memset(&v138, 0, 12);\n
    if (*(v140) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = *(&*(v141));\n
    cgc_uint2str(&v138, 12, v139);\n
    v22 = &v138;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v200 = v140;\n
    *(v200) = *(v200) - 4;\n
    v201 = v141;\n
    *(v201) = *(v201) + 4;\n
    v85 = a0;\n
    v84 = a1;\n
    v83 = &*(v85)->field_0;\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v202 = v84;\n
    *(v202) = *(v202) - 1;\n
    v203 = v85;\n
    *(v203) = *(v203) + 1;\n
    v31 = *(v83);\n
    v153 = a0;\n
    v152 = a1;\n
    if (*(v152) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = *(&*(v153));\n
    v204 = v152;\n
    *(v204) = *(v204) - 2;\n
    v205 = v153;\n
    *(v205) = *(v205) + 2;\n
    if (v151 <= *(v152) && !(!v151))\n
        goto LABEL_4072b1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4072b1:\n
    v150 = cgc_calloc(v151);\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v150, *(v153), v151);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v206 = v152;\n
    *(v206) = *(v206) - v151;\n
    v207 = v153;\n
    *(v207) = &(*(v207))[v151];\n
    cgc_checkheap();\n
    cgc_free(v150);\n
    v92 = a0;\n
    v91 = a1;\n
    if (*(v91) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v91) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v91);\n
    v90 = v21;\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = cgc_calloc(134);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v89, \"Str: \");\n
    cgc_strncpy(v89 + 5, *(v92), v90);\n
    v209 = v92;\n
    *(v209) = &(*(v209))[4 + cgc_strlen(v89)];\n
    v211 = v91;\n
    *(v211) = *(v211) - (cgc_strlen(v89) + -4);\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v137 = a0;\n
    v136 = a1;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v135 = *(&*(v137));\n
    cgc_uint2str(&v134, 12, v135);\n
    v20 = &v134;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v134)) < 0)\n
        cgc__terminate(1);\n
    v212 = v136;\n
    *(v212) = *(v212) - 4;\n
    v213 = v137;\n
    *(v213) = *(v213) + 4;\n
    v65 = a0;\n
    v64 = a1;\n
    *(&v62[0]) = *(v65);\n
    memset(&v61, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if (v62[0] << 56)\n
    {\n
        v19 = 0;\n
        if (v62[1] << 48)\n
        {\n
            v19 = 0;\n
            if (v62[2] << 40)\n
            {\n
                v19 = 0;\n
                if (v62[3] << 32)\n
                {\n
                    v19 = 0;\n
                    if ((v62[4] << 24))\n
                    {\n
                        v19 = 0;\n
                        if ((v62[5] << 16))\n
                        {\n
                            v19 = 0;\n
                            if ((v62[6] << 8))\n
                                v19 = v62[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v63) = v19 & 1;\n
    cgc_uint2str(&v61, 21, *(&v63));\n
    v18 = &v61;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v214 = v64;\n
    *(v214) = *(v214) - 8;\n
    v215 = v65;\n
    *(v215) = *(v215) + 8;\n
    v158 = a0;\n
    v157 = a1;\n
    *(&v155) = *(v158);\n
    memset(&v154, 0, 12);\n
    if (*(v157) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v155[0] << 24))\n
    {\n
        v17 = 0;\n
        if ((v155[1] << 16))\n
        {\n
            v17 = 0;\n
            if ((v155[2] << 8))\n
                v17 = v155[3];\n
        }\n
    }\n
    v156 = v17 & 1;\n
    cgc_uint2str(&v154, 12, v156);\n
    v16 = &v154;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v154)) < 0)\n
        cgc__terminate(1);\n
    v216 = v157;\n
    *(v216) = *(v216) - 4;\n
    v217 = v158;\n
    *(v217) = *(v217) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    *(&v57[0]) = *(v60);\n
    memset(&v56, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if (v57[0] << 56)\n
    {\n
        v15 = 0;\n
        if (v57[1] << 48)\n
        {\n
            v15 = 0;\n
            if (v57[2] << 40)\n
            {\n
                v15 = 0;\n
                if (v57[3] << 32)\n
                {\n
                    v15 = 0;\n
                    if ((v57[4] << 24))\n
                    {\n
                        v15 = 0;\n
                        if ((v57[5] << 16))\n
                        {\n
                            v15 = 0;\n
                            if ((v57[6] << 8))\n
                                v15 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v58) = v15 & 1;\n
    cgc_uint2str(&v56, 21, *(&v58));\n
    v14 = &v56;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v218 = v59;\n
    *(v218) = *(v218) - 8;\n
    v219 = v60;\n
    *(v219) = *(v219) + 8;\n
    v114 = a0;\n
    v113 = a1;\n
    v112 = &*(v114)->field_0;\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v220 = v113;\n
    *(v220) = *(v220) - 2;\n
    v221 = v114;\n
    *(v221) = *(v221) + 2;\n
    v31 = *(&v112);\n
    v133 = a0;\n
    v132 = a1;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(&*(v133));\n
    cgc_uint2str(&v130, 12, v131);\n
    v13 = &v130;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v130)) < 0)\n
        cgc__terminate(1);\n
    v222 = v132;\n
    *(v222) = *(v222) - 4;\n
    v223 = v133;\n
    *(v223) = *(v223) + 4;\n
    v55 = a0;\n
    v54 = a1;\n
    *(&v52[0]) = *(v55);\n
    memset(&v51, 0, 21);\n
    if (*(v54) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if (v52[0] << 56)\n
    {\n
        v12 = 0;\n
        if (v52[1] << 48)\n
        {\n
            v12 = 0;\n
            if (v52[2] << 40)\n
            {\n
                v12 = 0;\n
                if (v52[3] << 32)\n
                {\n
                    v12 = 0;\n
                    if ((v52[4] << 24))\n
                    {\n
                        v12 = 0;\n
                        if ((v52[5] << 16))\n
                        {\n
                            v12 = 0;\n
                            if ((v52[6] << 8))\n
                                v12 = v52[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v53) = v12 & 1;\n
    cgc_uint2str(&v51, 21, *(&v53));\n
    v11 = &v51;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v224 = v54;\n
    *(v224) = *(v224) - 8;\n
    v225 = v55;\n
    *(v225) = *(v225) + 8;\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 4);\n
    if (*(v103) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(v104)->field_0;\n
    cgc_uint2str(&v101, 4, v102);\n
    v10 = &v101;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v226 = v103;\n
    *(v226) = *(v226) - 1;\n
    v227 = v104;\n
    *(v227) = *(v227) + 1;\n
    v129 = a0;\n
    v128 = a1;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    cgc_uint2str(&v126, 12, v127);\n
    v9 = &v126;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v126)) < 0)\n
        cgc__terminate(1);\n
    v228 = v128;\n
    *(v228) = *(v228) - 4;\n
    v229 = v129;\n
    *(v229) = *(v229) + 4;\n
    v162 = a0;\n
    v161 = a1;\n
    if (*(v161) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v161) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v161);\n
    v160 = v8;\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = cgc_calloc(134);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v159, \"Str: \");\n
    cgc_strncpy(v159 + 5, *(v162), v160);\n
    v231 = v162;\n
    *(v231) = &(*(v231))[4 + cgc_strlen(v159)];\n
    v233 = v161;\n
    *(v233) = *(v233) - (cgc_strlen(v159) + -4);\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v50 = a0;\n
    v49 = a1;\n
    *(&v47[0]) = *(v50);\n
    memset(&v46, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v47[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v47[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v47[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v47[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v47[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v47[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v47[6] << 8))\n
                                v7 = v47[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v48) = v7 & 1;\n
    cgc_uint2str(&v46, 21, *(&v48));\n
    v6 = &v46;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v234 = v49;\n
    *(v234) = *(v234) - 8;\n
    v235 = v50;\n
    *(v235) = *(v235) + 8;\n
    v170 = a0;\n
    v169 = a1;\n
    memset(&v167, 0, 21);\n
    if (*(v169) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v168) = *(&*(v170));\n
    cgc_uint2str(&v167, 21, *(&v168));\n
    v5 = &v167;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v167)) < 0)\n
        cgc__terminate(1);\n
    v236 = v169;\n
    *(v236) = *(v236) - 8;\n
    v237 = v170;\n
    *(v237) = *(v237) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(v78)->field_0;\n
    v238 = v77;\n
    *(v238) = *(v238) - 1;\n
    v239 = v78;\n
    *(v239) = *(v239) + 1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_4087b2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4087b2:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v240 = v78;\n
    *(v240) = &(*(v240))[v76];\n
    v241 = v77;\n
    *(v241) = *(v241) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42[0]) = *(v45);\n
    memset(&v41, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if (v42[0] << 56)\n
    {\n
        v4 = 0;\n
        if (v42[1] << 48)\n
        {\n
            v4 = 0;\n
            if (v42[2] << 40)\n
            {\n
                v4 = 0;\n
                if (v42[3] << 32)\n
                {\n
                    v4 = 0;\n
                    if ((v42[4] << 24))\n
                    {\n
                        v4 = 0;\n
                        if ((v42[5] << 16))\n
                        {\n
                            v4 = 0;\n
                            if ((v42[6] << 8))\n
                                v4 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v43) = v4 & 1;\n
    cgc_uint2str(&v41, 21, *(&v43));\n
    v3 = &v41;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v242 = v44;\n
    *(v242) = *(v242) - 8;\n
    v243 = v45;\n
    *(v243) = *(v243) + 8;\n
    v111 = a0;\n
    v110 = a1;\n
    v109 = &*(v111);\n
    if (*(v110) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v244 = v110;\n
    *(v244) = *(v244) - 2;\n
    v245 = v111;\n
    *(v245) = *(v245) + 2;\n
    v31 = *(v109);\n
    v74 = a0;\n
    v73 = a1;\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(v74)->field_0;\n
    v246 = v73;\n
    *(v246) = *(v246) - 1;\n
    v247 = v74;\n
    *(v247) = *(v247) + 1;\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_408c3b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_408c3b:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v248 = v74;\n
    *(v248) = &(*(v248))[v72];\n
    v249 = v73;\n
    *(v249) = *(v249) - v72;\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37) = *(v40);\n
    memset(&v36, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v37[0] << 8))\n
        v2 = v37[1];\n
    v38 = v2 & 1;\n
    cgc_uint2str(&v36, 6, v38);\n
    v1 = &v36;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v250 = v39;\n
    *(v250) = *(v250) - 2;\n
    v251 = v40;\n
    *(v251) = *(v251) + 2;\n
    v166 = a0;\n
    v165 = a1;\n
    memset(&v163, 0, 21);\n
    if (*(v165) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v164) = *(&*(v166));\n
    cgc_uint2str(&v163, 21, *(&v164));\n
    v0 = &v163;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v163)) < 0)\n
        cgc__terminate(1);\n
    v252 = v165;\n
    *(v252) = *(v252) - 8;\n
    v253 = v166;\n
    *(v253) = *(v253) + 8;\n
    v32 ^= cgc__cookie;\n
    if (v32)\n
        cgc___stack_cookie_fail();\n
    v254 = a1;\n
    if (*(a1) > 0 && v31 >= 0)\n
    {\n
        v254 = v31;\n
        if (v254 < 3)\n
            v254 = (&v33)[v31](a0, a1);\n
    }\n
    return v254;\n
}\n
", "4231103:sub_408fbf": null, "4231104:cgc_process_llamasubtileness": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasubtileness(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x4b0]\n
    char v1;  // [bp-0x4a5]\n
    unsigned int v2;  // [bp-0x4a4]\n
    struct_1 *v3;  // [bp-0x4a0]\n
    struct_1 *v4;  // [bp-0x498]\n
    char v5;  // [bp-0x48d]\n
    unsigned int v6;  // [bp-0x48c]\n
    struct_1 *v7;  // [bp-0x488]\n
    struct_1 *v8;  // [bp-0x480]\n
    struct_1 *v9;  // [bp-0x478]\n
    struct_1 *v10;  // [bp-0x470]\n
    struct_1 *v11;  // [bp-0x468]\n
    struct_1 *v12;  // [bp-0x460]\n
    struct_1 *v13;  // [bp-0x458]\n
    struct_1 *v14;  // [bp-0x450]\n
    char v15;  // [bp-0x441]\n
    struct_1 *v16;  // [bp-0x440]\n
    struct_1 *v17;  // [bp-0x438]\n
    char v18;  // [bp-0x42d]\n
    unsigned int v19;  // [bp-0x42c]\n
    struct_1 *v20;  // [bp-0x428]\n
    struct_1 *v21;  // [bp-0x420]\n
    unsigned int v22;  // [bp-0x418]\n
    unsigned int v23;  // [bp-0x414]\n
    char v24;  // [bp-0x410]\n
    char v25;  // [bp-0x3f6]\n
    char *v26;  // [bp-0x3f0]\n
    unsigned short v27;  // [bp-0x3e2]\n
    unsigned int *v28;  // [bp-0x3e0]\n
    struct struct_0 **v29;  // [bp-0x3d8]\n
    char v30;  // [bp-0x3ce]\n
    char v31[2];  // [bp-0x3c8]\n
    unsigned short v32;  // [bp-0x3ba]\n
    unsigned int *v33;  // [bp-0x3b8]\n
    struct struct_0 **v34;  // [bp-0x3b0]\n
    char v35;  // [bp-0x3a8]\n
    char v36[8];  // [bp-0x388]\n
    unsigned int v37;  // [bp-0x380]\n
    unsigned int *v38;  // [bp-0x378]\n
    struct struct_0 **v39;  // [bp-0x370]\n
    char v40;  // [bp-0x368]\n
    char v41[8];  // [bp-0x348]\n
    unsigned int v42;  // [bp-0x340]\n
    unsigned int *v43;  // [bp-0x338]\n
    struct struct_0 **v44;  // [bp-0x330]\n
    char *v45;  // [bp-0x328]\n
    unsigned int v46;  // [bp-0x31c]\n
    unsigned int *v47;  // [bp-0x318]\n
    struct struct_0 **v48;  // [bp-0x310]\n
    char *v49;  // [bp-0x308]\n
    unsigned int v50;  // [bp-0x2fc]\n
    unsigned int *v51;  // [bp-0x2f8]\n
    struct struct_0 **v52;  // [bp-0x2f0]\n
    char v53;  // [bp-0x2e8]\n
    unsigned short v54;  // [bp-0x2e2]\n
    unsigned int *v55;  // [bp-0x2e0]\n
    struct struct_0 **v56;  // [bp-0x2d8]\n
    char v57;  // [bp-0x2cd]\n
    char v58;  // [bp-0x2c9]\n
    unsigned int *v59;  // [bp-0x2c8]\n
    struct struct_0 **v60;  // [bp-0x2c0]\n
    char v61;  // [bp-0x2b5]\n
    char v62;  // [bp-0x2b1]\n
    unsigned int *v63;  // [bp-0x2b0]\n
    struct struct_0 **v64;  // [bp-0x2a8]\n
    char v65;  // [bp-0x29d]\n
    char v66;  // [bp-0x299]\n
    unsigned int *v67;  // [bp-0x298]\n
    struct struct_0 **v68;  // [bp-0x290]\n
    char v69;  // [bp-0x288]\n
    unsigned int v70;  // [bp-0x270]\n
    unsigned int *v71;  // [bp-0x268]\n
    struct struct_0 **v72;  // [bp-0x260]\n
    char v73;  // [bp-0x258]\n
    unsigned int v74;  // [bp-0x240]\n
    unsigned int *v75;  // [bp-0x238]\n
    struct struct_0 **v76;  // [bp-0x230]\n
    char v77;  // [bp-0x228]\n
    unsigned int v78;  // [bp-0x210]\n
    unsigned int *v79;  // [bp-0x208]\n
    struct struct_0 **v80;  // [bp-0x200]\n
    char v81;  // [bp-0x1f8]\n
    unsigned int v82;  // [bp-0x1ec]\n
    unsigned int *v83;  // [bp-0x1e8]\n
    struct struct_0 **v84;  // [bp-0x1e0]\n
    unsigned long v85;  // [bp-0x1d8]\n
    unsigned short v86;  // [bp-0x1ca]\n
    unsigned int *v87;  // [bp-0x1c8]\n
    struct struct_0 **v88;  // [bp-0x1c0]\n
    unsigned long v89;  // [bp-0x1b8]\n
    unsigned short v90;  // [bp-0x1aa]\n
    unsigned int *v91;  // [bp-0x1a8]\n
    struct struct_0 **v92;  // [bp-0x1a0]\n
    unsigned long v93;  // [bp-0x198]\n
    unsigned short v94;  // [bp-0x18a]\n
    unsigned int *v95;  // [bp-0x188]\n
    struct struct_0 **v96;  // [bp-0x180]\n
    unsigned long v97;  // [bp-0x178]\n
    unsigned short v98;  // [bp-0x16a]\n
    unsigned int *v99;  // [bp-0x168]\n
    struct struct_0 **v100;  // [bp-0x160]\n
    unsigned long v101;  // [bp-0x158]\n
    unsigned short v102;  // [bp-0x14a]\n
    unsigned int *v103;  // [bp-0x148]\n
    struct struct_0 **v104;  // [bp-0x140]\n
    unsigned long v105;  // [bp-0x138]\n
    unsigned short v106;  // [bp-0x12a]\n
    unsigned int *v107;  // [bp-0x128]\n
    struct struct_0 **v108;  // [bp-0x120]\n
    unsigned long v109;  // [bp-0x118]\n
    unsigned short v110;  // [bp-0x10a]\n
    unsigned int *v111;  // [bp-0x108]\n
    struct struct_0 **v112;  // [bp-0x100]\n
    char *v113;  // [bp-0xf8]\n
    unsigned int v114;  // [bp-0xec]\n
    unsigned int *v115;  // [bp-0xe8]\n
    struct struct_0 **v116;  // [bp-0xe0]\n
    char v117;  // [bp-0xd8]\n
    unsigned int v118;  // [bp-0xc0]\n
    unsigned int *v119;  // [bp-0xb8]\n
    struct struct_0 **v120;  // [bp-0xb0]\n
    char v121;  // [bp-0xa8]\n
    unsigned int v122;  // [bp-0x90]\n
    unsigned int *v123;  // [bp-0x88]\n
    struct struct_0 **v124;  // [bp-0x80]\n
    char v125;  // [bp-0x78]\n
    unsigned int v126;  // [bp-0x60]\n
    unsigned int *v127;  // [bp-0x58]\n
    struct struct_0 **v128;  // [bp-0x50]\n
    unsigned long v129;  // [bp-0x48]\n
    char v130;  // [bp-0x39]\n
    unsigned int *v131;  // [bp-0x38]\n
    struct struct_0 **v132;  // [bp-0x30]\n
    unsigned long v133;  // [bp-0x28]\n
    char v134;  // [bp-0x19]\n
    unsigned int *v135;  // [bp-0x18]\n
    struct struct_0 **v136;  // [bp-0x10]\n
    unsigned int *v138;  // rax\n
    struct struct_0 **v139;  // rax\n
    unsigned int *v140;  // rax\n
    struct struct_0 **v141;  // rax\n
    unsigned int *v142;  // rax\n
    struct struct_0 **v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v149;  // rax\n
    unsigned int *v150;  // rax\n
    struct struct_0 **v151;  // rax\n
    unsigned int *v152;  // rax\n
    struct struct_0 **v153;  // rax\n
    unsigned int *v154;  // rax\n
    struct struct_0 **v155;  // rax\n
    unsigned int *v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    struct struct_0 **v159;  // rax\n
    unsigned int *v160;  // rax\n
    struct struct_0 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    struct struct_0 **v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    unsigned int *v165;  // rax\n
    unsigned int *v166;  // rax\n
    struct struct_0 **v167;  // rax\n
    unsigned int *v168;  // rax\n
    struct struct_0 **v169;  // rax\n
    unsigned int *v170;  // rax\n
    struct struct_0 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_0 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax, Other Possible Types: unsigned long\n
\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamasubtileness===\", 22) < 0)\n
        cgc__terminate(1);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 21);\n
    if (*(v127) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v126) = *(&*(v128));\n
    cgc_uint2str(&v125, 21, *(&v126));\n
    v21 = &v125;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v138 = v127;\n
    *(v138) = *(v138) - 8;\n
    v139 = v128;\n
    *(v139) = *(v139) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v20 = &v65;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v140 = v67;\n
    *(v140) = *(v140) - 1;\n
    v141 = v68;\n
    *(v141) = *(v141) + 1;\n
    v136 = a0;\n
    v135 = a1;\n
    if (*(v135) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(v136)->field_0;\n
    v142 = v135;\n
    *(v142) = *(v142) - 1;\n
    v143 = v136;\n
    *(v143) = *(v143) + 1;\n
    if (v134 <= *(v135) && !(!v134))\n
        goto LABEL_4092d0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4092d0:\n
    v133 = cgc_calloc(v134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v133, *(v136), v134);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v144 = v136;\n
    *(v144) = &(*(v144))[v134];\n
    v145 = v135;\n
    *(v145) = *(v145) - v134;\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    v116 = a0;\n
    v115 = a1;\n
    if (*(v115) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v115) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v115);\n
    v114 = v19;\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = cgc_calloc(134);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v113, \"Str: \");\n
    cgc_strncpy(v113 + 5, *(v116), v114);\n
    v147 = v116;\n
    *(v147) = &(*(v147))[4 + cgc_strlen(v113)];\n
    v149 = v115;\n
    *(v149) = *(v149) - (cgc_strlen(v113) + -4);\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v31[0] << 8))\n
        v18 = v31[1];\n
    v32 = v18 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v17 = &v30;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v150 = v33;\n
    *(v150) = *(v150) - 2;\n
    v151 = v34;\n
    *(v151) = *(v151) + 2;\n
    v100 = a0;\n
    v99 = a1;\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    v152 = v99;\n
    *(v152) = *(v152) - 2;\n
    v153 = v100;\n
    *(v153) = *(v153) + 2;\n
    if (v98 <= *(v99) && !(!v98))\n
        goto LABEL_4097ba;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4097ba:\n
    v97 = cgc_calloc(v98);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v97, *(v100), v98);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v154 = v99;\n
    *(v154) = *(v154) - v98;\n
    v155 = v100;\n
    *(v155) = &(*(v155))[v98];\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 6, v54);\n
    v16 = &v53;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v156 = v55;\n
    *(v156) = *(v156) - 2;\n
    v157 = v56;\n
    *(v157) = *(v157) + 2;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41[0]) = *(v44);\n
    memset(&v40, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if (v41[0] << 56)\n
    {\n
        v15 = 0;\n
        if (v41[1] << 48)\n
        {\n
            v15 = 0;\n
            if (v41[2] << 40)\n
            {\n
                v15 = 0;\n
                if (v41[3] << 32)\n
                {\n
                    v15 = 0;\n
                    if ((v41[4] << 24))\n
                    {\n
                        v15 = 0;\n
                        if ((v41[5] << 16))\n
                        {\n
                            v15 = 0;\n
                            if ((v41[6] << 8))\n
                                v15 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v42) = v15 & 1;\n
    cgc_uint2str(&v40, 21, *(&v42));\n
    v14 = &v40;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v158 = v43;\n
    *(v158) = *(v158) - 8;\n
    v159 = v44;\n
    *(v159) = *(v159) + 8;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v78) = *(&*(v80));\n
    cgc_uint2str(&v77, 21, *(&v78));\n
    v13 = &v77;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v160 = v79;\n
    *(v160) = *(v160) - 8;\n
    v161 = v80;\n
    *(v161) = *(v161) + 8;\n
    v132 = a0;\n
    v131 = a1;\n
    if (*(v131) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(v132)->field_0;\n
    v162 = v131;\n
    *(v162) = *(v162) - 1;\n
    v163 = v132;\n
    *(v163) = *(v163) + 1;\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_409d8e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_409d8e:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v164 = v132;\n
    *(v164) = &(*(v164))[v130];\n
    v165 = v131;\n
    *(v165) = *(v165) - v130;\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    v166 = v95;\n
    *(v166) = *(v166) - 2;\n
    v167 = v96;\n
    *(v167) = *(v167) + 2;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_409f3d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_409f3d:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v168 = v95;\n
    *(v168) = *(v168) - v94;\n
    v169 = v96;\n
    *(v169) = &(*(v169))[v94];\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v92 = a0;\n
    v91 = a1;\n
    if (*(v91) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    v170 = v91;\n
    *(v170) = *(v170) - 2;\n
    v171 = v92;\n
    *(v171) = *(v171) + 2;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_40a10d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40a10d:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v172 = v91;\n
    *(v172) = *(v172) - v90;\n
    v173 = v92;\n
    *(v173) = &(*(v173))[v90];\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v74) = *(&*(v76));\n
    cgc_uint2str(&v73, 21, *(&v74));\n
    v12 = &v73;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v174 = v75;\n
    *(v174) = *(v174) - 8;\n
    v175 = v76;\n
    *(v175) = *(v175) + 8;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 4);\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    cgc_uint2str(&v61, 4, v62);\n
    v11 = &v61;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v176 = v63;\n
    *(v176) = *(v176) - 1;\n
    v177 = v64;\n
    *(v177) = *(v177) + 1;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 21);\n
    if (*(v123) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v122) = *(&*(v124));\n
    cgc_uint2str(&v121, 21, *(&v122));\n
    v10 = &v121;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v178 = v123;\n
    *(v178) = *(v178) - 8;\n
    v179 = v124;\n
    *(v179) = *(v179) + 8;\n
    v112 = a0;\n
    v111 = a1;\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    v180 = v111;\n
    *(v180) = *(v180) - 2;\n
    v181 = v112;\n
    *(v181) = *(v181) + 2;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_40a5dd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40a5dd:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v182 = v111;\n
    *(v182) = *(v182) - v110;\n
    v183 = v112;\n
    *(v183) = &(*(v183))[v110];\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 21);\n
    if (*(v119) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v118) = *(&*(v120));\n
    cgc_uint2str(&v117, 21, *(&v118));\n
    v9 = &v117;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v184 = v119;\n
    *(v184) = *(v184) - 8;\n
    v185 = v120;\n
    *(v185) = *(v185) + 8;\n
    v108 = a0;\n
    v107 = a1;\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    v186 = v107;\n
    *(v186) = *(v186) - 2;\n
    v187 = v108;\n
    *(v187) = *(v187) + 2;\n
    if (v106 <= *(v107) && !(!v106))\n
        goto LABEL_40a8b3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40a8b3:\n
    v105 = cgc_calloc(v106);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v105, *(v108), v106);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v188 = v107;\n
    *(v188) = *(v188) - v106;\n
    v189 = v108;\n
    *(v189) = &(*(v189))[v106];\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 12);\n
    if (*(v83) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 12, v82);\n
    v8 = &v81;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v190 = v83;\n
    *(v190) = *(v190) - 4;\n
    v191 = v84;\n
    *(v191) = *(v191) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 4);\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    cgc_uint2str(&v57, 4, v58);\n
    v7 = &v57;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v192 = v59;\n
    *(v192) = *(v192) - 1;\n
    v193 = v60;\n
    *(v193) = *(v193) + 1;\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v51) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v51);\n
    v50 = v6;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v49, \"Str: \");\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v195 = v52;\n
    *(v195) = &(*(v195))[4 + cgc_strlen(v49)];\n
    v197 = v51;\n
    *(v197) = *(v197) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36[0]) = *(v39);\n
    memset(&v35, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v36[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v36[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v36[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v36[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v36[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v36[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v36[6] << 8))\n
                                v5 = v36[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v37) = v5 & 1;\n
    cgc_uint2str(&v35, 21, *(&v37));\n
    v4 = &v35;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v198 = v38;\n
    *(v198) = *(v198) - 8;\n
    v199 = v39;\n
    *(v199) = *(v199) + 8;\n
    v88 = a0;\n
    v87 = a1;\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    v200 = v87;\n
    *(v200) = *(v200) - 2;\n
    v201 = v88;\n
    *(v201) = *(v201) + 2;\n
    if (v86 <= *(v87) && !(!v86))\n
        goto LABEL_40b08f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40b08f:\n
    v85 = cgc_calloc(v86);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v85, *(v88), v86);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v202 = v87;\n
    *(v202) = *(v202) - v86;\n
    v203 = v88;\n
    *(v203) = &(*(v203))[v86];\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v70) = *(&*(v72));\n
    cgc_uint2str(&v69, 21, *(&v70));\n
    v3 = &v69;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v204 = v71;\n
    *(v204) = *(v204) - 8;\n
    v205 = v72;\n
    *(v205) = *(v205) + 8;\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v47) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v47);\n
    v46 = v2;\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = cgc_calloc(134);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v45, \"Str: \");\n
    cgc_strncpy(v45 + 5, *(v48), v46);\n
    v207 = v48;\n
    *(v207) = &(*(v207))[4 + cgc_strlen(v45)];\n
    v209 = v47;\n
    *(v209) = *(v209) - (cgc_strlen(v45) + -4);\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v29 = a0;\n
    v28 = a1;\n
    v26 = &*(v29)->field_0;\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((*(v26) << 8))\n
        v1 = v26[1];\n
    v27 = v1 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v0 = &v25;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v210 = v28;\n
    *(v210) = *(v210) - 2;\n
    v211 = v29;\n
    *(v211) = *(v211) + 2;\n
    v104 = a0;\n
    v103 = a1;\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    v212 = v103;\n
    *(v212) = *(v212) - 2;\n
    v213 = v104;\n
    *(v213) = *(v213) + 2;\n
    if (v102 <= *(v103) && !(!v102))\n
        goto LABEL_40b6a4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40b6a4:\n
    v101 = cgc_calloc(v102);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v101, *(v104), v102);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v214 = v103;\n
    *(v214) = *(v214) - v102;\n
    v215 = v104;\n
    *(v215) = &(*(v215))[v102];\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    v23 ^= cgc__cookie;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v216 = a1;\n
    if (*(a1) > 0 && v22 >= 0)\n
    {\n
        v216 = v22;\n
        if (v216 < 0)\n
            v216 = *(&(&v24)[8 * v22])(a0, a1);\n
    }\n
    return v216;\n
}\n
", "4241406:sub_40b7fe": null, "4241408:cgc_process_llamapunaise": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamapunaise(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x3d8]\n
    char v1;  // [bp-0x3c9]\n
    struct_0 *v2;  // [bp-0x3c8]\n
    char v3;  // [bp-0x3b9]\n
    struct_0 *v4;  // [bp-0x3b8]\n
    struct_0 *v5;  // [bp-0x3b0]\n
    char v6;  // [bp-0x3a1]\n
    struct_0 *v7;  // [bp-0x3a0]\n
    struct_0 *v8;  // [bp-0x398]\n
    struct_0 *v9;  // [bp-0x390]\n
    struct_0 *v10;  // [bp-0x388]\n
    struct_0 *v11;  // [bp-0x380]\n
    char v12;  // [bp-0x371]\n
    struct_0 *v13;  // [bp-0x370]\n
    struct_0 *v14;  // [bp-0x368]\n
    struct_0 *v15;  // [bp-0x360]\n
    struct_0 *v16;  // [bp-0x358]\n
    char v17;  // [bp-0x349]\n
    struct_0 *v18;  // [bp-0x348]\n
    unsigned int v19;  // [bp-0x340]\n
    unsigned int v20;  // [bp-0x33c]\n
    char v21;  // [bp-0x338]\n
    char v22;  // [bp-0x31e]\n
    char v23[2];  // [bp-0x318]\n
    unsigned short v24;  // [bp-0x30a]\n
    unsigned int *v25;  // [bp-0x308]\n
    struct struct_1 **v26;  // [bp-0x300]\n
    char v27;  // [bp-0x2f8]\n
    char v28[8];  // [bp-0x2d8]\n
    unsigned int v29;  // [bp-0x2d0]\n
    unsigned int *v30;  // [bp-0x2c8]\n
    struct struct_1 **v31;  // [bp-0x2c0]\n
    unsigned long v32;  // [bp-0x2b8]\n
    char v33;  // [bp-0x2a9]\n
    unsigned int *v34;  // [bp-0x2a8]\n
    struct struct_1 **v35;  // [bp-0x2a0]\n
    unsigned long v36;  // [bp-0x298]\n
    char v37;  // [bp-0x289]\n
    unsigned int *v38;  // [bp-0x288]\n
    struct struct_1 **v39;  // [bp-0x280]\n
    unsigned long v40;  // [bp-0x278]\n
    char v41;  // [bp-0x269]\n
    unsigned int *v42;  // [bp-0x268]\n
    struct struct_1 **v43;  // [bp-0x260]\n
    char v44;  // [bp-0x258]\n
    unsigned short v45;  // [bp-0x252]\n
    unsigned int *v46;  // [bp-0x250]\n
    struct struct_1 **v47;  // [bp-0x248]\n
    char v48;  // [bp-0x23d]\n
    char v49;  // [bp-0x239]\n
    unsigned int *v50;  // [bp-0x238]\n
    struct struct_1 **v51;  // [bp-0x230]\n
    char v52;  // [bp-0x225]\n
    char v53;  // [bp-0x221]\n
    unsigned int *v54;  // [bp-0x220]\n
    struct struct_1 **v55;  // [bp-0x218]\n
    char v56;  // [bp-0x20d]\n
    char v57;  // [bp-0x209]\n
    unsigned int *v58;  // [bp-0x208]\n
    struct struct_1 **v59;  // [bp-0x200]\n
    char v60;  // [bp-0x1f8]\n
    unsigned int v61;  // [bp-0x1ec]\n
    unsigned int *v62;  // [bp-0x1e8]\n
    struct struct_1 **v63;  // [bp-0x1e0]\n
    char v64;  // [bp-0x1d8]\n
    unsigned int v65;  // [bp-0x1cc]\n
    unsigned int *v66;  // [bp-0x1c8]\n
    struct struct_1 **v67;  // [bp-0x1c0]\n
    char v68;  // [bp-0x1b8]\n
    unsigned int v69;  // [bp-0x1ac]\n
    unsigned int *v70;  // [bp-0x1a8]\n
    struct struct_1 **v71;  // [bp-0x1a0]\n
    unsigned long v72;  // [bp-0x198]\n
    unsigned short v73;  // [bp-0x18a]\n
    unsigned int *v74;  // [bp-0x188]\n
    struct struct_1 **v75;  // [bp-0x180]\n
    unsigned long v76;  // [bp-0x178]\n
    unsigned short v77;  // [bp-0x16a]\n
    unsigned int *v78;  // [bp-0x168]\n
    struct struct_1 **v79;  // [bp-0x160]\n
    unsigned long v80;  // [bp-0x158]\n
    unsigned short v81;  // [bp-0x14a]\n
    unsigned int *v82;  // [bp-0x148]\n
    struct struct_1 **v83;  // [bp-0x140]\n
    char v84;  // [bp-0x134]\n
    char v85[4];  // [bp-0x128]\n
    unsigned int v86;  // [bp-0x11c]\n
    unsigned int *v87;  // [bp-0x118]\n
    struct struct_1 **v88;  // [bp-0x110]\n
    char v89;  // [bp-0x104]\n
    char *v90;  // [bp-0xf8]\n
    unsigned int v91;  // [bp-0xec]\n
    unsigned int *v92;  // [bp-0xe8]\n
    struct struct_1 **v93;  // [bp-0xe0]\n
    char v94;  // [bp-0xd4]\n
    char v95[4];  // [bp-0xc8]\n
    unsigned int v96;  // [bp-0xbc]\n
    unsigned int *v97;  // [bp-0xb8]\n
    struct struct_1 **v98;  // [bp-0xb0]\n
    char v99;  // [bp-0xa8]\n
    unsigned int v100;  // [bp-0x90]\n
    unsigned int *v101;  // [bp-0x88]\n
    struct struct_1 **v102;  // [bp-0x80]\n
    char v103;  // [bp-0x78]\n
    unsigned int v104;  // [bp-0x60]\n
    unsigned int *v105;  // [bp-0x58]\n
    struct struct_1 **v106;  // [bp-0x50]\n
    unsigned long v107;  // [bp-0x48]\n
    char v108;  // [bp-0x39]\n
    unsigned int *v109;  // [bp-0x38]\n
    struct struct_1 **v110;  // [bp-0x30]\n
    unsigned long v111;  // [bp-0x28]\n
    char v112;  // [bp-0x19]\n
    unsigned int *v113;  // [bp-0x18]\n
    struct struct_1 **v114;  // [bp-0x10]\n
    unsigned int *v116;  // rax\n
    struct struct_1 **v117;  // rax\n
    unsigned int *v118;  // rax\n
    struct struct_1 **v119;  // rax\n
    unsigned int *v120;  // rax\n
    struct struct_1 **v121;  // rax\n
    struct struct_1 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    unsigned int *v124;  // rax\n
    struct struct_1 **v125;  // rax\n
    struct struct_1 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    unsigned int *v128;  // rax\n
    struct struct_1 **v129;  // rax\n
    unsigned int *v130;  // rax\n
    struct struct_1 **v131;  // rax\n
    unsigned int *v132;  // rax\n
    struct struct_1 **v133;  // rax\n
    unsigned int *v134;  // rax\n
    struct struct_1 **v135;  // rax\n
    unsigned int *v136;  // rax\n
    struct struct_1 **v137;  // rax\n
    unsigned int *v138;  // rax\n
    struct struct_1 **v139;  // rax\n
    unsigned int *v140;  // rax\n
    struct struct_1 **v141;  // rax\n
    unsigned int *v142;  // rax\n
    struct struct_1 **v143;  // rax\n
    struct struct_1 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    unsigned int *v146;  // rax\n
    struct struct_1 **v147;  // rax\n
    unsigned int *v148;  // rax\n
    struct struct_1 **v149;  // rax\n
    unsigned int *v150;  // rax\n
    struct struct_1 **v151;  // rax\n
    struct struct_1 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    unsigned int *v154;  // rax\n
    struct struct_1 **v155;  // rax\n
    unsigned int *v156;  // rax\n
    struct struct_1 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    struct struct_1 **v159;  // rax\n
    unsigned int *v160;  // rax\n
    struct struct_1 **v161;  // rax\n
    struct struct_1 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    unsigned int *v164;  // rax\n
    struct struct_1 **v165;  // rax\n
    unsigned int *v166;  // rax\n
    struct struct_1 **v167;  // rax\n
    unsigned int *v168;  // rax\n
    struct struct_1 **v169;  // rax\n
    unsigned int *v170;  // rax\n
    struct struct_1 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_1 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_1 **v175;  // rax\n
    unsigned int *v176;  // rax, Other Possible Types: unsigned long\n
\n
    v20 = cgc__cookie;\n
    v19 = -1;\n
    if (cgc_sendline(1, \"===llamapunaise===\", 18) < 0)\n
        cgc__terminate(1);\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = *(&*(v83));\n
    v116 = v82;\n
    *(v116) = *(v116) - 2;\n
    v117 = v83;\n
    *(v117) = *(v117) + 2;\n
    if (v81 <= *(v82) && !(!v81))\n
        goto LABEL_40b94c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40b94c:\n
    v80 = cgc_calloc(v81);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v80, *(v83), v81);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v118 = v82;\n
    *(v118) = *(v118) - v81;\n
    v119 = v83;\n
    *(v119) = &(*(v119))[v81];\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    v114 = a0;\n
    v113 = a1;\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(v114)->field_0;\n
    v120 = v113;\n
    *(v120) = *(v120) - 1;\n
    v121 = v114;\n
    *(v121) = *(v121) + 1;\n
    if (v112 <= *(v113) && !(!v112))\n
        goto LABEL_40bafc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40bafc:\n
    v111 = cgc_calloc(v112);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v111, *(v114), v112);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v122 = v114;\n
    *(v122) = &(*(v122))[v112];\n
    v123 = v113;\n
    *(v123) = *(v123) - v112;\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    v110 = a0;\n
    v109 = a1;\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = *(v110)->field_0;\n
    v124 = v109;\n
    *(v124) = *(v124) - 1;\n
    v125 = v110;\n
    *(v125) = *(v125) + 1;\n
    if (v108 <= *(v109) && !(!v108))\n
        goto LABEL_40bc8b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40bc8b:\n
    v107 = cgc_calloc(v108);\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v107, *(v110), v108);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v126 = v110;\n
    *(v126) = &(*(v126))[v108];\n
    v127 = v109;\n
    *(v127) = *(v127) - v108;\n
    cgc_checkheap();\n
    cgc_free(v107);\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(&*(v71));\n
    cgc_uint2str(&v68, 12, v69);\n
    v18 = &v68;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v128 = v70;\n
    *(v128) = *(v128) - 4;\n
    v129 = v71;\n
    *(v129) = *(v129) + 4;\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (v28[0] << 56)\n
    {\n
        v17 = 0;\n
        if (v28[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v28[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v28[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v28[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v28[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v28[6] << 8))\n
                                v17 = v28[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v29) = v17 & 1;\n
    cgc_uint2str(&v27, 21, *(&v29));\n
    v16 = &v27;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v130 = v30;\n
    *(v130) = *(v130) - 8;\n
    v131 = v31;\n
    *(v131) = *(v131) + 8;\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(&*(v79));\n
    v132 = v78;\n
    *(v132) = *(v132) - 2;\n
    v133 = v79;\n
    *(v133) = *(v133) + 2;\n
    if (v77 <= *(v78) && !(!v77))\n
        goto LABEL_40c15a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40c15a:\n
    v76 = cgc_calloc(v77);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v76, *(v79), v77);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v134 = v78;\n
    *(v134) = *(v134) - v77;\n
    v135 = v79;\n
    *(v135) = &(*(v135))[v77];\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    v75 = a0;\n
    v74 = a1;\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(&*(v75));\n
    v136 = v74;\n
    *(v136) = *(v136) - 2;\n
    v137 = v75;\n
    *(v137) = *(v137) + 2;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_40c32a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40c32a:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v138 = v74;\n
    *(v138) = *(v138) - v73;\n
    v139 = v75;\n
    *(v139) = &(*(v139))[v73];\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v47 = a0;\n
    v46 = a1;\n
    memset(&v44, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47));\n
    cgc_uint2str(&v44, 6, v45);\n
    v15 = &v44;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v140 = v46;\n
    *(v140) = *(v140) - 2;\n
    v141 = v47;\n
    *(v141) = *(v141) + 2;\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(v43)->field_0;\n
    v142 = v42;\n
    *(v142) = *(v142) - 1;\n
    v143 = v43;\n
    *(v143) = *(v143) + 1;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_40c5fc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40c5fc:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v144 = v43;\n
    *(v144) = &(*(v144))[v41];\n
    v145 = v42;\n
    *(v145) = *(v145) - v41;\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 21);\n
    if (*(v105) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v104) = *(&*(v106));\n
    cgc_uint2str(&v103, 21, *(&v104));\n
    v14 = &v103;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v146 = v105;\n
    *(v146) = *(v146) - 8;\n
    v147 = v106;\n
    *(v147) = *(v147) + 8;\n
    v67 = a0;\n
    v66 = a1;\n
    memset(&v64, 0, 12);\n
    if (*(v66) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(&*(v67));\n
    cgc_uint2str(&v64, 12, v65);\n
    v13 = &v64;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v148 = v66;\n
    *(v148) = *(v148) - 4;\n
    v149 = v67;\n
    *(v149) = *(v149) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(v39)->field_0;\n
    v150 = v38;\n
    *(v150) = *(v150) - 1;\n
    v151 = v39;\n
    *(v151) = *(v151) + 1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_40c9b6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40c9b6:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v152 = v39;\n
    *(v152) = &(*(v152))[v37];\n
    v153 = v38;\n
    *(v153) = *(v153) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v98 = a0;\n
    v97 = a1;\n
    *(&v95) = *(v98);\n
    memset(&v94, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v95[0] << 24))\n
    {\n
        v12 = 0;\n
        if ((v95[1] << 16))\n
        {\n
            v12 = 0;\n
            if ((v95[2] << 8))\n
                v12 = v95[3];\n
        }\n
    }\n
    v96 = v12 & 1;\n
    cgc_uint2str(&v94, 12, v96);\n
    v11 = &v94;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v154 = v97;\n
    *(v154) = *(v154) - 4;\n
    v155 = v98;\n
    *(v155) = *(v155) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 4);\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(v59)->field_0;\n
    cgc_uint2str(&v56, 4, v57);\n
    v10 = &v56;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v156 = v58;\n
    *(v156) = *(v156) - 1;\n
    v157 = v59;\n
    *(v157) = *(v157) + 1;\n
    v55 = a0;\n
    v54 = a1;\n
    memset(&v52, 0, 4);\n
    if (*(v54) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = *(v55)->field_0;\n
    cgc_uint2str(&v52, 4, v53);\n
    v9 = &v52;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v158 = v54;\n
    *(v158) = *(v158) - 1;\n
    v159 = v55;\n
    *(v159) = *(v159) + 1;\n
    v35 = a0;\n
    v34 = a1;\n
    if (*(v34) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(v35)->field_0;\n
    v160 = v34;\n
    *(v160) = *(v160) - 1;\n
    v161 = v35;\n
    *(v161) = *(v161) + 1;\n
    if (v33 <= *(v34) && !(!v33))\n
        goto LABEL_40cf0c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40cf0c:\n
    v32 = cgc_calloc(v33);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v32, *(v35), v33);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v162 = v35;\n
    *(v162) = &(*(v162))[v33];\n
    v163 = v34;\n
    *(v163) = *(v163) - v33;\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v100) = *(&*(v102));\n
    cgc_uint2str(&v99, 21, *(&v100));\n
    v8 = &v99;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v164 = v101;\n
    *(v164) = *(v164) - 8;\n
    v165 = v102;\n
    *(v165) = *(v165) + 8;\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 12);\n
    if (*(v62) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(&*(v63));\n
    cgc_uint2str(&v60, 12, v61);\n
    v7 = &v60;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v166 = v62;\n
    *(v166) = *(v166) - 4;\n
    v167 = v63;\n
    *(v167) = *(v167) + 4;\n
    v93 = a0;\n
    v92 = a1;\n
    v90 = &*(v93)->field_0;\n
    memset(&v89, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((*(v90) << 24))\n
    {\n
        v6 = 0;\n
        if ((v90[1] << 16))\n
        {\n
            v6 = 0;\n
            if ((v90[2] << 8))\n
                v6 = v90[3];\n
        }\n
    }\n
    v91 = v6 & 1;\n
    cgc_uint2str(&v89, 12, v91);\n
    v5 = &v89;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v168 = v92;\n
    *(v168) = *(v168) - 4;\n
    v169 = v93;\n
    *(v169) = *(v169) + 4;\n
    v51 = a0;\n
    v50 = a1;\n
    memset(&v48, 0, 4);\n
    if (*(v50) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(v51)->field_0;\n
    cgc_uint2str(&v48, 4, v49);\n
    v4 = &v48;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v170 = v50;\n
    *(v170) = *(v170) - 1;\n
    v171 = v51;\n
    *(v171) = *(v171) + 1;\n
    v88 = a0;\n
    v87 = a1;\n
    *(&v85) = *(v88);\n
    memset(&v84, 0, 12);\n
    if (*(v87) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v85[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v85[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v85[2] << 8))\n
                v3 = v85[3];\n
        }\n
    }\n
    v86 = v3 & 1;\n
    cgc_uint2str(&v84, 12, v86);\n
    v2 = &v84;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v172 = v87;\n
    *(v172) = *(v172) - 4;\n
    v173 = v88;\n
    *(v173) = *(v173) + 4;\n
    v26 = a0;\n
    v25 = a1;\n
    *(&v23) = *(v26);\n
    memset(&v22, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v23[0] << 8))\n
        v1 = v23[1];\n
    v24 = v1 & 1;\n
    cgc_uint2str(&v22, 6, v24);\n
    v0 = &v22;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v174 = v25;\n
    *(v174) = *(v174) - 2;\n
    v175 = v26;\n
    *(v175) = *(v175) + 2;\n
    v20 ^= cgc__cookie;\n
    if (v20)\n
        cgc___stack_cookie_fail();\n
    v176 = a1;\n
    if (*(a1) > 0 && v19 >= 0)\n
    {\n
        v176 = v19;\n
        if (v176 < 0)\n
            v176 = *(&(&v21)[8 * v19])(a0, a1);\n
    }\n
    return v176;\n
}\n
", "4249517:sub_40d7ad": null, "4249520:cgc_process_llamafucate": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamafucate(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x550]\n
    struct_1 *v1;  // [bp-0x548]\n
    unsigned int v2;  // [bp-0x53c]\n
    unsigned int v3;  // [bp-0x538]\n
    unsigned int v4;  // [bp-0x534]\n
    struct_1 *v5;  // [bp-0x530]\n
    struct_1 *v6;  // [bp-0x528]\n
    struct_1 *v7;  // [bp-0x520]\n
    char v8;  // [bp-0x511]\n
    struct_1 *v9;  // [bp-0x510]\n
    char v10;  // [bp-0x501]\n
    struct_1 *v11;  // [bp-0x500]\n
    char v12;  // [bp-0x4f1]\n
    struct_1 *v13;  // [bp-0x4f0]\n
    struct_1 *v14;  // [bp-0x4e8]\n
    struct_1 *v15;  // [bp-0x4e0]\n
    struct_1 *v16;  // [bp-0x4d8]\n
    char v17;  // [bp-0x4c9]\n
    struct_1 *v18;  // [bp-0x4c8]\n
    struct_1 *v19;  // [bp-0x4c0]\n
    struct_1 *v20;  // [bp-0x4b8]\n
    char v21;  // [bp-0x4a9]\n
    struct_1 *v22;  // [bp-0x4a8]\n
    struct_1 *v23;  // [bp-0x4a0]\n
    struct_1 *v24;  // [bp-0x498]\n
    char v25;  // [bp-0x489]\n
    struct_1 *v26;  // [bp-0x488]\n
    char v27;  // [bp-0x479]\n
    struct_1 *v28;  // [bp-0x478]\n
    struct_1 *v29;  // [bp-0x470]\n
    char v30;  // [bp-0x461]\n
    struct_1 *v31;  // [bp-0x460]\n
    unsigned int v32;  // [bp-0x458]\n
    unsigned int v33;  // [bp-0x454]\n
    char v34;  // [bp-0x450]\n
    char v35;  // [bp-0x436]\n
    char *v36;  // [bp-0x430]\n
    unsigned short v37;  // [bp-0x422]\n
    unsigned int *v38;  // [bp-0x420]\n
    struct struct_0 **v39;  // [bp-0x418]\n
    char v40;  // [bp-0x40e]\n
    char v41[2];  // [bp-0x408]\n
    unsigned short v42;  // [bp-0x3fa]\n
    unsigned int *v43;  // [bp-0x3f8]\n
    struct struct_0 **v44;  // [bp-0x3f0]\n
    char v45;  // [bp-0x3e6]\n
    char *v46;  // [bp-0x3e0]\n
    unsigned short v47;  // [bp-0x3d2]\n
    unsigned int *v48;  // [bp-0x3d0]\n
    struct struct_0 **v49;  // [bp-0x3c8]\n
    char v50;  // [bp-0x3be]\n
    char v51[2];  // [bp-0x3b8]\n
    unsigned short v52;  // [bp-0x3aa]\n
    unsigned int *v53;  // [bp-0x3a8]\n
    struct struct_0 **v54;  // [bp-0x3a0]\n
    char v55;  // [bp-0x396]\n
    char v56[2];  // [bp-0x390]\n
    unsigned short v57;  // [bp-0x382]\n
    unsigned int *v58;  // [bp-0x380]\n
    struct struct_0 **v59;  // [bp-0x378]\n
    char v60;  // [bp-0x36e]\n
    char v61[2];  // [bp-0x368]\n
    unsigned short v62;  // [bp-0x35a]\n
    unsigned int *v63;  // [bp-0x358]\n
    struct struct_0 **v64;  // [bp-0x350]\n
    char v65;  // [bp-0x348]\n
    char v66[8];  // [bp-0x328]\n
    unsigned int v67;  // [bp-0x320]\n
    unsigned int *v68;  // [bp-0x318]\n
    struct struct_0 **v69;  // [bp-0x310]\n
    char *v70;  // [bp-0x308]\n
    unsigned int v71;  // [bp-0x2fc]\n
    unsigned int *v72;  // [bp-0x2f8]\n
    struct struct_0 **v73;  // [bp-0x2f0]\n
    char v74;  // [bp-0x2e8]\n
    unsigned short v75;  // [bp-0x2e2]\n
    unsigned int *v76;  // [bp-0x2e0]\n
    struct struct_0 **v77;  // [bp-0x2d8]\n
    char v78;  // [bp-0x2cd]\n
    char v79;  // [bp-0x2c9]\n
    unsigned int *v80;  // [bp-0x2c8]\n
    struct struct_0 **v81;  // [bp-0x2c0]\n
    char v82;  // [bp-0x2b5]\n
    char v83;  // [bp-0x2b1]\n
    unsigned int *v84;  // [bp-0x2b0]\n
    struct struct_0 **v85;  // [bp-0x2a8]\n
    char v86;  // [bp-0x29d]\n
    char v87;  // [bp-0x299]\n
    unsigned int *v88;  // [bp-0x298]\n
    struct struct_0 **v89;  // [bp-0x290]\n
    char v90;  // [bp-0x288]\n
    unsigned int v91;  // [bp-0x270]\n
    unsigned int *v92;  // [bp-0x268]\n
    struct struct_0 **v93;  // [bp-0x260]\n
    char v94;  // [bp-0x258]\n
    unsigned int v95;  // [bp-0x240]\n
    unsigned int *v96;  // [bp-0x238]\n
    struct struct_0 **v97;  // [bp-0x230]\n
    char v98;  // [bp-0x228]\n
    unsigned int v99;  // [bp-0x21c]\n
    unsigned int *v100;  // [bp-0x218]\n
    struct struct_0 **v101;  // [bp-0x210]\n
    char v102;  // [bp-0x208]\n
    unsigned int v103;  // [bp-0x1fc]\n
    unsigned int *v104;  // [bp-0x1f8]\n
    struct struct_0 **v105;  // [bp-0x1f0]\n
    char v106;  // [bp-0x1e8]\n
    unsigned int v107;  // [bp-0x1dc]\n
    unsigned int *v108;  // [bp-0x1d8]\n
    struct struct_0 **v109;  // [bp-0x1d0]\n
    char v110;  // [bp-0x1c8]\n
    unsigned int v111;  // [bp-0x1bc]\n
    unsigned int *v112;  // [bp-0x1b8]\n
    struct struct_0 **v113;  // [bp-0x1b0]\n
    unsigned long v114;  // [bp-0x1a8]\n
    unsigned short v115;  // [bp-0x19a]\n
    unsigned int *v116;  // [bp-0x198]\n
    struct struct_0 **v117;  // [bp-0x190]\n
    unsigned long v118;  // [bp-0x188]\n
    unsigned short v119;  // [bp-0x17a]\n
    unsigned int *v120;  // [bp-0x178]\n
    struct struct_0 **v121;  // [bp-0x170]\n
    unsigned long v122;  // [bp-0x168]\n
    unsigned short v123;  // [bp-0x15a]\n
    unsigned int *v124;  // [bp-0x158]\n
    struct struct_0 **v125;  // [bp-0x150]\n
    unsigned long v126;  // [bp-0x148]\n
    unsigned short v127;  // [bp-0x13a]\n
    unsigned int *v128;  // [bp-0x138]\n
    struct struct_0 **v129;  // [bp-0x130]\n
    char v130;  // [bp-0x124]\n
    char v131[4];  // [bp-0x118]\n
    unsigned int v132;  // [bp-0x10c]\n
    unsigned int *v133;  // [bp-0x108]\n
    struct struct_0 **v134;  // [bp-0x100]\n
    char *v135;  // [bp-0xf8]\n
    unsigned int v136;  // [bp-0xec]\n
    unsigned int *v137;  // [bp-0xe8]\n
    struct struct_0 **v138;  // [bp-0xe0]\n
    char *v139;  // [bp-0xd8]\n
    unsigned int v140;  // [bp-0xcc]\n
    unsigned int *v141;  // [bp-0xc8]\n
    struct struct_0 **v142;  // [bp-0xc0]\n
    char v143;  // [bp-0xb8]\n
    unsigned int v144;  // [bp-0xa0]\n
    unsigned int *v145;  // [bp-0x98]\n
    struct struct_0 **v146;  // [bp-0x90]\n
    char v147;  // [bp-0x88]\n
    unsigned int v148;  // [bp-0x70]\n
    unsigned int *v149;  // [bp-0x68]\n
    struct struct_0 **v150;  // [bp-0x60]\n
    char v151;  // [bp-0x58]\n
    unsigned int v152;  // [bp-0x40]\n
    unsigned int *v153;  // [bp-0x38]\n
    struct struct_0 **v154;  // [bp-0x30]\n
    unsigned long v155;  // [bp-0x28]\n
    char v156;  // [bp-0x19]\n
    unsigned int *v157;  // [bp-0x18]\n
    struct struct_0 **v158;  // [bp-0x10]\n
    unsigned int *v160;  // rax\n
    struct struct_0 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    struct struct_0 **v163;  // rax\n
    unsigned int *v164;  // rax\n
    struct struct_0 **v165;  // rax\n
    unsigned int *v166;  // rax\n
    struct struct_0 **v167;  // rax\n
    unsigned int *v168;  // rax\n
    struct struct_0 **v169;  // rax\n
    unsigned int *v170;  // rax\n
    struct struct_0 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_0 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax, Other Possible Types: unsigned long\n
\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamafucate===\", 17) < 0)\n
        cgc__terminate(1);\n
    v77 = a0;\n
    v76 = a1;\n
    memset(&v74, 0, 6);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    cgc_uint2str(&v74, 6, v75);\n
    v31 = &v74;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v74)) < 0)\n
        cgc__terminate(1);\n
    v160 = v76;\n
    *(v160) = *(v160) - 2;\n
    v161 = v77;\n
    *(v161) = *(v161) + 2;\n
    v134 = a0;\n
    v133 = a1;\n
    *(&v131) = *(v134);\n
    memset(&v130, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if ((v131[0] << 24))\n
    {\n
        v30 = 0;\n
        if ((v131[1] << 16))\n
        {\n
            v30 = 0;\n
            if ((v131[2] << 8))\n
                v30 = v131[3];\n
        }\n
    }\n
    v132 = v30 & 1;\n
    cgc_uint2str(&v130, 12, v132);\n
    v29 = &v130;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v130)) < 0)\n
        cgc__terminate(1);\n
    v162 = v133;\n
    *(v162) = *(v162) - 4;\n
    v163 = v134;\n
    *(v163) = *(v163) + 4;\n
    v154 = a0;\n
    v153 = a1;\n
    memset(&v151, 0, 21);\n
    if (*(v153) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v152) = *(&*(v154));\n
    cgc_uint2str(&v151, 21, *(&v152));\n
    v28 = &v151;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v151)) < 0)\n
        cgc__terminate(1);\n
    v164 = v153;\n
    *(v164) = *(v164) - 8;\n
    v165 = v154;\n
    *(v165) = *(v165) + 8;\n
    v125 = a0;\n
    v124 = a1;\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    v166 = v124;\n
    *(v166) = *(v166) - 2;\n
    v167 = v125;\n
    *(v167) = *(v167) + 2;\n
    if (v123 <= *(v124) && !(!v123))\n
        goto LABEL_40dc66;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40dc66:\n
    v122 = cgc_calloc(v123);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v122, *(v125), v123);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v168 = v124;\n
    *(v168) = *(v168) - v123;\n
    v169 = v125;\n
    *(v169) = &(*(v169))[v123];\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    v64 = a0;\n
    v63 = a1;\n
    *(&v61) = *(v64);\n
    memset(&v60, 0, 6);\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v61[0] << 8))\n
        v27 = v61[1];\n
    v62 = v27 & 1;\n
    cgc_uint2str(&v60, 6, v62);\n
    v26 = &v60;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v170 = v63;\n
    *(v170) = *(v170) - 2;\n
    v171 = v64;\n
    *(v171) = *(v171) + 2;\n
    v59 = a0;\n
    v58 = a1;\n
    *(&v56) = *(v59);\n
    memset(&v55, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if ((v56[0] << 8))\n
        v25 = v56[1];\n
    v57 = v25 & 1;\n
    cgc_uint2str(&v55, 6, v57);\n
    v24 = &v55;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v172 = v58;\n
    *(v172) = *(v172) - 2;\n
    v173 = v59;\n
    *(v173) = *(v173) + 2;\n
    v121 = a0;\n
    v120 = a1;\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    v174 = v120;\n
    *(v174) = *(v174) - 2;\n
    v175 = v121;\n
    *(v175) = *(v175) + 2;\n
    if (v119 <= *(v120) && !(!v119))\n
        goto LABEL_40e0c6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40e0c6:\n
    v118 = cgc_calloc(v119);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v118, *(v121), v119);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v176 = v120;\n
    *(v176) = *(v176) - v119;\n
    v177 = v121;\n
    *(v177) = &(*(v177))[v119];\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    v150 = a0;\n
    v149 = a1;\n
    memset(&v147, 0, 21);\n
    if (*(v149) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v148) = *(&*(v150));\n
    cgc_uint2str(&v147, 21, *(&v148));\n
    v23 = &v147;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v147)) < 0)\n
        cgc__terminate(1);\n
    v178 = v149;\n
    *(v178) = *(v178) - 8;\n
    v179 = v150;\n
    *(v179) = *(v179) + 8;\n
    v146 = a0;\n
    v145 = a1;\n
    memset(&v143, 0, 21);\n
    if (*(v145) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v144) = *(&*(v146));\n
    cgc_uint2str(&v143, 21, *(&v144));\n
    v22 = &v143;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v180 = v145;\n
    *(v180) = *(v180) - 8;\n
    v181 = v146;\n
    *(v181) = *(v181) + 8;\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51) = *(v54);\n
    memset(&v50, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if ((v51[0] << 8))\n
        v21 = v51[1];\n
    v52 = v21 & 1;\n
    cgc_uint2str(&v50, 6, v52);\n
    v20 = &v50;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v182 = v53;\n
    *(v182) = *(v182) - 2;\n
    v183 = v54;\n
    *(v183) = *(v183) + 2;\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 4);\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(v89)->field_0;\n
    cgc_uint2str(&v86, 4, v87);\n
    v19 = &v86;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v184 = v88;\n
    *(v184) = *(v184) - 1;\n
    v185 = v89;\n
    *(v185) = *(v185) + 1;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(&*(v113));\n
    cgc_uint2str(&v110, 12, v111);\n
    v18 = &v110;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v186 = v112;\n
    *(v186) = *(v186) - 4;\n
    v187 = v113;\n
    *(v187) = *(v187) + 4;\n
    v49 = a0;\n
    v48 = a1;\n
    v46 = &*(v49)->field_0;\n
    memset(&v45, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((*(v46) << 8))\n
        v17 = v46[1];\n
    v47 = v17 & 1;\n
    cgc_uint2str(&v45, 6, v47);\n
    v16 = &v45;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v188 = v48;\n
    *(v188) = *(v188) - 2;\n
    v189 = v49;\n
    *(v189) = *(v189) + 2;\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 4);\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(v85)->field_0;\n
    cgc_uint2str(&v82, 4, v83);\n
    v15 = &v82;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v190 = v84;\n
    *(v190) = *(v190) - 1;\n
    v191 = v85;\n
    *(v191) = *(v191) + 1;\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 12);\n
    if (*(v108) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(&*(v109));\n
    cgc_uint2str(&v106, 12, v107);\n
    v14 = &v106;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v192 = v108;\n
    *(v192) = *(v192) - 4;\n
    v193 = v109;\n
    *(v193) = *(v193) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 4);\n
    if (*(v80) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(v81)->field_0;\n
    cgc_uint2str(&v78, 4, v79);\n
    v13 = &v78;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v194 = v80;\n
    *(v194) = *(v194) - 1;\n
    v195 = v81;\n
    *(v195) = *(v195) + 1;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v41[0] << 8))\n
        v12 = v41[1];\n
    v42 = v12 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v11 = &v40;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v196 = v43;\n
    *(v196) = *(v196) - 2;\n
    v197 = v44;\n
    *(v197) = *(v197) + 2;\n
    v39 = a0;\n
    v38 = a1;\n
    v36 = &*(v39)->field_0;\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((*(v36) << 8))\n
        v10 = v36[1];\n
    v37 = v10 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v9 = &v35;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v198 = v38;\n
    *(v198) = *(v198) - 2;\n
    v199 = v39;\n
    *(v199) = *(v199) + 2;\n
    v69 = a0;\n
    v68 = a1;\n
    *(&v66[0]) = *(v69);\n
    memset(&v65, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if (v66[0] << 56)\n
    {\n
        v8 = 0;\n
        if (v66[1] << 48)\n
        {\n
            v8 = 0;\n
            if (v66[2] << 40)\n
            {\n
                v8 = 0;\n
                if (v66[3] << 32)\n
                {\n
                    v8 = 0;\n
                    if ((v66[4] << 24))\n
                    {\n
                        v8 = 0;\n
                        if ((v66[5] << 16))\n
                        {\n
                            v8 = 0;\n
                            if ((v66[6] << 8))\n
                                v8 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v67) = v8 & 1;\n
    cgc_uint2str(&v65, 21, *(&v67));\n
    v7 = &v65;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v200 = v68;\n
    *(v200) = *(v200) - 8;\n
    v201 = v69;\n
    *(v201) = *(v201) + 8;\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 21);\n
    if (*(v96) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v95) = *(&*(v97));\n
    cgc_uint2str(&v94, 21, *(&v95));\n
    v6 = &v94;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v202 = v96;\n
    *(v202) = *(v202) - 8;\n
    v203 = v97;\n
    *(v203) = *(v203) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 12, v103);\n
    v5 = &v102;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v204 = v104;\n
    *(v204) = *(v204) - 4;\n
    v205 = v105;\n
    *(v205) = *(v205) + 4;\n
    v142 = a0;\n
    v141 = a1;\n
    if (*(v141) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v141) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v141);\n
    v140 = v4;\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = cgc_calloc(134);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v139, \"Str: \");\n
    cgc_strncpy(v139 + 5, *(v142), v140);\n
    v207 = v142;\n
    *(v207) = &(*(v207))[4 + cgc_strlen(v139)];\n
    v209 = v141;\n
    *(v209) = *(v209) - (cgc_strlen(v139) + -4);\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v129 = a0;\n
    v128 = a1;\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    v210 = v128;\n
    *(v210) = *(v210) - 2;\n
    v211 = v129;\n
    *(v211) = *(v211) + 2;\n
    if (v127 <= *(v128) && !(!v127))\n
        goto LABEL_40f4d5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40f4d5:\n
    v126 = cgc_calloc(v127);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v126, *(v129), v127);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v212 = v128;\n
    *(v212) = *(v212) - v127;\n
    v213 = v129;\n
    *(v213) = &(*(v213))[v127];\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    v117 = a0;\n
    v116 = a1;\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(&*(v117));\n
    v214 = v116;\n
    *(v214) = *(v214) - 2;\n
    v215 = v117;\n
    *(v215) = *(v215) + 2;\n
    if (v115 <= *(v116) && !(!v115))\n
        goto LABEL_40f6a5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40f6a5:\n
    v114 = cgc_calloc(v115);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v114, *(v117), v115);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v216 = v116;\n
    *(v216) = *(v216) - v115;\n
    v217 = v117;\n
    *(v217) = &(*(v217))[v115];\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    v73 = a0;\n
    v72 = a1;\n
    if (*(v72) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v72) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v72);\n
    v71 = v3;\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = cgc_calloc(134);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v70, \"Str: \");\n
    cgc_strncpy(v70 + 5, *(v73), v71);\n
    v219 = v73;\n
    *(v219) = &(*(v219))[4 + cgc_strlen(v70)];\n
    v221 = v72;\n
    *(v221) = *(v221) - (cgc_strlen(v70) + -4);\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v138 = a0;\n
    v137 = a1;\n
    if (*(v137) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v137) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v137);\n
    v136 = v2;\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v135 = cgc_calloc(134);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v135, \"Str: \");\n
    cgc_strncpy(v135 + 5, *(v138), v136);\n
    v223 = v138;\n
    *(v223) = &(*(v223))[4 + cgc_strlen(v135)];\n
    v225 = v137;\n
    *(v225) = *(v225) - (cgc_strlen(v135) + -4);\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 12, v99);\n
    v1 = &v98;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v226 = v100;\n
    *(v226) = *(v226) - 4;\n
    v227 = v101;\n
    *(v227) = *(v227) + 4;\n
    v158 = a0;\n
    v157 = a1;\n
    if (*(v157) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = *(v158)->field_0;\n
    v228 = v157;\n
    *(v228) = *(v228) - 1;\n
    v229 = v158;\n
    *(v229) = *(v229) + 1;\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_40fd3c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_40fd3c:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v230 = v158;\n
    *(v230) = &(*(v230))[v156];\n
    v231 = v157;\n
    *(v231) = *(v231) - v156;\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 21);\n
    if (*(v92) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v91) = *(&*(v93));\n
    cgc_uint2str(&v90, 21, *(&v91));\n
    v0 = &v90;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v232 = v92;\n
    *(v232) = *(v232) - 8;\n
    v233 = v93;\n
    *(v233) = *(v233) + 8;\n
    v33 ^= cgc__cookie;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v234 = a1;\n
    if (*(a1) > 0 && v32 >= 0)\n
    {\n
        v234 = v32;\n
        if (v234 < 0)\n
            v234 = *(&(&v34)[8 * v32])(a0, a1);\n
    }\n
    return v234;\n
}\n
", "4259711:sub_40ff7f": null, "4259712:cgc_process_llamacyanohydrin": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacyanohydrin(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x240]\n
    struct_1 *v1;  // [bp-0x238]\n
    struct_1 *v2;  // [bp-0x230]\n
    char v3;  // [bp-0x221]\n
    struct_1 *v4;  // [bp-0x220]\n
    struct_1 *v5;  // [bp-0x218]\n
    char v6;  // [bp-0x20d]\n
    unsigned int v7;  // [bp-0x20c]\n
    struct_1 *v8;  // [bp-0x208]\n
    char v9;  // [bp-0x1f9]\n
    struct_1 *v10;  // [bp-0x1f8]\n
    char v11;  // [bp-0x1ed]\n
    unsigned int v12;  // [bp-0x1ec]\n
    struct_1 *v13;  // [bp-0x1e8]\n
    struct_1 *v14;  // [bp-0x1e0]\n
    unsigned int v15;  // [bp-0x1d8]\n
    unsigned int v16;  // [bp-0x1d4]\n
    char v17;  // [bp-0x1d0]\n
    char v18;  // [bp-0x1b6]\n
    char v19[2];  // [bp-0x1b0]\n
    unsigned short v20;  // [bp-0x1a2]\n
    unsigned int *v21;  // [bp-0x1a0]\n
    struct struct_0 **v22;  // [bp-0x198]\n
    char v23;  // [bp-0x18e]\n
    char v24[2];  // [bp-0x188]\n
    unsigned short v25;  // [bp-0x17a]\n
    unsigned int *v26;  // [bp-0x178]\n
    struct struct_0 **v27;  // [bp-0x170]\n
    unsigned long v28;  // [bp-0x168]\n
    char v29;  // [bp-0x159]\n
    unsigned int *v30;  // [bp-0x158]\n
    struct struct_0 **v31;  // [bp-0x150]\n
    char v32;  // [bp-0x148]\n
    unsigned short v33;  // [bp-0x142]\n
    unsigned int *v34;  // [bp-0x140]\n
    struct struct_0 **v35;  // [bp-0x138]\n
    char v36;  // [bp-0x12d]\n
    char v37;  // [bp-0x129]\n
    unsigned int *v38;  // [bp-0x128]\n
    struct struct_0 **v39;  // [bp-0x120]\n
    char v40;  // [bp-0x118]\n
    unsigned int v41;  // [bp-0x10c]\n
    unsigned int *v42;  // [bp-0x108]\n
    struct struct_0 **v43;  // [bp-0x100]\n
    char v44;  // [bp-0xf8]\n
    unsigned int v45;  // [bp-0xec]\n
    unsigned int *v46;  // [bp-0xe8]\n
    struct struct_0 **v47;  // [bp-0xe0]\n
    char v48;  // [bp-0xd4]\n
    char *v49;  // [bp-0xc8]\n
    unsigned int v50;  // [bp-0xbc]\n
    unsigned int *v51;  // [bp-0xb8]\n
    struct struct_0 **v52;  // [bp-0xb0]\n
    char v53;  // [bp-0xa4]\n
    char v54[4];  // [bp-0x98]\n
    unsigned int v55;  // [bp-0x8c]\n
    unsigned int *v56;  // [bp-0x88]\n
    struct struct_0 **v57;  // [bp-0x80]\n
    char *v58;  // [bp-0x78]\n
    unsigned int v59;  // [bp-0x6c]\n
    unsigned int *v60;  // [bp-0x68]\n
    struct struct_0 **v61;  // [bp-0x60]\n
    char *v62;  // [bp-0x58]\n
    unsigned int v63;  // [bp-0x4c]\n
    unsigned int *v64;  // [bp-0x48]\n
    struct struct_0 **v65;  // [bp-0x40]\n
    char v66;  // [bp-0x38]\n
    unsigned int v67;  // [bp-0x20]\n
    unsigned int *v68;  // [bp-0x18]\n
    struct struct_0 **v69;  // [bp-0x10]\n
    unsigned int *v71;  // rax\n
    struct struct_0 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    struct struct_0 **v74;  // rax\n
    struct struct_0 **v76;  // rax\n
    unsigned int *v78;  // rax\n
    unsigned int *v79;  // rax\n
    struct struct_0 **v80;  // rax\n
    unsigned int *v81;  // rax\n
    struct struct_0 **v82;  // rax\n
    struct struct_0 **v84;  // rax\n
    unsigned int *v86;  // rax\n
    unsigned int *v87;  // rax\n
    struct struct_0 **v88;  // rax\n
    unsigned int *v89;  // rax\n
    struct struct_0 **v90;  // rax\n
    unsigned int *v91;  // rax\n
    struct struct_0 **v92;  // rax\n
    unsigned int *v93;  // rax\n
    struct struct_0 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    struct struct_0 **v96;  // rax\n
    struct struct_0 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    unsigned int *v99;  // rax\n
    struct struct_0 **v100;  // rax\n
    unsigned int *v101;  // rax, Other Possible Types: unsigned long\n
\n
    v16 = cgc__cookie;\n
    v15 = -1;\n
    if (cgc_sendline(1, \"===llamacyanohydrin===\", 22) < 0)\n
        cgc__terminate(1);\n
    v35 = a0;\n
    v34 = a1;\n
    memset(&v32, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(&*(v35));\n
    cgc_uint2str(&v32, 6, v33);\n
    v14 = &v32;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v71 = v34;\n
    *(v71) = *(v71) - 2;\n
    v72 = v35;\n
    *(v72) = *(v72) + 2;\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v67) = *(&*(v69));\n
    cgc_uint2str(&v66, 21, *(&v67));\n
    v13 = &v66;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v73 = v68;\n
    *(v73) = *(v73) - 8;\n
    v74 = v69;\n
    *(v74) = *(v74) + 8;\n
    v65 = a0;\n
    v64 = a1;\n
    if (*(v64) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v64) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v64);\n
    v63 = v12;\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = cgc_calloc(134);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v62, \"Str: \");\n
    cgc_strncpy(v62 + 5, *(v65), v63);\n
    v76 = v65;\n
    *(v76) = &(*(v76))[4 + cgc_strlen(v62)];\n
    v78 = v64;\n
    *(v78) = *(v78) - (cgc_strlen(v62) + -4);\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54) = *(v57);\n
    memset(&v53, 0, 12);\n
    if (*(v56) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if ((v54[0] << 24))\n
    {\n
        v11 = 0;\n
        if ((v54[1] << 16))\n
        {\n
            v11 = 0;\n
            if ((v54[2] << 8))\n
                v11 = v54[3];\n
        }\n
    }\n
    v55 = v11 & 1;\n
    cgc_uint2str(&v53, 12, v55);\n
    v10 = &v53;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v79 = v56;\n
    *(v79) = *(v79) - 4;\n
    v80 = v57;\n
    *(v80) = *(v80) + 4;\n
    v27 = a0;\n
    v26 = a1;\n
    *(&v24) = *(v27);\n
    memset(&v23, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v24[0] << 8))\n
        v9 = v24[1];\n
    v25 = v9 & 1;\n
    cgc_uint2str(&v23, 6, v25);\n
    v8 = &v23;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v81 = v26;\n
    *(v81) = *(v81) - 2;\n
    v82 = v27;\n
    *(v82) = *(v82) + 2;\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v60) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v60);\n
    v59 = v7;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v58, \"Str: \");\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v84 = v61;\n
    *(v84) = &(*(v84))[4 + cgc_strlen(v58)];\n
    v86 = v60;\n
    *(v86) = *(v86) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v22 = a0;\n
    v21 = a1;\n
    *(&v19) = *(v22);\n
    memset(&v18, 0, 6);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v19[0] << 8))\n
        v6 = v19[1];\n
    v20 = v6 & 1;\n
    cgc_uint2str(&v18, 6, v20);\n
    v5 = &v18;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v87 = v21;\n
    *(v87) = *(v87) - 2;\n
    v88 = v22;\n
    *(v88) = *(v88) + 2;\n
    v47 = a0;\n
    v46 = a1;\n
    memset(&v44, 0, 12);\n
    if (*(v46) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47));\n
    cgc_uint2str(&v44, 12, v45);\n
    v4 = &v44;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v89 = v46;\n
    *(v89) = *(v89) - 4;\n
    v90 = v47;\n
    *(v90) = *(v90) + 4;\n
    v52 = a0;\n
    v51 = a1;\n
    v49 = &*(v52)->field_0;\n
    memset(&v48, 0, 12);\n
    if (*(v51) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((*(v49) << 24))\n
    {\n
        v3 = 0;\n
        if ((v49[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v49[2] << 8))\n
                v3 = v49[3];\n
        }\n
    }\n
    v50 = v3 & 1;\n
    cgc_uint2str(&v48, 12, v50);\n
    v2 = &v48;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v91 = v51;\n
    *(v91) = *(v91) - 4;\n
    v92 = v52;\n
    *(v92) = *(v92) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    memset(&v36, 0, 4);\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(v39)->field_0;\n
    cgc_uint2str(&v36, 4, v37);\n
    v1 = &v36;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v93 = v38;\n
    *(v93) = *(v93) - 1;\n
    v94 = v39;\n
    *(v94) = *(v94) + 1;\n
    v31 = a0;\n
    v30 = a1;\n
    if (*(v30) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = *(v31)->field_0;\n
    v95 = v30;\n
    *(v95) = *(v95) - 1;\n
    v96 = v31;\n
    *(v96) = *(v96) + 1;\n
    if (v29 <= *(v30) && !(!v29))\n
        goto LABEL_410dbc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_410dbc:\n
    v28 = cgc_calloc(v29);\n
    if (!v28)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v28, *(v31), v29);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v97 = v31;\n
    *(v97) = &(*(v97))[v29];\n
    v98 = v30;\n
    *(v98) = *(v98) - v29;\n
    cgc_checkheap();\n
    cgc_free(v28);\n
    v43 = a0;\n
    v42 = a1;\n
    memset(&v40, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(&*(v43));\n
    cgc_uint2str(&v40, 12, v41);\n
    v0 = &v40;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v99 = v42;\n
    *(v99) = *(v99) - 4;\n
    v100 = v43;\n
    *(v100) = *(v100) + 4;\n
    v16 ^= cgc__cookie;\n
    if (v16)\n
        cgc___stack_cookie_fail();\n
    v101 = a1;\n
    if (*(a1) > 0 && v15 >= 0)\n
    {\n
        v101 = v15;\n
        if (v101 < 0)\n
            v101 = *(&(&v17)[8 * v15])(a0, a1);\n
    }\n
    return v101;\n
}\n
", "4263968:cgc_process_llamaisonymy": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaisonymy(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x6f8]\n
    char v1;  // [bp-0x6e9]\n
    struct_0 *v2;  // [bp-0x6e8]\n
    struct_0 *v3;  // [bp-0x6e0]\n
    char v4;  // [bp-0x6d1]\n
    struct_0 *v5;  // [bp-0x6d0]\n
    struct_0 *v6;  // [bp-0x6c8]\n
    struct_0 *v7;  // [bp-0x6c0]\n
    char v8;  // [bp-0x6b1]\n
    unsigned int v9;  // [bp-0x6b0]\n
    unsigned int v10;  // [bp-0x6ac]\n
    struct_0 *v11;  // [bp-0x6a8]\n
    struct_0 *v12;  // [bp-0x6a0]\n
    struct_0 *v13;  // [bp-0x698]\n
    struct_0 *v14;  // [bp-0x690]\n
    unsigned int v15;  // [bp-0x684]\n
    struct_0 *v16;  // [bp-0x680]\n
    unsigned int v17;  // [bp-0x674]\n
    struct_0 *v18;  // [bp-0x670]\n
    char v19;  // [bp-0x661]\n
    struct_0 *v20;  // [bp-0x660]\n
    struct_0 *v21;  // [bp-0x658]\n
    char v22;  // [bp-0x649]\n
    struct_0 *v23;  // [bp-0x648]\n
    struct_0 *v24;  // [bp-0x640]\n
    struct_0 *v25;  // [bp-0x638]\n
    struct_0 *v26;  // [bp-0x630]\n
    char v27;  // [bp-0x621]\n
    struct_0 *v28;  // [bp-0x620]\n
    struct_0 *v29;  // [bp-0x618]\n
    char v30;  // [bp-0x609]\n
    struct_0 *v31;  // [bp-0x608]\n
    struct_0 *v32;  // [bp-0x600]\n
    struct_0 *v33;  // [bp-0x5f8]\n
    struct_0 *v34;  // [bp-0x5f0]\n
    char v35;  // [bp-0x5e1]\n
    struct_0 *v36;  // [bp-0x5e0]\n
    char v37;  // [bp-0x5d1]\n
    struct_0 *v38;  // [bp-0x5d0]\n
    unsigned int v39;  // [bp-0x5c4]\n
    struct_0 *v40;  // [bp-0x5c0]\n
    char v41;  // [bp-0x5b1]\n
    unsigned int v42;  // [bp-0x5b0]\n
    unsigned int v43;  // [bp-0x5ac]\n
    char v44;  // [bp-0x5a8]\n
    char v45;  // [bp-0x58e]\n
    char v46[2];  // [bp-0x588]\n
    unsigned short v47;  // [bp-0x57a]\n
    unsigned int *v48;  // [bp-0x578]\n
    struct struct_1 **v49;  // [bp-0x570]\n
    char v50;  // [bp-0x566]\n
    char v51[2];  // [bp-0x560]\n
    unsigned short v52;  // [bp-0x552]\n
    unsigned int *v53;  // [bp-0x550]\n
    struct struct_1 **v54;  // [bp-0x548]\n
    char v55;  // [bp-0x53e]\n
    char v56[2];  // [bp-0x538]\n
    unsigned short v57;  // [bp-0x52a]\n
    unsigned int *v58;  // [bp-0x528]\n
    struct struct_1 **v59;  // [bp-0x520]\n
    char v60;  // [bp-0x518]\n
    char v61[8];  // [bp-0x4f8]\n
    unsigned int v62;  // [bp-0x4f0]\n
    unsigned int *v63;  // [bp-0x4e8]\n
    struct struct_1 **v64;  // [bp-0x4e0]\n
    char v65;  // [bp-0x4d8]\n
    char v66[8];  // [bp-0x4b8]\n
    unsigned int v67;  // [bp-0x4b0]\n
    unsigned int *v68;  // [bp-0x4a8]\n
    struct struct_1 **v69;  // [bp-0x4a0]\n
    char v70;  // [bp-0x498]\n
    char v71[8];  // [bp-0x478]\n
    unsigned int v72;  // [bp-0x470]\n
    unsigned int *v73;  // [bp-0x468]\n
    struct struct_1 **v74;  // [bp-0x460]\n
    unsigned long v75;  // [bp-0x458]\n
    char v76;  // [bp-0x449]\n
    unsigned int *v77;  // [bp-0x448]\n
    struct struct_1 **v78;  // [bp-0x440]\n
    unsigned long v79;  // [bp-0x438]\n
    char v80;  // [bp-0x429]\n
    unsigned int *v81;  // [bp-0x428]\n
    struct struct_1 **v82;  // [bp-0x420]\n
    unsigned long v83;  // [bp-0x418]\n
    char v84;  // [bp-0x409]\n
    unsigned int *v85;  // [bp-0x408]\n
    struct struct_1 **v86;  // [bp-0x400]\n
    char *v87;  // [bp-0x3f8]\n
    unsigned int v88;  // [bp-0x3ec]\n
    unsigned int *v89;  // [bp-0x3e8]\n
    struct struct_1 **v90;  // [bp-0x3e0]\n
    char *v91;  // [bp-0x3d8]\n
    unsigned int v92;  // [bp-0x3cc]\n
    unsigned int *v93;  // [bp-0x3c8]\n
    struct struct_1 **v94;  // [bp-0x3c0]\n
    char *v95;  // [bp-0x3b8]\n
    unsigned int v96;  // [bp-0x3ac]\n
    unsigned int *v97;  // [bp-0x3a8]\n
    struct struct_1 **v98;  // [bp-0x3a0]\n
    char v99;  // [bp-0x398]\n
    unsigned short v100;  // [bp-0x392]\n
    unsigned int *v101;  // [bp-0x390]\n
    struct struct_1 **v102;  // [bp-0x388]\n
    char v103;  // [bp-0x380]\n
    unsigned short v104;  // [bp-0x37a]\n
    unsigned int *v105;  // [bp-0x378]\n
    struct struct_1 **v106;  // [bp-0x370]\n
    char v107;  // [bp-0x368]\n
    unsigned short v108;  // [bp-0x362]\n
    unsigned int *v109;  // [bp-0x360]\n
    struct struct_1 **v110;  // [bp-0x358]\n
    char v111;  // [bp-0x34d]\n
    char v112;  // [bp-0x349]\n
    unsigned int *v113;  // [bp-0x348]\n
    struct struct_1 **v114;  // [bp-0x340]\n
    char v115;  // [bp-0x335]\n
    char v116;  // [bp-0x331]\n
    unsigned int *v117;  // [bp-0x330]\n
    struct struct_1 **v118;  // [bp-0x328]\n
    char v119;  // [bp-0x31d]\n
    char v120;  // [bp-0x319]\n
    unsigned int *v121;  // [bp-0x318]\n
    struct struct_1 **v122;  // [bp-0x310]\n
    char v123;  // [bp-0x305]\n
    char v124;  // [bp-0x301]\n
    unsigned int *v125;  // [bp-0x300]\n
    struct struct_1 **v126;  // [bp-0x2f8]\n
    char v127;  // [bp-0x2ed]\n
    char v128;  // [bp-0x2e9]\n
    unsigned int *v129;  // [bp-0x2e8]\n
    struct struct_1 **v130;  // [bp-0x2e0]\n
    char v131;  // [bp-0x2d8]\n
    unsigned int v132;  // [bp-0x2c0]\n
    unsigned int *v133;  // [bp-0x2b8]\n
    struct struct_1 **v134;  // [bp-0x2b0]\n
    char v135;  // [bp-0x2a8]\n
    unsigned int v136;  // [bp-0x290]\n
    unsigned int *v137;  // [bp-0x288]\n
    struct struct_1 **v138;  // [bp-0x280]\n
    char v139;  // [bp-0x278]\n
    unsigned int v140;  // [bp-0x26c]\n
    unsigned int *v141;  // [bp-0x268]\n
    struct struct_1 **v142;  // [bp-0x260]\n
    char v143;  // [bp-0x258]\n
    unsigned int v144;  // [bp-0x24c]\n
    unsigned int *v145;  // [bp-0x248]\n
    struct struct_1 **v146;  // [bp-0x240]\n
    char v147;  // [bp-0x238]\n
    unsigned int v148;  // [bp-0x22c]\n
    unsigned int *v149;  // [bp-0x228]\n
    struct struct_1 **v150;  // [bp-0x220]\n
    char v151;  // [bp-0x218]\n
    unsigned int v152;  // [bp-0x20c]\n
    unsigned int *v153;  // [bp-0x208]\n
    struct struct_1 **v154;  // [bp-0x200]\n
    unsigned long v155;  // [bp-0x1f8]\n
    unsigned short v156;  // [bp-0x1ea]\n
    unsigned int *v157;  // [bp-0x1e8]\n
    struct struct_1 **v158;  // [bp-0x1e0]\n
    char v159;  // [bp-0x1d4]\n
    char v160[4];  // [bp-0x1c8]\n
    unsigned int v161;  // [bp-0x1bc]\n
    unsigned int *v162;  // [bp-0x1b8]\n
    struct struct_1 **v163;  // [bp-0x1b0]\n
    char v164;  // [bp-0x1a4]\n
    char v165[8];  // [bp-0x198]\n
    unsigned int v166;  // [bp-0x18c]\n
    unsigned int *v167;  // [bp-0x188]\n
    struct struct_1 **v168;  // [bp-0x180]\n
    char v169;  // [bp-0x174]\n
    char *v170;  // [bp-0x168]\n
    unsigned int v171;  // [bp-0x15c]\n
    unsigned int *v172;  // [bp-0x158]\n
    struct struct_1 **v173;  // [bp-0x150]\n
    char v174;  // [bp-0x144]\n
    char v175[4];  // [bp-0x138]\n
    unsigned int v176;  // [bp-0x12c]\n
    unsigned int *v177;  // [bp-0x128]\n
    struct struct_1 **v178;  // [bp-0x120]\n
    char *v179;  // [bp-0x118]\n
    unsigned int v180;  // [bp-0x10c]\n
    unsigned int *v181;  // [bp-0x108]\n
    struct struct_1 **v182;  // [bp-0x100]\n
    char *v183;  // [bp-0xf8]\n
    unsigned int v184;  // [bp-0xec]\n
    unsigned int *v185;  // [bp-0xe8]\n
    struct struct_1 **v186;  // [bp-0xe0]\n
    char v187;  // [bp-0xd8]\n
    unsigned int v188;  // [bp-0xc0]\n
    unsigned int *v189;  // [bp-0xb8]\n
    struct struct_1 **v190;  // [bp-0xb0]\n
    char v191;  // [bp-0xa8]\n
    unsigned int v192;  // [bp-0x90]\n
    unsigned int *v193;  // [bp-0x88]\n
    struct struct_1 **v194;  // [bp-0x80]\n
    char v195;  // [bp-0x78]\n
    unsigned int v196;  // [bp-0x60]\n
    unsigned int *v197;  // [bp-0x58]\n
    struct struct_1 **v198;  // [bp-0x50]\n
    unsigned long v199;  // [bp-0x48]\n
    char v200;  // [bp-0x39]\n
    unsigned int *v201;  // [bp-0x38]\n
    struct struct_1 **v202;  // [bp-0x30]\n
    unsigned long v203;  // [bp-0x28]\n
    char v204;  // [bp-0x19]\n
    unsigned int *v205;  // [bp-0x18]\n
    struct struct_1 **v206;  // [bp-0x10]\n
    unsigned int *v208;  // rax\n
    struct struct_1 **v209;  // rax\n
    struct struct_1 **v211;  // rax\n
    unsigned int *v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_1 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_1 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_1 **v219;  // rax\n
    struct struct_1 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_1 **v223;  // rax\n
    struct struct_1 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_1 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_1 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_1 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_1 **v233;  // rax\n
    struct struct_1 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_1 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_1 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_1 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_1 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_1 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_1 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_1 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_1 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_1 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_1 **v255;  // rax\n
    struct struct_1 **v257;  // rax\n
    unsigned int *v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_1 **v261;  // rax\n
    struct struct_1 **v263;  // rax\n
    unsigned int *v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_1 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_1 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_1 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_1 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_1 **v275;  // rax\n
    struct struct_1 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_1 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_1 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_1 **v283;  // rax\n
    struct struct_1 **v284;  // rax\n
    unsigned int *v285;  // rax\n
    struct struct_1 **v287;  // rax\n
    unsigned int *v289;  // rax\n
    struct struct_1 **v291;  // rax\n
    unsigned int *v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_1 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_1 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_1 **v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_1 **v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_1 **v303;  // rax\n
    unsigned int *v304;  // rax\n
    struct struct_1 **v305;  // rax\n
    unsigned int *v306;  // rax, Other Possible Types: unsigned long\n
\n
    v43 = cgc__cookie;\n
    v42 = -1;\n
    if (cgc_sendline(1, \"===llamaisonymy===\", 18) < 0)\n
        cgc__terminate(1);\n
    v74 = a0;\n
    v73 = a1;\n
    *(&v71[0]) = *(v74);\n
    memset(&v70, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = 0;\n
    if (v71[0] << 56)\n
    {\n
        v41 = 0;\n
        if (v71[1] << 48)\n
        {\n
            v41 = 0;\n
            if (v71[2] << 40)\n
            {\n
                v41 = 0;\n
                if (v71[3] << 32)\n
                {\n
                    v41 = 0;\n
                    if ((v71[4] << 24))\n
                    {\n
                        v41 = 0;\n
                        if ((v71[5] << 16))\n
                        {\n
                            v41 = 0;\n
                            if ((v71[6] << 8))\n
                                v41 = v71[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v72) = v41 & 1;\n
    cgc_uint2str(&v70, 21, *(&v72));\n
    v40 = &v70;\n
    if (cgc_sendline(1, v40, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v208 = v73;\n
    *(v208) = *(v208) - 8;\n
    v209 = v74;\n
    *(v209) = *(v209) + 8;\n
    v186 = a0;\n
    v185 = a1;\n
    if (*(v185) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v185) >= 128)\n
        v39 = 128;\n
    else\n
        v39 = *(v185);\n
    v184 = v39;\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v183 = cgc_calloc(134);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v183, \"Str: \");\n
    cgc_strncpy(v183 + 5, *(v186), v184);\n
    v211 = v186;\n
    *(v211) = &(*(v211))[4 + cgc_strlen(v183)];\n
    v213 = v185;\n
    *(v213) = *(v213) - (cgc_strlen(v183) + -4);\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v154 = a0;\n
    v153 = a1;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v152 = *(&*(v154));\n
    cgc_uint2str(&v151, 12, v152);\n
    v38 = &v151;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v151)) < 0)\n
        cgc__terminate(1);\n
    v214 = v153;\n
    *(v214) = *(v214) - 4;\n
    v215 = v154;\n
    *(v215) = *(v215) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    *(&v56) = *(v59);\n
    memset(&v55, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = 0;\n
    if ((v56[0] << 8))\n
        v37 = v56[1];\n
    v57 = v37 & 1;\n
    cgc_uint2str(&v55, 6, v57);\n
    v36 = &v55;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v216 = v58;\n
    *(v216) = *(v216) - 2;\n
    v217 = v59;\n
    *(v217) = *(v217) + 2;\n
    v206 = a0;\n
    v205 = a1;\n
    if (*(v205) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v204 = *(v206)->field_0;\n
    v218 = v205;\n
    *(v218) = *(v218) - 1;\n
    v219 = v206;\n
    *(v219) = *(v219) + 1;\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_4117a7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4117a7:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v220 = v206;\n
    *(v220) = &(*(v220))[v204];\n
    v221 = v205;\n
    *(v221) = *(v221) - v204;\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v86 = a0;\n
    v85 = a1;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(v86)->field_0;\n
    v222 = v85;\n
    *(v222) = *(v222) - 1;\n
    v223 = v86;\n
    *(v223) = *(v223) + 1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_411954;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_411954:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v224 = v86;\n
    *(v224) = &(*(v224))[v84];\n
    v225 = v85;\n
    *(v225) = *(v225) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v178 = a0;\n
    v177 = a1;\n
    *(&v175) = *(v178);\n
    memset(&v174, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if ((v175[0] << 24))\n
    {\n
        v35 = 0;\n
        if ((v175[1] << 16))\n
        {\n
            v35 = 0;\n
            if ((v175[2] << 8))\n
                v35 = v175[3];\n
        }\n
    }\n
    v176 = v35 & 1;\n
    cgc_uint2str(&v174, 12, v176);\n
    v34 = &v174;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v174)) < 0)\n
        cgc__terminate(1);\n
    v226 = v177;\n
    *(v226) = *(v226) - 4;\n
    v227 = v178;\n
    *(v227) = *(v227) + 4;\n
    v150 = a0;\n
    v149 = a1;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v148 = *(&*(v150));\n
    cgc_uint2str(&v147, 12, v148);\n
    v33 = &v147;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v147)) < 0)\n
        cgc__terminate(1);\n
    v228 = v149;\n
    *(v228) = *(v228) - 4;\n
    v229 = v150;\n
    *(v229) = *(v229) + 4;\n
    v130 = a0;\n
    v129 = a1;\n
    memset(&v127, 0, 4);\n
    if (*(v129) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = *(v130)->field_0;\n
    cgc_uint2str(&v127, 4, v128);\n
    v32 = &v127;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v127)) < 0)\n
        cgc__terminate(1);\n
    v230 = v129;\n
    *(v230) = *(v230) - 1;\n
    v231 = v130;\n
    *(v231) = *(v231) + 1;\n
    v202 = a0;\n
    v201 = a1;\n
    if (*(v201) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v200 = *(v202)->field_0;\n
    v232 = v201;\n
    *(v232) = *(v232) - 1;\n
    v233 = v202;\n
    *(v233) = *(v233) + 1;\n
    if (v200 <= *(v201) && !(!v200))\n
        goto LABEL_411e94;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_411e94:\n
    v199 = cgc_calloc(v200);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v199, *(v202), v200);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v234 = v202;\n
    *(v234) = &(*(v234))[v200];\n
    v235 = v201;\n
    *(v235) = *(v235) - v200;\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    v198 = a0;\n
    v197 = a1;\n
    memset(&v195, 0, 21);\n
    if (*(v197) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v196) = *(&*(v198));\n
    cgc_uint2str(&v195, 21, *(&v196));\n
    v31 = &v195;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v195)) < 0)\n
        cgc__terminate(1);\n
    v236 = v197;\n
    *(v236) = *(v236) - 8;\n
    v237 = v198;\n
    *(v237) = *(v237) + 8;\n
    v69 = a0;\n
    v68 = a1;\n
    *(&v66[0]) = *(v69);\n
    memset(&v65, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if (v66[0] << 56)\n
    {\n
        v30 = 0;\n
        if (v66[1] << 48)\n
        {\n
            v30 = 0;\n
            if (v66[2] << 40)\n
            {\n
                v30 = 0;\n
                if (v66[3] << 32)\n
                {\n
                    v30 = 0;\n
                    if ((v66[4] << 24))\n
                    {\n
                        v30 = 0;\n
                        if ((v66[5] << 16))\n
                        {\n
                            v30 = 0;\n
                            if ((v66[6] << 8))\n
                                v30 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v67) = v30 & 1;\n
    cgc_uint2str(&v65, 21, *(&v67));\n
    v29 = &v65;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v238 = v68;\n
    *(v238) = *(v238) - 8;\n
    v239 = v69;\n
    *(v239) = *(v239) + 8;\n
    v110 = a0;\n
    v109 = a1;\n
    memset(&v107, 0, 6);\n
    if (*(v109) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = *(&*(v110));\n
    cgc_uint2str(&v107, 6, v108);\n
    v28 = &v107;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v107)) < 0)\n
        cgc__terminate(1);\n
    v240 = v109;\n
    *(v240) = *(v240) - 2;\n
    v241 = v110;\n
    *(v241) = *(v241) + 2;\n
    v173 = a0;\n
    v172 = a1;\n
    v170 = &*(v173)->field_0;\n
    memset(&v169, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((*(v170) << 24))\n
    {\n
        v27 = 0;\n
        if ((v170[1] << 16))\n
        {\n
            v27 = 0;\n
            if ((v170[2] << 8))\n
                v27 = v170[3];\n
        }\n
    }\n
    v171 = v27 & 1;\n
    cgc_uint2str(&v169, 12, v171);\n
    v26 = &v169;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v169)) < 0)\n
        cgc__terminate(1);\n
    v242 = v172;\n
    *(v242) = *(v242) - 4;\n
    v243 = v173;\n
    *(v243) = *(v243) + 4;\n
    v138 = a0;\n
    v137 = a1;\n
    memset(&v135, 0, 21);\n
    if (*(v137) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v136) = *(&*(v138));\n
    cgc_uint2str(&v135, 21, *(&v136));\n
    v25 = &v135;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v135)) < 0)\n
        cgc__terminate(1);\n
    v244 = v137;\n
    *(v244) = *(v244) - 8;\n
    v245 = v138;\n
    *(v245) = *(v245) + 8;\n
    v146 = a0;\n
    v145 = a1;\n
    memset(&v143, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v144 = *(&*(v146));\n
    cgc_uint2str(&v143, 12, v144);\n
    v24 = &v143;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v246 = v145;\n
    *(v246) = *(v246) - 4;\n
    v247 = v146;\n
    *(v247) = *(v247) + 4;\n
    v126 = a0;\n
    v125 = a1;\n
    memset(&v123, 0, 4);\n
    if (*(v125) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = *(v126)->field_0;\n
    cgc_uint2str(&v123, 4, v124);\n
    v23 = &v123;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v248 = v125;\n
    *(v248) = *(v248) - 1;\n
    v249 = v126;\n
    *(v249) = *(v249) + 1;\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51) = *(v54);\n
    memset(&v50, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v51[0] << 8))\n
        v22 = v51[1];\n
    v52 = v22 & 1;\n
    cgc_uint2str(&v50, 6, v52);\n
    v21 = &v50;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v250 = v53;\n
    *(v250) = *(v250) - 2;\n
    v251 = v54;\n
    *(v251) = *(v251) + 2;\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 6);\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v104 = *(&*(v106));\n
    cgc_uint2str(&v103, 6, v104);\n
    v20 = &v103;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v252 = v105;\n
    *(v252) = *(v252) - 2;\n
    v253 = v106;\n
    *(v253) = *(v253) + 2;\n
    v168 = a0;\n
    v167 = a1;\n
    *(&v165[0]) = *(v168);\n
    memset(&v164, 0, 12);\n
    if (*(v167) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((v165[0] << 24))\n
    {\n
        v19 = 0;\n
        if ((v165[1] << 16))\n
        {\n
            v19 = 0;\n
            if ((v165[2] << 8))\n
                v19 = v165[3];\n
        }\n
    }\n
    v166 = v19 & 1;\n
    cgc_uint2str(&v164, 12, v166);\n
    v18 = &v164;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v164)) < 0)\n
        cgc__terminate(1);\n
    v254 = v167;\n
    *(v254) = *(v254) - 4;\n
    v255 = v168;\n
    *(v255) = *(v255) + 4;\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v181) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v181);\n
    v180 = v17;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v179, \"Str: \");\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v257 = v182;\n
    *(v257) = &(*(v257))[4 + cgc_strlen(v179)];\n
    v259 = v181;\n
    *(v259) = *(v259) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v194 = a0;\n
    v193 = a1;\n
    memset(&v191, 0, 21);\n
    if (*(v193) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v192) = *(&*(v194));\n
    cgc_uint2str(&v191, 21, *(&v192));\n
    v16 = &v191;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v191)) < 0)\n
        cgc__terminate(1);\n
    v260 = v193;\n
    *(v260) = *(v260) - 8;\n
    v261 = v194;\n
    *(v261) = *(v261) + 8;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v97) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v97);\n
    v96 = v15;\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = cgc_calloc(134);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v95, \"Str: \");\n
    cgc_strncpy(v95 + 5, *(v98), v96);\n
    v263 = v98;\n
    *(v263) = &(*(v263))[4 + cgc_strlen(v95)];\n
    v265 = v97;\n
    *(v265) = *(v265) - (cgc_strlen(v95) + -4);\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v122 = a0;\n
    v121 = a1;\n
    memset(&v119, 0, 4);\n
    if (*(v121) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = *(v122)->field_0;\n
    cgc_uint2str(&v119, 4, v120);\n
    v14 = &v119;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v119)) < 0)\n
        cgc__terminate(1);\n
    v266 = v121;\n
    *(v266) = *(v266) - 1;\n
    v267 = v122;\n
    *(v267) = *(v267) + 1;\n
    v118 = a0;\n
    v117 = a1;\n
    memset(&v115, 0, 4);\n
    if (*(v117) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = *(v118)->field_0;\n
    cgc_uint2str(&v115, 4, v116);\n
    v13 = &v115;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v115)) < 0)\n
        cgc__terminate(1);\n
    v268 = v117;\n
    *(v268) = *(v268) - 1;\n
    v269 = v118;\n
    *(v269) = *(v269) + 1;\n
    v158 = a0;\n
    v157 = a1;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = *(&*(v158));\n
    v270 = v157;\n
    *(v270) = *(v270) - 2;\n
    v271 = v158;\n
    *(v271) = *(v271) + 2;\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_413387;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_413387:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v272 = v157;\n
    *(v272) = *(v272) - v156;\n
    v273 = v158;\n
    *(v273) = &(*(v273))[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v82 = a0;\n
    v81 = a1;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(v82)->field_0;\n
    v274 = v81;\n
    *(v274) = *(v274) - 1;\n
    v275 = v82;\n
    *(v275) = *(v275) + 1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_413555;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_413555:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v276 = v82;\n
    *(v276) = &(*(v276))[v80];\n
    v277 = v81;\n
    *(v277) = *(v277) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v142 = a0;\n
    v141 = a1;\n
    memset(&v139, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v140 = *(&*(v142));\n
    cgc_uint2str(&v139, 12, v140);\n
    v12 = &v139;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v139)) < 0)\n
        cgc__terminate(1);\n
    v278 = v141;\n
    *(v278) = *(v278) - 4;\n
    v279 = v142;\n
    *(v279) = *(v279) + 4;\n
    v114 = a0;\n
    v113 = a1;\n
    memset(&v111, 0, 4);\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(v114)->field_0;\n
    cgc_uint2str(&v111, 4, v112);\n
    v11 = &v111;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v280 = v113;\n
    *(v280) = *(v280) - 1;\n
    v281 = v114;\n
    *(v281) = *(v281) + 1;\n
    v78 = a0;\n
    v77 = a1;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(v78)->field_0;\n
    v282 = v77;\n
    *(v282) = *(v282) - 1;\n
    v283 = v78;\n
    *(v283) = *(v283) + 1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_413926;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_413926:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v284 = v78;\n
    *(v284) = &(*(v284))[v76];\n
    v285 = v77;\n
    *(v285) = *(v285) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v93) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v93);\n
    v92 = v10;\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = cgc_calloc(134);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v91, \"Str: \");\n
    cgc_strncpy(v91 + 5, *(v94), v92);\n
    v287 = v94;\n
    *(v287) = &(*(v287))[4 + cgc_strlen(v91)];\n
    v289 = v93;\n
    *(v289) = *(v289) - (cgc_strlen(v91) + -4);\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v89) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v89);\n
    v88 = v9;\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = cgc_calloc(134);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v87, \"Str: \");\n
    cgc_strncpy(v87 + 5, *(v90), v88);\n
    v291 = v90;\n
    *(v291) = &(*(v291))[4 + cgc_strlen(v87)];\n
    v293 = v89;\n
    *(v293) = *(v293) - (cgc_strlen(v87) + -4);\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v163 = a0;\n
    v162 = a1;\n
    *(&v160) = *(v163);\n
    memset(&v159, 0, 12);\n
    if (*(v162) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v160[0] << 24))\n
    {\n
        v8 = 0;\n
        if ((v160[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v160[2] << 8))\n
                v8 = v160[3];\n
        }\n
    }\n
    v161 = v8 & 1;\n
    cgc_uint2str(&v159, 12, v161);\n
    v7 = &v159;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v159)) < 0)\n
        cgc__terminate(1);\n
    v294 = v162;\n
    *(v294) = *(v294) - 4;\n
    v295 = v163;\n
    *(v295) = *(v295) + 4;\n
    v190 = a0;\n
    v189 = a1;\n
    memset(&v187, 0, 21);\n
    if (*(v189) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v188) = *(&*(v190));\n
    cgc_uint2str(&v187, 21, *(&v188));\n
    v6 = &v187;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v187)) < 0)\n
        cgc__terminate(1);\n
    v296 = v189;\n
    *(v296) = *(v296) - 8;\n
    v297 = v190;\n
    *(v297) = *(v297) + 8;\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 6);\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(&*(v102));\n
    cgc_uint2str(&v99, 6, v100);\n
    v5 = &v99;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v298 = v101;\n
    *(v298) = *(v298) - 2;\n
    v299 = v102;\n
    *(v299) = *(v299) + 2;\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46) = *(v49);\n
    memset(&v45, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v46[0] << 8))\n
        v4 = v46[1];\n
    v47 = v4 & 1;\n
    cgc_uint2str(&v45, 6, v47);\n
    v3 = &v45;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v300 = v48;\n
    *(v300) = *(v300) - 2;\n
    v301 = v49;\n
    *(v301) = *(v301) + 2;\n
    v134 = a0;\n
    v133 = a1;\n
    memset(&v131, 0, 21);\n
    if (*(v133) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v132) = *(&*(v134));\n
    cgc_uint2str(&v131, 21, *(&v132));\n
    v2 = &v131;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v131)) < 0)\n
        cgc__terminate(1);\n
    v302 = v133;\n
    *(v302) = *(v302) - 8;\n
    v303 = v134;\n
    *(v303) = *(v303) + 8;\n
    v64 = a0;\n
    v63 = a1;\n
    *(&v61[0]) = *(v64);\n
    memset(&v60, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v61[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v61[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v61[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v61[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v61[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v61[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v61[6] << 8))\n
                                v1 = v61[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v62) = v1 & 1;\n
    cgc_uint2str(&v60, 21, *(&v62));\n
    v0 = &v60;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v304 = v63;\n
    *(v304) = *(v304) - 8;\n
    v305 = v64;\n
    *(v305) = *(v305) + 8;\n
    v43 ^= cgc__cookie;\n
    if (v43)\n
        cgc___stack_cookie_fail();\n
    v306 = a1;\n
    if (*(a1) > 0 && v42 >= 0)\n
    {\n
        v306 = v42;\n
        if (v306 < 0)\n
            v306 = *(&(&v44)[8 * v42])(a0, a1);\n
    }\n
    return v306;\n
}\n
", "4277852:sub_41465c": null, "4277856:cgc_process_llamastrawer": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6158;\n
\n
long long cgc_process_llamastrawer(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x410]\n
    char v1;  // [bp-0x401]\n
    struct_1 *v2;  // [bp-0x400]\n
    struct_1 *v3;  // [bp-0x3f8]\n
    struct_1 *v4;  // [bp-0x3f0]\n
    unsigned int v5;  // [bp-0x3e4]\n
    struct_1 *v6;  // [bp-0x3e0]\n
    char v7;  // [bp-0x3d1]\n
    struct_1 *v8;  // [bp-0x3d0]\n
    struct_1 *v9;  // [bp-0x3c8]\n
    struct_1 *v10;  // [bp-0x3c0]\n
    struct_1 *v11;  // [bp-0x3b8]\n
    struct_1 *v12;  // [bp-0x3b0]\n
    char v13;  // [bp-0x3a1]\n
    struct_1 *v14;  // [bp-0x3a0]\n
    struct_1 *v15;  // [bp-0x398]\n
    struct_1 *v16;  // [bp-0x390]\n
    struct_1 *v17;  // [bp-0x388]\n
    char v18;  // [bp-0x379]\n
    unsigned int v19;  // [bp-0x378]\n
    unsigned int v20;  // [bp-0x374]\n
    unsigned long v21;  // [bp-0x370]\n
    char v22;  // [bp-0x356]\n
    char v23[2];  // [bp-0x350]\n
    unsigned short v24;  // [bp-0x342]\n
    unsigned int *v25;  // [bp-0x340]\n
    struct struct_0 **v26;  // [bp-0x338]\n
    char v27;  // [bp-0x32e]\n
    char v28[2];  // [bp-0x328]\n
    unsigned short v29;  // [bp-0x31a]\n
    unsigned int *v30;  // [bp-0x318]\n
    struct struct_0 **v31;  // [bp-0x310]\n
    unsigned long v32;  // [bp-0x308]\n
    char v33;  // [bp-0x2f9]\n
    unsigned int *v34;  // [bp-0x2f8]\n
    struct struct_0 **v35;  // [bp-0x2f0]\n
    unsigned long v36;  // [bp-0x2e8]\n
    char v37;  // [bp-0x2d9]\n
    unsigned int *v38;  // [bp-0x2d8]\n
    struct struct_0 **v39;  // [bp-0x2d0]\n
    unsigned long v40;  // [bp-0x2c8]\n
    char v41;  // [bp-0x2b9]\n
    unsigned int *v42;  // [bp-0x2b8]\n
    struct struct_0 **v43;  // [bp-0x2b0]\n
    char *v44;  // [bp-0x2a8]\n
    unsigned int *v45;  // [bp-0x2a0]\n
    struct struct_0 **v46;  // [bp-0x298]\n
    char *v47;  // [bp-0x290]\n
    unsigned int *v48;  // [bp-0x288]\n
    struct struct_0 **v49;  // [bp-0x280]\n
    char *v50;  // [bp-0x278]\n
    unsigned int *v51;  // [bp-0x270]\n
    struct struct_0 **v52;  // [bp-0x268]\n
    char v53;  // [bp-0x260]\n
    unsigned short v54;  // [bp-0x25a]\n
    unsigned int *v55;  // [bp-0x258]\n
    struct struct_0 **v56;  // [bp-0x250]\n
    char v57;  // [bp-0x245]\n
    char v58;  // [bp-0x241]\n
    unsigned int *v59;  // [bp-0x240]\n
    struct struct_0 **v60;  // [bp-0x238]\n
    char v61;  // [bp-0x22d]\n
    char v62;  // [bp-0x229]\n
    unsigned int *v63;  // [bp-0x228]\n
    struct struct_0 **v64;  // [bp-0x220]\n
    char v65;  // [bp-0x215]\n
    char v66;  // [bp-0x211]\n
    unsigned int *v67;  // [bp-0x210]\n
    struct struct_0 **v68;  // [bp-0x208]\n
    unsigned short *v69;  // [bp-0x200]\n
    unsigned int *v70;  // [bp-0x1f8]\n
    struct struct_0 **v71;  // [bp-0x1f0]\n
    unsigned short *v72;  // [bp-0x1e8]\n
    unsigned int *v73;  // [bp-0x1e0]\n
    struct struct_0 **v74;  // [bp-0x1d8]\n
    unsigned short *v75;  // [bp-0x1d0]\n
    unsigned int *v76;  // [bp-0x1c8]\n
    struct struct_0 **v77;  // [bp-0x1c0]\n
    char v78;  // [bp-0x1b8]\n
    unsigned int v79;  // [bp-0x1a0]\n
    unsigned int *v80;  // [bp-0x198]\n
    struct struct_0 **v81;  // [bp-0x190]\n
    char v82;  // [bp-0x188]\n
    unsigned int v83;  // [bp-0x17c]\n
    unsigned int *v84;  // [bp-0x178]\n
    struct struct_0 **v85;  // [bp-0x170]\n
    char v86;  // [bp-0x168]\n
    unsigned int v87;  // [bp-0x15c]\n
    unsigned int *v88;  // [bp-0x158]\n
    struct struct_0 **v89;  // [bp-0x150]\n
    char v90;  // [bp-0x148]\n
    unsigned int v91;  // [bp-0x13c]\n
    unsigned int *v92;  // [bp-0x138]\n
    struct struct_0 **v93;  // [bp-0x130]\n
    unsigned long v94;  // [bp-0x128]\n
    unsigned short v95;  // [bp-0x11a]\n
    unsigned int *v96;  // [bp-0x118]\n
    struct struct_0 **v97;  // [bp-0x110]\n
    char v98;  // [bp-0x104]\n
    char v99[4];  // [bp-0xf8]\n
    unsigned int v100;  // [bp-0xec]\n
    unsigned int *v101;  // [bp-0xe8]\n
    struct struct_0 **v102;  // [bp-0xe0]\n
    char v103;  // [bp-0xd4]\n
    char v104[4];  // [bp-0xc8]\n
    unsigned int v105;  // [bp-0xbc]\n
    unsigned int *v106;  // [bp-0xb8]\n
    struct struct_0 **v107;  // [bp-0xb0]\n
    char *v108;  // [bp-0xa8]\n
    unsigned int v109;  // [bp-0x9c]\n
    unsigned int *v110;  // [bp-0x98]\n
    struct struct_0 **v111;  // [bp-0x90]\n
    char v112;  // [bp-0x88]\n
    unsigned int v113;  // [bp-0x70]\n
    unsigned int *v114;  // [bp-0x68]\n
    struct struct_0 **v115;  // [bp-0x60]\n
    char v116;  // [bp-0x58]\n
    unsigned int v117;  // [bp-0x40]\n
    unsigned int *v118;  // [bp-0x38]\n
    struct struct_0 **v119;  // [bp-0x30]\n
    unsigned long v120;  // [bp-0x28]\n
    char v121;  // [bp-0x19]\n
    unsigned int *v122;  // [bp-0x18]\n
    struct struct_0 **v123;  // [bp-0x10]\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    struct struct_0 **v133;  // rax\n
    unsigned int *v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    struct struct_0 **v149;  // rax\n
    unsigned int *v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    unsigned int *v157;  // rax\n
    struct struct_0 **v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_0 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    struct struct_0 **v165;  // rax\n
    unsigned int *v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_0 **v168;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_0 **v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_0 **v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax, Other Possible Types: unsigned long\n
\n
    v21 = g_4c6158;\n
    v20 = cgc__cookie;\n
    v19 = -1;\n
    if (cgc_sendline(1, \"===llamastrawer===\", 18) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    v50 = &*(v52)->field_0;\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = v51;\n
    *(v125) = *(v125) - 1;\n
    v126 = v52;\n
    *(v126) = *(v126) + 1;\n
    v19 = *(v50);\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28) = *(v31);\n
    memset(&v27, 0, 6);\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v28[0] << 8))\n
        v18 = v28[1];\n
    v29 = v18 & 1;\n
    cgc_uint2str(&v27, 6, v29);\n
    v17 = &v27;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v127 = v30;\n
    *(v127) = *(v127) - 2;\n
    v128 = v31;\n
    *(v128) = *(v128) + 2;\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 21);\n
    if (*(v118) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v117) = *(&*(v119));\n
    cgc_uint2str(&v116, 21, *(&v117));\n
    v16 = &v116;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v129 = v118;\n
    *(v129) = *(v129) - 8;\n
    v130 = v119;\n
    *(v130) = *(v130) + 8;\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(v43)->field_0;\n
    v131 = v42;\n
    *(v131) = *(v131) - 1;\n
    v132 = v43;\n
    *(v132) = *(v132) + 1;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_414a87;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_414a87:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v133 = v43;\n
    *(v133) = &(*(v133))[v41];\n
    v134 = v42;\n
    *(v134) = *(v134) - v41;\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 21);\n
    if (*(v114) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v113) = *(&*(v115));\n
    cgc_uint2str(&v112, 21, *(&v113));\n
    v15 = &v112;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v135 = v114;\n
    *(v135) = *(v135) - 8;\n
    v136 = v115;\n
    *(v136) = *(v136) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v14 = &v65;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v137 = v67;\n
    *(v137) = *(v137) - 1;\n
    v138 = v68;\n
    *(v138) = *(v138) + 1;\n
    v107 = a0;\n
    v106 = a1;\n
    *(&v104) = *(v107);\n
    memset(&v103, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v104[0] << 24))\n
    {\n
        v13 = 0;\n
        if ((v104[1] << 16))\n
        {\n
            v13 = 0;\n
            if ((v104[2] << 8))\n
                v13 = v104[3];\n
        }\n
    }\n
    v105 = v13 & 1;\n
    cgc_uint2str(&v103, 12, v105);\n
    v12 = &v103;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v139 = v106;\n
    *(v139) = *(v139) - 4;\n
    v140 = v107;\n
    *(v140) = *(v140) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 4);\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    cgc_uint2str(&v61, 4, v62);\n
    v11 = &v61;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v141 = v63;\n
    *(v141) = *(v141) - 1;\n
    v142 = v64;\n
    *(v142) = *(v142) + 1;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 4);\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    cgc_uint2str(&v57, 4, v58);\n
    v10 = &v57;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v143 = v59;\n
    *(v143) = *(v143) - 1;\n
    v144 = v60;\n
    *(v144) = *(v144) + 1;\n
    v77 = a0;\n
    v76 = a1;\n
    v75 = &*(v77);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = v76;\n
    *(v145) = *(v145) - 2;\n
    v146 = v77;\n
    *(v146) = *(v146) + 2;\n
    v19 = *(v75);\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(v39)->field_0;\n
    v147 = v38;\n
    *(v147) = *(v147) - 1;\n
    v148 = v39;\n
    *(v148) = *(v148) + 1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_415266;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_415266:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v149 = v39;\n
    *(v149) = &(*(v149))[v37];\n
    v150 = v38;\n
    *(v150) = *(v150) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 12);\n
    if (*(v84) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    cgc_uint2str(&v82, 12, v83);\n
    v9 = &v82;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v151 = v84;\n
    *(v151) = *(v151) - 4;\n
    v152 = v85;\n
    *(v152) = *(v152) + 4;\n
    v97 = a0;\n
    v96 = a1;\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(&*(v97));\n
    v153 = v96;\n
    *(v153) = *(v153) - 2;\n
    v154 = v97;\n
    *(v154) = *(v154) + 2;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_415537;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_415537:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v155 = v96;\n
    *(v155) = *(v155) - v95;\n
    v156 = v97;\n
    *(v156) = &(*(v156))[v95];\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 6, v54);\n
    v8 = &v53;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v157 = v55;\n
    *(v157) = *(v157) - 2;\n
    v158 = v56;\n
    *(v158) = *(v158) + 2;\n
    v74 = a0;\n
    v73 = a1;\n
    v72 = &*(v74);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = v73;\n
    *(v159) = *(v159) - 2;\n
    v160 = v74;\n
    *(v160) = *(v160) + 2;\n
    v19 = *(v72);\n
    v102 = a0;\n
    v101 = a1;\n
    *(&v99) = *(v102);\n
    memset(&v98, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((v99[0] << 24))\n
    {\n
        v7 = 0;\n
        if ((v99[1] << 16))\n
        {\n
            v7 = 0;\n
            if ((v99[2] << 8))\n
                v7 = v99[3];\n
        }\n
    }\n
    v100 = v7 & 1;\n
    cgc_uint2str(&v98, 12, v100);\n
    v6 = &v98;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v161 = v101;\n
    *(v161) = *(v161) - 4;\n
    v162 = v102;\n
    *(v162) = *(v162) + 4;\n
    v123 = a0;\n
    v122 = a1;\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(v123)->field_0;\n
    v163 = v122;\n
    *(v163) = *(v163) - 1;\n
    v164 = v123;\n
    *(v164) = *(v164) + 1;\n
    if (v121 <= *(v122) && !(!v121))\n
        goto LABEL_415a14;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_415a14:\n
    v120 = cgc_calloc(v121);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v120, *(v123), v121);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v165 = v123;\n
    *(v165) = &(*(v165))[v121];\n
    v166 = v122;\n
    *(v166) = *(v166) - v121;\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    v71 = a0;\n
    v70 = a1;\n
    v69 = &*(v71);\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v167 = v70;\n
    *(v167) = *(v167) - 2;\n
    v168 = v71;\n
    *(v168) = *(v168) + 2;\n
    v19 = *(v69);\n
    v111 = a0;\n
    v110 = a1;\n
    if (*(v110) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v110) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v110);\n
    v109 = v5;\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = cgc_calloc(134);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v108, \"Str: \");\n
    cgc_strncpy(v108 + 5, *(v111), v109);\n
    v170 = v111;\n
    *(v170) = &(*(v170))[4 + cgc_strlen(v108)];\n
    v172 = v110;\n
    *(v172) = *(v172) - (cgc_strlen(v108) + -4);\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(&*(v93));\n
    cgc_uint2str(&v90, 12, v91);\n
    v4 = &v90;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v173 = v92;\n
    *(v173) = *(v173) - 4;\n
    v174 = v93;\n
    *(v174) = *(v174) + 4;\n
    v35 = a0;\n
    v34 = a1;\n
    if (*(v34) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(v35)->field_0;\n
    v175 = v34;\n
    *(v175) = *(v175) - 1;\n
    v176 = v35;\n
    *(v176) = *(v176) + 1;\n
    if (v33 <= *(v34) && !(!v33))\n
        goto LABEL_415f63;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_415f63:\n
    v32 = cgc_calloc(v33);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v32, *(v35), v33);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v177 = v35;\n
    *(v177) = &(*(v177))[v33];\n
    v178 = v34;\n
    *(v178) = *(v178) - v33;\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    v49 = a0;\n
    v48 = a1;\n
    v47 = &*(v49)->field_0;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = v48;\n
    *(v179) = *(v179) - 1;\n
    v180 = v49;\n
    *(v180) = *(v180) + 1;\n
    v19 = *(v47);\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 12);\n
    if (*(v88) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(&*(v89));\n
    cgc_uint2str(&v86, 12, v87);\n
    v3 = &v86;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v181 = v88;\n
    *(v181) = *(v181) - 4;\n
    v182 = v89;\n
    *(v182) = *(v182) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v79) = *(&*(v81));\n
    cgc_uint2str(&v78, 21, *(&v79));\n
    v2 = &v78;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v183 = v80;\n
    *(v183) = *(v183) - 8;\n
    v184 = v81;\n
    *(v184) = *(v184) + 8;\n
    v46 = a0;\n
    v45 = a1;\n
    v44 = &*(v46)->field_0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = v45;\n
    *(v185) = *(v185) - 1;\n
    v186 = v46;\n
    *(v186) = *(v186) + 1;\n
    v19 = *(v44);\n
    v26 = a0;\n
    v25 = a1;\n
    *(&v23) = *(v26);\n
    memset(&v22, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v23[0] << 8))\n
        v1 = v23[1];\n
    v24 = v1 & 1;\n
    cgc_uint2str(&v22, 6, v24);\n
    v0 = &v22;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v187 = v25;\n
    *(v187) = *(v187) - 2;\n
    v188 = v26;\n
    *(v188) = *(v188) + 2;\n
    v20 ^= cgc__cookie;\n
    if (v20)\n
        cgc___stack_cookie_fail();\n
    v189 = a1;\n
    if (*(a1) > 0 && v19 >= 0)\n
    {\n
        v189 = v19;\n
        if (v189 < 1)\n
            v189 = (&v21)[v19](a0, a1);\n
    }\n
    return v189;\n
}\n
", "4285795:sub_416563": null, "4285808:cgc_process_llamamarket": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c61c0;\n
extern unsigned long long g_4c61c8;\n
extern unsigned long long g_4c61d0;\n
extern unsigned long long g_4c61d8;\n
\n
long long cgc_process_llamamarket(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x808]\n
    struct_1 *v1;  // [bp-0x800]\n
    struct_1 *v2;  // [bp-0x7f8]\n
    unsigned int v3;  // [bp-0x7ec]\n
    struct_1 *v4;  // [bp-0x7e8]\n
    char v5;  // [bp-0x7d9]\n
    struct_1 *v6;  // [bp-0x7d8]\n
    char v7;  // [bp-0x7c9]\n
    unsigned int v8;  // [bp-0x7c8]\n
    unsigned int v9;  // [bp-0x7c4]\n
    struct_1 *v10;  // [bp-0x7c0]\n
    unsigned int v11;  // [bp-0x7b4]\n
    struct_1 *v12;  // [bp-0x7b0]\n
    char v13;  // [bp-0x7a1]\n
    struct_1 *v14;  // [bp-0x7a0]\n
    char v15;  // [bp-0x795]\n
    unsigned int v16;  // [bp-0x794]\n
    struct_1 *v17;  // [bp-0x790]\n
    unsigned int v18;  // [bp-0x784]\n
    struct_1 *v19;  // [bp-0x780]\n
    char v20;  // [bp-0x771]\n
    struct_1 *v21;  // [bp-0x770]\n
    char v22;  // [bp-0x761]\n
    struct_1 *v23;  // [bp-0x760]\n
    struct_1 *v24;  // [bp-0x758]\n
    char v25;  // [bp-0x749]\n
    struct_1 *v26;  // [bp-0x748]\n
    struct_1 *v27;  // [bp-0x740]\n
    char v28;  // [bp-0x731]\n
    struct_1 *v29;  // [bp-0x730]\n
    unsigned int v30;  // [bp-0x724]\n
    struct_1 *v31;  // [bp-0x720]\n
    struct_1 *v32;  // [bp-0x718]\n
    char v33;  // [bp-0x709]\n
    struct_1 *v34;  // [bp-0x708]\n
    char v35;  // [bp-0x6f9]\n
    struct_1 *v36;  // [bp-0x6f8]\n
    unsigned int v37;  // [bp-0x6f0]\n
    unsigned int v38;  // [bp-0x6ec]\n
    unsigned long v39;  // [bp-0x6e8]\n
    unsigned long v40;  // [bp-0x6e0]\n
    unsigned long v41;  // [bp-0x6d8]\n
    unsigned long v42;  // [bp-0x6d0]\n
    char v43;  // [bp-0x6ae]\n
    char v44[2];  // [bp-0x6a8]\n
    unsigned short v45;  // [bp-0x69a]\n
    unsigned int *v46;  // [bp-0x698]\n
    struct struct_0 **v47;  // [bp-0x690]\n
    char v48;  // [bp-0x686]\n
    char v49[2];  // [bp-0x680]\n
    unsigned short v50;  // [bp-0x672]\n
    unsigned int *v51;  // [bp-0x670]\n
    struct struct_0 **v52;  // [bp-0x668]\n
    char v53;  // [bp-0x65e]\n
    char v54[2];  // [bp-0x658]\n
    unsigned short v55;  // [bp-0x64a]\n
    unsigned int *v56;  // [bp-0x648]\n
    struct struct_0 **v57;  // [bp-0x640]\n
    char v58;  // [bp-0x636]\n
    char v59[8];  // [bp-0x630]\n
    unsigned short v60;  // [bp-0x622]\n
    unsigned int *v61;  // [bp-0x620]\n
    struct struct_0 **v62;  // [bp-0x618]\n
    char v63;  // [bp-0x60e]\n
    char v64[2];  // [bp-0x608]\n
    unsigned short v65;  // [bp-0x5fa]\n
    unsigned int *v66;  // [bp-0x5f8]\n
    struct struct_0 **v67;  // [bp-0x5f0]\n
    char v68;  // [bp-0x5e8]\n
    char v69[8];  // [bp-0x5c8]\n
    unsigned int v70;  // [bp-0x5c0]\n
    unsigned int *v71;  // [bp-0x5b8]\n
    struct struct_0 **v72;  // [bp-0x5b0]\n
    char v73;  // [bp-0x5a8]\n
    char *v74;  // [bp-0x588]\n
    unsigned int v75;  // [bp-0x580]\n
    unsigned int *v76;  // [bp-0x578]\n
    struct struct_0 **v77;  // [bp-0x570]\n
    char v78;  // [bp-0x568]\n
    char v79[8];  // [bp-0x548]\n
    unsigned int v80;  // [bp-0x540]\n
    unsigned int *v81;  // [bp-0x538]\n
    struct struct_0 **v82;  // [bp-0x530]\n
    unsigned long v83;  // [bp-0x528]\n
    char v84;  // [bp-0x519]\n
    unsigned int *v85;  // [bp-0x518]\n
    struct struct_0 **v86;  // [bp-0x510]\n
    unsigned long v87;  // [bp-0x508]\n
    char v88;  // [bp-0x4f9]\n
    unsigned int *v89;  // [bp-0x4f8]\n
    struct struct_0 **v90;  // [bp-0x4f0]\n
    unsigned long v91;  // [bp-0x4e8]\n
    char v92;  // [bp-0x4d9]\n
    unsigned int *v93;  // [bp-0x4d8]\n
    struct struct_0 **v94;  // [bp-0x4d0]\n
    unsigned long v95;  // [bp-0x4c8]\n
    char v96;  // [bp-0x4b9]\n
    unsigned int *v97;  // [bp-0x4b8]\n
    struct struct_0 **v98;  // [bp-0x4b0]\n
    unsigned long v99;  // [bp-0x4a8]\n
    char v100;  // [bp-0x499]\n
    unsigned int *v101;  // [bp-0x498]\n
    struct struct_0 **v102;  // [bp-0x490]\n
    char *v103;  // [bp-0x488]\n
    unsigned int *v104;  // [bp-0x480]\n
    struct struct_0 **v105;  // [bp-0x478]\n
    char v106[8];  // [bp-0x470]\n
    unsigned int *v107;  // [bp-0x468]\n
    struct struct_0 **v108;  // [bp-0x460]\n
    char v109;  // [bp-0x458]\n
    unsigned int v110;  // [bp-0x440]\n
    unsigned int *v111;  // [bp-0x438]\n
    struct struct_0 **v112;  // [bp-0x430]\n
    char v113;  // [bp-0x428]\n
    unsigned int v114;  // [bp-0x410]\n
    unsigned int *v115;  // [bp-0x408]\n
    struct struct_0 **v116;  // [bp-0x400]\n
    char v117;  // [bp-0x3f8]\n
    unsigned int v118;  // [bp-0x3e0]\n
    unsigned int *v119;  // [bp-0x3d8]\n
    struct struct_0 **v120;  // [bp-0x3d0]\n
    char v121;  // [bp-0x3c8]\n
    unsigned int v122;  // [bp-0x3bc]\n
    unsigned int *v123;  // [bp-0x3b8]\n
    struct struct_0 **v124;  // [bp-0x3b0]\n
    char v125;  // [bp-0x3a8]\n
    unsigned int v126;  // [bp-0x39c]\n
    unsigned int *v127;  // [bp-0x398]\n
    struct struct_0 **v128;  // [bp-0x390]\n
    char v129;  // [bp-0x388]\n
    unsigned int v130;  // [bp-0x37c]\n
    unsigned int *v131;  // [bp-0x378]\n
    struct struct_0 **v132;  // [bp-0x370]\n
    char v133;  // [bp-0x368]\n
    unsigned int v134;  // [bp-0x35c]\n
    unsigned int *v135;  // [bp-0x358]\n
    struct struct_0 **v136;  // [bp-0x350]\n
    char v137;  // [bp-0x348]\n
    unsigned int v138;  // [bp-0x33c]\n
    unsigned int *v139;  // [bp-0x338]\n
    struct struct_0 **v140;  // [bp-0x330]\n
    unsigned long v141;  // [bp-0x328]\n
    unsigned short v142;  // [bp-0x31a]\n
    unsigned int *v143;  // [bp-0x318]\n
    struct struct_0 **v144;  // [bp-0x310]\n
    unsigned long v145;  // [bp-0x308]\n
    unsigned short v146;  // [bp-0x2fa]\n
    unsigned int *v147;  // [bp-0x2f8]\n
    struct struct_0 **v148;  // [bp-0x2f0]\n
    unsigned long v149;  // [bp-0x2e8]\n
    unsigned short v150;  // [bp-0x2da]\n
    unsigned int *v151;  // [bp-0x2d8]\n
    struct struct_0 **v152;  // [bp-0x2d0]\n
    unsigned long v153;  // [bp-0x2c8]\n
    unsigned short v154;  // [bp-0x2ba]\n
    unsigned int *v155;  // [bp-0x2b8]\n
    struct struct_0 **v156;  // [bp-0x2b0]\n
    unsigned long v157;  // [bp-0x2a8]\n
    unsigned short v158;  // [bp-0x29a]\n
    unsigned int *v159;  // [bp-0x298]\n
    struct struct_0 **v160;  // [bp-0x290]\n
    unsigned long v161;  // [bp-0x288]\n
    unsigned short v162;  // [bp-0x27a]\n
    unsigned int *v163;  // [bp-0x278]\n
    struct struct_0 **v164;  // [bp-0x270]\n
    unsigned long v165;  // [bp-0x268]\n
    unsigned short v166;  // [bp-0x25a]\n
    unsigned int *v167;  // [bp-0x258]\n
    struct struct_0 **v168;  // [bp-0x250]\n
    char v169;  // [bp-0x244]\n
    char v170[4];  // [bp-0x238]\n
    unsigned int v171;  // [bp-0x22c]\n
    unsigned int *v172;  // [bp-0x228]\n
    struct struct_0 **v173;  // [bp-0x220]\n
    char v174;  // [bp-0x214]\n
    char v175[4];  // [bp-0x208]\n
    unsigned int v176;  // [bp-0x1fc]\n
    unsigned int *v177;  // [bp-0x1f8]\n
    struct struct_0 **v178;  // [bp-0x1f0]\n
    char *v179;  // [bp-0x1e8]\n
    unsigned int v180;  // [bp-0x1dc]\n
    unsigned int *v181;  // [bp-0x1d8]\n
    struct struct_0 **v182;  // [bp-0x1d0]\n
    char *v183;  // [bp-0x1c8]\n
    unsigned int v184;  // [bp-0x1bc]\n
    unsigned int *v185;  // [bp-0x1b8]\n
    struct struct_0 **v186;  // [bp-0x1b0]\n
    char *v187;  // [bp-0x1a8]\n
    unsigned int v188;  // [bp-0x19c]\n
    unsigned int *v189;  // [bp-0x198]\n
    struct struct_0 **v190;  // [bp-0x190]\n
    char *v191;  // [bp-0x188]\n
    unsigned int v192;  // [bp-0x17c]\n
    unsigned int *v193;  // [bp-0x178]\n
    struct struct_0 **v194;  // [bp-0x170]\n
    char *v195;  // [bp-0x168]\n
    unsigned int v196;  // [bp-0x15c]\n
    unsigned int *v197;  // [bp-0x158]\n
    struct struct_0 **v198;  // [bp-0x150]\n
    char *v199;  // [bp-0x148]\n
    unsigned int v200;  // [bp-0x13c]\n
    unsigned int *v201;  // [bp-0x138]\n
    struct struct_0 **v202;  // [bp-0x130]\n
    char *v203;  // [bp-0x128]\n
    unsigned int v204;  // [bp-0x11c]\n
    unsigned int *v205;  // [bp-0x118]\n
    struct struct_0 **v206;  // [bp-0x110]\n
    char v207;  // [bp-0x108]\n
    unsigned int v208;  // [bp-0xf0]\n
    unsigned int *v209;  // [bp-0xe8]\n
    struct struct_0 **v210;  // [bp-0xe0]\n
    char v211;  // [bp-0xd8]\n
    unsigned int v212;  // [bp-0xc0]\n
    unsigned int *v213;  // [bp-0xb8]\n
    struct struct_0 **v214;  // [bp-0xb0]\n
    unsigned long v215;  // [bp-0xa8]\n
    char v216;  // [bp-0x99]\n
    unsigned int *v217;  // [bp-0x98]\n
    struct struct_0 **v218;  // [bp-0x90]\n
    unsigned long v219;  // [bp-0x88]\n
    char v220;  // [bp-0x79]\n
    unsigned int *v221;  // [bp-0x78]\n
    struct struct_0 **v222;  // [bp-0x70]\n
    unsigned long v223;  // [bp-0x68]\n
    char v224;  // [bp-0x59]\n
    unsigned int *v225;  // [bp-0x58]\n
    struct struct_0 **v226;  // [bp-0x50]\n
    unsigned long v227;  // [bp-0x48]\n
    char v228;  // [bp-0x39]\n
    unsigned int *v229;  // [bp-0x38]\n
    struct struct_0 **v230;  // [bp-0x30]\n
    unsigned long v231;  // [bp-0x28]\n
    char v232;  // [bp-0x19]\n
    unsigned int *v233;  // [bp-0x18]\n
    struct struct_0 **v234;  // [bp-0x10]\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_0 **v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    struct struct_0 **v290;  // rax\n
    unsigned int *v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_0 **v299;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v303;  // rax\n
    unsigned int *v304;  // rax\n
    struct struct_0 **v305;  // rax\n
    unsigned int *v306;  // rax\n
    struct struct_0 **v307;  // rax\n
    struct struct_0 **v309;  // rax\n
    unsigned int *v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    struct struct_0 **v314;  // rax\n
    unsigned int *v315;  // rax\n
    unsigned int *v316;  // rax\n
    struct struct_0 **v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_0 **v319;  // rax\n
    struct struct_0 **v320;  // rax\n
    unsigned int *v321;  // rax\n
    unsigned int *v322;  // rax\n
    struct struct_0 **v323;  // rax\n
    struct struct_0 **v325;  // rax\n
    unsigned int *v327;  // rax\n
    unsigned int *v328;  // rax\n
    struct struct_0 **v329;  // rax\n
    unsigned int *v330;  // rax\n
    struct struct_0 **v331;  // rax\n
    struct struct_0 **v332;  // rax\n
    unsigned int *v333;  // rax\n
    unsigned int *v334;  // rax\n
    struct struct_0 **v335;  // rax\n
    struct struct_0 **v336;  // rax\n
    unsigned int *v337;  // rax\n
    unsigned int *v338;  // rax\n
    struct struct_0 **v339;  // rax\n
    unsigned int *v340;  // rax\n
    struct struct_0 **v341;  // rax\n
    unsigned int *v342;  // rax\n
    struct struct_0 **v343;  // rax\n
    struct struct_0 **v344;  // rax\n
    unsigned int *v345;  // rax\n
    struct struct_0 **v347;  // rax\n
    unsigned int *v349;  // rax\n
    struct struct_0 **v351;  // rax\n
    unsigned int *v353;  // rax\n
    unsigned int *v354;  // rax\n
    struct struct_0 **v355;  // rax\n
    unsigned int *v356;  // rax\n
    struct struct_0 **v357;  // rax\n
    unsigned int *v358;  // rax\n
    struct struct_0 **v359;  // rax\n
    unsigned int *v360;  // rax\n
    struct struct_0 **v361;  // rax\n
    struct struct_0 **v363;  // rax\n
    unsigned int *v365;  // rax\n
    unsigned int *v366;  // rax\n
    struct struct_0 **v367;  // rax\n
    unsigned int *v368;  // rax\n
    struct struct_0 **v369;  // rax\n
    struct struct_0 **v370;  // rax\n
    unsigned int *v371;  // rax\n
    unsigned int *v372;  // rax\n
    struct struct_0 **v373;  // rax\n
    unsigned int *v374;  // rax\n
    struct struct_0 **v375;  // rax\n
    unsigned int *v376;  // rax, Other Possible Types: unsigned long\n
\n
    v39 = g_4c61c0;\n
    v40 = g_4c61c8;\n
    v41 = g_4c61d0;\n
    v42 = g_4c61d8;\n
    v38 = cgc__cookie;\n
    v37 = -1;\n
    if (cgc_sendline(1, \"===llamamarket===\", 17) < 0)\n
        cgc__terminate(1);\n
    v102 = a0;\n
    v101 = a1;\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(v102)->field_0;\n
    v236 = v101;\n
    *(v236) = *(v236) - 1;\n
    v237 = v102;\n
    *(v237) = *(v237) + 1;\n
    if (v100 <= *(v101) && !(!v100))\n
        goto LABEL_4166f2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4166f2:\n
    v99 = cgc_calloc(v100);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v99, *(v102), v100);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v238 = v102;\n
    *(v238) = &(*(v238))[v100];\n
    v239 = v101;\n
    *(v239) = *(v239) - v100;\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    v214 = a0;\n
    v213 = a1;\n
    memset(&v211, 0, 21);\n
    if (*(v213) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v212) = *(&*(v214));\n
    cgc_uint2str(&v211, 21, *(&v212));\n
    v36 = &v211;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v211)) < 0)\n
        cgc__terminate(1);\n
    v240 = v213;\n
    *(v240) = *(v240) - 8;\n
    v241 = v214;\n
    *(v241) = *(v241) + 8;\n
    v82 = a0;\n
    v81 = a1;\n
    *(&v79[0]) = *(v82);\n
    memset(&v78, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if (v79[0] << 56)\n
    {\n
        v35 = 0;\n
        if (v79[1] << 48)\n
        {\n
            v35 = 0;\n
            if (v79[2] << 40)\n
            {\n
                v35 = 0;\n
                if (v79[3] << 32)\n
                {\n
                    v35 = 0;\n
                    if ((v79[4] << 24))\n
                    {\n
                        v35 = 0;\n
                        if ((v79[5] << 16))\n
                        {\n
                            v35 = 0;\n
                            if ((v79[6] << 8))\n
                                v35 = v79[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v80) = v35 & 1;\n
    cgc_uint2str(&v78, 21, *(&v80));\n
    v34 = &v78;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v242 = v81;\n
    *(v242) = *(v242) - 8;\n
    v243 = v82;\n
    *(v243) = *(v243) + 8;\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = *(&*(v168));\n
    v244 = v167;\n
    *(v244) = *(v244) - 2;\n
    v245 = v168;\n
    *(v245) = *(v245) + 2;\n
    if (v166 <= *(v167) && !(!v166))\n
        goto LABEL_416bde;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_416bde:\n
    v165 = cgc_calloc(v166);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v165, *(v168), v166);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v246 = v167;\n
    *(v246) = *(v246) - v166;\n
    v247 = v168;\n
    *(v247) = &(*(v247))[v166];\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    v164 = a0;\n
    v163 = a1;\n
    if (*(v163) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = *(&*(v164));\n
    v248 = v163;\n
    *(v248) = *(v248) - 2;\n
    v249 = v164;\n
    *(v249) = *(v249) + 2;\n
    if (v162 <= *(v163) && !(!v162))\n
        goto LABEL_416dae;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_416dae:\n
    v161 = cgc_calloc(v162);\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v161, *(v164), v162);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v250 = v163;\n
    *(v250) = *(v250) - v162;\n
    v251 = v164;\n
    *(v251) = &(*(v251))[v162];\n
    cgc_checkheap();\n
    cgc_free(v161);\n
    v234 = a0;\n
    v233 = a1;\n
    if (*(v233) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v232 = *(v234)->field_0;\n
    v252 = v233;\n
    *(v252) = *(v252) - 1;\n
    v253 = v234;\n
    *(v253) = *(v253) + 1;\n
    if (v232 <= *(v233) && !(!v232))\n
        goto LABEL_416f5e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_416f5e:\n
    v231 = cgc_calloc(v232);\n
    if (!v231)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v231, *(v234), v232);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v254 = v234;\n
    *(v254) = &(*(v254))[v232];\n
    v255 = v233;\n
    *(v255) = *(v255) - v232;\n
    cgc_checkheap();\n
    cgc_free(v231);\n
    v67 = a0;\n
    v66 = a1;\n
    *(&v64) = *(v67);\n
    memset(&v63, 0, 6);\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = 0;\n
    if ((v64[0] << 8))\n
        v33 = v64[1];\n
    v65 = v33 & 1;\n
    cgc_uint2str(&v63, 6, v65);\n
    v32 = &v63;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v256 = v66;\n
    *(v256) = *(v256) - 2;\n
    v257 = v67;\n
    *(v257) = *(v257) + 2;\n
    v230 = a0;\n
    v229 = a1;\n
    if (*(v229) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v228 = *(v230)->field_0;\n
    v258 = v229;\n
    *(v258) = *(v258) - 1;\n
    v259 = v230;\n
    *(v259) = *(v259) + 1;\n
    if (v228 <= *(v229) && !(!v228))\n
        goto LABEL_417235;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_417235:\n
    v227 = cgc_calloc(v228);\n
    if (!v227)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v227, *(v230), v228);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v260 = v230;\n
    *(v260) = &(*(v260))[v228];\n
    v261 = v229;\n
    *(v261) = *(v261) - v228;\n
    cgc_checkheap();\n
    cgc_free(v227);\n
    v152 = a0;\n
    v151 = a1;\n
    if (*(v151) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v150 = *(&*(v152));\n
    v262 = v151;\n
    *(v262) = *(v262) - 2;\n
    v263 = v152;\n
    *(v263) = *(v263) + 2;\n
    if (v150 <= *(v151) && !(!v150))\n
        goto LABEL_4173e4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4173e4:\n
    v149 = cgc_calloc(v150);\n
    if (!v149)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v149, *(v152), v150);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v264 = v151;\n
    *(v264) = *(v264) - v150;\n
    v265 = v152;\n
    *(v265) = &(*(v265))[v150];\n
    cgc_checkheap();\n
    cgc_free(v149);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 21);\n
    if (*(v119) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v118) = *(&*(v120));\n
    cgc_uint2str(&v117, 21, *(&v118));\n
    v31 = &v117;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v266 = v119;\n
    *(v266) = *(v266) - 8;\n
    v267 = v120;\n
    *(v267) = *(v267) + 8;\n
    v148 = a0;\n
    v147 = a1;\n
    if (*(v147) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    v268 = v147;\n
    *(v268) = *(v268) - 2;\n
    v269 = v148;\n
    *(v269) = *(v269) + 2;\n
    if (v146 <= *(v147) && !(!v146))\n
        goto LABEL_4176be;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4176be:\n
    v145 = cgc_calloc(v146);\n
    if (!v145)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v145, *(v148), v146);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v270 = v147;\n
    *(v270) = *(v270) - v146;\n
    v271 = v148;\n
    *(v271) = &(*(v271))[v146];\n
    cgc_checkheap();\n
    cgc_free(v145);\n
    v206 = a0;\n
    v205 = a1;\n
    if (*(v205) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v205) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v205);\n
    v204 = v30;\n
    if (!v204)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v203 = cgc_calloc(134);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v203, \"Str: \");\n
    cgc_strncpy(v203 + 5, *(v206), v204);\n
    v273 = v206;\n
    *(v273) = &(*(v273))[4 + cgc_strlen(v203)];\n
    v275 = v205;\n
    *(v275) = *(v275) - (cgc_strlen(v203) + -4);\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    cgc_uint2str(&v125, 12, v126);\n
    v29 = &v125;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v276 = v127;\n
    *(v276) = *(v276) - 4;\n
    v277 = v128;\n
    *(v277) = *(v277) + 4;\n
    v62 = a0;\n
    v61 = a1;\n
    *(&v59[0]) = *(v62);\n
    memset(&v58, 0, 6);\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = 0;\n
    if ((v59[0] << 8))\n
        v28 = v59[1];\n
    v60 = v28 & 1;\n
    cgc_uint2str(&v58, 6, v60);\n
    v27 = &v58;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v278 = v61;\n
    *(v278) = *(v278) - 2;\n
    v279 = v62;\n
    *(v279) = *(v279) + 2;\n
    v108 = a0;\n
    v107 = a1;\n
    *(&v106[0]) = *(v108);\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v280 = v107;\n
    *(v280) = *(v280) - 2;\n
    v281 = v108;\n
    *(v281) = *(v281) + 2;\n
    v37 = *(&v106[0]);\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 21);\n
    if (*(v115) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v114) = *(&*(v116));\n
    cgc_uint2str(&v113, 21, *(&v114));\n
    v26 = &v113;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v282 = v115;\n
    *(v282) = *(v282) - 8;\n
    v283 = v116;\n
    *(v283) = *(v283) + 8;\n
    v178 = a0;\n
    v177 = a1;\n
    *(&v175) = *(v178);\n
    memset(&v174, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if ((v175[0] << 24))\n
    {\n
        v25 = 0;\n
        if ((v175[1] << 16))\n
        {\n
            v25 = 0;\n
            if ((v175[2] << 8))\n
                v25 = v175[3];\n
        }\n
    }\n
    v176 = v25 & 1;\n
    cgc_uint2str(&v174, 12, v176);\n
    v24 = &v174;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v174)) < 0)\n
        cgc__terminate(1);\n
    v284 = v177;\n
    *(v284) = *(v284) - 4;\n
    v285 = v178;\n
    *(v285) = *(v285) + 4;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    cgc_uint2str(&v121, 12, v122);\n
    v23 = &v121;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v286 = v123;\n
    *(v286) = *(v286) - 4;\n
    v287 = v124;\n
    *(v287) = *(v287) + 4;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(v98)->field_0;\n
    v288 = v97;\n
    *(v288) = *(v288) - 1;\n
    v289 = v98;\n
    *(v289) = *(v289) + 1;\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_4180fc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4180fc:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v290 = v98;\n
    *(v290) = &(*(v290))[v96];\n
    v291 = v97;\n
    *(v291) = *(v291) - v96;\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v173 = a0;\n
    v172 = a1;\n
    *(&v170) = *(v173);\n
    memset(&v169, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v170[0] << 24))\n
    {\n
        v22 = 0;\n
        if ((v170[1] << 16))\n
        {\n
            v22 = 0;\n
            if ((v170[2] << 8))\n
                v22 = v170[3];\n
        }\n
    }\n
    v171 = v22 & 1;\n
    cgc_uint2str(&v169, 12, v171);\n
    v21 = &v169;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v169)) < 0)\n
        cgc__terminate(1);\n
    v292 = v172;\n
    *(v292) = *(v292) - 4;\n
    v293 = v173;\n
    *(v293) = *(v293) + 4;\n
    v160 = a0;\n
    v159 = a1;\n
    if (*(v159) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = *(&*(v160));\n
    v294 = v159;\n
    *(v294) = *(v294) - 2;\n
    v295 = v160;\n
    *(v295) = *(v295) + 2;\n
    if (v158 <= *(v159) && !(!v158))\n
        goto LABEL_418450;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_418450:\n
    v157 = cgc_calloc(v158);\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v157, *(v160), v158);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v296 = v159;\n
    *(v296) = *(v296) - v158;\n
    v297 = v160;\n
    *(v297) = &(*(v297))[v158];\n
    cgc_checkheap();\n
    cgc_free(v157);\n
    v77 = a0;\n
    v76 = a1;\n
    v74 = &*(v77)->field_0;\n
    memset(&v73, 0, 21);\n
    if (*(v76) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (*(v74) << 56)\n
    {\n
        v20 = 0;\n
        if (v74[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v74[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v74[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v74[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v74[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v74[6] << 8))\n
                                v20 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v75) = v20 & 1;\n
    cgc_uint2str(&v73, 21, *(&v75));\n
    v19 = &v73;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v298 = v76;\n
    *(v298) = *(v298) - 8;\n
    v299 = v77;\n
    *(v299) = *(v299) + 8;\n
    v202 = a0;\n
    v201 = a1;\n
    if (*(v201) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v201) >= 128)\n
        v18 = 128;\n
    else\n
        v18 = *(v201);\n
    v200 = v18;\n
    if (!v200)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v199 = cgc_calloc(134);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v199, \"Str: \");\n
    cgc_strncpy(v199 + 5, *(v202), v200);\n
    v301 = v202;\n
    *(v301) = &(*(v301))[4 + cgc_strlen(v199)];\n
    v303 = v201;\n
    *(v303) = *(v303) - (cgc_strlen(v199) + -4);\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v105 = a0;\n
    v104 = a1;\n
    v103 = &*(v105)->field_0;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v304 = v104;\n
    *(v304) = *(v304) - 1;\n
    v305 = v105;\n
    *(v305) = *(v305) + 1;\n
    v37 = *(v103);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 21);\n
    if (*(v111) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v110) = *(&*(v112));\n
    cgc_uint2str(&v109, 21, *(&v110));\n
    v17 = &v109;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v306 = v111;\n
    *(v306) = *(v306) - 8;\n
    v307 = v112;\n
    *(v307) = *(v307) + 8;\n
    v198 = a0;\n
    v197 = a1;\n
    if (*(v197) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v197) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v197);\n
    v196 = v16;\n
    if (!v196)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v195 = cgc_calloc(134);\n
    if (!v195)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v195, \"Str: \");\n
    cgc_strncpy(v195 + 5, *(v198), v196);\n
    v309 = v198;\n
    *(v309) = &(*(v309))[4 + cgc_strlen(v195)];\n
    v311 = v197;\n
    *(v311) = *(v311) - (cgc_strlen(v195) + -4);\n
    cgc_checkheap();\n
    cgc_free(v195);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(v94)->field_0;\n
    v312 = v93;\n
    *(v312) = *(v312) - 1;\n
    v313 = v94;\n
    *(v313) = *(v313) + 1;\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_418dc9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_418dc9:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v314 = v94;\n
    *(v314) = &(*(v314))[v92];\n
    v315 = v93;\n
    *(v315) = *(v315) - v92;\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54) = *(v57);\n
    memset(&v53, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v54[0] << 8))\n
        v15 = v54[1];\n
    v55 = v15 & 1;\n
    cgc_uint2str(&v53, 6, v55);\n
    v14 = &v53;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v316 = v56;\n
    *(v316) = *(v316) - 2;\n
    v317 = v57;\n
    *(v317) = *(v317) + 2;\n
    v226 = a0;\n
    v225 = a1;\n
    if (*(v225) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v224 = *(v226)->field_0;\n
    v318 = v225;\n
    *(v318) = *(v318) - 1;\n
    v319 = v226;\n
    *(v319) = *(v319) + 1;\n
    if (v224 <= *(v225) && !(!v224))\n
        goto LABEL_4190c1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4190c1:\n
    v223 = cgc_calloc(v224);\n
    if (!v223)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v223, *(v226), v224);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v320 = v226;\n
    *(v320) = &(*(v320))[v224];\n
    v321 = v225;\n
    *(v321) = *(v321) - v224;\n
    cgc_checkheap();\n
    cgc_free(v223);\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49) = *(v52);\n
    memset(&v48, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v49[0] << 8))\n
        v13 = v49[1];\n
    v50 = v13 & 1;\n
    cgc_uint2str(&v48, 6, v50);\n
    v12 = &v48;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v322 = v51;\n
    *(v322) = *(v322) - 2;\n
    v323 = v52;\n
    *(v323) = *(v323) + 2;\n
    v194 = a0;\n
    v193 = a1;\n
    if (*(v193) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v193) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v193);\n
    v192 = v11;\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v191 = cgc_calloc(134);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v191, \"Str: \");\n
    cgc_strncpy(v191 + 5, *(v194), v192);\n
    v325 = v194;\n
    *(v325) = &(*(v325))[4 + cgc_strlen(v191)];\n
    v327 = v193;\n
    *(v327) = *(v327) - (cgc_strlen(v191) + -4);\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v140 = a0;\n
    v139 = a1;\n
    memset(&v137, 0, 12);\n
    if (*(v139) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    cgc_uint2str(&v137, 12, v138);\n
    v10 = &v137;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v137)) < 0)\n
        cgc__terminate(1);\n
    v328 = v139;\n
    *(v328) = *(v328) - 4;\n
    v329 = v140;\n
    *(v329) = *(v329) + 4;\n
    v222 = a0;\n
    v221 = a1;\n
    if (*(v221) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v220 = *(v222)->field_0;\n
    v330 = v221;\n
    *(v330) = *(v330) - 1;\n
    v331 = v222;\n
    *(v331) = *(v331) + 1;\n
    if (v220 <= *(v221) && !(!v220))\n
        goto LABEL_419695;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_419695:\n
    v219 = cgc_calloc(v220);\n
    if (!v219)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v219, *(v222), v220);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v332 = v222;\n
    *(v332) = &(*(v332))[v220];\n
    v333 = v221;\n
    *(v333) = *(v333) - v220;\n
    cgc_checkheap();\n
    cgc_free(v219);\n
    v218 = a0;\n
    v217 = a1;\n
    if (*(v217) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v216 = *(v218)->field_0;\n
    v334 = v217;\n
    *(v334) = *(v334) - 1;\n
    v335 = v218;\n
    *(v335) = *(v335) + 1;\n
    if (v216 <= *(v217) && !(!v216))\n
        goto LABEL_419842;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_419842:\n
    v215 = cgc_calloc(v216);\n
    if (!v215)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v215, *(v218), v216);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v336 = v218;\n
    *(v336) = &(*(v336))[v216];\n
    v337 = v217;\n
    *(v337) = *(v337) - v216;\n
    cgc_checkheap();\n
    cgc_free(v215);\n
    v144 = a0;\n
    v143 = a1;\n
    if (*(v143) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    v338 = v143;\n
    *(v338) = *(v338) - 2;\n
    v339 = v144;\n
    *(v339) = *(v339) + 2;\n
    if (v142 <= *(v143) && !(!v142))\n
        goto LABEL_419a12;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_419a12:\n
    v141 = cgc_calloc(v142);\n
    if (!v141)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v141, *(v144), v142);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v340 = v143;\n
    *(v340) = *(v340) - v142;\n
    v341 = v144;\n
    *(v341) = &(*(v341))[v142];\n
    cgc_checkheap();\n
    cgc_free(v141);\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    v342 = v89;\n
    *(v342) = *(v342) - 1;\n
    v343 = v90;\n
    *(v343) = *(v343) + 1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_419be0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_419be0:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v344 = v90;\n
    *(v344) = &(*(v344))[v88];\n
    v345 = v89;\n
    *(v345) = *(v345) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v190 = a0;\n
    v189 = a1;\n
    if (*(v189) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v189) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v189);\n
    v188 = v9;\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v187 = cgc_calloc(134);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v187, \"Str: \");\n
    cgc_strncpy(v187 + 5, *(v190), v188);\n
    v347 = v190;\n
    *(v347) = &(*(v347))[4 + cgc_strlen(v187)];\n
    v349 = v189;\n
    *(v349) = *(v349) - (cgc_strlen(v187) + -4);\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v186 = a0;\n
    v185 = a1;\n
    if (*(v185) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v185) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v185);\n
    v184 = v8;\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v183 = cgc_calloc(134);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v183, \"Str: \");\n
    cgc_strncpy(v183 + 5, *(v186), v184);\n
    v351 = v186;\n
    *(v351) = &(*(v351))[4 + cgc_strlen(v183)];\n
    v353 = v185;\n
    *(v353) = *(v353) - (cgc_strlen(v183) + -4);\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v72 = a0;\n
    v71 = a1;\n
    *(&v69[0]) = *(v72);\n
    memset(&v68, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v69[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v69[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v69[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v69[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v69[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v69[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v69[6] << 8))\n
                                v7 = v69[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v70) = v7 & 1;\n
    cgc_uint2str(&v68, 21, *(&v70));\n
    v6 = &v68;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v354 = v71;\n
    *(v354) = *(v354) - 8;\n
    v355 = v72;\n
    *(v355) = *(v355) + 8;\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44) = *(v47);\n
    memset(&v43, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v44[0] << 8))\n
        v5 = v44[1];\n
    v45 = v5 & 1;\n
    cgc_uint2str(&v43, 6, v45);\n
    v4 = &v43;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v356 = v46;\n
    *(v356) = *(v356) - 2;\n
    v357 = v47;\n
    *(v357) = *(v357) + 2;\n
    v156 = a0;\n
    v155 = a1;\n
    if (*(v155) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = *(&*(v156));\n
    v358 = v155;\n
    *(v358) = *(v358) - 2;\n
    v359 = v156;\n
    *(v359) = *(v359) + 2;\n
    if (v154 <= *(v155) && !(!v154))\n
        goto LABEL_41a4f4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41a4f4:\n
    v153 = cgc_calloc(v154);\n
    if (!v153)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v153, *(v156), v154);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v360 = v155;\n
    *(v360) = *(v360) - v154;\n
    v361 = v156;\n
    *(v361) = &(*(v361))[v154];\n
    cgc_checkheap();\n
    cgc_free(v153);\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v181) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v181);\n
    v180 = v3;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v179, \"Str: \");\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v363 = v182;\n
    *(v363) = &(*(v363))[4 + cgc_strlen(v179)];\n
    v365 = v181;\n
    *(v365) = *(v365) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v210 = a0;\n
    v209 = a1;\n
    memset(&v207, 0, 21);\n
    if (*(v209) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v208) = *(&*(v210));\n
    cgc_uint2str(&v207, 21, *(&v208));\n
    v2 = &v207;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v207)) < 0)\n
        cgc__terminate(1);\n
    v366 = v209;\n
    *(v366) = *(v366) - 8;\n
    v367 = v210;\n
    *(v367) = *(v367) + 8;\n
    v86 = a0;\n
    v85 = a1;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(v86)->field_0;\n
    v368 = v85;\n
    *(v368) = *(v368) - 1;\n
    v369 = v86;\n
    *(v369) = *(v369) + 1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_41a9bb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41a9bb:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v370 = v86;\n
    *(v370) = &(*(v370))[v84];\n
    v371 = v85;\n
    *(v371) = *(v371) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    cgc_uint2str(&v133, 12, v134);\n
    v1 = &v133;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v372 = v135;\n
    *(v372) = *(v372) - 4;\n
    v373 = v136;\n
    *(v373) = *(v373) + 4;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v0 = &v129;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v374 = v131;\n
    *(v374) = *(v374) - 4;\n
    v375 = v132;\n
    *(v375) = *(v375) + 4;\n
    v38 ^= cgc__cookie;\n
    if (v38)\n
        cgc___stack_cookie_fail();\n
    v376 = a1;\n
    if (*(a1) > 0 && v37 >= 0)\n
    {\n
        v376 = v37;\n
        if (v376 < 4)\n
            v376 = (&v39)[v37](a0, a1);\n
    }\n
    return v376;\n
}\n
", "4304169:sub_41ad29": null, "4304176:cgc_process_llamacarbonator": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacarbonator(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x410]\n
    char v1;  // [bp-0x401]\n
    struct_1 *v2;  // [bp-0x400]\n
    struct_1 *v3;  // [bp-0x3f8]\n
    struct_1 *v4;  // [bp-0x3f0]\n
    struct_1 *v5;  // [bp-0x3e8]\n
    char v6;  // [bp-0x3dd]\n
    unsigned int v7;  // [bp-0x3dc]\n
    struct_1 *v8;  // [bp-0x3d8]\n
    struct_1 *v9;  // [bp-0x3d0]\n
    struct_1 *v10;  // [bp-0x3c8]\n
    unsigned int v11;  // [bp-0x3bc]\n
    struct_1 *v12;  // [bp-0x3b8]\n
    struct_1 *v13;  // [bp-0x3b0]\n
    char v14;  // [bp-0x3a1]\n
    struct_1 *v15;  // [bp-0x3a0]\n
    struct_1 *v16;  // [bp-0x398]\n
    char v17;  // [bp-0x389]\n
    struct_1 *v18;  // [bp-0x388]\n
    struct_1 *v19;  // [bp-0x380]\n
    unsigned int v20;  // [bp-0x374]\n
    struct_1 *v21;  // [bp-0x370]\n
    struct_1 *v22;  // [bp-0x368]\n
    unsigned int v23;  // [bp-0x360]\n
    unsigned int v24;  // [bp-0x35c]\n
    char v25;  // [bp-0x358]\n
    char v26;  // [bp-0x33e]\n
    char v27[2];  // [bp-0x338]\n
    unsigned short v28;  // [bp-0x32a]\n
    unsigned int *v29;  // [bp-0x328]\n
    struct struct_0 **v30;  // [bp-0x320]\n
    char v31;  // [bp-0x318]\n
    char *v32;  // [bp-0x2f8]\n
    unsigned int v33;  // [bp-0x2f0]\n
    unsigned int *v34;  // [bp-0x2e8]\n
    struct struct_0 **v35;  // [bp-0x2e0]\n
    char v36;  // [bp-0x2d8]\n
    char *v37;  // [bp-0x2b8]\n
    unsigned int v38;  // [bp-0x2b0]\n
    unsigned int *v39;  // [bp-0x2a8]\n
    struct struct_0 **v40;  // [bp-0x2a0]\n
    unsigned long v41;  // [bp-0x298]\n
    char v42;  // [bp-0x289]\n
    unsigned int *v43;  // [bp-0x288]\n
    struct struct_0 **v44;  // [bp-0x280]\n
    char *v45;  // [bp-0x278]\n
    unsigned int v46;  // [bp-0x26c]\n
    unsigned int *v47;  // [bp-0x268]\n
    struct struct_0 **v48;  // [bp-0x260]\n
    char *v49;  // [bp-0x258]\n
    unsigned int v50;  // [bp-0x24c]\n
    unsigned int *v51;  // [bp-0x248]\n
    struct struct_0 **v52;  // [bp-0x240]\n
    char v53;  // [bp-0x238]\n
    unsigned short v54;  // [bp-0x232]\n
    unsigned int *v55;  // [bp-0x230]\n
    struct struct_0 **v56;  // [bp-0x228]\n
    char v57;  // [bp-0x21d]\n
    char v58;  // [bp-0x219]\n
    unsigned int *v59;  // [bp-0x218]\n
    struct struct_0 **v60;  // [bp-0x210]\n
    char v61;  // [bp-0x205]\n
    char v62;  // [bp-0x201]\n
    unsigned int *v63;  // [bp-0x200]\n
    struct struct_0 **v64;  // [bp-0x1f8]\n
    char v65;  // [bp-0x1ed]\n
    char v66;  // [bp-0x1e9]\n
    unsigned int *v67;  // [bp-0x1e8]\n
    struct struct_0 **v68;  // [bp-0x1e0]\n
    char v69;  // [bp-0x1d8]\n
    unsigned int v70;  // [bp-0x1c0]\n
    unsigned int *v71;  // [bp-0x1b8]\n
    struct struct_0 **v72;  // [bp-0x1b0]\n
    char v73;  // [bp-0x1a8]\n
    unsigned int v74;  // [bp-0x190]\n
    unsigned int *v75;  // [bp-0x188]\n
    struct struct_0 **v76;  // [bp-0x180]\n
    char v77;  // [bp-0x178]\n
    unsigned int v78;  // [bp-0x160]\n
    unsigned int *v79;  // [bp-0x158]\n
    struct struct_0 **v80;  // [bp-0x150]\n
    char v81;  // [bp-0x148]\n
    unsigned int v82;  // [bp-0x130]\n
    unsigned int *v83;  // [bp-0x128]\n
    struct struct_0 **v84;  // [bp-0x120]\n
    char v85;  // [bp-0x118]\n
    unsigned int v86;  // [bp-0x100]\n
    unsigned int *v87;  // [bp-0xf8]\n
    struct struct_0 **v88;  // [bp-0xf0]\n
    char v89;  // [bp-0xe8]\n
    unsigned int v90;  // [bp-0xd0]\n
    unsigned int *v91;  // [bp-0xc8]\n
    struct struct_0 **v92;  // [bp-0xc0]\n
    char v93;  // [bp-0xb8]\n
    unsigned int v94;  // [bp-0xac]\n
    unsigned int *v95;  // [bp-0xa8]\n
    struct struct_0 **v96;  // [bp-0xa0]\n
    char v97;  // [bp-0x98]\n
    unsigned int v98;  // [bp-0x8c]\n
    unsigned int *v99;  // [bp-0x88]\n
    struct struct_0 **v100;  // [bp-0x80]\n
    char v101;  // [bp-0x74]\n
    char v102[4];  // [bp-0x68]\n
    unsigned int v103;  // [bp-0x5c]\n
    unsigned int *v104;  // [bp-0x58]\n
    struct struct_0 **v105;  // [bp-0x50]\n
    char *v106;  // [bp-0x48]\n
    unsigned int v107;  // [bp-0x3c]\n
    unsigned int *v108;  // [bp-0x38]\n
    struct struct_0 **v109;  // [bp-0x30]\n
    unsigned long v110;  // [bp-0x28]\n
    char v111;  // [bp-0x19]\n
    unsigned int *v112;  // [bp-0x18]\n
    struct struct_0 **v113;  // [bp-0x10]\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    struct struct_0 **v129;  // rax\n
    unsigned int *v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    struct struct_0 **v137;  // rax\n
    unsigned int *v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v156;  // rax\n
    unsigned int *v157;  // rax\n
    struct struct_0 **v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_0 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v167;  // rax, Other Possible Types: unsigned long\n
\n
    v24 = cgc__cookie;\n
    v23 = -1;\n
    if (cgc_sendline(1, \"===llamacarbonator===\", 21) < 0)\n
        cgc__terminate(1);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v90) = *(&*(v92));\n
    cgc_uint2str(&v89, 21, *(&v90));\n
    v22 = &v89;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v115 = v91;\n
    *(v115) = *(v115) - 8;\n
    v116 = v92;\n
    *(v116) = *(v116) + 8;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 12, v98);\n
    v21 = &v97;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v117 = v99;\n
    *(v117) = *(v117) - 4;\n
    v118 = v100;\n
    *(v118) = *(v118) + 4;\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v51) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v51);\n
    v50 = v20;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v49, \"Str: \");\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v120 = v52;\n
    *(v120) = &(*(v120))[4 + cgc_strlen(v49)];\n
    v122 = v51;\n
    *(v122) = *(v122) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v86) = *(&*(v88));\n
    cgc_uint2str(&v85, 21, *(&v86));\n
    v19 = &v85;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v123 = v87;\n
    *(v123) = *(v123) - 8;\n
    v124 = v88;\n
    *(v124) = *(v124) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v18 = &v65;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v125 = v67;\n
    *(v125) = *(v125) - 1;\n
    v126 = v68;\n
    *(v126) = *(v126) + 1;\n
    v44 = a0;\n
    v43 = a1;\n
    if (*(v43) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = *(v44)->field_0;\n
    v127 = v43;\n
    *(v127) = *(v127) - 1;\n
    v128 = v44;\n
    *(v128) = *(v128) + 1;\n
    if (v42 <= *(v43) && !(!v42))\n
        goto LABEL_41b47b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41b47b:\n
    v41 = cgc_calloc(v42);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v41, *(v44), v42);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v129 = v44;\n
    *(v129) = &(*(v129))[v42];\n
    v130 = v43;\n
    *(v130) = *(v130) - v42;\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    v40 = a0;\n
    v39 = a1;\n
    v37 = &*(v40)->field_0;\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (*(v37) << 56)\n
    {\n
        v17 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v37[6] << 8))\n
                                v17 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v17 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v16 = &v36;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v131 = v39;\n
    *(v131) = *(v131) - 8;\n
    v132 = v40;\n
    *(v132) = *(v132) + 8;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 21);\n
    if (*(v83) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v82) = *(&*(v84));\n
    cgc_uint2str(&v81, 21, *(&v82));\n
    v15 = &v81;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v133 = v83;\n
    *(v133) = *(v133) - 8;\n
    v134 = v84;\n
    *(v134) = *(v134) + 8;\n
    v113 = a0;\n
    v112 = a1;\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(v113)->field_0;\n
    v135 = v112;\n
    *(v135) = *(v135) - 1;\n
    v136 = v113;\n
    *(v136) = *(v136) + 1;\n
    if (v111 <= *(v112) && !(!v111))\n
        goto LABEL_41b94b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41b94b:\n
    v110 = cgc_calloc(v111);\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v110, *(v113), v111);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v137 = v113;\n
    *(v137) = &(*(v137))[v111];\n
    v138 = v112;\n
    *(v138) = *(v138) - v111;\n
    cgc_checkheap();\n
    cgc_free(v110);\n
    v35 = a0;\n
    v34 = a1;\n
    v32 = &*(v35)->field_0;\n
    memset(&v31, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (*(v32) << 56)\n
    {\n
        v14 = 0;\n
        if (v32[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v32[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v32[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v32[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v32[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v32[6] << 8))\n
                                v14 = v32[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v33) = v14 & 1;\n
    cgc_uint2str(&v31, 21, *(&v33));\n
    v13 = &v31;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v139 = v34;\n
    *(v139) = *(v139) - 8;\n
    v140 = v35;\n
    *(v140) = *(v140) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 6, v54);\n
    v12 = &v53;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v141 = v55;\n
    *(v141) = *(v141) - 2;\n
    v142 = v56;\n
    *(v142) = *(v142) + 2;\n
    v109 = a0;\n
    v108 = a1;\n
    if (*(v108) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v108) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v108);\n
    v107 = v11;\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = cgc_calloc(134);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v106, \"Str: \");\n
    cgc_strncpy(v106 + 5, *(v109), v107);\n
    v144 = v109;\n
    *(v144) = &(*(v144))[4 + cgc_strlen(v106)];\n
    v146 = v108;\n
    *(v146) = *(v146) - (cgc_strlen(v106) + -4);\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v78) = *(&*(v80));\n
    cgc_uint2str(&v77, 21, *(&v78));\n
    v10 = &v77;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v147 = v79;\n
    *(v147) = *(v147) - 8;\n
    v148 = v80;\n
    *(v148) = *(v148) + 8;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 4);\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    cgc_uint2str(&v61, 4, v62);\n
    v9 = &v61;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v149 = v63;\n
    *(v149) = *(v149) - 1;\n
    v150 = v64;\n
    *(v150) = *(v150) + 1;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 12, v94);\n
    v8 = &v93;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v151 = v95;\n
    *(v151) = *(v151) - 4;\n
    v152 = v96;\n
    *(v152) = *(v152) + 4;\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v47) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v47);\n
    v46 = v7;\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = cgc_calloc(134);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v45, \"Str: \");\n
    cgc_strncpy(v45 + 5, *(v48), v46);\n
    v154 = v48;\n
    *(v154) = &(*(v154))[4 + cgc_strlen(v45)];\n
    v156 = v47;\n
    *(v156) = *(v156) - (cgc_strlen(v45) + -4);\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v30 = a0;\n
    v29 = a1;\n
    *(&v27) = *(v30);\n
    memset(&v26, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v27[0] << 8))\n
        v6 = v27[1];\n
    v28 = v6 & 1;\n
    cgc_uint2str(&v26, 6, v28);\n
    v5 = &v26;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v157 = v29;\n
    *(v157) = *(v157) - 2;\n
    v158 = v30;\n
    *(v158) = *(v158) + 2;\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v74) = *(&*(v76));\n
    cgc_uint2str(&v73, 21, *(&v74));\n
    v4 = &v73;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v159 = v75;\n
    *(v159) = *(v159) - 8;\n
    v160 = v76;\n
    *(v160) = *(v160) + 8;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 4);\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    cgc_uint2str(&v57, 4, v58);\n
    v3 = &v57;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v161 = v59;\n
    *(v161) = *(v161) - 1;\n
    v162 = v60;\n
    *(v162) = *(v162) + 1;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v70) = *(&*(v72));\n
    cgc_uint2str(&v69, 21, *(&v70));\n
    v2 = &v69;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v163 = v71;\n
    *(v163) = *(v163) - 8;\n
    v164 = v72;\n
    *(v164) = *(v164) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    *(&v102) = *(v105);\n
    memset(&v101, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v102[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v102[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v102[2] << 8))\n
                v1 = v102[3];\n
        }\n
    }\n
    v103 = v1 & 1;\n
    cgc_uint2str(&v101, 12, v103);\n
    v0 = &v101;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v165 = v104;\n
    *(v165) = *(v165) - 4;\n
    v166 = v105;\n
    *(v166) = *(v166) + 4;\n
    v24 ^= cgc__cookie;\n
    if (v24)\n
        cgc___stack_cookie_fail();\n
    v167 = a1;\n
    if (*(a1) > 0 && v23 >= 0)\n
    {\n
        v167 = v23;\n
        if (v167 < 0)\n
            v167 = *(&(&v25)[8 * v23])(a0, a1);\n
    }\n
    return v167;\n
}\n
", "4311571:sub_41ca13": null, "4311584:cgc_process_llamapoorness": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6160;\n
extern unsigned long long g_4c6168;\n
extern unsigned long long g_4c6170;\n
\n
long long cgc_process_llamapoorness(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x24c]\n
    struct_0 *v1;  // [bp-0x248]\n
    struct_0 *v2;  // [bp-0x240]\n
    char v3;  // [bp-0x231]\n
    struct_0 *v4;  // [bp-0x230]\n
    struct_0 *v5;  // [bp-0x228]\n
    struct_0 *v6;  // [bp-0x220]\n
    struct_0 *v7;  // [bp-0x218]\n
    char v8;  // [bp-0x209]\n
    struct_0 *v9;  // [bp-0x208]\n
    struct_0 *v10;  // [bp-0x200]\n
    struct_0 *v11;  // [bp-0x1f8]\n
    char v12;  // [bp-0x1e9]\n
    struct_0 *v13;  // [bp-0x1e8]\n
    unsigned int v14;  // [bp-0x1e0]\n
    unsigned int v15;  // [bp-0x1dc]\n
    unsigned long v16;  // [bp-0x1d8]\n
    unsigned long v17;  // [bp-0x1d0]\n
    unsigned long v18;  // [bp-0x1c8]\n
    char v19;  // [bp-0x1ae]\n
    char v20[2];  // [bp-0x1a8]\n
    unsigned short v21;  // [bp-0x19a]\n
    unsigned int *v22;  // [bp-0x198]\n
    struct struct_1 **v23;  // [bp-0x190]\n
    char v24;  // [bp-0x186]\n
    char v25[2];  // [bp-0x180]\n
    unsigned short v26;  // [bp-0x172]\n
    unsigned int *v27;  // [bp-0x170]\n
    struct struct_1 **v28;  // [bp-0x168]\n
    char v29;  // [bp-0x15e]\n
    char v30[2];  // [bp-0x158]\n
    unsigned short v31;  // [bp-0x14a]\n
    unsigned int *v32;  // [bp-0x148]\n
    struct struct_1 **v33;  // [bp-0x140]\n
    char *v34;  // [bp-0x138]\n
    unsigned int v35;  // [bp-0x12c]\n
    unsigned int *v36;  // [bp-0x128]\n
    struct struct_1 **v37;  // [bp-0x120]\n
    char v38;  // [bp-0x118]\n
    unsigned short v39;  // [bp-0x112]\n
    unsigned int *v40;  // [bp-0x110]\n
    struct struct_1 **v41;  // [bp-0x108]\n
    unsigned short *v42;  // [bp-0x100]\n
    unsigned int *v43;  // [bp-0xf8]\n
    struct struct_1 **v44;  // [bp-0xf0]\n
    char v45;  // [bp-0xe8]\n
    unsigned int v46;  // [bp-0xd0]\n
    unsigned int *v47;  // [bp-0xc8]\n
    struct struct_1 **v48;  // [bp-0xc0]\n
    char v49;  // [bp-0xb8]\n
    unsigned int v50;  // [bp-0xac]\n
    unsigned int *v51;  // [bp-0xa8]\n
    struct struct_1 **v52;  // [bp-0xa0]\n
    char v53;  // [bp-0x98]\n
    unsigned int v54;  // [bp-0x8c]\n
    unsigned int *v55;  // [bp-0x88]\n
    struct struct_1 **v56;  // [bp-0x80]\n
    char v57;  // [bp-0x78]\n
    unsigned int v58;  // [bp-0x6c]\n
    unsigned int *v59;  // [bp-0x68]\n
    struct struct_1 **v60;  // [bp-0x60]\n
    char v61;  // [bp-0x58]\n
    unsigned int v62;  // [bp-0x4c]\n
    unsigned int *v63;  // [bp-0x48]\n
    struct struct_1 **v64;  // [bp-0x40]\n
    char v65;  // [bp-0x38]\n
    unsigned int v66;  // [bp-0x20]\n
    unsigned int *v67;  // [bp-0x18]\n
    struct struct_1 **v68;  // [bp-0x10]\n
    unsigned int *v70;  // rax\n
    struct struct_1 **v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_1 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_1 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_1 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_1 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_1 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_1 **v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_1 **v85;  // rax\n
    unsigned int *v86;  // rax\n
    struct struct_1 **v87;  // rax\n
    unsigned int *v88;  // rax\n
    struct struct_1 **v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_1 **v91;  // rax\n
    struct struct_1 **v93;  // rax\n
    unsigned int *v95;  // rax\n
    unsigned int *v96;  // rax, Other Possible Types: unsigned long\n
\n
    v16 = g_4c6160;\n
    v17 = g_4c6168;\n
    v18 = g_4c6170;\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamapoorness===\", 19) < 0)\n
        cgc__terminate(1);\n
    v44 = a0;\n
    v43 = a1;\n
    v42 = &*(v44);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = v43;\n
    *(v70) = *(v70) - 2;\n
    v71 = v44;\n
    *(v71) = *(v71) + 2;\n
    v14 = *(v42);\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 21);\n
    if (*(v67) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v66) = *(&*(v68));\n
    cgc_uint2str(&v65, 21, *(&v66));\n
    v13 = &v65;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v72 = v67;\n
    *(v72) = *(v72) - 8;\n
    v73 = v68;\n
    *(v73) = *(v73) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v30[0] << 8))\n
        v12 = v30[1];\n
    v31 = v12 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v11 = &v29;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v74 = v32;\n
    *(v74) = *(v74) - 2;\n
    v75 = v33;\n
    *(v75) = *(v75) + 2;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 12);\n
    if (*(v63) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(&*(v64));\n
    cgc_uint2str(&v61, 12, v62);\n
    v10 = &v61;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v76 = v63;\n
    *(v76) = *(v76) - 4;\n
    v77 = v64;\n
    *(v77) = *(v77) + 4;\n
    v48 = a0;\n
    v47 = a1;\n
    memset(&v45, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v46) = *(&*(v48));\n
    cgc_uint2str(&v45, 21, *(&v46));\n
    v9 = &v45;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v78 = v47;\n
    *(v78) = *(v78) - 8;\n
    v79 = v48;\n
    *(v79) = *(v79) + 8;\n
    v28 = a0;\n
    v27 = a1;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v25[0] << 8))\n
        v8 = v25[1];\n
    v26 = v8 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v7 = &v24;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v80 = v27;\n
    *(v80) = *(v80) - 2;\n
    v81 = v28;\n
    *(v81) = *(v81) + 2;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 12, v58);\n
    v6 = &v57;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v82 = v59;\n
    *(v82) = *(v82) - 4;\n
    v83 = v60;\n
    *(v83) = *(v83) + 4;\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 12);\n
    if (*(v55) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 12, v54);\n
    v5 = &v53;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v84 = v55;\n
    *(v84) = *(v84) - 4;\n
    v85 = v56;\n
    *(v85) = *(v85) + 4;\n
    v41 = a0;\n
    v40 = a1;\n
    memset(&v38, 0, 6);\n
    if (*(v40) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(&*(v41));\n
    cgc_uint2str(&v38, 6, v39);\n
    v4 = &v38;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v86 = v40;\n
    *(v86) = *(v86) - 2;\n
    v87 = v41;\n
    *(v87) = *(v87) + 2;\n
    v23 = a0;\n
    v22 = a1;\n
    *(&v20) = *(v23);\n
    memset(&v19, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v20[0] << 8))\n
        v3 = v20[1];\n
    v21 = v3 & 1;\n
    cgc_uint2str(&v19, 6, v21);\n
    v2 = &v19;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v19)) < 0)\n
        cgc__terminate(1);\n
    v88 = v22;\n
    *(v88) = *(v88) - 2;\n
    v89 = v23;\n
    *(v89) = *(v89) + 2;\n
    v52 = a0;\n
    v51 = a1;\n
    memset(&v49, 0, 12);\n
    if (*(v51) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(&*(v52));\n
    cgc_uint2str(&v49, 12, v50);\n
    v1 = &v49;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v90 = v51;\n
    *(v90) = *(v90) - 4;\n
    v91 = v52;\n
    *(v91) = *(v91) + 4;\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v36) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v36);\n
    v35 = v0;\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v34 = cgc_calloc(134);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v34, \"Str: \");\n
    cgc_strncpy(v34 + 5, *(v37), v35);\n
    v93 = v37;\n
    *(v93) = &(*(v93))[4 + cgc_strlen(v34)];\n
    v95 = v36;\n
    *(v95) = *(v95) - (cgc_strlen(v34) + -4);\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v15 ^= cgc__cookie;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v96 = a1;\n
    if (*(a1) > 0 && v14 >= 0)\n
    {\n
        v96 = v14;\n
        if (v96 < 3)\n
            v96 = (&v16)[v14](a0, a1);\n
    }\n
    return v96;\n
}\n
", "4315214:sub_41d84e": null, "4315216:cgc_process_llamaforebridge": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaforebridge(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x668]\n
    struct_1 *v1;  // [bp-0x660]\n
    struct_1 *v2;  // [bp-0x658]\n
    struct_1 *v3;  // [bp-0x650]\n
    char v4;  // [bp-0x641]\n
    struct_1 *v5;  // [bp-0x640]\n
    struct_1 *v6;  // [bp-0x638]\n
    char v7;  // [bp-0x62d]\n
    unsigned int v8;  // [bp-0x62c]\n
    struct_1 *v9;  // [bp-0x628]\n
    struct_1 *v10;  // [bp-0x620]\n
    struct_1 *v11;  // [bp-0x618]\n
    struct_1 *v12;  // [bp-0x610]\n
    struct_1 *v13;  // [bp-0x608]\n
    char v14;  // [bp-0x5f9]\n
    struct_1 *v15;  // [bp-0x5f8]\n
    char v16;  // [bp-0x5e9]\n
    struct_1 *v17;  // [bp-0x5e8]\n
    struct_1 *v18;  // [bp-0x5e0]\n
    struct_1 *v19;  // [bp-0x5d8]\n
    struct_1 *v20;  // [bp-0x5d0]\n
    struct_1 *v21;  // [bp-0x5c8]\n
    struct_1 *v22;  // [bp-0x5c0]\n
    char v23;  // [bp-0x5b5]\n
    unsigned int v24;  // [bp-0x5b4]\n
    struct_1 *v25;  // [bp-0x5b0]\n
    char v26;  // [bp-0x5a1]\n
    struct_1 *v27;  // [bp-0x5a0]\n
    unsigned int v28;  // [bp-0x594]\n
    struct_1 *v29;  // [bp-0x590]\n
    unsigned int v30;  // [bp-0x584]\n
    struct_1 *v31;  // [bp-0x580]\n
    struct_1 *v32;  // [bp-0x578]\n
    unsigned int v33;  // [bp-0x56c]\n
    unsigned int v34;  // [bp-0x568]\n
    unsigned int v35;  // [bp-0x564]\n
    char v36;  // [bp-0x560]\n
    char v37;  // [bp-0x548]\n
    char v38[8];  // [bp-0x528]\n
    unsigned int v39;  // [bp-0x520]\n
    unsigned int *v40;  // [bp-0x518]\n
    struct struct_0 **v41;  // [bp-0x510]\n
    char v42;  // [bp-0x508]\n
    char v43[8];  // [bp-0x4e8]\n
    unsigned int v44;  // [bp-0x4e0]\n
    unsigned int *v45;  // [bp-0x4d8]\n
    struct struct_0 **v46;  // [bp-0x4d0]\n
    char v47;  // [bp-0x4c8]\n
    char v48[8];  // [bp-0x4a8]\n
    unsigned int v49;  // [bp-0x4a0]\n
    unsigned int *v50;  // [bp-0x498]\n
    struct struct_0 **v51;  // [bp-0x490]\n
    char v52;  // [bp-0x488]\n
    char v53[8];  // [bp-0x470]\n
    unsigned int v54;  // [bp-0x468]\n
    unsigned int *v55;  // [bp-0x460]\n
    struct struct_0 **v56;  // [bp-0x458]\n
    unsigned long v57;  // [bp-0x450]\n
    char v58;  // [bp-0x441]\n
    unsigned int *v59;  // [bp-0x440]\n
    struct struct_0 **v60;  // [bp-0x438]\n
    unsigned long v61;  // [bp-0x430]\n
    char v62;  // [bp-0x421]\n
    unsigned int *v63;  // [bp-0x420]\n
    struct struct_0 **v64;  // [bp-0x418]\n
    unsigned long v65;  // [bp-0x410]\n
    char v66;  // [bp-0x401]\n
    unsigned int *v67;  // [bp-0x400]\n
    struct struct_0 **v68;  // [bp-0x3f8]\n
    unsigned long v69;  // [bp-0x3f0]\n
    char v70;  // [bp-0x3e1]\n
    unsigned int *v71;  // [bp-0x3e0]\n
    struct struct_0 **v72;  // [bp-0x3d8]\n
    char *v73;  // [bp-0x3d0]\n
    unsigned int v74;  // [bp-0x3c4]\n
    unsigned int *v75;  // [bp-0x3c0]\n
    struct struct_0 **v76;  // [bp-0x3b8]\n
    char *v77;  // [bp-0x3b0]\n
    unsigned int v78;  // [bp-0x3a4]\n
    unsigned int *v79;  // [bp-0x3a0]\n
    struct struct_0 **v80;  // [bp-0x398]\n
    char *v81;  // [bp-0x390]\n
    unsigned int v82;  // [bp-0x384]\n
    unsigned int *v83;  // [bp-0x380]\n
    struct struct_0 **v84;  // [bp-0x378]\n
    char v85;  // [bp-0x370]\n
    unsigned short v86;  // [bp-0x36a]\n
    unsigned int *v87;  // [bp-0x368]\n
    struct struct_0 **v88;  // [bp-0x360]\n
    char v89;  // [bp-0x358]\n
    unsigned short v90;  // [bp-0x352]\n
    unsigned int *v91;  // [bp-0x350]\n
    struct struct_0 **v92;  // [bp-0x348]\n
    char v93;  // [bp-0x33d]\n
    char v94;  // [bp-0x339]\n
    unsigned int *v95;  // [bp-0x338]\n
    struct struct_0 **v96;  // [bp-0x330]\n
    char v97;  // [bp-0x328]\n
    unsigned int v98;  // [bp-0x310]\n
    unsigned int *v99;  // [bp-0x308]\n
    struct struct_0 **v100;  // [bp-0x300]\n
    char v101;  // [bp-0x2f8]\n
    unsigned int v102;  // [bp-0x2e0]\n
    unsigned int *v103;  // [bp-0x2d8]\n
    struct struct_0 **v104;  // [bp-0x2d0]\n
    char v105;  // [bp-0x2c8]\n
    unsigned int v106;  // [bp-0x2bc]\n
    unsigned int *v107;  // [bp-0x2b8]\n
    struct struct_0 **v108;  // [bp-0x2b0]\n
    char v109;  // [bp-0x2a8]\n
    unsigned int v110;  // [bp-0x29c]\n
    unsigned int *v111;  // [bp-0x298]\n
    struct struct_0 **v112;  // [bp-0x290]\n
    char v113;  // [bp-0x288]\n
    unsigned int v114;  // [bp-0x27c]\n
    unsigned int *v115;  // [bp-0x278]\n
    struct struct_0 **v116;  // [bp-0x270]\n
    char v117;  // [bp-0x268]\n
    unsigned int v118;  // [bp-0x25c]\n
    unsigned int *v119;  // [bp-0x258]\n
    struct struct_0 **v120;  // [bp-0x250]\n
    char v121;  // [bp-0x248]\n
    unsigned int v122;  // [bp-0x23c]\n
    unsigned int *v123;  // [bp-0x238]\n
    struct struct_0 **v124;  // [bp-0x230]\n
    char v125;  // [bp-0x228]\n
    unsigned int v126;  // [bp-0x21c]\n
    unsigned int *v127;  // [bp-0x218]\n
    struct struct_0 **v128;  // [bp-0x210]\n
    char v129;  // [bp-0x208]\n
    unsigned int v130;  // [bp-0x1fc]\n
    unsigned int *v131;  // [bp-0x1f8]\n
    struct struct_0 **v132;  // [bp-0x1f0]\n
    char v133;  // [bp-0x1e8]\n
    unsigned int v134;  // [bp-0x1dc]\n
    unsigned int *v135;  // [bp-0x1d8]\n
    struct struct_0 **v136;  // [bp-0x1d0]\n
    unsigned long v137;  // [bp-0x1c8]\n
    unsigned short v138;  // [bp-0x1ba]\n
    unsigned int *v139;  // [bp-0x1b8]\n
    struct struct_0 **v140;  // [bp-0x1b0]\n
    unsigned long v141;  // [bp-0x1a8]\n
    unsigned short v142;  // [bp-0x19a]\n
    unsigned int *v143;  // [bp-0x198]\n
    struct struct_0 **v144;  // [bp-0x190]\n
    char v145;  // [bp-0x184]\n
    char v146[4];  // [bp-0x178]\n
    unsigned int v147;  // [bp-0x16c]\n
    unsigned int *v148;  // [bp-0x168]\n
    struct struct_0 **v149;  // [bp-0x160]\n
    char v150;  // [bp-0x154]\n
    char v151[4];  // [bp-0x148]\n
    unsigned int v152;  // [bp-0x13c]\n
    unsigned int *v153;  // [bp-0x138]\n
    struct struct_0 **v154;  // [bp-0x130]\n
    char *v155;  // [bp-0x128]\n
    unsigned int v156;  // [bp-0x11c]\n
    unsigned int *v157;  // [bp-0x118]\n
    struct struct_0 **v158;  // [bp-0x110]\n
    char *v159;  // [bp-0x108]\n
    unsigned int v160;  // [bp-0xfc]\n
    unsigned int *v161;  // [bp-0xf8]\n
    struct struct_0 **v162;  // [bp-0xf0]\n
    char v163;  // [bp-0xe8]\n
    unsigned int v164;  // [bp-0xd0]\n
    unsigned int *v165;  // [bp-0xc8]\n
    struct struct_0 **v166;  // [bp-0xc0]\n
    char v167;  // [bp-0xb8]\n
    unsigned int v168;  // [bp-0xa0]\n
    unsigned int *v169;  // [bp-0x98]\n
    struct struct_0 **v170;  // [bp-0x90]\n
    char v171;  // [bp-0x88]\n
    unsigned int v172;  // [bp-0x70]\n
    unsigned int *v173;  // [bp-0x68]\n
    struct struct_0 **v174;  // [bp-0x60]\n
    char v175;  // [bp-0x58]\n
    unsigned int v176;  // [bp-0x40]\n
    unsigned int *v177;  // [bp-0x38]\n
    struct struct_0 **v178;  // [bp-0x30]\n
    unsigned long v179;  // [bp-0x28]\n
    char v180;  // [bp-0x19]\n
    unsigned int *v181;  // [bp-0x18]\n
    struct struct_0 **v182;  // [bp-0x10]\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax, Other Possible Types: unsigned long\n
\n
    v35 = cgc__cookie;\n
    v34 = -1;\n
    if (cgc_sendline(1, \"===llamaforebridge===\", 21) < 0)\n
        cgc__terminate(1);\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v83) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v83);\n
    v82 = v33;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v81, \"Str: \");\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v185 = v84;\n
    *(v185) = &(*(v185))[4 + cgc_strlen(v81)];\n
    v187 = v83;\n
    *(v187) = *(v187) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(v72)->field_0;\n
    v188 = v71;\n
    *(v188) = *(v188) - 1;\n
    v189 = v72;\n
    *(v189) = *(v189) + 1;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_41db8d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41db8d:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v190 = v72;\n
    *(v190) = &(*(v190))[v70];\n
    v191 = v71;\n
    *(v191) = *(v191) - v70;\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v180 = *(v182)->field_0;\n
    v192 = v181;\n
    *(v192) = *(v192) - 1;\n
    v193 = v182;\n
    *(v193) = *(v193) + 1;\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_41dd3d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41dd3d:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v194 = v182;\n
    *(v194) = &(*(v194))[v180];\n
    v195 = v181;\n
    *(v195) = *(v195) - v180;\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    cgc_uint2str(&v121, 12, v122);\n
    v32 = &v121;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v196 = v123;\n
    *(v196) = *(v196) - 4;\n
    v197 = v124;\n
    *(v197) = *(v197) + 4;\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    cgc_uint2str(&v117, 12, v118);\n
    v31 = &v117;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v198 = v119;\n
    *(v198) = *(v198) - 4;\n
    v199 = v120;\n
    *(v199) = *(v199) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v79) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v79);\n
    v78 = v30;\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = cgc_calloc(134);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v77, \"Str: \");\n
    cgc_strncpy(v77 + 5, *(v80), v78);\n
    v201 = v80;\n
    *(v201) = &(*(v201))[4 + cgc_strlen(v77)];\n
    v203 = v79;\n
    *(v203) = *(v203) - (cgc_strlen(v77) + -4);\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 6);\n
    if (*(v91) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    cgc_uint2str(&v89, 6, v90);\n
    v29 = &v89;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v204 = v91;\n
    *(v204) = *(v204) - 2;\n
    v205 = v92;\n
    *(v205) = *(v205) + 2;\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    v206 = v67;\n
    *(v206) = *(v206) - 1;\n
    v207 = v68;\n
    *(v207) = *(v207) + 1;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_41e3e3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41e3e3:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v208 = v68;\n
    *(v208) = &(*(v208))[v66];\n
    v209 = v67;\n
    *(v209) = *(v209) - v66;\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v75) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v75);\n
    v74 = v28;\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = cgc_calloc(134);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v73, \"Str: \");\n
    cgc_strncpy(v73 + 5, *(v76), v74);\n
    v211 = v76;\n
    *(v211) = &(*(v211))[4 + cgc_strlen(v73)];\n
    v213 = v75;\n
    *(v213) = *(v213) - (cgc_strlen(v73) + -4);\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v178 = a0;\n
    v177 = a1;\n
    memset(&v175, 0, 21);\n
    if (*(v177) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v176) = *(&*(v178));\n
    cgc_uint2str(&v175, 21, *(&v176));\n
    v27 = &v175;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v175)) < 0)\n
        cgc__terminate(1);\n
    v214 = v177;\n
    *(v214) = *(v214) - 8;\n
    v215 = v178;\n
    *(v215) = *(v215) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    *(&v53[0]) = *(v56);\n
    memset(&v52, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if (v53[0] << 56)\n
    {\n
        v26 = 0;\n
        if (v53[1] << 48)\n
        {\n
            v26 = 0;\n
            if (v53[2] << 40)\n
            {\n
                v26 = 0;\n
                if (v53[3] << 32)\n
                {\n
                    v26 = 0;\n
                    if ((v53[4] << 24))\n
                    {\n
                        v26 = 0;\n
                        if ((v53[5] << 16))\n
                        {\n
                            v26 = 0;\n
                            if ((v53[6] << 8))\n
                                v26 = v53[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v54) = v26 & 1;\n
    cgc_uint2str(&v52, 21, *(&v54));\n
    v25 = &v52;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v216 = v55;\n
    *(v216) = *(v216) - 8;\n
    v217 = v56;\n
    *(v217) = *(v217) + 8;\n
    v162 = a0;\n
    v161 = a1;\n
    if (*(v161) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v161) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v161);\n
    v160 = v24;\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = cgc_calloc(134);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v159, \"Str: \");\n
    cgc_strncpy(v159 + 5, *(v162), v160);\n
    v219 = v162;\n
    *(v219) = &(*(v219))[4 + cgc_strlen(v159)];\n
    v221 = v161;\n
    *(v221) = *(v221) - (cgc_strlen(v159) + -4);\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v154 = a0;\n
    v153 = a1;\n
    *(&v151) = *(v154);\n
    memset(&v150, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if ((v151[0] << 24))\n
    {\n
        v23 = 0;\n
        if ((v151[1] << 16))\n
        {\n
            v23 = 0;\n
            if ((v151[2] << 8))\n
                v23 = v151[3];\n
        }\n
    }\n
    v152 = v23 & 1;\n
    cgc_uint2str(&v150, 12, v152);\n
    v22 = &v150;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v150)) < 0)\n
        cgc__terminate(1);\n
    v222 = v153;\n
    *(v222) = *(v222) - 4;\n
    v223 = v154;\n
    *(v223) = *(v223) + 4;\n
    v174 = a0;\n
    v173 = a1;\n
    memset(&v171, 0, 21);\n
    if (*(v173) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v172) = *(&*(v174));\n
    cgc_uint2str(&v171, 21, *(&v172));\n
    v21 = &v171;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v171)) < 0)\n
        cgc__terminate(1);\n
    v224 = v173;\n
    *(v224) = *(v224) - 8;\n
    v225 = v174;\n
    *(v225) = *(v225) + 8;\n
    v170 = a0;\n
    v169 = a1;\n
    memset(&v167, 0, 21);\n
    if (*(v169) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v168) = *(&*(v170));\n
    cgc_uint2str(&v167, 21, *(&v168));\n
    v20 = &v167;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v167)) < 0)\n
        cgc__terminate(1);\n
    v226 = v169;\n
    *(v226) = *(v226) - 8;\n
    v227 = v170;\n
    *(v227) = *(v227) + 8;\n
    v140 = a0;\n
    v139 = a1;\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    v228 = v139;\n
    *(v228) = *(v228) - 2;\n
    v229 = v140;\n
    *(v229) = *(v229) + 2;\n
    if (v138 <= *(v139) && !(!v138))\n
        goto LABEL_41effd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_41effd:\n
    v137 = cgc_calloc(v138);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v137, *(v140), v138);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v230 = v139;\n
    *(v230) = *(v230) - v138;\n
    v231 = v140;\n
    *(v231) = &(*(v231))[v138];\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v102) = *(&*(v104));\n
    cgc_uint2str(&v101, 21, *(&v102));\n
    v19 = &v101;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v232 = v103;\n
    *(v232) = *(v232) - 8;\n
    v233 = v104;\n
    *(v233) = *(v233) + 8;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    cgc_uint2str(&v133, 12, v134);\n
    v18 = &v133;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v234 = v135;\n
    *(v234) = *(v234) - 4;\n
    v235 = v136;\n
    *(v235) = *(v235) + 4;\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 6, v86);\n
    v17 = &v85;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v236 = v87;\n
    *(v236) = *(v236) - 2;\n
    v237 = v88;\n
    *(v237) = *(v237) + 2;\n
    v149 = a0;\n
    v148 = a1;\n
    *(&v146) = *(v149);\n
    memset(&v145, 0, 12);\n
    if (*(v148) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v146[0] << 24))\n
    {\n
        v16 = 0;\n
        if ((v146[1] << 16))\n
        {\n
            v16 = 0;\n
            if ((v146[2] << 8))\n
                v16 = v146[3];\n
        }\n
    }\n
    v147 = v16 & 1;\n
    cgc_uint2str(&v145, 12, v147);\n
    v15 = &v145;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v145)) < 0)\n
        cgc__terminate(1);\n
    v238 = v148;\n
    *(v238) = *(v238) - 4;\n
    v239 = v149;\n
    *(v239) = *(v239) + 4;\n
    v51 = a0;\n
    v50 = a1;\n
    *(&v48[0]) = *(v51);\n
    memset(&v47, 0, 21);\n
    if (*(v50) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v48[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v48[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v48[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v48[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v48[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v48[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v48[6] << 8))\n
                                v14 = v48[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v49) = v14 & 1;\n
    cgc_uint2str(&v47, 21, *(&v49));\n
    v13 = &v47;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v240 = v50;\n
    *(v240) = *(v240) - 8;\n
    v241 = v51;\n
    *(v241) = *(v241) + 8;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v98) = *(&*(v100));\n
    cgc_uint2str(&v97, 21, *(&v98));\n
    v12 = &v97;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v242 = v99;\n
    *(v242) = *(v242) - 8;\n
    v243 = v100;\n
    *(v243) = *(v243) + 8;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v11 = &v129;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v244 = v131;\n
    *(v244) = *(v244) - 4;\n
    v245 = v132;\n
    *(v245) = *(v245) + 4;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v10 = &v113;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v246 = v115;\n
    *(v246) = *(v246) - 4;\n
    v247 = v116;\n
    *(v247) = *(v247) + 4;\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    cgc_uint2str(&v125, 12, v126);\n
    v9 = &v125;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v248 = v127;\n
    *(v248) = *(v248) - 4;\n
    v249 = v128;\n
    *(v249) = *(v249) + 4;\n
    v158 = a0;\n
    v157 = a1;\n
    if (*(v157) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v157) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v157);\n
    v156 = v8;\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = cgc_calloc(134);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v155, \"Str: \");\n
    cgc_strncpy(v155 + 5, *(v158), v156);\n
    v251 = v158;\n
    *(v251) = &(*(v251))[4 + cgc_strlen(v155)];\n
    v253 = v157;\n
    *(v253) = *(v253) - (cgc_strlen(v155) + -4);\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v46 = a0;\n
    v45 = a1;\n
    *(&v43[0]) = *(v46);\n
    memset(&v42, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v43[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v43[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v43[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v43[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v43[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v43[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v43[6] << 8))\n
                                v7 = v43[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v44) = v7 & 1;\n
    cgc_uint2str(&v42, 21, *(&v44));\n
    v6 = &v42;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v254 = v45;\n
    *(v254) = *(v254) - 8;\n
    v255 = v46;\n
    *(v255) = *(v255) + 8;\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v5 = &v109;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v256 = v111;\n
    *(v256) = *(v256) - 4;\n
    v257 = v112;\n
    *(v257) = *(v257) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    v258 = v63;\n
    *(v258) = *(v258) - 1;\n
    v259 = v64;\n
    *(v259) = *(v259) + 1;\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_4201a6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4201a6:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v260 = v64;\n
    *(v260) = &(*(v260))[v62];\n
    v261 = v63;\n
    *(v261) = *(v261) - v62;\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v41 = a0;\n
    v40 = a1;\n
    *(&v38[0]) = *(v41);\n
    memset(&v37, 0, 21);\n
    if (*(v40) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if (v38[0] << 56)\n
    {\n
        v4 = 0;\n
        if (v38[1] << 48)\n
        {\n
            v4 = 0;\n
            if (v38[2] << 40)\n
            {\n
                v4 = 0;\n
                if (v38[3] << 32)\n
                {\n
                    v4 = 0;\n
                    if ((v38[4] << 24))\n
                    {\n
                        v4 = 0;\n
                        if ((v38[5] << 16))\n
                        {\n
                            v4 = 0;\n
                            if ((v38[6] << 8))\n
                                v4 = v38[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v39) = v4 & 1;\n
    cgc_uint2str(&v37, 21, *(&v39));\n
    v3 = &v37;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v262 = v40;\n
    *(v262) = *(v262) - 8;\n
    v263 = v41;\n
    *(v263) = *(v263) + 8;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v2 = &v105;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v264 = v107;\n
    *(v264) = *(v264) - 4;\n
    v265 = v108;\n
    *(v265) = *(v265) + 4;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 4);\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(v96)->field_0;\n
    cgc_uint2str(&v93, 4, v94);\n
    v1 = &v93;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v266 = v95;\n
    *(v266) = *(v266) - 1;\n
    v267 = v96;\n
    *(v267) = *(v267) + 1;\n
    v166 = a0;\n
    v165 = a1;\n
    memset(&v163, 0, 21);\n
    if (*(v165) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v164) = *(&*(v166));\n
    cgc_uint2str(&v163, 21, *(&v164));\n
    v0 = &v163;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v163)) < 0)\n
        cgc__terminate(1);\n
    v268 = v165;\n
    *(v268) = *(v268) - 8;\n
    v269 = v166;\n
    *(v269) = *(v269) + 8;\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    v270 = v59;\n
    *(v270) = *(v270) - 1;\n
    v271 = v60;\n
    *(v271) = *(v271) + 1;\n
    if (v58 <= *(v59) && !(!v58))\n
        goto LABEL_420893;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_420893:\n
    v57 = cgc_calloc(v58);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v57, *(v60), v58);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v272 = v60;\n
    *(v272) = &(*(v272))[v58];\n
    v273 = v59;\n
    *(v273) = *(v273) - v58;\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    v144 = a0;\n
    v143 = a1;\n
    if (*(v143) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    v274 = v143;\n
    *(v274) = *(v274) - 2;\n
    v275 = v144;\n
    *(v275) = *(v275) + 2;\n
    if (v142 <= *(v143) && !(!v142))\n
        goto LABEL_420a63;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_420a63:\n
    v141 = cgc_calloc(v142);\n
    if (!v141)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v141, *(v144), v142);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v276 = v143;\n
    *(v276) = *(v276) - v142;\n
    v277 = v144;\n
    *(v277) = &(*(v277))[v142];\n
    cgc_checkheap();\n
    cgc_free(v141);\n
    v35 ^= cgc__cookie;\n
    if (v35)\n
        cgc___stack_cookie_fail();\n
    v278 = a1;\n
    if (*(a1) > 0 && v34 >= 0)\n
    {\n
        v278 = v34;\n
        if (v278 < 0)\n
            v278 = *(&(&v36)[8 * v34])(a0, a1);\n
    }\n
    return v278;\n
}\n
", "4328381:sub_420bbd": null, "4328384:cgc_process_llamaunquarrelled": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaunquarrelled(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x1f0]\n
    char v1;  // [bp-0x1e1]\n
    struct_0 *v2;  // [bp-0x1e0]\n
    struct_0 *v3;  // [bp-0x1d8]\n
    struct_0 *v4;  // [bp-0x1d0]\n
    char v5;  // [bp-0x1c1]\n
    struct_0 *v6;  // [bp-0x1c0]\n
    struct_0 *v7;  // [bp-0x1b8]\n
    struct_0 *v8;  // [bp-0x1b0]\n
    unsigned int v9;  // [bp-0x1a8]\n
    unsigned int v10;  // [bp-0x1a4]\n
    char v11;  // [bp-0x1a0]\n
    unsigned long v12;  // [bp-0x188]\n
    char v13;  // [bp-0x179]\n
    unsigned int *v14;  // [bp-0x178]\n
    struct struct_1 **v15;  // [bp-0x170]\n
    char v16;  // [bp-0x168]\n
    unsigned short v17;  // [bp-0x162]\n
    unsigned int *v18;  // [bp-0x160]\n
    struct struct_1 **v19;  // [bp-0x158]\n
    char v20;  // [bp-0x14d]\n
    char v21;  // [bp-0x149]\n
    unsigned int *v22;  // [bp-0x148]\n
    struct struct_1 **v23;  // [bp-0x140]\n
    char v24;  // [bp-0x138]\n
    unsigned int v25;  // [bp-0x12c]\n
    unsigned int *v26;  // [bp-0x128]\n
    struct struct_1 **v27;  // [bp-0x120]\n
    char v28;  // [bp-0x118]\n
    unsigned int v29;  // [bp-0x10c]\n
    unsigned int *v30;  // [bp-0x108]\n
    struct struct_1 **v31;  // [bp-0x100]\n
    unsigned long v32;  // [bp-0xf8]\n
    unsigned short v33;  // [bp-0xea]\n
    unsigned int *v34;  // [bp-0xe8]\n
    struct struct_1 **v35;  // [bp-0xe0]\n
    unsigned long v36;  // [bp-0xd8]\n
    unsigned short v37;  // [bp-0xca]\n
    unsigned int *v38;  // [bp-0xc8]\n
    struct struct_1 **v39;  // [bp-0xc0]\n
    char v40;  // [bp-0xb4]\n
    char v41[4];  // [bp-0xa8]\n
    unsigned int v42;  // [bp-0x9c]\n
    unsigned int *v43;  // [bp-0x98]\n
    struct struct_1 **v44;  // [bp-0x90]\n
    char v45;  // [bp-0x84]\n
    char v46[4];  // [bp-0x78]\n
    unsigned int v47;  // [bp-0x6c]\n
    unsigned int *v48;  // [bp-0x68]\n
    struct struct_1 **v49;  // [bp-0x60]\n
    char v50;  // [bp-0x58]\n
    unsigned int v51;  // [bp-0x40]\n
    unsigned int *v52;  // [bp-0x38]\n
    struct struct_1 **v53;  // [bp-0x30]\n
    unsigned long v54;  // [bp-0x28]\n
    char v55;  // [bp-0x19]\n
    unsigned int *v56;  // [bp-0x18]\n
    struct struct_1 **v57;  // [bp-0x10]\n
    unsigned int *v59;  // rax\n
    struct struct_1 **v60;  // rax\n
    unsigned int *v61;  // rax\n
    struct struct_1 **v62;  // rax\n
    unsigned int *v63;  // rax\n
    struct struct_1 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_1 **v66;  // rax\n
    unsigned int *v67;  // rax\n
    struct struct_1 **v68;  // rax\n
    unsigned int *v69;  // rax\n
    struct struct_1 **v70;  // rax\n
    unsigned int *v71;  // rax\n
    struct struct_1 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    struct struct_1 **v74;  // rax\n
    struct struct_1 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    unsigned int *v77;  // rax\n
    struct struct_1 **v78;  // rax\n
    struct struct_1 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    unsigned int *v81;  // rax\n
    struct struct_1 **v82;  // rax\n
    unsigned int *v83;  // rax\n
    struct struct_1 **v84;  // rax\n
    unsigned int *v85;  // rax\n
    struct struct_1 **v86;  // rax\n
    unsigned int *v87;  // rax\n
    struct struct_1 **v88;  // rax\n
    unsigned int *v89;  // rax, Other Possible Types: unsigned long\n
\n
    v10 = cgc__cookie;\n
    v9 = -1;\n
    if (cgc_sendline(1, \"===llamaunquarrelled===\", 23) < 0)\n
        cgc__terminate(1);\n
    v19 = a0;\n
    v18 = a1;\n
    memset(&v16, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = *(&*(v19));\n
    cgc_uint2str(&v16, 6, v17);\n
    v8 = &v16;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v59 = v18;\n
    *(v59) = *(v59) - 2;\n
    v60 = v19;\n
    *(v60) = *(v60) + 2;\n
    v27 = a0;\n
    v26 = a1;\n
    memset(&v24, 0, 12);\n
    if (*(v26) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = *(&*(v27));\n
    cgc_uint2str(&v24, 12, v25);\n
    v7 = &v24;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v61 = v26;\n
    *(v61) = *(v61) - 4;\n
    v62 = v27;\n
    *(v62) = *(v62) + 4;\n
    v31 = a0;\n
    v30 = a1;\n
    memset(&v28, 0, 12);\n
    if (*(v30) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = *(&*(v31));\n
    cgc_uint2str(&v28, 12, v29);\n
    v6 = &v28;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v28)) < 0)\n
        cgc__terminate(1);\n
    v63 = v30;\n
    *(v63) = *(v63) - 4;\n
    v64 = v31;\n
    *(v64) = *(v64) + 4;\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46) = *(v49);\n
    memset(&v45, 0, 12);\n
    if (*(v48) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v46[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v46[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v46[2] << 8))\n
                v5 = v46[3];\n
        }\n
    }\n
    v47 = v5 & 1;\n
    cgc_uint2str(&v45, 12, v47);\n
    v4 = &v45;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v65 = v48;\n
    *(v65) = *(v65) - 4;\n
    v66 = v49;\n
    *(v66) = *(v66) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(&*(v39));\n
    v67 = v38;\n
    *(v67) = *(v67) - 2;\n
    v68 = v39;\n
    *(v68) = *(v68) + 2;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_42116c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42116c:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v69 = v38;\n
    *(v69) = *(v69) - v37;\n
    v70 = v39;\n
    *(v70) = &(*(v70))[v37];\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v23 = a0;\n
    v22 = a1;\n
    memset(&v20, 0, 4);\n
    if (*(v22) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = *(v23)->field_0;\n
    cgc_uint2str(&v20, 4, v21);\n
    v3 = &v20;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v71 = v22;\n
    *(v71) = *(v71) - 1;\n
    v72 = v23;\n
    *(v72) = *(v72) + 1;\n
    v15 = a0;\n
    v14 = a1;\n
    if (*(v14) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = *(v15)->field_0;\n
    v73 = v14;\n
    *(v73) = *(v73) - 1;\n
    v74 = v15;\n
    *(v74) = *(v74) + 1;\n
    if (v13 <= *(v14) && !(!v13))\n
        goto LABEL_42143c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42143c:\n
    v12 = cgc_calloc(v13);\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v12, *(v15), v13);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v75 = v15;\n
    *(v75) = &(*(v75))[v13];\n
    v76 = v14;\n
    *(v76) = *(v76) - v13;\n
    cgc_checkheap();\n
    cgc_free(v12);\n
    v57 = a0;\n
    v56 = a1;\n
    if (*(v56) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(v57)->field_0;\n
    v77 = v56;\n
    *(v77) = *(v77) - 1;\n
    v78 = v57;\n
    *(v78) = *(v78) + 1;\n
    if (v55 <= *(v56) && !(!v55))\n
        goto LABEL_4215ec;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4215ec:\n
    v54 = cgc_calloc(v55);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v54, *(v57), v55);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v79 = v57;\n
    *(v79) = &(*(v79))[v55];\n
    v80 = v56;\n
    *(v80) = *(v80) - v55;\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v51) = *(&*(v53));\n
    cgc_uint2str(&v50, 21, *(&v51));\n
    v2 = &v50;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v81 = v52;\n
    *(v81) = *(v81) - 8;\n
    v82 = v53;\n
    *(v82) = *(v82) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(&*(v35));\n
    v83 = v34;\n
    *(v83) = *(v83) - 2;\n
    v84 = v35;\n
    *(v84) = *(v84) + 2;\n
    if (v33 <= *(v34) && !(!v33))\n
        goto LABEL_42187d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42187d:\n
    v32 = cgc_calloc(v33);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v32, *(v35), v33);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v85 = v34;\n
    *(v85) = *(v85) - v33;\n
    v86 = v35;\n
    *(v86) = &(*(v86))[v33];\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 12);\n
    if (*(v43) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v41[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v41[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v41[2] << 8))\n
                v1 = v41[3];\n
        }\n
    }\n
    v42 = v1 & 1;\n
    cgc_uint2str(&v40, 12, v42);\n
    v0 = &v40;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v87 = v43;\n
    *(v87) = *(v87) - 4;\n
    v88 = v44;\n
    *(v88) = *(v88) + 4;\n
    v10 ^= cgc__cookie;\n
    if (v10)\n
        cgc___stack_cookie_fail();\n
    v89 = a1;\n
    if (*(a1) > 0 && v9 >= 0)\n
    {\n
        v89 = v9;\n
        if (v89 < 0)\n
            v89 = *(&(&v11)[8 * v9])(a0, a1);\n
    }\n
    return v89;\n
}\n
", "4332379:sub_421b5b": null, "4332384:cgc_process_llamaundignifiedly": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaundignifiedly(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0xc8]\n
    struct_0 *v1;  // [bp-0xc0]\n
    struct_0 *v2;  // [bp-0xb8]\n
    unsigned int v3;  // [bp-0xb0]\n
    unsigned int v4;  // [bp-0xac]\n
    char v5;  // [bp-0xa8]\n
    char v6;  // [bp-0x90]\n
    unsigned short v7;  // [bp-0x8a]\n
    unsigned int *v8;  // [bp-0x88]\n
    struct struct_1 **v9;  // [bp-0x80]\n
    char v10;  // [bp-0x78]\n
    unsigned int v11;  // [bp-0x60]\n
    unsigned int *v12;  // [bp-0x58]\n
    struct struct_1 **v13;  // [bp-0x50]\n
    char v14;  // [bp-0x48]\n
    unsigned int v15;  // [bp-0x3c]\n
    unsigned int *v16;  // [bp-0x38]\n
    struct struct_1 **v17;  // [bp-0x30]\n
    unsigned long v18;  // [bp-0x28]\n
    char v19;  // [bp-0x19]\n
    unsigned int *v20;  // [bp-0x18]\n
    struct struct_1 **v21;  // [bp-0x10]\n
    unsigned int *v23;  // rax\n
    struct struct_1 **v24;  // rax\n
    unsigned int *v25;  // rax\n
    struct struct_1 **v26;  // rax\n
    unsigned int *v27;  // rax\n
    struct struct_1 **v28;  // rax\n
    unsigned int *v29;  // rax\n
    struct struct_1 **v30;  // rax\n
    struct struct_1 **v31;  // rax\n
    unsigned int *v32;  // rax\n
    unsigned int *v33;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = cgc__cookie;\n
    v3 = -1;\n
    if (cgc_sendline(1, \"===llamaundignifiedly===\", 24) < 0)\n
        cgc__terminate(1);\n
    v17 = a0;\n
    v16 = a1;\n
    memset(&v14, 0, 12);\n
    if (*(v16) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = *(&*(v17));\n
    cgc_uint2str(&v14, 12, v15);\n
    v2 = &v14;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v23 = v16;\n
    *(v23) = *(v23) - 4;\n
    v24 = v17;\n
    *(v24) = *(v24) + 4;\n
    v9 = a0;\n
    v8 = a1;\n
    memset(&v6, 0, 6);\n
    if (*(v8) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = *(&*(v9));\n
    cgc_uint2str(&v6, 6, v7);\n
    v1 = &v6;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v6)) < 0)\n
        cgc__terminate(1);\n
    v25 = v8;\n
    *(v25) = *(v25) - 2;\n
    v26 = v9;\n
    *(v26) = *(v26) + 2;\n
    v13 = a0;\n
    v12 = a1;\n
    memset(&v10, 0, 21);\n
    if (*(v12) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v11) = *(&*(v13));\n
    cgc_uint2str(&v10, 21, *(&v11));\n
    v0 = &v10;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v10)) < 0)\n
        cgc__terminate(1);\n
    v27 = v12;\n
    *(v27) = *(v27) - 8;\n
    v28 = v13;\n
    *(v28) = *(v28) + 8;\n
    v21 = a0;\n
    v20 = a1;\n
    if (*(v20) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(v21)->field_0;\n
    v29 = v20;\n
    *(v29) = *(v29) - 1;\n
    v30 = v21;\n
    *(v30) = *(v30) + 1;\n
    if (v19 <= *(v20) && !(!v19))\n
        goto LABEL_421f41;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_421f41:\n
    v18 = cgc_calloc(v19);\n
    if (!v18)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v18, *(v21), v19);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v31 = v21;\n
    *(v31) = &(*(v31))[v19];\n
    v32 = v20;\n
    *(v32) = *(v32) - v19;\n
    cgc_checkheap();\n
    cgc_free(v18);\n
    v4 ^= cgc__cookie;\n
    if (v4)\n
        cgc___stack_cookie_fail();\n
    v33 = a1;\n
    if (*(a1) > 0 && v3 >= 0)\n
    {\n
        v33 = v3;\n
        if (v33 < 0)\n
            v33 = *(&(&v5)[8 * v3])(a0, a1);\n
    }\n
    return v33;\n
}\n
", "4333690:sub_42207a": null, "4333696:cgc_process_llamaambulacriform": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6180;\n
extern unsigned long long g_4c6188;\n
\n
long long cgc_process_llamaambulacriform(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x2a0]\n
    char v1;  // [bp-0x291]\n
    struct_0 *v2;  // [bp-0x290]\n
    struct_0 *v3;  // [bp-0x288]\n
    char v4;  // [bp-0x279]\n
    struct_0 *v5;  // [bp-0x278]\n
    char v6;  // [bp-0x26d]\n
    unsigned int v7;  // [bp-0x26c]\n
    struct_0 *v8;  // [bp-0x268]\n
    char v9;  // [bp-0x259]\n
    struct_0 *v10;  // [bp-0x258]\n
    struct_0 *v11;  // [bp-0x250]\n
    struct_0 *v12;  // [bp-0x248]\n
    unsigned int v13;  // [bp-0x240]\n
    unsigned int v14;  // [bp-0x23c]\n
    unsigned long v15;  // [bp-0x238]\n
    unsigned long v16;  // [bp-0x230]\n
    char v17;  // [bp-0x20e]\n
    char *v18;  // [bp-0x208]\n
    unsigned short v19;  // [bp-0x1fa]\n
    unsigned int *v20;  // [bp-0x1f8]\n
    struct struct_1 **v21;  // [bp-0x1f0]\n
    char v22;  // [bp-0x1e8]\n
    char *v23;  // [bp-0x1c8]\n
    unsigned int v24;  // [bp-0x1c0]\n
    unsigned int *v25;  // [bp-0x1b8]\n
    struct struct_1 **v26;  // [bp-0x1b0]\n
    char v27;  // [bp-0x1a8]\n
    char v28[8];  // [bp-0x188]\n
    unsigned int v29;  // [bp-0x180]\n
    unsigned int *v30;  // [bp-0x178]\n
    struct struct_1 **v31;  // [bp-0x170]\n
    char *v32;  // [bp-0x168]\n
    unsigned int *v33;  // [bp-0x160]\n
    struct struct_1 **v34;  // [bp-0x158]\n
    char *v35;  // [bp-0x150]\n
    unsigned int *v36;  // [bp-0x148]\n
    struct struct_1 **v37;  // [bp-0x140]\n
    char *v38;  // [bp-0x138]\n
    unsigned int v39;  // [bp-0x12c]\n
    unsigned int *v40;  // [bp-0x128]\n
    struct struct_1 **v41;  // [bp-0x120]\n
    char v42;  // [bp-0x118]\n
    unsigned int v43;  // [bp-0x100]\n
    unsigned int *v44;  // [bp-0xf8]\n
    struct struct_1 **v45;  // [bp-0xf0]\n
    char v46;  // [bp-0xe8]\n
    unsigned int v47;  // [bp-0xd0]\n
    unsigned int *v48;  // [bp-0xc8]\n
    struct struct_1 **v49;  // [bp-0xc0]\n
    char v50;  // [bp-0xb8]\n
    unsigned int v51;  // [bp-0xac]\n
    unsigned int *v52;  // [bp-0xa8]\n
    struct struct_1 **v53;  // [bp-0xa0]\n
    char v54;  // [bp-0x98]\n
    unsigned int v55;  // [bp-0x8c]\n
    unsigned int *v56;  // [bp-0x88]\n
    struct struct_1 **v57;  // [bp-0x80]\n
    unsigned long v58;  // [bp-0x78]\n
    unsigned short v59;  // [bp-0x6a]\n
    unsigned int *v60;  // [bp-0x68]\n
    struct struct_1 **v61;  // [bp-0x60]\n
    unsigned long v62;  // [bp-0x58]\n
    unsigned short v63;  // [bp-0x4a]\n
    unsigned int *v64;  // [bp-0x48]\n
    struct struct_1 **v65;  // [bp-0x40]\n
    char v66;  // [bp-0x34]\n
    char *v67;  // [bp-0x28]\n
    unsigned int v68;  // [bp-0x1c]\n
    unsigned int *v69;  // [bp-0x18]\n
    struct struct_1 **v70;  // [bp-0x10]\n
    unsigned int *v72;  // rax\n
    struct struct_1 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_1 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_1 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_1 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_1 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_1 **v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_1 **v85;  // rax\n
    unsigned int *v86;  // rax\n
    struct struct_1 **v87;  // rax\n
    struct struct_1 **v89;  // rax\n
    unsigned int *v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_1 **v93;  // rax\n
    unsigned int *v94;  // rax\n
    struct struct_1 **v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_1 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_1 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_1 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_1 **v103;  // rax\n
    unsigned int *v104;  // rax, Other Possible Types: unsigned long\n
\n
    v15 = g_4c6180;\n
    v16 = g_4c6188;\n
    v14 = cgc__cookie;\n
    v13 = -1;\n
    if (cgc_sendline(1, \"===llamaambulacriform===\", 24) < 0)\n
        cgc__terminate(1);\n
    v37 = a0;\n
    v36 = a1;\n
    v35 = &*(v37)->field_0;\n
    if (*(v36) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = v36;\n
    *(v72) = *(v72) - 1;\n
    v73 = v37;\n
    *(v73) = *(v73) + 1;\n
    v13 = *(v35);\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v47) = *(&*(v49));\n
    cgc_uint2str(&v46, 21, *(&v47));\n
    v12 = &v46;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v74 = v48;\n
    *(v74) = *(v74) - 8;\n
    v75 = v49;\n
    *(v75) = *(v75) + 8;\n
    v45 = a0;\n
    v44 = a1;\n
    memset(&v42, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v43) = *(&*(v45));\n
    cgc_uint2str(&v42, 21, *(&v43));\n
    v11 = &v42;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v76 = v44;\n
    *(v76) = *(v76) - 8;\n
    v77 = v45;\n
    *(v77) = *(v77) + 8;\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 12);\n
    if (*(v52) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(&*(v53));\n
    cgc_uint2str(&v50, 12, v51);\n
    v10 = &v50;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v78 = v52;\n
    *(v78) = *(v78) - 4;\n
    v79 = v53;\n
    *(v79) = *(v79) + 4;\n
    v21 = a0;\n
    v20 = a1;\n
    v18 = &*(v21)->field_0;\n
    memset(&v17, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((*(v18) << 8))\n
        v9 = v18[1];\n
    v19 = v9 & 1;\n
    cgc_uint2str(&v17, 6, v19);\n
    v8 = &v17;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v17)) < 0)\n
        cgc__terminate(1);\n
    v80 = v20;\n
    *(v80) = *(v80) - 2;\n
    v81 = v21;\n
    *(v81) = *(v81) + 2;\n
    v65 = a0;\n
    v64 = a1;\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(&*(v65));\n
    v82 = v64;\n
    *(v82) = *(v82) - 2;\n
    v83 = v65;\n
    *(v83) = *(v83) + 2;\n
    if (v63 <= *(v64) && !(!v63))\n
        goto LABEL_4226cc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4226cc:\n
    v62 = cgc_calloc(v63);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v62, *(v65), v63);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v84 = v64;\n
    *(v84) = *(v84) - v63;\n
    v85 = v65;\n
    *(v85) = &(*(v85))[v63];\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    v34 = a0;\n
    v33 = a1;\n
    v32 = &*(v34)->field_0;\n
    if (*(v33) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = v33;\n
    *(v86) = *(v86) - 1;\n
    v87 = v34;\n
    *(v87) = *(v87) + 1;\n
    v13 = *(v32);\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v40) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v40);\n
    v39 = v7;\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = cgc_calloc(134);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v38, \"Str: \");\n
    cgc_strncpy(v38 + 5, *(v41), v39);\n
    v89 = v41;\n
    *(v89) = &(*(v89))[4 + cgc_strlen(v38)];\n
    v91 = v40;\n
    *(v91) = *(v91) - (cgc_strlen(v38) + -4);\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v28[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v28[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v28[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v28[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v28[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v28[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v28[6] << 8))\n
                                v6 = v28[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v29) = v6 & 1;\n
    cgc_uint2str(&v27, 21, *(&v29));\n
    v5 = &v27;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v92 = v30;\n
    *(v92) = *(v92) - 8;\n
    v93 = v31;\n
    *(v93) = *(v93) + 8;\n
    v70 = a0;\n
    v69 = a1;\n
    v67 = &*(v70)->field_0;\n
    memset(&v66, 0, 12);\n
    if (*(v69) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((*(v67) << 24))\n
    {\n
        v4 = 0;\n
        if ((v67[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v67[2] << 8))\n
                v4 = v67[3];\n
        }\n
    }\n
    v68 = v4 & 1;\n
    cgc_uint2str(&v66, 12, v68);\n
    v3 = &v66;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v94 = v69;\n
    *(v94) = *(v94) - 4;\n
    v95 = v70;\n
    *(v95) = *(v95) + 4;\n
    v57 = a0;\n
    v56 = a1;\n
    memset(&v54, 0, 12);\n
    if (*(v56) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(&*(v57));\n
    cgc_uint2str(&v54, 12, v55);\n
    v2 = &v54;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v96 = v56;\n
    *(v96) = *(v96) - 4;\n
    v97 = v57;\n
    *(v97) = *(v97) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(&*(v61));\n
    v98 = v60;\n
    *(v98) = *(v98) - 2;\n
    v99 = v61;\n
    *(v99) = *(v99) + 2;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_422f54;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_422f54:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v100 = v60;\n
    *(v100) = *(v100) - v59;\n
    v101 = v61;\n
    *(v101) = &(*(v101))[v59];\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v26 = a0;\n
    v25 = a1;\n
    v23 = &*(v26)->field_0;\n
    memset(&v22, 0, 21);\n
    if (*(v25) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (*(v23) << 56)\n
    {\n
        v1 = 0;\n
        if (v23[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v23[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v23[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v23[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v23[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v23[6] << 8))\n
                                v1 = v23[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v24) = v1 & 1;\n
    cgc_uint2str(&v22, 21, *(&v24));\n
    v0 = &v22;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v102 = v25;\n
    *(v102) = *(v102) - 8;\n
    v103 = v26;\n
    *(v103) = *(v103) + 8;\n
    v14 ^= cgc__cookie;\n
    if (v14)\n
        cgc___stack_cookie_fail();\n
    v104 = a1;\n
    if (*(a1) > 0 && v13 >= 0)\n
    {\n
        v104 = v13;\n
        if (v104 < 2)\n
            v104 = (&v15)[v13](a0, a1);\n
    }\n
    return v104;\n
}\n
", "4338339:sub_4232a3": null, "4338352:cgc_process_llamamyringotomy": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamamyringotomy(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0xa0]\n
    char v1;  // [bp-0x91]\n
    struct_1 *v2;  // [bp-0x90]\n
    unsigned int v3;  // [bp-0x88]\n
    unsigned int v4;  // [bp-0x84]\n
    char v5;  // [bp-0x80]\n
    char v6;  // [bp-0x68]\n
    char v7[8];  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x40]\n
    unsigned int *v9;  // [bp-0x38]\n
    struct struct_0 **v10;  // [bp-0x30]\n
    char v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x1c]\n
    unsigned int *v13;  // [bp-0x18]\n
    struct struct_0 **v14;  // [bp-0x10]\n
    unsigned int *v16;  // rax\n
    struct struct_0 **v17;  // rax\n
    unsigned int *v18;  // rax\n
    struct struct_0 **v19;  // rax\n
    unsigned int *v20;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = cgc__cookie;\n
    v3 = -1;\n
    if (cgc_sendline(1, \"===llamamyringotomy===\", 22) < 0)\n
        cgc__terminate(1);\n
    v14 = a0;\n
    v13 = a1;\n
    memset(&v11, 0, 12);\n
    if (*(v13) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = *(&*(v14)->field_0);\n
    cgc_uint2str(&v11, 12, v12);\n
    v2 = &v11;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v11)) < 0)\n
        cgc__terminate(1);\n
    v16 = v13;\n
    *(v16) = *(v16) - 4;\n
    v17 = v14;\n
    *(v17) = &*(v17)->field_4;\n
    v10 = a0;\n
    v9 = a1;\n
    *(&v7[0]) = *(v10);\n
    memset(&v6, 0, 21);\n
    if (*(v9) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v7[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v7[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v7[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v7[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v7[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v7[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v7[6] << 8))\n
                                v1 = v7[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v8) = v1 & 1;\n
    cgc_uint2str(&v6, 21, *(&v8));\n
    v0 = &v6;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v6)) < 0)\n
        cgc__terminate(1);\n
    v18 = v9;\n
    *(v18) = *(v18) - 8;\n
    v19 = v10;\n
    *(v19) = *(v19) + 1;\n
    v4 ^= cgc__cookie;\n
    if (v4)\n
        cgc___stack_cookie_fail();\n
    v20 = a1;\n
    if (*(a1) > 0 && v3 >= 0)\n
    {\n
        v20 = v3;\n
        if (v20 < 0)\n
            v20 = *(&(&v5)[8 * v3])(a0, a1);\n
    }\n
    return v20;\n
}\n
", "4339207:sub_423607": null, "4339216:cgc_process_llamaskewed": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaskewed(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x200]\n
    struct_1 *v1;  // [bp-0x1f8]\n
    struct_1 *v2;  // [bp-0x1f0]\n
    struct_1 *v3;  // [bp-0x1e8]\n
    struct_1 *v4;  // [bp-0x1e0]\n
    char v5;  // [bp-0x1d5]\n
    unsigned int v6;  // [bp-0x1d4]\n
    struct_1 *v7;  // [bp-0x1d0]\n
    struct_1 *v8;  // [bp-0x1c8]\n
    char v9;  // [bp-0x1b9]\n
    unsigned int v10;  // [bp-0x1b8]\n
    unsigned int v11;  // [bp-0x1b4]\n
    char v12;  // [bp-0x1b0]\n
    char v13;  // [bp-0x198]\n
    char v14[8];  // [bp-0x178]\n
    unsigned int v15;  // [bp-0x170]\n
    unsigned int *v16;  // [bp-0x168]\n
    struct struct_0 **v17;  // [bp-0x160]\n
    char v18;  // [bp-0x158]\n
    unsigned short v19;  // [bp-0x152]\n
    unsigned int *v20;  // [bp-0x150]\n
    struct struct_0 **v21;  // [bp-0x148]\n
    char v22;  // [bp-0x140]\n
    unsigned short v23;  // [bp-0x13a]\n
    unsigned int *v24;  // [bp-0x138]\n
    struct struct_0 **v25;  // [bp-0x130]\n
    char v26;  // [bp-0x128]\n
    unsigned int v27;  // [bp-0x110]\n
    unsigned int *v28;  // [bp-0x108]\n
    struct struct_0 **v29;  // [bp-0x100]\n
    char v30;  // [bp-0xf4]\n
    char v31[4];  // [bp-0xe8]\n
    unsigned int v32;  // [bp-0xdc]\n
    unsigned int *v33;  // [bp-0xd8]\n
    struct struct_0 **v34;  // [bp-0xd0]\n
    char *v35;  // [bp-0xc8]\n
    unsigned int v36;  // [bp-0xbc]\n
    unsigned int *v37;  // [bp-0xb8]\n
    struct struct_0 **v38;  // [bp-0xb0]\n
    char v39;  // [bp-0xa8]\n
    unsigned int v40;  // [bp-0x90]\n
    unsigned int *v41;  // [bp-0x88]\n
    struct struct_0 **v42;  // [bp-0x80]\n
    char v43;  // [bp-0x78]\n
    unsigned int v44;  // [bp-0x60]\n
    unsigned int *v45;  // [bp-0x58]\n
    struct struct_0 **v46;  // [bp-0x50]\n
    unsigned long v47;  // [bp-0x48]\n
    char v48;  // [bp-0x39]\n
    unsigned int *v49;  // [bp-0x38]\n
    struct struct_0 **v50;  // [bp-0x30]\n
    unsigned long v51;  // [bp-0x28]\n
    char v52;  // [bp-0x19]\n
    unsigned int *v53;  // [bp-0x18]\n
    struct struct_0 **v54;  // [bp-0x10]\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    struct struct_0 **v58;  // rax\n
    unsigned int *v59;  // rax\n
    unsigned int *v60;  // rax\n
    struct struct_0 **v61;  // rax\n
    unsigned int *v62;  // rax\n
    struct struct_0 **v63;  // rax\n
    struct struct_0 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    unsigned int *v66;  // rax\n
    struct struct_0 **v67;  // rax\n
    struct struct_0 **v69;  // rax\n
    unsigned int *v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_0 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_0 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_0 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax, Other Possible Types: unsigned long\n
\n
    v11 = cgc__cookie;\n
    v10 = -1;\n
    if (cgc_sendline(1, \"===llamaskewed===\", 17) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(v54)->field_0;\n
    v56 = v53;\n
    *(v56) = *(v56) - 1;\n
    v57 = v54;\n
    *(v57) = *(v57) + 1;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_42373c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42373c:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v58 = v54;\n
    *(v58) = &(*(v58))[v52];\n
    v59 = v53;\n
    *(v59) = *(v59) - v52;\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 12);\n
    if (*(v33) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v31[0] << 24))\n
    {\n
        v9 = 0;\n
        if ((v31[1] << 16))\n
        {\n
            v9 = 0;\n
            if ((v31[2] << 8))\n
                v9 = v31[3];\n
        }\n
    }\n
    v32 = v9 & 1;\n
    cgc_uint2str(&v30, 12, v32);\n
    v8 = &v30;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v60 = v33;\n
    *(v60) = *(v60) - 4;\n
    v61 = v34;\n
    *(v61) = *(v61) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(v50)->field_0;\n
    v62 = v49;\n
    *(v62) = *(v62) - 1;\n
    v63 = v50;\n
    *(v63) = *(v63) + 1;\n
    if (v48 <= *(v49) && !(!v48))\n
        goto LABEL_423a4f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_423a4f:\n
    v47 = cgc_calloc(v48);\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v47, *(v50), v48);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v64 = v50;\n
    *(v64) = &(*(v64))[v48];\n
    v65 = v49;\n
    *(v65) = *(v65) - v48;\n
    cgc_checkheap();\n
    cgc_free(v47);\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 6);\n
    if (*(v24) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = *(&*(v25));\n
    cgc_uint2str(&v22, 6, v23);\n
    v7 = &v22;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v66 = v24;\n
    *(v66) = *(v66) - 2;\n
    v67 = v25;\n
    *(v67) = *(v67) + 2;\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v37) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v37);\n
    v36 = v6;\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = cgc_calloc(134);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v35, \"Str: \");\n
    cgc_strncpy(v35 + 5, *(v38), v36);\n
    v69 = v38;\n
    *(v69) = &(*(v69))[4 + cgc_strlen(v35)];\n
    v71 = v37;\n
    *(v71) = *(v71) - (cgc_strlen(v35) + -4);\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v17 = a0;\n
    v16 = a1;\n
    *(&v14[0]) = *(v17);\n
    memset(&v13, 0, 21);\n
    if (*(v16) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v14[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v14[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v14[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v14[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v14[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v14[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v14[6] << 8))\n
                                v5 = v14[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v15) = v5 & 1;\n
    cgc_uint2str(&v13, 21, *(&v15));\n
    v4 = &v13;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v13)) < 0)\n
        cgc__terminate(1);\n
    v72 = v16;\n
    *(v72) = *(v72) - 8;\n
    v73 = v17;\n
    *(v73) = *(v73) + 8;\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v44) = *(&*(v46));\n
    cgc_uint2str(&v43, 21, *(&v44));\n
    v3 = &v43;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v74 = v45;\n
    *(v74) = *(v74) - 8;\n
    v75 = v46;\n
    *(v75) = *(v75) + 8;\n
    v21 = a0;\n
    v20 = a1;\n
    memset(&v18, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(&*(v21));\n
    cgc_uint2str(&v18, 6, v19);\n
    v2 = &v18;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v76 = v20;\n
    *(v76) = *(v76) - 2;\n
    v77 = v21;\n
    *(v77) = *(v77) + 2;\n
    v42 = a0;\n
    v41 = a1;\n
    memset(&v39, 0, 21);\n
    if (*(v41) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v40) = *(&*(v42));\n
    cgc_uint2str(&v39, 21, *(&v40));\n
    v1 = &v39;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v78 = v41;\n
    *(v78) = *(v78) - 8;\n
    v79 = v42;\n
    *(v79) = *(v79) + 8;\n
    v29 = a0;\n
    v28 = a1;\n
    memset(&v26, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v27) = *(&*(v29));\n
    cgc_uint2str(&v26, 21, *(&v27));\n
    v0 = &v26;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v80 = v28;\n
    *(v80) = *(v80) - 8;\n
    v81 = v29;\n
    *(v81) = *(v81) + 8;\n
    v11 ^= cgc__cookie;\n
    if (v11)\n
        cgc___stack_cookie_fail();\n
    v82 = a1;\n
    if (*(a1) > 0 && v10 >= 0)\n
    {\n
        v82 = v10;\n
        if (v82 < 0)\n
            v82 = *(&(&v12)[8 * v10])(a0, a1);\n
    }\n
    return v82;\n
}\n
", "4342905:sub_424479": null, "4342912:cgc_process_llamaJaina": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6190;\n
extern unsigned long long g_4c6198;\n
\n
long long cgc_process_llamaJaina(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x440]\n
    char v1;  // [bp-0x431]\n
    struct_1 *v2;  // [bp-0x430]\n
    char v3;  // [bp-0x425]\n
    unsigned int v4;  // [bp-0x424]\n
    struct_1 *v5;  // [bp-0x420]\n
    char v6;  // [bp-0x411]\n
    struct_1 *v7;  // [bp-0x410]\n
    char v8;  // [bp-0x401]\n
    struct_1 *v9;  // [bp-0x400]\n
    unsigned int v10;  // [bp-0x3f4]\n
    struct_1 *v11;  // [bp-0x3f0]\n
    unsigned int v12;  // [bp-0x3e4]\n
    struct_1 *v13;  // [bp-0x3e0]\n
    char v14;  // [bp-0x3d5]\n
    unsigned int v15;  // [bp-0x3d4]\n
    struct_1 *v16;  // [bp-0x3d0]\n
    struct_1 *v17;  // [bp-0x3c8]\n
    struct_1 *v18;  // [bp-0x3c0]\n
    char v19;  // [bp-0x3b5]\n
    unsigned int v20;  // [bp-0x3b4]\n
    unsigned int v21;  // [bp-0x3b0]\n
    unsigned int v22;  // [bp-0x3ac]\n
    unsigned long v23;  // [bp-0x3a8]\n
    unsigned long v24;  // [bp-0x3a0]\n
    char v25;  // [bp-0x37e]\n
    char v26[2];  // [bp-0x378]\n
    unsigned short v27;  // [bp-0x36a]\n
    unsigned int *v28;  // [bp-0x368]\n
    struct struct_0 **v29;  // [bp-0x360]\n
    char v30;  // [bp-0x356]\n
    char v31[2];  // [bp-0x350]\n
    unsigned short v32;  // [bp-0x342]\n
    unsigned int *v33;  // [bp-0x340]\n
    struct struct_0 **v34;  // [bp-0x338]\n
    char v35;  // [bp-0x32e]\n
    char v36[2];  // [bp-0x328]\n
    unsigned short v37;  // [bp-0x31a]\n
    unsigned int *v38;  // [bp-0x318]\n
    struct struct_0 **v39;  // [bp-0x310]\n
    char v40;  // [bp-0x308]\n
    char v41[8];  // [bp-0x2e8]\n
    unsigned int v42;  // [bp-0x2e0]\n
    unsigned int *v43;  // [bp-0x2d8]\n
    struct struct_0 **v44;  // [bp-0x2d0]\n
    char v45;  // [bp-0x2c8]\n
    char v46[8];  // [bp-0x2a8]\n
    unsigned int v47;  // [bp-0x2a0]\n
    unsigned int *v48;  // [bp-0x298]\n
    struct struct_0 **v49;  // [bp-0x290]\n
    unsigned long v50;  // [bp-0x288]\n
    char v51;  // [bp-0x279]\n
    unsigned int *v52;  // [bp-0x278]\n
    struct struct_0 **v53;  // [bp-0x270]\n
    char *v54;  // [bp-0x268]\n
    unsigned int *v55;  // [bp-0x260]\n
    struct struct_0 **v56;  // [bp-0x258]\n
    char *v57;  // [bp-0x250]\n
    unsigned int *v58;  // [bp-0x248]\n
    struct struct_0 **v59;  // [bp-0x240]\n
    char *v60;  // [bp-0x238]\n
    unsigned int *v61;  // [bp-0x230]\n
    struct struct_0 **v62;  // [bp-0x228]\n
    char v63;  // [bp-0x21d]\n
    char v64;  // [bp-0x219]\n
    unsigned int *v65;  // [bp-0x218]\n
    struct struct_0 **v66;  // [bp-0x210]\n
    char v67;  // [bp-0x205]\n
    char v68;  // [bp-0x201]\n
    unsigned int *v69;  // [bp-0x200]\n
    struct struct_0 **v70;  // [bp-0x1f8]\n
    char v71;  // [bp-0x1ed]\n
    char v72;  // [bp-0x1e9]\n
    unsigned int *v73;  // [bp-0x1e8]\n
    struct struct_0 **v74;  // [bp-0x1e0]\n
    unsigned short *v75;  // [bp-0x1d8]\n
    unsigned int *v76;  // [bp-0x1d0]\n
    struct struct_0 **v77;  // [bp-0x1c8]\n
    char v78[8];  // [bp-0x1c0]\n
    unsigned int *v79;  // [bp-0x1b8]\n
    struct struct_0 **v80;  // [bp-0x1b0]\n
    unsigned short *v81;  // [bp-0x1a8]\n
    unsigned int *v82;  // [bp-0x1a0]\n
    struct struct_0 **v83;  // [bp-0x198]\n
    unsigned short *v84;  // [bp-0x190]\n
    unsigned int *v85;  // [bp-0x188]\n
    struct struct_0 **v86;  // [bp-0x180]\n
    char v87;  // [bp-0x178]\n
    unsigned int v88;  // [bp-0x16c]\n
    unsigned int *v89;  // [bp-0x168]\n
    struct struct_0 **v90;  // [bp-0x160]\n
    unsigned long v91;  // [bp-0x158]\n
    unsigned short v92;  // [bp-0x14a]\n
    unsigned int *v93;  // [bp-0x148]\n
    struct struct_0 **v94;  // [bp-0x140]\n
    unsigned long v95;  // [bp-0x138]\n
    unsigned short v96;  // [bp-0x12a]\n
    unsigned int *v97;  // [bp-0x128]\n
    struct struct_0 **v98;  // [bp-0x120]\n
    unsigned long v99;  // [bp-0x118]\n
    unsigned short v100;  // [bp-0x10a]\n
    unsigned int *v101;  // [bp-0x108]\n
    struct struct_0 **v102;  // [bp-0x100]\n
    char v103;  // [bp-0xf4]\n
    char v104[4];  // [bp-0xe8]\n
    unsigned int v105;  // [bp-0xdc]\n
    unsigned int *v106;  // [bp-0xd8]\n
    struct struct_0 **v107;  // [bp-0xd0]\n
    char *v108;  // [bp-0xc8]\n
    unsigned int v109;  // [bp-0xbc]\n
    unsigned int *v110;  // [bp-0xb8]\n
    struct struct_0 **v111;  // [bp-0xb0]\n
    char *v112;  // [bp-0xa8]\n
    unsigned int v113;  // [bp-0x9c]\n
    unsigned int *v114;  // [bp-0x98]\n
    struct struct_0 **v115;  // [bp-0x90]\n
    char *v116;  // [bp-0x88]\n
    unsigned int v117;  // [bp-0x7c]\n
    unsigned int *v118;  // [bp-0x78]\n
    struct struct_0 **v119;  // [bp-0x70]\n
    char *v120;  // [bp-0x68]\n
    unsigned int v121;  // [bp-0x5c]\n
    unsigned int *v122;  // [bp-0x58]\n
    struct struct_0 **v123;  // [bp-0x50]\n
    char *v124;  // [bp-0x48]\n
    unsigned int v125;  // [bp-0x3c]\n
    unsigned int *v126;  // [bp-0x38]\n
    struct struct_0 **v127;  // [bp-0x30]\n
    unsigned long v128;  // [bp-0x28]\n
    char v129;  // [bp-0x19]\n
    unsigned int *v130;  // [bp-0x18]\n
    struct struct_0 **v131;  // [bp-0x10]\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    struct struct_0 **v158;  // rax\n
    unsigned int *v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_0 **v168;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    struct struct_0 **v176;  // rax\n
    unsigned int *v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_0 **v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    unsigned int *v207;  // rax, Other Possible Types: unsigned long\n
\n
    v23 = g_4c6190;\n
    v24 = g_4c6198;\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamaJaina===\", 16) < 0)\n
        cgc__terminate(1);\n
    v127 = a0;\n
    v126 = a1;\n
    if (*(v126) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v126) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v126);\n
    v125 = v20;\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = cgc_calloc(134);\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v124, \"Str: \");\n
    cgc_strncpy(v124 + 5, *(v127), v125);\n
    v134 = v127;\n
    *(v134) = &(&*(v134)->field_4)[cgc_strlen(v124)];\n
    v136 = v126;\n
    *(v136) = *(v136) - (cgc_strlen(v124) + -4);\n
    cgc_checkheap();\n
    cgc_free(v124);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((v36[0] << 8))\n
        v19 = v36[1];\n
    v37 = v19 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v18 = &v35;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v137 = v38;\n
    *(v137) = *(v137) - 2;\n
    v138 = v39;\n
    *(v138) = &*(v138)->padding_1[1];\n
    v86 = a0;\n
    v85 = a1;\n
    v84 = &*(v86)->field_0;\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = v85;\n
    *(v139) = *(v139) - 2;\n
    v140 = v86;\n
    *(v140) = &*(v140)->padding_1[1];\n
    v21 = *(v84);\n
    v90 = a0;\n
    v89 = a1;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v17 = &v87;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v141 = v89;\n
    *(v141) = *(v141) - 4;\n
    v142 = v90;\n
    *(v142) = &*(v142)->field_4;\n
    v83 = a0;\n
    v82 = a1;\n
    v81 = &*(v83)->field_0;\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v143 = v82;\n
    *(v143) = *(v143) - 2;\n
    v144 = v83;\n
    *(v144) = &*(v144)->padding_1[1];\n
    v21 = *(v81);\n
    v53 = a0;\n
    v52 = a1;\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(v53)->field_0;\n
    v145 = v52;\n
    *(v145) = *(v145) - 1;\n
    v146 = v53;\n
    *(v146) = &*(v146)->padding_1;\n
    if (v51 <= *(v52) && !(!v51))\n
        goto LABEL_424b36;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_424b36:\n
    v50 = cgc_calloc(v51);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v50, *(v53), v51);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v147 = v53;\n
    *(v147) = &(&*(v147)->field_0)[v51];\n
    v148 = v52;\n
    *(v148) = *(v148) - v51;\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    v62 = a0;\n
    v61 = a1;\n
    v60 = &*(v62)->field_0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v149 = v61;\n
    *(v149) = *(v149) - 1;\n
    v150 = v62;\n
    *(v150) = &*(v150)->padding_1;\n
    v21 = *(v60);\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 4);\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(v74)->field_0;\n
    cgc_uint2str(&v71, 4, v72);\n
    v16 = &v71;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v151 = v73;\n
    *(v151) = *(v151) - 1;\n
    v152 = v74;\n
    *(v152) = &*(v152)->padding_1;\n
    v102 = a0;\n
    v101 = a1;\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    v153 = v101;\n
    *(v153) = *(v153) - 2;\n
    v154 = v102;\n
    *(v154) = &*(v154)->padding_1[1];\n
    if (v100 <= *(v101) && !(!v100))\n
        goto LABEL_424ead;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_424ead:\n
    v99 = cgc_calloc(v100);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v99, *(v102), v100);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v155 = v101;\n
    *(v155) = *(v155) - v100;\n
    v156 = v102;\n
    *(v156) = &(&*(v156)->field_0)[v100];\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    v123 = a0;\n
    v122 = a1;\n
    if (*(v122) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v122) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v122);\n
    v121 = v15;\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = cgc_calloc(134);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v120, \"Str: \");\n
    cgc_strncpy(v120 + 5, *(v123), v121);\n
    v158 = v123;\n
    *(v158) = &(&*(v158)->field_4)[cgc_strlen(v120)];\n
    v160 = v122;\n
    *(v160) = *(v160) - (cgc_strlen(v120) + -4);\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v59 = a0;\n
    v58 = a1;\n
    v57 = &*(v59)->field_0;\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = v58;\n
    *(v161) = *(v161) - 1;\n
    v162 = v59;\n
    *(v162) = &*(v162)->padding_1;\n
    v21 = *(v57);\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46[0]) = *(v49);\n
    memset(&v45, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v46[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v46[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v46[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v46[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v46[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v46[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v46[6] << 8))\n
                                v14 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v47) = v14 & 1;\n
    cgc_uint2str(&v45, 21, *(&v47));\n
    v13 = &v45;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v163 = v48;\n
    *(v163) = *(v163) - 8;\n
    v164 = v49;\n
    *(v164) = *(v164) + 1;\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    v165 = v93;\n
    *(v165) = *(v165) - 2;\n
    v166 = v94;\n
    *(v166) = &*(v166)->padding_1[1];\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_4254f5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4254f5:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v167 = v93;\n
    *(v167) = *(v167) - v92;\n
    v168 = v94;\n
    *(v168) = &(&*(v168)->field_0)[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v119 = a0;\n
    v118 = a1;\n
    if (*(v118) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v118) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v118);\n
    v117 = v12;\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = cgc_calloc(134);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v116, \"Str: \");\n
    cgc_strncpy(v116 + 5, *(v119), v117);\n
    v170 = v119;\n
    *(v170) = &(&*(v170)->field_4)[cgc_strlen(v116)];\n
    v172 = v118;\n
    *(v172) = *(v172) - (cgc_strlen(v116) + -4);\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 4);\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(v70)->field_0;\n
    cgc_uint2str(&v67, 4, v68);\n
    v11 = &v67;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v173 = v69;\n
    *(v173) = *(v173) - 1;\n
    v174 = v70;\n
    *(v174) = &*(v174)->padding_1;\n
    v115 = a0;\n
    v114 = a1;\n
    if (*(v114) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v114) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v114);\n
    v113 = v10;\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = cgc_calloc(134);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v112, \"Str: \");\n
    cgc_strncpy(v112 + 5, *(v115), v113);\n
    v176 = v115;\n
    *(v176) = &(&*(v176)->field_4)[cgc_strlen(v112)];\n
    v178 = v114;\n
    *(v178) = *(v178) - (cgc_strlen(v112) + -4);\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v66 = a0;\n
    v65 = a1;\n
    memset(&v63, 0, 4);\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    cgc_uint2str(&v63, 4, v64);\n
    v9 = &v63;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v179 = v65;\n
    *(v179) = *(v179) - 1;\n
    v180 = v66;\n
    *(v180) = &*(v180)->padding_1;\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v31[0] << 8))\n
        v8 = v31[1];\n
    v32 = v8 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v7 = &v30;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v181 = v33;\n
    *(v181) = *(v181) - 2;\n
    v182 = v34;\n
    *(v182) = &*(v182)->padding_1[1];\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v26[0] << 8))\n
        v6 = v26[1];\n
    v27 = v6 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v5 = &v25;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v183 = v28;\n
    *(v183) = *(v183) - 2;\n
    v184 = v29;\n
    *(v184) = &*(v184)->padding_1[1];\n
    v111 = a0;\n
    v110 = a1;\n
    if (*(v110) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v110) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v110);\n
    v109 = v4;\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = cgc_calloc(134);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v108, \"Str: \");\n
    cgc_strncpy(v108 + 5, *(v111), v109);\n
    v186 = v111;\n
    *(v186) = &(&*(v186)->field_4)[cgc_strlen(v108)];\n
    v188 = v110;\n
    *(v188) = *(v188) - (cgc_strlen(v108) + -4);\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v107 = a0;\n
    v106 = a1;\n
    *(&v104) = *(v107);\n
    memset(&v103, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v104[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v104[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v104[2] << 8))\n
                v3 = v104[3];\n
        }\n
    }\n
    v105 = v3 & 1;\n
    cgc_uint2str(&v103, 12, v105);\n
    v2 = &v103;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v189 = v106;\n
    *(v189) = *(v189) - 4;\n
    v190 = v107;\n
    *(v190) = &*(v190)->field_4;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    v191 = v97;\n
    *(v191) = *(v191) - 2;\n
    v192 = v98;\n
    *(v192) = &*(v192)->padding_1[1];\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_426280;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_426280:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v193 = v97;\n
    *(v193) = *(v193) - v96;\n
    v194 = v98;\n
    *(v194) = &(&*(v194)->field_0)[v96];\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v56 = a0;\n
    v55 = a1;\n
    v54 = &*(v56)->field_0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v195 = v55;\n
    *(v195) = *(v195) - 1;\n
    v196 = v56;\n
    *(v196) = &*(v196)->padding_1;\n
    v21 = *(v54);\n
    v80 = a0;\n
    v79 = a1;\n
    *(&v78[0]) = *(v80);\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v197 = v79;\n
    *(v197) = *(v197) - 2;\n
    v198 = v80;\n
    *(v198) = &*(v198)->padding_1[1];\n
    v21 = *(&v78[0]);\n
    v77 = a0;\n
    v76 = a1;\n
    v75 = &*(v77)->field_0;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v199 = v76;\n
    *(v199) = *(v199) - 2;\n
    v200 = v77;\n
    *(v200) = &*(v200)->padding_1[1];\n
    v21 = *(v75);\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41[0]) = *(v44);\n
    memset(&v40, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v41[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v41[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v41[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v41[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v41[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v41[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v41[6] << 8))\n
                                v1 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v42) = v1 & 1;\n
    cgc_uint2str(&v40, 21, *(&v42));\n
    v0 = &v40;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v201 = v43;\n
    *(v201) = *(v201) - 8;\n
    v202 = v44;\n
    *(v202) = *(v202) + 1;\n
    v131 = a0;\n
    v130 = a1;\n
    if (*(v130) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(v131)->field_0;\n
    v203 = v130;\n
    *(v203) = *(v203) - 1;\n
    v204 = v131;\n
    *(v204) = &*(v204)->padding_1;\n
    if (v129 <= *(v130) && !(!v129))\n
        goto LABEL_426835;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_426835:\n
    v128 = cgc_calloc(v129);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v128, *(v131), v129);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v205 = v131;\n
    *(v205) = &(&*(v205)->field_0)[v129];\n
    v206 = v130;\n
    *(v206) = *(v206) - v129;\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    v22 ^= cgc__cookie;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v207 = a1;\n
    if (*(a1) > 0 && v21 >= 0)\n
    {\n
        v207 = v21;\n
        if (v207 < 2)\n
            v207 = (&v23)[v21](a0, a1);\n
    }\n
    return v207;\n
}\n
", "4352366:sub_42696e": null, "4352368:cgc_process_llamaPantagruelistic": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaPantagruelistic(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x380]\n
    struct_1 *v1;  // [bp-0x378]\n
    struct_1 *v2;  // [bp-0x370]\n
    struct_1 *v3;  // [bp-0x368]\n
    struct_1 *v4;  // [bp-0x360]\n
    struct_1 *v5;  // [bp-0x358]\n
    char v6;  // [bp-0x349]\n
    struct_1 *v7;  // [bp-0x348]\n
    char v8;  // [bp-0x339]\n
    struct_1 *v9;  // [bp-0x338]\n
    struct_1 *v10;  // [bp-0x330]\n
    struct_1 *v11;  // [bp-0x328]\n
    char v12;  // [bp-0x319]\n
    struct_1 *v13;  // [bp-0x318]\n
    struct_1 *v14;  // [bp-0x310]\n
    char v15;  // [bp-0x301]\n
    struct_1 *v16;  // [bp-0x300]\n
    unsigned int v17;  // [bp-0x2f8]\n
    unsigned int v18;  // [bp-0x2f4]\n
    char v19;  // [bp-0x2f0]\n
    char v20;  // [bp-0x2d6]\n
    char *v21;  // [bp-0x2d0]\n
    unsigned short v22;  // [bp-0x2c2]\n
    unsigned int *v23;  // [bp-0x2c0]\n
    struct struct_0 **v24;  // [bp-0x2b8]\n
    char v25;  // [bp-0x2ae]\n
    char v26[2];  // [bp-0x2a8]\n
    unsigned short v27;  // [bp-0x29a]\n
    unsigned int *v28;  // [bp-0x298]\n
    struct struct_0 **v29;  // [bp-0x290]\n
    unsigned long v30;  // [bp-0x288]\n
    char v31;  // [bp-0x279]\n
    unsigned int *v32;  // [bp-0x278]\n
    struct struct_0 **v33;  // [bp-0x270]\n
    unsigned long v34;  // [bp-0x268]\n
    char v35;  // [bp-0x259]\n
    unsigned int *v36;  // [bp-0x258]\n
    struct struct_0 **v37;  // [bp-0x250]\n
    unsigned long v38;  // [bp-0x248]\n
    char v39;  // [bp-0x239]\n
    unsigned int *v40;  // [bp-0x238]\n
    struct struct_0 **v41;  // [bp-0x230]\n
    char v42;  // [bp-0x225]\n
    char v43;  // [bp-0x221]\n
    unsigned int *v44;  // [bp-0x220]\n
    struct struct_0 **v45;  // [bp-0x218]\n
    char v46;  // [bp-0x20d]\n
    char v47;  // [bp-0x209]\n
    unsigned int *v48;  // [bp-0x208]\n
    struct struct_0 **v49;  // [bp-0x200]\n
    char v50;  // [bp-0x1f8]\n
    unsigned int v51;  // [bp-0x1e0]\n
    unsigned int *v52;  // [bp-0x1d8]\n
    struct struct_0 **v53;  // [bp-0x1d0]\n
    char v54;  // [bp-0x1c8]\n
    unsigned int v55;  // [bp-0x1b0]\n
    unsigned int *v56;  // [bp-0x1a8]\n
    struct struct_0 **v57;  // [bp-0x1a0]\n
    char v58;  // [bp-0x198]\n
    unsigned int v59;  // [bp-0x18c]\n
    unsigned int *v60;  // [bp-0x188]\n
    struct struct_0 **v61;  // [bp-0x180]\n
    char v62;  // [bp-0x178]\n
    unsigned int v63;  // [bp-0x16c]\n
    unsigned int *v64;  // [bp-0x168]\n
    struct struct_0 **v65;  // [bp-0x160]\n
    char v66;  // [bp-0x158]\n
    unsigned int v67;  // [bp-0x14c]\n
    unsigned int *v68;  // [bp-0x148]\n
    struct struct_0 **v69;  // [bp-0x140]\n
    char v70;  // [bp-0x138]\n
    unsigned int v71;  // [bp-0x12c]\n
    unsigned int *v72;  // [bp-0x128]\n
    struct struct_0 **v73;  // [bp-0x120]\n
    unsigned long v74;  // [bp-0x118]\n
    unsigned short v75;  // [bp-0x10a]\n
    unsigned int *v76;  // [bp-0x108]\n
    struct struct_0 **v77;  // [bp-0x100]\n
    unsigned long v78;  // [bp-0xf8]\n
    unsigned short v79;  // [bp-0xea]\n
    unsigned int *v80;  // [bp-0xe8]\n
    struct struct_0 **v81;  // [bp-0xe0]\n
    unsigned long v82;  // [bp-0xd8]\n
    unsigned short v83;  // [bp-0xca]\n
    unsigned int *v84;  // [bp-0xc8]\n
    struct struct_0 **v85;  // [bp-0xc0]\n
    char v86;  // [bp-0xb4]\n
    char v87[4];  // [bp-0xa8]\n
    unsigned int v88;  // [bp-0x9c]\n
    unsigned int *v89;  // [bp-0x98]\n
    struct struct_0 **v90;  // [bp-0x90]\n
    char v91;  // [bp-0x84]\n
    char *v92;  // [bp-0x78]\n
    unsigned int v93;  // [bp-0x6c]\n
    unsigned int *v94;  // [bp-0x68]\n
    struct struct_0 **v95;  // [bp-0x60]\n
    char v96;  // [bp-0x58]\n
    unsigned int v97;  // [bp-0x40]\n
    unsigned int *v98;  // [bp-0x38]\n
    struct struct_0 **v99;  // [bp-0x30]\n
    unsigned long v100;  // [bp-0x28]\n
    char v101;  // [bp-0x19]\n
    unsigned int *v102;  // [bp-0x18]\n
    struct struct_0 **v103;  // [bp-0x10]\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v113;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    struct struct_0 **v135;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    struct struct_0 **v139;  // rax\n
    unsigned int *v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    unsigned int *v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    unsigned int *v159;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamaPantagruelistic===\", 26) < 0)\n
        cgc__terminate(1);\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 12, v71);\n
    v16 = &v70;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v105 = v72;\n
    *(v105) = *(v105) - 4;\n
    v106 = v73;\n
    *(v106) = *(v106) + 4;\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v26[0] << 8))\n
        v15 = v26[1];\n
    v27 = v15 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v14 = &v25;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v107 = v28;\n
    *(v107) = *(v107) - 2;\n
    v108 = v29;\n
    *(v108) = *(v108) + 2;\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 4);\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(v49)->field_0;\n
    cgc_uint2str(&v46, 4, v47);\n
    v13 = &v46;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v109 = v48;\n
    *(v109) = *(v109) - 1;\n
    v110 = v49;\n
    *(v110) = *(v110) + 1;\n
    v24 = a0;\n
    v23 = a1;\n
    v21 = &*(v24)->field_0;\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((*(v21) << 8))\n
        v12 = v21[1];\n
    v22 = v12 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v11 = &v20;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v111 = v23;\n
    *(v111) = *(v111) - 2;\n
    v112 = v24;\n
    *(v112) = *(v112) + 2;\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    v113 = v84;\n
    *(v113) = *(v113) - 2;\n
    v114 = v85;\n
    *(v114) = *(v114) + 2;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_426f58;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_426f58:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v115 = v84;\n
    *(v115) = *(v115) - v83;\n
    v116 = v85;\n
    *(v116) = &(*(v116))[v83];\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 12);\n
    if (*(v64) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(&*(v65));\n
    cgc_uint2str(&v62, 12, v63);\n
    v10 = &v62;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v117 = v64;\n
    *(v117) = *(v117) - 4;\n
    v118 = v65;\n
    *(v118) = *(v118) + 4;\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 12);\n
    if (*(v68) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v67 = *(&*(v69));\n
    cgc_uint2str(&v66, 12, v67);\n
    v9 = &v66;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v119 = v68;\n
    *(v119) = *(v119) - 4;\n
    v120 = v69;\n
    *(v120) = *(v120) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    v121 = v80;\n
    *(v121) = *(v121) - 2;\n
    v122 = v81;\n
    *(v122) = *(v122) + 2;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_427333;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_427333:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v123 = v80;\n
    *(v123) = *(v123) - v79;\n
    v124 = v81;\n
    *(v124) = &(*(v124))[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v95 = a0;\n
    v94 = a1;\n
    v92 = &*(v95)->field_0;\n
    memset(&v91, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((*(v92) << 24))\n
    {\n
        v8 = 0;\n
        if ((v92[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v92[2] << 8))\n
                v8 = v92[3];\n
        }\n
    }\n
    v93 = v8 & 1;\n
    cgc_uint2str(&v91, 12, v93);\n
    v7 = &v91;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v91)) < 0)\n
        cgc__terminate(1);\n
    v125 = v94;\n
    *(v125) = *(v125) - 4;\n
    v126 = v95;\n
    *(v126) = *(v126) + 4;\n
    v90 = a0;\n
    v89 = a1;\n
    *(&v87) = *(v90);\n
    memset(&v86, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v87[0] << 24))\n
    {\n
        v6 = 0;\n
        if ((v87[1] << 16))\n
        {\n
            v6 = 0;\n
            if ((v87[2] << 8))\n
                v6 = v87[3];\n
        }\n
    }\n
    v88 = v6 & 1;\n
    cgc_uint2str(&v86, 12, v88);\n
    v5 = &v86;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v127 = v89;\n
    *(v127) = *(v127) - 4;\n
    v128 = v90;\n
    *(v128) = *(v128) + 4;\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    v129 = v76;\n
    *(v129) = *(v129) - 2;\n
    v130 = v77;\n
    *(v130) = *(v130) + 2;\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_4277d8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4277d8:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v131 = v76;\n
    *(v131) = *(v131) - v75;\n
    v132 = v77;\n
    *(v132) = &(*(v132))[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(v41)->field_0;\n
    v133 = v40;\n
    *(v133) = *(v133) - 1;\n
    v134 = v41;\n
    *(v134) = *(v134) + 1;\n
    if (v39 <= *(v40) && !(!v39))\n
        goto LABEL_4279a6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4279a6:\n
    v38 = cgc_calloc(v39);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v38, *(v41), v39);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v135 = v41;\n
    *(v135) = &(*(v135))[v39];\n
    v136 = v40;\n
    *(v136) = *(v136) - v39;\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(v37)->field_0;\n
    v137 = v36;\n
    *(v137) = *(v137) - 1;\n
    v138 = v37;\n
    *(v138) = *(v138) + 1;\n
    if (v35 <= *(v36) && !(!v35))\n
        goto LABEL_427b74;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_427b74:\n
    v34 = cgc_calloc(v35);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v34, *(v37), v35);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v139 = v37;\n
    *(v139) = &(*(v139))[v35];\n
    v140 = v36;\n
    *(v140) = *(v140) - v35;\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    v57 = a0;\n
    v56 = a1;\n
    memset(&v54, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v55) = *(&*(v57));\n
    cgc_uint2str(&v54, 21, *(&v55));\n
    v4 = &v54;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v141 = v56;\n
    *(v141) = *(v141) - 8;\n
    v142 = v57;\n
    *(v142) = *(v142) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    if (*(v32) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(v33)->field_0;\n
    v143 = v32;\n
    *(v143) = *(v143) - 1;\n
    v144 = v33;\n
    *(v144) = *(v144) + 1;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_427e4c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_427e4c:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v145 = v33;\n
    *(v145) = &(*(v145))[v31];\n
    v146 = v32;\n
    *(v146) = *(v146) - v31;\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v97) = *(&*(v99));\n
    cgc_uint2str(&v96, 21, *(&v97));\n
    v3 = &v96;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v147 = v98;\n
    *(v147) = *(v147) - 8;\n
    v148 = v99;\n
    *(v148) = *(v148) + 8;\n
    v61 = a0;\n
    v60 = a1;\n
    memset(&v58, 0, 12);\n
    if (*(v60) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(&*(v61));\n
    cgc_uint2str(&v58, 12, v59);\n
    v2 = &v58;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v149 = v60;\n
    *(v149) = *(v149) - 4;\n
    v150 = v61;\n
    *(v150) = *(v150) + 4;\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v51) = *(&*(v53));\n
    cgc_uint2str(&v50, 21, *(&v51));\n
    v1 = &v50;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v151 = v52;\n
    *(v151) = *(v151) - 8;\n
    v152 = v53;\n
    *(v152) = *(v152) + 8;\n
    v45 = a0;\n
    v44 = a1;\n
    memset(&v42, 0, 4);\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = *(v45)->field_0;\n
    cgc_uint2str(&v42, 4, v43);\n
    v0 = &v42;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v153 = v44;\n
    *(v153) = *(v153) - 1;\n
    v154 = v45;\n
    *(v154) = *(v154) + 1;\n
    v103 = a0;\n
    v102 = a1;\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = *(v103)->field_0;\n
    v155 = v102;\n
    *(v155) = *(v155) - 1;\n
    v156 = v103;\n
    *(v156) = *(v156) + 1;\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_4283eb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4283eb:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v157 = v103;\n
    *(v157) = &(*(v157))[v101];\n
    v158 = v102;\n
    *(v158) = *(v158) - v101;\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v159 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v159 = v17;\n
        if (v159 < 0)\n
            v159 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v159;\n
}\n
", "4359460:sub_428524": null, "4359472:cgc_process_llamafolliculin": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamafolliculin(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x278]\n
    struct_1 *v1;  // [bp-0x270]\n
    struct_1 *v2;  // [bp-0x268]\n
    char v3;  // [bp-0x259]\n
    struct_1 *v4;  // [bp-0x258]\n
    struct_1 *v5;  // [bp-0x250]\n
    struct_1 *v6;  // [bp-0x248]\n
    struct_1 *v7;  // [bp-0x240]\n
    unsigned int v8;  // [bp-0x234]\n
    struct_1 *v9;  // [bp-0x230]\n
    struct_1 *v10;  // [bp-0x228]\n
    char v11;  // [bp-0x219]\n
    unsigned int v12;  // [bp-0x218]\n
    unsigned int v13;  // [bp-0x214]\n
    char v14;  // [bp-0x210]\n
    char v15;  // [bp-0x1f8]\n
    char v16[8];  // [bp-0x1d8]\n
    unsigned int v17;  // [bp-0x1d0]\n
    unsigned int *v18;  // [bp-0x1c8]\n
    struct struct_0 **v19;  // [bp-0x1c0]\n
    char *v20;  // [bp-0x1b8]\n
    unsigned int v21;  // [bp-0x1ac]\n
    unsigned int *v22;  // [bp-0x1a8]\n
    struct struct_0 **v23;  // [bp-0x1a0]\n
    char v24;  // [bp-0x198]\n
    unsigned short v25;  // [bp-0x192]\n
    unsigned int *v26;  // [bp-0x190]\n
    struct struct_0 **v27;  // [bp-0x188]\n
    char v28;  // [bp-0x180]\n
    unsigned short v29;  // [bp-0x17a]\n
    unsigned int *v30;  // [bp-0x178]\n
    struct struct_0 **v31;  // [bp-0x170]\n
    char v32;  // [bp-0x168]\n
    unsigned int v33;  // [bp-0x150]\n
    unsigned int *v34;  // [bp-0x148]\n
    struct struct_0 **v35;  // [bp-0x140]\n
    char v36;  // [bp-0x138]\n
    unsigned int v37;  // [bp-0x120]\n
    unsigned int *v38;  // [bp-0x118]\n
    struct struct_0 **v39;  // [bp-0x110]\n
    char v40;  // [bp-0x108]\n
    unsigned int v41;  // [bp-0xfc]\n
    unsigned int *v42;  // [bp-0xf8]\n
    struct struct_0 **v43;  // [bp-0xf0]\n
    char v44;  // [bp-0xe8]\n
    unsigned int v45;  // [bp-0xdc]\n
    unsigned int *v46;  // [bp-0xd8]\n
    struct struct_0 **v47;  // [bp-0xd0]\n
    unsigned long v48;  // [bp-0xc8]\n
    unsigned short v49;  // [bp-0xba]\n
    unsigned int *v50;  // [bp-0xb8]\n
    struct struct_0 **v51;  // [bp-0xb0]\n
    unsigned long v52;  // [bp-0xa8]\n
    unsigned short v53;  // [bp-0x9a]\n
    unsigned int *v54;  // [bp-0x98]\n
    struct struct_0 **v55;  // [bp-0x90]\n
    char v56;  // [bp-0x84]\n
    char v57[4];  // [bp-0x78]\n
    unsigned int v58;  // [bp-0x6c]\n
    unsigned int *v59;  // [bp-0x68]\n
    struct struct_0 **v60;  // [bp-0x60]\n
    char v61;  // [bp-0x58]\n
    unsigned int v62;  // [bp-0x40]\n
    unsigned int *v63;  // [bp-0x38]\n
    struct struct_0 **v64;  // [bp-0x30]\n
    unsigned long v65;  // [bp-0x28]\n
    char v66;  // [bp-0x19]\n
    unsigned int *v67;  // [bp-0x18]\n
    struct struct_0 **v68;  // [bp-0x10]\n
    unsigned int *v70;  // rax\n
    struct struct_0 **v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_0 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_0 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_0 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    struct struct_0 **v82;  // rax\n
    unsigned int *v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_0 **v85;  // rax\n
    struct struct_0 **v87;  // rax\n
    unsigned int *v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_0 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_0 **v93;  // rax\n
    unsigned int *v94;  // rax\n
    struct struct_0 **v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_0 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    unsigned int *v104;  // rax, Other Possible Types: unsigned long\n
\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamafolliculin===\", 21) < 0)\n
        cgc__terminate(1);\n
    v19 = a0;\n
    v18 = a1;\n
    *(&v16[0]) = *(v19);\n
    memset(&v15, 0, 21);\n
    if (*(v18) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if (v16[0] << 56)\n
    {\n
        v11 = 0;\n
        if (v16[1] << 48)\n
        {\n
            v11 = 0;\n
            if (v16[2] << 40)\n
            {\n
                v11 = 0;\n
                if (v16[3] << 32)\n
                {\n
                    v11 = 0;\n
                    if ((v16[4] << 24))\n
                    {\n
                        v11 = 0;\n
                        if ((v16[5] << 16))\n
                        {\n
                            v11 = 0;\n
                            if ((v16[6] << 8))\n
                                v11 = v16[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v17) = v11 & 1;\n
    cgc_uint2str(&v15, 21, *(&v17));\n
    v10 = &v15;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v15)) < 0)\n
        cgc__terminate(1);\n
    v70 = v18;\n
    *(v70) = *(v70) - 8;\n
    v71 = v19;\n
    *(v71) = *(v71) + 8;\n
    v55 = a0;\n
    v54 = a1;\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = *(&*(v55));\n
    v72 = v54;\n
    *(v72) = *(v72) - 2;\n
    v73 = v55;\n
    *(v73) = *(v73) + 2;\n
    if (v53 <= *(v54) && !(!v53))\n
        goto LABEL_428892;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_428892:\n
    v52 = cgc_calloc(v53);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v52, *(v55), v53);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v74 = v54;\n
    *(v74) = *(v74) - v53;\n
    v75 = v55;\n
    *(v75) = &(*(v75))[v53];\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    v51 = a0;\n
    v50 = a1;\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(&*(v51));\n
    v76 = v50;\n
    *(v76) = *(v76) - 2;\n
    v77 = v51;\n
    *(v77) = *(v77) + 2;\n
    if (v49 <= *(v50) && !(!v49))\n
        goto LABEL_428a62;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_428a62:\n
    v48 = cgc_calloc(v49);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v48, *(v51), v49);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v78 = v50;\n
    *(v78) = *(v78) - v49;\n
    v79 = v51;\n
    *(v79) = &(*(v79))[v49];\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    v80 = v67;\n
    *(v80) = *(v80) - 1;\n
    v81 = v68;\n
    *(v81) = *(v81) + 1;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_428c12;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_428c12:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v82 = v68;\n
    *(v82) = &(*(v82))[v66];\n
    v83 = v67;\n
    *(v83) = *(v83) - v66;\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v31 = a0;\n
    v30 = a1;\n
    memset(&v28, 0, 6);\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = *(&*(v31));\n
    cgc_uint2str(&v28, 6, v29);\n
    v9 = &v28;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v28)) < 0)\n
        cgc__terminate(1);\n
    v84 = v30;\n
    *(v84) = *(v84) - 2;\n
    v85 = v31;\n
    *(v85) = *(v85) + 2;\n
    v23 = a0;\n
    v22 = a1;\n
    if (*(v22) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v22) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v22);\n
    v21 = v8;\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = cgc_calloc(134);\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v20, \"Str: \");\n
    cgc_strncpy(v20 + 5, *(v23), v21);\n
    v87 = v23;\n
    *(v87) = &(*(v87))[4 + cgc_strlen(v20)];\n
    v89 = v22;\n
    *(v89) = *(v89) - (cgc_strlen(v20) + -4);\n
    cgc_checkheap();\n
    cgc_free(v20);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v47 = a0;\n
    v46 = a1;\n
    memset(&v44, 0, 12);\n
    if (*(v46) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47));\n
    cgc_uint2str(&v44, 12, v45);\n
    v7 = &v44;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v90 = v46;\n
    *(v90) = *(v90) - 4;\n
    v91 = v47;\n
    *(v91) = *(v91) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    memset(&v36, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v37) = *(&*(v39));\n
    cgc_uint2str(&v36, 21, *(&v37));\n
    v6 = &v36;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v92 = v38;\n
    *(v92) = *(v92) - 8;\n
    v93 = v39;\n
    *(v93) = *(v93) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    memset(&v32, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v33) = *(&*(v35));\n
    cgc_uint2str(&v32, 21, *(&v33));\n
    v5 = &v32;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v94 = v34;\n
    *(v94) = *(v94) - 8;\n
    v95 = v35;\n
    *(v95) = *(v95) + 8;\n
    v43 = a0;\n
    v42 = a1;\n
    memset(&v40, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(&*(v43));\n
    cgc_uint2str(&v40, 12, v41);\n
    v4 = &v40;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v96 = v42;\n
    *(v96) = *(v96) - 4;\n
    v97 = v43;\n
    *(v97) = *(v97) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    *(&v57) = *(v60);\n
    memset(&v56, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v57[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v57[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v57[2] << 8))\n
                v3 = v57[3];\n
        }\n
    }\n
    v58 = v3 & 1;\n
    cgc_uint2str(&v56, 12, v58);\n
    v2 = &v56;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v98 = v59;\n
    *(v98) = *(v98) - 4;\n
    v99 = v60;\n
    *(v99) = *(v99) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v62) = *(&*(v64));\n
    cgc_uint2str(&v61, 21, *(&v62));\n
    v1 = &v61;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v100 = v63;\n
    *(v100) = *(v100) - 8;\n
    v101 = v64;\n
    *(v101) = *(v101) + 8;\n
    v27 = a0;\n
    v26 = a1;\n
    memset(&v24, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = *(&*(v27));\n
    cgc_uint2str(&v24, 6, v25);\n
    v0 = &v24;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v102 = v26;\n
    *(v102) = *(v102) - 2;\n
    v103 = v27;\n
    *(v103) = *(v103) + 2;\n
    v13 ^= cgc__cookie;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v104 = a1;\n
    if (*(a1) > 0 && v12 >= 0)\n
    {\n
        v104 = v12;\n
        if (v104 < 0)\n
            v104 = *(&(&v14)[8 * v12])(a0, a1);\n
    }\n
    return v104;\n
}\n
", "4364184:sub_429798": null, "4364192:cgc_process_llamadoldrums": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadoldrums(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x618]\n
    unsigned int v1;  // [bp-0x60c]\n
    struct_1 *v2;  // [bp-0x608]\n
    char v3;  // [bp-0x5f9]\n
    struct_1 *v4;  // [bp-0x5f8]\n
    struct_1 *v5;  // [bp-0x5f0]\n
    char v6;  // [bp-0x5e1]\n
    struct_1 *v7;  // [bp-0x5e0]\n
    unsigned int v8;  // [bp-0x5d4]\n
    struct_1 *v9;  // [bp-0x5d0]\n
    unsigned int v10;  // [bp-0x5c4]\n
    struct_1 *v11;  // [bp-0x5c0]\n
    unsigned int v12;  // [bp-0x5b4]\n
    struct_1 *v13;  // [bp-0x5b0]\n
    unsigned int v14;  // [bp-0x5a4]\n
    struct_1 *v15;  // [bp-0x5a0]\n
    struct_1 *v16;  // [bp-0x598]\n
    struct_1 *v17;  // [bp-0x590]\n
    char v18;  // [bp-0x581]\n
    struct_1 *v19;  // [bp-0x580]\n
    char v20;  // [bp-0x571]\n
    struct_1 *v21;  // [bp-0x570]\n
    struct_1 *v22;  // [bp-0x568]\n
    struct_1 *v23;  // [bp-0x560]\n
    unsigned int v24;  // [bp-0x554]\n
    struct_1 *v25;  // [bp-0x550]\n
    struct_1 *v26;  // [bp-0x548]\n
    char v27;  // [bp-0x539]\n
    struct_1 *v28;  // [bp-0x538]\n
    struct_1 *v29;  // [bp-0x530]\n
    struct_1 *v30;  // [bp-0x528]\n
    struct_1 *v31;  // [bp-0x520]\n
    char v32;  // [bp-0x511]\n
    unsigned int v33;  // [bp-0x510]\n
    unsigned int v34;  // [bp-0x50c]\n
    char v35;  // [bp-0x508]\n
    char v36;  // [bp-0x4ee]\n
    char v37[4];  // [bp-0x4e8]\n
    unsigned short v38;  // [bp-0x4da]\n
    unsigned int *v39;  // [bp-0x4d8]\n
    struct struct_0 **v40;  // [bp-0x4d0]\n
    char v41;  // [bp-0x4c6]\n
    char v42[2];  // [bp-0x4c0]\n
    unsigned short v43;  // [bp-0x4b2]\n
    unsigned int *v44;  // [bp-0x4b0]\n
    struct struct_0 **v45;  // [bp-0x4a8]\n
    char v46;  // [bp-0x49e]\n
    char *v47;  // [bp-0x498]\n
    unsigned short v48;  // [bp-0x48a]\n
    unsigned int *v49;  // [bp-0x488]\n
    struct struct_0 **v50;  // [bp-0x480]\n
    char v51;  // [bp-0x476]\n
    char v52[2];  // [bp-0x470]\n
    unsigned short v53;  // [bp-0x462]\n
    unsigned int *v54;  // [bp-0x460]\n
    struct struct_0 **v55;  // [bp-0x458]\n
    unsigned long v56;  // [bp-0x450]\n
    char v57;  // [bp-0x441]\n
    unsigned int *v58;  // [bp-0x440]\n
    struct struct_0 **v59;  // [bp-0x438]\n
    unsigned long v60;  // [bp-0x430]\n
    char v61;  // [bp-0x421]\n
    unsigned int *v62;  // [bp-0x420]\n
    struct struct_0 **v63;  // [bp-0x418]\n
    char *v64;  // [bp-0x410]\n
    unsigned int v65;  // [bp-0x404]\n
    unsigned int *v66;  // [bp-0x400]\n
    struct struct_0 **v67;  // [bp-0x3f8]\n
    char v68;  // [bp-0x3f0]\n
    unsigned short v69;  // [bp-0x3ea]\n
    unsigned int *v70;  // [bp-0x3e8]\n
    struct struct_0 **v71;  // [bp-0x3e0]\n
    char v72;  // [bp-0x3d8]\n
    unsigned short v73;  // [bp-0x3d2]\n
    unsigned int *v74;  // [bp-0x3d0]\n
    struct struct_0 **v75;  // [bp-0x3c8]\n
    char v76;  // [bp-0x3bd]\n
    char v77;  // [bp-0x3b9]\n
    unsigned int *v78;  // [bp-0x3b8]\n
    struct struct_0 **v79;  // [bp-0x3b0]\n
    char v80;  // [bp-0x3a8]\n
    unsigned int v81;  // [bp-0x390]\n
    unsigned int *v82;  // [bp-0x388]\n
    struct struct_0 **v83;  // [bp-0x380]\n
    char v84;  // [bp-0x378]\n
    unsigned int v85;  // [bp-0x360]\n
    unsigned int *v86;  // [bp-0x358]\n
    struct struct_0 **v87;  // [bp-0x350]\n
    char v88;  // [bp-0x348]\n
    unsigned int v89;  // [bp-0x330]\n
    unsigned int *v90;  // [bp-0x328]\n
    struct struct_0 **v91;  // [bp-0x320]\n
    char v92;  // [bp-0x318]\n
    unsigned int v93;  // [bp-0x30c]\n
    unsigned int *v94;  // [bp-0x308]\n
    struct struct_0 **v95;  // [bp-0x300]\n
    char v96;  // [bp-0x2f8]\n
    unsigned int v97;  // [bp-0x2ec]\n
    unsigned int *v98;  // [bp-0x2e8]\n
    struct struct_0 **v99;  // [bp-0x2e0]\n
    char v100;  // [bp-0x2d8]\n
    unsigned int v101;  // [bp-0x2cc]\n
    unsigned int *v102;  // [bp-0x2c8]\n
    struct struct_0 **v103;  // [bp-0x2c0]\n
    char v104;  // [bp-0x2b8]\n
    unsigned int v105;  // [bp-0x2ac]\n
    unsigned int *v106;  // [bp-0x2a8]\n
    struct struct_0 **v107;  // [bp-0x2a0]\n
    char v108;  // [bp-0x298]\n
    unsigned int v109;  // [bp-0x28c]\n
    unsigned int *v110;  // [bp-0x288]\n
    struct struct_0 **v111;  // [bp-0x280]\n
    char v112;  // [bp-0x278]\n
    unsigned int v113;  // [bp-0x26c]\n
    unsigned int *v114;  // [bp-0x268]\n
    struct struct_0 **v115;  // [bp-0x260]\n
    char v116;  // [bp-0x258]\n
    unsigned int v117;  // [bp-0x24c]\n
    unsigned int *v118;  // [bp-0x248]\n
    struct struct_0 **v119;  // [bp-0x240]\n
    char v120;  // [bp-0x238]\n
    unsigned int v121;  // [bp-0x22c]\n
    unsigned int *v122;  // [bp-0x228]\n
    struct struct_0 **v123;  // [bp-0x220]\n
    unsigned long v124;  // [bp-0x218]\n
    unsigned short v125;  // [bp-0x20a]\n
    unsigned int *v126;  // [bp-0x208]\n
    struct struct_0 **v127;  // [bp-0x200]\n
    unsigned long v128;  // [bp-0x1f8]\n
    unsigned short v129;  // [bp-0x1ea]\n
    unsigned int *v130;  // [bp-0x1e8]\n
    struct struct_0 **v131;  // [bp-0x1e0]\n
    unsigned long v132;  // [bp-0x1d8]\n
    unsigned short v133;  // [bp-0x1ca]\n
    unsigned int *v134;  // [bp-0x1c8]\n
    struct struct_0 **v135;  // [bp-0x1c0]\n
    unsigned long v136;  // [bp-0x1b8]\n
    unsigned short v137;  // [bp-0x1aa]\n
    unsigned int *v138;  // [bp-0x1a8]\n
    struct struct_0 **v139;  // [bp-0x1a0]\n
    unsigned long v140;  // [bp-0x198]\n
    unsigned short v141;  // [bp-0x18a]\n
    unsigned int *v142;  // [bp-0x188]\n
    struct struct_0 **v143;  // [bp-0x180]\n
    unsigned long v144;  // [bp-0x178]\n
    unsigned short v145;  // [bp-0x16a]\n
    unsigned int *v146;  // [bp-0x168]\n
    struct struct_0 **v147;  // [bp-0x160]\n
    unsigned long v148;  // [bp-0x158]\n
    unsigned short v149;  // [bp-0x14a]\n
    unsigned int *v150;  // [bp-0x148]\n
    struct struct_0 **v151;  // [bp-0x140]\n
    char v152;  // [bp-0x134]\n
    char v153[4];  // [bp-0x128]\n
    unsigned int v154;  // [bp-0x11c]\n
    unsigned int *v155;  // [bp-0x118]\n
    struct struct_0 **v156;  // [bp-0x110]\n
    char v157;  // [bp-0x104]\n
    char v158[4];  // [bp-0xf8]\n
    unsigned int v159;  // [bp-0xec]\n
    unsigned int *v160;  // [bp-0xe8]\n
    struct struct_0 **v161;  // [bp-0xe0]\n
    char *v162;  // [bp-0xd8]\n
    unsigned int v163;  // [bp-0xcc]\n
    unsigned int *v164;  // [bp-0xc8]\n
    struct struct_0 **v165;  // [bp-0xc0]\n
    char *v166;  // [bp-0xb8]\n
    unsigned int v167;  // [bp-0xac]\n
    unsigned int *v168;  // [bp-0xa8]\n
    struct struct_0 **v169;  // [bp-0xa0]\n
    char *v170;  // [bp-0x98]\n
    unsigned int v171;  // [bp-0x8c]\n
    unsigned int *v172;  // [bp-0x88]\n
    struct struct_0 **v173;  // [bp-0x80]\n
    char *v174;  // [bp-0x78]\n
    unsigned int v175;  // [bp-0x6c]\n
    unsigned int *v176;  // [bp-0x68]\n
    struct struct_0 **v177;  // [bp-0x60]\n
    char *v178;  // [bp-0x58]\n
    unsigned int v179;  // [bp-0x4c]\n
    unsigned int *v180;  // [bp-0x48]\n
    struct struct_0 **v181;  // [bp-0x40]\n
    char v182;  // [bp-0x38]\n
    unsigned int v183;  // [bp-0x20]\n
    unsigned int *v184;  // [bp-0x18]\n
    struct struct_0 **v185;  // [bp-0x10]\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    unsigned int *v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_0 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_0 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_0 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_0 **v270;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    struct struct_0 **v274;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_0 **v278;  // rax\n
    unsigned int *v279;  // rax\n
    struct struct_0 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_0 **v282;  // rax\n
    struct struct_0 **v284;  // rax\n
    unsigned int *v286;  // rax\n
    unsigned int *v287;  // rax\n
    struct struct_0 **v288;  // rax\n
    unsigned int *v289;  // rax, Other Possible Types: unsigned long\n
\n
    v34 = cgc__cookie;\n
    v33 = -1;\n
    if (cgc_sendline(1, \"===llamadoldrums===\", 19) < 0)\n
        cgc__terminate(1);\n
    v161 = a0;\n
    v160 = a1;\n
    *(&v158) = *(v161);\n
    memset(&v157, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if ((v158[0] << 24))\n
    {\n
        v32 = 0;\n
        if ((v158[1] << 16))\n
        {\n
            v32 = 0;\n
            if ((v158[2] << 8))\n
                v32 = v158[3];\n
        }\n
    }\n
    v159 = v32 & 1;\n
    cgc_uint2str(&v157, 12, v159);\n
    v31 = &v157;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v157)) < 0)\n
        cgc__terminate(1);\n
    v187 = v160;\n
    *(v187) = *(v187) - 4;\n
    v188 = v161;\n
    *(v188) = *(v188) + 4;\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(&*(v123));\n
    cgc_uint2str(&v120, 12, v121);\n
    v30 = &v120;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v189 = v122;\n
    *(v189) = *(v189) - 4;\n
    v190 = v123;\n
    *(v190) = *(v190) + 4;\n
    v185 = a0;\n
    v184 = a1;\n
    memset(&v182, 0, 21);\n
    if (*(v184) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v183) = *(&*(v185));\n
    cgc_uint2str(&v182, 21, *(&v183));\n
    v29 = &v182;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v182)) < 0)\n
        cgc__terminate(1);\n
    v191 = v184;\n
    *(v191) = *(v191) - 8;\n
    v192 = v185;\n
    *(v192) = *(v192) + 8;\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 6);\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(&*(v75));\n
    cgc_uint2str(&v72, 6, v73);\n
    v28 = &v72;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v193 = v74;\n
    *(v193) = *(v193) - 2;\n
    v194 = v75;\n
    *(v194) = *(v194) + 2;\n
    v55 = a0;\n
    v54 = a1;\n
    *(&v52) = *(v55);\n
    memset(&v51, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v52[0] << 8))\n
        v27 = v52[1];\n
    v53 = v27 & 1;\n
    cgc_uint2str(&v51, 6, v53);\n
    v26 = &v51;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v195 = v54;\n
    *(v195) = *(v195) - 2;\n
    v196 = v55;\n
    *(v196) = *(v196) + 2;\n
    v139 = a0;\n
    v138 = a1;\n
    if (*(v138) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v137 = *(&*(v139));\n
    v197 = v138;\n
    *(v197) = *(v197) - 2;\n
    v198 = v139;\n
    *(v198) = *(v198) + 2;\n
    if (v137 <= *(v138) && !(!v137))\n
        goto LABEL_429ea8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_429ea8:\n
    v136 = cgc_calloc(v137);\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v136, *(v139), v137);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v199 = v138;\n
    *(v199) = *(v199) - v137;\n
    v200 = v139;\n
    *(v200) = &(*(v200))[v137];\n
    cgc_checkheap();\n
    cgc_free(v136);\n
    v63 = a0;\n
    v62 = a1;\n
    if (*(v62) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(v63)->field_0;\n
    v201 = v62;\n
    *(v201) = *(v201) - 1;\n
    v202 = v63;\n
    *(v202) = *(v202) + 1;\n
    if (v61 <= *(v62) && !(!v61))\n
        goto LABEL_42a076;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42a076:\n
    v60 = cgc_calloc(v61);\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v60, *(v63), v61);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v203 = v63;\n
    *(v203) = &(*(v203))[v61];\n
    v204 = v62;\n
    *(v204) = *(v204) - v61;\n
    cgc_checkheap();\n
    cgc_free(v60);\n
    v91 = a0;\n
    v90 = a1;\n
    memset(&v88, 0, 21);\n
    if (*(v90) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v89) = *(&*(v91));\n
    cgc_uint2str(&v88, 21, *(&v89));\n
    v25 = &v88;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v88)) < 0)\n
        cgc__terminate(1);\n
    v205 = v90;\n
    *(v205) = *(v205) - 8;\n
    v206 = v91;\n
    *(v206) = *(v206) + 8;\n
    v151 = a0;\n
    v150 = a1;\n
    if (*(v150) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v149 = *(&*(v151));\n
    v207 = v150;\n
    *(v207) = *(v207) - 2;\n
    v208 = v151;\n
    *(v208) = *(v208) + 2;\n
    if (v149 <= *(v150) && !(!v149))\n
        goto LABEL_42a350;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42a350:\n
    v148 = cgc_calloc(v149);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v148, *(v151), v149);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v209 = v150;\n
    *(v209) = *(v209) - v149;\n
    v210 = v151;\n
    *(v210) = &(*(v210))[v149];\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    v181 = a0;\n
    v180 = a1;\n
    if (*(v180) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v180) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v180);\n
    v179 = v24;\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v178 = cgc_calloc(134);\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v178, \"Str: \");\n
    cgc_strncpy(v178 + 5, *(v181), v179);\n
    v212 = v181;\n
    *(v212) = &(*(v212))[4 + cgc_strlen(v178)];\n
    v214 = v180;\n
    *(v214) = *(v214) - (cgc_strlen(v178) + -4);\n
    cgc_checkheap();\n
    cgc_free(v178);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 6);\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(&*(v71));\n
    cgc_uint2str(&v68, 6, v69);\n
    v23 = &v68;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v215 = v70;\n
    *(v215) = *(v215) - 2;\n
    v216 = v71;\n
    *(v216) = *(v216) + 2;\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(&*(v115));\n
    cgc_uint2str(&v112, 12, v113);\n
    v22 = &v112;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v217 = v114;\n
    *(v217) = *(v217) - 4;\n
    v218 = v115;\n
    *(v218) = *(v218) + 4;\n
    v147 = a0;\n
    v146 = a1;\n
    if (*(v146) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = *(&*(v147));\n
    v219 = v146;\n
    *(v219) = *(v219) - 2;\n
    v220 = v147;\n
    *(v220) = *(v220) + 2;\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_42a8e2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42a8e2:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v221 = v146;\n
    *(v221) = *(v221) - v145;\n
    v222 = v147;\n
    *(v222) = &(*(v222))[v145];\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 12);\n
    if (*(v110) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = *(&*(v111));\n
    cgc_uint2str(&v108, 12, v109);\n
    v21 = &v108;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v223 = v110;\n
    *(v223) = *(v223) - 4;\n
    v224 = v111;\n
    *(v224) = *(v224) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    v47 = &*(v50)->field_0;\n
    memset(&v46, 0, 6);\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if ((*(v47) << 8))\n
        v20 = v47[1];\n
    v48 = v20 & 1;\n
    cgc_uint2str(&v46, 6, v48);\n
    v19 = &v46;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v225 = v49;\n
    *(v225) = *(v225) - 2;\n
    v226 = v50;\n
    *(v226) = *(v226) + 2;\n
    v156 = a0;\n
    v155 = a1;\n
    *(&v153) = *(v156);\n
    memset(&v152, 0, 12);\n
    if (*(v155) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v153[0] << 24))\n
    {\n
        v18 = 0;\n
        if ((v153[1] << 16))\n
        {\n
            v18 = 0;\n
            if ((v153[2] << 8))\n
                v18 = v153[3];\n
        }\n
    }\n
    v154 = v18 & 1;\n
    cgc_uint2str(&v152, 12, v154);\n
    v17 = &v152;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v152)) < 0)\n
        cgc__terminate(1);\n
    v227 = v155;\n
    *(v227) = *(v227) - 4;\n
    v228 = v156;\n
    *(v228) = *(v228) + 4;\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(&*(v107));\n
    cgc_uint2str(&v104, 12, v105);\n
    v16 = &v104;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v229 = v106;\n
    *(v229) = *(v229) - 4;\n
    v230 = v107;\n
    *(v230) = *(v230) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(v59)->field_0;\n
    v231 = v58;\n
    *(v231) = *(v231) - 1;\n
    v232 = v59;\n
    *(v232) = *(v232) + 1;\n
    if (v57 <= *(v58) && !(!v57))\n
        goto LABEL_42af7e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42af7e:\n
    v56 = cgc_calloc(v57);\n
    if (!v56)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v56, *(v59), v57);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v233 = v59;\n
    *(v233) = &(*(v233))[v57];\n
    v234 = v58;\n
    *(v234) = *(v234) - v57;\n
    cgc_checkheap();\n
    cgc_free(v56);\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 12);\n
    if (*(v102) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = *(&*(v103));\n
    cgc_uint2str(&v100, 12, v101);\n
    v15 = &v100;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v235 = v102;\n
    *(v235) = *(v235) - 4;\n
    v236 = v103;\n
    *(v236) = *(v236) + 4;\n
    v177 = a0;\n
    v176 = a1;\n
    if (*(v176) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v176) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v176);\n
    v175 = v14;\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v174 = cgc_calloc(134);\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v174, \"Str: \");\n
    cgc_strncpy(v174 + 5, *(v177), v175);\n
    v238 = v177;\n
    *(v238) = &(*(v238))[4 + cgc_strlen(v174)];\n
    v240 = v176;\n
    *(v240) = *(v240) - (cgc_strlen(v174) + -4);\n
    cgc_checkheap();\n
    cgc_free(v174);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 12);\n
    if (*(v98) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(&*(v99));\n
    cgc_uint2str(&v96, 12, v97);\n
    v13 = &v96;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v241 = v98;\n
    *(v241) = *(v241) - 4;\n
    v242 = v99;\n
    *(v242) = *(v242) + 4;\n
    v67 = a0;\n
    v66 = a1;\n
    if (*(v66) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v66) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v66);\n
    v65 = v12;\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = cgc_calloc(134);\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v64, \"Str: \");\n
    cgc_strncpy(v64 + 5, *(v67), v65);\n
    v244 = v67;\n
    *(v244) = &(*(v244))[4 + cgc_strlen(v64)];\n
    v246 = v66;\n
    *(v246) = *(v246) - (cgc_strlen(v64) + -4);\n
    cgc_checkheap();\n
    cgc_free(v64);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(&*(v95));\n
    cgc_uint2str(&v92, 12, v93);\n
    v11 = &v92;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v247 = v94;\n
    *(v247) = *(v247) - 4;\n
    v248 = v95;\n
    *(v248) = *(v248) + 4;\n
    v173 = a0;\n
    v172 = a1;\n
    if (*(v172) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v172) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v172);\n
    v171 = v10;\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v170 = cgc_calloc(134);\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v170, \"Str: \");\n
    cgc_strncpy(v170 + 5, *(v173), v171);\n
    v250 = v173;\n
    *(v250) = &(*(v250))[4 + cgc_strlen(v170)];\n
    v252 = v172;\n
    *(v252) = *(v252) - (cgc_strlen(v170) + -4);\n
    cgc_checkheap();\n
    cgc_free(v170);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v85) = *(&*(v87));\n
    cgc_uint2str(&v84, 21, *(&v85));\n
    v9 = &v84;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v253 = v86;\n
    *(v253) = *(v253) - 8;\n
    v254 = v87;\n
    *(v254) = *(v254) + 8;\n
    v169 = a0;\n
    v168 = a1;\n
    if (*(v168) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v168) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v168);\n
    v167 = v8;\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = cgc_calloc(134);\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v166, \"Str: \");\n
    cgc_strncpy(v166 + 5, *(v169), v167);\n
    v256 = v169;\n
    *(v256) = &(*(v256))[4 + cgc_strlen(v166)];\n
    v258 = v168;\n
    *(v258) = *(v258) - (cgc_strlen(v166) + -4);\n
    cgc_checkheap();\n
    cgc_free(v166);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v135 = a0;\n
    v134 = a1;\n
    if (*(v134) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v133 = *(&*(v135));\n
    v259 = v134;\n
    *(v259) = *(v259) - 2;\n
    v260 = v135;\n
    *(v260) = *(v260) + 2;\n
    if (v133 <= *(v134) && !(!v133))\n
        goto LABEL_42bcd9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42bcd9:\n
    v132 = cgc_calloc(v133);\n
    if (!v132)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v132, *(v135), v133);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v261 = v134;\n
    *(v261) = *(v261) - v133;\n
    v262 = v135;\n
    *(v262) = &(*(v262))[v133];\n
    cgc_checkheap();\n
    cgc_free(v132);\n
    v131 = a0;\n
    v130 = a1;\n
    if (*(v130) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(&*(v131));\n
    v263 = v130;\n
    *(v263) = *(v263) - 2;\n
    v264 = v131;\n
    *(v264) = *(v264) + 2;\n
    if (v129 <= *(v130) && !(!v129))\n
        goto LABEL_42bea9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42bea9:\n
    v128 = cgc_calloc(v129);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v128, *(v131), v129);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v265 = v130;\n
    *(v265) = *(v265) - v129;\n
    v266 = v131;\n
    *(v266) = &(*(v266))[v129];\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    v127 = a0;\n
    v126 = a1;\n
    if (*(v126) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = *(&*(v127));\n
    v267 = v126;\n
    *(v267) = *(v267) - 2;\n
    v268 = v127;\n
    *(v268) = *(v268) + 2;\n
    if (v125 <= *(v126) && !(!v125))\n
        goto LABEL_42c079;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42c079:\n
    v124 = cgc_calloc(v125);\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v124, *(v127), v125);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v269 = v126;\n
    *(v269) = *(v269) - v125;\n
    v270 = v127;\n
    *(v270) = &(*(v270))[v125];\n
    cgc_checkheap();\n
    cgc_free(v124);\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 12);\n
    if (*(v118) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(&*(v119));\n
    cgc_uint2str(&v116, 12, v117);\n
    v7 = &v116;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v271 = v118;\n
    *(v271) = *(v271) - 4;\n
    v272 = v119;\n
    *(v272) = *(v272) + 4;\n
    v143 = a0;\n
    v142 = a1;\n
    if (*(v142) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = *(&*(v143));\n
    v273 = v142;\n
    *(v273) = *(v273) - 2;\n
    v274 = v143;\n
    *(v274) = *(v274) + 2;\n
    if (v141 <= *(v142) && !(!v141))\n
        goto LABEL_42c353;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42c353:\n
    v140 = cgc_calloc(v141);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v140, *(v143), v141);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v275 = v142;\n
    *(v275) = *(v275) - v141;\n
    v276 = v143;\n
    *(v276) = &(*(v276))[v141];\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42) = *(v45);\n
    memset(&v41, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v42[0] << 8))\n
        v6 = v42[1];\n
    v43 = v6 & 1;\n
    cgc_uint2str(&v41, 6, v43);\n
    v5 = &v41;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v277 = v44;\n
    *(v277) = *(v277) - 2;\n
    v278 = v45;\n
    *(v278) = *(v278) + 2;\n
    v79 = a0;\n
    v78 = a1;\n
    memset(&v76, 0, 4);\n
    if (*(v78) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(v79)->field_0;\n
    cgc_uint2str(&v76, 4, v77);\n
    v4 = &v76;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v76)) < 0)\n
        cgc__terminate(1);\n
    v279 = v78;\n
    *(v279) = *(v279) - 1;\n
    v280 = v79;\n
    *(v280) = *(v280) + 1;\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37) = *(v40);\n
    memset(&v36, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v37[0] << 8))\n
        v3 = v37[1];\n
    v38 = v3 & 1;\n
    cgc_uint2str(&v36, 6, v38);\n
    v2 = &v36;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v281 = v39;\n
    *(v281) = *(v281) - 2;\n
    v282 = v40;\n
    *(v282) = *(v282) + 2;\n
    v165 = a0;\n
    v164 = a1;\n
    if (*(v164) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v164) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v164);\n
    v163 = v1;\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = cgc_calloc(134);\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v162, \"Str: \");\n
    cgc_strncpy(v162 + 5, *(v165), v163);\n
    v284 = v165;\n
    *(v284) = &(*(v284))[4 + cgc_strlen(v162)];\n
    v286 = v164;\n
    *(v286) = *(v286) - (cgc_strlen(v162) + -4);\n
    cgc_checkheap();\n
    cgc_free(v162);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v83 = a0;\n
    v82 = a1;\n
    memset(&v80, 0, 21);\n
    if (*(v82) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v81) = *(&*(v83));\n
    cgc_uint2str(&v80, 21, *(&v81));\n
    v0 = &v80;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v80)) < 0)\n
        cgc__terminate(1);\n
    v287 = v82;\n
    *(v287) = *(v287) - 8;\n
    v288 = v83;\n
    *(v288) = *(v288) + 8;\n
    v34 ^= cgc__cookie;\n
    if (v34)\n
        cgc___stack_cookie_fail();\n
    v289 = a1;\n
    if (*(a1) > 0 && v33 >= 0)\n
    {\n
        v289 = v33;\n
        if (v289 < 0)\n
            v289 = *(&(&v35)[8 * v33])(a0, a1);\n
    }\n
    return v289;\n
}\n
", "4377404:sub_42cb3c": null, "4377408:cgc_process_llamatelodendron": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamatelodendron(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x568]\n
    char v1;  // [bp-0x559]\n
    struct_1 *v2;  // [bp-0x558]\n
    char v3;  // [bp-0x549]\n
    struct_1 *v4;  // [bp-0x548]\n
    char v5;  // [bp-0x539]\n
    struct_1 *v6;  // [bp-0x538]\n
    struct_1 *v7;  // [bp-0x530]\n
    struct_1 *v8;  // [bp-0x528]\n
    char v9;  // [bp-0x51d]\n
    unsigned int v10;  // [bp-0x51c]\n
    struct_1 *v11;  // [bp-0x518]\n
    struct_1 *v12;  // [bp-0x510]\n
    struct_1 *v13;  // [bp-0x508]\n
    char v14;  // [bp-0x4f9]\n
    struct_1 *v15;  // [bp-0x4f8]\n
    char v16;  // [bp-0x4e9]\n
    struct_1 *v17;  // [bp-0x4e8]\n
    char v18;  // [bp-0x4d9]\n
    struct_1 *v19;  // [bp-0x4d8]\n
    char v20;  // [bp-0x4c9]\n
    struct_1 *v21;  // [bp-0x4c8]\n
    struct_1 *v22;  // [bp-0x4c0]\n
    struct_1 *v23;  // [bp-0x4b8]\n
    unsigned int v24;  // [bp-0x4ac]\n
    struct_1 *v25;  // [bp-0x4a8]\n
    struct_1 *v26;  // [bp-0x4a0]\n
    unsigned int v27;  // [bp-0x494]\n
    unsigned int v28;  // [bp-0x490]\n
    unsigned int v29;  // [bp-0x48c]\n
    char v30;  // [bp-0x488]\n
    char v31;  // [bp-0x46e]\n
    char v32[2];  // [bp-0x468]\n
    unsigned short v33;  // [bp-0x45a]\n
    unsigned int *v34;  // [bp-0x458]\n
    struct struct_0 **v35;  // [bp-0x450]\n
    char v36;  // [bp-0x448]\n
    char v37[8];  // [bp-0x428]\n
    unsigned int v38;  // [bp-0x420]\n
    unsigned int *v39;  // [bp-0x418]\n
    struct struct_0 **v40;  // [bp-0x410]\n
    char v41;  // [bp-0x408]\n
    char v42[8];  // [bp-0x3e8]\n
    unsigned int v43;  // [bp-0x3e0]\n
    unsigned int *v44;  // [bp-0x3d8]\n
    struct struct_0 **v45;  // [bp-0x3d0]\n
    char v46;  // [bp-0x3c8]\n
    char v47[8];  // [bp-0x3a8]\n
    unsigned int v48;  // [bp-0x3a0]\n
    unsigned int *v49;  // [bp-0x398]\n
    struct struct_0 **v50;  // [bp-0x390]\n
    char v51;  // [bp-0x388]\n
    char v52[8];  // [bp-0x368]\n
    unsigned int v53;  // [bp-0x360]\n
    unsigned int *v54;  // [bp-0x358]\n
    struct struct_0 **v55;  // [bp-0x350]\n
    char v56;  // [bp-0x348]\n
    char v57[8];  // [bp-0x328]\n
    unsigned int v58;  // [bp-0x320]\n
    unsigned int *v59;  // [bp-0x318]\n
    struct struct_0 **v60;  // [bp-0x310]\n
    unsigned long v61;  // [bp-0x308]\n
    char v62;  // [bp-0x2f9]\n
    unsigned int *v63;  // [bp-0x2f8]\n
    struct struct_0 **v64;  // [bp-0x2f0]\n
    unsigned long v65;  // [bp-0x2e8]\n
    char v66;  // [bp-0x2d9]\n
    unsigned int *v67;  // [bp-0x2d8]\n
    struct struct_0 **v68;  // [bp-0x2d0]\n
    unsigned long v69;  // [bp-0x2c8]\n
    char v70;  // [bp-0x2b9]\n
    unsigned int *v71;  // [bp-0x2b8]\n
    struct struct_0 **v72;  // [bp-0x2b0]\n
    unsigned long v73;  // [bp-0x2a8]\n
    char v74;  // [bp-0x299]\n
    unsigned int *v75;  // [bp-0x298]\n
    struct struct_0 **v76;  // [bp-0x290]\n
    unsigned long v77;  // [bp-0x288]\n
    char v78;  // [bp-0x279]\n
    unsigned int *v79;  // [bp-0x278]\n
    struct struct_0 **v80;  // [bp-0x270]\n
    unsigned long v81;  // [bp-0x268]\n
    char v82;  // [bp-0x259]\n
    unsigned int *v83;  // [bp-0x258]\n
    struct struct_0 **v84;  // [bp-0x250]\n
    char *v85;  // [bp-0x248]\n
    unsigned int v86;  // [bp-0x23c]\n
    unsigned int *v87;  // [bp-0x238]\n
    struct struct_0 **v88;  // [bp-0x230]\n
    char *v89;  // [bp-0x228]\n
    unsigned int v90;  // [bp-0x21c]\n
    unsigned int *v91;  // [bp-0x218]\n
    struct struct_0 **v92;  // [bp-0x210]\n
    char *v93;  // [bp-0x208]\n
    unsigned int v94;  // [bp-0x1fc]\n
    unsigned int *v95;  // [bp-0x1f8]\n
    struct struct_0 **v96;  // [bp-0x1f0]\n
    char v97;  // [bp-0x1e8]\n
    unsigned short v98;  // [bp-0x1e2]\n
    unsigned int *v99;  // [bp-0x1e0]\n
    struct struct_0 **v100;  // [bp-0x1d8]\n
    char v101;  // [bp-0x1d0]\n
    unsigned short v102;  // [bp-0x1ca]\n
    unsigned int *v103;  // [bp-0x1c8]\n
    struct struct_0 **v104;  // [bp-0x1c0]\n
    char v105;  // [bp-0x1b5]\n
    char v106;  // [bp-0x1b1]\n
    unsigned int *v107;  // [bp-0x1b0]\n
    struct struct_0 **v108;  // [bp-0x1a8]\n
    char v109;  // [bp-0x19d]\n
    char v110;  // [bp-0x199]\n
    unsigned int *v111;  // [bp-0x198]\n
    struct struct_0 **v112;  // [bp-0x190]\n
    char v113;  // [bp-0x188]\n
    unsigned int v114;  // [bp-0x170]\n
    unsigned int *v115;  // [bp-0x168]\n
    struct struct_0 **v116;  // [bp-0x160]\n
    char v117;  // [bp-0x158]\n
    unsigned int v118;  // [bp-0x140]\n
    unsigned int *v119;  // [bp-0x138]\n
    struct struct_0 **v120;  // [bp-0x130]\n
    char v121;  // [bp-0x128]\n
    unsigned int v122;  // [bp-0x110]\n
    unsigned int *v123;  // [bp-0x108]\n
    struct struct_0 **v124;  // [bp-0x100]\n
    char v125;  // [bp-0xf8]\n
    unsigned int v126;  // [bp-0xe0]\n
    unsigned int *v127;  // [bp-0xd8]\n
    struct struct_0 **v128;  // [bp-0xd0]\n
    char v129;  // [bp-0xc8]\n
    unsigned int v130;  // [bp-0xbc]\n
    unsigned int *v131;  // [bp-0xb8]\n
    struct struct_0 **v132;  // [bp-0xb0]\n
    unsigned long v133;  // [bp-0xa8]\n
    unsigned short v134;  // [bp-0x9a]\n
    unsigned int *v135;  // [bp-0x98]\n
    struct struct_0 **v136;  // [bp-0x90]\n
    unsigned long v137;  // [bp-0x88]\n
    unsigned short v138;  // [bp-0x7a]\n
    unsigned int *v139;  // [bp-0x78]\n
    struct struct_0 **v140;  // [bp-0x70]\n
    char v141;  // [bp-0x64]\n
    char v142[4];  // [bp-0x58]\n
    unsigned int v143;  // [bp-0x4c]\n
    unsigned int *v144;  // [bp-0x48]\n
    struct struct_0 **v145;  // [bp-0x40]\n
    char v146;  // [bp-0x34]\n
    char v147[4];  // [bp-0x28]\n
    unsigned int v148;  // [bp-0x1c]\n
    unsigned int *v149;  // [bp-0x18]\n
    struct struct_0 **v150;  // [bp-0x10]\n
    struct struct_0 **v153;  // rax\n
    unsigned int *v155;  // rax\n
    unsigned int *v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    struct struct_0 **v158;  // rax\n
    unsigned int *v159;  // rax\n
    unsigned int *v160;  // rax\n
    struct struct_0 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    struct struct_0 **v163;  // rax\n
    unsigned int *v164;  // rax\n
    struct struct_0 **v165;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_0 **v169;  // rax\n
    unsigned int *v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_0 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax, Other Possible Types: unsigned long\n
\n
    v29 = cgc__cookie;\n
    v28 = -1;\n
    if (cgc_sendline(1, \"===llamatelodendron===\", 22) < 0)\n
        cgc__terminate(1);\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v95) >= 128)\n
        v27 = 128;\n
    else\n
        v27 = *(v95);\n
    v94 = v27;\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = cgc_calloc(134);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v93, \"Str: \");\n
    cgc_strncpy(v93 + 5, *(v96), v94);\n
    v153 = v96;\n
    *(v153) = &(*(v153))[4 + cgc_strlen(v93)];\n
    v155 = v95;\n
    *(v155) = *(v155) - (cgc_strlen(v93) + -4);\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    v156 = v83;\n
    *(v156) = *(v156) - 1;\n
    v157 = v84;\n
    *(v157) = *(v157) + 1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_42ce7d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42ce7d:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v158 = v84;\n
    *(v158) = &(*(v158))[v82];\n
    v159 = v83;\n
    *(v159) = *(v159) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 21);\n
    if (*(v127) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v126) = *(&*(v128));\n
    cgc_uint2str(&v125, 21, *(&v126));\n
    v26 = &v125;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v160 = v127;\n
    *(v160) = *(v160) - 8;\n
    v161 = v128;\n
    *(v161) = *(v161) + 8;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 21);\n
    if (*(v123) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v122) = *(&*(v124));\n
    cgc_uint2str(&v121, 21, *(&v122));\n
    v25 = &v121;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v162 = v123;\n
    *(v162) = *(v162) - 8;\n
    v163 = v124;\n
    *(v163) = *(v163) + 8;\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(v80)->field_0;\n
    v164 = v79;\n
    *(v164) = *(v164) - 1;\n
    v165 = v80;\n
    *(v165) = *(v165) + 1;\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_42d25f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42d25f:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v166 = v80;\n
    *(v166) = &(*(v166))[v78];\n
    v167 = v79;\n
    *(v167) = *(v167) - v78;\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v92 = a0;\n
    v91 = a1;\n
    if (*(v91) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v91) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v91);\n
    v90 = v24;\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = cgc_calloc(134);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v89, \"Str: \");\n
    cgc_strncpy(v89 + 5, *(v92), v90);\n
    v169 = v92;\n
    *(v169) = &(*(v169))[4 + cgc_strlen(v89)];\n
    v171 = v91;\n
    *(v171) = *(v171) - (cgc_strlen(v89) + -4);\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 4);\n
    if (*(v111) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(v112)->field_0;\n
    cgc_uint2str(&v109, 4, v110);\n
    v23 = &v109;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v172 = v111;\n
    *(v172) = *(v172) - 1;\n
    v173 = v112;\n
    *(v173) = *(v173) + 1;\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 6);\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 6, v102);\n
    v22 = &v101;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v174 = v103;\n
    *(v174) = *(v174) - 2;\n
    v175 = v104;\n
    *(v175) = *(v175) + 2;\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(v76)->field_0;\n
    v176 = v75;\n
    *(v176) = *(v176) - 1;\n
    v177 = v76;\n
    *(v177) = *(v177) + 1;\n
    if (v74 <= *(v75) && !(!v74))\n
        goto LABEL_42d826;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42d826:\n
    v73 = cgc_calloc(v74);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v73, *(v76), v74);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v178 = v76;\n
    *(v178) = &(*(v178))[v74];\n
    v179 = v75;\n
    *(v179) = *(v179) - v74;\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 21);\n
    if (*(v119) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v118) = *(&*(v120));\n
    cgc_uint2str(&v117, 21, *(&v118));\n
    v21 = &v117;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v180 = v119;\n
    *(v180) = *(v180) - 8;\n
    v181 = v120;\n
    *(v181) = *(v181) + 8;\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(v72)->field_0;\n
    v182 = v71;\n
    *(v182) = *(v182) - 1;\n
    v183 = v72;\n
    *(v183) = *(v183) + 1;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_42dafe;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42dafe:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v184 = v72;\n
    *(v184) = &(*(v184))[v70];\n
    v185 = v71;\n
    *(v185) = *(v185) - v70;\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    v186 = v67;\n
    *(v186) = *(v186) - 1;\n
    v187 = v68;\n
    *(v187) = *(v187) + 1;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_42dccc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42dccc:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v188 = v68;\n
    *(v188) = &(*(v188))[v66];\n
    v189 = v67;\n
    *(v189) = *(v189) - v66;\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    v190 = v63;\n
    *(v190) = *(v190) - 1;\n
    v191 = v64;\n
    *(v191) = *(v191) + 1;\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_42de9a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42de9a:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v192 = v64;\n
    *(v192) = &(*(v192))[v62];\n
    v193 = v63;\n
    *(v193) = *(v193) - v62;\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v140 = a0;\n
    v139 = a1;\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    v194 = v139;\n
    *(v194) = *(v194) - 2;\n
    v195 = v140;\n
    *(v195) = *(v195) + 2;\n
    if (v138 <= *(v139) && !(!v138))\n
        goto LABEL_42e04c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42e04c:\n
    v137 = cgc_calloc(v138);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v137, *(v140), v138);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v196 = v139;\n
    *(v196) = *(v196) - v138;\n
    v197 = v140;\n
    *(v197) = &(*(v197))[v138];\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    v35 = a0;\n
    v34 = a1;\n
    *(&v32) = *(v35);\n
    memset(&v31, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if ((v32[0] << 8))\n
        v20 = v32[1];\n
    v33 = v20 & 1;\n
    cgc_uint2str(&v31, 6, v33);\n
    v19 = &v31;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v198 = v34;\n
    *(v198) = *(v198) - 2;\n
    v199 = v35;\n
    *(v199) = *(v199) + 2;\n
    v60 = a0;\n
    v59 = a1;\n
    *(&v57[0]) = *(v60);\n
    memset(&v56, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if (v57[0] << 56)\n
    {\n
        v18 = 0;\n
        if (v57[1] << 48)\n
        {\n
            v18 = 0;\n
            if (v57[2] << 40)\n
            {\n
                v18 = 0;\n
                if (v57[3] << 32)\n
                {\n
                    v18 = 0;\n
                    if ((v57[4] << 24))\n
                    {\n
                        v18 = 0;\n
                        if ((v57[5] << 16))\n
                        {\n
                            v18 = 0;\n
                            if ((v57[6] << 8))\n
                                v18 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v58) = v18 & 1;\n
    cgc_uint2str(&v56, 21, *(&v58));\n
    v17 = &v56;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v200 = v59;\n
    *(v200) = *(v200) - 8;\n
    v201 = v60;\n
    *(v201) = *(v201) + 8;\n
    v55 = a0;\n
    v54 = a1;\n
    *(&v52[0]) = *(v55);\n
    memset(&v51, 0, 21);\n
    if (*(v54) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if (v52[0] << 56)\n
    {\n
        v16 = 0;\n
        if (v52[1] << 48)\n
        {\n
            v16 = 0;\n
            if (v52[2] << 40)\n
            {\n
                v16 = 0;\n
                if (v52[3] << 32)\n
                {\n
                    v16 = 0;\n
                    if ((v52[4] << 24))\n
                    {\n
                        v16 = 0;\n
                        if ((v52[5] << 16))\n
                        {\n
                            v16 = 0;\n
                            if ((v52[6] << 8))\n
                                v16 = v52[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v53) = v16 & 1;\n
    cgc_uint2str(&v51, 21, *(&v53));\n
    v15 = &v51;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v202 = v54;\n
    *(v202) = *(v202) - 8;\n
    v203 = v55;\n
    *(v203) = *(v203) + 8;\n
    v50 = a0;\n
    v49 = a1;\n
    *(&v47[0]) = *(v50);\n
    memset(&v46, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v47[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v47[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v47[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v47[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v47[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v47[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v47[6] << 8))\n
                                v14 = v47[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v48) = v14 & 1;\n
    cgc_uint2str(&v46, 21, *(&v48));\n
    v13 = &v46;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v204 = v49;\n
    *(v204) = *(v204) - 8;\n
    v205 = v50;\n
    *(v205) = *(v205) + 8;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 6);\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 6, v98);\n
    v12 = &v97;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v206 = v99;\n
    *(v206) = *(v206) - 2;\n
    v207 = v100;\n
    *(v207) = *(v207) + 2;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v11 = &v129;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v208 = v131;\n
    *(v208) = *(v208) - 4;\n
    v209 = v132;\n
    *(v209) = *(v209) + 4;\n
    v88 = a0;\n
    v87 = a1;\n
    if (*(v87) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v87) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v87);\n
    v86 = v10;\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = cgc_calloc(134);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v85, \"Str: \");\n
    cgc_strncpy(v85 + 5, *(v88), v86);\n
    v211 = v88;\n
    *(v211) = &(*(v211))[4 + cgc_strlen(v85)];\n
    v213 = v87;\n
    *(v213) = *(v213) - (cgc_strlen(v85) + -4);\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42[0]) = *(v45);\n
    memset(&v41, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v42[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v42[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v42[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v42[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v42[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v42[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v42[6] << 8))\n
                                v9 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v43) = v9 & 1;\n
    cgc_uint2str(&v41, 21, *(&v43));\n
    v8 = &v41;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v214 = v44;\n
    *(v214) = *(v214) - 8;\n
    v215 = v45;\n
    *(v215) = *(v215) + 8;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 21);\n
    if (*(v115) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v114) = *(&*(v116));\n
    cgc_uint2str(&v113, 21, *(&v114));\n
    v7 = &v113;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v216 = v115;\n
    *(v216) = *(v216) - 8;\n
    v217 = v116;\n
    *(v217) = *(v217) + 8;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 4);\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(v108)->field_0;\n
    cgc_uint2str(&v105, 4, v106);\n
    v6 = &v105;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v218 = v107;\n
    *(v218) = *(v218) - 1;\n
    v219 = v108;\n
    *(v219) = *(v219) + 1;\n
    v150 = a0;\n
    v149 = a1;\n
    *(&v147) = *(v150);\n
    memset(&v146, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v147[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v147[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v147[2] << 8))\n
                v5 = v147[3];\n
        }\n
    }\n
    v148 = v5 & 1;\n
    cgc_uint2str(&v146, 12, v148);\n
    v4 = &v146;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v146)) < 0)\n
        cgc__terminate(1);\n
    v220 = v149;\n
    *(v220) = *(v220) - 4;\n
    v221 = v150;\n
    *(v221) = *(v221) + 4;\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37[0]) = *(v40);\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v37[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v37[6] << 8))\n
                                v3 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v3 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v2 = &v36;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v222 = v39;\n
    *(v222) = *(v222) - 8;\n
    v223 = v40;\n
    *(v223) = *(v223) + 8;\n
    v136 = a0;\n
    v135 = a1;\n
    if (*(v135) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    v224 = v135;\n
    *(v224) = *(v224) - 2;\n
    v225 = v136;\n
    *(v225) = *(v225) + 2;\n
    if (v134 <= *(v135) && !(!v134))\n
        goto LABEL_42f50f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42f50f:\n
    v133 = cgc_calloc(v134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v133, *(v136), v134);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v226 = v135;\n
    *(v226) = *(v226) - v134;\n
    v227 = v136;\n
    *(v227) = &(*(v227))[v134];\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    v145 = a0;\n
    v144 = a1;\n
    *(&v142) = *(v145);\n
    memset(&v141, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v142[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v142[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v142[2] << 8))\n
                v1 = v142[3];\n
        }\n
    }\n
    v143 = v1 & 1;\n
    cgc_uint2str(&v141, 12, v143);\n
    v0 = &v141;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v228 = v144;\n
    *(v228) = *(v228) - 4;\n
    v229 = v145;\n
    *(v229) = *(v229) + 4;\n
    v29 ^= cgc__cookie;\n
    if (v29)\n
        cgc___stack_cookie_fail();\n
    v230 = a1;\n
    if (*(a1) > 0 && v28 >= 0)\n
    {\n
        v230 = v28;\n
        if (v230 < 0)\n
            v230 = *(&(&v30)[8 * v28])(a0, a1);\n
    }\n
    return v230;\n
}\n
", "4388794:sub_42f7ba": null, "4388800:cgc_process_llamajibi": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c61a0;\n
extern unsigned long long g_4c61a8;\n
\n
long long cgc_process_llamajibi(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1a8]\n
    char v1;  // [bp-0x199]\n
    struct_1 *v2;  // [bp-0x198]\n
    char v3;  // [bp-0x189]\n
    struct_1 *v4;  // [bp-0x188]\n
    unsigned int v5;  // [bp-0x17c]\n
    struct_1 *v6;  // [bp-0x178]\n
    unsigned int v7;  // [bp-0x170]\n
    unsigned int v8;  // [bp-0x16c]\n
    unsigned long v9;  // [bp-0x168]\n
    unsigned long v10;  // [bp-0x160]\n
    char v11;  // [bp-0x13e]\n
    char *v12;  // [bp-0x138]\n
    unsigned short v13;  // [bp-0x12a]\n
    unsigned int *v14;  // [bp-0x128]\n
    struct struct_0 **v15;  // [bp-0x120]\n
    char v16;  // [bp-0x118]\n
    char v17[8];  // [bp-0x100]\n
    unsigned int v18;  // [bp-0xf8]\n
    unsigned int *v19;  // [bp-0xf0]\n
    struct struct_0 **v20;  // [bp-0xe8]\n
    unsigned long v21;  // [bp-0xe0]\n
    char v22;  // [bp-0xd1]\n
    unsigned int *v23;  // [bp-0xd0]\n
    struct struct_0 **v24;  // [bp-0xc8]\n
    char *v25;  // [bp-0xc0]\n
    unsigned int v26;  // [bp-0xb4]\n
    unsigned int *v27;  // [bp-0xb0]\n
    struct struct_0 **v28;  // [bp-0xa8]\n
    unsigned short *v29;  // [bp-0xa0]\n
    unsigned int *v30;  // [bp-0x98]\n
    struct struct_0 **v31;  // [bp-0x90]\n
    char v32;  // [bp-0x88]\n
    unsigned int v33;  // [bp-0x7c]\n
    unsigned int *v34;  // [bp-0x78]\n
    struct struct_0 **v35;  // [bp-0x70]\n
    char v36;  // [bp-0x68]\n
    unsigned int v37;  // [bp-0x5c]\n
    unsigned int *v38;  // [bp-0x58]\n
    struct struct_0 **v39;  // [bp-0x50]\n
    unsigned long v40;  // [bp-0x48]\n
    unsigned short v41;  // [bp-0x3a]\n
    unsigned int *v42;  // [bp-0x38]\n
    struct struct_0 **v43;  // [bp-0x30]\n
    unsigned long v44;  // [bp-0x28]\n
    unsigned short v45;  // [bp-0x1a]\n
    unsigned int *v46;  // [bp-0x18]\n
    struct struct_0 **v47;  // [bp-0x10]\n
    unsigned int *v49;  // rax\n
    struct struct_0 **v50;  // rax\n
    struct struct_0 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    struct struct_0 **v56;  // rax\n
    struct struct_0 **v58;  // rax\n
    unsigned int *v60;  // rax\n
    unsigned int *v61;  // rax\n
    struct struct_0 **v62;  // rax\n
    unsigned int *v63;  // rax\n
    struct struct_0 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_0 **v66;  // rax\n
    unsigned int *v67;  // rax\n
    struct struct_0 **v68;  // rax\n
    unsigned int *v69;  // rax\n
    struct struct_0 **v70;  // rax\n
    unsigned int *v71;  // rax\n
    struct struct_0 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    struct struct_0 **v74;  // rax\n
    unsigned int *v75;  // rax, Other Possible Types: unsigned long\n
\n
    v9 = g_4c61a0;\n
    v10 = g_4c61a8;\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamajibi===\", 15) < 0)\n
        cgc__terminate(1);\n
    v24 = a0;\n
    v23 = a1;\n
    if (*(v23) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = *(v24)->field_0;\n
    v49 = v23;\n
    *(v49) = *(v49) - 1;\n
    v50 = v24;\n
    *(v50) = &*(v50)->padding_1;\n
    if (v22 <= *(v23) && !(!v22))\n
        goto LABEL_42f926;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_42f926:\n
    v21 = cgc_calloc(v22);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v21, *(v24), v22);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v51 = v24;\n
    *(v51) = &(&*(v51)->field_0)[v22];\n
    v52 = v23;\n
    *(v52) = *(v52) - v22;\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    v39 = a0;\n
    v38 = a1;\n
    memset(&v36, 0, 12);\n
    if (*(v38) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(&*(v39)->field_0);\n
    cgc_uint2str(&v36, 12, v37);\n
    v6 = &v36;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v53 = v38;\n
    *(v53) = *(v53) - 4;\n
    v54 = v39;\n
    *(v54) = &*(v54)->field_4;\n
    v31 = a0;\n
    v30 = a1;\n
    v29 = &*(v31)->field_0;\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = v30;\n
    *(v55) = *(v55) - 2;\n
    v56 = v31;\n
    *(v56) = &*(v56)->padding_1[1];\n
    v7 = *(v29);\n
    v28 = a0;\n
    v27 = a1;\n
    if (*(v27) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v27) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v27);\n
    v26 = v5;\n
    if (!v26)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = cgc_calloc(134);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v25, \"Str: \");\n
    cgc_strncpy(v25 + 5, *(v28), v26);\n
    v58 = v28;\n
    *(v58) = &(&*(v58)->field_4)[cgc_strlen(v25)];\n
    v60 = v27;\n
    *(v60) = *(v60) - (cgc_strlen(v25) + -4);\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v35 = a0;\n
    v34 = a1;\n
    memset(&v32, 0, 12);\n
    if (*(v34) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(&*(v35)->field_0);\n
    cgc_uint2str(&v32, 12, v33);\n
    v4 = &v32;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v61 = v34;\n
    *(v61) = *(v61) - 4;\n
    v62 = v35;\n
    *(v62) = &*(v62)->field_4;\n
    v20 = a0;\n
    v19 = a1;\n
    *(&v17[0]) = *(v20);\n
    memset(&v16, 0, 21);\n
    if (*(v19) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v17[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v17[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v17[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v17[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v17[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v17[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v17[6] << 8))\n
                                v3 = v17[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v18) = v3 & 1;\n
    cgc_uint2str(&v16, 21, *(&v18));\n
    v2 = &v16;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v63 = v19;\n
    *(v63) = *(v63) - 8;\n
    v64 = v20;\n
    *(v64) = *(v64) + 1;\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47)->field_0);\n
    v65 = v46;\n
    *(v65) = *(v65) - 2;\n
    v66 = v47;\n
    *(v66) = &*(v66)->padding_1[1];\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_430152;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_430152:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v67 = v46;\n
    *(v67) = *(v67) - v45;\n
    v68 = v47;\n
    *(v68) = &(&*(v68)->field_0)[v45];\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(&*(v43)->field_0);\n
    v69 = v42;\n
    *(v69) = *(v69) - 2;\n
    v70 = v43;\n
    *(v70) = &*(v70)->padding_1[1];\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_4302e3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4302e3:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v71 = v42;\n
    *(v71) = *(v71) - v41;\n
    v72 = v43;\n
    *(v72) = &(&*(v72)->field_0)[v41];\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v15 = a0;\n
    v14 = a1;\n
    v12 = &*(v15)->field_0;\n
    memset(&v11, 0, 6);\n
    if (*(v14) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((*(v12) << 8))\n
        v1 = v12[1];\n
    v13 = v1 & 1;\n
    cgc_uint2str(&v11, 6, v13);\n
    v0 = &v11;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v11)) < 0)\n
        cgc__terminate(1);\n
    v73 = v14;\n
    *(v73) = *(v73) - 2;\n
    v74 = v15;\n
    *(v74) = &*(v74)->padding_1[1];\n
    v8 ^= cgc__cookie;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v75 = a1;\n
    if (*(a1) > 0 && v7 >= 0)\n
    {\n
        v75 = v7;\n
        if (v75 < 2)\n
            v75 = (&v9)[v7](a0, a1);\n
    }\n
    return v75;\n
}\n
", "4392292:sub_430564": null, "4392304:cgc_process_llamafootpad": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6230;\n
\n
long long cgc_process_llamafootpad(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x880]\n
    char v1;  // [bp-0x875]\n
    unsigned int v2;  // [bp-0x874]\n
    struct_1 *v3;  // [bp-0x870]\n
    struct_1 *v4;  // [bp-0x868]\n
    struct_1 *v5;  // [bp-0x860]\n
    unsigned int v6;  // [bp-0x854]\n
    struct_1 *v7;  // [bp-0x850]\n
    struct_1 *v8;  // [bp-0x848]\n
    struct_1 *v9;  // [bp-0x840]\n
    char v10;  // [bp-0x831]\n
    struct_1 *v11;  // [bp-0x830]\n
    struct_1 *v12;  // [bp-0x828]\n
    char v13;  // [bp-0x819]\n
    struct_1 *v14;  // [bp-0x818]\n
    struct_1 *v15;  // [bp-0x810]\n
    unsigned int v16;  // [bp-0x804]\n
    struct_1 *v17;  // [bp-0x800]\n
    char v18;  // [bp-0x7f1]\n
    struct_1 *v19;  // [bp-0x7f0]\n
    unsigned int v20;  // [bp-0x7e4]\n
    struct_1 *v21;  // [bp-0x7e0]\n
    struct_1 *v22;  // [bp-0x7d8]\n
    struct_1 *v23;  // [bp-0x7d0]\n
    struct_1 *v24;  // [bp-0x7c8]\n
    struct_1 *v25;  // [bp-0x7c0]\n
    struct_1 *v26;  // [bp-0x7b8]\n
    struct_1 *v27;  // [bp-0x7b0]\n
    unsigned int v28;  // [bp-0x7a4]\n
    struct_1 *v29;  // [bp-0x7a0]\n
    struct_1 *v30;  // [bp-0x798]\n
    char v31;  // [bp-0x789]\n
    struct_1 *v32;  // [bp-0x788]\n
    char v33;  // [bp-0x77d]\n
    unsigned int v34;  // [bp-0x77c]\n
    struct_1 *v35;  // [bp-0x778]\n
    char v36;  // [bp-0x76d]\n
    unsigned int v37;  // [bp-0x76c]\n
    struct_1 *v38;  // [bp-0x768]\n
    char v39;  // [bp-0x759]\n
    unsigned int v40;  // [bp-0x758]\n
    unsigned int v41;  // [bp-0x754]\n
    unsigned long v42;  // [bp-0x750]\n
    char v43;  // [bp-0x738]\n
    char v44[8];  // [bp-0x718]\n
    unsigned int v45;  // [bp-0x710]\n
    unsigned int *v46;  // [bp-0x708]\n
    struct struct_0 **v47;  // [bp-0x700]\n
    char v48;  // [bp-0x6f8]\n
    char v49[8];  // [bp-0x6d8]\n
    unsigned int v50;  // [bp-0x6d0]\n
    unsigned int *v51;  // [bp-0x6c8]\n
    struct struct_0 **v52;  // [bp-0x6c0]\n
    char v53;  // [bp-0x6b8]\n
    char v54[8];  // [bp-0x698]\n
    unsigned int v55;  // [bp-0x690]\n
    unsigned int *v56;  // [bp-0x688]\n
    struct struct_0 **v57;  // [bp-0x680]\n
    char v58;  // [bp-0x678]\n
    char v59[8];  // [bp-0x660]\n
    unsigned int v60;  // [bp-0x658]\n
    unsigned int *v61;  // [bp-0x650]\n
    struct struct_0 **v62;  // [bp-0x648]\n
    unsigned long v63;  // [bp-0x640]\n
    char v64;  // [bp-0x631]\n
    unsigned int *v65;  // [bp-0x630]\n
    struct struct_0 **v66;  // [bp-0x628]\n
    unsigned long v67;  // [bp-0x620]\n
    char v68;  // [bp-0x611]\n
    unsigned int *v69;  // [bp-0x610]\n
    struct struct_0 **v70;  // [bp-0x608]\n
    char *v71;  // [bp-0x600]\n
    unsigned int *v72;  // [bp-0x5f8]\n
    struct struct_0 **v73;  // [bp-0x5f0]\n
    char *v74;  // [bp-0x5e8]\n
    unsigned int v75;  // [bp-0x5dc]\n
    unsigned int *v76;  // [bp-0x5d8]\n
    struct struct_0 **v77;  // [bp-0x5d0]\n
    char *v78;  // [bp-0x5c8]\n
    unsigned int v79;  // [bp-0x5bc]\n
    unsigned int *v80;  // [bp-0x5b8]\n
    struct struct_0 **v81;  // [bp-0x5b0]\n
    char *v82;  // [bp-0x5a8]\n
    unsigned int v83;  // [bp-0x59c]\n
    unsigned int *v84;  // [bp-0x598]\n
    struct struct_0 **v85;  // [bp-0x590]\n
    char *v86;  // [bp-0x588]\n
    unsigned int v87;  // [bp-0x57c]\n
    unsigned int *v88;  // [bp-0x578]\n
    struct struct_0 **v89;  // [bp-0x570]\n
    char *v90;  // [bp-0x568]\n
    unsigned int v91;  // [bp-0x55c]\n
    unsigned int *v92;  // [bp-0x558]\n
    struct struct_0 **v93;  // [bp-0x550]\n
    char *v94;  // [bp-0x548]\n
    unsigned int v95;  // [bp-0x53c]\n
    unsigned int *v96;  // [bp-0x538]\n
    struct struct_0 **v97;  // [bp-0x530]\n
    char v98;  // [bp-0x528]\n
    unsigned short v99;  // [bp-0x522]\n
    unsigned int *v100;  // [bp-0x520]\n
    struct struct_0 **v101;  // [bp-0x518]\n
    char v102;  // [bp-0x510]\n
    unsigned short v103;  // [bp-0x50a]\n
    unsigned int *v104;  // [bp-0x508]\n
    struct struct_0 **v105;  // [bp-0x500]\n
    char v106;  // [bp-0x4f5]\n
    char v107;  // [bp-0x4f1]\n
    unsigned int *v108;  // [bp-0x4f0]\n
    struct struct_0 **v109;  // [bp-0x4e8]\n
    char v110;  // [bp-0x4dd]\n
    char v111;  // [bp-0x4d9]\n
    unsigned int *v112;  // [bp-0x4d8]\n
    struct struct_0 **v113;  // [bp-0x4d0]\n
    char v114;  // [bp-0x4c5]\n
    char v115;  // [bp-0x4c1]\n
    unsigned int *v116;  // [bp-0x4c0]\n
    struct struct_0 **v117;  // [bp-0x4b8]\n
    char *v118;  // [bp-0x4b0]\n
    unsigned int *v119;  // [bp-0x4a8]\n
    struct struct_0 **v120;  // [bp-0x4a0]\n
    char v121;  // [bp-0x498]\n
    unsigned int v122;  // [bp-0x480]\n
    unsigned int *v123;  // [bp-0x478]\n
    struct struct_0 **v124;  // [bp-0x470]\n
    char v125;  // [bp-0x468]\n
    unsigned int v126;  // [bp-0x450]\n
    unsigned int *v127;  // [bp-0x448]\n
    struct struct_0 **v128;  // [bp-0x440]\n
    char v129;  // [bp-0x438]\n
    unsigned int v130;  // [bp-0x420]\n
    unsigned int *v131;  // [bp-0x418]\n
    struct struct_0 **v132;  // [bp-0x410]\n
    char v133;  // [bp-0x408]\n
    unsigned int v134;  // [bp-0x3f0]\n
    unsigned int *v135;  // [bp-0x3e8]\n
    struct struct_0 **v136;  // [bp-0x3e0]\n
    char v137;  // [bp-0x3d8]\n
    unsigned int v138;  // [bp-0x3c0]\n
    unsigned int *v139;  // [bp-0x3b8]\n
    struct struct_0 **v140;  // [bp-0x3b0]\n
    char v141;  // [bp-0x3a8]\n
    unsigned int v142;  // [bp-0x39c]\n
    unsigned int *v143;  // [bp-0x398]\n
    struct struct_0 **v144;  // [bp-0x390]\n
    char v145;  // [bp-0x388]\n
    unsigned int v146;  // [bp-0x37c]\n
    unsigned int *v147;  // [bp-0x378]\n
    struct struct_0 **v148;  // [bp-0x370]\n
    char v149;  // [bp-0x368]\n
    unsigned int v150;  // [bp-0x35c]\n
    unsigned int *v151;  // [bp-0x358]\n
    struct struct_0 **v152;  // [bp-0x350]\n
    char v153;  // [bp-0x348]\n
    unsigned int v154;  // [bp-0x33c]\n
    unsigned int *v155;  // [bp-0x338]\n
    struct struct_0 **v156;  // [bp-0x330]\n
    char v157;  // [bp-0x328]\n
    unsigned int v158;  // [bp-0x31c]\n
    unsigned int *v159;  // [bp-0x318]\n
    struct struct_0 **v160;  // [bp-0x310]\n
    unsigned long v161;  // [bp-0x308]\n
    unsigned short v162;  // [bp-0x2fa]\n
    unsigned int *v163;  // [bp-0x2f8]\n
    struct struct_0 **v164;  // [bp-0x2f0]\n
    unsigned long v165;  // [bp-0x2e8]\n
    unsigned short v166;  // [bp-0x2da]\n
    unsigned int *v167;  // [bp-0x2d8]\n
    struct struct_0 **v168;  // [bp-0x2d0]\n
    unsigned long v169;  // [bp-0x2c8]\n
    unsigned short v170;  // [bp-0x2ba]\n
    unsigned int *v171;  // [bp-0x2b8]\n
    struct struct_0 **v172;  // [bp-0x2b0]\n
    unsigned long v173;  // [bp-0x2a8]\n
    unsigned short v174;  // [bp-0x29a]\n
    unsigned int *v175;  // [bp-0x298]\n
    struct struct_0 **v176;  // [bp-0x290]\n
    unsigned long v177;  // [bp-0x288]\n
    unsigned short v178;  // [bp-0x27a]\n
    unsigned int *v179;  // [bp-0x278]\n
    struct struct_0 **v180;  // [bp-0x270]\n
    unsigned long v181;  // [bp-0x268]\n
    unsigned short v182;  // [bp-0x25a]\n
    unsigned int *v183;  // [bp-0x258]\n
    struct struct_0 **v184;  // [bp-0x250]\n
    unsigned long v185;  // [bp-0x248]\n
    unsigned short v186;  // [bp-0x23a]\n
    unsigned int *v187;  // [bp-0x238]\n
    struct struct_0 **v188;  // [bp-0x230]\n
    unsigned long v189;  // [bp-0x228]\n
    unsigned short v190;  // [bp-0x21a]\n
    unsigned int *v191;  // [bp-0x218]\n
    struct struct_0 **v192;  // [bp-0x210]\n
    unsigned long v193;  // [bp-0x208]\n
    unsigned short v194;  // [bp-0x1fa]\n
    unsigned int *v195;  // [bp-0x1f8]\n
    struct struct_0 **v196;  // [bp-0x1f0]\n
    char v197;  // [bp-0x1e4]\n
    char v198[4];  // [bp-0x1d8]\n
    unsigned int v199;  // [bp-0x1cc]\n
    unsigned int *v200;  // [bp-0x1c8]\n
    struct struct_0 **v201;  // [bp-0x1c0]\n
    char v202;  // [bp-0x1b4]\n
    char v203[4];  // [bp-0x1a8]\n
    unsigned int v204;  // [bp-0x19c]\n
    unsigned int *v205;  // [bp-0x198]\n
    struct struct_0 **v206;  // [bp-0x190]\n
    char v207;  // [bp-0x184]\n
    char v208[4];  // [bp-0x178]\n
    unsigned int v209;  // [bp-0x16c]\n
    unsigned int *v210;  // [bp-0x168]\n
    struct struct_0 **v211;  // [bp-0x160]\n
    char v212;  // [bp-0x154]\n
    char v213[4];  // [bp-0x148]\n
    unsigned int v214;  // [bp-0x13c]\n
    unsigned int *v215;  // [bp-0x138]\n
    struct struct_0 **v216;  // [bp-0x130]\n
    char *v217;  // [bp-0x128]\n
    unsigned int v218;  // [bp-0x11c]\n
    unsigned int *v219;  // [bp-0x118]\n
    struct struct_0 **v220;  // [bp-0x110]\n
    char v221;  // [bp-0x108]\n
    unsigned int v222;  // [bp-0xf0]\n
    unsigned int *v223;  // [bp-0xe8]\n
    struct struct_0 **v224;  // [bp-0xe0]\n
    char v225;  // [bp-0xd8]\n
    unsigned int v226;  // [bp-0xc0]\n
    unsigned int *v227;  // [bp-0xb8]\n
    struct struct_0 **v228;  // [bp-0xb0]\n
    unsigned long v229;  // [bp-0xa8]\n
    char v230;  // [bp-0x99]\n
    unsigned int *v231;  // [bp-0x98]\n
    struct struct_0 **v232;  // [bp-0x90]\n
    unsigned long v233;  // [bp-0x88]\n
    char v234;  // [bp-0x79]\n
    unsigned int *v235;  // [bp-0x78]\n
    struct struct_0 **v236;  // [bp-0x70]\n
    unsigned long v237;  // [bp-0x68]\n
    char v238;  // [bp-0x59]\n
    unsigned int *v239;  // [bp-0x58]\n
    struct struct_0 **v240;  // [bp-0x50]\n
    unsigned long v241;  // [bp-0x48]\n
    char v242;  // [bp-0x39]\n
    unsigned int *v243;  // [bp-0x38]\n
    struct struct_0 **v244;  // [bp-0x30]\n
    unsigned long v245;  // [bp-0x28]\n
    char v246;  // [bp-0x19]\n
    unsigned int *v247;  // [bp-0x18]\n
    struct struct_0 **v248;  // [bp-0x10]\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_0 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_0 **v299;  // rax\n
    struct struct_0 **v300;  // rax\n
    unsigned int *v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v303;  // rax\n
    struct struct_0 **v305;  // rax\n
    unsigned int *v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    unsigned int *v310;  // rax\n
    struct struct_0 **v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    unsigned int *v314;  // rax\n
    struct struct_0 **v315;  // rax\n
    struct struct_0 **v317;  // rax\n
    unsigned int *v319;  // rax\n
    unsigned int *v320;  // rax\n
    struct struct_0 **v321;  // rax\n
    struct struct_0 **v322;  // rax\n
    unsigned int *v323;  // rax\n
    unsigned int *v324;  // rax\n
    struct struct_0 **v325;  // rax\n
    unsigned int *v326;  // rax\n
    struct struct_0 **v327;  // rax\n
    unsigned int *v328;  // rax\n
    struct struct_0 **v329;  // rax\n
    unsigned int *v330;  // rax\n
    struct struct_0 **v331;  // rax\n
    struct struct_0 **v332;  // rax\n
    unsigned int *v333;  // rax\n
    unsigned int *v334;  // rax\n
    struct struct_0 **v335;  // rax\n
    unsigned int *v336;  // rax\n
    struct struct_0 **v337;  // rax\n
    unsigned int *v338;  // rax\n
    struct struct_0 **v339;  // rax\n
    unsigned int *v340;  // rax\n
    struct struct_0 **v341;  // rax\n
    unsigned int *v342;  // rax\n
    struct struct_0 **v343;  // rax\n
    unsigned int *v344;  // rax\n
    struct struct_0 **v345;  // rax\n
    unsigned int *v346;  // rax\n
    struct struct_0 **v347;  // rax\n
    unsigned int *v348;  // rax\n
    struct struct_0 **v349;  // rax\n
    unsigned int *v350;  // rax\n
    struct struct_0 **v351;  // rax\n
    unsigned int *v352;  // rax\n
    struct struct_0 **v353;  // rax\n
    struct struct_0 **v354;  // rax\n
    unsigned int *v355;  // rax\n
    unsigned int *v356;  // rax\n
    struct struct_0 **v357;  // rax\n
    unsigned int *v358;  // rax\n
    struct struct_0 **v359;  // rax\n
    unsigned int *v360;  // rax\n
    struct struct_0 **v361;  // rax\n
    unsigned int *v362;  // rax\n
    struct struct_0 **v363;  // rax\n
    struct struct_0 **v364;  // rax\n
    unsigned int *v365;  // rax\n
    unsigned int *v366;  // rax\n
    struct struct_0 **v367;  // rax\n
    unsigned int *v368;  // rax\n
    struct struct_0 **v369;  // rax\n
    unsigned int *v370;  // rax\n
    struct struct_0 **v371;  // rax\n
    struct struct_0 **v372;  // rax\n
    unsigned int *v373;  // rax\n
    unsigned int *v374;  // rax\n
    struct struct_0 **v375;  // rax\n
    struct struct_0 **v377;  // rax\n
    unsigned int *v379;  // rax\n
    unsigned int *v380;  // rax\n
    struct struct_0 **v381;  // rax\n
    unsigned int *v382;  // rax\n
    struct struct_0 **v383;  // rax\n
    unsigned int *v384;  // rax\n
    struct struct_0 **v385;  // rax\n
    unsigned int *v386;  // rax\n
    struct struct_0 **v387;  // rax\n
    struct struct_0 **v388;  // rax\n
    unsigned int *v389;  // rax\n
    struct struct_0 **v391;  // rax\n
    unsigned int *v393;  // rax\n
    unsigned int *v394;  // rax\n
    struct struct_0 **v395;  // rax\n
    unsigned int *v396;  // rax, Other Possible Types: unsigned long\n
\n
    v42 = g_4c6230;\n
    v41 = cgc__cookie;\n
    v40 = -1;\n
    if (cgc_sendline(1, \"===llamafootpad===\", 18) < 0)\n
        cgc__terminate(1);\n
    v62 = a0;\n
    v61 = a1;\n
    *(&v59[0]) = *(v62);\n
    memset(&v58, 0, 21);\n
    if (*(v61) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = 0;\n
    if (v59[0] << 56)\n
    {\n
        v39 = 0;\n
        if (v59[1] << 48)\n
        {\n
            v39 = 0;\n
            if (v59[2] << 40)\n
            {\n
                v39 = 0;\n
                if (v59[3] << 32)\n
                {\n
                    v39 = 0;\n
                    if ((v59[4] << 24))\n
                    {\n
                        v39 = 0;\n
                        if ((v59[5] << 16))\n
                        {\n
                            v39 = 0;\n
                            if ((v59[6] << 8))\n
                                v39 = v59[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v60) = v39 & 1;\n
    cgc_uint2str(&v58, 21, *(&v60));\n
    v38 = &v58;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v250 = v61;\n
    *(v250) = *(v250) - 8;\n
    v251 = v62;\n
    *(v251) = *(v251) + 8;\n
    v180 = a0;\n
    v179 = a1;\n
    if (*(v179) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v178 = *(&*(v180));\n
    v252 = v179;\n
    *(v252) = *(v252) - 2;\n
    v253 = v180;\n
    *(v253) = *(v253) + 2;\n
    if (v178 <= *(v179) && !(!v178))\n
        goto LABEL_4308e0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4308e0:\n
    v177 = cgc_calloc(v178);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v177, *(v180), v178);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v254 = v179;\n
    *(v254) = *(v254) - v178;\n
    v255 = v180;\n
    *(v255) = &(*(v255))[v178];\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    v97 = a0;\n
    v96 = a1;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v96) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v96);\n
    v95 = v37;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v94, \"Str: \");\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v257 = v97;\n
    *(v257) = &(*(v257))[4 + cgc_strlen(v94)];\n
    v259 = v96;\n
    *(v259) = *(v259) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54[0]) = *(v57);\n
    memset(&v53, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = 0;\n
    if (v54[0] << 56)\n
    {\n
        v36 = 0;\n
        if (v54[1] << 48)\n
        {\n
            v36 = 0;\n
            if (v54[2] << 40)\n
            {\n
                v36 = 0;\n
                if (v54[3] << 32)\n
                {\n
                    v36 = 0;\n
                    if ((v54[4] << 24))\n
                    {\n
                        v36 = 0;\n
                        if ((v54[5] << 16))\n
                        {\n
                            v36 = 0;\n
                            if ((v54[6] << 8))\n
                                v36 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v55) = v36 & 1;\n
    cgc_uint2str(&v53, 21, *(&v55));\n
    v35 = &v53;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v260 = v56;\n
    *(v260) = *(v260) - 8;\n
    v261 = v57;\n
    *(v261) = *(v261) + 8;\n
    v93 = a0;\n
    v92 = a1;\n
    if (*(v92) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v92) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v92);\n
    v91 = v34;\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = cgc_calloc(134);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v90, \"Str: \");\n
    cgc_strncpy(v90 + 5, *(v93), v91);\n
    v263 = v93;\n
    *(v263) = &(*(v263))[4 + cgc_strlen(v90)];\n
    v265 = v92;\n
    *(v265) = *(v265) - (cgc_strlen(v90) + -4);\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49[0]) = *(v52);\n
    memset(&v48, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = 0;\n
    if (v49[0] << 56)\n
    {\n
        v33 = 0;\n
        if (v49[1] << 48)\n
        {\n
            v33 = 0;\n
            if (v49[2] << 40)\n
            {\n
                v33 = 0;\n
                if (v49[3] << 32)\n
                {\n
                    v33 = 0;\n
                    if ((v49[4] << 24))\n
                    {\n
                        v33 = 0;\n
                        if ((v49[5] << 16))\n
                        {\n
                            v33 = 0;\n
                            if ((v49[6] << 8))\n
                                v33 = v49[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v50) = v33 & 1;\n
    cgc_uint2str(&v48, 21, *(&v50));\n
    v32 = &v48;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v266 = v51;\n
    *(v266) = *(v266) - 8;\n
    v267 = v52;\n
    *(v267) = *(v267) + 8;\n
    v216 = a0;\n
    v215 = a1;\n
    *(&v213) = *(v216);\n
    memset(&v212, 0, 12);\n
    if (*(v215) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if ((v213[0] << 24))\n
    {\n
        v31 = 0;\n
        if ((v213[1] << 16))\n
        {\n
            v31 = 0;\n
            if ((v213[2] << 8))\n
                v31 = v213[3];\n
        }\n
    }\n
    v214 = v31 & 1;\n
    cgc_uint2str(&v212, 12, v214);\n
    v30 = &v212;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v212)) < 0)\n
        cgc__terminate(1);\n
    v268 = v215;\n
    *(v268) = *(v268) - 4;\n
    v269 = v216;\n
    *(v269) = *(v269) + 4;\n
    v176 = a0;\n
    v175 = a1;\n
    if (*(v175) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v174 = *(&*(v176));\n
    v270 = v175;\n
    *(v270) = *(v270) - 2;\n
    v271 = v176;\n
    *(v271) = *(v271) + 2;\n
    if (v174 <= *(v175) && !(!v174))\n
        goto LABEL_431446;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_431446:\n
    v173 = cgc_calloc(v174);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v173, *(v176), v174);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v272 = v175;\n
    *(v272) = *(v272) - v174;\n
    v273 = v176;\n
    *(v273) = &(*(v273))[v174];\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    v120 = a0;\n
    v119 = a1;\n
    v118 = &*(v120)->field_0;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v274 = v119;\n
    *(v274) = *(v274) - 2;\n
    v275 = v120;\n
    *(v275) = *(v275) + 2;\n
    v40 = *(&v118);\n
    v160 = a0;\n
    v159 = a1;\n
    memset(&v157, 0, 12);\n
    if (*(v159) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = *(&*(v160));\n
    cgc_uint2str(&v157, 12, v158);\n
    v29 = &v157;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v157)) < 0)\n
        cgc__terminate(1);\n
    v276 = v159;\n
    *(v276) = *(v276) - 4;\n
    v277 = v160;\n
    *(v277) = *(v277) + 4;\n
    v89 = a0;\n
    v88 = a1;\n
    if (*(v88) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v88) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v88);\n
    v87 = v28;\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = cgc_calloc(134);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v86, \"Str: \");\n
    cgc_strncpy(v86 + 5, *(v89), v87);\n
    v279 = v89;\n
    *(v279) = &(*(v279))[4 + cgc_strlen(v86)];\n
    v281 = v88;\n
    *(v281) = *(v281) - (cgc_strlen(v86) + -4);\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v196 = a0;\n
    v195 = a1;\n
    if (*(v195) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v194 = *(&*(v196));\n
    v282 = v195;\n
    *(v282) = *(v282) - 2;\n
    v283 = v196;\n
    *(v283) = *(v283) + 2;\n
    if (v194 <= *(v195) && !(!v194))\n
        goto LABEL_4319b8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4319b8:\n
    v193 = cgc_calloc(v194);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v193, *(v196), v194);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v284 = v195;\n
    *(v284) = *(v284) - v194;\n
    v285 = v196;\n
    *(v285) = &(*(v285))[v194];\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 4);\n
    if (*(v116) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(v117)->field_0;\n
    cgc_uint2str(&v114, 4, v115);\n
    v27 = &v114;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v286 = v116;\n
    *(v286) = *(v286) - 1;\n
    v287 = v117;\n
    *(v287) = *(v287) + 1;\n
    v228 = a0;\n
    v227 = a1;\n
    memset(&v225, 0, 21);\n
    if (*(v227) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v226) = *(&*(v228));\n
    cgc_uint2str(&v225, 21, *(&v226));\n
    v26 = &v225;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v225)) < 0)\n
        cgc__terminate(1);\n
    v288 = v227;\n
    *(v288) = *(v288) - 8;\n
    v289 = v228;\n
    *(v289) = *(v289) + 8;\n
    v140 = a0;\n
    v139 = a1;\n
    memset(&v137, 0, 21);\n
    if (*(v139) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v138) = *(&*(v140));\n
    cgc_uint2str(&v137, 21, *(&v138));\n
    v25 = &v137;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v137)) < 0)\n
        cgc__terminate(1);\n
    v290 = v139;\n
    *(v290) = *(v290) - 8;\n
    v291 = v140;\n
    *(v291) = *(v291) + 8;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 4);\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(v113)->field_0;\n
    cgc_uint2str(&v110, 4, v111);\n
    v24 = &v110;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v292 = v112;\n
    *(v292) = *(v292) - 1;\n
    v293 = v113;\n
    *(v293) = *(v293) + 1;\n
    v152 = a0;\n
    v151 = a1;\n
    memset(&v149, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v150 = *(&*(v152));\n
    cgc_uint2str(&v149, 12, v150);\n
    v23 = &v149;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v294 = v151;\n
    *(v294) = *(v294) - 4;\n
    v295 = v152;\n
    *(v295) = *(v295) + 4;\n
    v148 = a0;\n
    v147 = a1;\n
    memset(&v145, 0, 12);\n
    if (*(v147) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    cgc_uint2str(&v145, 12, v146);\n
    v22 = &v145;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v145)) < 0)\n
        cgc__terminate(1);\n
    v296 = v147;\n
    *(v296) = *(v296) - 4;\n
    v297 = v148;\n
    *(v297) = *(v297) + 4;\n
    v248 = a0;\n
    v247 = a1;\n
    if (*(v247) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v246 = *(v248)->field_0;\n
    v298 = v247;\n
    *(v298) = *(v298) - 1;\n
    v299 = v248;\n
    *(v299) = *(v299) + 1;\n
    if (v246 <= *(v247) && !(!v246))\n
        goto LABEL_43217e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43217e:\n
    v245 = cgc_calloc(v246);\n
    if (!v245)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v245, *(v248), v246);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v300 = v248;\n
    *(v300) = &(*(v300))[v246];\n
    v301 = v247;\n
    *(v301) = *(v301) - v246;\n
    cgc_checkheap();\n
    cgc_free(v245);\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 6);\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 6, v103);\n
    v21 = &v102;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v302 = v104;\n
    *(v302) = *(v302) - 2;\n
    v303 = v105;\n
    *(v303) = *(v303) + 2;\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v84) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v84);\n
    v83 = v20;\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = cgc_calloc(134);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v82, \"Str: \");\n
    cgc_strncpy(v82 + 5, *(v85), v83);\n
    v305 = v85;\n
    *(v305) = &(*(v305))[4 + cgc_strlen(v82)];\n
    v307 = v84;\n
    *(v307) = *(v307) - (cgc_strlen(v82) + -4);\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v224 = a0;\n
    v223 = a1;\n
    memset(&v221, 0, 21);\n
    if (*(v223) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v222) = *(&*(v224));\n
    cgc_uint2str(&v221, 21, *(&v222));\n
    v19 = &v221;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v221)) < 0)\n
        cgc__terminate(1);\n
    v308 = v223;\n
    *(v308) = *(v308) - 8;\n
    v309 = v224;\n
    *(v309) = *(v309) + 8;\n
    v172 = a0;\n
    v171 = a1;\n
    if (*(v171) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v170 = *(&*(v172));\n
    v310 = v171;\n
    *(v310) = *(v310) - 2;\n
    v311 = v172;\n
    *(v311) = *(v311) + 2;\n
    if (v170 <= *(v171) && !(!v170))\n
        goto LABEL_43272a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43272a:\n
    v169 = cgc_calloc(v170);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v169, *(v172), v170);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v312 = v171;\n
    *(v312) = *(v312) - v170;\n
    v313 = v172;\n
    *(v313) = &(*(v313))[v170];\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    v211 = a0;\n
    v210 = a1;\n
    *(&v208) = *(v211);\n
    memset(&v207, 0, 12);\n
    if (*(v210) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v208[0] << 24))\n
    {\n
        v18 = 0;\n
        if ((v208[1] << 16))\n
        {\n
            v18 = 0;\n
            if ((v208[2] << 8))\n
                v18 = v208[3];\n
        }\n
    }\n
    v209 = v18 & 1;\n
    cgc_uint2str(&v207, 12, v209);\n
    v17 = &v207;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v207)) < 0)\n
        cgc__terminate(1);\n
    v314 = v210;\n
    *(v314) = *(v314) - 4;\n
    v315 = v211;\n
    *(v315) = *(v315) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v80) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v80);\n
    v79 = v16;\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = cgc_calloc(134);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v78, \"Str: \");\n
    cgc_strncpy(v78 + 5, *(v81), v79);\n
    v317 = v81;\n
    *(v317) = &(*(v317))[4 + cgc_strlen(v78)];\n
    v319 = v80;\n
    *(v319) = *(v319) - (cgc_strlen(v78) + -4);\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(v70)->field_0;\n
    v320 = v69;\n
    *(v320) = *(v320) - 1;\n
    v321 = v70;\n
    *(v321) = *(v321) + 1;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_432c6f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_432c6f:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v322 = v70;\n
    *(v322) = &(*(v322))[v68];\n
    v323 = v69;\n
    *(v323) = *(v323) - v68;\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v134) = *(&*(v136));\n
    cgc_uint2str(&v133, 21, *(&v134));\n
    v15 = &v133;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v324 = v135;\n
    *(v324) = *(v324) - 8;\n
    v325 = v136;\n
    *(v325) = *(v325) + 8;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 21);\n
    if (*(v131) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v130) = *(&*(v132));\n
    cgc_uint2str(&v129, 21, *(&v130));\n
    v14 = &v129;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v326 = v131;\n
    *(v326) = *(v326) - 8;\n
    v327 = v132;\n
    *(v327) = *(v327) + 8;\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44[0]) = *(v47);\n
    memset(&v43, 0, 21);\n
    if (*(v46) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if (v44[0] << 56)\n
    {\n
        v13 = 0;\n
        if (v44[1] << 48)\n
        {\n
            v13 = 0;\n
            if (v44[2] << 40)\n
            {\n
                v13 = 0;\n
                if (v44[3] << 32)\n
                {\n
                    v13 = 0;\n
                    if ((v44[4] << 24))\n
                    {\n
                        v13 = 0;\n
                        if ((v44[5] << 16))\n
                        {\n
                            v13 = 0;\n
                            if ((v44[6] << 8))\n
                                v13 = v44[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v45) = v13 & 1;\n
    cgc_uint2str(&v43, 21, *(&v45));\n
    v12 = &v43;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v328 = v46;\n
    *(v328) = *(v328) - 8;\n
    v329 = v47;\n
    *(v329) = *(v329) + 8;\n
    v244 = a0;\n
    v243 = a1;\n
    if (*(v243) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v242 = *(v244)->field_0;\n
    v330 = v243;\n
    *(v330) = *(v330) - 1;\n
    v331 = v244;\n
    *(v331) = *(v331) + 1;\n
    if (v242 <= *(v243) && !(!v242))\n
        goto LABEL_433249;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_433249:\n
    v241 = cgc_calloc(v242);\n
    if (!v241)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v241, *(v244), v242);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v332 = v244;\n
    *(v332) = &(*(v332))[v242];\n
    v333 = v243;\n
    *(v333) = *(v333) - v242;\n
    cgc_checkheap();\n
    cgc_free(v241);\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v190 = *(&*(v192));\n
    v334 = v191;\n
    *(v334) = *(v334) - 2;\n
    v335 = v192;\n
    *(v335) = *(v335) + 2;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_4333f8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4333f8:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v336 = v191;\n
    *(v336) = *(v336) - v190;\n
    v337 = v192;\n
    *(v337) = &(*(v337))[v190];\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v186 = *(&*(v188));\n
    v338 = v187;\n
    *(v338) = *(v338) - 2;\n
    v339 = v188;\n
    *(v339) = *(v339) + 2;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_4335c8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4335c8:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v340 = v187;\n
    *(v340) = *(v340) - v186;\n
    v341 = v188;\n
    *(v341) = &(*(v341))[v186];\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 21);\n
    if (*(v127) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v126) = *(&*(v128));\n
    cgc_uint2str(&v125, 21, *(&v126));\n
    v11 = &v125;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v342 = v127;\n
    *(v342) = *(v342) - 8;\n
    v343 = v128;\n
    *(v343) = *(v343) + 8;\n
    v206 = a0;\n
    v205 = a1;\n
    *(&v203) = *(v206);\n
    memset(&v202, 0, 12);\n
    if (*(v205) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v203[0] << 24))\n
    {\n
        v10 = 0;\n
        if ((v203[1] << 16))\n
        {\n
            v10 = 0;\n
            if ((v203[2] << 8))\n
                v10 = v203[3];\n
        }\n
    }\n
    v204 = v10 & 1;\n
    cgc_uint2str(&v202, 12, v204);\n
    v9 = &v202;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v202)) < 0)\n
        cgc__terminate(1);\n
    v344 = v205;\n
    *(v344) = *(v344) - 4;\n
    v345 = v206;\n
    *(v345) = *(v345) + 4;\n
    v156 = a0;\n
    v155 = a1;\n
    memset(&v153, 0, 12);\n
    if (*(v155) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = *(&*(v156));\n
    cgc_uint2str(&v153, 12, v154);\n
    v8 = &v153;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v153)) < 0)\n
        cgc__terminate(1);\n
    v346 = v155;\n
    *(v346) = *(v346) - 4;\n
    v347 = v156;\n
    *(v347) = *(v347) + 4;\n
    v184 = a0;\n
    v183 = a1;\n
    if (*(v183) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v182 = *(&*(v184));\n
    v348 = v183;\n
    *(v348) = *(v348) - 2;\n
    v349 = v184;\n
    *(v349) = *(v349) + 2;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_433b30;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_433b30:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v350 = v183;\n
    *(v350) = *(v350) - v182;\n
    v351 = v184;\n
    *(v351) = &(*(v351))[v182];\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v240 = a0;\n
    v239 = a1;\n
    if (*(v239) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v238 = *(v240)->field_0;\n
    v352 = v239;\n
    *(v352) = *(v352) - 1;\n
    v353 = v240;\n
    *(v353) = *(v353) + 1;\n
    if (v238 <= *(v239) && !(!v238))\n
        goto LABEL_433ce0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_433ce0:\n
    v237 = cgc_calloc(v238);\n
    if (!v237)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v237, *(v240), v238);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v354 = v240;\n
    *(v354) = &(*(v354))[v238];\n
    v355 = v239;\n
    *(v355) = *(v355) - v238;\n
    cgc_checkheap();\n
    cgc_free(v237);\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 4);\n
    if (*(v108) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(v109)->field_0;\n
    cgc_uint2str(&v106, 4, v107);\n
    v7 = &v106;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v356 = v108;\n
    *(v356) = *(v356) - 1;\n
    v357 = v109;\n
    *(v357) = *(v357) + 1;\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = *(&*(v168));\n
    v358 = v167;\n
    *(v358) = *(v358) - 2;\n
    v359 = v168;\n
    *(v359) = *(v359) + 2;\n
    if (v166 <= *(v167) && !(!v166))\n
        goto LABEL_433f91;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_433f91:\n
    v165 = cgc_calloc(v166);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v165, *(v168), v166);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v360 = v167;\n
    *(v360) = *(v360) - v166;\n
    v361 = v168;\n
    *(v361) = &(*(v361))[v166];\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    v236 = a0;\n
    v235 = a1;\n
    if (*(v235) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v234 = *(v236)->field_0;\n
    v362 = v235;\n
    *(v362) = *(v362) - 1;\n
    v363 = v236;\n
    *(v363) = *(v363) + 1;\n
    if (v234 <= *(v235) && !(!v234))\n
        goto LABEL_434141;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_434141:\n
    v233 = cgc_calloc(v234);\n
    if (!v233)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v233, *(v236), v234);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v364 = v236;\n
    *(v364) = &(*(v364))[v234];\n
    v365 = v235;\n
    *(v365) = *(v365) - v234;\n
    cgc_checkheap();\n
    cgc_free(v233);\n
    v164 = a0;\n
    v163 = a1;\n
    if (*(v163) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = *(&*(v164));\n
    v366 = v163;\n
    *(v366) = *(v366) - 2;\n
    v367 = v164;\n
    *(v367) = *(v367) + 2;\n
    if (v162 <= *(v163) && !(!v162))\n
        goto LABEL_4342f0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4342f0:\n
    v161 = cgc_calloc(v162);\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v161, *(v164), v162);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v368 = v163;\n
    *(v368) = *(v368) - v162;\n
    v369 = v164;\n
    *(v369) = &(*(v369))[v162];\n
    cgc_checkheap();\n
    cgc_free(v161);\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    v370 = v65;\n
    *(v370) = *(v370) - 1;\n
    v371 = v66;\n
    *(v371) = *(v371) + 1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_4344be;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4344be:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v372 = v66;\n
    *(v372) = &(*(v372))[v64];\n
    v373 = v65;\n
    *(v373) = *(v373) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v73 = a0;\n
    v72 = a1;\n
    v71 = &*(v73)->field_0;\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v374 = v72;\n
    *(v374) = *(v374) - 1;\n
    v375 = v73;\n
    *(v375) = *(v375) + 1;\n
    v40 = *(v71);\n
    v220 = a0;\n
    v219 = a1;\n
    if (*(v219) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v219) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v219);\n
    v218 = v6;\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v217 = cgc_calloc(134);\n
    if (!v217)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v217, \"Str: \");\n
    cgc_strncpy(v217 + 5, *(v220), v218);\n
    v377 = v220;\n
    *(v377) = &(*(v377))[4 + cgc_strlen(v217)];\n
    v379 = v219;\n
    *(v379) = *(v379) - (cgc_strlen(v217) + -4);\n
    cgc_checkheap();\n
    cgc_free(v217);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 6);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 6, v99);\n
    v5 = &v98;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v380 = v100;\n
    *(v380) = *(v380) - 2;\n
    v381 = v101;\n
    *(v381) = *(v381) + 2;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 21);\n
    if (*(v123) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v122) = *(&*(v124));\n
    cgc_uint2str(&v121, 21, *(&v122));\n
    v4 = &v121;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v382 = v123;\n
    *(v382) = *(v382) - 8;\n
    v383 = v124;\n
    *(v383) = *(v383) + 8;\n
    v144 = a0;\n
    v143 = a1;\n
    memset(&v141, 0, 12);\n
    if (*(v143) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    cgc_uint2str(&v141, 12, v142);\n
    v3 = &v141;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v384 = v143;\n
    *(v384) = *(v384) - 4;\n
    v385 = v144;\n
    *(v385) = *(v385) + 4;\n
    v232 = a0;\n
    v231 = a1;\n
    if (*(v231) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v230 = *(v232)->field_0;\n
    v386 = v231;\n
    *(v386) = *(v386) - 1;\n
    v387 = v232;\n
    *(v387) = *(v387) + 1;\n
    if (v230 <= *(v231) && !(!v230))\n
        goto LABEL_434c33;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_434c33:\n
    v229 = cgc_calloc(v230);\n
    if (!v229)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v229, *(v232), v230);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v388 = v232;\n
    *(v388) = &(*(v388))[v230];\n
    v389 = v231;\n
    *(v389) = *(v389) - v230;\n
    cgc_checkheap();\n
    cgc_free(v229);\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v76) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v76);\n
    v75 = v2;\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = cgc_calloc(134);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v74, \"Str: \");\n
    cgc_strncpy(v74 + 5, *(v77), v75);\n
    v391 = v77;\n
    *(v391) = &(*(v391))[4 + cgc_strlen(v74)];\n
    v393 = v76;\n
    *(v393) = *(v393) - (cgc_strlen(v74) + -4);\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v201 = a0;\n
    v200 = a1;\n
    *(&v198) = *(v201);\n
    memset(&v197, 0, 12);\n
    if (*(v200) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v198[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v198[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v198[2] << 8))\n
                v1 = v198[3];\n
        }\n
    }\n
    v199 = v1 & 1;\n
    cgc_uint2str(&v197, 12, v199);\n
    v0 = &v197;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v197)) < 0)\n
        cgc__terminate(1);\n
    v394 = v200;\n
    *(v394) = *(v394) - 4;\n
    v395 = v201;\n
    *(v395) = *(v395) + 4;\n
    v41 ^= cgc__cookie;\n
    if (v41)\n
        cgc___stack_cookie_fail();\n
    v396 = a1;\n
    if (*(a1) > 0 && v40 >= 0)\n
    {\n
        v396 = v40;\n
        if (v396 < 1)\n
            v396 = (&v42)[v40](a0, a1);\n
    }\n
    return v396;\n
}\n
", "4411652:sub_435104": null, "4411664:cgc_process_llamapycnite": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamapycnite(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x364]\n
    struct_1 *v1;  // [bp-0x360]\n
    char v2;  // [bp-0x351]\n
    struct_1 *v3;  // [bp-0x350]\n
    char v4;  // [bp-0x341]\n
    struct_1 *v5;  // [bp-0x340]\n
    struct_1 *v6;  // [bp-0x338]\n
    struct_1 *v7;  // [bp-0x330]\n
    struct_1 *v8;  // [bp-0x328]\n
    char v9;  // [bp-0x319]\n
    struct_1 *v10;  // [bp-0x318]\n
    char v11;  // [bp-0x309]\n
    struct_1 *v12;  // [bp-0x308]\n
    char v13;  // [bp-0x2f9]\n
    struct_1 *v14;  // [bp-0x2f8]\n
    struct_1 *v15;  // [bp-0x2f0]\n
    unsigned int v16;  // [bp-0x2e8]\n
    unsigned int v17;  // [bp-0x2e4]\n
    char v18;  // [bp-0x2e0]\n
    char v19;  // [bp-0x2c6]\n
    char v20[2];  // [bp-0x2c0]\n
    unsigned short v21;  // [bp-0x2b2]\n
    unsigned int *v22;  // [bp-0x2b0]\n
    struct struct_0 **v23;  // [bp-0x2a8]\n
    char v24;  // [bp-0x29e]\n
    char v25[2];  // [bp-0x298]\n
    unsigned short v26;  // [bp-0x28a]\n
    unsigned int *v27;  // [bp-0x288]\n
    struct struct_0 **v28;  // [bp-0x280]\n
    char v29;  // [bp-0x278]\n
    char v30[8];  // [bp-0x258]\n
    unsigned int v31;  // [bp-0x250]\n
    unsigned int *v32;  // [bp-0x248]\n
    struct struct_0 **v33;  // [bp-0x240]\n
    char v34;  // [bp-0x238]\n
    char *v35;  // [bp-0x218]\n
    unsigned int v36;  // [bp-0x210]\n
    unsigned int *v37;  // [bp-0x208]\n
    struct struct_0 **v38;  // [bp-0x200]\n
    unsigned long v39;  // [bp-0x1f8]\n
    char v40;  // [bp-0x1e9]\n
    unsigned int *v41;  // [bp-0x1e8]\n
    struct struct_0 **v42;  // [bp-0x1e0]\n
    char v43;  // [bp-0x1d8]\n
    unsigned int v44;  // [bp-0x1cc]\n
    unsigned int *v45;  // [bp-0x1c8]\n
    struct struct_0 **v46;  // [bp-0x1c0]\n
    char v47;  // [bp-0x1b8]\n
    unsigned int v48;  // [bp-0x1ac]\n
    unsigned int *v49;  // [bp-0x1a8]\n
    struct struct_0 **v50;  // [bp-0x1a0]\n
    char v51;  // [bp-0x198]\n
    unsigned int v52;  // [bp-0x18c]\n
    unsigned int *v53;  // [bp-0x188]\n
    struct struct_0 **v54;  // [bp-0x180]\n
    unsigned long v55;  // [bp-0x178]\n
    unsigned short v56;  // [bp-0x16a]\n
    unsigned int *v57;  // [bp-0x168]\n
    struct struct_0 **v58;  // [bp-0x160]\n
    unsigned long v59;  // [bp-0x158]\n
    unsigned short v60;  // [bp-0x14a]\n
    unsigned int *v61;  // [bp-0x148]\n
    struct struct_0 **v62;  // [bp-0x140]\n
    unsigned long v63;  // [bp-0x138]\n
    unsigned short v64;  // [bp-0x12a]\n
    unsigned int *v65;  // [bp-0x128]\n
    struct struct_0 **v66;  // [bp-0x120]\n
    unsigned long v67;  // [bp-0x118]\n
    unsigned short v68;  // [bp-0x10a]\n
    unsigned int *v69;  // [bp-0x108]\n
    struct struct_0 **v70;  // [bp-0x100]\n
    unsigned long v71;  // [bp-0xf8]\n
    unsigned short v72;  // [bp-0xea]\n
    unsigned int *v73;  // [bp-0xe8]\n
    struct struct_0 **v74;  // [bp-0xe0]\n
    char v75;  // [bp-0xd4]\n
    char *v76;  // [bp-0xc8]\n
    unsigned int v77;  // [bp-0xbc]\n
    unsigned int *v78;  // [bp-0xb8]\n
    struct struct_0 **v79;  // [bp-0xb0]\n
    char *v80;  // [bp-0xa8]\n
    unsigned int v81;  // [bp-0x9c]\n
    unsigned int *v82;  // [bp-0x98]\n
    struct struct_0 **v83;  // [bp-0x90]\n
    char v84;  // [bp-0x88]\n
    unsigned int v85;  // [bp-0x70]\n
    unsigned int *v86;  // [bp-0x68]\n
    struct struct_0 **v87;  // [bp-0x60]\n
    char v88;  // [bp-0x58]\n
    unsigned int v89;  // [bp-0x40]\n
    unsigned int *v90;  // [bp-0x38]\n
    struct struct_0 **v91;  // [bp-0x30]\n
    unsigned long v92;  // [bp-0x28]\n
    char v93;  // [bp-0x19]\n
    unsigned int *v94;  // [bp-0x18]\n
    struct struct_0 **v95;  // [bp-0x10]\n
    unsigned int *v97;  // rax\n
    struct struct_0 **v98;  // rax\n
    unsigned int *v99;  // rax\n
    struct struct_0 **v100;  // rax\n
    unsigned int *v101;  // rax\n
    struct struct_0 **v102;  // rax\n
    unsigned int *v103;  // rax\n
    struct struct_0 **v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v113;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    struct struct_0 **v135;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v148;  // rax\n
    unsigned int *v149;  // rax, Other Possible Types: unsigned long\n
\n
    v17 = cgc__cookie;\n
    v16 = -1;\n
    if (cgc_sendline(1, \"===llamapycnite===\", 18) < 0)\n
        cgc__terminate(1);\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(&*(v66));\n
    v97 = v65;\n
    *(v97) = *(v97) - 2;\n
    v98 = v66;\n
    *(v98) = *(v98) + 2;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_43525c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43525c:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v99 = v65;\n
    *(v99) = *(v99) - v64;\n
    v100 = v66;\n
    *(v100) = &(*(v100))[v64];\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(&*(v62));\n
    v101 = v61;\n
    *(v101) = *(v101) - 2;\n
    v102 = v62;\n
    *(v102) = *(v102) + 2;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_43542c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43542c:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v103 = v61;\n
    *(v103) = *(v103) - v60;\n
    v104 = v62;\n
    *(v104) = &(*(v104))[v60];\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v74 = a0;\n
    v73 = a1;\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    v105 = v73;\n
    *(v105) = *(v105) - 2;\n
    v106 = v74;\n
    *(v106) = *(v106) + 2;\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_4355fc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4355fc:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v107 = v73;\n
    *(v107) = *(v107) - v72;\n
    v108 = v74;\n
    *(v108) = &(*(v108))[v72];\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v91 = a0;\n
    v90 = a1;\n
    memset(&v88, 0, 21);\n
    if (*(v90) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v89) = *(&*(v91));\n
    cgc_uint2str(&v88, 21, *(&v89));\n
    v15 = &v88;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v88)) < 0)\n
        cgc__terminate(1);\n
    v109 = v90;\n
    *(v109) = *(v109) - 8;\n
    v110 = v91;\n
    *(v110) = *(v110) + 8;\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(&*(v54));\n
    cgc_uint2str(&v51, 12, v52);\n
    v14 = &v51;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v111 = v53;\n
    *(v111) = *(v111) - 4;\n
    v112 = v54;\n
    *(v112) = *(v112) + 4;\n
    v28 = a0;\n
    v27 = a1;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v25[0] << 8))\n
        v13 = v25[1];\n
    v26 = v13 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v12 = &v24;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v113 = v27;\n
    *(v113) = *(v113) - 2;\n
    v114 = v28;\n
    *(v114) = *(v114) + 2;\n
    v23 = a0;\n
    v22 = a1;\n
    *(&v20) = *(v23);\n
    memset(&v19, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if ((v20[0] << 8))\n
        v11 = v20[1];\n
    v21 = v11 & 1;\n
    cgc_uint2str(&v19, 6, v21);\n
    v10 = &v19;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v19)) < 0)\n
        cgc__terminate(1);\n
    v115 = v22;\n
    *(v115) = *(v115) - 2;\n
    v116 = v23;\n
    *(v116) = *(v116) + 2;\n
    v58 = a0;\n
    v57 = a1;\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(&*(v58));\n
    v117 = v57;\n
    *(v117) = *(v117) - 2;\n
    v118 = v58;\n
    *(v118) = *(v118) + 2;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_435c3f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_435c3f:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v119 = v57;\n
    *(v119) = *(v119) - v56;\n
    v120 = v58;\n
    *(v120) = &(*(v120))[v56];\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v38 = a0;\n
    v37 = a1;\n
    v35 = &*(v38)->field_0;\n
    memset(&v34, 0, 21);\n
    if (*(v37) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (*(v35) << 56)\n
    {\n
        v9 = 0;\n
        if (v35[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v35[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v35[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v35[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v35[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v35[6] << 8))\n
                                v9 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v36) = v9 & 1;\n
    cgc_uint2str(&v34, 21, *(&v36));\n
    v8 = &v34;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v121 = v37;\n
    *(v121) = *(v121) - 8;\n
    v122 = v38;\n
    *(v122) = *(v122) + 8;\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 12);\n
    if (*(v49) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(&*(v50));\n
    cgc_uint2str(&v47, 12, v48);\n
    v7 = &v47;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v123 = v49;\n
    *(v123) = *(v123) - 4;\n
    v124 = v50;\n
    *(v124) = *(v124) + 4;\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(&*(v70));\n
    v125 = v69;\n
    *(v125) = *(v125) - 2;\n
    v126 = v70;\n
    *(v126) = *(v126) + 2;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_436126;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_436126:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v127 = v69;\n
    *(v127) = *(v127) - v68;\n
    v128 = v70;\n
    *(v128) = &(*(v128))[v68];\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 12);\n
    if (*(v45) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = *(&*(v46));\n
    cgc_uint2str(&v43, 12, v44);\n
    v6 = &v43;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v129 = v45;\n
    *(v129) = *(v129) - 4;\n
    v130 = v46;\n
    *(v130) = *(v130) + 4;\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v85) = *(&*(v87));\n
    cgc_uint2str(&v84, 21, *(&v85));\n
    v5 = &v84;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v131 = v86;\n
    *(v131) = *(v131) - 8;\n
    v132 = v87;\n
    *(v132) = *(v132) + 8;\n
    v95 = a0;\n
    v94 = a1;\n
    if (*(v94) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(v95)->field_0;\n
    v133 = v94;\n
    *(v133) = *(v133) - 1;\n
    v134 = v95;\n
    *(v134) = *(v134) + 1;\n
    if (v93 <= *(v94) && !(!v93))\n
        goto LABEL_4364b9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4364b9:\n
    v92 = cgc_calloc(v93);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v92, *(v95), v93);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v135 = v95;\n
    *(v135) = &(*(v135))[v93];\n
    v136 = v94;\n
    *(v136) = *(v136) - v93;\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    v79 = a0;\n
    v78 = a1;\n
    v76 = &*(v79)->field_0;\n
    memset(&v75, 0, 12);\n
    if (*(v78) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((*(v76) << 24))\n
    {\n
        v4 = 0;\n
        if ((v76[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v76[2] << 8))\n
                v4 = v76[3];\n
        }\n
    }\n
    v77 = v4 & 1;\n
    cgc_uint2str(&v75, 12, v77);\n
    v3 = &v75;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v137 = v78;\n
    *(v137) = *(v137) - 4;\n
    v138 = v79;\n
    *(v138) = *(v138) + 4;\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30[0]) = *(v33);\n
    memset(&v29, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if (v30[0] << 56)\n
    {\n
        v2 = 0;\n
        if (v30[1] << 48)\n
        {\n
            v2 = 0;\n
            if (v30[2] << 40)\n
            {\n
                v2 = 0;\n
                if (v30[3] << 32)\n
                {\n
                    v2 = 0;\n
                    if ((v30[4] << 24))\n
                    {\n
                        v2 = 0;\n
                        if ((v30[5] << 16))\n
                        {\n
                            v2 = 0;\n
                            if ((v30[6] << 8))\n
                                v2 = v30[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v31) = v2 & 1;\n
    cgc_uint2str(&v29, 21, *(&v31));\n
    v1 = &v29;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v139 = v32;\n
    *(v139) = *(v139) - 8;\n
    v140 = v33;\n
    *(v140) = *(v140) + 8;\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v82) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v82);\n
    v81 = v0;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v80, \"Str: \");\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v142 = v83;\n
    *(v142) = &(*(v142))[4 + cgc_strlen(v80)];\n
    v144 = v82;\n
    *(v144) = *(v144) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = *(v42)->field_0;\n
    v145 = v41;\n
    *(v145) = *(v145) - 1;\n
    v146 = v42;\n
    *(v146) = *(v146) + 1;\n
    if (v40 <= *(v41) && !(!v40))\n
        goto LABEL_436bf3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_436bf3:\n
    v39 = cgc_calloc(v40);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v39, *(v42), v40);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v147 = v42;\n
    *(v147) = &(*(v147))[v40];\n
    v148 = v41;\n
    *(v148) = *(v148) - v40;\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    v17 ^= cgc__cookie;\n
    if (v17)\n
        cgc___stack_cookie_fail();\n
    v149 = a1;\n
    if (*(a1) > 0 && v16 >= 0)\n
    {\n
        v149 = v16;\n
        if (v149 < 0)\n
            v149 = *(&(&v18)[8 * v16])(a0, a1);\n
    }\n
    return v149;\n
}\n
", "4418893:sub_436d4d": null, "4418896:cgc_process_llamaatophan": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaatophan(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x618]\n
    struct_1 *v1;  // [bp-0x610]\n
    struct_1 *v2;  // [bp-0x608]\n
    struct_1 *v3;  // [bp-0x600]\n
    struct_1 *v4;  // [bp-0x5f8]\n
    struct_1 *v5;  // [bp-0x5f0]\n
    struct_1 *v6;  // [bp-0x5e8]\n
    struct_1 *v7;  // [bp-0x5e0]\n
    char v8;  // [bp-0x5d1]\n
    struct_1 *v9;  // [bp-0x5d0]\n
    struct_1 *v10;  // [bp-0x5c8]\n
    struct_1 *v11;  // [bp-0x5c0]\n
    struct_1 *v12;  // [bp-0x5b8]\n
    char v13;  // [bp-0x5a9]\n
    struct_1 *v14;  // [bp-0x5a8]\n
    unsigned int v15;  // [bp-0x59c]\n
    struct_1 *v16;  // [bp-0x598]\n
    char v17;  // [bp-0x589]\n
    struct_1 *v18;  // [bp-0x588]\n
    unsigned int v19;  // [bp-0x580]\n
    unsigned int v20;  // [bp-0x57c]\n
    struct_1 *v21;  // [bp-0x578]\n
    struct_1 *v22;  // [bp-0x570]\n
    char v23;  // [bp-0x561]\n
    struct_1 *v24;  // [bp-0x560]\n
    struct_1 *v25;  // [bp-0x558]\n
    char v26;  // [bp-0x549]\n
    struct_1 *v27;  // [bp-0x548]\n
    struct_1 *v28;  // [bp-0x540]\n
    struct_1 *v29;  // [bp-0x538]\n
    struct_1 *v30;  // [bp-0x530]\n
    struct_1 *v31;  // [bp-0x528]\n
    char v32;  // [bp-0x519]\n
    unsigned int v33;  // [bp-0x518]\n
    unsigned int v34;  // [bp-0x514]\n
    unsigned int v35;  // [bp-0x510]\n
    unsigned int v36;  // [bp-0x50c]\n
    char v37;  // [bp-0x508]\n
    char v38;  // [bp-0x4ee]\n
    char v39[2];  // [bp-0x4e8]\n
    unsigned short v40;  // [bp-0x4da]\n
    unsigned int *v41;  // [bp-0x4d8]\n
    struct struct_0 **v42;  // [bp-0x4d0]\n
    char v43;  // [bp-0x4c6]\n
    char v44[2];  // [bp-0x4c0]\n
    unsigned short v45;  // [bp-0x4b2]\n
    unsigned int *v46;  // [bp-0x4b0]\n
    struct struct_0 **v47;  // [bp-0x4a8]\n
    char v48;  // [bp-0x49e]\n
    char *v49;  // [bp-0x498]\n
    unsigned short v50;  // [bp-0x48a]\n
    unsigned int *v51;  // [bp-0x488]\n
    struct struct_0 **v52;  // [bp-0x480]\n
    char v53;  // [bp-0x478]\n
    char *v54;  // [bp-0x460]\n
    unsigned int v55;  // [bp-0x458]\n
    unsigned int *v56;  // [bp-0x450]\n
    struct struct_0 **v57;  // [bp-0x448]\n
    unsigned long v58;  // [bp-0x440]\n
    char v59;  // [bp-0x431]\n
    unsigned int *v60;  // [bp-0x430]\n
    struct struct_0 **v61;  // [bp-0x428]\n
    unsigned long v62;  // [bp-0x420]\n
    char v63;  // [bp-0x411]\n
    unsigned int *v64;  // [bp-0x410]\n
    struct struct_0 **v65;  // [bp-0x408]\n
    char *v66;  // [bp-0x400]\n
    unsigned int v67;  // [bp-0x3f4]\n
    unsigned int *v68;  // [bp-0x3f0]\n
    struct struct_0 **v69;  // [bp-0x3e8]\n
    char v70;  // [bp-0x3e0]\n
    unsigned short v71;  // [bp-0x3da]\n
    unsigned int *v72;  // [bp-0x3d8]\n
    struct struct_0 **v73;  // [bp-0x3d0]\n
    char v74;  // [bp-0x3c8]\n
    unsigned short v75;  // [bp-0x3c2]\n
    unsigned int *v76;  // [bp-0x3c0]\n
    struct struct_0 **v77;  // [bp-0x3b8]\n
    char v78;  // [bp-0x3b0]\n
    unsigned short v79;  // [bp-0x3aa]\n
    unsigned int *v80;  // [bp-0x3a8]\n
    struct struct_0 **v81;  // [bp-0x3a0]\n
    char v82;  // [bp-0x398]\n
    unsigned short v83;  // [bp-0x392]\n
    unsigned int *v84;  // [bp-0x390]\n
    struct struct_0 **v85;  // [bp-0x388]\n
    char v86;  // [bp-0x37d]\n
    char v87;  // [bp-0x379]\n
    unsigned int *v88;  // [bp-0x378]\n
    struct struct_0 **v89;  // [bp-0x370]\n
    char v90;  // [bp-0x365]\n
    char v91;  // [bp-0x361]\n
    unsigned int *v92;  // [bp-0x360]\n
    struct struct_0 **v93;  // [bp-0x358]\n
    char v94;  // [bp-0x34d]\n
    char v95;  // [bp-0x349]\n
    unsigned int *v96;  // [bp-0x348]\n
    struct struct_0 **v97;  // [bp-0x340]\n
    char v98;  // [bp-0x338]\n
    unsigned int v99;  // [bp-0x320]\n
    unsigned int *v100;  // [bp-0x318]\n
    struct struct_0 **v101;  // [bp-0x310]\n
    char v102;  // [bp-0x308]\n
    unsigned int v103;  // [bp-0x2f0]\n
    unsigned int *v104;  // [bp-0x2e8]\n
    struct struct_0 **v105;  // [bp-0x2e0]\n
    char v106;  // [bp-0x2d8]\n
    unsigned int v107;  // [bp-0x2c0]\n
    unsigned int *v108;  // [bp-0x2b8]\n
    struct struct_0 **v109;  // [bp-0x2b0]\n
    char v110;  // [bp-0x2a8]\n
    unsigned int v111;  // [bp-0x29c]\n
    unsigned int *v112;  // [bp-0x298]\n
    struct struct_0 **v113;  // [bp-0x290]\n
    char v114;  // [bp-0x288]\n
    unsigned int v115;  // [bp-0x27c]\n
    unsigned int *v116;  // [bp-0x278]\n
    struct struct_0 **v117;  // [bp-0x270]\n
    char v118;  // [bp-0x268]\n
    unsigned int v119;  // [bp-0x25c]\n
    unsigned int *v120;  // [bp-0x258]\n
    struct struct_0 **v121;  // [bp-0x250]\n
    char v122;  // [bp-0x248]\n
    unsigned int v123;  // [bp-0x23c]\n
    unsigned int *v124;  // [bp-0x238]\n
    struct struct_0 **v125;  // [bp-0x230]\n
    char v126;  // [bp-0x228]\n
    unsigned int v127;  // [bp-0x21c]\n
    unsigned int *v128;  // [bp-0x218]\n
    struct struct_0 **v129;  // [bp-0x210]\n
    char v130;  // [bp-0x208]\n
    unsigned int v131;  // [bp-0x1fc]\n
    unsigned int *v132;  // [bp-0x1f8]\n
    struct struct_0 **v133;  // [bp-0x1f0]\n
    unsigned long v134;  // [bp-0x1e8]\n
    unsigned short v135;  // [bp-0x1da]\n
    unsigned int *v136;  // [bp-0x1d8]\n
    struct struct_0 **v137;  // [bp-0x1d0]\n
    unsigned long v138;  // [bp-0x1c8]\n
    unsigned short v139;  // [bp-0x1ba]\n
    unsigned int *v140;  // [bp-0x1b8]\n
    struct struct_0 **v141;  // [bp-0x1b0]\n
    char v142;  // [bp-0x1a4]\n
    char v143[4];  // [bp-0x198]\n
    unsigned int v144;  // [bp-0x18c]\n
    unsigned int *v145;  // [bp-0x188]\n
    struct struct_0 **v146;  // [bp-0x180]\n
    char v147;  // [bp-0x174]\n
    char v148[4];  // [bp-0x168]\n
    unsigned int v149;  // [bp-0x15c]\n
    unsigned int *v150;  // [bp-0x158]\n
    struct struct_0 **v151;  // [bp-0x150]\n
    char *v152;  // [bp-0x148]\n
    unsigned int v153;  // [bp-0x13c]\n
    unsigned int *v154;  // [bp-0x138]\n
    struct struct_0 **v155;  // [bp-0x130]\n
    char *v156;  // [bp-0x128]\n
    unsigned int v157;  // [bp-0x11c]\n
    unsigned int *v158;  // [bp-0x118]\n
    struct struct_0 **v159;  // [bp-0x110]\n
    char *v160;  // [bp-0x108]\n
    unsigned int v161;  // [bp-0xfc]\n
    unsigned int *v162;  // [bp-0xf8]\n
    struct struct_0 **v163;  // [bp-0xf0]\n
    char *v164;  // [bp-0xe8]\n
    unsigned int v165;  // [bp-0xdc]\n
    unsigned int *v166;  // [bp-0xd8]\n
    struct struct_0 **v167;  // [bp-0xd0]\n
    char v168;  // [bp-0xc8]\n
    unsigned int v169;  // [bp-0xb0]\n
    unsigned int *v170;  // [bp-0xa8]\n
    struct struct_0 **v171;  // [bp-0xa0]\n
    char v172;  // [bp-0x98]\n
    unsigned int v173;  // [bp-0x80]\n
    unsigned int *v174;  // [bp-0x78]\n
    struct struct_0 **v175;  // [bp-0x70]\n
    unsigned long v176;  // [bp-0x68]\n
    char v177;  // [bp-0x59]\n
    unsigned int *v178;  // [bp-0x58]\n
    struct struct_0 **v179;  // [bp-0x50]\n
    unsigned long v180;  // [bp-0x48]\n
    char v181;  // [bp-0x39]\n
    unsigned int *v182;  // [bp-0x38]\n
    struct struct_0 **v183;  // [bp-0x30]\n
    unsigned long v184;  // [bp-0x28]\n
    char v185;  // [bp-0x19]\n
    unsigned int *v186;  // [bp-0x18]\n
    struct struct_0 **v187;  // [bp-0x10]\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_0 **v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_0 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_0 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_0 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_0 **v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    unsigned int *v273;  // rax\n
    struct struct_0 **v274;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_0 **v278;  // rax\n
    unsigned int *v279;  // rax\n
    struct struct_0 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_0 **v282;  // rax\n
    unsigned int *v283;  // rax\n
    struct struct_0 **v284;  // rax\n
    unsigned int *v285;  // rax, Other Possible Types: unsigned long\n
\n
    v36 = cgc__cookie;\n
    v35 = -1;\n
    if (cgc_sendline(1, \"===llamaatophan===\", 18) < 0)\n
        cgc__terminate(1);\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v166) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v166);\n
    v165 = v34;\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = cgc_calloc(134);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v164, \"Str: \");\n
    cgc_strncpy(v164 + 5, *(v167), v165);\n
    v190 = v167;\n
    *(v190) = &(*(v190))[4 + cgc_strlen(v164)];\n
    v192 = v166;\n
    *(v192) = *(v192) - (cgc_strlen(v164) + -4);\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v162) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v162);\n
    v161 = v33;\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v160 = cgc_calloc(134);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v160, \"Str: \");\n
    cgc_strncpy(v160 + 5, *(v163), v161);\n
    v194 = v163;\n
    *(v194) = &(*(v194))[4 + cgc_strlen(v160)];\n
    v196 = v162;\n
    *(v196) = *(v196) - (cgc_strlen(v160) + -4);\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    v49 = &*(v52)->field_0;\n
    memset(&v48, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if ((*(v49) << 8))\n
        v32 = v49[1];\n
    v50 = v32 & 1;\n
    cgc_uint2str(&v48, 6, v50);\n
    v31 = &v48;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v197 = v51;\n
    *(v197) = *(v197) - 2;\n
    v198 = v52;\n
    *(v198) = *(v198) + 2;\n
    v125 = a0;\n
    v124 = a1;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    cgc_uint2str(&v122, 12, v123);\n
    v30 = &v122;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v122)) < 0)\n
        cgc__terminate(1);\n
    v199 = v124;\n
    *(v199) = *(v199) - 4;\n
    v200 = v125;\n
    *(v200) = *(v200) + 4;\n
    v187 = a0;\n
    v186 = a1;\n
    if (*(v186) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = *(v187)->field_0;\n
    v201 = v186;\n
    *(v201) = *(v201) - 1;\n
    v202 = v187;\n
    *(v202) = *(v202) + 1;\n
    if (v185 <= *(v186) && !(!v185))\n
        goto LABEL_4374ab;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4374ab:\n
    v184 = cgc_calloc(v185);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v184, *(v187), v185);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v203 = v187;\n
    *(v203) = &(*(v203))[v185];\n
    v204 = v186;\n
    *(v204) = *(v204) - v185;\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 6);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    cgc_uint2str(&v82, 6, v83);\n
    v29 = &v82;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v205 = v84;\n
    *(v205) = *(v205) - 2;\n
    v206 = v85;\n
    *(v206) = *(v206) + 2;\n
    v121 = a0;\n
    v120 = a1;\n
    memset(&v118, 0, 12);\n
    if (*(v120) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    cgc_uint2str(&v118, 12, v119);\n
    v28 = &v118;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v207 = v120;\n
    *(v207) = *(v207) - 4;\n
    v208 = v121;\n
    *(v208) = *(v208) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    cgc_uint2str(&v78, 6, v79);\n
    v27 = &v78;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v209 = v80;\n
    *(v209) = *(v209) - 2;\n
    v210 = v81;\n
    *(v210) = *(v210) + 2;\n
    v183 = a0;\n
    v182 = a1;\n
    if (*(v182) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v181 = *(v183)->field_0;\n
    v211 = v182;\n
    *(v211) = *(v211) - 1;\n
    v212 = v183;\n
    *(v212) = *(v212) + 1;\n
    if (v181 <= *(v182) && !(!v181))\n
        goto LABEL_437943;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_437943:\n
    v180 = cgc_calloc(v181);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v180, *(v183), v181);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v213 = v183;\n
    *(v213) = &(*(v213))[v181];\n
    v214 = v182;\n
    *(v214) = *(v214) - v181;\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44) = *(v47);\n
    memset(&v43, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if ((v44[0] << 8))\n
        v26 = v44[1];\n
    v45 = v26 & 1;\n
    cgc_uint2str(&v43, 6, v45);\n
    v25 = &v43;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v215 = v46;\n
    *(v215) = *(v215) - 2;\n
    v216 = v47;\n
    *(v216) = *(v216) + 2;\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 21);\n
    if (*(v108) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v107) = *(&*(v109));\n
    cgc_uint2str(&v106, 21, *(&v107));\n
    v24 = &v106;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v217 = v108;\n
    *(v217) = *(v217) - 8;\n
    v218 = v109;\n
    *(v218) = *(v218) + 8;\n
    v57 = a0;\n
    v56 = a1;\n
    v54 = &*(v57)->field_0;\n
    memset(&v53, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if (*(v54) << 56)\n
    {\n
        v23 = 0;\n
        if (v54[1] << 48)\n
        {\n
            v23 = 0;\n
            if (v54[2] << 40)\n
            {\n
                v23 = 0;\n
                if (v54[3] << 32)\n
                {\n
                    v23 = 0;\n
                    if ((v54[4] << 24))\n
                    {\n
                        v23 = 0;\n
                        if ((v54[5] << 16))\n
                        {\n
                            v23 = 0;\n
                            if ((v54[6] << 8))\n
                                v23 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v55) = v23 & 1;\n
    cgc_uint2str(&v53, 21, *(&v55));\n
    v22 = &v53;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v219 = v56;\n
    *(v219) = *(v219) - 8;\n
    v220 = v57;\n
    *(v220) = *(v220) + 8;\n
    v65 = a0;\n
    v64 = a1;\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(v65)->field_0;\n
    v221 = v64;\n
    *(v221) = *(v221) - 1;\n
    v222 = v65;\n
    *(v222) = *(v222) + 1;\n
    if (v63 <= *(v64) && !(!v63))\n
        goto LABEL_437f58;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_437f58:\n
    v62 = cgc_calloc(v63);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v62, *(v65), v63);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v223 = v65;\n
    *(v223) = &(*(v223))[v63];\n
    v224 = v64;\n
    *(v224) = *(v224) - v63;\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    v175 = a0;\n
    v174 = a1;\n
    memset(&v172, 0, 21);\n
    if (*(v174) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v173) = *(&*(v175));\n
    cgc_uint2str(&v172, 21, *(&v173));\n
    v21 = &v172;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v172)) < 0)\n
        cgc__terminate(1);\n
    v225 = v174;\n
    *(v225) = *(v225) - 8;\n
    v226 = v175;\n
    *(v226) = *(v226) + 8;\n
    v159 = a0;\n
    v158 = a1;\n
    if (*(v158) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v158) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v158);\n
    v157 = v20;\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = cgc_calloc(134);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v156, \"Str: \");\n
    cgc_strncpy(v156 + 5, *(v159), v157);\n
    v228 = v159;\n
    *(v228) = &(*(v228))[4 + cgc_strlen(v156)];\n
    v230 = v158;\n
    *(v230) = *(v230) - (cgc_strlen(v156) + -4);\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v141 = a0;\n
    v140 = a1;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = *(&*(v141));\n
    v231 = v140;\n
    *(v231) = *(v231) - 2;\n
    v232 = v141;\n
    *(v232) = *(v232) + 2;\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_438409;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_438409:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v233 = v140;\n
    *(v233) = *(v233) - v139;\n
    v234 = v141;\n
    *(v234) = &(*(v234))[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v155 = a0;\n
    v154 = a1;\n
    if (*(v154) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v154) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v154);\n
    v153 = v19;\n
    if (!v153)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v152 = cgc_calloc(134);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v152, \"Str: \");\n
    cgc_strncpy(v152 + 5, *(v155), v153);\n
    v236 = v155;\n
    *(v236) = &(*(v236))[4 + cgc_strlen(v152)];\n
    v238 = v154;\n
    *(v238) = *(v238) - (cgc_strlen(v152) + -4);\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 4);\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(v97)->field_0;\n
    cgc_uint2str(&v94, 4, v95);\n
    v18 = &v94;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v239 = v96;\n
    *(v239) = *(v239) - 1;\n
    v240 = v97;\n
    *(v240) = *(v240) + 1;\n
    v151 = a0;\n
    v150 = a1;\n
    *(&v148) = *(v151);\n
    memset(&v147, 0, 12);\n
    if (*(v150) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v148[0] << 24))\n
    {\n
        v17 = 0;\n
        if ((v148[1] << 16))\n
        {\n
            v17 = 0;\n
            if ((v148[2] << 8))\n
                v17 = v148[3];\n
        }\n
    }\n
    v149 = v17 & 1;\n
    cgc_uint2str(&v147, 12, v149);\n
    v16 = &v147;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v147)) < 0)\n
        cgc__terminate(1);\n
    v241 = v150;\n
    *(v241) = *(v241) - 4;\n
    v242 = v151;\n
    *(v242) = *(v242) + 4;\n
    v69 = a0;\n
    v68 = a1;\n
    if (*(v68) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v68) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v68);\n
    v67 = v15;\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = cgc_calloc(134);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v66, \"Str: \");\n
    cgc_strncpy(v66 + 5, *(v69), v67);\n
    v244 = v69;\n
    *(v244) = &(*(v244))[4 + cgc_strlen(v66)];\n
    v246 = v68;\n
    *(v246) = *(v246) - (cgc_strlen(v66) + -4);\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v77 = a0;\n
    v76 = a1;\n
    memset(&v74, 0, 6);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    cgc_uint2str(&v74, 6, v75);\n
    v14 = &v74;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v74)) < 0)\n
        cgc__terminate(1);\n
    v247 = v76;\n
    *(v247) = *(v247) - 2;\n
    v248 = v77;\n
    *(v248) = *(v248) + 2;\n
    v42 = a0;\n
    v41 = a1;\n
    *(&v39) = *(v42);\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v39[0] << 8))\n
        v13 = v39[1];\n
    v40 = v13 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v12 = &v38;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v249 = v41;\n
    *(v249) = *(v249) - 2;\n
    v250 = v42;\n
    *(v250) = *(v250) + 2;\n
    v137 = a0;\n
    v136 = a1;\n
    if (*(v136) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v135 = *(&*(v137));\n
    v251 = v136;\n
    *(v251) = *(v251) - 2;\n
    v252 = v137;\n
    *(v252) = *(v252) + 2;\n
    if (v135 <= *(v136) && !(!v135))\n
        goto LABEL_438e91;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_438e91:\n
    v134 = cgc_calloc(v135);\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v134, *(v137), v135);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v253 = v136;\n
    *(v253) = *(v253) - v135;\n
    v254 = v137;\n
    *(v254) = &(*(v254))[v135];\n
    cgc_checkheap();\n
    cgc_free(v134);\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(v61)->field_0;\n
    v255 = v60;\n
    *(v255) = *(v255) - 1;\n
    v256 = v61;\n
    *(v256) = *(v256) + 1;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_43905f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43905f:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v257 = v61;\n
    *(v257) = &(*(v257))[v59];\n
    v258 = v60;\n
    *(v258) = *(v258) - v59;\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 4);\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(v93)->field_0;\n
    cgc_uint2str(&v90, 4, v91);\n
    v11 = &v90;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v259 = v92;\n
    *(v259) = *(v259) - 1;\n
    v260 = v93;\n
    *(v260) = *(v260) + 1;\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 4);\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(v89)->field_0;\n
    cgc_uint2str(&v86, 4, v87);\n
    v10 = &v86;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v261 = v88;\n
    *(v261) = *(v261) - 1;\n
    v262 = v89;\n
    *(v262) = *(v262) + 1;\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 21);\n
    if (*(v104) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v103) = *(&*(v105));\n
    cgc_uint2str(&v102, 21, *(&v103));\n
    v9 = &v102;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v263 = v104;\n
    *(v263) = *(v263) - 8;\n
    v264 = v105;\n
    *(v264) = *(v264) + 8;\n
    v146 = a0;\n
    v145 = a1;\n
    *(&v143) = *(v146);\n
    memset(&v142, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v143[0] << 24))\n
    {\n
        v8 = 0;\n
        if ((v143[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v143[2] << 8))\n
                v8 = v143[3];\n
        }\n
    }\n
    v144 = v8 & 1;\n
    cgc_uint2str(&v142, 12, v144);\n
    v7 = &v142;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v142)) < 0)\n
        cgc__terminate(1);\n
    v265 = v145;\n
    *(v265) = *(v265) - 4;\n
    v266 = v146;\n
    *(v266) = *(v266) + 4;\n
    v133 = a0;\n
    v132 = a1;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(&*(v133));\n
    cgc_uint2str(&v130, 12, v131);\n
    v6 = &v130;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v130)) < 0)\n
        cgc__terminate(1);\n
    v267 = v132;\n
    *(v267) = *(v267) - 4;\n
    v268 = v133;\n
    *(v268) = *(v268) + 4;\n
    v179 = a0;\n
    v178 = a1;\n
    if (*(v178) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v177 = *(v179)->field_0;\n
    v269 = v178;\n
    *(v269) = *(v269) - 1;\n
    v270 = v179;\n
    *(v270) = *(v270) + 1;\n
    if (v177 <= *(v178) && !(!v177))\n
        goto LABEL_4397ab;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4397ab:\n
    v176 = cgc_calloc(v177);\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v176, *(v179), v177);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v271 = v179;\n
    *(v271) = &(*(v271))[v177];\n
    v272 = v178;\n
    *(v272) = *(v272) - v177;\n
    cgc_checkheap();\n
    cgc_free(v176);\n
    v171 = a0;\n
    v170 = a1;\n
    memset(&v168, 0, 21);\n
    if (*(v170) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v169) = *(&*(v171));\n
    cgc_uint2str(&v168, 21, *(&v169));\n
    v5 = &v168;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v168)) < 0)\n
        cgc__terminate(1);\n
    v273 = v170;\n
    *(v273) = *(v273) - 8;\n
    v274 = v171;\n
    *(v274) = *(v274) + 8;\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 21);\n
    if (*(v100) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v99) = *(&*(v101));\n
    cgc_uint2str(&v98, 21, *(&v99));\n
    v4 = &v98;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v275 = v100;\n
    *(v275) = *(v275) - 8;\n
    v276 = v101;\n
    *(v276) = *(v276) + 8;\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(&*(v117));\n
    cgc_uint2str(&v114, 12, v115);\n
    v3 = &v114;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v277 = v116;\n
    *(v277) = *(v277) - 4;\n
    v278 = v117;\n
    *(v278) = *(v278) + 4;\n
    v129 = a0;\n
    v128 = a1;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    cgc_uint2str(&v126, 12, v127);\n
    v2 = &v126;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v126)) < 0)\n
        cgc__terminate(1);\n
    v279 = v128;\n
    *(v279) = *(v279) - 4;\n
    v280 = v129;\n
    *(v280) = *(v280) + 4;\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 6);\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 6, v71);\n
    v1 = &v70;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v281 = v72;\n
    *(v281) = *(v281) - 2;\n
    v282 = v73;\n
    *(v282) = *(v282) + 2;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(&*(v113));\n
    cgc_uint2str(&v110, 12, v111);\n
    v0 = &v110;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v283 = v112;\n
    *(v283) = *(v283) - 4;\n
    v284 = v113;\n
    *(v284) = *(v284) + 4;\n
    v36 ^= cgc__cookie;\n
    if (v36)\n
        cgc___stack_cookie_fail();\n
    v285 = a1;\n
    if (*(a1) > 0 && v35 >= 0)\n
    {\n
        v285 = v35;\n
        if (v285 < 0)\n
            v285 = *(&(&v37)[8 * v35])(a0, a1);\n
    }\n
    return v285;\n
}\n
", "4431620:sub_439f04": null, "4431632:cgc_process_llamaobtrusiveness": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaobtrusiveness(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x46c]\n
    struct_1 *v1;  // [bp-0x468]\n
    char v2;  // [bp-0x459]\n
    struct_1 *v3;  // [bp-0x458]\n
    struct_1 *v4;  // [bp-0x450]\n
    struct_1 *v5;  // [bp-0x448]\n
    struct_1 *v6;  // [bp-0x440]\n
    struct_1 *v7;  // [bp-0x438]\n
    char v8;  // [bp-0x42d]\n
    unsigned int v9;  // [bp-0x42c]\n
    struct_1 *v10;  // [bp-0x428]\n
    struct_1 *v11;  // [bp-0x420]\n
    struct_1 *v12;  // [bp-0x418]\n
    unsigned int v13;  // [bp-0x40c]\n
    struct_1 *v14;  // [bp-0x408]\n
    struct_1 *v15;  // [bp-0x400]\n
    char v16;  // [bp-0x3f1]\n
    struct_1 *v17;  // [bp-0x3f0]\n
    unsigned int v18;  // [bp-0x3e4]\n
    struct_1 *v19;  // [bp-0x3e0]\n
    struct_1 *v20;  // [bp-0x3d8]\n
    struct_1 *v21;  // [bp-0x3d0]\n
    char v22;  // [bp-0x3c5]\n
    unsigned int v23;  // [bp-0x3c4]\n
    struct_1 *v24;  // [bp-0x3c0]\n
    char v25;  // [bp-0x3b1]\n
    unsigned int v26;  // [bp-0x3b0]\n
    unsigned int v27;  // [bp-0x3ac]\n
    char v28;  // [bp-0x3a8]\n
    char v29;  // [bp-0x38e]\n
    char v30[2];  // [bp-0x388]\n
    unsigned short v31;  // [bp-0x37a]\n
    unsigned int *v32;  // [bp-0x378]\n
    struct struct_0 **v33;  // [bp-0x370]\n
    char v34;  // [bp-0x366]\n
    char *v35;  // [bp-0x360]\n
    unsigned short v36;  // [bp-0x352]\n
    unsigned int *v37;  // [bp-0x350]\n
    struct struct_0 **v38;  // [bp-0x348]\n
    char v39;  // [bp-0x33e]\n
    char v40[2];  // [bp-0x338]\n
    unsigned short v41;  // [bp-0x32a]\n
    unsigned int *v42;  // [bp-0x328]\n
    struct struct_0 **v43;  // [bp-0x320]\n
    char v44;  // [bp-0x316]\n
    char v45[2];  // [bp-0x310]\n
    unsigned short v46;  // [bp-0x302]\n
    unsigned int *v47;  // [bp-0x300]\n
    struct struct_0 **v48;  // [bp-0x2f8]\n
    unsigned long v49;  // [bp-0x2f0]\n
    char v50;  // [bp-0x2e1]\n
    unsigned int *v51;  // [bp-0x2e0]\n
    struct struct_0 **v52;  // [bp-0x2d8]\n
    char *v53;  // [bp-0x2d0]\n
    unsigned int v54;  // [bp-0x2c4]\n
    unsigned int *v55;  // [bp-0x2c0]\n
    struct struct_0 **v56;  // [bp-0x2b8]\n
    char *v57;  // [bp-0x2b0]\n
    unsigned int v58;  // [bp-0x2a4]\n
    unsigned int *v59;  // [bp-0x2a0]\n
    struct struct_0 **v60;  // [bp-0x298]\n
    char *v61;  // [bp-0x290]\n
    unsigned int v62;  // [bp-0x284]\n
    unsigned int *v63;  // [bp-0x280]\n
    struct struct_0 **v64;  // [bp-0x278]\n
    char v65;  // [bp-0x26d]\n
    char v66;  // [bp-0x269]\n
    unsigned int *v67;  // [bp-0x268]\n
    struct struct_0 **v68;  // [bp-0x260]\n
    char v69;  // [bp-0x258]\n
    unsigned int v70;  // [bp-0x240]\n
    unsigned int *v71;  // [bp-0x238]\n
    struct struct_0 **v72;  // [bp-0x230]\n
    char v73;  // [bp-0x228]\n
    unsigned int v74;  // [bp-0x210]\n
    unsigned int *v75;  // [bp-0x208]\n
    struct struct_0 **v76;  // [bp-0x200]\n
    char v77;  // [bp-0x1f8]\n
    unsigned int v78;  // [bp-0x1ec]\n
    unsigned int *v79;  // [bp-0x1e8]\n
    struct struct_0 **v80;  // [bp-0x1e0]\n
    char v81;  // [bp-0x1d8]\n
    unsigned int v82;  // [bp-0x1cc]\n
    unsigned int *v83;  // [bp-0x1c8]\n
    struct struct_0 **v84;  // [bp-0x1c0]\n
    char v85;  // [bp-0x1b8]\n
    unsigned int v86;  // [bp-0x1ac]\n
    unsigned int *v87;  // [bp-0x1a8]\n
    struct struct_0 **v88;  // [bp-0x1a0]\n
    char v89;  // [bp-0x198]\n
    unsigned int v90;  // [bp-0x18c]\n
    unsigned int *v91;  // [bp-0x188]\n
    struct struct_0 **v92;  // [bp-0x180]\n
    char v93;  // [bp-0x178]\n
    unsigned int v94;  // [bp-0x16c]\n
    unsigned int *v95;  // [bp-0x168]\n
    struct struct_0 **v96;  // [bp-0x160]\n
    char v97;  // [bp-0x158]\n
    unsigned int v98;  // [bp-0x14c]\n
    unsigned int *v99;  // [bp-0x148]\n
    struct struct_0 **v100;  // [bp-0x140]\n
    unsigned long v101;  // [bp-0x138]\n
    unsigned short v102;  // [bp-0x12a]\n
    unsigned int *v103;  // [bp-0x128]\n
    struct struct_0 **v104;  // [bp-0x120]\n
    unsigned long v105;  // [bp-0x118]\n
    unsigned short v106;  // [bp-0x10a]\n
    unsigned int *v107;  // [bp-0x108]\n
    struct struct_0 **v108;  // [bp-0x100]\n
    char v109;  // [bp-0xf4]\n
    char v110[4];  // [bp-0xe8]\n
    unsigned int v111;  // [bp-0xdc]\n
    unsigned int *v112;  // [bp-0xd8]\n
    struct struct_0 **v113;  // [bp-0xd0]\n
    char *v114;  // [bp-0xc8]\n
    unsigned int v115;  // [bp-0xbc]\n
    unsigned int *v116;  // [bp-0xb8]\n
    struct struct_0 **v117;  // [bp-0xb0]\n
    char *v118;  // [bp-0xa8]\n
    unsigned int v119;  // [bp-0x9c]\n
    unsigned int *v120;  // [bp-0x98]\n
    struct struct_0 **v121;  // [bp-0x90]\n
    char v122;  // [bp-0x88]\n
    unsigned int v123;  // [bp-0x70]\n
    unsigned int *v124;  // [bp-0x68]\n
    struct struct_0 **v125;  // [bp-0x60]\n
    char v126;  // [bp-0x58]\n
    unsigned int v127;  // [bp-0x40]\n
    unsigned int *v128;  // [bp-0x38]\n
    struct struct_0 **v129;  // [bp-0x30]\n
    unsigned long v130;  // [bp-0x28]\n
    char v131;  // [bp-0x19]\n
    unsigned int *v132;  // [bp-0x18]\n
    struct struct_0 **v133;  // [bp-0x10]\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    struct struct_0 **v158;  // rax\n
    unsigned int *v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    struct struct_0 **v163;  // rax\n
    unsigned int *v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_0 **v168;  // rax\n
    unsigned int *v169;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v171;  // rax\n
    struct struct_0 **v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_0 **v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v202;  // rax\n
    unsigned int *v203;  // rax, Other Possible Types: unsigned long\n
\n
    v27 = cgc__cookie;\n
    v26 = -1;\n
    if (cgc_sendline(1, \"===llamaobtrusiveness===\", 24) < 0)\n
        cgc__terminate(1);\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45) = *(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if ((v45[0] << 8))\n
        v25 = v45[1];\n
    v46 = v25 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v24 = &v44;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v135 = v47;\n
    *(v135) = *(v135) - 2;\n
    v136 = v48;\n
    *(v136) = *(v136) + 2;\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v63) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v63);\n
    v62 = v23;\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = cgc_calloc(134);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v61, \"Str: \");\n
    cgc_strncpy(v61 + 5, *(v64), v62);\n
    v138 = v64;\n
    *(v138) = &(*(v138))[4 + cgc_strlen(v61)];\n
    v140 = v63;\n
    *(v140) = *(v140) - (cgc_strlen(v61) + -4);\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v113 = a0;\n
    v112 = a1;\n
    *(&v110) = *(v113);\n
    memset(&v109, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v110[0] << 24))\n
    {\n
        v22 = 0;\n
        if ((v110[1] << 16))\n
        {\n
            v22 = 0;\n
            if ((v110[2] << 8))\n
                v22 = v110[3];\n
        }\n
    }\n
    v111 = v22 & 1;\n
    cgc_uint2str(&v109, 12, v111);\n
    v21 = &v109;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v141 = v112;\n
    *(v141) = *(v141) - 4;\n
    v142 = v113;\n
    *(v142) = *(v142) + 4;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 12, v94);\n
    v20 = &v93;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v143 = v95;\n
    *(v143) = *(v143) - 4;\n
    v144 = v96;\n
    *(v144) = *(v144) + 4;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 12, v98);\n
    v19 = &v97;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v145 = v99;\n
    *(v145) = *(v145) - 4;\n
    v146 = v100;\n
    *(v146) = *(v146) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v59) >= 128)\n
        v18 = 128;\n
    else\n
        v18 = *(v59);\n
    v58 = v18;\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = cgc_calloc(134);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v57, \"Str: \");\n
    cgc_strncpy(v57 + 5, *(v60), v58);\n
    v148 = v60;\n
    *(v148) = &(*(v148))[4 + cgc_strlen(v57)];\n
    v150 = v59;\n
    *(v150) = *(v150) - (cgc_strlen(v57) + -4);\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v129 = a0;\n
    v128 = a1;\n
    memset(&v126, 0, 21);\n
    if (*(v128) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v127) = *(&*(v129));\n
    cgc_uint2str(&v126, 21, *(&v127));\n
    v17 = &v126;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v126)) < 0)\n
        cgc__terminate(1);\n
    v151 = v128;\n
    *(v151) = *(v151) - 8;\n
    v152 = v129;\n
    *(v152) = *(v152) + 8;\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v40[0] << 8))\n
        v16 = v40[1];\n
    v41 = v16 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v15 = &v39;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v153 = v42;\n
    *(v153) = *(v153) - 2;\n
    v154 = v43;\n
    *(v154) = *(v154) + 2;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 12);\n
    if (*(v91) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    cgc_uint2str(&v89, 12, v90);\n
    v14 = &v89;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v155 = v91;\n
    *(v155) = *(v155) - 4;\n
    v156 = v92;\n
    *(v156) = *(v156) + 4;\n
    v121 = a0;\n
    v120 = a1;\n
    if (*(v120) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v120) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v120);\n
    v119 = v13;\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = cgc_calloc(134);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v118, \"Str: \");\n
    cgc_strncpy(v118 + 5, *(v121), v119);\n
    v158 = v121;\n
    *(v158) = &(*(v158))[4 + cgc_strlen(v118)];\n
    v160 = v120;\n
    *(v160) = *(v160) - (cgc_strlen(v118) + -4);\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v133 = a0;\n
    v132 = a1;\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(v133)->field_0;\n
    v161 = v132;\n
    *(v161) = *(v161) - 1;\n
    v162 = v133;\n
    *(v162) = *(v162) + 1;\n
    if (v131 <= *(v132) && !(!v131))\n
        goto LABEL_43ae17;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43ae17:\n
    v130 = cgc_calloc(v131);\n
    if (!v130)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v130, *(v133), v131);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v163 = v133;\n
    *(v163) = &(*(v163))[v131];\n
    v164 = v132;\n
    *(v164) = *(v164) - v131;\n
    cgc_checkheap();\n
    cgc_free(v130);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 12);\n
    if (*(v87) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 12, v86);\n
    v12 = &v85;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v165 = v87;\n
    *(v165) = *(v165) - 4;\n
    v166 = v88;\n
    *(v166) = *(v166) + 4;\n
    v104 = a0;\n
    v103 = a1;\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    v167 = v103;\n
    *(v167) = *(v167) - 2;\n
    v168 = v104;\n
    *(v168) = *(v168) + 2;\n
    if (v102 <= *(v103) && !(!v102))\n
        goto LABEL_43b0c7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43b0c7:\n
    v101 = cgc_calloc(v102);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v101, *(v104), v102);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v169 = v103;\n
    *(v169) = *(v169) - v102;\n
    v170 = v104;\n
    *(v170) = &(*(v170))[v102];\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    v108 = a0;\n
    v107 = a1;\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    v171 = v107;\n
    *(v171) = *(v171) - 2;\n
    v172 = v108;\n
    *(v172) = *(v172) + 2;\n
    if (v106 <= *(v107) && !(!v106))\n
        goto LABEL_43b297;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43b297:\n
    v105 = cgc_calloc(v106);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v105, *(v108), v106);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v173 = v107;\n
    *(v173) = *(v173) - v106;\n
    v174 = v108;\n
    *(v174) = &(*(v174))[v106];\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    v125 = a0;\n
    v124 = a1;\n
    memset(&v122, 0, 21);\n
    if (*(v124) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v123) = *(&*(v125));\n
    cgc_uint2str(&v122, 21, *(&v123));\n
    v11 = &v122;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v122)) < 0)\n
        cgc__terminate(1);\n
    v175 = v124;\n
    *(v175) = *(v175) - 8;\n
    v176 = v125;\n
    *(v176) = *(v176) + 8;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 12);\n
    if (*(v83) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 12, v82);\n
    v10 = &v81;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v177 = v83;\n
    *(v177) = *(v177) - 4;\n
    v178 = v84;\n
    *(v178) = *(v178) + 4;\n
    v117 = a0;\n
    v116 = a1;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v116) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v116);\n
    v115 = v9;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v114, \"Str: \");\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v180 = v117;\n
    *(v180) = &(*(v180))[4 + cgc_strlen(v114)];\n
    v182 = v116;\n
    *(v182) = *(v182) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v38 = a0;\n
    v37 = a1;\n
    v35 = &*(v38)->field_0;\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((*(v35) << 8))\n
        v8 = v35[1];\n
    v36 = v8 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v7 = &v34;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v183 = v37;\n
    *(v183) = *(v183) - 2;\n
    v184 = v38;\n
    *(v184) = *(v184) + 2;\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(v52)->field_0;\n
    v185 = v51;\n
    *(v185) = *(v185) - 1;\n
    v186 = v52;\n
    *(v186) = *(v186) + 1;\n
    if (v50 <= *(v51) && !(!v50))\n
        goto LABEL_43b983;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43b983:\n
    v49 = cgc_calloc(v50);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v49, *(v52), v50);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v187 = v52;\n
    *(v187) = &(*(v187))[v50];\n
    v188 = v51;\n
    *(v188) = *(v188) - v50;\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v74) = *(&*(v76));\n
    cgc_uint2str(&v73, 21, *(&v74));\n
    v6 = &v73;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v189 = v75;\n
    *(v189) = *(v189) - 8;\n
    v190 = v76;\n
    *(v190) = *(v190) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v5 = &v65;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v191 = v67;\n
    *(v191) = *(v191) - 1;\n
    v192 = v68;\n
    *(v192) = *(v192) + 1;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 12);\n
    if (*(v79) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(&*(v80));\n
    cgc_uint2str(&v77, 12, v78);\n
    v4 = &v77;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v193 = v79;\n
    *(v193) = *(v193) - 4;\n
    v194 = v80;\n
    *(v194) = *(v194) + 4;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v70) = *(&*(v72));\n
    cgc_uint2str(&v69, 21, *(&v70));\n
    v3 = &v69;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v195 = v71;\n
    *(v195) = *(v195) - 8;\n
    v196 = v72;\n
    *(v196) = *(v196) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v30[0] << 8))\n
        v2 = v30[1];\n
    v31 = v2 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v1 = &v29;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v197 = v32;\n
    *(v197) = *(v197) - 2;\n
    v198 = v33;\n
    *(v198) = *(v198) + 2;\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v55) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v55);\n
    v54 = v0;\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = cgc_calloc(134);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v53, \"Str: \");\n
    cgc_strncpy(v53 + 5, *(v56), v54);\n
    v200 = v56;\n
    *(v200) = &(*(v200))[4 + cgc_strlen(v53)];\n
    v202 = v55;\n
    *(v202) = *(v202) - (cgc_strlen(v53) + -4);\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v27 ^= cgc__cookie;\n
    if (v27)\n
        cgc___stack_cookie_fail();\n
    v203 = a1;\n
    if (*(a1) > 0 && v26 >= 0)\n
    {\n
        v203 = v26;\n
        if (v203 < 0)\n
            v203 = *(&(&v28)[8 * v26])(a0, a1);\n
    }\n
    return v203;\n
}\n
", "4440623:sub_43c22f": null, "4440624:cgc_process_llamachromophotographic": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c61b0;\n
extern unsigned long long g_4c61b8;\n
\n
long long cgc_process_llamachromophotographic(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x1bc]\n
    struct_0 *v1;  // [bp-0x1b8]\n
    struct_0 *v2;  // [bp-0x1b0]\n
    struct_0 *v3;  // [bp-0x1a8]\n
    char v4;  // [bp-0x19d]\n
    unsigned int v5;  // [bp-0x19c]\n
    unsigned int v6;  // [bp-0x198]\n
    unsigned int v7;  // [bp-0x194]\n
    unsigned int v8;  // [bp-0x190]\n
    unsigned int v9;  // [bp-0x18c]\n
    unsigned long v10;  // [bp-0x188]\n
    unsigned long v11;  // [bp-0x180]\n
    char v12;  // [bp-0x15e]\n
    char v13[2];  // [bp-0x158]\n
    unsigned short v14;  // [bp-0x14a]\n
    unsigned int *v15;  // [bp-0x148]\n
    struct struct_1 **v16;  // [bp-0x140]\n
    unsigned long v17;  // [bp-0x138]\n
    char v18;  // [bp-0x129]\n
    unsigned int *v19;  // [bp-0x128]\n
    struct struct_1 **v20;  // [bp-0x120]\n
    char *v21;  // [bp-0x118]\n
    unsigned int v22;  // [bp-0x10c]\n
    unsigned int *v23;  // [bp-0x108]\n
    struct struct_1 **v24;  // [bp-0x100]\n
    char *v25;  // [bp-0xf8]\n
    unsigned int v26;  // [bp-0xec]\n
    unsigned int *v27;  // [bp-0xe8]\n
    struct struct_1 **v28;  // [bp-0xe0]\n
    char *v29;  // [bp-0xd8]\n
    unsigned int v30;  // [bp-0xcc]\n
    unsigned int *v31;  // [bp-0xc8]\n
    struct struct_1 **v32;  // [bp-0xc0]\n
    char v33;  // [bp-0xb8]\n
    unsigned int v34;  // [bp-0xa0]\n
    unsigned int *v35;  // [bp-0x98]\n
    struct struct_1 **v36;  // [bp-0x90]\n
    char v37;  // [bp-0x88]\n
    unsigned int v38;  // [bp-0x7c]\n
    unsigned int *v39;  // [bp-0x78]\n
    struct struct_1 **v40;  // [bp-0x70]\n
    unsigned long v41;  // [bp-0x68]\n
    unsigned short v42;  // [bp-0x5a]\n
    unsigned int *v43;  // [bp-0x58]\n
    struct struct_1 **v44;  // [bp-0x50]\n
    char *v45;  // [bp-0x48]\n
    unsigned int v46;  // [bp-0x3c]\n
    unsigned int *v47;  // [bp-0x38]\n
    struct struct_1 **v48;  // [bp-0x30]\n
    unsigned long v49;  // [bp-0x28]\n
    char v50;  // [bp-0x19]\n
    unsigned int *v51;  // [bp-0x18]\n
    struct struct_1 **v52;  // [bp-0x10]\n
    struct struct_1 **v55;  // rax\n
    unsigned int *v57;  // rax\n
    struct struct_1 **v59;  // rax\n
    unsigned int *v61;  // rax\n
    unsigned int *v62;  // rax\n
    struct struct_1 **v63;  // rax\n
    struct struct_1 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_1 **v67;  // rax\n
    unsigned int *v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_1 **v71;  // rax\n
    struct struct_1 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_1 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_1 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_1 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_1 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_1 **v83;  // rax\n
    struct struct_1 **v85;  // rax\n
    unsigned int *v87;  // rax\n
    unsigned int *v88;  // rax, Other Possible Types: unsigned long\n
\n
    v10 = g_4c61b0;\n
    v11 = g_4c61b8;\n
    v9 = cgc__cookie;\n
    v8 = -1;\n
    if (cgc_sendline(1, \"===llamachromophotographic===\", 29) < 0)\n
        cgc__terminate(1);\n
    v32 = a0;\n
    v31 = a1;\n
    if (*(v31) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v31) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v31);\n
    v30 = v7;\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = cgc_calloc(134);\n
    if (!v29)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v29, \"Str: \");\n
    cgc_strncpy(v29 + 5, *(v32), v30);\n
    v55 = v32;\n
    *(v55) = &(*(v55))[4 + cgc_strlen(v29)];\n
    v57 = v31;\n
    *(v57) = *(v57) - (cgc_strlen(v29) + -4);\n
    cgc_checkheap();\n
    cgc_free(v29);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v47) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v47);\n
    v46 = v6;\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = cgc_calloc(134);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v45, \"Str: \");\n
    cgc_strncpy(v45 + 5, *(v48), v46);\n
    v59 = v48;\n
    *(v59) = &(*(v59))[4 + cgc_strlen(v45)];\n
    v61 = v47;\n
    *(v61) = *(v61) - (cgc_strlen(v45) + -4);\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(v52)->field_0;\n
    v62 = v51;\n
    *(v62) = *(v62) - 1;\n
    v63 = v52;\n
    *(v63) = *(v63) + 1;\n
    if (v50 <= *(v51) && !(!v50))\n
        goto LABEL_43c728;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43c728:\n
    v49 = cgc_calloc(v50);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v49, *(v52), v50);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v64 = v52;\n
    *(v64) = &(*(v64))[v50];\n
    v65 = v51;\n
    *(v65) = *(v65) - v50;\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    v28 = a0;\n
    v27 = a1;\n
    if (*(v27) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v27) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v27);\n
    v26 = v5;\n
    if (!v26)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = cgc_calloc(134);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v25, \"Str: \");\n
    cgc_strncpy(v25 + 5, *(v28), v26);\n
    v67 = v28;\n
    *(v67) = &(*(v67))[4 + cgc_strlen(v25)];\n
    v69 = v27;\n
    *(v69) = *(v69) - (cgc_strlen(v25) + -4);\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v20 = a0;\n
    v19 = a1;\n
    if (*(v19) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = *(v20)->field_0;\n
    v70 = v19;\n
    *(v70) = *(v70) - 1;\n
    v71 = v20;\n
    *(v71) = *(v71) + 1;\n
    if (v18 <= *(v19) && !(!v18))\n
        goto LABEL_43cac8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43cac8:\n
    v17 = cgc_calloc(v18);\n
    if (!v17)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v17, *(v20), v18);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v72 = v20;\n
    *(v72) = &(*(v72))[v18];\n
    v73 = v19;\n
    *(v73) = *(v73) - v18;\n
    cgc_checkheap();\n
    cgc_free(v17);\n
    v16 = a0;\n
    v15 = a1;\n
    *(&v13) = *(v16);\n
    memset(&v12, 0, 6);\n
    if (*(v15) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v13[0] << 8))\n
        v4 = v13[1];\n
    v14 = v4 & 1;\n
    cgc_uint2str(&v12, 6, v14);\n
    v3 = &v12;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v12)) < 0)\n
        cgc__terminate(1);\n
    v74 = v15;\n
    *(v74) = *(v74) - 2;\n
    v75 = v16;\n
    *(v75) = *(v75) + 2;\n
    v44 = a0;\n
    v43 = a1;\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = *(&*(v44));\n
    v76 = v43;\n
    *(v76) = *(v76) - 2;\n
    v77 = v44;\n
    *(v77) = *(v77) + 2;\n
    if (v42 <= *(v43) && !(!v42))\n
        goto LABEL_43cdc2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43cdc2:\n
    v41 = cgc_calloc(v42);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v41, *(v44), v42);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v78 = v43;\n
    *(v78) = *(v78) - v42;\n
    v79 = v44;\n
    *(v79) = &(*(v79))[v42];\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    v40 = a0;\n
    v39 = a1;\n
    memset(&v37, 0, 12);\n
    if (*(v39) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = *(&*(v40));\n
    cgc_uint2str(&v37, 12, v38);\n
    v2 = &v37;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v80 = v39;\n
    *(v80) = *(v80) - 4;\n
    v81 = v40;\n
    *(v81) = *(v81) + 4;\n
    v36 = a0;\n
    v35 = a1;\n
    memset(&v33, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v34) = *(&*(v36));\n
    cgc_uint2str(&v33, 21, *(&v34));\n
    v1 = &v33;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v33)) < 0)\n
        cgc__terminate(1);\n
    v82 = v35;\n
    *(v82) = *(v82) - 8;\n
    v83 = v36;\n
    *(v83) = *(v83) + 8;\n
    v24 = a0;\n
    v23 = a1;\n
    if (*(v23) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v23) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v23);\n
    v22 = v0;\n
    if (!v22)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = cgc_calloc(134);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v21, \"Str: \");\n
    cgc_strncpy(v21 + 5, *(v24), v22);\n
    v85 = v24;\n
    *(v85) = &(*(v85))[4 + cgc_strlen(v21)];\n
    v87 = v23;\n
    *(v87) = *(v87) - (cgc_strlen(v21) + -4);\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v9 ^= cgc__cookie;\n
    if (v9)\n
        cgc___stack_cookie_fail();\n
    v88 = a1;\n
    if (*(a1) > 0 && v8 >= 0)\n
    {\n
        v88 = v8;\n
        if (v88 < 2)\n
            v88 = (&v10)[v8](a0, a1);\n
    }\n
    return v88;\n
}\n
", "4444885:sub_43d2d5": null, "4444896:cgc_process_llamaunacceptable": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaunacceptable(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x158]\n
    char v1;  // [bp-0x149]\n
    struct_0 *v2;  // [bp-0x148]\n
    struct_0 *v3;  // [bp-0x140]\n
    struct_0 *v4;  // [bp-0x138]\n
    char v5;  // [bp-0x129]\n
    unsigned int v6;  // [bp-0x128]\n
    unsigned int v7;  // [bp-0x124]\n
    char v8;  // [bp-0x120]\n
    char v9;  // [bp-0x108]\n
    char v10[8];  // [bp-0xe8]\n
    unsigned int v11;  // [bp-0xe0]\n
    unsigned int *v12;  // [bp-0xd8]\n
    struct struct_1 **v13;  // [bp-0xd0]\n
    unsigned long v14;  // [bp-0xc8]\n
    char v15;  // [bp-0xb9]\n
    unsigned int *v16;  // [bp-0xb8]\n
    struct struct_1 **v17;  // [bp-0xb0]\n
    char v18;  // [bp-0xa8]\n
    unsigned short v19;  // [bp-0xa2]\n
    unsigned int *v20;  // [bp-0xa0]\n
    struct struct_1 **v21;  // [bp-0x98]\n
    char v22;  // [bp-0x8d]\n
    char v23;  // [bp-0x89]\n
    unsigned int *v24;  // [bp-0x88]\n
    struct struct_1 **v25;  // [bp-0x80]\n
    char v26;  // [bp-0x74]\n
    char v27[4];  // [bp-0x68]\n
    unsigned int v28;  // [bp-0x5c]\n
    unsigned int *v29;  // [bp-0x58]\n
    struct struct_1 **v30;  // [bp-0x50]\n
    unsigned long v31;  // [bp-0x48]\n
    char v32;  // [bp-0x39]\n
    unsigned int *v33;  // [bp-0x38]\n
    struct struct_1 **v34;  // [bp-0x30]\n
    unsigned long v35;  // [bp-0x28]\n
    char v36;  // [bp-0x19]\n
    unsigned int *v37;  // [bp-0x18]\n
    struct struct_1 **v38;  // [bp-0x10]\n
    unsigned int *v40;  // rax\n
    struct struct_1 **v41;  // rax\n
    struct struct_1 **v42;  // rax\n
    unsigned int *v43;  // rax\n
    unsigned int *v44;  // rax\n
    struct struct_1 **v45;  // rax\n
    unsigned int *v46;  // rax\n
    struct struct_1 **v47;  // rax\n
    struct struct_1 **v48;  // rax\n
    unsigned int *v49;  // rax\n
    unsigned int *v50;  // rax\n
    struct struct_1 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    struct struct_1 **v53;  // rax\n
    struct struct_1 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    unsigned int *v56;  // rax\n
    struct struct_1 **v57;  // rax\n
    unsigned int *v58;  // rax\n
    struct struct_1 **v59;  // rax\n
    unsigned int *v60;  // rax, Other Possible Types: unsigned long\n
\n
    v7 = cgc__cookie;\n
    v6 = -1;\n
    if (cgc_sendline(1, \"===llamaunacceptable===\", 23) < 0)\n
        cgc__terminate(1);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v40 = v37;\n
    *(v40) = *(v40) - 1;\n
    v41 = v38;\n
    *(v41) = &*(v41)->padding_1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_43d40c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43d40c:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v42 = v38;\n
    *(v42) = &(&*(v42)->field_0)[v36];\n
    v43 = v37;\n
    *(v43) = *(v43) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v30 = a0;\n
    v29 = a1;\n
    *(&v27) = *(v30);\n
    memset(&v26, 0, 12);\n
    if (*(v29) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v27[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v27[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v27[2] << 8))\n
                v5 = v27[3];\n
        }\n
    }\n
    v28 = v5 & 1;\n
    cgc_uint2str(&v26, 12, v28);\n
    v4 = &v26;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v44 = v29;\n
    *(v44) = *(v44) - 4;\n
    v45 = v30;\n
    *(v45) = &*(v45)->field_4;\n
    v17 = a0;\n
    v16 = a1;\n
    if (*(v16) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = *(v17)->field_0;\n
    v46 = v16;\n
    *(v46) = *(v46) - 1;\n
    v47 = v17;\n
    *(v47) = &*(v47)->padding_1;\n
    if (v15 <= *(v16) && !(!v15))\n
        goto LABEL_43d70a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43d70a:\n
    v14 = cgc_calloc(v15);\n
    if (!v14)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v14, *(v17), v15);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v48 = v17;\n
    *(v48) = &(&*(v48)->field_0)[v15];\n
    v49 = v16;\n
    *(v49) = *(v49) - v15;\n
    cgc_checkheap();\n
    cgc_free(v14);\n
    v21 = a0;\n
    v20 = a1;\n
    memset(&v18, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(&*(v21)->field_0);\n
    cgc_uint2str(&v18, 6, v19);\n
    v3 = &v18;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v50 = v20;\n
    *(v50) = *(v50) - 2;\n
    v51 = v21;\n
    *(v51) = &*(v51)->field_2;\n
    v34 = a0;\n
    v33 = a1;\n
    if (*(v33) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = *(v34)->field_0;\n
    v52 = v33;\n
    *(v52) = *(v52) - 1;\n
    v53 = v34;\n
    *(v53) = &*(v53)->padding_1;\n
    if (v32 <= *(v33) && !(!v32))\n
        goto LABEL_43d9be;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43d9be:\n
    v31 = cgc_calloc(v32);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v31, *(v34), v32);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v54 = v34;\n
    *(v54) = &(&*(v54)->field_0)[v32];\n
    v55 = v33;\n
    *(v55) = *(v55) - v32;\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 4);\n
    if (*(v24) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = *(v25)->field_0;\n
    cgc_uint2str(&v22, 4, v23);\n
    v2 = &v22;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v56 = v24;\n
    *(v56) = *(v56) - 1;\n
    v57 = v25;\n
    *(v57) = &*(v57)->padding_1;\n
    v13 = a0;\n
    v12 = a1;\n
    *(&v10[0]) = *(v13);\n
    memset(&v9, 0, 21);\n
    if (*(v12) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v10[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v10[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v10[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v10[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v10[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v10[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v10[6] << 8))\n
                                v1 = v10[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v11) = v1 & 1;\n
    cgc_uint2str(&v9, 21, *(&v11));\n
    v0 = &v9;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v9)) < 0)\n
        cgc__terminate(1);\n
    v58 = v12;\n
    *(v58) = *(v58) - 8;\n
    v59 = v13;\n
    *(v59) = *(v59) + 1;\n
    v7 ^= cgc__cookie;\n
    if (v7)\n
        cgc___stack_cookie_fail();\n
    v60 = a1;\n
    if (*(a1) > 0 && v6 >= 0)\n
    {\n
        v60 = v6;\n
        if (v60 < 0)\n
            v60 = *(&(&v8)[8 * v6])(a0, a1);\n
    }\n
    return v60;\n
}\n
", "4447741:sub_43ddfd": null, "4447744:cgc_process_llamapanse": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamapanse(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x2b8]\n
    unsigned int v1;  // [bp-0x2b0]\n
    unsigned int v2;  // [bp-0x2ac]\n
    struct_1 *v3;  // [bp-0x2a8]\n
    struct_1 *v4;  // [bp-0x2a0]\n
    struct_1 *v5;  // [bp-0x298]\n
    struct_1 *v6;  // [bp-0x290]\n
    char v7;  // [bp-0x281]\n
    struct_1 *v8;  // [bp-0x280]\n
    struct_1 *v9;  // [bp-0x278]\n
    char v10;  // [bp-0x269]\n
    struct_1 *v11;  // [bp-0x268]\n
    char v12;  // [bp-0x259]\n
    unsigned int v13;  // [bp-0x258]\n
    unsigned int v14;  // [bp-0x254]\n
    char v15;  // [bp-0x250]\n
    char v16;  // [bp-0x238]\n
    char v17[8];  // [bp-0x220]\n
    unsigned int v18;  // [bp-0x218]\n
    unsigned int *v19;  // [bp-0x210]\n
    struct struct_0 **v20;  // [bp-0x208]\n
    char *v21;  // [bp-0x200]\n
    unsigned int v22;  // [bp-0x1f4]\n
    unsigned int *v23;  // [bp-0x1f0]\n
    struct struct_0 **v24;  // [bp-0x1e8]\n
    char *v25;  // [bp-0x1e0]\n
    unsigned int v26;  // [bp-0x1d4]\n
    unsigned int *v27;  // [bp-0x1d0]\n
    struct struct_0 **v28;  // [bp-0x1c8]\n
    char v29;  // [bp-0x1bd]\n
    char v30;  // [bp-0x1b9]\n
    unsigned int *v31;  // [bp-0x1b8]\n
    struct struct_0 **v32;  // [bp-0x1b0]\n
    char v33;  // [bp-0x1a8]\n
    unsigned int v34;  // [bp-0x190]\n
    unsigned int *v35;  // [bp-0x188]\n
    struct struct_0 **v36;  // [bp-0x180]\n
    char v37;  // [bp-0x178]\n
    unsigned int v38;  // [bp-0x16c]\n
    unsigned int *v39;  // [bp-0x168]\n
    struct struct_0 **v40;  // [bp-0x160]\n
    char v41;  // [bp-0x158]\n
    unsigned int v42;  // [bp-0x14c]\n
    unsigned int *v43;  // [bp-0x148]\n
    struct struct_0 **v44;  // [bp-0x140]\n
    unsigned long v45;  // [bp-0x138]\n
    unsigned short v46;  // [bp-0x12a]\n
    unsigned int *v47;  // [bp-0x128]\n
    struct struct_0 **v48;  // [bp-0x120]\n
    unsigned long v49;  // [bp-0x118]\n
    unsigned short v50;  // [bp-0x10a]\n
    unsigned int *v51;  // [bp-0x108]\n
    struct struct_0 **v52;  // [bp-0x100]\n
    unsigned long v53;  // [bp-0xf8]\n
    unsigned short v54;  // [bp-0xea]\n
    unsigned int *v55;  // [bp-0xe8]\n
    struct struct_0 **v56;  // [bp-0xe0]\n
    unsigned long v57;  // [bp-0xd8]\n
    unsigned short v58;  // [bp-0xca]\n
    unsigned int *v59;  // [bp-0xc8]\n
    struct struct_0 **v60;  // [bp-0xc0]\n
    char v61;  // [bp-0xb4]\n
    char v62[4];  // [bp-0xa8]\n
    unsigned int v63;  // [bp-0x9c]\n
    unsigned int *v64;  // [bp-0x98]\n
    struct struct_0 **v65;  // [bp-0x90]\n
    char v66;  // [bp-0x84]\n
    char v67[4];  // [bp-0x78]\n
    unsigned int v68;  // [bp-0x6c]\n
    unsigned int *v69;  // [bp-0x68]\n
    struct struct_0 **v70;  // [bp-0x60]\n
    char v71;  // [bp-0x58]\n
    unsigned int v72;  // [bp-0x40]\n
    unsigned int *v73;  // [bp-0x38]\n
    struct struct_0 **v74;  // [bp-0x30]\n
    unsigned long v75;  // [bp-0x28]\n
    char v76;  // [bp-0x19]\n
    unsigned int *v77;  // [bp-0x18]\n
    struct struct_0 **v78;  // [bp-0x10]\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_0 **v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_0 **v85;  // rax\n
    unsigned int *v86;  // rax\n
    struct struct_0 **v87;  // rax\n
    unsigned int *v88;  // rax\n
    struct struct_0 **v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_0 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_0 **v93;  // rax\n
    unsigned int *v94;  // rax\n
    struct struct_0 **v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_0 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    unsigned int *v104;  // rax\n
    struct struct_0 **v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_0 **v107;  // rax\n
    unsigned int *v108;  // rax\n
    struct struct_0 **v109;  // rax\n
    struct struct_0 **v111;  // rax\n
    unsigned int *v113;  // rax\n
    unsigned int *v114;  // rax\n
    struct struct_0 **v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v119;  // rax\n
    unsigned int *v121;  // rax\n
    unsigned int *v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    unsigned int *v124;  // rax, Other Possible Types: unsigned long\n
\n
    v14 = cgc__cookie;\n
    v13 = -1;\n
    if (cgc_sendline(1, \"===llamapanse===\", 16) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(&*(v52));\n
    v80 = v51;\n
    *(v80) = *(v80) - 2;\n
    v81 = v52;\n
    *(v81) = *(v81) + 2;\n
    if (v50 <= *(v51) && !(!v50))\n
        goto LABEL_43df4c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43df4c:\n
    v49 = cgc_calloc(v50);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v49, *(v52), v50);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v82 = v51;\n
    *(v82) = *(v82) - v50;\n
    v83 = v52;\n
    *(v83) = &(*(v83))[v50];\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    v70 = a0;\n
    v69 = a1;\n
    *(&v67) = *(v70);\n
    memset(&v66, 0, 12);\n
    if (*(v69) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v67[0] << 24))\n
    {\n
        v12 = 0;\n
        if ((v67[1] << 16))\n
        {\n
            v12 = 0;\n
            if ((v67[2] << 8))\n
                v12 = v67[3];\n
        }\n
    }\n
    v68 = v12 & 1;\n
    cgc_uint2str(&v66, 12, v68);\n
    v11 = &v66;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v84 = v69;\n
    *(v84) = *(v84) - 4;\n
    v85 = v70;\n
    *(v85) = *(v85) + 4;\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v46 = *(&*(v48));\n
    v86 = v47;\n
    *(v86) = *(v86) - 2;\n
    v87 = v48;\n
    *(v87) = *(v87) + 2;\n
    if (v46 <= *(v47) && !(!v46))\n
        goto LABEL_43e26d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43e26d:\n
    v45 = cgc_calloc(v46);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v45, *(v48), v46);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v88 = v47;\n
    *(v88) = *(v88) - v46;\n
    v89 = v48;\n
    *(v89) = &(*(v89))[v46];\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    v90 = v59;\n
    *(v90) = *(v90) - 2;\n
    v91 = v60;\n
    *(v91) = *(v91) + 2;\n
    if (v58 <= *(v59) && !(!v58))\n
        goto LABEL_43e43d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43e43d:\n
    v57 = cgc_calloc(v58);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v57, *(v60), v58);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v92 = v59;\n
    *(v92) = *(v92) - v58;\n
    v93 = v60;\n
    *(v93) = &(*(v93))[v58];\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    v65 = a0;\n
    v64 = a1;\n
    *(&v62) = *(v65);\n
    memset(&v61, 0, 12);\n
    if (*(v64) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v62[0] << 24))\n
    {\n
        v10 = 0;\n
        if ((v62[1] << 16))\n
        {\n
            v10 = 0;\n
            if ((v62[2] << 8))\n
                v10 = v62[3];\n
        }\n
    }\n
    v63 = v10 & 1;\n
    cgc_uint2str(&v61, 12, v63);\n
    v9 = &v61;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v94 = v64;\n
    *(v94) = *(v94) - 4;\n
    v95 = v65;\n
    *(v95) = *(v95) + 4;\n
    v32 = a0;\n
    v31 = a1;\n
    memset(&v29, 0, 4);\n
    if (*(v31) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = *(v32)->field_0;\n
    cgc_uint2str(&v29, 4, v30);\n
    v8 = &v29;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v96 = v31;\n
    *(v96) = *(v96) - 1;\n
    v97 = v32;\n
    *(v97) = *(v97) + 1;\n
    v20 = a0;\n
    v19 = a1;\n
    *(&v17[0]) = *(v20);\n
    memset(&v16, 0, 21);\n
    if (*(v19) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v17[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v17[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v17[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v17[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v17[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v17[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v17[6] << 8))\n
                                v7 = v17[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v18) = v7 & 1;\n
    cgc_uint2str(&v16, 21, *(&v18));\n
    v6 = &v16;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v98 = v19;\n
    *(v98) = *(v98) - 8;\n
    v99 = v20;\n
    *(v99) = *(v99) + 8;\n
    v36 = a0;\n
    v35 = a1;\n
    memset(&v33, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v34) = *(&*(v36));\n
    cgc_uint2str(&v33, 21, *(&v34));\n
    v5 = &v33;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v33)) < 0)\n
        cgc__terminate(1);\n
    v100 = v35;\n
    *(v100) = *(v100) - 8;\n
    v101 = v36;\n
    *(v101) = *(v101) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    v102 = v55;\n
    *(v102) = *(v102) - 2;\n
    v103 = v56;\n
    *(v103) = *(v103) + 2;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_43ebb3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43ebb3:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v104 = v55;\n
    *(v104) = *(v104) - v54;\n
    v105 = v56;\n
    *(v105) = &(*(v105))[v54];\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v72) = *(&*(v74));\n
    cgc_uint2str(&v71, 21, *(&v72));\n
    v4 = &v71;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v106 = v73;\n
    *(v106) = *(v106) - 8;\n
    v107 = v74;\n
    *(v107) = *(v107) + 8;\n
    v44 = a0;\n
    v43 = a1;\n
    memset(&v41, 0, 12);\n
    if (*(v43) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = *(&*(v44));\n
    cgc_uint2str(&v41, 12, v42);\n
    v3 = &v41;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v108 = v43;\n
    *(v108) = *(v108) - 4;\n
    v109 = v44;\n
    *(v109) = *(v109) + 4;\n
    v28 = a0;\n
    v27 = a1;\n
    if (*(v27) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v27) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v27);\n
    v26 = v2;\n
    if (!v26)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = cgc_calloc(134);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v25, \"Str: \");\n
    cgc_strncpy(v25 + 5, *(v28), v26);\n
    v111 = v28;\n
    *(v111) = &(*(v111))[4 + cgc_strlen(v25)];\n
    v113 = v27;\n
    *(v113) = *(v113) - (cgc_strlen(v25) + -4);\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v78 = a0;\n
    v77 = a1;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(v78)->field_0;\n
    v114 = v77;\n
    *(v114) = *(v114) - 1;\n
    v115 = v78;\n
    *(v115) = *(v115) + 1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_43f142;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43f142:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v116 = v78;\n
    *(v116) = &(*(v116))[v76];\n
    v117 = v77;\n
    *(v117) = *(v117) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v24 = a0;\n
    v23 = a1;\n
    if (*(v23) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v23) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v23);\n
    v22 = v1;\n
    if (!v22)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = cgc_calloc(134);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v21, \"Str: \");\n
    cgc_strncpy(v21 + 5, *(v24), v22);\n
    v119 = v24;\n
    *(v119) = &(*(v119))[4 + cgc_strlen(v21)];\n
    v121 = v23;\n
    *(v121) = *(v121) - (cgc_strlen(v21) + -4);\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v40 = a0;\n
    v39 = a1;\n
    memset(&v37, 0, 12);\n
    if (*(v39) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = *(&*(v40));\n
    cgc_uint2str(&v37, 12, v38);\n
    v0 = &v37;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v122 = v39;\n
    *(v122) = *(v122) - 4;\n
    v123 = v40;\n
    *(v123) = *(v123) + 4;\n
    v14 ^= cgc__cookie;\n
    if (v14)\n
        cgc___stack_cookie_fail();\n
    v124 = a1;\n
    if (*(a1) > 0 && v13 >= 0)\n
    {\n
        v124 = v13;\n
        if (v124 < 0)\n
            v124 = *(&(&v15)[8 * v13])(a0, a1);\n
    }\n
    return v124;\n
}\n
", "4453752:sub_43f578": null, "4453760:cgc_process_llamaAraneiformes": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaAraneiformes(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x138]\n
    struct_1 *v1;  // [bp-0x130]\n
    struct_1 *v2;  // [bp-0x128]\n
    struct_1 *v3;  // [bp-0x120]\n
    struct_1 *v4;  // [bp-0x118]\n
    char v5;  // [bp-0x109]\n
    unsigned int v6;  // [bp-0x108]\n
    unsigned int v7;  // [bp-0x104]\n
    char v8;  // [bp-0x100]\n
    char v9;  // [bp-0xe6]\n
    char v10[2];  // [bp-0xe0]\n
    unsigned short v11;  // [bp-0xd2]\n
    unsigned int *v12;  // [bp-0xd0]\n
    struct struct_0 **v13;  // [bp-0xc8]\n
    char v14;  // [bp-0xc0]\n
    unsigned short v15;  // [bp-0xba]\n
    unsigned int *v16;  // [bp-0xb8]\n
    struct struct_0 **v17;  // [bp-0xb0]\n
    char v18;  // [bp-0xa8]\n
    unsigned int v19;  // [bp-0x90]\n
    unsigned int *v20;  // [bp-0x88]\n
    struct struct_0 **v21;  // [bp-0x80]\n
    char v22;  // [bp-0x78]\n
    unsigned int v23;  // [bp-0x60]\n
    unsigned int *v24;  // [bp-0x58]\n
    struct struct_0 **v25;  // [bp-0x50]\n
    char v26;  // [bp-0x48]\n
    unsigned int v27;  // [bp-0x3c]\n
    unsigned int *v28;  // [bp-0x38]\n
    struct struct_0 **v29;  // [bp-0x30]\n
    unsigned long v30;  // [bp-0x28]\n
    unsigned short v31;  // [bp-0x1a]\n
    unsigned int *v32;  // [bp-0x18]\n
    struct struct_0 **v33;  // [bp-0x10]\n
    unsigned int *v35;  // rax\n
    struct struct_0 **v36;  // rax\n
    unsigned int *v37;  // rax\n
    struct struct_0 **v38;  // rax\n
    unsigned int *v39;  // rax\n
    struct struct_0 **v40;  // rax\n
    unsigned int *v41;  // rax\n
    struct struct_0 **v42;  // rax\n
    unsigned int *v43;  // rax\n
    struct struct_0 **v44;  // rax\n
    unsigned int *v45;  // rax\n
    struct struct_0 **v46;  // rax\n
    unsigned int *v47;  // rax\n
    struct struct_0 **v48;  // rax\n
    unsigned int *v49;  // rax, Other Possible Types: unsigned long\n
\n
    v7 = cgc__cookie;\n
    v6 = -1;\n
    if (cgc_sendline(1, \"===llamaAraneiformes===\", 23) < 0)\n
        cgc__terminate(1);\n
    v13 = a0;\n
    v12 = a1;\n
    *(&v10) = *(v13);\n
    memset(&v9, 0, 6);\n
    if (*(v12) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v10[0] << 8))\n
        v5 = v10[1];\n
    v11 = v5 & 1;\n
    cgc_uint2str(&v9, 6, v11);\n
    v4 = &v9;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v9)) < 0)\n
        cgc__terminate(1);\n
    v35 = v12;\n
    *(v35) = *(v35) - 2;\n
    v36 = v13;\n
    *(v36) = *(v36) + 2;\n
    v17 = a0;\n
    v16 = a1;\n
    memset(&v14, 0, 6);\n
    if (*(v16) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = *(&*(v17));\n
    cgc_uint2str(&v14, 6, v15);\n
    v3 = &v14;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v37 = v16;\n
    *(v37) = *(v37) - 2;\n
    v38 = v17;\n
    *(v38) = *(v38) + 2;\n
    v29 = a0;\n
    v28 = a1;\n
    memset(&v26, 0, 12);\n
    if (*(v28) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = *(&*(v29));\n
    cgc_uint2str(&v26, 12, v27);\n
    v2 = &v26;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v39 = v28;\n
    *(v39) = *(v39) - 4;\n
    v40 = v29;\n
    *(v40) = *(v40) + 4;\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 21);\n
    if (*(v24) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v23) = *(&*(v25));\n
    cgc_uint2str(&v22, 21, *(&v23));\n
    v1 = &v22;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v41 = v24;\n
    *(v41) = *(v41) - 8;\n
    v42 = v25;\n
    *(v42) = *(v42) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(&*(v33));\n
    v43 = v32;\n
    *(v43) = *(v43) - 2;\n
    v44 = v33;\n
    *(v44) = *(v44) + 2;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_43fac6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43fac6:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v45 = v32;\n
    *(v45) = *(v45) - v31;\n
    v46 = v33;\n
    *(v46) = &(*(v46))[v31];\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v21 = a0;\n
    v20 = a1;\n
    memset(&v18, 0, 21);\n
    if (*(v20) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v19) = *(&*(v21));\n
    cgc_uint2str(&v18, 21, *(&v19));\n
    v0 = &v18;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v47 = v20;\n
    *(v47) = *(v47) - 8;\n
    v48 = v21;\n
    *(v48) = *(v48) + 8;\n
    v7 ^= cgc__cookie;\n
    if (v7)\n
        cgc___stack_cookie_fail();\n
    v49 = a1;\n
    if (*(a1) > 0 && v6 >= 0)\n
    {\n
        v49 = v6;\n
        if (v49 < 0)\n
            v49 = *(&(&v8)[8 * v6])(a0, a1);\n
    }\n
    return v49;\n
}\n
", "4455671:sub_43fcf7": null, "4455680:cgc_process_llamascholasticly": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamascholasticly(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x488]\n
    unsigned int v1;  // [bp-0x47c]\n
    struct_0 *v2;  // [bp-0x478]\n
    unsigned int v3;  // [bp-0x46c]\n
    unsigned int v4;  // [bp-0x468]\n
    unsigned int v5;  // [bp-0x464]\n
    struct_0 *v6;  // [bp-0x460]\n
    char v7;  // [bp-0x451]\n
    struct_0 *v8;  // [bp-0x450]\n
    struct_0 *v9;  // [bp-0x448]\n
    struct_0 *v10;  // [bp-0x440]\n
    struct_0 *v11;  // [bp-0x438]\n
    struct_0 *v12;  // [bp-0x430]\n
    struct_0 *v13;  // [bp-0x428]\n
    char v14;  // [bp-0x41d]\n
    unsigned int v15;  // [bp-0x41c]\n
    struct_0 *v16;  // [bp-0x418]\n
    struct_0 *v17;  // [bp-0x410]\n
    struct_0 *v18;  // [bp-0x408]\n
    struct_0 *v19;  // [bp-0x400]\n
    struct_0 *v20;  // [bp-0x3f8]\n
    unsigned int v21;  // [bp-0x3ec]\n
    unsigned int v22;  // [bp-0x3e8]\n
    unsigned int v23;  // [bp-0x3e4]\n
    char v24;  // [bp-0x3e0]\n
    char v25;  // [bp-0x3c8]\n
    char v26[8];  // [bp-0x3a8]\n
    unsigned int v27;  // [bp-0x3a0]\n
    unsigned int *v28;  // [bp-0x398]\n
    struct struct_1 **v29;  // [bp-0x390]\n
    char v30;  // [bp-0x388]\n
    char v31[8];  // [bp-0x370]\n
    unsigned int v32;  // [bp-0x368]\n
    unsigned int *v33;  // [bp-0x360]\n
    struct struct_1 **v34;  // [bp-0x358]\n
    unsigned long v35;  // [bp-0x350]\n
    char v36;  // [bp-0x341]\n
    unsigned int *v37;  // [bp-0x340]\n
    struct struct_1 **v38;  // [bp-0x338]\n
    char *v39;  // [bp-0x330]\n
    unsigned int v40;  // [bp-0x324]\n
    unsigned int *v41;  // [bp-0x320]\n
    struct struct_1 **v42;  // [bp-0x318]\n
    char *v43;  // [bp-0x310]\n
    unsigned int v44;  // [bp-0x304]\n
    unsigned int *v45;  // [bp-0x300]\n
    struct struct_1 **v46;  // [bp-0x2f8]\n
    char v47;  // [bp-0x2f0]\n
    unsigned short v48;  // [bp-0x2ea]\n
    unsigned int *v49;  // [bp-0x2e8]\n
    struct struct_1 **v50;  // [bp-0x2e0]\n
    char v51;  // [bp-0x2d8]\n
    unsigned short v52;  // [bp-0x2d2]\n
    unsigned int *v53;  // [bp-0x2d0]\n
    struct struct_1 **v54;  // [bp-0x2c8]\n
    char v55;  // [bp-0x2c0]\n
    unsigned short v56;  // [bp-0x2ba]\n
    unsigned int *v57;  // [bp-0x2b8]\n
    struct struct_1 **v58;  // [bp-0x2b0]\n
    char v59;  // [bp-0x2a5]\n
    char v60;  // [bp-0x2a1]\n
    unsigned int *v61;  // [bp-0x2a0]\n
    struct struct_1 **v62;  // [bp-0x298]\n
    char v63;  // [bp-0x28d]\n
    char v64;  // [bp-0x289]\n
    unsigned int *v65;  // [bp-0x288]\n
    struct struct_1 **v66;  // [bp-0x280]\n
    char v67;  // [bp-0x278]\n
    unsigned int v68;  // [bp-0x260]\n
    unsigned int *v69;  // [bp-0x258]\n
    struct struct_1 **v70;  // [bp-0x250]\n
    char v71;  // [bp-0x248]\n
    unsigned int v72;  // [bp-0x23c]\n
    unsigned int *v73;  // [bp-0x238]\n
    struct struct_1 **v74;  // [bp-0x230]\n
    char v75;  // [bp-0x228]\n
    unsigned int v76;  // [bp-0x21c]\n
    unsigned int *v77;  // [bp-0x218]\n
    struct struct_1 **v78;  // [bp-0x210]\n
    char v79;  // [bp-0x208]\n
    unsigned int v80;  // [bp-0x1fc]\n
    unsigned int *v81;  // [bp-0x1f8]\n
    struct struct_1 **v82;  // [bp-0x1f0]\n
    char v83;  // [bp-0x1e8]\n
    unsigned int v84;  // [bp-0x1dc]\n
    unsigned int *v85;  // [bp-0x1d8]\n
    struct struct_1 **v86;  // [bp-0x1d0]\n
    unsigned long v87;  // [bp-0x1c8]\n
    unsigned short v88;  // [bp-0x1ba]\n
    unsigned int *v89;  // [bp-0x1b8]\n
    struct struct_1 **v90;  // [bp-0x1b0]\n
    unsigned long v91;  // [bp-0x1a8]\n
    unsigned short v92;  // [bp-0x19a]\n
    unsigned int *v93;  // [bp-0x198]\n
    struct struct_1 **v94;  // [bp-0x190]\n
    unsigned long v95;  // [bp-0x188]\n
    unsigned short v96;  // [bp-0x17a]\n
    unsigned int *v97;  // [bp-0x178]\n
    struct struct_1 **v98;  // [bp-0x170]\n
    unsigned long v99;  // [bp-0x168]\n
    unsigned short v100;  // [bp-0x15a]\n
    unsigned int *v101;  // [bp-0x158]\n
    struct struct_1 **v102;  // [bp-0x150]\n
    unsigned long v103;  // [bp-0x148]\n
    unsigned short v104;  // [bp-0x13a]\n
    unsigned int *v105;  // [bp-0x138]\n
    struct struct_1 **v106;  // [bp-0x130]\n
    char *v107;  // [bp-0x128]\n
    unsigned int v108;  // [bp-0x11c]\n
    unsigned int *v109;  // [bp-0x118]\n
    struct struct_1 **v110;  // [bp-0x110]\n
    char *v111;  // [bp-0x108]\n
    unsigned int v112;  // [bp-0xfc]\n
    unsigned int *v113;  // [bp-0xf8]\n
    struct struct_1 **v114;  // [bp-0xf0]\n
    char *v115;  // [bp-0xe8]\n
    unsigned int v116;  // [bp-0xdc]\n
    unsigned int *v117;  // [bp-0xd8]\n
    struct struct_1 **v118;  // [bp-0xd0]\n
    char *v119;  // [bp-0xc8]\n
    unsigned int v120;  // [bp-0xbc]\n
    unsigned int *v121;  // [bp-0xb8]\n
    struct struct_1 **v122;  // [bp-0xb0]\n
    char v123;  // [bp-0xa8]\n
    unsigned int v124;  // [bp-0x90]\n
    unsigned int *v125;  // [bp-0x88]\n
    struct struct_1 **v126;  // [bp-0x80]\n
    char v127;  // [bp-0x78]\n
    unsigned int v128;  // [bp-0x60]\n
    unsigned int *v129;  // [bp-0x58]\n
    struct struct_1 **v130;  // [bp-0x50]\n
    unsigned long v131;  // [bp-0x48]\n
    char v132;  // [bp-0x39]\n
    unsigned int *v133;  // [bp-0x38]\n
    struct struct_1 **v134;  // [bp-0x30]\n
    unsigned long v135;  // [bp-0x28]\n
    char v136;  // [bp-0x19]\n
    unsigned int *v137;  // [bp-0x18]\n
    struct struct_1 **v138;  // [bp-0x10]\n
    unsigned int *v140;  // rax\n
    struct struct_1 **v141;  // rax\n
    struct struct_1 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_1 **v145;  // rax\n
    unsigned int *v147;  // rax\n
    unsigned int *v148;  // rax\n
    struct struct_1 **v149;  // rax\n
    unsigned int *v150;  // rax\n
    struct struct_1 **v151;  // rax\n
    struct struct_1 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    unsigned int *v154;  // rax\n
    struct struct_1 **v155;  // rax\n
    unsigned int *v156;  // rax\n
    struct struct_1 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    struct struct_1 **v159;  // rax\n
    unsigned int *v160;  // rax\n
    struct struct_1 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    struct struct_1 **v163;  // rax\n
    unsigned int *v164;  // rax\n
    struct struct_1 **v165;  // rax\n
    struct struct_1 **v167;  // rax\n
    unsigned int *v169;  // rax\n
    unsigned int *v170;  // rax\n
    struct struct_1 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_1 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_1 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_1 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_1 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_1 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_1 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_1 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_1 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_1 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_1 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_1 **v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_1 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_1 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_1 **v199;  // rax\n
    struct struct_1 **v201;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_1 **v205;  // rax\n
    unsigned int *v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_1 **v209;  // rax\n
    struct struct_1 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_1 **v213;  // rax\n
    unsigned int *v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_1 **v217;  // rax\n
    struct struct_1 **v219;  // rax\n
    unsigned int *v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_1 **v223;  // rax\n
    unsigned int *v224;  // rax, Other Possible Types: unsigned long\n
\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamascholasticly===\", 23) < 0)\n
        cgc__terminate(1);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v140 = v37;\n
    *(v140) = *(v140) - 1;\n
    v141 = v38;\n
    *(v141) = *(v141) + 1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_43fe4a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_43fe4a:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v142 = v38;\n
    *(v142) = &(*(v142))[v36];\n
    v143 = v37;\n
    *(v143) = *(v143) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v122 = a0;\n
    v121 = a1;\n
    if (*(v121) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v121) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v121);\n
    v120 = v21;\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = cgc_calloc(134);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v119, \"Str: \");\n
    cgc_strncpy(v119 + 5, *(v122), v120);\n
    v145 = v122;\n
    *(v145) = &(*(v145))[4 + cgc_strlen(v119)];\n
    v147 = v121;\n
    *(v147) = *(v147) - (cgc_strlen(v119) + -4);\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v58 = a0;\n
    v57 = a1;\n
    memset(&v55, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(&*(v58));\n
    cgc_uint2str(&v55, 6, v56);\n
    v20 = &v55;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v148 = v57;\n
    *(v148) = *(v148) - 2;\n
    v149 = v58;\n
    *(v149) = *(v149) + 2;\n
    v138 = a0;\n
    v137 = a1;\n
    if (*(v137) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v136 = *(v138)->field_0;\n
    v150 = v137;\n
    *(v150) = *(v150) - 1;\n
    v151 = v138;\n
    *(v151) = *(v151) + 1;\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_4402f1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4402f1:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v152 = v138;\n
    *(v152) = &(*(v152))[v136];\n
    v153 = v137;\n
    *(v153) = *(v153) - v136;\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v66 = a0;\n
    v65 = a1;\n
    memset(&v63, 0, 4);\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    cgc_uint2str(&v63, 4, v64);\n
    v19 = &v63;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v154 = v65;\n
    *(v154) = *(v154) - 1;\n
    v155 = v66;\n
    *(v155) = *(v155) + 1;\n
    v130 = a0;\n
    v129 = a1;\n
    memset(&v127, 0, 21);\n
    if (*(v129) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v128) = *(&*(v130));\n
    cgc_uint2str(&v127, 21, *(&v128));\n
    v18 = &v127;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v127)) < 0)\n
        cgc__terminate(1);\n
    v156 = v129;\n
    *(v156) = *(v156) - 8;\n
    v157 = v130;\n
    *(v157) = *(v157) + 8;\n
    v126 = a0;\n
    v125 = a1;\n
    memset(&v123, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v124) = *(&*(v126));\n
    cgc_uint2str(&v123, 21, *(&v124));\n
    v17 = &v123;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v158 = v125;\n
    *(v158) = *(v158) - 8;\n
    v159 = v126;\n
    *(v159) = *(v159) + 8;\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(&*(v82));\n
    cgc_uint2str(&v79, 12, v80);\n
    v16 = &v79;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v160 = v81;\n
    *(v160) = *(v160) - 4;\n
    v161 = v82;\n
    *(v161) = *(v161) + 4;\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(&*(v94));\n
    v162 = v93;\n
    *(v162) = *(v162) - 2;\n
    v163 = v94;\n
    *(v163) = *(v163) + 2;\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_440879;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_440879:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v164 = v93;\n
    *(v164) = *(v164) - v92;\n
    v165 = v94;\n
    *(v165) = &(*(v165))[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v46 = a0;\n
    v45 = a1;\n
    if (*(v45) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v45) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v45);\n
    v44 = v15;\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = cgc_calloc(134);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v43, \"Str: \");\n
    cgc_strncpy(v43 + 5, *(v46), v44);\n
    v167 = v46;\n
    *(v167) = &(*(v167))[4 + cgc_strlen(v43)];\n
    v169 = v45;\n
    *(v169) = *(v169) - (cgc_strlen(v43) + -4);\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31[0]) = *(v34);\n
    memset(&v30, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v31[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v31[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v31[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v31[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v31[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v31[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v31[6] << 8))\n
                                v14 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v32) = v14 & 1;\n
    cgc_uint2str(&v30, 21, *(&v32));\n
    v13 = &v30;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v170 = v33;\n
    *(v170) = *(v170) - 8;\n
    v171 = v34;\n
    *(v171) = *(v171) + 8;\n
    v62 = a0;\n
    v61 = a1;\n
    memset(&v59, 0, 4);\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(v62)->field_0;\n
    cgc_uint2str(&v59, 4, v60);\n
    v12 = &v59;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v59)) < 0)\n
        cgc__terminate(1);\n
    v172 = v61;\n
    *(v172) = *(v172) - 1;\n
    v173 = v62;\n
    *(v173) = *(v173) + 1;\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 12);\n
    if (*(v77) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 12, v76);\n
    v11 = &v75;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v174 = v77;\n
    *(v174) = *(v174) - 4;\n
    v175 = v78;\n
    *(v175) = *(v175) + 4;\n
    v106 = a0;\n
    v105 = a1;\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v104 = *(&*(v106));\n
    v176 = v105;\n
    *(v176) = *(v176) - 2;\n
    v177 = v106;\n
    *(v177) = *(v177) + 2;\n
    if (v104 <= *(v105) && !(!v104))\n
        goto LABEL_441055;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_441055:\n
    v103 = cgc_calloc(v104);\n
    if (!v103)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v103, *(v106), v104);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v178 = v105;\n
    *(v178) = *(v178) - v104;\n
    v179 = v106;\n
    *(v179) = &(*(v179))[v104];\n
    cgc_checkheap();\n
    cgc_free(v103);\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(&*(v54));\n
    cgc_uint2str(&v51, 6, v52);\n
    v10 = &v51;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v180 = v53;\n
    *(v180) = *(v180) - 2;\n
    v181 = v54;\n
    *(v181) = *(v181) + 2;\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(&*(v90));\n
    v182 = v89;\n
    *(v182) = *(v182) - 2;\n
    v183 = v90;\n
    *(v183) = *(v183) + 2;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_441329;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_441329:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v184 = v89;\n
    *(v184) = *(v184) - v88;\n
    v185 = v90;\n
    *(v185) = &(*(v185))[v88];\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v68) = *(&*(v70));\n
    cgc_uint2str(&v67, 21, *(&v68));\n
    v9 = &v67;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v186 = v69;\n
    *(v186) = *(v186) - 8;\n
    v187 = v70;\n
    *(v187) = *(v187) + 8;\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 6);\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(&*(v50));\n
    cgc_uint2str(&v47, 6, v48);\n
    v8 = &v47;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v188 = v49;\n
    *(v188) = *(v188) - 2;\n
    v189 = v50;\n
    *(v189) = *(v189) + 2;\n
    v102 = a0;\n
    v101 = a1;\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(&*(v102));\n
    v190 = v101;\n
    *(v190) = *(v190) - 2;\n
    v191 = v102;\n
    *(v191) = *(v191) + 2;\n
    if (v100 <= *(v101) && !(!v100))\n
        goto LABEL_441707;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_441707:\n
    v99 = cgc_calloc(v100);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v99, *(v102), v100);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v192 = v101;\n
    *(v192) = *(v192) - v100;\n
    v193 = v102;\n
    *(v193) = &(*(v193))[v100];\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26[0]) = *(v29);\n
    memset(&v25, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v26[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v26[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v26[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v26[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v26[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v26[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v26[6] << 8))\n
                                v7 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v27) = v7 & 1;\n
    cgc_uint2str(&v25, 21, *(&v27));\n
    v6 = &v25;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v194 = v28;\n
    *(v194) = *(v194) - 8;\n
    v195 = v29;\n
    *(v195) = *(v195) + 8;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(&*(v98));\n
    v196 = v97;\n
    *(v196) = *(v196) - 2;\n
    v197 = v98;\n
    *(v197) = *(v197) + 2;\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_441aed;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_441aed:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v198 = v97;\n
    *(v198) = *(v198) - v96;\n
    v199 = v98;\n
    *(v199) = &(*(v199))[v96];\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v118 = a0;\n
    v117 = a1;\n
    if (*(v117) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v117) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v117);\n
    v116 = v5;\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = cgc_calloc(134);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v115, \"Str: \");\n
    cgc_strncpy(v115 + 5, *(v118), v116);\n
    v201 = v118;\n
    *(v201) = &(*(v201))[4 + cgc_strlen(v115)];\n
    v203 = v117;\n
    *(v203) = *(v203) - (cgc_strlen(v115) + -4);\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v41) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v41);\n
    v40 = v4;\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = cgc_calloc(134);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v39, \"Str: \");\n
    cgc_strncpy(v39 + 5, *(v42), v40);\n
    v205 = v42;\n
    *(v205) = &(*(v205))[4 + cgc_strlen(v39)];\n
    v207 = v41;\n
    *(v207) = *(v207) - (cgc_strlen(v39) + -4);\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v134 = a0;\n
    v133 = a1;\n
    if (*(v133) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v132 = *(v134)->field_0;\n
    v208 = v133;\n
    *(v208) = *(v208) - 1;\n
    v209 = v134;\n
    *(v209) = *(v209) + 1;\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_442083;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_442083:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v210 = v134;\n
    *(v210) = &(*(v210))[v132];\n
    v211 = v133;\n
    *(v211) = *(v211) - v132;\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v114 = a0;\n
    v113 = a1;\n
    if (*(v113) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v113) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v113);\n
    v112 = v3;\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = cgc_calloc(134);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v111, \"Str: \");\n
    cgc_strncpy(v111 + 5, *(v114), v112);\n
    v213 = v114;\n
    *(v213) = &(*(v213))[4 + cgc_strlen(v111)];\n
    v215 = v113;\n
    *(v215) = *(v215) - (cgc_strlen(v111) + -4);\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v86 = a0;\n
    v85 = a1;\n
    memset(&v83, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    cgc_uint2str(&v83, 12, v84);\n
    v2 = &v83;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v216 = v85;\n
    *(v216) = *(v216) - 4;\n
    v217 = v86;\n
    *(v217) = *(v217) + 4;\n
    v110 = a0;\n
    v109 = a1;\n
    if (*(v109) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v109) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v109);\n
    v108 = v1;\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = cgc_calloc(134);\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v107, \"Str: \");\n
    cgc_strncpy(v107 + 5, *(v110), v108);\n
    v219 = v110;\n
    *(v219) = &(*(v219))[4 + cgc_strlen(v107)];\n
    v221 = v109;\n
    *(v221) = *(v221) - (cgc_strlen(v107) + -4);\n
    cgc_checkheap();\n
    cgc_free(v107);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 12);\n
    if (*(v73) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    cgc_uint2str(&v71, 12, v72);\n
    v0 = &v71;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v222 = v73;\n
    *(v222) = *(v222) - 4;\n
    v223 = v74;\n
    *(v223) = *(v223) + 4;\n
    v23 ^= cgc__cookie;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v224 = a1;\n
    if (*(a1) > 0 && v22 >= 0)\n
    {\n
        v224 = v22;\n
        if (v224 < 0)\n
            v224 = *(&(&v24)[8 * v22])(a0, a1);\n
    }\n
    return v224;\n
}\n
", "4466605:sub_4427ad": null, "4466608:cgc_process_llamaadulterously": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6210;\n
extern unsigned long long g_4c6218;\n
extern unsigned long long g_4c6220;\n
extern unsigned long long g_4c6228;\n
\n
long long cgc_process_llamaadulterously(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0xf0]\n
    struct_0 *v1;  // [bp-0xe8]\n
    struct_0 *v2;  // [bp-0xe0]\n
    char v3;  // [bp-0xd1]\n
    unsigned int v4;  // [bp-0xd0]\n
    unsigned int v5;  // [bp-0xcc]\n
    unsigned long v6;  // [bp-0xc8]\n
    unsigned long v7;  // [bp-0xc0]\n
    unsigned long v8;  // [bp-0xb8]\n
    unsigned long v9;  // [bp-0xb0]\n
    char v10;  // [bp-0x8e]\n
    char v11[2];  // [bp-0x88]\n
    unsigned short v12;  // [bp-0x7a]\n
    unsigned int *v13;  // [bp-0x78]\n
    struct struct_1 **v14;  // [bp-0x70]\n
    char *v15;  // [bp-0x68]\n
    unsigned int *v16;  // [bp-0x60]\n
    struct struct_1 **v17;  // [bp-0x58]\n
    char v18;  // [bp-0x50]\n
    unsigned short v19;  // [bp-0x4a]\n
    unsigned int *v20;  // [bp-0x48]\n
    struct struct_1 **v21;  // [bp-0x40]\n
    char v22;  // [bp-0x38]\n
    unsigned int v23;  // [bp-0x20]\n
    unsigned int *v24;  // [bp-0x18]\n
    struct struct_1 **v25;  // [bp-0x10]\n
    unsigned int *v27;  // rax\n
    struct struct_1 **v28;  // rax\n
    unsigned int *v29;  // rax\n
    struct struct_1 **v30;  // rax\n
    unsigned int *v31;  // rax\n
    struct struct_1 **v32;  // rax\n
    unsigned int *v33;  // rax\n
    struct struct_1 **v34;  // rax\n
    unsigned int *v35;  // rax, Other Possible Types: unsigned long\n
\n
    v6 = g_4c6210;\n
    v7 = g_4c6218;\n
    v8 = g_4c6220;\n
    v9 = g_4c6228;\n
    v5 = cgc__cookie;\n
    v4 = -1;\n
    if (cgc_sendline(1, \"===llamaadulterously===\", 23) < 0)\n
        cgc__terminate(1);\n
    v14 = a0;\n
    v13 = a1;\n
    *(&v11) = *(v14);\n
    memset(&v10, 0, 6);\n
    if (*(v13) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v11[0] << 8))\n
        v3 = v11[1];\n
    v12 = v3 & 1;\n
    cgc_uint2str(&v10, 6, v12);\n
    v2 = &v10;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v10)) < 0)\n
        cgc__terminate(1);\n
    v27 = v13;\n
    *(v27) = *(v27) - 2;\n
    v28 = v14;\n
    *(v28) = *(v28) + 2;\n
    v21 = a0;\n
    v20 = a1;\n
    memset(&v18, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(&*(v21));\n
    cgc_uint2str(&v18, 6, v19);\n
    v1 = &v18;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v29 = v20;\n
    *(v29) = *(v29) - 2;\n
    v30 = v21;\n
    *(v30) = *(v30) + 2;\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 21);\n
    if (*(v24) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v23) = *(&*(v25));\n
    cgc_uint2str(&v22, 21, *(&v23));\n
    v0 = &v22;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v31 = v24;\n
    *(v31) = *(v31) - 8;\n
    v32 = v25;\n
    *(v32) = *(v32) + 8;\n
    v17 = a0;\n
    v16 = a1;\n
    v15 = &*(v17)->field_0;\n
    if (*(v16) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = v16;\n
    *(v33) = *(v33) - 1;\n
    v34 = v17;\n
    *(v34) = *(v34) + 1;\n
    v4 = *(v15);\n
    v5 ^= cgc__cookie;\n
    if (v5)\n
        cgc___stack_cookie_fail();\n
    v35 = a1;\n
    if (*(a1) > 0 && v4 >= 0)\n
    {\n
        v35 = v4;\n
        if (v35 < 4)\n
            v35 = (&v6)[v4](a0, a1);\n
    }\n
    return v35;\n
}\n
", "4467768:sub_442c38": null, "4467776:cgc_process_llamasporocyst": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasporocyst(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x4b8]\n
    unsigned int v1;  // [bp-0x4ac]\n
    struct_1 *v2;  // [bp-0x4a8]\n
    char v3;  // [bp-0x499]\n
    struct_1 *v4;  // [bp-0x498]\n
    struct_1 *v5;  // [bp-0x490]\n
    struct_1 *v6;  // [bp-0x488]\n
    unsigned int v7;  // [bp-0x47c]\n
    struct_1 *v8;  // [bp-0x478]\n
    char v9;  // [bp-0x469]\n
    struct_1 *v10;  // [bp-0x468]\n
    struct_1 *v11;  // [bp-0x460]\n
    struct_1 *v12;  // [bp-0x458]\n
    char v13;  // [bp-0x44d]\n
    unsigned int v14;  // [bp-0x44c]\n
    struct_1 *v15;  // [bp-0x448]\n
    unsigned int v16;  // [bp-0x43c]\n
    struct_1 *v17;  // [bp-0x438]\n
    struct_1 *v18;  // [bp-0x430]\n
    char v19;  // [bp-0x421]\n
    struct_1 *v20;  // [bp-0x420]\n
    struct_1 *v21;  // [bp-0x418]\n
    struct_1 *v22;  // [bp-0x410]\n
    unsigned int v23;  // [bp-0x404]\n
    struct_1 *v24;  // [bp-0x400]\n
    struct_1 *v25;  // [bp-0x3f8]\n
    unsigned int v26;  // [bp-0x3f0]\n
    unsigned int v27;  // [bp-0x3ec]\n
    char v28;  // [bp-0x3e8]\n
    char v29;  // [bp-0x3ce]\n
    char *v30;  // [bp-0x3c8]\n
    unsigned short v31;  // [bp-0x3ba]\n
    unsigned int *v32;  // [bp-0x3b8]\n
    struct struct_0 **v33;  // [bp-0x3b0]\n
    char v34;  // [bp-0x3a8]\n
    char v35[8];  // [bp-0x388]\n
    unsigned int v36;  // [bp-0x380]\n
    unsigned int *v37;  // [bp-0x378]\n
    struct struct_0 **v38;  // [bp-0x370]\n
    unsigned long v39;  // [bp-0x368]\n
    char v40;  // [bp-0x359]\n
    unsigned int *v41;  // [bp-0x358]\n
    struct struct_0 **v42;  // [bp-0x350]\n
    char *v43;  // [bp-0x348]\n
    unsigned int v44;  // [bp-0x33c]\n
    unsigned int *v45;  // [bp-0x338]\n
    struct struct_0 **v46;  // [bp-0x330]\n
    char *v47;  // [bp-0x328]\n
    unsigned int v48;  // [bp-0x31c]\n
    unsigned int *v49;  // [bp-0x318]\n
    struct struct_0 **v50;  // [bp-0x310]\n
    char v51;  // [bp-0x308]\n
    unsigned short v52;  // [bp-0x302]\n
    unsigned int *v53;  // [bp-0x300]\n
    struct struct_0 **v54;  // [bp-0x2f8]\n
    char v55;  // [bp-0x2ed]\n
    char v56;  // [bp-0x2e9]\n
    unsigned int *v57;  // [bp-0x2e8]\n
    struct struct_0 **v58;  // [bp-0x2e0]\n
    char v59;  // [bp-0x2d8]\n
    unsigned int v60;  // [bp-0x2c0]\n
    unsigned int *v61;  // [bp-0x2b8]\n
    struct struct_0 **v62;  // [bp-0x2b0]\n
    char v63;  // [bp-0x2a8]\n
    unsigned int v64;  // [bp-0x290]\n
    unsigned int *v65;  // [bp-0x288]\n
    struct struct_0 **v66;  // [bp-0x280]\n
    char v67;  // [bp-0x278]\n
    unsigned int v68;  // [bp-0x26c]\n
    unsigned int *v69;  // [bp-0x268]\n
    struct struct_0 **v70;  // [bp-0x260]\n
    char v71;  // [bp-0x258]\n
    unsigned int v72;  // [bp-0x24c]\n
    unsigned int *v73;  // [bp-0x248]\n
    struct struct_0 **v74;  // [bp-0x240]\n
    char v75;  // [bp-0x238]\n
    unsigned int v76;  // [bp-0x22c]\n
    unsigned int *v77;  // [bp-0x228]\n
    struct struct_0 **v78;  // [bp-0x220]\n
    char v79;  // [bp-0x218]\n
    unsigned int v80;  // [bp-0x20c]\n
    unsigned int *v81;  // [bp-0x208]\n
    struct struct_0 **v82;  // [bp-0x200]\n
    char v83;  // [bp-0x1f8]\n
    unsigned int v84;  // [bp-0x1ec]\n
    unsigned int *v85;  // [bp-0x1e8]\n
    struct struct_0 **v86;  // [bp-0x1e0]\n
    char v87;  // [bp-0x1d8]\n
    unsigned int v88;  // [bp-0x1cc]\n
    unsigned int *v89;  // [bp-0x1c8]\n
    struct struct_0 **v90;  // [bp-0x1c0]\n
    unsigned long v91;  // [bp-0x1b8]\n
    unsigned short v92;  // [bp-0x1aa]\n
    unsigned int *v93;  // [bp-0x1a8]\n
    struct struct_0 **v94;  // [bp-0x1a0]\n
    unsigned long v95;  // [bp-0x198]\n
    unsigned short v96;  // [bp-0x18a]\n
    unsigned int *v97;  // [bp-0x188]\n
    struct struct_0 **v98;  // [bp-0x180]\n
    unsigned long v99;  // [bp-0x178]\n
    unsigned short v100;  // [bp-0x16a]\n
    unsigned int *v101;  // [bp-0x168]\n
    struct struct_0 **v102;  // [bp-0x160]\n
    char v103;  // [bp-0x154]\n
    char v104[4];  // [bp-0x148]\n
    unsigned int v105;  // [bp-0x13c]\n
    unsigned int *v106;  // [bp-0x138]\n
    struct struct_0 **v107;  // [bp-0x130]\n
    char v108;  // [bp-0x124]\n
    char *v109;  // [bp-0x118]\n
    unsigned int v110;  // [bp-0x10c]\n
    unsigned int *v111;  // [bp-0x108]\n
    struct struct_0 **v112;  // [bp-0x100]\n
    char *v113;  // [bp-0xf8]\n
    unsigned int v114;  // [bp-0xec]\n
    unsigned int *v115;  // [bp-0xe8]\n
    struct struct_0 **v116;  // [bp-0xe0]\n
    char *v117;  // [bp-0xd8]\n
    unsigned int v118;  // [bp-0xcc]\n
    unsigned int *v119;  // [bp-0xc8]\n
    struct struct_0 **v120;  // [bp-0xc0]\n
    char *v121;  // [bp-0xb8]\n
    unsigned int v122;  // [bp-0xac]\n
    unsigned int *v123;  // [bp-0xa8]\n
    struct struct_0 **v124;  // [bp-0xa0]\n
    char v125;  // [bp-0x98]\n
    unsigned int v126;  // [bp-0x80]\n
    unsigned int *v127;  // [bp-0x78]\n
    struct struct_0 **v128;  // [bp-0x70]\n
    char v129;  // [bp-0x68]\n
    unsigned int v130;  // [bp-0x50]\n
    unsigned int *v131;  // [bp-0x48]\n
    struct struct_0 **v132;  // [bp-0x40]\n
    char v133;  // [bp-0x38]\n
    unsigned int v134;  // [bp-0x20]\n
    unsigned int *v135;  // [bp-0x18]\n
    struct struct_0 **v136;  // [bp-0x10]\n
    unsigned int *v138;  // rax\n
    struct struct_0 **v139;  // rax\n
    unsigned int *v140;  // rax\n
    struct struct_0 **v141;  // rax\n
    unsigned int *v142;  // rax\n
    struct struct_0 **v143;  // rax\n
    unsigned int *v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v149;  // rax\n
    unsigned int *v150;  // rax\n
    struct struct_0 **v151;  // rax\n
    unsigned int *v152;  // rax\n
    struct struct_0 **v153;  // rax\n
    unsigned int *v154;  // rax\n
    struct struct_0 **v155;  // rax\n
    unsigned int *v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    struct struct_0 **v159;  // rax\n
    struct struct_0 **v161;  // rax\n
    unsigned int *v163;  // rax\n
    unsigned int *v164;  // rax\n
    struct struct_0 **v165;  // rax\n
    unsigned int *v166;  // rax\n
    struct struct_0 **v167;  // rax\n
    unsigned int *v168;  // rax\n
    struct struct_0 **v169;  // rax\n
    struct struct_0 **v171;  // rax\n
    unsigned int *v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax, Other Possible Types: unsigned long\n
\n
    v27 = cgc__cookie;\n
    v26 = -1;\n
    if (cgc_sendline(1, \"===llamasporocyst===\", 20) < 0)\n
        cgc__terminate(1);\n
    v102 = a0;\n
    v101 = a1;\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(&*(v102));\n
    v138 = v101;\n
    *(v138) = *(v138) - 2;\n
    v139 = v102;\n
    *(v139) = *(v139) + 2;\n
    if (v100 <= *(v101) && !(!v100))\n
        goto LABEL_442d8c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_442d8c:\n
    v99 = cgc_calloc(v100);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v99, *(v102), v100);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v140 = v101;\n
    *(v140) = *(v140) - v100;\n
    v141 = v102;\n
    *(v141) = &(*(v141))[v100];\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    v66 = a0;\n
    v65 = a1;\n
    memset(&v63, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v64) = *(&*(v66));\n
    cgc_uint2str(&v63, 21, *(&v64));\n
    v25 = &v63;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v142 = v65;\n
    *(v142) = *(v142) - 8;\n
    v143 = v66;\n
    *(v143) = *(v143) + 8;\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 12);\n
    if (*(v73) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    cgc_uint2str(&v71, 12, v72);\n
    v24 = &v71;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v144 = v73;\n
    *(v144) = *(v144) - 4;\n
    v145 = v74;\n
    *(v145) = *(v145) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    if (*(v49) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v49) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v49);\n
    v48 = v23;\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = cgc_calloc(134);\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v47, \"Str: \");\n
    cgc_strncpy(v47 + 5, *(v50), v48);\n
    v147 = v50;\n
    *(v147) = &(*(v147))[4 + cgc_strlen(v47)];\n
    v149 = v49;\n
    *(v149) = *(v149) - (cgc_strlen(v47) + -4);\n
    cgc_checkheap();\n
    cgc_free(v47);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v90 = a0;\n
    v89 = a1;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(&*(v90));\n
    cgc_uint2str(&v87, 12, v88);\n
    v22 = &v87;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v150 = v89;\n
    *(v150) = *(v150) - 4;\n
    v151 = v90;\n
    *(v151) = *(v151) + 4;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v134) = *(&*(v136));\n
    cgc_uint2str(&v133, 21, *(&v134));\n
    v21 = &v133;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v152 = v135;\n
    *(v152) = *(v152) - 8;\n
    v153 = v136;\n
    *(v153) = *(v153) + 8;\n
    v58 = a0;\n
    v57 = a1;\n
    memset(&v55, 0, 4);\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(v58)->field_0;\n
    cgc_uint2str(&v55, 4, v56);\n
    v20 = &v55;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v154 = v57;\n
    *(v154) = *(v154) - 1;\n
    v155 = v58;\n
    *(v155) = *(v155) + 1;\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35[0]) = *(v38);\n
    memset(&v34, 0, 21);\n
    if (*(v37) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if (v35[0] << 56)\n
    {\n
        v19 = 0;\n
        if (v35[1] << 48)\n
        {\n
            v19 = 0;\n
            if (v35[2] << 40)\n
            {\n
                v19 = 0;\n
                if (v35[3] << 32)\n
                {\n
                    v19 = 0;\n
                    if ((v35[4] << 24))\n
                    {\n
                        v19 = 0;\n
                        if ((v35[5] << 16))\n
                        {\n
                            v19 = 0;\n
                            if ((v35[6] << 8))\n
                                v19 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v36) = v19 & 1;\n
    cgc_uint2str(&v34, 21, *(&v36));\n
    v18 = &v34;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v156 = v37;\n
    *(v156) = *(v156) - 8;\n
    v157 = v38;\n
    *(v157) = *(v157) + 8;\n
    v86 = a0;\n
    v85 = a1;\n
    memset(&v83, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    cgc_uint2str(&v83, 12, v84);\n
    v17 = &v83;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v158 = v85;\n
    *(v158) = *(v158) - 4;\n
    v159 = v86;\n
    *(v159) = *(v159) + 4;\n
    v124 = a0;\n
    v123 = a1;\n
    if (*(v123) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v123) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v123);\n
    v122 = v16;\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = cgc_calloc(134);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v121, \"Str: \");\n
    cgc_strncpy(v121 + 5, *(v124), v122);\n
    v161 = v124;\n
    *(v161) = &(*(v161))[4 + cgc_strlen(v121)];\n
    v163 = v123;\n
    *(v163) = *(v163) - (cgc_strlen(v121) + -4);\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(&*(v54));\n
    cgc_uint2str(&v51, 6, v52);\n
    v15 = &v51;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v164 = v53;\n
    *(v164) = *(v164) - 2;\n
    v165 = v54;\n
    *(v165) = *(v165) + 2;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(&*(v98));\n
    v166 = v97;\n
    *(v166) = *(v166) - 2;\n
    v167 = v98;\n
    *(v167) = *(v167) + 2;\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_443c5f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_443c5f:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v168 = v97;\n
    *(v168) = *(v168) - v96;\n
    v169 = v98;\n
    *(v169) = &(*(v169))[v96];\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v46 = a0;\n
    v45 = a1;\n
    if (*(v45) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v45) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v45);\n
    v44 = v14;\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = cgc_calloc(134);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v43, \"Str: \");\n
    cgc_strncpy(v43 + 5, *(v46), v44);\n
    v171 = v46;\n
    *(v171) = &(*(v171))[4 + cgc_strlen(v43)];\n
    v173 = v45;\n
    *(v173) = *(v173) - (cgc_strlen(v43) + -4);\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v112 = a0;\n
    v111 = a1;\n
    v109 = &*(v112)->field_0;\n
    memset(&v108, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((*(v109) << 24))\n
    {\n
        v13 = 0;\n
        if ((v109[1] << 16))\n
        {\n
            v13 = 0;\n
            if ((v109[2] << 8))\n
                v13 = v109[3];\n
        }\n
    }\n
    v110 = v13 & 1;\n
    cgc_uint2str(&v108, 12, v110);\n
    v12 = &v108;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v174 = v111;\n
    *(v174) = *(v174) - 4;\n
    v175 = v112;\n
    *(v175) = *(v175) + 4;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 21);\n
    if (*(v131) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v130) = *(&*(v132));\n
    cgc_uint2str(&v129, 21, *(&v130));\n
    v11 = &v129;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v176 = v131;\n
    *(v176) = *(v176) - 8;\n
    v177 = v132;\n
    *(v177) = *(v177) + 8;\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(&*(v82));\n
    cgc_uint2str(&v79, 12, v80);\n
    v10 = &v79;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v178 = v81;\n
    *(v178) = *(v178) - 4;\n
    v179 = v82;\n
    *(v179) = *(v179) + 4;\n
    v33 = a0;\n
    v32 = a1;\n
    v30 = &*(v33)->field_0;\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((*(v30) << 8))\n
        v9 = v30[1];\n
    v31 = v9 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v8 = &v29;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v180 = v32;\n
    *(v180) = *(v180) - 2;\n
    v181 = v33;\n
    *(v181) = *(v181) + 2;\n
    v120 = a0;\n
    v119 = a1;\n
    if (*(v119) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v119) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v119);\n
    v118 = v7;\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = cgc_calloc(134);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v117, \"Str: \");\n
    cgc_strncpy(v117 + 5, *(v120), v118);\n
    v183 = v120;\n
    *(v183) = &(*(v183))[4 + cgc_strlen(v117)];\n
    v185 = v119;\n
    *(v185) = *(v185) - (cgc_strlen(v117) + -4);\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = *(v42)->field_0;\n
    v186 = v41;\n
    *(v186) = *(v186) - 1;\n
    v187 = v42;\n
    *(v187) = *(v187) + 1;\n
    if (v40 <= *(v41) && !(!v40))\n
        goto LABEL_4446cb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4446cb:\n
    v39 = cgc_calloc(v40);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v39, *(v42), v40);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v188 = v42;\n
    *(v188) = &(*(v188))[v40];\n
    v189 = v41;\n
    *(v189) = *(v189) - v40;\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 12);\n
    if (*(v69) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(&*(v70));\n
    cgc_uint2str(&v67, 12, v68);\n
    v6 = &v67;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v190 = v69;\n
    *(v190) = *(v190) - 4;\n
    v191 = v70;\n
    *(v191) = *(v191) + 4;\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 21);\n
    if (*(v127) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v126) = *(&*(v128));\n
    cgc_uint2str(&v125, 21, *(&v126));\n
    v5 = &v125;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v192 = v127;\n
    *(v192) = *(v192) - 8;\n
    v193 = v128;\n
    *(v193) = *(v193) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 12);\n
    if (*(v77) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 12, v76);\n
    v4 = &v75;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v194 = v77;\n
    *(v194) = *(v194) - 4;\n
    v195 = v78;\n
    *(v195) = *(v195) + 4;\n
    v107 = a0;\n
    v106 = a1;\n
    *(&v104) = *(v107);\n
    memset(&v103, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v104[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v104[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v104[2] << 8))\n
                v3 = v104[3];\n
        }\n
    }\n
    v105 = v3 & 1;\n
    cgc_uint2str(&v103, 12, v105);\n
    v2 = &v103;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v196 = v106;\n
    *(v196) = *(v196) - 4;\n
    v197 = v107;\n
    *(v197) = *(v197) + 4;\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(&*(v94));\n
    v198 = v93;\n
    *(v198) = *(v198) - 2;\n
    v199 = v94;\n
    *(v199) = *(v199) + 2;\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_444d18;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_444d18:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v200 = v93;\n
    *(v200) = *(v200) - v92;\n
    v201 = v94;\n
    *(v201) = &(*(v201))[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v116 = a0;\n
    v115 = a1;\n
    if (*(v115) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v115) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v115);\n
    v114 = v1;\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = cgc_calloc(134);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v113, \"Str: \");\n
    cgc_strncpy(v113 + 5, *(v116), v114);\n
    v203 = v116;\n
    *(v203) = &(*(v203))[4 + cgc_strlen(v113)];\n
    v205 = v115;\n
    *(v205) = *(v205) - (cgc_strlen(v113) + -4);\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v62 = a0;\n
    v61 = a1;\n
    memset(&v59, 0, 21);\n
    if (*(v61) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v60) = *(&*(v62));\n
    cgc_uint2str(&v59, 21, *(&v60));\n
    v0 = &v59;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v59)) < 0)\n
        cgc__terminate(1);\n
    v206 = v61;\n
    *(v206) = *(v206) - 8;\n
    v207 = v62;\n
    *(v207) = *(v207) + 8;\n
    v27 ^= cgc__cookie;\n
    if (v27)\n
        cgc___stack_cookie_fail();\n
    v208 = a1;\n
    if (*(a1) > 0 && v26 >= 0)\n
    {\n
        v208 = v26;\n
        if (v208 < 0)\n
            v208 = *(&(&v28)[8 * v26])(a0, a1);\n
    }\n
    return v208;\n
}\n
", "4477295:sub_44516f": null, "4477296:cgc_process_llamahalochromy": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamahalochromy(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x3c0]\n
    struct_1 *v1;  // [bp-0x3b8]\n
    struct_1 *v2;  // [bp-0x3b0]\n
    char v3;  // [bp-0x3a1]\n
    struct_1 *v4;  // [bp-0x3a0]\n
    struct_1 *v5;  // [bp-0x398]\n
    struct_1 *v6;  // [bp-0x390]\n
    char v7;  // [bp-0x381]\n
    struct_1 *v8;  // [bp-0x380]\n
    char v9;  // [bp-0x371]\n
    struct_1 *v10;  // [bp-0x370]\n
    unsigned int v11;  // [bp-0x368]\n
    unsigned int v12;  // [bp-0x364]\n
    struct_1 *v13;  // [bp-0x360]\n
    unsigned int v14;  // [bp-0x354]\n
    struct_1 *v15;  // [bp-0x350]\n
    struct_1 *v16;  // [bp-0x348]\n
    struct_1 *v17;  // [bp-0x340]\n
    unsigned int v18;  // [bp-0x338]\n
    unsigned int v19;  // [bp-0x334]\n
    char v20;  // [bp-0x330]\n
    char v21;  // [bp-0x318]\n
    char v22[8];  // [bp-0x2f8]\n
    unsigned int v23;  // [bp-0x2f0]\n
    unsigned int *v24;  // [bp-0x2e8]\n
    struct struct_0 **v25;  // [bp-0x2e0]\n
    char v26;  // [bp-0x2d8]\n
    char *v27;  // [bp-0x2b8]\n
    unsigned int v28;  // [bp-0x2b0]\n
    unsigned int *v29;  // [bp-0x2a8]\n
    struct struct_0 **v30;  // [bp-0x2a0]\n
    char v31;  // [bp-0x298]\n
    char v32[8];  // [bp-0x278]\n
    unsigned int v33;  // [bp-0x270]\n
    unsigned int *v34;  // [bp-0x268]\n
    struct struct_0 **v35;  // [bp-0x260]\n
    unsigned long v36;  // [bp-0x258]\n
    char v37;  // [bp-0x249]\n
    unsigned int *v38;  // [bp-0x248]\n
    struct struct_0 **v39;  // [bp-0x240]\n
    char *v40;  // [bp-0x238]\n
    unsigned int v41;  // [bp-0x22c]\n
    unsigned int *v42;  // [bp-0x228]\n
    struct struct_0 **v43;  // [bp-0x220]\n
    char v44;  // [bp-0x218]\n
    unsigned short v45;  // [bp-0x212]\n
    unsigned int *v46;  // [bp-0x210]\n
    struct struct_0 **v47;  // [bp-0x208]\n
    char v48;  // [bp-0x1fd]\n
    char v49;  // [bp-0x1f9]\n
    unsigned int *v50;  // [bp-0x1f8]\n
    struct struct_0 **v51;  // [bp-0x1f0]\n
    char v52;  // [bp-0x1e8]\n
    unsigned int v53;  // [bp-0x1d0]\n
    unsigned int *v54;  // [bp-0x1c8]\n
    struct struct_0 **v55;  // [bp-0x1c0]\n
    char v56;  // [bp-0x1b8]\n
    unsigned int v57;  // [bp-0x1a0]\n
    unsigned int *v58;  // [bp-0x198]\n
    struct struct_0 **v59;  // [bp-0x190]\n
    char v60;  // [bp-0x188]\n
    unsigned int v61;  // [bp-0x17c]\n
    unsigned int *v62;  // [bp-0x178]\n
    struct struct_0 **v63;  // [bp-0x170]\n
    unsigned long v64;  // [bp-0x168]\n
    unsigned short v65;  // [bp-0x15a]\n
    unsigned int *v66;  // [bp-0x158]\n
    struct struct_0 **v67;  // [bp-0x150]\n
    unsigned long v68;  // [bp-0x148]\n
    unsigned short v69;  // [bp-0x13a]\n
    unsigned int *v70;  // [bp-0x138]\n
    struct struct_0 **v71;  // [bp-0x130]\n
    unsigned long v72;  // [bp-0x128]\n
    unsigned short v73;  // [bp-0x11a]\n
    unsigned int *v74;  // [bp-0x118]\n
    struct struct_0 **v75;  // [bp-0x110]\n
    char *v76;  // [bp-0x108]\n
    unsigned int v77;  // [bp-0xfc]\n
    unsigned int *v78;  // [bp-0xf8]\n
    struct struct_0 **v79;  // [bp-0xf0]\n
    char *v80;  // [bp-0xe8]\n
    unsigned int v81;  // [bp-0xdc]\n
    unsigned int *v82;  // [bp-0xd8]\n
    struct struct_0 **v83;  // [bp-0xd0]\n
    char v84;  // [bp-0xc8]\n
    unsigned int v85;  // [bp-0xb0]\n
    unsigned int *v86;  // [bp-0xa8]\n
    struct struct_0 **v87;  // [bp-0xa0]\n
    char v88;  // [bp-0x98]\n
    unsigned int v89;  // [bp-0x80]\n
    unsigned int *v90;  // [bp-0x78]\n
    struct struct_0 **v91;  // [bp-0x70]\n
    char v92;  // [bp-0x68]\n
    unsigned int v93;  // [bp-0x50]\n
    unsigned int *v94;  // [bp-0x48]\n
    struct struct_0 **v95;  // [bp-0x40]\n
    char v96;  // [bp-0x38]\n
    unsigned int v97;  // [bp-0x20]\n
    unsigned int *v98;  // [bp-0x18]\n
    struct struct_0 **v99;  // [bp-0x10]\n
    unsigned int *v101;  // rax\n
    struct struct_0 **v102;  // rax\n
    unsigned int *v103;  // rax\n
    struct struct_0 **v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    struct struct_0 **v117;  // rax\n
    unsigned int *v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v124;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax, Other Possible Types: unsigned long\n
\n
    v19 = cgc__cookie;\n
    v18 = -1;\n
    if (cgc_sendline(1, \"===llamahalochromy===\", 21) < 0)\n
        cgc__terminate(1);\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 12);\n
    if (*(v62) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(&*(v63));\n
    cgc_uint2str(&v60, 12, v61);\n
    v17 = &v60;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v101 = v62;\n
    *(v101) = *(v101) - 4;\n
    v102 = v63;\n
    *(v102) = *(v102) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v57) = *(&*(v59));\n
    cgc_uint2str(&v56, 21, *(&v57));\n
    v16 = &v56;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v103 = v58;\n
    *(v103) = *(v103) - 8;\n
    v104 = v59;\n
    *(v104) = *(v104) + 8;\n
    v75 = a0;\n
    v74 = a1;\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(&*(v75));\n
    v105 = v74;\n
    *(v105) = *(v105) - 2;\n
    v106 = v75;\n
    *(v106) = *(v106) + 2;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_4454c7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4454c7:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v107 = v74;\n
    *(v107) = *(v107) - v73;\n
    v108 = v75;\n
    *(v108) = &(*(v108))[v73];\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v51 = a0;\n
    v50 = a1;\n
    memset(&v48, 0, 4);\n
    if (*(v50) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(v51)->field_0;\n
    cgc_uint2str(&v48, 4, v49);\n
    v15 = &v48;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v109 = v50;\n
    *(v109) = *(v109) - 1;\n
    v110 = v51;\n
    *(v110) = *(v110) + 1;\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v82) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v82);\n
    v81 = v14;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v80, \"Str: \");\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v112 = v83;\n
    *(v112) = &(*(v112))[4 + cgc_strlen(v80)];\n
    v114 = v82;\n
    *(v114) = *(v114) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(v39)->field_0;\n
    v115 = v38;\n
    *(v115) = *(v115) - 1;\n
    v116 = v39;\n
    *(v116) = *(v116) + 1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_44598a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44598a:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v117 = v39;\n
    *(v117) = &(*(v117))[v37];\n
    v118 = v38;\n
    *(v118) = *(v118) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v97) = *(&*(v99));\n
    cgc_uint2str(&v96, 21, *(&v97));\n
    v13 = &v96;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v119 = v98;\n
    *(v119) = *(v119) - 8;\n
    v120 = v99;\n
    *(v120) = *(v120) + 8;\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v78) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v78);\n
    v77 = v12;\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = cgc_calloc(134);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v76, \"Str: \");\n
    cgc_strncpy(v76 + 5, *(v79), v77);\n
    v122 = v79;\n
    *(v122) = &(*(v122))[4 + cgc_strlen(v76)];\n
    v124 = v78;\n
    *(v124) = *(v124) - (cgc_strlen(v76) + -4);\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v42) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v42);\n
    v41 = v11;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v40, \"Str: \");\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v126 = v43;\n
    *(v126) = &(*(v126))[4 + cgc_strlen(v40)];\n
    v128 = v42;\n
    *(v128) = *(v128) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v71 = a0;\n
    v70 = a1;\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(&*(v71));\n
    v129 = v70;\n
    *(v129) = *(v129) - 2;\n
    v130 = v71;\n
    *(v130) = *(v130) + 2;\n
    if (v69 <= *(v70) && !(!v69))\n
        goto LABEL_446022;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_446022:\n
    v68 = cgc_calloc(v69);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v68, *(v71), v69);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v131 = v70;\n
    *(v131) = *(v131) - v69;\n
    v132 = v71;\n
    *(v132) = &(*(v132))[v69];\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 21);\n
    if (*(v94) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v93) = *(&*(v95));\n
    cgc_uint2str(&v92, 21, *(&v93));\n
    v10 = &v92;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v133 = v94;\n
    *(v133) = *(v133) - 8;\n
    v134 = v95;\n
    *(v134) = *(v134) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    *(&v32[0]) = *(v35);\n
    memset(&v31, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v32[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v32[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v32[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v32[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v32[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v32[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v32[6] << 8))\n
                                v9 = v32[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v33) = v9 & 1;\n
    cgc_uint2str(&v31, 21, *(&v33));\n
    v8 = &v31;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v135 = v34;\n
    *(v135) = *(v135) - 8;\n
    v136 = v35;\n
    *(v136) = *(v136) + 8;\n
    v30 = a0;\n
    v29 = a1;\n
    v27 = &*(v30)->field_0;\n
    memset(&v26, 0, 21);\n
    if (*(v29) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (*(v27) << 56)\n
    {\n
        v7 = 0;\n
        if (v27[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v27[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v27[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v27[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v27[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v27[6] << 8))\n
                                v7 = v27[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v28) = v7 & 1;\n
    cgc_uint2str(&v26, 21, *(&v28));\n
    v6 = &v26;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v137 = v29;\n
    *(v137) = *(v137) - 8;\n
    v138 = v30;\n
    *(v138) = *(v138) + 8;\n
    v47 = a0;\n
    v46 = a1;\n
    memset(&v44, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47));\n
    cgc_uint2str(&v44, 6, v45);\n
    v5 = &v44;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v139 = v46;\n
    *(v139) = *(v139) - 2;\n
    v140 = v47;\n
    *(v140) = *(v140) + 2;\n
    v67 = a0;\n
    v66 = a1;\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(&*(v67));\n
    v141 = v66;\n
    *(v141) = *(v141) - 2;\n
    v142 = v67;\n
    *(v142) = *(v142) + 2;\n
    if (v65 <= *(v66) && !(!v65))\n
        goto LABEL_446804;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_446804:\n
    v64 = cgc_calloc(v65);\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v64, *(v67), v65);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v143 = v66;\n
    *(v143) = *(v143) - v65;\n
    v144 = v67;\n
    *(v144) = &(*(v144))[v65];\n
    cgc_checkheap();\n
    cgc_free(v64);\n
    v91 = a0;\n
    v90 = a1;\n
    memset(&v88, 0, 21);\n
    if (*(v90) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v89) = *(&*(v91));\n
    cgc_uint2str(&v88, 21, *(&v89));\n
    v4 = &v88;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v88)) < 0)\n
        cgc__terminate(1);\n
    v145 = v90;\n
    *(v145) = *(v145) - 8;\n
    v146 = v91;\n
    *(v146) = *(v146) + 8;\n
    v25 = a0;\n
    v24 = a1;\n
    *(&v22[0]) = *(v25);\n
    memset(&v21, 0, 21);\n
    if (*(v24) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v22[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v22[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v22[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v22[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v22[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v22[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v22[6] << 8))\n
                                v3 = v22[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v23) = v3 & 1;\n
    cgc_uint2str(&v21, 21, *(&v23));\n
    v2 = &v21;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v21)) < 0)\n
        cgc__terminate(1);\n
    v147 = v24;\n
    *(v147) = *(v147) - 8;\n
    v148 = v25;\n
    *(v148) = *(v148) + 8;\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v85) = *(&*(v87));\n
    cgc_uint2str(&v84, 21, *(&v85));\n
    v1 = &v84;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v149 = v86;\n
    *(v149) = *(v149) - 8;\n
    v150 = v87;\n
    *(v150) = *(v150) + 8;\n
    v55 = a0;\n
    v54 = a1;\n
    memset(&v52, 0, 21);\n
    if (*(v54) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v53) = *(&*(v55));\n
    cgc_uint2str(&v52, 21, *(&v53));\n
    v0 = &v52;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v151 = v54;\n
    *(v151) = *(v151) - 8;\n
    v152 = v55;\n
    *(v152) = *(v152) + 8;\n
    v19 ^= cgc__cookie;\n
    if (v19)\n
        cgc___stack_cookie_fail();\n
    v153 = a1;\n
    if (*(a1) > 0 && v18 >= 0)\n
    {\n
        v153 = v18;\n
        if (v153 < 0)\n
            v153 = *(&(&v20)[8 * v18])(a0, a1);\n
    }\n
    return v153;\n
}\n
", "4484722:sub_446e72": null, "4484736:cgc_process_llamafluctuate": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamafluctuate(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x748]\n
    struct_1 *v1;  // [bp-0x740]\n
    struct_1 *v2;  // [bp-0x738]\n
    char v3;  // [bp-0x729]\n
    struct_1 *v4;  // [bp-0x728]\n
    struct_1 *v5;  // [bp-0x720]\n
    unsigned int v6;  // [bp-0x714]\n
    struct_1 *v7;  // [bp-0x710]\n
    unsigned int v8;  // [bp-0x704]\n
    struct_1 *v9;  // [bp-0x700]\n
    struct_1 *v10;  // [bp-0x6f8]\n
    char v11;  // [bp-0x6e9]\n
    struct_1 *v12;  // [bp-0x6e8]\n
    struct_1 *v13;  // [bp-0x6e0]\n
    unsigned int v14;  // [bp-0x6d4]\n
    struct_1 *v15;  // [bp-0x6d0]\n
    struct_1 *v16;  // [bp-0x6c8]\n
    char v17;  // [bp-0x6b9]\n
    struct_1 *v18;  // [bp-0x6b8]\n
    struct_1 *v19;  // [bp-0x6b0]\n
    struct_1 *v20;  // [bp-0x6a8]\n
    struct_1 *v21;  // [bp-0x6a0]\n
    struct_1 *v22;  // [bp-0x698]\n
    unsigned int v23;  // [bp-0x68c]\n
    struct_1 *v24;  // [bp-0x688]\n
    struct_1 *v25;  // [bp-0x680]\n
    struct_1 *v26;  // [bp-0x678]\n
    char v27;  // [bp-0x669]\n
    struct_1 *v28;  // [bp-0x668]\n
    struct_1 *v29;  // [bp-0x660]\n
    char v30;  // [bp-0x651]\n
    struct_1 *v31;  // [bp-0x650]\n
    struct_1 *v32;  // [bp-0x648]\n
    struct_1 *v33;  // [bp-0x640]\n
    struct_1 *v34;  // [bp-0x638]\n
    unsigned int v35;  // [bp-0x630]\n
    unsigned int v36;  // [bp-0x62c]\n
    char v37;  // [bp-0x628]\n
    char v38;  // [bp-0x60e]\n
    char v39[2];  // [bp-0x608]\n
    unsigned short v40;  // [bp-0x5fa]\n
    unsigned int *v41;  // [bp-0x5f8]\n
    struct struct_0 **v42;  // [bp-0x5f0]\n
    char v43;  // [bp-0x5e8]\n
    char v44[8];  // [bp-0x5c8]\n
    unsigned int v45;  // [bp-0x5c0]\n
    unsigned int *v46;  // [bp-0x5b8]\n
    struct struct_0 **v47;  // [bp-0x5b0]\n
    char v48;  // [bp-0x5a8]\n
    char v49[8];  // [bp-0x590]\n
    unsigned int v50;  // [bp-0x588]\n
    unsigned int *v51;  // [bp-0x580]\n
    struct struct_0 **v52;  // [bp-0x578]\n
    unsigned long v53;  // [bp-0x570]\n
    char v54;  // [bp-0x561]\n
    unsigned int *v55;  // [bp-0x560]\n
    struct struct_0 **v56;  // [bp-0x558]\n
    unsigned long v57;  // [bp-0x550]\n
    char v58;  // [bp-0x541]\n
    unsigned int *v59;  // [bp-0x540]\n
    struct struct_0 **v60;  // [bp-0x538]\n
    unsigned long v61;  // [bp-0x530]\n
    char v62;  // [bp-0x521]\n
    unsigned int *v63;  // [bp-0x520]\n
    struct struct_0 **v64;  // [bp-0x518]\n
    char *v65;  // [bp-0x510]\n
    unsigned int v66;  // [bp-0x504]\n
    unsigned int *v67;  // [bp-0x500]\n
    struct struct_0 **v68;  // [bp-0x4f8]\n
    char *v69;  // [bp-0x4f0]\n
    unsigned int v70;  // [bp-0x4e4]\n
    unsigned int *v71;  // [bp-0x4e0]\n
    struct struct_0 **v72;  // [bp-0x4d8]\n
    char v73;  // [bp-0x4d0]\n
    unsigned short v74;  // [bp-0x4ca]\n
    unsigned int *v75;  // [bp-0x4c8]\n
    struct struct_0 **v76;  // [bp-0x4c0]\n
    char v77;  // [bp-0x4b5]\n
    char v78;  // [bp-0x4b1]\n
    unsigned int *v79;  // [bp-0x4b0]\n
    struct struct_0 **v80;  // [bp-0x4a8]\n
    char v81;  // [bp-0x49d]\n
    char v82;  // [bp-0x499]\n
    unsigned int *v83;  // [bp-0x498]\n
    struct struct_0 **v84;  // [bp-0x490]\n
    char v85;  // [bp-0x488]\n
    unsigned int v86;  // [bp-0x470]\n
    unsigned int *v87;  // [bp-0x468]\n
    struct struct_0 **v88;  // [bp-0x460]\n
    char v89;  // [bp-0x458]\n
    unsigned int v90;  // [bp-0x440]\n
    unsigned int *v91;  // [bp-0x438]\n
    struct struct_0 **v92;  // [bp-0x430]\n
    char v93;  // [bp-0x428]\n
    unsigned int v94;  // [bp-0x410]\n
    unsigned int *v95;  // [bp-0x408]\n
    struct struct_0 **v96;  // [bp-0x400]\n
    char v97;  // [bp-0x3f8]\n
    unsigned int v98;  // [bp-0x3e0]\n
    unsigned int *v99;  // [bp-0x3d8]\n
    struct struct_0 **v100;  // [bp-0x3d0]\n
    char v101;  // [bp-0x3c8]\n
    unsigned int v102;  // [bp-0x3bc]\n
    unsigned int *v103;  // [bp-0x3b8]\n
    struct struct_0 **v104;  // [bp-0x3b0]\n
    char v105;  // [bp-0x3a8]\n
    unsigned int v106;  // [bp-0x39c]\n
    unsigned int *v107;  // [bp-0x398]\n
    struct struct_0 **v108;  // [bp-0x390]\n
    char v109;  // [bp-0x388]\n
    unsigned int v110;  // [bp-0x37c]\n
    unsigned int *v111;  // [bp-0x378]\n
    struct struct_0 **v112;  // [bp-0x370]\n
    char v113;  // [bp-0x368]\n
    unsigned int v114;  // [bp-0x35c]\n
    unsigned int *v115;  // [bp-0x358]\n
    struct struct_0 **v116;  // [bp-0x350]\n
    char v117;  // [bp-0x348]\n
    unsigned int v118;  // [bp-0x33c]\n
    unsigned int *v119;  // [bp-0x338]\n
    struct struct_0 **v120;  // [bp-0x330]\n
    char v121;  // [bp-0x328]\n
    unsigned int v122;  // [bp-0x31c]\n
    unsigned int *v123;  // [bp-0x318]\n
    struct struct_0 **v124;  // [bp-0x310]\n
    char v125;  // [bp-0x308]\n
    unsigned int v126;  // [bp-0x2fc]\n
    unsigned int *v127;  // [bp-0x2f8]\n
    struct struct_0 **v128;  // [bp-0x2f0]\n
    char v129;  // [bp-0x2e8]\n
    unsigned int v130;  // [bp-0x2dc]\n
    unsigned int *v131;  // [bp-0x2d8]\n
    struct struct_0 **v132;  // [bp-0x2d0]\n
    char v133;  // [bp-0x2c8]\n
    unsigned int v134;  // [bp-0x2bc]\n
    unsigned int *v135;  // [bp-0x2b8]\n
    struct struct_0 **v136;  // [bp-0x2b0]\n
    char v137;  // [bp-0x2a8]\n
    unsigned int v138;  // [bp-0x29c]\n
    unsigned int *v139;  // [bp-0x298]\n
    struct struct_0 **v140;  // [bp-0x290]\n
    unsigned long v141;  // [bp-0x288]\n
    unsigned short v142;  // [bp-0x27a]\n
    unsigned int *v143;  // [bp-0x278]\n
    struct struct_0 **v144;  // [bp-0x270]\n
    unsigned long v145;  // [bp-0x268]\n
    unsigned short v146;  // [bp-0x25a]\n
    unsigned int *v147;  // [bp-0x258]\n
    struct struct_0 **v148;  // [bp-0x250]\n
    unsigned long v149;  // [bp-0x248]\n
    unsigned short v150;  // [bp-0x23a]\n
    unsigned int *v151;  // [bp-0x238]\n
    struct struct_0 **v152;  // [bp-0x230]\n
    unsigned long v153;  // [bp-0x228]\n
    unsigned short v154;  // [bp-0x21a]\n
    unsigned int *v155;  // [bp-0x218]\n
    struct struct_0 **v156;  // [bp-0x210]\n
    unsigned long v157;  // [bp-0x208]\n
    unsigned short v158;  // [bp-0x1fa]\n
    unsigned int *v159;  // [bp-0x1f8]\n
    struct struct_0 **v160;  // [bp-0x1f0]\n
    unsigned long v161;  // [bp-0x1e8]\n
    unsigned short v162;  // [bp-0x1da]\n
    unsigned int *v163;  // [bp-0x1d8]\n
    struct struct_0 **v164;  // [bp-0x1d0]\n
    char v165;  // [bp-0x1c4]\n
    char v166[4];  // [bp-0x1b8]\n
    unsigned int v167;  // [bp-0x1ac]\n
    unsigned int *v168;  // [bp-0x1a8]\n
    struct struct_0 **v169;  // [bp-0x1a0]\n
    char v170;  // [bp-0x194]\n
    char v171[4];  // [bp-0x188]\n
    unsigned int v172;  // [bp-0x17c]\n
    unsigned int *v173;  // [bp-0x178]\n
    struct struct_0 **v174;  // [bp-0x170]\n
    char *v175;  // [bp-0x168]\n
    unsigned int v176;  // [bp-0x15c]\n
    unsigned int *v177;  // [bp-0x158]\n
    struct struct_0 **v178;  // [bp-0x150]\n
    char *v179;  // [bp-0x148]\n
    unsigned int v180;  // [bp-0x13c]\n
    unsigned int *v181;  // [bp-0x138]\n
    struct struct_0 **v182;  // [bp-0x130]\n
    char v183;  // [bp-0x128]\n
    unsigned int v184;  // [bp-0x110]\n
    unsigned int *v185;  // [bp-0x108]\n
    struct struct_0 **v186;  // [bp-0x100]\n
    char v187;  // [bp-0xf8]\n
    unsigned int v188;  // [bp-0xe0]\n
    unsigned int *v189;  // [bp-0xd8]\n
    struct struct_0 **v190;  // [bp-0xd0]\n
    char v191;  // [bp-0xc8]\n
    unsigned int v192;  // [bp-0xb0]\n
    unsigned int *v193;  // [bp-0xa8]\n
    struct struct_0 **v194;  // [bp-0xa0]\n
    char v195;  // [bp-0x98]\n
    unsigned int v196;  // [bp-0x80]\n
    unsigned int *v197;  // [bp-0x78]\n
    struct struct_0 **v198;  // [bp-0x70]\n
    unsigned long v199;  // [bp-0x68]\n
    char v200;  // [bp-0x59]\n
    unsigned int *v201;  // [bp-0x58]\n
    struct struct_0 **v202;  // [bp-0x50]\n
    unsigned long v203;  // [bp-0x48]\n
    char v204;  // [bp-0x39]\n
    unsigned int *v205;  // [bp-0x38]\n
    struct struct_0 **v206;  // [bp-0x30]\n
    unsigned long v207;  // [bp-0x28]\n
    char v208;  // [bp-0x19]\n
    unsigned int *v209;  // [bp-0x18]\n
    struct struct_0 **v210;  // [bp-0x10]\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_0 **v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v305;  // rax\n
    unsigned int *v306;  // rax\n
    struct struct_0 **v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    struct struct_0 **v310;  // rax\n
    unsigned int *v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    unsigned int *v314;  // rax\n
    struct struct_0 **v315;  // rax\n
    unsigned int *v316;  // rax\n
    struct struct_0 **v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_0 **v319;  // rax\n
    unsigned int *v320;  // rax\n
    struct struct_0 **v321;  // rax\n
    unsigned int *v322;  // rax\n
    struct struct_0 **v323;  // rax\n
    unsigned int *v324;  // rax\n
    struct struct_0 **v325;  // rax\n
    struct struct_0 **v326;  // rax\n
    unsigned int *v327;  // rax\n
    unsigned int *v328;  // rax, Other Possible Types: unsigned long\n
\n
    v36 = cgc__cookie;\n
    v35 = -1;\n
    if (cgc_sendline(1, \"===llamafluctuate===\", 20) < 0)\n
        cgc__terminate(1);\n
    v140 = a0;\n
    v139 = a1;\n
    memset(&v137, 0, 12);\n
    if (*(v139) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    cgc_uint2str(&v137, 12, v138);\n
    v34 = &v137;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v137)) < 0)\n
        cgc__terminate(1);\n
    v212 = v139;\n
    *(v212) = *(v212) - 4;\n
    v213 = v140;\n
    *(v213) = *(v213) + 4;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    cgc_uint2str(&v133, 12, v134);\n
    v33 = &v133;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v214 = v135;\n
    *(v214) = *(v214) - 4;\n
    v215 = v136;\n
    *(v215) = *(v215) + 4;\n
    v210 = a0;\n
    v209 = a1;\n
    if (*(v209) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v208 = *(v210)->field_0;\n
    v216 = v209;\n
    *(v216) = *(v216) - 1;\n
    v217 = v210;\n
    *(v217) = *(v217) + 1;\n
    if (v208 <= *(v209) && !(!v208))\n
        goto LABEL_4471c0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4471c0:\n
    v207 = cgc_calloc(v208);\n
    if (!v207)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v207, *(v210), v208);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v218 = v210;\n
    *(v218) = &(*(v218))[v208];\n
    v219 = v209;\n
    *(v219) = *(v219) - v208;\n
    cgc_checkheap();\n
    cgc_free(v207);\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v98) = *(&*(v100));\n
    cgc_uint2str(&v97, 21, *(&v98));\n
    v32 = &v97;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v220 = v99;\n
    *(v220) = *(v220) - 8;\n
    v221 = v100;\n
    *(v221) = *(v221) + 8;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v31 = &v113;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v222 = v115;\n
    *(v222) = *(v222) - 4;\n
    v223 = v116;\n
    *(v223) = *(v223) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    v224 = v63;\n
    *(v224) = *(v224) - 1;\n
    v225 = v64;\n
    *(v225) = *(v225) + 1;\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_447578;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_447578:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v226 = v64;\n
    *(v226) = &(*(v226))[v62];\n
    v227 = v63;\n
    *(v227) = *(v227) - v62;\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v174 = a0;\n
    v173 = a1;\n
    *(&v171) = *(v174);\n
    memset(&v170, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if ((v171[0] << 24))\n
    {\n
        v30 = 0;\n
        if ((v171[1] << 16))\n
        {\n
            v30 = 0;\n
            if ((v171[2] << 8))\n
                v30 = v171[3];\n
        }\n
    }\n
    v172 = v30 & 1;\n
    cgc_uint2str(&v170, 12, v172);\n
    v29 = &v170;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v170)) < 0)\n
        cgc__terminate(1);\n
    v228 = v173;\n
    *(v228) = *(v228) - 4;\n
    v229 = v174;\n
    *(v229) = *(v229) + 4;\n
    v160 = a0;\n
    v159 = a1;\n
    if (*(v159) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = *(&*(v160));\n
    v230 = v159;\n
    *(v230) = *(v230) - 2;\n
    v231 = v160;\n
    *(v231) = *(v231) + 2;\n
    if (v158 <= *(v159) && !(!v158))\n
        goto LABEL_4478cc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4478cc:\n
    v157 = cgc_calloc(v158);\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v157, *(v160), v158);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v232 = v159;\n
    *(v232) = *(v232) - v158;\n
    v233 = v160;\n
    *(v233) = &(*(v233))[v158];\n
    cgc_checkheap();\n
    cgc_free(v157);\n
    v198 = a0;\n
    v197 = a1;\n
    memset(&v195, 0, 21);\n
    if (*(v197) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v196) = *(&*(v198));\n
    cgc_uint2str(&v195, 21, *(&v196));\n
    v28 = &v195;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v195)) < 0)\n
        cgc__terminate(1);\n
    v234 = v197;\n
    *(v234) = *(v234) - 8;\n
    v235 = v198;\n
    *(v235) = *(v235) + 8;\n
    v156 = a0;\n
    v155 = a1;\n
    if (*(v155) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = *(&*(v156));\n
    v236 = v155;\n
    *(v236) = *(v236) - 2;\n
    v237 = v156;\n
    *(v237) = *(v237) + 2;\n
    if (v154 <= *(v155) && !(!v154))\n
        goto LABEL_447b8a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_447b8a:\n
    v153 = cgc_calloc(v154);\n
    if (!v153)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v153, *(v156), v154);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v238 = v155;\n
    *(v238) = *(v238) - v154;\n
    v239 = v156;\n
    *(v239) = &(*(v239))[v154];\n
    cgc_checkheap();\n
    cgc_free(v153);\n
    v169 = a0;\n
    v168 = a1;\n
    *(&v166) = *(v169);\n
    memset(&v165, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v166[0] << 24))\n
    {\n
        v27 = 0;\n
        if ((v166[1] << 16))\n
        {\n
            v27 = 0;\n
            if ((v166[2] << 8))\n
                v27 = v166[3];\n
        }\n
    }\n
    v167 = v27 & 1;\n
    cgc_uint2str(&v165, 12, v167);\n
    v26 = &v165;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v165)) < 0)\n
        cgc__terminate(1);\n
    v240 = v168;\n
    *(v240) = *(v240) - 4;\n
    v241 = v169;\n
    *(v241) = *(v241) + 4;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 4);\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    cgc_uint2str(&v81, 4, v82);\n
    v25 = &v81;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v242 = v83;\n
    *(v242) = *(v242) - 1;\n
    v243 = v84;\n
    *(v243) = *(v243) + 1;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v24 = &v129;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v244 = v131;\n
    *(v244) = *(v244) - 4;\n
    v245 = v132;\n
    *(v245) = *(v245) + 4;\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v71) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v71);\n
    v70 = v23;\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = cgc_calloc(134);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v69, \"Str: \");\n
    cgc_strncpy(v69 + 5, *(v72), v70);\n
    v247 = v72;\n
    *(v247) = &(*(v247))[4 + cgc_strlen(v69)];\n
    v249 = v71;\n
    *(v249) = *(v249) - (cgc_strlen(v69) + -4);\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v194 = a0;\n
    v193 = a1;\n
    memset(&v191, 0, 21);\n
    if (*(v193) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v192) = *(&*(v194));\n
    cgc_uint2str(&v191, 21, *(&v192));\n
    v22 = &v191;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v191)) < 0)\n
        cgc__terminate(1);\n
    v250 = v193;\n
    *(v250) = *(v250) - 8;\n
    v251 = v194;\n
    *(v251) = *(v251) + 8;\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    v252 = v59;\n
    *(v252) = *(v252) - 1;\n
    v253 = v60;\n
    *(v253) = *(v253) + 1;\n
    if (v58 <= *(v59) && !(!v58))\n
        goto LABEL_4483e1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4483e1:\n
    v57 = cgc_calloc(v58);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v57, *(v60), v58);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v254 = v60;\n
    *(v254) = &(*(v254))[v58];\n
    v255 = v59;\n
    *(v255) = *(v255) - v58;\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v21 = &v109;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v256 = v111;\n
    *(v256) = *(v256) - 4;\n
    v257 = v112;\n
    *(v257) = *(v257) + 4;\n
    v190 = a0;\n
    v189 = a1;\n
    memset(&v187, 0, 21);\n
    if (*(v189) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v188) = *(&*(v190));\n
    cgc_uint2str(&v187, 21, *(&v188));\n
    v20 = &v187;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v187)) < 0)\n
        cgc__terminate(1);\n
    v258 = v189;\n
    *(v258) = *(v258) - 8;\n
    v259 = v190;\n
    *(v259) = *(v259) + 8;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 21);\n
    if (*(v95) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v94) = *(&*(v96));\n
    cgc_uint2str(&v93, 21, *(&v94));\n
    v19 = &v93;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v260 = v95;\n
    *(v260) = *(v260) - 8;\n
    v261 = v96;\n
    *(v261) = *(v261) + 8;\n
    v152 = a0;\n
    v151 = a1;\n
    if (*(v151) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v150 = *(&*(v152));\n
    v262 = v151;\n
    *(v262) = *(v262) - 2;\n
    v263 = v152;\n
    *(v263) = *(v263) + 2;\n
    if (v150 <= *(v151) && !(!v150))\n
        goto LABEL_4488c2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4488c2:\n
    v149 = cgc_calloc(v150);\n
    if (!v149)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v149, *(v152), v150);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v264 = v151;\n
    *(v264) = *(v264) - v150;\n
    v265 = v152;\n
    *(v265) = &(*(v265))[v150];\n
    cgc_checkheap();\n
    cgc_free(v149);\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v18 = &v105;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v266 = v107;\n
    *(v266) = *(v266) - 4;\n
    v267 = v108;\n
    *(v267) = *(v267) + 4;\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49[0]) = *(v52);\n
    memset(&v48, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (v49[0] << 56)\n
    {\n
        v17 = 0;\n
        if (v49[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v49[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v49[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v49[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v49[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v49[6] << 8))\n
                                v17 = v49[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v50) = v17 & 1;\n
    cgc_uint2str(&v48, 21, *(&v50));\n
    v16 = &v48;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v268 = v51;\n
    *(v268) = *(v268) - 8;\n
    v269 = v52;\n
    *(v269) = *(v269) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(v56)->field_0;\n
    v270 = v55;\n
    *(v270) = *(v270) - 1;\n
    v271 = v56;\n
    *(v271) = *(v271) + 1;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_448da7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_448da7:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v272 = v56;\n
    *(v272) = &(*(v272))[v54];\n
    v273 = v55;\n
    *(v273) = *(v273) - v54;\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v148 = a0;\n
    v147 = a1;\n
    if (*(v147) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    v274 = v147;\n
    *(v274) = *(v274) - 2;\n
    v275 = v148;\n
    *(v275) = *(v275) + 2;\n
    if (v146 <= *(v147) && !(!v146))\n
        goto LABEL_448f77;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_448f77:\n
    v145 = cgc_calloc(v146);\n
    if (!v145)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v145, *(v148), v146);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v276 = v147;\n
    *(v276) = *(v276) - v146;\n
    v277 = v148;\n
    *(v277) = &(*(v277))[v146];\n
    cgc_checkheap();\n
    cgc_free(v145);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v90) = *(&*(v92));\n
    cgc_uint2str(&v89, 21, *(&v90));\n
    v15 = &v89;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v278 = v91;\n
    *(v278) = *(v278) - 8;\n
    v279 = v92;\n
    *(v279) = *(v279) + 8;\n
    v164 = a0;\n
    v163 = a1;\n
    if (*(v163) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = *(&*(v164));\n
    v280 = v163;\n
    *(v280) = *(v280) - 2;\n
    v281 = v164;\n
    *(v281) = *(v281) + 2;\n
    if (v162 <= *(v163) && !(!v162))\n
        goto LABEL_449251;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_449251:\n
    v161 = cgc_calloc(v162);\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v161, *(v164), v162);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v282 = v163;\n
    *(v282) = *(v282) - v162;\n
    v283 = v164;\n
    *(v283) = &(*(v283))[v162];\n
    cgc_checkheap();\n
    cgc_free(v161);\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v181) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v181);\n
    v180 = v14;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v179, \"Str: \");\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v285 = v182;\n
    *(v285) = &(*(v285))[4 + cgc_strlen(v179)];\n
    v287 = v181;\n
    *(v287) = *(v287) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    cgc_uint2str(&v125, 12, v126);\n
    v13 = &v125;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v288 = v127;\n
    *(v288) = *(v288) - 4;\n
    v289 = v128;\n
    *(v289) = *(v289) + 4;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    cgc_uint2str(&v121, 12, v122);\n
    v12 = &v121;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v290 = v123;\n
    *(v290) = *(v290) - 4;\n
    v291 = v124;\n
    *(v291) = *(v291) + 4;\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44[0]) = *(v47);\n
    memset(&v43, 0, 21);\n
    if (*(v46) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if (v44[0] << 56)\n
    {\n
        v11 = 0;\n
        if (v44[1] << 48)\n
        {\n
            v11 = 0;\n
            if (v44[2] << 40)\n
            {\n
                v11 = 0;\n
                if (v44[3] << 32)\n
                {\n
                    v11 = 0;\n
                    if ((v44[4] << 24))\n
                    {\n
                        v11 = 0;\n
                        if ((v44[5] << 16))\n
                        {\n
                            v11 = 0;\n
                            if ((v44[6] << 8))\n
                                v11 = v44[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v45) = v11 & 1;\n
    cgc_uint2str(&v43, 21, *(&v45));\n
    v10 = &v43;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v292 = v46;\n
    *(v292) = *(v292) - 8;\n
    v293 = v47;\n
    *(v293) = *(v293) + 8;\n
    v186 = a0;\n
    v185 = a1;\n
    memset(&v183, 0, 21);\n
    if (*(v185) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v184) = *(&*(v186));\n
    cgc_uint2str(&v183, 21, *(&v184));\n
    v9 = &v183;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v183)) < 0)\n
        cgc__terminate(1);\n
    v294 = v185;\n
    *(v294) = *(v294) - 8;\n
    v295 = v186;\n
    *(v295) = *(v295) + 8;\n
    v178 = a0;\n
    v177 = a1;\n
    if (*(v177) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v177) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v177);\n
    v176 = v8;\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v175 = cgc_calloc(134);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v175, \"Str: \");\n
    cgc_strncpy(v175 + 5, *(v178), v176);\n
    v297 = v178;\n
    *(v297) = &(*(v297))[4 + cgc_strlen(v175)];\n
    v299 = v177;\n
    *(v299) = *(v299) - (cgc_strlen(v175) + -4);\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 6);\n
    if (*(v75) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(&*(v76));\n
    cgc_uint2str(&v73, 6, v74);\n
    v7 = &v73;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v300 = v75;\n
    *(v300) = *(v300) - 2;\n
    v301 = v76;\n
    *(v301) = *(v301) + 2;\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v67) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v67);\n
    v66 = v6;\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = cgc_calloc(134);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v65, \"Str: \");\n
    cgc_strncpy(v65 + 5, *(v68), v66);\n
    v303 = v68;\n
    *(v303) = &(*(v303))[4 + cgc_strlen(v65)];\n
    v305 = v67;\n
    *(v305) = *(v305) - (cgc_strlen(v65) + -4);\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 4);\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(v80)->field_0;\n
    cgc_uint2str(&v77, 4, v78);\n
    v5 = &v77;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v306 = v79;\n
    *(v306) = *(v306) - 1;\n
    v307 = v80;\n
    *(v307) = *(v307) + 1;\n
    v206 = a0;\n
    v205 = a1;\n
    if (*(v205) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v204 = *(v206)->field_0;\n
    v308 = v205;\n
    *(v308) = *(v308) - 1;\n
    v309 = v206;\n
    *(v309) = *(v309) + 1;\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_44a110;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44a110:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v310 = v206;\n
    *(v310) = &(*(v310))[v204];\n
    v311 = v205;\n
    *(v311) = *(v311) - v204;\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v86) = *(&*(v88));\n
    cgc_uint2str(&v85, 21, *(&v86));\n
    v4 = &v85;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v312 = v87;\n
    *(v312) = *(v312) - 8;\n
    v313 = v88;\n
    *(v313) = *(v313) + 8;\n
    v42 = a0;\n
    v41 = a1;\n
    *(&v39) = *(v42);\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v39[0] << 8))\n
        v3 = v39[1];\n
    v40 = v3 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v2 = &v38;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v314 = v41;\n
    *(v314) = *(v314) - 2;\n
    v315 = v42;\n
    *(v315) = *(v315) + 2;\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 12, v102);\n
    v1 = &v101;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v316 = v103;\n
    *(v316) = *(v316) - 4;\n
    v317 = v104;\n
    *(v317) = *(v317) + 4;\n
    v144 = a0;\n
    v143 = a1;\n
    if (*(v143) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    v318 = v143;\n
    *(v318) = *(v318) - 2;\n
    v319 = v144;\n
    *(v319) = *(v319) + 2;\n
    if (v142 <= *(v143) && !(!v142))\n
        goto LABEL_44a612;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44a612:\n
    v141 = cgc_calloc(v142);\n
    if (!v141)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v141, *(v144), v142);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v320 = v143;\n
    *(v320) = *(v320) - v142;\n
    v321 = v144;\n
    *(v321) = &(*(v321))[v142];\n
    cgc_checkheap();\n
    cgc_free(v141);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    cgc_uint2str(&v117, 12, v118);\n
    v0 = &v117;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v322 = v119;\n
    *(v322) = *(v322) - 4;\n
    v323 = v120;\n
    *(v323) = *(v323) + 4;\n
    v202 = a0;\n
    v201 = a1;\n
    if (*(v201) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v200 = *(v202)->field_0;\n
    v324 = v201;\n
    *(v324) = *(v324) - 1;\n
    v325 = v202;\n
    *(v325) = *(v325) + 1;\n
    if (v200 <= *(v201) && !(!v200))\n
        goto LABEL_44a8cc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44a8cc:\n
    v199 = cgc_calloc(v200);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v199, *(v202), v200);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v326 = v202;\n
    *(v326) = &(*(v326))[v200];\n
    v327 = v201;\n
    *(v327) = *(v327) - v200;\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    v36 ^= cgc__cookie;\n
    if (v36)\n
        cgc___stack_cookie_fail();\n
    v328 = a1;\n
    if (*(a1) > 0 && v35 >= 0)\n
    {\n
        v328 = v35;\n
        if (v328 < 0)\n
            v328 = *(&(&v37)[8 * v35])(a0, a1);\n
    }\n
    return v328;\n
}\n
", "4499973:sub_44aa05": null, "4499984:cgc_process_llamatrochocephalus": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamatrochocephalus(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x234]\n
    struct_1 *v1;  // [bp-0x230]\n
    char v2;  // [bp-0x221]\n
    struct_1 *v3;  // [bp-0x220]\n
    struct_1 *v4;  // [bp-0x218]\n
    struct_1 *v5;  // [bp-0x210]\n
    char v6;  // [bp-0x201]\n
    struct_1 *v7;  // [bp-0x200]\n
    struct_1 *v8;  // [bp-0x1f8]\n
    struct_1 *v9;  // [bp-0x1f0]\n
    unsigned int v10;  // [bp-0x1e8]\n
    unsigned int v11;  // [bp-0x1e4]\n
    char v12;  // [bp-0x1e0]\n
    char v13;  // [bp-0x1c8]\n
    unsigned int v14;  // [bp-0x1b0]\n
    unsigned int *v15;  // [bp-0x1a8]\n
    struct struct_0 **v16;  // [bp-0x1a0]\n
    char v17;  // [bp-0x198]\n
    unsigned int v18;  // [bp-0x18c]\n
    unsigned int *v19;  // [bp-0x188]\n
    struct struct_0 **v20;  // [bp-0x180]\n
    unsigned long v21;  // [bp-0x178]\n
    unsigned short v22;  // [bp-0x16a]\n
    unsigned int *v23;  // [bp-0x168]\n
    struct struct_0 **v24;  // [bp-0x160]\n
    unsigned long v25;  // [bp-0x158]\n
    unsigned short v26;  // [bp-0x14a]\n
    unsigned int *v27;  // [bp-0x148]\n
    struct struct_0 **v28;  // [bp-0x140]\n
    char v29;  // [bp-0x134]\n
    char v30[4];  // [bp-0x128]\n
    unsigned int v31;  // [bp-0x11c]\n
    unsigned int *v32;  // [bp-0x118]\n
    struct struct_0 **v33;  // [bp-0x110]\n
    char v34;  // [bp-0x104]\n
    char v35[4];  // [bp-0xf8]\n
    unsigned int v36;  // [bp-0xec]\n
    unsigned int *v37;  // [bp-0xe8]\n
    struct struct_0 **v38;  // [bp-0xe0]\n
    char *v39;  // [bp-0xd8]\n
    unsigned int v40;  // [bp-0xcc]\n
    unsigned int *v41;  // [bp-0xc8]\n
    struct struct_0 **v42;  // [bp-0xc0]\n
    char v43;  // [bp-0xb8]\n
    unsigned int v44;  // [bp-0xa0]\n
    unsigned int *v45;  // [bp-0x98]\n
    struct struct_0 **v46;  // [bp-0x90]\n
    char v47;  // [bp-0x88]\n
    unsigned int v48;  // [bp-0x70]\n
    unsigned int *v49;  // [bp-0x68]\n
    struct struct_0 **v50;  // [bp-0x60]\n
    char v51;  // [bp-0x58]\n
    unsigned int v52;  // [bp-0x40]\n
    unsigned int *v53;  // [bp-0x38]\n
    struct struct_0 **v54;  // [bp-0x30]\n
    unsigned long v55;  // [bp-0x28]\n
    char v56;  // [bp-0x19]\n
    unsigned int *v57;  // [bp-0x18]\n
    struct struct_0 **v58;  // [bp-0x10]\n
    unsigned int *v60;  // rax\n
    struct struct_0 **v61;  // rax\n
    unsigned int *v62;  // rax\n
    struct struct_0 **v63;  // rax\n
    struct struct_0 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    unsigned int *v66;  // rax\n
    struct struct_0 **v67;  // rax\n
    unsigned int *v68;  // rax\n
    struct struct_0 **v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_0 **v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_0 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_0 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_0 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_0 **v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_0 **v85;  // rax\n
    struct struct_0 **v87;  // rax\n
    unsigned int *v89;  // rax\n
    unsigned int *v90;  // rax, Other Possible Types: unsigned long\n
\n
    v11 = cgc__cookie;\n
    v10 = -1;\n
    if (cgc_sendline(1, \"===llamatrochocephalus===\", 25) < 0)\n
        cgc__terminate(1);\n
    v20 = a0;\n
    v19 = a1;\n
    memset(&v17, 0, 12);\n
    if (*(v19) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = *(&*(v20));\n
    cgc_uint2str(&v17, 12, v18);\n
    v9 = &v17;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v17)) < 0)\n
        cgc__terminate(1);\n
    v60 = v19;\n
    *(v60) = *(v60) - 4;\n
    v61 = v20;\n
    *(v61) = *(v61) + 4;\n
    v58 = a0;\n
    v57 = a1;\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(v58)->field_0;\n
    v62 = v57;\n
    *(v62) = *(v62) - 1;\n
    v63 = v58;\n
    *(v63) = *(v63) + 1;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_44ac3d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44ac3d:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v64 = v58;\n
    *(v64) = &(*(v64))[v56];\n
    v65 = v57;\n
    *(v65) = *(v65) - v56;\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v16 = a0;\n
    v15 = a1;\n
    memset(&v13, 0, 21);\n
    if (*(v15) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v14) = *(&*(v16));\n
    cgc_uint2str(&v13, 21, *(&v14));\n
    v8 = &v13;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v13)) < 0)\n
        cgc__terminate(1);\n
    v66 = v15;\n
    *(v66) = *(v66) - 8;\n
    v67 = v16;\n
    *(v67) = *(v67) + 8;\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v52) = *(&*(v54));\n
    cgc_uint2str(&v51, 21, *(&v52));\n
    v7 = &v51;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v68 = v53;\n
    *(v68) = *(v68) - 8;\n
    v69 = v54;\n
    *(v69) = *(v69) + 8;\n
    v28 = a0;\n
    v27 = a1;\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = *(&*(v28));\n
    v70 = v27;\n
    *(v70) = *(v70) - 2;\n
    v71 = v28;\n
    *(v71) = *(v71) + 2;\n
    if (v26 <= *(v27) && !(!v26))\n
        goto LABEL_44afd8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44afd8:\n
    v25 = cgc_calloc(v26);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v25, *(v28), v26);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v72 = v27;\n
    *(v72) = *(v72) - v26;\n
    v73 = v28;\n
    *(v73) = &(*(v73))[v26];\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    v24 = a0;\n
    v23 = a1;\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = *(&*(v24));\n
    v74 = v23;\n
    *(v74) = *(v74) - 2;\n
    v75 = v24;\n
    *(v75) = *(v75) + 2;\n
    if (v22 <= *(v23) && !(!v22))\n
        goto LABEL_44b1a8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44b1a8:\n
    v21 = cgc_calloc(v22);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v21, *(v24), v22);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v76 = v23;\n
    *(v76) = *(v76) - v22;\n
    v77 = v24;\n
    *(v77) = &(*(v77))[v22];\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35) = *(v38);\n
    memset(&v34, 0, 12);\n
    if (*(v37) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v35[0] << 24))\n
    {\n
        v6 = 0;\n
        if ((v35[1] << 16))\n
        {\n
            v6 = 0;\n
            if ((v35[2] << 8))\n
                v6 = v35[3];\n
        }\n
    }\n
    v36 = v6 & 1;\n
    cgc_uint2str(&v34, 12, v36);\n
    v5 = &v34;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v78 = v37;\n
    *(v78) = *(v78) - 4;\n
    v79 = v38;\n
    *(v79) = *(v79) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v48) = *(&*(v50));\n
    cgc_uint2str(&v47, 21, *(&v48));\n
    v4 = &v47;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v80 = v49;\n
    *(v80) = *(v80) - 8;\n
    v81 = v50;\n
    *(v81) = *(v81) + 8;\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v44) = *(&*(v46));\n
    cgc_uint2str(&v43, 21, *(&v44));\n
    v3 = &v43;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v82 = v45;\n
    *(v82) = *(v82) - 8;\n
    v83 = v46;\n
    *(v83) = *(v83) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 12);\n
    if (*(v32) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v30[0] << 24))\n
    {\n
        v2 = 0;\n
        if ((v30[1] << 16))\n
        {\n
            v2 = 0;\n
            if ((v30[2] << 8))\n
                v2 = v30[3];\n
        }\n
    }\n
    v31 = v2 & 1;\n
    cgc_uint2str(&v29, 12, v31);\n
    v1 = &v29;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v84 = v32;\n
    *(v84) = *(v84) - 4;\n
    v85 = v33;\n
    *(v85) = *(v85) + 4;\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v41) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v41);\n
    v40 = v0;\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = cgc_calloc(134);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v39, \"Str: \");\n
    cgc_strncpy(v39 + 5, *(v42), v40);\n
    v87 = v42;\n
    *(v87) = &(*(v87))[4 + cgc_strlen(v39)];\n
    v89 = v41;\n
    *(v89) = *(v89) - (cgc_strlen(v39) + -4);\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v11 ^= cgc__cookie;\n
    if (v11)\n
        cgc___stack_cookie_fail();\n
    v90 = a1;\n
    if (*(a1) > 0 && v10 >= 0)\n
    {\n
        v90 = v10;\n
        if (v90 < 0)\n
            v90 = *(&(&v12)[8 * v10])(a0, a1);\n
    }\n
    return v90;\n
}\n
", "4504037:sub_44b9e5": null, "4504048:cgc_process_llamaPlautine": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaPlautine(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x5a0]\n
    struct_1 *v1;  // [bp-0x598]\n
    struct_1 *v2;  // [bp-0x590]\n
    char v3;  // [bp-0x581]\n
    struct_1 *v4;  // [bp-0x580]\n
    struct_1 *v5;  // [bp-0x578]\n
    char v6;  // [bp-0x569]\n
    struct_1 *v7;  // [bp-0x568]\n
    struct_1 *v8;  // [bp-0x560]\n
    struct_1 *v9;  // [bp-0x558]\n
    struct_1 *v10;  // [bp-0x550]\n
    unsigned int v11;  // [bp-0x548]\n
    unsigned int v12;  // [bp-0x544]\n
    struct_1 *v13;  // [bp-0x540]\n
    char v14;  // [bp-0x531]\n
    struct_1 *v15;  // [bp-0x530]\n
    char v16;  // [bp-0x521]\n
    struct_1 *v17;  // [bp-0x520]\n
    struct_1 *v18;  // [bp-0x518]\n
    char v19;  // [bp-0x509]\n
    struct_1 *v20;  // [bp-0x508]\n
    char v21;  // [bp-0x4f9]\n
    struct_1 *v22;  // [bp-0x4f8]\n
    struct_1 *v23;  // [bp-0x4f0]\n
    char v24;  // [bp-0x4e1]\n
    unsigned int v25;  // [bp-0x4e0]\n
    unsigned int v26;  // [bp-0x4dc]\n
    struct_1 *v27;  // [bp-0x4d8]\n
    unsigned int v28;  // [bp-0x4cc]\n
    struct_1 *v29;  // [bp-0x4c8]\n
    char v30;  // [bp-0x4b9]\n
    unsigned int v31;  // [bp-0x4b8]\n
    unsigned int v32;  // [bp-0x4b4]\n
    char v33;  // [bp-0x4b0]\n
    char v34;  // [bp-0x496]\n
    char v35[8];  // [bp-0x490]\n
    unsigned short v36;  // [bp-0x482]\n
    unsigned int *v37;  // [bp-0x480]\n
    struct struct_0 **v38;  // [bp-0x478]\n
    char v39;  // [bp-0x46e]\n
    char v40[2];  // [bp-0x468]\n
    unsigned short v41;  // [bp-0x45a]\n
    unsigned int *v42;  // [bp-0x458]\n
    struct struct_0 **v43;  // [bp-0x450]\n
    char v44;  // [bp-0x446]\n
    char v45[2];  // [bp-0x440]\n
    unsigned short v46;  // [bp-0x432]\n
    unsigned int *v47;  // [bp-0x430]\n
    struct struct_0 **v48;  // [bp-0x428]\n
    char v49;  // [bp-0x41e]\n
    char v50[8];  // [bp-0x418]\n
    unsigned short v51;  // [bp-0x40a]\n
    unsigned int *v52;  // [bp-0x408]\n
    struct struct_0 **v53;  // [bp-0x400]\n
    char v54;  // [bp-0x3f8]\n
    char v55[8];  // [bp-0x3d8]\n
    unsigned int v56;  // [bp-0x3d0]\n
    unsigned int *v57;  // [bp-0x3c8]\n
    struct struct_0 **v58;  // [bp-0x3c0]\n
    char v59;  // [bp-0x3b8]\n
    char *v60;  // [bp-0x398]\n
    unsigned int v61;  // [bp-0x390]\n
    unsigned int *v62;  // [bp-0x388]\n
    struct struct_0 **v63;  // [bp-0x380]\n
    char v64;  // [bp-0x378]\n
    char v65[8];  // [bp-0x358]\n
    unsigned int v66;  // [bp-0x350]\n
    unsigned int *v67;  // [bp-0x348]\n
    struct struct_0 **v68;  // [bp-0x340]\n
    char *v69;  // [bp-0x338]\n
    unsigned int v70;  // [bp-0x32c]\n
    unsigned int *v71;  // [bp-0x328]\n
    struct struct_0 **v72;  // [bp-0x320]\n
    char *v73;  // [bp-0x318]\n
    unsigned int v74;  // [bp-0x30c]\n
    unsigned int *v75;  // [bp-0x308]\n
    struct struct_0 **v76;  // [bp-0x300]\n
    char v77;  // [bp-0x2f8]\n
    unsigned short v78;  // [bp-0x2f2]\n
    unsigned int *v79;  // [bp-0x2f0]\n
    struct struct_0 **v80;  // [bp-0x2e8]\n
    char v81;  // [bp-0x2e0]\n
    unsigned short v82;  // [bp-0x2da]\n
    unsigned int *v83;  // [bp-0x2d8]\n
    struct struct_0 **v84;  // [bp-0x2d0]\n
    char v85;  // [bp-0x2c8]\n
    unsigned short v86;  // [bp-0x2c2]\n
    unsigned int *v87;  // [bp-0x2c0]\n
    struct struct_0 **v88;  // [bp-0x2b8]\n
    char v89;  // [bp-0x2ad]\n
    char v90;  // [bp-0x2a9]\n
    unsigned int *v91;  // [bp-0x2a8]\n
    struct struct_0 **v92;  // [bp-0x2a0]\n
    char v93;  // [bp-0x298]\n
    unsigned int v94;  // [bp-0x28c]\n
    unsigned int *v95;  // [bp-0x288]\n
    struct struct_0 **v96;  // [bp-0x280]\n
    char v97;  // [bp-0x278]\n
    unsigned int v98;  // [bp-0x26c]\n
    unsigned int *v99;  // [bp-0x268]\n
    struct struct_0 **v100;  // [bp-0x260]\n
    char v101;  // [bp-0x258]\n
    unsigned int v102;  // [bp-0x24c]\n
    unsigned int *v103;  // [bp-0x248]\n
    struct struct_0 **v104;  // [bp-0x240]\n
    char v105;  // [bp-0x238]\n
    unsigned int v106;  // [bp-0x22c]\n
    unsigned int *v107;  // [bp-0x228]\n
    struct struct_0 **v108;  // [bp-0x220]\n
    unsigned long v109;  // [bp-0x218]\n
    unsigned short v110;  // [bp-0x20a]\n
    unsigned int *v111;  // [bp-0x208]\n
    struct struct_0 **v112;  // [bp-0x200]\n
    unsigned long v113;  // [bp-0x1f8]\n
    unsigned short v114;  // [bp-0x1ea]\n
    unsigned int *v115;  // [bp-0x1e8]\n
    struct struct_0 **v116;  // [bp-0x1e0]\n
    unsigned long v117;  // [bp-0x1d8]\n
    unsigned short v118;  // [bp-0x1ca]\n
    unsigned int *v119;  // [bp-0x1c8]\n
    struct struct_0 **v120;  // [bp-0x1c0]\n
    unsigned long v121;  // [bp-0x1b8]\n
    unsigned short v122;  // [bp-0x1aa]\n
    unsigned int *v123;  // [bp-0x1a8]\n
    struct struct_0 **v124;  // [bp-0x1a0]\n
    unsigned long v125;  // [bp-0x198]\n
    unsigned short v126;  // [bp-0x18a]\n
    unsigned int *v127;  // [bp-0x188]\n
    struct struct_0 **v128;  // [bp-0x180]\n
    unsigned long v129;  // [bp-0x178]\n
    unsigned short v130;  // [bp-0x16a]\n
    unsigned int *v131;  // [bp-0x168]\n
    struct struct_0 **v132;  // [bp-0x160]\n
    char v133;  // [bp-0x154]\n
    char v134[4];  // [bp-0x148]\n
    unsigned int v135;  // [bp-0x13c]\n
    unsigned int *v136;  // [bp-0x138]\n
    struct struct_0 **v137;  // [bp-0x130]\n
    char *v138;  // [bp-0x128]\n
    unsigned int v139;  // [bp-0x11c]\n
    unsigned int *v140;  // [bp-0x118]\n
    struct struct_0 **v141;  // [bp-0x110]\n
    char *v142;  // [bp-0x108]\n
    unsigned int v143;  // [bp-0xfc]\n
    unsigned int *v144;  // [bp-0xf8]\n
    struct struct_0 **v145;  // [bp-0xf0]\n
    char *v146;  // [bp-0xe8]\n
    unsigned int v147;  // [bp-0xdc]\n
    unsigned int *v148;  // [bp-0xd8]\n
    struct struct_0 **v149;  // [bp-0xd0]\n
    char v150;  // [bp-0xc8]\n
    unsigned int v151;  // [bp-0xb0]\n
    unsigned int *v152;  // [bp-0xa8]\n
    struct struct_0 **v153;  // [bp-0xa0]\n
    char v154;  // [bp-0x98]\n
    unsigned int v155;  // [bp-0x80]\n
    unsigned int *v156;  // [bp-0x78]\n
    struct struct_0 **v157;  // [bp-0x70]\n
    unsigned long v158;  // [bp-0x68]\n
    char v159;  // [bp-0x59]\n
    unsigned int *v160;  // [bp-0x58]\n
    struct struct_0 **v161;  // [bp-0x50]\n
    unsigned long v162;  // [bp-0x48]\n
    char v163;  // [bp-0x39]\n
    unsigned int *v164;  // [bp-0x38]\n
    struct struct_0 **v165;  // [bp-0x30]\n
    unsigned long v166;  // [bp-0x28]\n
    char v167;  // [bp-0x19]\n
    unsigned int *v168;  // [bp-0x18]\n
    struct struct_0 **v169;  // [bp-0x10]\n
    unsigned int *v171;  // rax\n
    struct struct_0 **v172;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v184;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v222;  // rax\n
    unsigned int *v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax, Other Possible Types: unsigned long\n
\n
    v32 = cgc__cookie;\n
    v31 = -1;\n
    if (cgc_sendline(1, \"===llamaPlautine===\", 19) < 0)\n
        cgc__terminate(1);\n
    v137 = a0;\n
    v136 = a1;\n
    *(&v134) = *(v137);\n
    memset(&v133, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if ((v134[0] << 24))\n
    {\n
        v30 = 0;\n
        if ((v134[1] << 16))\n
        {\n
            v30 = 0;\n
            if ((v134[2] << 8))\n
                v30 = v134[3];\n
        }\n
    }\n
    v135 = v30 & 1;\n
    cgc_uint2str(&v133, 12, v135);\n
    v29 = &v133;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v171 = v136;\n
    *(v171) = *(v171) - 4;\n
    v172 = v137;\n
    *(v172) = *(v172) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v75) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v75);\n
    v74 = v28;\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = cgc_calloc(134);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v73, \"Str: \");\n
    cgc_strncpy(v73 + 5, *(v76), v74);\n
    v174 = v76;\n
    *(v174) = &(*(v174))[4 + cgc_strlen(v73)];\n
    v176 = v75;\n
    *(v176) = *(v176) - (cgc_strlen(v73) + -4);\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v27 = &v105;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v177 = v107;\n
    *(v177) = *(v177) - 4;\n
    v178 = v108;\n
    *(v178) = *(v178) + 4;\n
    v169 = a0;\n
    v168 = a1;\n
    if (*(v168) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v167 = *(v169)->field_0;\n
    v179 = v168;\n
    *(v179) = *(v179) - 1;\n
    v180 = v169;\n
    *(v180) = *(v180) + 1;\n
    if (v167 <= *(v168) && !(!v167))\n
        goto LABEL_44bf9d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44bf9d:\n
    v166 = cgc_calloc(v167);\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v166, *(v169), v167);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v181 = v169;\n
    *(v181) = &(*(v181))[v167];\n
    v182 = v168;\n
    *(v182) = *(v182) - v167;\n
    cgc_checkheap();\n
    cgc_free(v166);\n
    v149 = a0;\n
    v148 = a1;\n
    if (*(v148) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v148) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v148);\n
    v147 = v26;\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = cgc_calloc(134);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v146, \"Str: \");\n
    cgc_strncpy(v146 + 5, *(v149), v147);\n
    v184 = v149;\n
    *(v184) = &(*(v184))[4 + cgc_strlen(v146)];\n
    v186 = v148;\n
    *(v186) = *(v186) - (cgc_strlen(v146) + -4);\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v71) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v71);\n
    v70 = v25;\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = cgc_calloc(134);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v69, \"Str: \");\n
    cgc_strncpy(v69 + 5, *(v72), v70);\n
    v188 = v72;\n
    *(v188) = &(*(v188))[4 + cgc_strlen(v69)];\n
    v190 = v71;\n
    *(v190) = *(v190) - (cgc_strlen(v69) + -4);\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v68 = a0;\n
    v67 = a1;\n
    *(&v65[0]) = *(v68);\n
    memset(&v64, 0, 21);\n
    if (*(v67) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = 0;\n
    if (v65[0] << 56)\n
    {\n
        v24 = 0;\n
        if (v65[1] << 48)\n
        {\n
            v24 = 0;\n
            if (v65[2] << 40)\n
            {\n
                v24 = 0;\n
                if (v65[3] << 32)\n
                {\n
                    v24 = 0;\n
                    if ((v65[4] << 24))\n
                    {\n
                        v24 = 0;\n
                        if ((v65[5] << 16))\n
                        {\n
                            v24 = 0;\n
                            if ((v65[6] << 8))\n
                                v24 = v65[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v66) = v24 & 1;\n
    cgc_uint2str(&v64, 21, *(&v66));\n
    v23 = &v64;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v191 = v67;\n
    *(v191) = *(v191) - 8;\n
    v192 = v68;\n
    *(v192) = *(v192) + 8;\n
    v165 = a0;\n
    v164 = a1;\n
    if (*(v164) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v163 = *(v165)->field_0;\n
    v193 = v164;\n
    *(v193) = *(v193) - 1;\n
    v194 = v165;\n
    *(v194) = *(v194) + 1;\n
    if (v163 <= *(v164) && !(!v163))\n
        goto LABEL_44c728;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44c728:\n
    v162 = cgc_calloc(v163);\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v162, *(v165), v163);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v195 = v165;\n
    *(v195) = &(*(v195))[v163];\n
    v196 = v164;\n
    *(v196) = *(v196) - v163;\n
    cgc_checkheap();\n
    cgc_free(v162);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 4);\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(v92)->field_0;\n
    cgc_uint2str(&v89, 4, v90);\n
    v22 = &v89;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v197 = v91;\n
    *(v197) = *(v197) - 1;\n
    v198 = v92;\n
    *(v198) = *(v198) + 1;\n
    v63 = a0;\n
    v62 = a1;\n
    v60 = &*(v63)->field_0;\n
    memset(&v59, 0, 21);\n
    if (*(v62) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if (*(v60) << 56)\n
    {\n
        v21 = 0;\n
        if (v60[1] << 48)\n
        {\n
            v21 = 0;\n
            if (v60[2] << 40)\n
            {\n
                v21 = 0;\n
                if (v60[3] << 32)\n
                {\n
                    v21 = 0;\n
                    if ((v60[4] << 24))\n
                    {\n
                        v21 = 0;\n
                        if ((v60[5] << 16))\n
                        {\n
                            v21 = 0;\n
                            if ((v60[6] << 8))\n
                                v21 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v61) = v21 & 1;\n
    cgc_uint2str(&v59, 21, *(&v61));\n
    v20 = &v59;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v59)) < 0)\n
        cgc__terminate(1);\n
    v199 = v62;\n
    *(v199) = *(v199) - 8;\n
    v200 = v63;\n
    *(v200) = *(v200) + 8;\n
    v53 = a0;\n
    v52 = a1;\n
    *(&v50[0]) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((v50[0] << 8))\n
        v19 = v50[1];\n
    v51 = v19 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v18 = &v49;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v201 = v52;\n
    *(v201) = *(v201) - 2;\n
    v202 = v53;\n
    *(v202) = *(v202) + 2;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 12, v94);\n
    v17 = &v93;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v203 = v95;\n
    *(v203) = *(v203) - 4;\n
    v204 = v96;\n
    *(v204) = *(v204) + 4;\n
    v161 = a0;\n
    v160 = a1;\n
    if (*(v160) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = *(v161)->field_0;\n
    v205 = v160;\n
    *(v205) = *(v205) - 1;\n
    v206 = v161;\n
    *(v206) = *(v206) + 1;\n
    if (v159 <= *(v160) && !(!v159))\n
        goto LABEL_44ce18;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44ce18:\n
    v158 = cgc_calloc(v159);\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v158, *(v161), v159);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v207 = v161;\n
    *(v207) = &(*(v207))[v159];\n
    v208 = v160;\n
    *(v208) = *(v208) - v159;\n
    cgc_checkheap();\n
    cgc_free(v158);\n
    v120 = a0;\n
    v119 = a1;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    v209 = v119;\n
    *(v209) = *(v209) - 2;\n
    v210 = v120;\n
    *(v210) = *(v210) + 2;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_44cfc7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44cfc7:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v211 = v119;\n
    *(v211) = *(v211) - v118;\n
    v212 = v120;\n
    *(v212) = &(*(v212))[v118];\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45) = *(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v45[0] << 8))\n
        v16 = v45[1];\n
    v46 = v16 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v15 = &v44;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v213 = v47;\n
    *(v213) = *(v213) - 2;\n
    v214 = v48;\n
    *(v214) = *(v214) + 2;\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((v40[0] << 8))\n
        v14 = v40[1];\n
    v41 = v14 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v13 = &v39;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v215 = v42;\n
    *(v215) = *(v215) - 2;\n
    v216 = v43;\n
    *(v216) = *(v216) + 2;\n
    v145 = a0;\n
    v144 = a1;\n
    if (*(v144) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v144) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v144);\n
    v143 = v12;\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = cgc_calloc(134);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v142, \"Str: \");\n
    cgc_strncpy(v142 + 5, *(v145), v143);\n
    v218 = v145;\n
    *(v218) = &(*(v218))[4 + cgc_strlen(v142)];\n
    v220 = v144;\n
    *(v220) = *(v220) - (cgc_strlen(v142) + -4);\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v141 = a0;\n
    v140 = a1;\n
    if (*(v140) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v140) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v140);\n
    v139 = v11;\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = cgc_calloc(134);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v138, \"Str: \");\n
    cgc_strncpy(v138 + 5, *(v141), v139);\n
    v222 = v141;\n
    *(v222) = &(*(v222))[4 + cgc_strlen(v138)];\n
    v224 = v140;\n
    *(v224) = *(v224) - (cgc_strlen(v138) + -4);\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v157 = a0;\n
    v156 = a1;\n
    memset(&v154, 0, 21);\n
    if (*(v156) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v155) = *(&*(v157));\n
    cgc_uint2str(&v154, 21, *(&v155));\n
    v10 = &v154;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v154)) < 0)\n
        cgc__terminate(1);\n
    v225 = v156;\n
    *(v225) = *(v225) - 8;\n
    v226 = v157;\n
    *(v226) = *(v226) + 8;\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 12, v102);\n
    v9 = &v101;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v227 = v103;\n
    *(v227) = *(v227) - 4;\n
    v228 = v104;\n
    *(v228) = *(v228) + 4;\n
    v132 = a0;\n
    v131 = a1;\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    v229 = v131;\n
    *(v229) = *(v229) - 2;\n
    v230 = v132;\n
    *(v230) = *(v230) + 2;\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_44da05;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44da05:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v231 = v131;\n
    *(v231) = *(v231) - v130;\n
    v232 = v132;\n
    *(v232) = &(*(v232))[v130];\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 6, v86);\n
    v8 = &v85;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v233 = v87;\n
    *(v233) = *(v233) - 2;\n
    v234 = v88;\n
    *(v234) = *(v234) + 2;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 6);\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 6, v82);\n
    v7 = &v81;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v235 = v83;\n
    *(v235) = *(v235) - 2;\n
    v236 = v84;\n
    *(v236) = *(v236) + 2;\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35[0]) = *(v38);\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v35[0] << 8))\n
        v6 = v35[1];\n
    v36 = v6 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v5 = &v34;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v237 = v37;\n
    *(v237) = *(v237) - 2;\n
    v238 = v38;\n
    *(v238) = *(v238) + 2;\n
    v116 = a0;\n
    v115 = a1;\n
    if (*(v115) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    v239 = v115;\n
    *(v239) = *(v239) - 2;\n
    v240 = v116;\n
    *(v240) = *(v240) + 2;\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_44df25;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44df25:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v241 = v115;\n
    *(v241) = *(v241) - v114;\n
    v242 = v116;\n
    *(v242) = &(*(v242))[v114];\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v153 = a0;\n
    v152 = a1;\n
    memset(&v150, 0, 21);\n
    if (*(v152) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v151) = *(&*(v153));\n
    cgc_uint2str(&v150, 21, *(&v151));\n
    v4 = &v150;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v150)) < 0)\n
        cgc__terminate(1);\n
    v243 = v152;\n
    *(v243) = *(v243) - 8;\n
    v244 = v153;\n
    *(v244) = *(v244) + 8;\n
    v112 = a0;\n
    v111 = a1;\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    v245 = v111;\n
    *(v245) = *(v245) - 2;\n
    v246 = v112;\n
    *(v246) = *(v246) + 2;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_44e1fb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44e1fb:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v247 = v111;\n
    *(v247) = *(v247) - v110;\n
    v248 = v112;\n
    *(v248) = &(*(v248))[v110];\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v58 = a0;\n
    v57 = a1;\n
    *(&v55[0]) = *(v58);\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v55[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v55[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v55[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v55[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v55[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v55[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v55[6] << 8))\n
                                v3 = v55[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v56) = v3 & 1;\n
    cgc_uint2str(&v54, 21, *(&v56));\n
    v2 = &v54;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v249 = v57;\n
    *(v249) = *(v249) - 8;\n
    v250 = v58;\n
    *(v250) = *(v250) + 8;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 12, v98);\n
    v1 = &v97;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v251 = v99;\n
    *(v251) = *(v251) - 4;\n
    v252 = v100;\n
    *(v252) = *(v252) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 6);\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(&*(v80));\n
    cgc_uint2str(&v77, 6, v78);\n
    v0 = &v77;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v253 = v79;\n
    *(v253) = *(v253) - 2;\n
    v254 = v80;\n
    *(v254) = *(v254) + 2;\n
    v128 = a0;\n
    v127 = a1;\n
    if (*(v127) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    v255 = v127;\n
    *(v255) = *(v255) - 2;\n
    v256 = v128;\n
    *(v256) = *(v256) + 2;\n
    if (v126 <= *(v127) && !(!v126))\n
        goto LABEL_44e7ef;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44e7ef:\n
    v125 = cgc_calloc(v126);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v125, *(v128), v126);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v257 = v127;\n
    *(v257) = *(v257) - v126;\n
    v258 = v128;\n
    *(v258) = &(*(v258))[v126];\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    v124 = a0;\n
    v123 = a1;\n
    if (*(v123) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    v259 = v123;\n
    *(v259) = *(v259) - 2;\n
    v260 = v124;\n
    *(v260) = *(v260) + 2;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_44e9bf;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44e9bf:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v261 = v123;\n
    *(v261) = *(v261) - v122;\n
    v262 = v124;\n
    *(v262) = &(*(v262))[v122];\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v32 ^= cgc__cookie;\n
    if (v32)\n
        cgc___stack_cookie_fail();\n
    v263 = a1;\n
    if (*(a1) > 0 && v31 >= 0)\n
    {\n
        v263 = v31;\n
        if (v263 < 0)\n
            v263 = *(&(&v33)[8 * v31])(a0, a1);\n
    }\n
    return v263;\n
}\n
", "4516633:sub_44eb19": null, "4516640:cgc_process_llamaHoplonemertini": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaHoplonemertini(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0xd0]\n
    char v1;  // [bp-0xc1]\n
    struct_0 *v2;  // [bp-0xc0]\n
    char v3;  // [bp-0xb1]\n
    unsigned int v4;  // [bp-0xb0]\n
    unsigned int v5;  // [bp-0xac]\n
    char v6;  // [bp-0xa8]\n
    char v7;  // [bp-0x8e]\n
    char v8[2];  // [bp-0x88]\n
    unsigned short v9;  // [bp-0x7a]\n
    unsigned int *v10;  // [bp-0x78]\n
    struct struct_1 **v11;  // [bp-0x70]\n
    char v12;  // [bp-0x68]\n
    char v13[8];  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x40]\n
    unsigned int *v15;  // [bp-0x38]\n
    struct struct_1 **v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    char v18;  // [bp-0x19]\n
    unsigned int *v19;  // [bp-0x18]\n
    struct struct_1 **v20;  // [bp-0x10]\n
    unsigned int *v22;  // rax\n
    struct struct_1 **v23;  // rax\n
    struct struct_1 **v24;  // rax\n
    unsigned int *v25;  // rax\n
    unsigned int *v26;  // rax\n
    struct struct_1 **v27;  // rax\n
    unsigned int *v28;  // rax\n
    struct struct_1 **v29;  // rax\n
    unsigned int *v30;  // rax, Other Possible Types: unsigned long\n
\n
    v5 = cgc__cookie;\n
    v4 = -1;\n
    if (cgc_sendline(1, \"===llamaHoplonemertini===\", 25) < 0)\n
        cgc__terminate(1);\n
    v20 = a0;\n
    v19 = a1;\n
    if (*(v19) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = *(v20)->field_0;\n
    v22 = v19;\n
    *(v22) = *(v22) - 1;\n
    v23 = v20;\n
    *(v23) = &*(v23)->field_1;\n
    if (v18 <= *(v19) && !(!v18))\n
        goto LABEL_44ec4c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44ec4c:\n
    v17 = cgc_calloc(v18);\n
    if (!v17)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v17, *(v20), v18);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v24 = v20;\n
    *(v24) = &(&*(v24)->field_0)[v18];\n
    v25 = v19;\n
    *(v25) = *(v25) - v18;\n
    cgc_checkheap();\n
    cgc_free(v17);\n
    v16 = a0;\n
    v15 = a1;\n
    *(&v13[0]) = *(v16);\n
    memset(&v12, 0, 21);\n
    if (*(v15) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v13[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v13[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v13[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v13[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v13[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v13[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v13[6] << 8))\n
                                v3 = v13[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v14) = v3 & 1;\n
    cgc_uint2str(&v12, 21, *(&v14));\n
    v2 = &v12;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v12)) < 0)\n
        cgc__terminate(1);\n
    v26 = v15;\n
    *(v26) = *(v26) - 8;\n
    v27 = v16;\n
    *(v27) = *(v27) + 1;\n
    v11 = a0;\n
    v10 = a1;\n
    *(&v8) = *(v11);\n
    memset(&v7, 0, 6);\n
    if (*(v10) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v8[0] << 8))\n
        v1 = v8[1];\n
    v9 = v1 & 1;\n
    cgc_uint2str(&v7, 6, v9);\n
    v0 = &v7;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v7)) < 0)\n
        cgc__terminate(1);\n
    v28 = v10;\n
    *(v28) = *(v28) - 2;\n
    v29 = v11;\n
    *(v29) = &*(v29)->field_2;\n
    v5 ^= cgc__cookie;\n
    if (v5)\n
        cgc___stack_cookie_fail();\n
    v30 = a1;\n
    if (*(a1) > 0 && v4 >= 0)\n
    {\n
        v30 = v4;\n
        if (v30 < 0)\n
            v30 = *(&(&v6)[8 * v4])(a0, a1);\n
    }\n
    return v30;\n
}\n
", "4518019:sub_44f083": null, "4518032:cgc_process_llamanatterjack": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c61e0;\n
\n
long long cgc_process_llamanatterjack(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x2c0]\n
    struct_1 *v1;  // [bp-0x2b8]\n
    struct_1 *v2;  // [bp-0x2b0]\n
    char v3;  // [bp-0x2a1]\n
    struct_1 *v4;  // [bp-0x2a0]\n
    char v5;  // [bp-0x291]\n
    struct_1 *v6;  // [bp-0x290]\n
    char v7;  // [bp-0x285]\n
    unsigned int v8;  // [bp-0x284]\n
    struct_1 *v9;  // [bp-0x280]\n
    struct_1 *v10;  // [bp-0x278]\n
    struct_1 *v11;  // [bp-0x270]\n
    unsigned int v12;  // [bp-0x268]\n
    unsigned int v13;  // [bp-0x264]\n
    unsigned long v14;  // [bp-0x260]\n
    char v15;  // [bp-0x248]\n
    char v16[8];  // [bp-0x228]\n
    unsigned int v17;  // [bp-0x220]\n
    unsigned int *v18;  // [bp-0x218]\n
    struct struct_0 **v19;  // [bp-0x210]\n
    char v20;  // [bp-0x208]\n
    char v21[8];  // [bp-0x1e8]\n
    unsigned int v22;  // [bp-0x1e0]\n
    unsigned int *v23;  // [bp-0x1d8]\n
    struct struct_0 **v24;  // [bp-0x1d0]\n
    char v25;  // [bp-0x1c8]\n
    char v26[8];  // [bp-0x1a8]\n
    unsigned int v27;  // [bp-0x1a0]\n
    unsigned int *v28;  // [bp-0x198]\n
    struct struct_0 **v29;  // [bp-0x190]\n
    char v30;  // [bp-0x188]\n
    unsigned short v31;  // [bp-0x182]\n
    unsigned int *v32;  // [bp-0x180]\n
    struct struct_0 **v33;  // [bp-0x178]\n
    char v34;  // [bp-0x170]\n
    unsigned short v35;  // [bp-0x16a]\n
    unsigned int *v36;  // [bp-0x168]\n
    struct struct_0 **v37;  // [bp-0x160]\n
    char v38[8];  // [bp-0x158]\n
    unsigned int *v39;  // [bp-0x150]\n
    struct struct_0 **v40;  // [bp-0x148]\n
    unsigned short *v41;  // [bp-0x140]\n
    unsigned int *v42;  // [bp-0x138]\n
    struct struct_0 **v43;  // [bp-0x130]\n
    char v44;  // [bp-0x128]\n
    unsigned int v45;  // [bp-0x11c]\n
    unsigned int *v46;  // [bp-0x118]\n
    struct struct_0 **v47;  // [bp-0x110]\n
    char v48;  // [bp-0x108]\n
    unsigned int v49;  // [bp-0xfc]\n
    unsigned int *v50;  // [bp-0xf8]\n
    struct struct_0 **v51;  // [bp-0xf0]\n
    char v52;  // [bp-0xe8]\n
    unsigned int v53;  // [bp-0xdc]\n
    unsigned int *v54;  // [bp-0xd8]\n
    struct struct_0 **v55;  // [bp-0xd0]\n
    unsigned long v56;  // [bp-0xc8]\n
    unsigned short v57;  // [bp-0xba]\n
    unsigned int *v58;  // [bp-0xb8]\n
    struct struct_0 **v59;  // [bp-0xb0]\n
    unsigned long v60;  // [bp-0xa8]\n
    unsigned short v61;  // [bp-0x9a]\n
    unsigned int *v62;  // [bp-0x98]\n
    struct struct_0 **v63;  // [bp-0x90]\n
    unsigned long v64;  // [bp-0x88]\n
    unsigned short v65;  // [bp-0x7a]\n
    unsigned int *v66;  // [bp-0x78]\n
    struct struct_0 **v67;  // [bp-0x70]\n
    char *v68;  // [bp-0x68]\n
    unsigned int v69;  // [bp-0x5c]\n
    unsigned int *v70;  // [bp-0x58]\n
    struct struct_0 **v71;  // [bp-0x50]\n
    unsigned long v72;  // [bp-0x48]\n
    char v73;  // [bp-0x39]\n
    unsigned int *v74;  // [bp-0x38]\n
    struct struct_0 **v75;  // [bp-0x30]\n
    unsigned long v76;  // [bp-0x28]\n
    char v77;  // [bp-0x19]\n
    unsigned int *v78;  // [bp-0x18]\n
    struct struct_0 **v79;  // [bp-0x10]\n
    unsigned int *v81;  // rax\n
    struct struct_0 **v82;  // rax\n
    unsigned int *v83;  // rax\n
    struct struct_0 **v84;  // rax\n
    unsigned int *v85;  // rax\n
    struct struct_0 **v86;  // rax\n
    struct struct_0 **v88;  // rax\n
    unsigned int *v90;  // rax\n
    unsigned int *v91;  // rax\n
    struct struct_0 **v92;  // rax\n
    unsigned int *v93;  // rax\n
    struct struct_0 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    struct struct_0 **v96;  // rax\n
    unsigned int *v97;  // rax\n
    struct struct_0 **v98;  // rax\n
    unsigned int *v99;  // rax\n
    struct struct_0 **v100;  // rax\n
    unsigned int *v101;  // rax\n
    struct struct_0 **v102;  // rax\n
    unsigned int *v103;  // rax\n
    struct struct_0 **v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v113;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    struct struct_0 **v117;  // rax\n
    unsigned int *v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    struct struct_0 **v121;  // rax\n
    unsigned int *v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax, Other Possible Types: unsigned long\n
\n
    v14 = g_4c61e0;\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamanatterjack===\", 21) < 0)\n
        cgc__terminate(1);\n
    v51 = a0;\n
    v50 = a1;\n
    memset(&v48, 0, 12);\n
    if (*(v50) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(&*(v51)->field_0);\n
    cgc_uint2str(&v48, 12, v49);\n
    v11 = &v48;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v81 = v50;\n
    *(v81) = *(v81) - 4;\n
    v82 = v51;\n
    *(v82) = &*(v82)->field_4;\n
    v47 = a0;\n
    v46 = a1;\n
    memset(&v44, 0, 12);\n
    if (*(v46) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(&*(v47)->field_0);\n
    cgc_uint2str(&v44, 12, v45);\n
    v10 = &v44;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v83 = v46;\n
    *(v83) = *(v83) - 4;\n
    v84 = v47;\n
    *(v84) = &*(v84)->field_4;\n
    v55 = a0;\n
    v54 = a1;\n
    memset(&v52, 0, 12);\n
    if (*(v54) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = *(&*(v55)->field_0);\n
    cgc_uint2str(&v52, 12, v53);\n
    v9 = &v52;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v85 = v54;\n
    *(v85) = *(v85) - 4;\n
    v86 = v55;\n
    *(v86) = &*(v86)->field_4;\n
    v71 = a0;\n
    v70 = a1;\n
    if (*(v70) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v70) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v70);\n
    v69 = v8;\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = cgc_calloc(134);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v68, \"Str: \");\n
    cgc_strncpy(v68 + 5, *(v71), v69);\n
    v88 = v71;\n
    *(v88) = &(&*(v88)->field_4)[cgc_strlen(v68)];\n
    v90 = v70;\n
    *(v90) = *(v90) - (cgc_strlen(v68) + -4);\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26[0]) = *(v29);\n
    memset(&v25, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v26[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v26[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v26[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v26[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v26[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v26[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v26[6] << 8))\n
                                v7 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v27) = v7 & 1;\n
    cgc_uint2str(&v25, 21, *(&v27));\n
    v6 = &v25;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v91 = v28;\n
    *(v91) = *(v91) - 8;\n
    v92 = v29;\n
    *(v92) = *(v92) + 1;\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21[0]) = *(v24);\n
    memset(&v20, 0, 21);\n
    if (*(v23) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v21[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v21[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v21[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v21[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v21[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v21[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v21[6] << 8))\n
                                v5 = v21[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v22) = v5 & 1;\n
    cgc_uint2str(&v20, 21, *(&v22));\n
    v4 = &v20;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v93 = v23;\n
    *(v93) = *(v93) - 8;\n
    v94 = v24;\n
    *(v94) = *(v94) + 1;\n
    v67 = a0;\n
    v66 = a1;\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(&*(v67)->field_0);\n
    v95 = v66;\n
    *(v95) = *(v95) - 2;\n
    v96 = v67;\n
    *(v96) = &*(v96)->padding_1[1];\n
    if (v65 <= *(v66) && !(!v65))\n
        goto LABEL_44fac1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44fac1:\n
    v64 = cgc_calloc(v65);\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v64, *(v67), v65);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v97 = v66;\n
    *(v97) = *(v97) - v65;\n
    v98 = v67;\n
    *(v98) = &(&*(v98)->field_0)[v65];\n
    cgc_checkheap();\n
    cgc_free(v64);\n
    v19 = a0;\n
    v18 = a1;\n
    *(&v16[0]) = *(v19);\n
    memset(&v15, 0, 21);\n
    if (*(v18) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v16[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v16[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v16[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v16[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v16[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v16[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v16[6] << 8))\n
                                v3 = v16[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v17) = v3 & 1;\n
    cgc_uint2str(&v15, 21, *(&v17));\n
    v2 = &v15;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v15)) < 0)\n
        cgc__terminate(1);\n
    v99 = v18;\n
    *(v99) = *(v99) - 8;\n
    v100 = v19;\n
    *(v100) = *(v100) + 1;\n
    v59 = a0;\n
    v58 = a1;\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(&*(v59)->field_0);\n
    v101 = v58;\n
    *(v101) = *(v101) - 2;\n
    v102 = v59;\n
    *(v102) = &*(v102)->padding_1[1];\n
    if (v57 <= *(v58) && !(!v57))\n
        goto LABEL_44fe86;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_44fe86:\n
    v56 = cgc_calloc(v57);\n
    if (!v56)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v56, *(v59), v57);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v103 = v58;\n
    *(v103) = *(v103) - v57;\n
    v104 = v59;\n
    *(v104) = &(&*(v104)->field_0)[v57];\n
    cgc_checkheap();\n
    cgc_free(v56);\n
    v63 = a0;\n
    v62 = a1;\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(&*(v63)->field_0);\n
    v105 = v62;\n
    *(v105) = *(v105) - 2;\n
    v106 = v63;\n
    *(v106) = &*(v106)->padding_1[1];\n
    if (v61 <= *(v62) && !(!v61))\n
        goto LABEL_450056;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_450056:\n
    v60 = cgc_calloc(v61);\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v60, *(v63), v61);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v107 = v62;\n
    *(v107) = *(v107) - v61;\n
    v108 = v63;\n
    *(v108) = &(&*(v108)->field_0)[v61];\n
    cgc_checkheap();\n
    cgc_free(v60);\n
    v43 = a0;\n
    v42 = a1;\n
    v41 = &*(v43)->field_0;\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = v42;\n
    *(v109) = *(v109) - 2;\n
    v110 = v43;\n
    *(v110) = &*(v110)->padding_1[1];\n
    v12 = *(v41);\n
    v37 = a0;\n
    v36 = a1;\n
    memset(&v34, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(&*(v37)->field_0);\n
    cgc_uint2str(&v34, 6, v35);\n
    v1 = &v34;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v111 = v36;\n
    *(v111) = *(v111) - 2;\n
    v112 = v37;\n
    *(v112) = &*(v112)->padding_1[1];\n
    v33 = a0;\n
    v32 = a1;\n
    memset(&v30, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(&*(v33)->field_0);\n
    cgc_uint2str(&v30, 6, v31);\n
    v0 = &v30;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v113 = v32;\n
    *(v113) = *(v113) - 2;\n
    v114 = v33;\n
    *(v114) = &*(v114)->padding_1[1];\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(v79)->field_0;\n
    v115 = v78;\n
    *(v115) = *(v115) - 1;\n
    v116 = v79;\n
    *(v116) = &*(v116)->padding_1;\n
    if (v77 <= *(v78) && !(!v77))\n
        goto LABEL_4504b3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4504b3:\n
    v76 = cgc_calloc(v77);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v76, *(v79), v77);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v117 = v79;\n
    *(v117) = &(&*(v117)->field_0)[v77];\n
    v118 = v78;\n
    *(v118) = *(v118) - v77;\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    v75 = a0;\n
    v74 = a1;\n
    if (*(v74) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(v75)->field_0;\n
    v119 = v74;\n
    *(v119) = *(v119) - 1;\n
    v120 = v75;\n
    *(v120) = &*(v120)->padding_1;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_450642;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_450642:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v121 = v75;\n
    *(v121) = &(&*(v121)->field_0)[v73];\n
    v122 = v74;\n
    *(v122) = *(v122) - v73;\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v38[0]) = *(v40);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = v39;\n
    *(v123) = *(v123) - 2;\n
    v124 = v40;\n
    *(v124) = &*(v124)->padding_1[1];\n
    v12 = *(&v38[0]);\n
    v13 ^= cgc__cookie;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v125 = a1;\n
    if (*(a1) > 0 && v12 >= 0)\n
    {\n
        v125 = v12;\n
        if (v125 < 1)\n
            v125 = (&v14)[v12](a0, a1);\n
    }\n
    return v125;\n
}\n
", "4524064:cgc_process_llamascobby": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamascobby(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x548]\n
    struct_1 *v1;  // [bp-0x540]\n
    struct_1 *v2;  // [bp-0x538]\n
    struct_1 *v3;  // [bp-0x530]\n
    struct_1 *v4;  // [bp-0x528]\n
    struct_1 *v5;  // [bp-0x520]\n
    struct_1 *v6;  // [bp-0x518]\n
    struct_1 *v7;  // [bp-0x510]\n
    char v8;  // [bp-0x501]\n
    struct_1 *v9;  // [bp-0x500]\n
    char v10;  // [bp-0x4f1]\n
    struct_1 *v11;  // [bp-0x4f0]\n
    unsigned int v12;  // [bp-0x4e4]\n
    struct_1 *v13;  // [bp-0x4e0]\n
    char v14;  // [bp-0x4d1]\n
    struct_1 *v15;  // [bp-0x4d0]\n
    struct_1 *v16;  // [bp-0x4c8]\n
    unsigned int v17;  // [bp-0x4bc]\n
    struct_1 *v18;  // [bp-0x4b8]\n
    struct_1 *v19;  // [bp-0x4b0]\n
    struct_1 *v20;  // [bp-0x4a8]\n
    unsigned int v21;  // [bp-0x49c]\n
    struct_1 *v22;  // [bp-0x498]\n
    char v23;  // [bp-0x489]\n
    unsigned int v24;  // [bp-0x488]\n
    unsigned int v25;  // [bp-0x484]\n
    struct_1 *v26;  // [bp-0x480]\n
    unsigned int v27;  // [bp-0x478]\n
    unsigned int v28;  // [bp-0x474]\n
    char v29;  // [bp-0x470]\n
    char v30;  // [bp-0x456]\n
    char v31[4];  // [bp-0x450]\n
    unsigned short v32;  // [bp-0x442]\n
    unsigned int *v33;  // [bp-0x440]\n
    struct struct_0 **v34;  // [bp-0x438]\n
    char v35;  // [bp-0x42e]\n
    char v36[4];  // [bp-0x428]\n
    unsigned short v37;  // [bp-0x41a]\n
    unsigned int *v38;  // [bp-0x418]\n
    struct struct_0 **v39;  // [bp-0x410]\n
    char v40;  // [bp-0x408]\n
    char v41[8];  // [bp-0x3f0]\n
    unsigned int v42;  // [bp-0x3e8]\n
    unsigned int *v43;  // [bp-0x3e0]\n
    struct struct_0 **v44;  // [bp-0x3d8]\n
    unsigned long v45;  // [bp-0x3d0]\n
    char v46;  // [bp-0x3c1]\n
    unsigned int *v47;  // [bp-0x3c0]\n
    struct struct_0 **v48;  // [bp-0x3b8]\n
    unsigned long v49;  // [bp-0x3b0]\n
    char v50;  // [bp-0x3a1]\n
    unsigned int *v51;  // [bp-0x3a0]\n
    struct struct_0 **v52;  // [bp-0x398]\n
    char *v53;  // [bp-0x390]\n
    unsigned int v54;  // [bp-0x384]\n
    unsigned int *v55;  // [bp-0x380]\n
    struct struct_0 **v56;  // [bp-0x378]\n
    char *v57;  // [bp-0x370]\n
    unsigned int v58;  // [bp-0x364]\n
    unsigned int *v59;  // [bp-0x360]\n
    struct struct_0 **v60;  // [bp-0x358]\n
    char *v61;  // [bp-0x350]\n
    unsigned int v62;  // [bp-0x344]\n
    unsigned int *v63;  // [bp-0x340]\n
    struct struct_0 **v64;  // [bp-0x338]\n
    char v65;  // [bp-0x330]\n
    unsigned short v66;  // [bp-0x32a]\n
    unsigned int *v67;  // [bp-0x328]\n
    struct struct_0 **v68;  // [bp-0x320]\n
    char v69;  // [bp-0x318]\n
    unsigned short v70;  // [bp-0x312]\n
    unsigned int *v71;  // [bp-0x310]\n
    struct struct_0 **v72;  // [bp-0x308]\n
    char v73;  // [bp-0x300]\n
    unsigned short v74;  // [bp-0x2fa]\n
    unsigned int *v75;  // [bp-0x2f8]\n
    struct struct_0 **v76;  // [bp-0x2f0]\n
    char v77;  // [bp-0x2e8]\n
    unsigned int v78;  // [bp-0x2d0]\n
    unsigned int *v79;  // [bp-0x2c8]\n
    struct struct_0 **v80;  // [bp-0x2c0]\n
    char v81;  // [bp-0x2b8]\n
    unsigned int v82;  // [bp-0x2a0]\n
    unsigned int *v83;  // [bp-0x298]\n
    struct struct_0 **v84;  // [bp-0x290]\n
    char v85;  // [bp-0x288]\n
    unsigned int v86;  // [bp-0x27c]\n
    unsigned int *v87;  // [bp-0x278]\n
    struct struct_0 **v88;  // [bp-0x270]\n
    char v89;  // [bp-0x268]\n
    unsigned int v90;  // [bp-0x25c]\n
    unsigned int *v91;  // [bp-0x258]\n
    struct struct_0 **v92;  // [bp-0x250]\n
    char v93;  // [bp-0x248]\n
    unsigned int v94;  // [bp-0x23c]\n
    unsigned int *v95;  // [bp-0x238]\n
    struct struct_0 **v96;  // [bp-0x230]\n
    char v97;  // [bp-0x228]\n
    unsigned int v98;  // [bp-0x21c]\n
    unsigned int *v99;  // [bp-0x218]\n
    struct struct_0 **v100;  // [bp-0x210]\n
    char v101;  // [bp-0x208]\n
    unsigned int v102;  // [bp-0x1fc]\n
    unsigned int *v103;  // [bp-0x1f8]\n
    struct struct_0 **v104;  // [bp-0x1f0]\n
    char v105;  // [bp-0x1e8]\n
    unsigned int v106;  // [bp-0x1dc]\n
    unsigned int *v107;  // [bp-0x1d8]\n
    struct struct_0 **v108;  // [bp-0x1d0]\n
    unsigned long v109;  // [bp-0x1c8]\n
    unsigned short v110;  // [bp-0x1ba]\n
    unsigned int *v111;  // [bp-0x1b8]\n
    struct struct_0 **v112;  // [bp-0x1b0]\n
    unsigned long v113;  // [bp-0x1a8]\n
    unsigned short v114;  // [bp-0x19a]\n
    unsigned int *v115;  // [bp-0x198]\n
    struct struct_0 **v116;  // [bp-0x190]\n
    unsigned long v117;  // [bp-0x188]\n
    unsigned short v118;  // [bp-0x17a]\n
    unsigned int *v119;  // [bp-0x178]\n
    struct struct_0 **v120;  // [bp-0x170]\n
    char v121;  // [bp-0x164]\n
    char v122[4];  // [bp-0x158]\n
    unsigned int v123;  // [bp-0x14c]\n
    unsigned int *v124;  // [bp-0x148]\n
    struct struct_0 **v125;  // [bp-0x140]\n
    char *v126;  // [bp-0x138]\n
    unsigned int v127;  // [bp-0x12c]\n
    unsigned int *v128;  // [bp-0x128]\n
    struct struct_0 **v129;  // [bp-0x120]\n
    char *v130;  // [bp-0x118]\n
    unsigned int v131;  // [bp-0x10c]\n
    unsigned int *v132;  // [bp-0x108]\n
    struct struct_0 **v133;  // [bp-0x100]\n
    char v134;  // [bp-0xf8]\n
    unsigned int v135;  // [bp-0xe0]\n
    unsigned int *v136;  // [bp-0xd8]\n
    struct struct_0 **v137;  // [bp-0xd0]\n
    char v138;  // [bp-0xc8]\n
    unsigned int v139;  // [bp-0xb0]\n
    unsigned int *v140;  // [bp-0xa8]\n
    struct struct_0 **v141;  // [bp-0xa0]\n
    char v142;  // [bp-0x98]\n
    unsigned int v143;  // [bp-0x80]\n
    unsigned int *v144;  // [bp-0x78]\n
    struct struct_0 **v145;  // [bp-0x70]\n
    unsigned long v146;  // [bp-0x68]\n
    char v147;  // [bp-0x59]\n
    unsigned int *v148;  // [bp-0x58]\n
    struct struct_0 **v149;  // [bp-0x50]\n
    unsigned long v150;  // [bp-0x48]\n
    char v151;  // [bp-0x39]\n
    unsigned int *v152;  // [bp-0x38]\n
    struct struct_0 **v153;  // [bp-0x30]\n
    unsigned long v154;  // [bp-0x28]\n
    char v155;  // [bp-0x19]\n
    unsigned int *v156;  // [bp-0x18]\n
    struct struct_0 **v157;  // [bp-0x10]\n
    unsigned int *v159;  // rax\n
    struct struct_0 **v160;  // rax\n
    struct struct_0 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v168;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    struct struct_0 **v176;  // rax\n
    unsigned int *v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_0 **v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    unsigned int *v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax, Other Possible Types: unsigned long\n
\n
    v28 = cgc__cookie;\n
    v27 = -1;\n
    if (cgc_sendline(1, \"===llamascobby===\", 17) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(v52)->field_0;\n
    v159 = v51;\n
    *(v159) = *(v159) - 1;\n
    v160 = v52;\n
    *(v160) = *(v160) + 1;\n
    if (v50 <= *(v51) && !(!v50))\n
        goto LABEL_45096a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45096a:\n
    v49 = cgc_calloc(v50);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v49, *(v52), v50);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v161 = v52;\n
    *(v161) = &(*(v161))[v50];\n
    v162 = v51;\n
    *(v162) = *(v162) - v50;\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 12);\n
    if (*(v91) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    cgc_uint2str(&v89, 12, v90);\n
    v26 = &v89;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v163 = v91;\n
    *(v163) = *(v163) - 4;\n
    v164 = v92;\n
    *(v164) = *(v164) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v63) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v63);\n
    v62 = v25;\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = cgc_calloc(134);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v61, \"Str: \");\n
    cgc_strncpy(v61 + 5, *(v64), v62);\n
    v166 = v64;\n
    *(v166) = &(*(v166))[4 + cgc_strlen(v61)];\n
    v168 = v63;\n
    *(v168) = *(v168) - (cgc_strlen(v61) + -4);\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v133 = a0;\n
    v132 = a1;\n
    if (*(v132) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v132) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v132);\n
    v131 = v24;\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = cgc_calloc(134);\n
    if (!v130)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v130, \"Str: \");\n
    cgc_strncpy(v130 + 5, *(v133), v131);\n
    v170 = v133;\n
    *(v170) = &(*(v170))[4 + cgc_strlen(v130)];\n
    v172 = v132;\n
    *(v172) = *(v172) - (cgc_strlen(v130) + -4);\n
    cgc_checkheap();\n
    cgc_free(v130);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if ((v36[0] << 8))\n
        v23 = v36[1];\n
    v37 = v23 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v22 = &v35;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v173 = v38;\n
    *(v173) = *(v173) - 2;\n
    v174 = v39;\n
    *(v174) = *(v174) + 2;\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v59) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v59);\n
    v58 = v21;\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = cgc_calloc(134);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v57, \"Str: \");\n
    cgc_strncpy(v57 + 5, *(v60), v58);\n
    v176 = v60;\n
    *(v176) = &(*(v176))[4 + cgc_strlen(v57)];\n
    v178 = v59;\n
    *(v178) = *(v178) - (cgc_strlen(v57) + -4);\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v20 = &v105;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v179 = v107;\n
    *(v179) = *(v179) - 4;\n
    v180 = v108;\n
    *(v180) = *(v180) + 4;\n
    v157 = a0;\n
    v156 = a1;\n
    if (*(v156) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = *(v157)->field_0;\n
    v181 = v156;\n
    *(v181) = *(v181) - 1;\n
    v182 = v157;\n
    *(v182) = *(v182) + 1;\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_451446;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_451446:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v183 = v157;\n
    *(v183) = &(*(v183))[v155];\n
    v184 = v156;\n
    *(v184) = *(v184) - v155;\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 21);\n
    if (*(v83) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v82) = *(&*(v84));\n
    cgc_uint2str(&v81, 21, *(&v82));\n
    v19 = &v81;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v185 = v83;\n
    *(v185) = *(v185) - 8;\n
    v186 = v84;\n
    *(v186) = *(v186) + 8;\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v46 = *(v48)->field_0;\n
    v187 = v47;\n
    *(v187) = *(v187) - 1;\n
    v188 = v48;\n
    *(v188) = *(v188) + 1;\n
    if (v46 <= *(v47) && !(!v46))\n
        goto LABEL_4516fd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4516fd:\n
    v45 = cgc_calloc(v46);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v45, *(v48), v46);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v189 = v48;\n
    *(v189) = &(*(v189))[v46];\n
    v190 = v47;\n
    *(v190) = *(v190) - v46;\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    v145 = a0;\n
    v144 = a1;\n
    memset(&v142, 0, 21);\n
    if (*(v144) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v143) = *(&*(v145));\n
    cgc_uint2str(&v142, 21, *(&v143));\n
    v18 = &v142;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v142)) < 0)\n
        cgc__terminate(1);\n
    v191 = v144;\n
    *(v191) = *(v191) - 8;\n
    v192 = v145;\n
    *(v192) = *(v192) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v55) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v55);\n
    v54 = v17;\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = cgc_calloc(134);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v53, \"Str: \");\n
    cgc_strncpy(v53 + 5, *(v56), v54);\n
    v194 = v56;\n
    *(v194) = &(*(v194))[4 + cgc_strlen(v53)];\n
    v196 = v55;\n
    *(v196) = *(v196) - (cgc_strlen(v53) + -4);\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 12, v102);\n
    v16 = &v101;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v197 = v103;\n
    *(v197) = *(v197) - 4;\n
    v198 = v104;\n
    *(v198) = *(v198) + 4;\n
    v153 = a0;\n
    v152 = a1;\n
    if (*(v152) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = *(v153)->field_0;\n
    v199 = v152;\n
    *(v199) = *(v199) - 1;\n
    v200 = v153;\n
    *(v200) = *(v200) + 1;\n
    if (v151 <= *(v152) && !(!v151))\n
        goto LABEL_451c98;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_451c98:\n
    v150 = cgc_calloc(v151);\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v150, *(v153), v151);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v201 = v153;\n
    *(v201) = &(*(v201))[v151];\n
    v202 = v152;\n
    *(v202) = *(v202) - v151;\n
    cgc_checkheap();\n
    cgc_free(v150);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 12);\n
    if (*(v87) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 12, v86);\n
    v15 = &v85;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v203 = v87;\n
    *(v203) = *(v203) - 4;\n
    v204 = v88;\n
    *(v204) = *(v204) + 4;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41[0]) = *(v44);\n
    memset(&v40, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v41[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v41[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v41[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v41[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v41[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v41[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v41[6] << 8))\n
                                v14 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v42) = v14 & 1;\n
    cgc_uint2str(&v40, 21, *(&v42));\n
    v13 = &v40;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v205 = v43;\n
    *(v205) = *(v205) - 8;\n
    v206 = v44;\n
    *(v206) = *(v206) + 8;\n
    v129 = a0;\n
    v128 = a1;\n
    if (*(v128) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v128) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v128);\n
    v127 = v12;\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = cgc_calloc(134);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v126, \"Str: \");\n
    cgc_strncpy(v126 + 5, *(v129), v127);\n
    v208 = v129;\n
    *(v208) = &(*(v208))[4 + cgc_strlen(v126)];\n
    v210 = v128;\n
    *(v210) = *(v210) - (cgc_strlen(v126) + -4);\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v120 = a0;\n
    v119 = a1;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    v211 = v119;\n
    *(v211) = *(v211) - 2;\n
    v212 = v120;\n
    *(v212) = *(v212) + 2;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_452351;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_452351:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v213 = v119;\n
    *(v213) = *(v213) - v118;\n
    v214 = v120;\n
    *(v214) = &(*(v214))[v118];\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v116 = a0;\n
    v115 = a1;\n
    if (*(v115) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    v215 = v115;\n
    *(v215) = *(v215) - 2;\n
    v216 = v116;\n
    *(v216) = *(v216) + 2;\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_452521;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_452521:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v217 = v115;\n
    *(v217) = *(v217) - v114;\n
    v218 = v116;\n
    *(v218) = &(*(v218))[v114];\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v149 = a0;\n
    v148 = a1;\n
    if (*(v148) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = *(v149)->field_0;\n
    v219 = v148;\n
    *(v219) = *(v219) - 1;\n
    v220 = v149;\n
    *(v220) = *(v220) + 1;\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_4526d1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4526d1:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v221 = v149;\n
    *(v221) = &(*(v221))[v147];\n
    v222 = v148;\n
    *(v222) = *(v222) - v147;\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 6);\n
    if (*(v75) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(&*(v76));\n
    cgc_uint2str(&v73, 6, v74);\n
    v11 = &v73;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v223 = v75;\n
    *(v223) = *(v223) - 2;\n
    v224 = v76;\n
    *(v224) = *(v224) + 2;\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v31[0] << 8))\n
        v10 = v31[1];\n
    v32 = v10 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v9 = &v30;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v225 = v33;\n
    *(v225) = *(v225) - 2;\n
    v226 = v34;\n
    *(v226) = *(v226) + 2;\n
    v125 = a0;\n
    v124 = a1;\n
    *(&v122) = *(v125);\n
    memset(&v121, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v122[0] << 24))\n
    {\n
        v8 = 0;\n
        if ((v122[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v122[2] << 8))\n
                v8 = v122[3];\n
        }\n
    }\n
    v123 = v8 & 1;\n
    cgc_uint2str(&v121, 12, v123);\n
    v7 = &v121;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v227 = v124;\n
    *(v227) = *(v227) - 4;\n
    v228 = v125;\n
    *(v228) = *(v228) + 4;\n
    v141 = a0;\n
    v140 = a1;\n
    memset(&v138, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v139) = *(&*(v141));\n
    cgc_uint2str(&v138, 21, *(&v139));\n
    v6 = &v138;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v229 = v140;\n
    *(v229) = *(v229) - 8;\n
    v230 = v141;\n
    *(v230) = *(v230) + 8;\n
    v137 = a0;\n
    v136 = a1;\n
    memset(&v134, 0, 21);\n
    if (*(v136) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v135) = *(&*(v137));\n
    cgc_uint2str(&v134, 21, *(&v135));\n
    v5 = &v134;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v134)) < 0)\n
        cgc__terminate(1);\n
    v231 = v136;\n
    *(v231) = *(v231) - 8;\n
    v232 = v137;\n
    *(v232) = *(v232) + 8;\n
    v112 = a0;\n
    v111 = a1;\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    v233 = v111;\n
    *(v233) = *(v233) - 2;\n
    v234 = v112;\n
    *(v234) = *(v234) + 2;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_452e5c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_452e5c:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v235 = v111;\n
    *(v235) = *(v235) - v110;\n
    v236 = v112;\n
    *(v236) = &(*(v236))[v110];\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 12, v98);\n
    v4 = &v97;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v237 = v99;\n
    *(v237) = *(v237) - 4;\n
    v238 = v100;\n
    *(v238) = *(v238) + 4;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 6);\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(&*(v72));\n
    cgc_uint2str(&v69, 6, v70);\n
    v3 = &v69;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v239 = v71;\n
    *(v239) = *(v239) - 2;\n
    v240 = v72;\n
    *(v240) = *(v240) + 2;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    cgc_uint2str(&v65, 6, v66);\n
    v2 = &v65;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v241 = v67;\n
    *(v241) = *(v241) - 2;\n
    v242 = v68;\n
    *(v242) = *(v242) + 2;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 12, v94);\n
    v1 = &v93;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v243 = v95;\n
    *(v243) = *(v243) - 4;\n
    v244 = v96;\n
    *(v244) = *(v244) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v78) = *(&*(v80));\n
    cgc_uint2str(&v77, 21, *(&v78));\n
    v0 = &v77;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v245 = v79;\n
    *(v245) = *(v245) - 8;\n
    v246 = v80;\n
    *(v246) = *(v246) + 8;\n
    v28 ^= cgc__cookie;\n
    if (v28)\n
        cgc___stack_cookie_fail();\n
    v247 = a1;\n
    if (*(a1) > 0 && v27 >= 0)\n
    {\n
        v247 = v27;\n
        if (v247 < 0)\n
            v247 = *(&(&v29)[8 * v27])(a0, a1);\n
    }\n
    return v247;\n
}\n
", "4535516:sub_4534dc": null, "4535520:cgc_process_llamahydropathy": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamahydropathy(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x518]\n
    char v1;  // [bp-0x509]\n
    struct_0 *v2;  // [bp-0x508]\n
    struct_0 *v3;  // [bp-0x500]\n
    unsigned int v4;  // [bp-0x4f4]\n
    struct_0 *v5;  // [bp-0x4f0]\n
    struct_0 *v6;  // [bp-0x4e8]\n
    struct_0 *v7;  // [bp-0x4e0]\n
    struct_0 *v8;  // [bp-0x4d8]\n
    struct_0 *v9;  // [bp-0x4d0]\n
    unsigned int v10;  // [bp-0x4c4]\n
    struct_0 *v11;  // [bp-0x4c0]\n
    struct_0 *v12;  // [bp-0x4b8]\n
    char v13;  // [bp-0x4a9]\n
    struct_0 *v14;  // [bp-0x4a8]\n
    char v15;  // [bp-0x49d]\n
    unsigned int v16;  // [bp-0x49c]\n
    struct_0 *v17;  // [bp-0x498]\n
    struct_0 *v18;  // [bp-0x490]\n
    struct_0 *v19;  // [bp-0x488]\n
    struct_0 *v20;  // [bp-0x480]\n
    struct_0 *v21;  // [bp-0x478]\n
    char v22;  // [bp-0x469]\n
    struct_0 *v23;  // [bp-0x468]\n
    unsigned int v24;  // [bp-0x45c]\n
    struct_0 *v25;  // [bp-0x458]\n
    char v26;  // [bp-0x449]\n
    struct_0 *v27;  // [bp-0x448]\n
    unsigned int v28;  // [bp-0x440]\n
    unsigned int v29;  // [bp-0x43c]\n
    char v30;  // [bp-0x438]\n
    char v31;  // [bp-0x41e]\n
    char v32[2];  // [bp-0x418]\n
    unsigned short v33;  // [bp-0x40a]\n
    unsigned int *v34;  // [bp-0x408]\n
    struct struct_1 **v35;  // [bp-0x400]\n
    char v36;  // [bp-0x3f8]\n
    char v37[8];  // [bp-0x3d8]\n
    unsigned int v38;  // [bp-0x3d0]\n
    unsigned int *v39;  // [bp-0x3c8]\n
    struct struct_1 **v40;  // [bp-0x3c0]\n
    char v41;  // [bp-0x3b8]\n
    char v42[8];  // [bp-0x3a0]\n
    unsigned int v43;  // [bp-0x398]\n
    unsigned int *v44;  // [bp-0x390]\n
    struct struct_1 **v45;  // [bp-0x388]\n
    unsigned long v46;  // [bp-0x380]\n
    char v47;  // [bp-0x371]\n
    unsigned int *v48;  // [bp-0x370]\n
    struct struct_1 **v49;  // [bp-0x368]\n
    char *v50;  // [bp-0x360]\n
    unsigned int v51;  // [bp-0x354]\n
    unsigned int *v52;  // [bp-0x350]\n
    struct struct_1 **v53;  // [bp-0x348]\n
    char *v54;  // [bp-0x340]\n
    unsigned int v55;  // [bp-0x334]\n
    unsigned int *v56;  // [bp-0x330]\n
    struct struct_1 **v57;  // [bp-0x328]\n
    char *v58;  // [bp-0x320]\n
    unsigned int v59;  // [bp-0x314]\n
    unsigned int *v60;  // [bp-0x310]\n
    struct struct_1 **v61;  // [bp-0x308]\n
    char v62;  // [bp-0x300]\n
    unsigned short v63;  // [bp-0x2fa]\n
    unsigned int *v64;  // [bp-0x2f8]\n
    struct struct_1 **v65;  // [bp-0x2f0]\n
    char v66;  // [bp-0x2e8]\n
    unsigned short v67;  // [bp-0x2e2]\n
    unsigned int *v68;  // [bp-0x2e0]\n
    struct struct_1 **v69;  // [bp-0x2d8]\n
    char v70;  // [bp-0x2d0]\n
    unsigned short v71;  // [bp-0x2ca]\n
    unsigned int *v72;  // [bp-0x2c8]\n
    struct struct_1 **v73;  // [bp-0x2c0]\n
    char v74;  // [bp-0x2b5]\n
    char v75;  // [bp-0x2b1]\n
    unsigned int *v76;  // [bp-0x2b0]\n
    struct struct_1 **v77;  // [bp-0x2a8]\n
    char v78;  // [bp-0x29d]\n
    char v79;  // [bp-0x299]\n
    unsigned int *v80;  // [bp-0x298]\n
    struct struct_1 **v81;  // [bp-0x290]\n
    char v82;  // [bp-0x288]\n
    unsigned int v83;  // [bp-0x27c]\n
    unsigned int *v84;  // [bp-0x278]\n
    struct struct_1 **v85;  // [bp-0x270]\n
    char v86;  // [bp-0x268]\n
    unsigned int v87;  // [bp-0x25c]\n
    unsigned int *v88;  // [bp-0x258]\n
    struct struct_1 **v89;  // [bp-0x250]\n
    char v90;  // [bp-0x248]\n
    unsigned int v91;  // [bp-0x23c]\n
    unsigned int *v92;  // [bp-0x238]\n
    struct struct_1 **v93;  // [bp-0x230]\n
    char v94;  // [bp-0x228]\n
    unsigned int v95;  // [bp-0x21c]\n
    unsigned int *v96;  // [bp-0x218]\n
    struct struct_1 **v97;  // [bp-0x210]\n
    char v98;  // [bp-0x208]\n
    unsigned int v99;  // [bp-0x1fc]\n
    unsigned int *v100;  // [bp-0x1f8]\n
    struct struct_1 **v101;  // [bp-0x1f0]\n
    unsigned long v102;  // [bp-0x1e8]\n
    unsigned short v103;  // [bp-0x1da]\n
    unsigned int *v104;  // [bp-0x1d8]\n
    struct struct_1 **v105;  // [bp-0x1d0]\n
    char v106;  // [bp-0x1c4]\n
    char v107[4];  // [bp-0x1b8]\n
    unsigned int v108;  // [bp-0x1ac]\n
    unsigned int *v109;  // [bp-0x1a8]\n
    struct struct_1 **v110;  // [bp-0x1a0]\n
    char v111;  // [bp-0x194]\n
    char v112[8];  // [bp-0x188]\n
    unsigned int v113;  // [bp-0x17c]\n
    unsigned int *v114;  // [bp-0x178]\n
    struct struct_1 **v115;  // [bp-0x170]\n
    char *v116;  // [bp-0x168]\n
    unsigned int v117;  // [bp-0x15c]\n
    unsigned int *v118;  // [bp-0x158]\n
    struct struct_1 **v119;  // [bp-0x150]\n
    char v120;  // [bp-0x148]\n
    unsigned int v121;  // [bp-0x130]\n
    unsigned int *v122;  // [bp-0x128]\n
    struct struct_1 **v123;  // [bp-0x120]\n
    char v124;  // [bp-0x118]\n
    unsigned int v125;  // [bp-0x100]\n
    unsigned int *v126;  // [bp-0xf8]\n
    struct struct_1 **v127;  // [bp-0xf0]\n
    char v128;  // [bp-0xe8]\n
    unsigned int v129;  // [bp-0xd0]\n
    unsigned int *v130;  // [bp-0xc8]\n
    struct struct_1 **v131;  // [bp-0xc0]\n
    char v132;  // [bp-0xb8]\n
    unsigned int v133;  // [bp-0xa0]\n
    unsigned int *v134;  // [bp-0x98]\n
    struct struct_1 **v135;  // [bp-0x90]\n
    unsigned long v136;  // [bp-0x88]\n
    char v137;  // [bp-0x79]\n
    unsigned int *v138;  // [bp-0x78]\n
    struct struct_1 **v139;  // [bp-0x70]\n
    unsigned long v140;  // [bp-0x68]\n
    char v141;  // [bp-0x59]\n
    unsigned int *v142;  // [bp-0x58]\n
    struct struct_1 **v143;  // [bp-0x50]\n
    unsigned long v144;  // [bp-0x48]\n
    char v145;  // [bp-0x39]\n
    unsigned int *v146;  // [bp-0x38]\n
    struct struct_1 **v147;  // [bp-0x30]\n
    unsigned long v148;  // [bp-0x28]\n
    char v149;  // [bp-0x19]\n
    unsigned int *v150;  // [bp-0x18]\n
    struct struct_1 **v151;  // [bp-0x10]\n
    unsigned int *v153;  // rax\n
    struct struct_1 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_1 **v156;  // rax\n
    struct struct_1 **v158;  // rax\n
    unsigned int *v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_1 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_1 **v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_1 **v166;  // rax\n
    struct struct_1 **v167;  // rax\n
    unsigned int *v168;  // rax\n
    unsigned int *v169;  // rax\n
    struct struct_1 **v170;  // rax\n
    unsigned int *v171;  // rax\n
    struct struct_1 **v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_1 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_1 **v176;  // rax\n
    struct struct_1 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_1 **v180;  // rax\n
    struct struct_1 **v182;  // rax\n
    unsigned int *v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_1 **v186;  // rax\n
    struct struct_1 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_1 **v190;  // rax\n
    struct struct_1 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_1 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_1 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_1 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_1 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_1 **v202;  // rax\n
    struct struct_1 **v204;  // rax\n
    unsigned int *v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_1 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_1 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_1 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_1 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_1 **v216;  // rax\n
    struct struct_1 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_1 **v220;  // rax\n
    struct struct_1 **v222;  // rax\n
    unsigned int *v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_1 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_1 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_1 **v230;  // rax\n
    unsigned int *v231;  // rax, Other Possible Types: unsigned long\n
\n
    v29 = cgc__cookie;\n
    v28 = -1;\n
    if (cgc_sendline(1, \"===llamahydropathy===\", 21) < 0)\n
        cgc__terminate(1);\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 12);\n
    if (*(v88) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(&*(v89));\n
    cgc_uint2str(&v86, 12, v87);\n
    v27 = &v86;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v153 = v88;\n
    *(v153) = *(v153) - 4;\n
    v154 = v89;\n
    *(v154) = *(v154) + 4;\n
    v115 = a0;\n
    v114 = a1;\n
    *(&v112[0]) = *(v115);\n
    memset(&v111, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if ((v112[0] << 24))\n
    {\n
        v26 = 0;\n
        if ((v112[1] << 16))\n
        {\n
            v26 = 0;\n
            if ((v112[2] << 8))\n
                v26 = v112[3];\n
        }\n
    }\n
    v113 = v26 & 1;\n
    cgc_uint2str(&v111, 12, v113);\n
    v25 = &v111;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v155 = v114;\n
    *(v155) = *(v155) - 4;\n
    v156 = v115;\n
    *(v156) = *(v156) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v60) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v60);\n
    v59 = v24;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v58, \"Str: \");\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v158 = v61;\n
    *(v158) = &(*(v158))[4 + cgc_strlen(v58)];\n
    v160 = v60;\n
    *(v160) = *(v160) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v135 = a0;\n
    v134 = a1;\n
    memset(&v132, 0, 21);\n
    if (*(v134) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v133) = *(&*(v135));\n
    cgc_uint2str(&v132, 21, *(&v133));\n
    v23 = &v132;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v132)) < 0)\n
        cgc__terminate(1);\n
    v161 = v134;\n
    *(v161) = *(v161) - 8;\n
    v162 = v135;\n
    *(v162) = *(v162) + 8;\n
    v110 = a0;\n
    v109 = a1;\n
    *(&v107) = *(v110);\n
    memset(&v106, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v107[0] << 24))\n
    {\n
        v22 = 0;\n
        if ((v107[1] << 16))\n
        {\n
            v22 = 0;\n
            if ((v107[2] << 8))\n
                v22 = v107[3];\n
        }\n
    }\n
    v108 = v22 & 1;\n
    cgc_uint2str(&v106, 12, v108);\n
    v21 = &v106;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v163 = v109;\n
    *(v163) = *(v163) - 4;\n
    v164 = v110;\n
    *(v164) = *(v164) + 4;\n
    v151 = a0;\n
    v150 = a1;\n
    if (*(v150) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v149 = *(v151)->field_0;\n
    v165 = v150;\n
    *(v165) = *(v165) - 1;\n
    v166 = v151;\n
    *(v166) = *(v166) + 1;\n
    if (v149 <= *(v150) && !(!v149))\n
        goto LABEL_453d0e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_453d0e:\n
    v148 = cgc_calloc(v149);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v148, *(v151), v149);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v167 = v151;\n
    *(v167) = &(*(v167))[v149];\n
    v168 = v150;\n
    *(v168) = *(v168) - v149;\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 12, v99);\n
    v20 = &v98;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v169 = v100;\n
    *(v169) = *(v169) - 4;\n
    v170 = v101;\n
    *(v170) = *(v170) + 4;\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 6);\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 6, v71);\n
    v19 = &v70;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v171 = v72;\n
    *(v171) = *(v171) - 2;\n
    v172 = v73;\n
    *(v172) = *(v172) + 2;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 4);\n
    if (*(v80) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(v81)->field_0;\n
    cgc_uint2str(&v78, 4, v79);\n
    v18 = &v78;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v173 = v80;\n
    *(v173) = *(v173) - 1;\n
    v174 = v81;\n
    *(v174) = *(v174) + 1;\n
    v147 = a0;\n
    v146 = a1;\n
    if (*(v146) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = *(v147)->field_0;\n
    v175 = v146;\n
    *(v175) = *(v175) - 1;\n
    v176 = v147;\n
    *(v176) = *(v176) + 1;\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_4541ad;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4541ad:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v177 = v147;\n
    *(v177) = &(*(v177))[v145];\n
    v178 = v146;\n
    *(v178) = *(v178) - v145;\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 6);\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v67 = *(&*(v69));\n
    cgc_uint2str(&v66, 6, v67);\n
    v17 = &v66;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v179 = v68;\n
    *(v179) = *(v179) - 2;\n
    v180 = v69;\n
    *(v180) = *(v180) + 2;\n
    v57 = a0;\n
    v56 = a1;\n
    if (*(v56) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v56) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v56);\n
    v55 = v16;\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = cgc_calloc(134);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v54, \"Str: \");\n
    cgc_strncpy(v54 + 5, *(v57), v55);\n
    v182 = v57;\n
    *(v182) = &(*(v182))[4 + cgc_strlen(v54)];\n
    v184 = v56;\n
    *(v184) = *(v184) - (cgc_strlen(v54) + -4);\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v143 = a0;\n
    v142 = a1;\n
    if (*(v142) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = *(v143)->field_0;\n
    v185 = v142;\n
    *(v185) = *(v185) - 1;\n
    v186 = v143;\n
    *(v186) = *(v186) + 1;\n
    if (v141 <= *(v142) && !(!v141))\n
        goto LABEL_454633;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_454633:\n
    v140 = cgc_calloc(v141);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v140, *(v143), v141);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v187 = v143;\n
    *(v187) = &(*(v187))[v141];\n
    v188 = v142;\n
    *(v188) = *(v188) - v141;\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    v139 = a0;\n
    v138 = a1;\n
    if (*(v138) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v137 = *(v139)->field_0;\n
    v189 = v138;\n
    *(v189) = *(v189) - 1;\n
    v190 = v139;\n
    *(v190) = *(v190) + 1;\n
    if (v137 <= *(v138) && !(!v137))\n
        goto LABEL_4547c2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4547c2:\n
    v136 = cgc_calloc(v137);\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v136, *(v139), v137);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v191 = v139;\n
    *(v191) = &(*(v191))[v137];\n
    v192 = v138;\n
    *(v192) = *(v192) - v137;\n
    cgc_checkheap();\n
    cgc_free(v136);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42[0]) = *(v45);\n
    memset(&v41, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if (v42[0] << 56)\n
    {\n
        v15 = 0;\n
        if (v42[1] << 48)\n
        {\n
            v15 = 0;\n
            if (v42[2] << 40)\n
            {\n
                v15 = 0;\n
                if (v42[3] << 32)\n
                {\n
                    v15 = 0;\n
                    if ((v42[4] << 24))\n
                    {\n
                        v15 = 0;\n
                        if ((v42[5] << 16))\n
                        {\n
                            v15 = 0;\n
                            if ((v42[6] << 8))\n
                                v15 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v43) = v15 & 1;\n
    cgc_uint2str(&v41, 21, *(&v43));\n
    v14 = &v41;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v193 = v44;\n
    *(v193) = *(v193) - 8;\n
    v194 = v45;\n
    *(v194) = *(v194) + 8;\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37[0]) = *(v40);\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if (v37[0] << 56)\n
    {\n
        v13 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v13 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v13 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v13 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v13 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v13 = 0;\n
                            if ((v37[6] << 8))\n
                                v13 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v13 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v12 = &v36;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v195 = v39;\n
    *(v195) = *(v195) - 8;\n
    v196 = v40;\n
    *(v196) = *(v196) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    v197 = v104;\n
    *(v197) = *(v197) - 2;\n
    v198 = v105;\n
    *(v198) = *(v198) + 2;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_454d9d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_454d9d:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v199 = v104;\n
    *(v199) = *(v199) - v103;\n
    v200 = v105;\n
    *(v200) = &(*(v200))[v103];\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v131 = a0;\n
    v130 = a1;\n
    memset(&v128, 0, 21);\n
    if (*(v130) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v129) = *(&*(v131));\n
    cgc_uint2str(&v128, 21, *(&v129));\n
    v11 = &v128;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v128)) < 0)\n
        cgc__terminate(1);\n
    v201 = v130;\n
    *(v201) = *(v201) - 8;\n
    v202 = v131;\n
    *(v202) = *(v202) + 8;\n
    v119 = a0;\n
    v118 = a1;\n
    if (*(v118) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v118) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v118);\n
    v117 = v10;\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = cgc_calloc(134);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v116, \"Str: \");\n
    cgc_strncpy(v116 + 5, *(v119), v117);\n
    v204 = v119;\n
    *(v204) = &(*(v204))[4 + cgc_strlen(v116)];\n
    v206 = v118;\n
    *(v206) = *(v206) - (cgc_strlen(v116) + -4);\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 12);\n
    if (*(v96) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(&*(v97));\n
    cgc_uint2str(&v94, 12, v95);\n
    v9 = &v94;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v207 = v96;\n
    *(v207) = *(v207) - 4;\n
    v208 = v97;\n
    *(v208) = *(v208) + 4;\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 12);\n
    if (*(v84) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    cgc_uint2str(&v82, 12, v83);\n
    v8 = &v82;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v209 = v84;\n
    *(v209) = *(v209) - 4;\n
    v210 = v85;\n
    *(v210) = *(v210) + 4;\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(&*(v65));\n
    cgc_uint2str(&v62, 6, v63);\n
    v7 = &v62;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v211 = v64;\n
    *(v211) = *(v211) - 2;\n
    v212 = v65;\n
    *(v212) = *(v212) + 2;\n
    v127 = a0;\n
    v126 = a1;\n
    memset(&v124, 0, 21);\n
    if (*(v126) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v125) = *(&*(v127));\n
    cgc_uint2str(&v124, 21, *(&v125));\n
    v6 = &v124;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v213 = v126;\n
    *(v213) = *(v213) - 8;\n
    v214 = v127;\n
    *(v214) = *(v214) + 8;\n
    v49 = a0;\n
    v48 = a1;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(v49)->field_0;\n
    v215 = v48;\n
    *(v215) = *(v215) - 1;\n
    v216 = v49;\n
    *(v216) = *(v216) + 1;\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_455679;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_455679:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v217 = v49;\n
    *(v217) = &(*(v217))[v47];\n
    v218 = v48;\n
    *(v218) = *(v218) - v47;\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v77 = a0;\n
    v76 = a1;\n
    memset(&v74, 0, 4);\n
    if (*(v76) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(v77)->field_0;\n
    cgc_uint2str(&v74, 4, v75);\n
    v5 = &v74;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v74)) < 0)\n
        cgc__terminate(1);\n
    v219 = v76;\n
    *(v219) = *(v219) - 1;\n
    v220 = v77;\n
    *(v220) = *(v220) + 1;\n
    v53 = a0;\n
    v52 = a1;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v52) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v52);\n
    v51 = v4;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v50, \"Str: \");\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v222 = v53;\n
    *(v222) = &(*(v222))[4 + cgc_strlen(v50)];\n
    v224 = v52;\n
    *(v224) = *(v224) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(&*(v93));\n
    cgc_uint2str(&v90, 12, v91);\n
    v3 = &v90;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v225 = v92;\n
    *(v225) = *(v225) - 4;\n
    v226 = v93;\n
    *(v226) = *(v226) + 4;\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 21);\n
    if (*(v122) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v121) = *(&*(v123));\n
    cgc_uint2str(&v120, 21, *(&v121));\n
    v2 = &v120;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v227 = v122;\n
    *(v227) = *(v227) - 8;\n
    v228 = v123;\n
    *(v228) = *(v228) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    *(&v32) = *(v35);\n
    memset(&v31, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v32[0] << 8))\n
        v1 = v32[1];\n
    v33 = v1 & 1;\n
    cgc_uint2str(&v31, 6, v33);\n
    v0 = &v31;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v229 = v34;\n
    *(v229) = *(v229) - 2;\n
    v230 = v35;\n
    *(v230) = *(v230) + 2;\n
    v29 ^= cgc__cookie;\n
    if (v29)\n
        cgc___stack_cookie_fail();\n
    v231 = a1;\n
    if (*(a1) > 0 && v28 >= 0)\n
    {\n
        v231 = v28;\n
        if (v231 < 0)\n
            v231 = *(&(&v30)[8 * v28])(a0, a1);\n
    }\n
    return v231;\n
}\n
", "4546080:cgc_process_llamadentary": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadentary(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2ec]\n
    struct_0 *v1;  // [bp-0x2e8]\n
    struct_0 *v2;  // [bp-0x2e0]\n
    struct_0 *v3;  // [bp-0x2d8]\n
    struct_0 *v4;  // [bp-0x2d0]\n
    struct_0 *v5;  // [bp-0x2c8]\n
    char v6;  // [bp-0x2b9]\n
    struct_0 *v7;  // [bp-0x2b8]\n
    char v8;  // [bp-0x2a9]\n
    struct_0 *v9;  // [bp-0x2a8]\n
    struct_0 *v10;  // [bp-0x2a0]\n
    unsigned int v11;  // [bp-0x294]\n
    struct_0 *v12;  // [bp-0x290]\n
    char v13;  // [bp-0x281]\n
    struct_0 *v14;  // [bp-0x280]\n
    char v15;  // [bp-0x271]\n
    struct_0 *v16;  // [bp-0x270]\n
    unsigned int v17;  // [bp-0x268]\n
    unsigned int v18;  // [bp-0x264]\n
    char v19;  // [bp-0x260]\n
    char v20;  // [bp-0x246]\n
    char v21[2];  // [bp-0x240]\n
    unsigned short v22;  // [bp-0x232]\n
    unsigned int *v23;  // [bp-0x230]\n
    struct struct_1 **v24;  // [bp-0x228]\n
    char v25;  // [bp-0x21e]\n
    char v26[2];  // [bp-0x218]\n
    unsigned short v27;  // [bp-0x20a]\n
    unsigned int *v28;  // [bp-0x208]\n
    struct struct_1 **v29;  // [bp-0x200]\n
    char v30;  // [bp-0x1f8]\n
    char v31[8];  // [bp-0x1d8]\n
    unsigned int v32;  // [bp-0x1d0]\n
    unsigned int *v33;  // [bp-0x1c8]\n
    struct struct_1 **v34;  // [bp-0x1c0]\n
    unsigned long v35;  // [bp-0x1b8]\n
    char v36;  // [bp-0x1a9]\n
    unsigned int *v37;  // [bp-0x1a8]\n
    struct struct_1 **v38;  // [bp-0x1a0]\n
    char v39;  // [bp-0x198]\n
    unsigned short v40;  // [bp-0x192]\n
    unsigned int *v41;  // [bp-0x190]\n
    struct struct_1 **v42;  // [bp-0x188]\n
    char v43;  // [bp-0x180]\n
    unsigned short v44;  // [bp-0x17a]\n
    unsigned int *v45;  // [bp-0x178]\n
    struct struct_1 **v46;  // [bp-0x170]\n
    char v47;  // [bp-0x165]\n
    char v48;  // [bp-0x161]\n
    unsigned int *v49;  // [bp-0x160]\n
    struct struct_1 **v50;  // [bp-0x158]\n
    char v51;  // [bp-0x14d]\n
    char v52;  // [bp-0x149]\n
    unsigned int *v53;  // [bp-0x148]\n
    struct struct_1 **v54;  // [bp-0x140]\n
    char v55;  // [bp-0x138]\n
    unsigned int v56;  // [bp-0x12c]\n
    unsigned int *v57;  // [bp-0x128]\n
    struct struct_1 **v58;  // [bp-0x120]\n
    char v59;  // [bp-0x118]\n
    unsigned int v60;  // [bp-0x10c]\n
    unsigned int *v61;  // [bp-0x108]\n
    struct struct_1 **v62;  // [bp-0x100]\n
    char v63;  // [bp-0xf8]\n
    unsigned int v64;  // [bp-0xec]\n
    unsigned int *v65;  // [bp-0xe8]\n
    struct struct_1 **v66;  // [bp-0xe0]\n
    unsigned long v67;  // [bp-0xd8]\n
    unsigned short v68;  // [bp-0xca]\n
    unsigned int *v69;  // [bp-0xc8]\n
    struct struct_1 **v70;  // [bp-0xc0]\n
    char v71;  // [bp-0xb4]\n
    char v72[4];  // [bp-0xa8]\n
    unsigned int v73;  // [bp-0x9c]\n
    unsigned int *v74;  // [bp-0x98]\n
    struct struct_1 **v75;  // [bp-0x90]\n
    char *v76;  // [bp-0x88]\n
    unsigned int v77;  // [bp-0x7c]\n
    unsigned int *v78;  // [bp-0x78]\n
    struct struct_1 **v79;  // [bp-0x70]\n
    char *v80;  // [bp-0x68]\n
    unsigned int v81;  // [bp-0x5c]\n
    unsigned int *v82;  // [bp-0x58]\n
    struct struct_1 **v83;  // [bp-0x50]\n
    unsigned long v84;  // [bp-0x48]\n
    char v85;  // [bp-0x39]\n
    unsigned int *v86;  // [bp-0x38]\n
    struct struct_1 **v87;  // [bp-0x30]\n
    unsigned long v88;  // [bp-0x28]\n
    char v89;  // [bp-0x19]\n
    unsigned int *v90;  // [bp-0x18]\n
    struct struct_1 **v91;  // [bp-0x10]\n
    unsigned int *v93;  // rax\n
    struct struct_1 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    struct struct_1 **v96;  // rax\n
    unsigned int *v97;  // rax\n
    struct struct_1 **v98;  // rax\n
    struct struct_1 **v100;  // rax\n
    unsigned int *v102;  // rax\n
    unsigned int *v103;  // rax\n
    struct struct_1 **v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_1 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_1 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_1 **v110;  // rax\n
    struct struct_1 **v111;  // rax\n
    unsigned int *v112;  // rax\n
    unsigned int *v113;  // rax\n
    struct struct_1 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_1 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_1 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_1 **v120;  // rax\n
    struct struct_1 **v121;  // rax\n
    unsigned int *v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_1 **v124;  // rax\n
    struct struct_1 **v125;  // rax\n
    unsigned int *v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_1 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_1 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_1 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_1 **v134;  // rax\n
    struct struct_1 **v136;  // rax\n
    unsigned int *v138;  // rax\n
    unsigned int *v139;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamadentary===\", 18) < 0)\n
        cgc__terminate(1);\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = *(&*(v46)->field_0);\n
    cgc_uint2str(&v43, 6, v44);\n
    v16 = &v43;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v93 = v45;\n
    *(v93) = *(v93) - 2;\n
    v94 = v46;\n
    *(v94) = &*(v94)->padding_1[1];\n
    v75 = a0;\n
    v74 = a1;\n
    *(&v72) = *(v75);\n
    memset(&v71, 0, 12);\n
    if (*(v74) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v72[0] << 24))\n
    {\n
        v15 = 0;\n
        if ((v72[1] << 16))\n
        {\n
            v15 = 0;\n
            if ((v72[2] << 8))\n
                v15 = v72[3];\n
        }\n
    }\n
    v73 = v15 & 1;\n
    cgc_uint2str(&v71, 12, v73);\n
    v14 = &v71;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v95 = v74;\n
    *(v95) = *(v95) - 4;\n
    v96 = v75;\n
    *(v96) = &*(v96)->field_4;\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v26[0] << 8))\n
        v13 = v26[1];\n
    v27 = v13 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v12 = &v25;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v97 = v28;\n
    *(v97) = *(v97) - 2;\n
    v98 = v29;\n
    *(v98) = &*(v98)->padding_1[1];\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v82) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v82);\n
    v81 = v11;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v80, \"Str: \");\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v100 = v83;\n
    *(v100) = &(&*(v100)->field_4)[cgc_strlen(v80)];\n
    v102 = v82;\n
    *(v102) = *(v102) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v62 = a0;\n
    v61 = a1;\n
    memset(&v59, 0, 12);\n
    if (*(v61) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(&*(v62)->field_0);\n
    cgc_uint2str(&v59, 12, v60);\n
    v10 = &v59;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v59)) < 0)\n
        cgc__terminate(1);\n
    v103 = v61;\n
    *(v103) = *(v103) - 4;\n
    v104 = v62;\n
    *(v104) = &*(v104)->field_4;\n
    v58 = a0;\n
    v57 = a1;\n
    memset(&v55, 0, 12);\n
    if (*(v57) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(&*(v58)->field_0);\n
    cgc_uint2str(&v55, 12, v56);\n
    v9 = &v55;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v105 = v57;\n
    *(v105) = *(v105) - 4;\n
    v106 = v58;\n
    *(v106) = &*(v106)->field_4;\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21) = *(v24);\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v21[0] << 8))\n
        v8 = v21[1];\n
    v22 = v8 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v7 = &v20;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v107 = v23;\n
    *(v107) = *(v107) - 2;\n
    v108 = v24;\n
    *(v108) = &*(v108)->padding_1[1];\n
    v91 = a0;\n
    v90 = a1;\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = *(v91)->field_0;\n
    v109 = v90;\n
    *(v109) = *(v109) - 1;\n
    v110 = v91;\n
    *(v110) = &*(v110)->padding_1;\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_456823;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_456823:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v111 = v91;\n
    *(v111) = &(&*(v111)->field_0)[v89];\n
    v112 = v90;\n
    *(v112) = *(v112) - v89;\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    v113 = v69;\n
    *(v113) = *(v113) - 2;\n
    v114 = v70;\n
    *(v114) = &*(v114)->padding_1[1];\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_4569d2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4569d2:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v115 = v69;\n
    *(v115) = *(v115) - v68;\n
    v116 = v70;\n
    *(v116) = &(&*(v116)->field_0)[v68];\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31[0]) = *(v34);\n
    memset(&v30, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v31[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v31[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v31[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v31[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v31[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v31[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v31[6] << 8))\n
                                v6 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v32) = v6 & 1;\n
    cgc_uint2str(&v30, 21, *(&v32));\n
    v5 = &v30;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v117 = v33;\n
    *(v117) = *(v117) - 8;\n
    v118 = v34;\n
    *(v118) = *(v118) + 1;\n
    v87 = a0;\n
    v86 = a1;\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = *(v87)->field_0;\n
    v119 = v86;\n
    *(v119) = *(v119) - 1;\n
    v120 = v87;\n
    *(v120) = &*(v120)->padding_1;\n
    if (v85 <= *(v86) && !(!v85))\n
        goto LABEL_456d98;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_456d98:\n
    v84 = cgc_calloc(v85);\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v84, *(v87), v85);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v121 = v87;\n
    *(v121) = &(&*(v121)->field_0)[v85];\n
    v122 = v86;\n
    *(v122) = *(v122) - v85;\n
    cgc_checkheap();\n
    cgc_free(v84);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v123 = v37;\n
    *(v123) = *(v123) - 1;\n
    v124 = v38;\n
    *(v124) = &*(v124)->padding_1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_456f45;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_456f45:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v125 = v38;\n
    *(v125) = &(&*(v125)->field_0)[v36];\n
    v126 = v37;\n
    *(v126) = *(v126) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 4);\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(v54)->field_0;\n
    cgc_uint2str(&v51, 4, v52);\n
    v4 = &v51;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v127 = v53;\n
    *(v127) = *(v127) - 1;\n
    v128 = v54;\n
    *(v128) = &*(v128)->padding_1;\n
    v66 = a0;\n
    v65 = a1;\n
    memset(&v63, 0, 12);\n
    if (*(v65) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    cgc_uint2str(&v63, 12, v64);\n
    v3 = &v63;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v129 = v65;\n
    *(v129) = *(v129) - 4;\n
    v130 = v66;\n
    *(v130) = &*(v130)->field_4;\n
    v42 = a0;\n
    v41 = a1;\n
    memset(&v39, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = *(&*(v42)->field_0);\n
    cgc_uint2str(&v39, 6, v40);\n
    v2 = &v39;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v131 = v41;\n
    *(v131) = *(v131) - 2;\n
    v132 = v42;\n
    *(v132) = &*(v132)->padding_1[1];\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 4);\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(v50)->field_0;\n
    cgc_uint2str(&v47, 4, v48);\n
    v1 = &v47;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v133 = v49;\n
    *(v133) = *(v133) - 1;\n
    v134 = v50;\n
    *(v134) = &*(v134)->padding_1;\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v78) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v78);\n
    v77 = v0;\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = cgc_calloc(134);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v76, \"Str: \");\n
    cgc_strncpy(v76 + 5, *(v79), v77);\n
    v136 = v79;\n
    *(v136) = &(&*(v136)->field_4)[cgc_strlen(v76)];\n
    v138 = v78;\n
    *(v138) = *(v138) - (cgc_strlen(v76) + -4);\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v139 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v139 = v17;\n
        if (v139 < 0)\n
            v139 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v139;\n
}\n
", "4552302:sub_45766e": null, "4552304:cgc_process_llamadenominate": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c61f0;\n
extern unsigned long long g_4c61f8;\n
\n
long long cgc_process_llamadenominate(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x680]\n
    struct_0 *v1;  // [bp-0x678]\n
    char v2;  // [bp-0x66d]\n
    unsigned int v3;  // [bp-0x66c]\n
    struct_0 *v4;  // [bp-0x668]\n
    char v5;  // [bp-0x65d]\n
    unsigned int v6;  // [bp-0x65c]\n
    struct_0 *v7;  // [bp-0x658]\n
    struct_0 *v8;  // [bp-0x650]\n
    char v9;  // [bp-0x641]\n
    struct_0 *v10;  // [bp-0x640]\n
    struct_0 *v11;  // [bp-0x638]\n
    struct_0 *v12;  // [bp-0x630]\n
    struct_0 *v13;  // [bp-0x628]\n
    struct_0 *v14;  // [bp-0x620]\n
    struct_0 *v15;  // [bp-0x618]\n
    struct_0 *v16;  // [bp-0x610]\n
    char v17;  // [bp-0x601]\n
    struct_0 *v18;  // [bp-0x600]\n
    struct_0 *v19;  // [bp-0x5f8]\n
    struct_0 *v20;  // [bp-0x5f0]\n
    struct_0 *v21;  // [bp-0x5e8]\n
    struct_0 *v22;  // [bp-0x5e0]\n
    struct_0 *v23;  // [bp-0x5d8]\n
    unsigned int v24;  // [bp-0x5cc]\n
    struct_0 *v25;  // [bp-0x5c8]\n
    char v26;  // [bp-0x5b9]\n
    struct_0 *v27;  // [bp-0x5b8]\n
    unsigned int v28;  // [bp-0x5b0]\n
    unsigned int v29;  // [bp-0x5ac]\n
    unsigned long v30;  // [bp-0x5a8]\n
    unsigned long v31;  // [bp-0x5a0]\n
    char v32;  // [bp-0x57e]\n
    char v33[2];  // [bp-0x578]\n
    unsigned short v34;  // [bp-0x56a]\n
    unsigned int *v35;  // [bp-0x568]\n
    struct struct_1 **v36;  // [bp-0x560]\n
    char v37;  // [bp-0x558]\n
    char v38[8];  // [bp-0x538]\n
    unsigned int v39;  // [bp-0x530]\n
    unsigned int *v40;  // [bp-0x528]\n
    struct struct_1 **v41;  // [bp-0x520]\n
    char *v42;  // [bp-0x518]\n
    unsigned int *v43;  // [bp-0x510]\n
    struct struct_1 **v44;  // [bp-0x508]\n
    char *v45;  // [bp-0x500]\n
    unsigned int *v46;  // [bp-0x4f8]\n
    struct struct_1 **v47;  // [bp-0x4f0]\n
    char *v48;  // [bp-0x4e8]\n
    unsigned int *v49;  // [bp-0x4e0]\n
    struct struct_1 **v50;  // [bp-0x4d8]\n
    char *v51;  // [bp-0x4d0]\n
    unsigned int *v52;  // [bp-0x4c8]\n
    struct struct_1 **v53;  // [bp-0x4c0]\n
    char *v54;  // [bp-0x4b8]\n
    unsigned int *v55;  // [bp-0x4b0]\n
    struct struct_1 **v56;  // [bp-0x4a8]\n
    char *v57;  // [bp-0x4a0]\n
    unsigned int *v58;  // [bp-0x498]\n
    struct struct_1 **v59;  // [bp-0x490]\n
    char *v60;  // [bp-0x488]\n
    unsigned int *v61;  // [bp-0x480]\n
    struct struct_1 **v62;  // [bp-0x478]\n
    char *v63;  // [bp-0x470]\n
    unsigned int v64;  // [bp-0x464]\n
    unsigned int *v65;  // [bp-0x460]\n
    struct struct_1 **v66;  // [bp-0x458]\n
    char v67;  // [bp-0x450]\n
    unsigned short v68;  // [bp-0x44a]\n
    unsigned int *v69;  // [bp-0x448]\n
    struct struct_1 **v70;  // [bp-0x440]\n
    char v71;  // [bp-0x438]\n
    unsigned short v72;  // [bp-0x432]\n
    unsigned int *v73;  // [bp-0x430]\n
    struct struct_1 **v74;  // [bp-0x428]\n
    char v75;  // [bp-0x420]\n
    unsigned short v76;  // [bp-0x41a]\n
    unsigned int *v77;  // [bp-0x418]\n
    struct struct_1 **v78;  // [bp-0x410]\n
    char v79;  // [bp-0x405]\n
    char v80;  // [bp-0x401]\n
    unsigned int *v81;  // [bp-0x400]\n
    struct struct_1 **v82;  // [bp-0x3f8]\n
    unsigned short *v83;  // [bp-0x3f0]\n
    unsigned int *v84;  // [bp-0x3e8]\n
    struct struct_1 **v85;  // [bp-0x3e0]\n
    char v86;  // [bp-0x3d8]\n
    unsigned int v87;  // [bp-0x3c0]\n
    unsigned int *v88;  // [bp-0x3b8]\n
    struct struct_1 **v89;  // [bp-0x3b0]\n
    char v90;  // [bp-0x3a8]\n
    unsigned int v91;  // [bp-0x390]\n
    unsigned int *v92;  // [bp-0x388]\n
    struct struct_1 **v93;  // [bp-0x380]\n
    char v94;  // [bp-0x378]\n
    unsigned int v95;  // [bp-0x360]\n
    unsigned int *v96;  // [bp-0x358]\n
    struct struct_1 **v97;  // [bp-0x350]\n
    char v98;  // [bp-0x348]\n
    unsigned int v99;  // [bp-0x33c]\n
    unsigned int *v100;  // [bp-0x338]\n
    struct struct_1 **v101;  // [bp-0x330]\n
    char v102;  // [bp-0x328]\n
    unsigned int v103;  // [bp-0x31c]\n
    unsigned int *v104;  // [bp-0x318]\n
    struct struct_1 **v105;  // [bp-0x310]\n
    char v106;  // [bp-0x308]\n
    unsigned int v107;  // [bp-0x2fc]\n
    unsigned int *v108;  // [bp-0x2f8]\n
    struct struct_1 **v109;  // [bp-0x2f0]\n
    char v110;  // [bp-0x2e8]\n
    unsigned int v111;  // [bp-0x2dc]\n
    unsigned int *v112;  // [bp-0x2d8]\n
    struct struct_1 **v113;  // [bp-0x2d0]\n
    char v114;  // [bp-0x2c8]\n
    unsigned int v115;  // [bp-0x2bc]\n
    unsigned int *v116;  // [bp-0x2b8]\n
    struct struct_1 **v117;  // [bp-0x2b0]\n
    unsigned long v118;  // [bp-0x2a8]\n
    unsigned short v119;  // [bp-0x29a]\n
    unsigned int *v120;  // [bp-0x298]\n
    struct struct_1 **v121;  // [bp-0x290]\n
    unsigned long v122;  // [bp-0x288]\n
    unsigned short v123;  // [bp-0x27a]\n
    unsigned int *v124;  // [bp-0x278]\n
    struct struct_1 **v125;  // [bp-0x270]\n
    unsigned long v126;  // [bp-0x268]\n
    unsigned short v127;  // [bp-0x25a]\n
    unsigned int *v128;  // [bp-0x258]\n
    struct struct_1 **v129;  // [bp-0x250]\n
    unsigned long v130;  // [bp-0x248]\n
    unsigned short v131;  // [bp-0x23a]\n
    unsigned int *v132;  // [bp-0x238]\n
    struct struct_1 **v133;  // [bp-0x230]\n
    unsigned long v134;  // [bp-0x228]\n
    unsigned short v135;  // [bp-0x21a]\n
    unsigned int *v136;  // [bp-0x218]\n
    struct struct_1 **v137;  // [bp-0x210]\n
    unsigned long v138;  // [bp-0x208]\n
    unsigned short v139;  // [bp-0x1fa]\n
    unsigned int *v140;  // [bp-0x1f8]\n
    struct struct_1 **v141;  // [bp-0x1f0]\n
    unsigned long v142;  // [bp-0x1e8]\n
    unsigned short v143;  // [bp-0x1da]\n
    unsigned int *v144;  // [bp-0x1d8]\n
    struct struct_1 **v145;  // [bp-0x1d0]\n
    unsigned long v146;  // [bp-0x1c8]\n
    unsigned short v147;  // [bp-0x1ba]\n
    unsigned int *v148;  // [bp-0x1b8]\n
    struct struct_1 **v149;  // [bp-0x1b0]\n
    char v150;  // [bp-0x1a4]\n
    char v151[4];  // [bp-0x198]\n
    unsigned int v152;  // [bp-0x18c]\n
    unsigned int *v153;  // [bp-0x188]\n
    struct struct_1 **v154;  // [bp-0x180]\n
    char v155;  // [bp-0x174]\n
    char v156[4];  // [bp-0x168]\n
    unsigned int v157;  // [bp-0x15c]\n
    unsigned int *v158;  // [bp-0x158]\n
    struct struct_1 **v159;  // [bp-0x150]\n
    char v160;  // [bp-0x144]\n
    char *v161;  // [bp-0x138]\n
    unsigned int v162;  // [bp-0x12c]\n
    unsigned int *v163;  // [bp-0x128]\n
    struct struct_1 **v164;  // [bp-0x120]\n
    char *v165;  // [bp-0x118]\n
    unsigned int v166;  // [bp-0x10c]\n
    unsigned int *v167;  // [bp-0x108]\n
    struct struct_1 **v168;  // [bp-0x100]\n
    char *v169;  // [bp-0xf8]\n
    unsigned int v170;  // [bp-0xec]\n
    unsigned int *v171;  // [bp-0xe8]\n
    struct struct_1 **v172;  // [bp-0xe0]\n
    char v173;  // [bp-0xd8]\n
    unsigned int v174;  // [bp-0xc0]\n
    unsigned int *v175;  // [bp-0xb8]\n
    struct struct_1 **v176;  // [bp-0xb0]\n
    char v177;  // [bp-0xa8]\n
    unsigned int v178;  // [bp-0x90]\n
    unsigned int *v179;  // [bp-0x88]\n
    struct struct_1 **v180;  // [bp-0x80]\n
    char v181;  // [bp-0x78]\n
    unsigned int v182;  // [bp-0x60]\n
    unsigned int *v183;  // [bp-0x58]\n
    struct struct_1 **v184;  // [bp-0x50]\n
    unsigned long v185;  // [bp-0x48]\n
    char v186;  // [bp-0x39]\n
    unsigned int *v187;  // [bp-0x38]\n
    struct struct_1 **v188;  // [bp-0x30]\n
    unsigned long v189;  // [bp-0x28]\n
    char v190;  // [bp-0x19]\n
    unsigned int *v191;  // [bp-0x18]\n
    struct struct_1 **v192;  // [bp-0x10]\n
    unsigned int *v194;  // rax\n
    struct struct_1 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_1 **v197;  // rax\n
    struct struct_1 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_1 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_1 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_1 **v205;  // rax\n
    struct struct_1 **v207;  // rax\n
    unsigned int *v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_1 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_1 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_1 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_1 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_1 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_1 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_1 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_1 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_1 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_1 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_1 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_1 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_1 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_1 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_1 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_1 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_1 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_1 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_1 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_1 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_1 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_1 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_1 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_1 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_1 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_1 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_1 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_1 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_1 **v267;  // rax\n
    struct struct_1 **v269;  // rax\n
    unsigned int *v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_1 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_1 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_1 **v277;  // rax\n
    struct struct_1 **v279;  // rax\n
    unsigned int *v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_1 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_1 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_1 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_1 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_1 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_1 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_1 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_1 **v297;  // rax\n
    struct struct_1 **v298;  // rax\n
    unsigned int *v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_1 **v301;  // rax\n
    unsigned int *v302;  // rax, Other Possible Types: unsigned long\n
\n
    v30 = g_4c61f0;\n
    v31 = g_4c61f8;\n
    v29 = cgc__cookie;\n
    v28 = -1;\n
    if (cgc_sendline(1, \"===llamadenominate===\", 21) < 0)\n
        cgc__terminate(1);\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 12, v103);\n
    v27 = &v102;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v194 = v104;\n
    *(v194) = *(v194) - 4;\n
    v195 = v105;\n
    *(v195) = *(v195) + 4;\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v190 = *(v192)->field_0;\n
    v196 = v191;\n
    *(v196) = *(v196) - 1;\n
    v197 = v192;\n
    *(v197) = *(v197) + 1;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_4578b9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4578b9:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v198 = v192;\n
    *(v198) = &(*(v198))[v190];\n
    v199 = v191;\n
    *(v199) = *(v199) - v190;\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v149 = a0;\n
    v148 = a1;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = *(&*(v149));\n
    v200 = v148;\n
    *(v200) = *(v200) - 2;\n
    v201 = v149;\n
    *(v201) = *(v201) + 2;\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_457a68;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_457a68:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v202 = v148;\n
    *(v202) = *(v202) - v147;\n
    v203 = v149;\n
    *(v203) = &(*(v203))[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v36 = a0;\n
    v35 = a1;\n
    *(&v33) = *(v36);\n
    memset(&v32, 0, 6);\n
    if (*(v35) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if ((v33[0] << 8))\n
        v26 = v33[1];\n
    v34 = v26 & 1;\n
    cgc_uint2str(&v32, 6, v34);\n
    v25 = &v32;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v204 = v35;\n
    *(v204) = *(v204) - 2;\n
    v205 = v36;\n
    *(v205) = *(v205) + 2;\n
    v172 = a0;\n
    v171 = a1;\n
    if (*(v171) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v171) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v171);\n
    v170 = v24;\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v169 = cgc_calloc(134);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v169, \"Str: \");\n
    cgc_strncpy(v169 + 5, *(v172), v170);\n
    v207 = v172;\n
    *(v207) = &(*(v207))[4 + cgc_strlen(v169)];\n
    v209 = v171;\n
    *(v209) = *(v209) - (cgc_strlen(v169) + -4);\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v145 = a0;\n
    v144 = a1;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v143 = *(&*(v145));\n
    v210 = v144;\n
    *(v210) = *(v210) - 2;\n
    v211 = v145;\n
    *(v211) = *(v211) + 2;\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_457f73;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_457f73:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v212 = v144;\n
    *(v212) = *(v212) - v143;\n
    v213 = v145;\n
    *(v213) = &(*(v213))[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 6);\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 6, v76);\n
    v23 = &v75;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v214 = v77;\n
    *(v214) = *(v214) - 2;\n
    v215 = v78;\n
    *(v215) = *(v215) + 2;\n
    v62 = a0;\n
    v61 = a1;\n
    v60 = &*(v62)->field_0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v216 = v61;\n
    *(v216) = *(v216) - 1;\n
    v217 = v62;\n
    *(v217) = *(v217) + 1;\n
    v28 = *(v60);\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(&*(v117));\n
    cgc_uint2str(&v114, 12, v115);\n
    v22 = &v114;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v218 = v116;\n
    *(v218) = *(v218) - 4;\n
    v219 = v117;\n
    *(v219) = *(v219) + 4;\n
    v184 = a0;\n
    v183 = a1;\n
    memset(&v181, 0, 21);\n
    if (*(v183) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v182) = *(&*(v184));\n
    cgc_uint2str(&v181, 21, *(&v182));\n
    v21 = &v181;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v181)) < 0)\n
        cgc__terminate(1);\n
    v220 = v183;\n
    *(v220) = *(v220) - 8;\n
    v221 = v184;\n
    *(v221) = *(v221) + 8;\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 4);\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(v82)->field_0;\n
    cgc_uint2str(&v79, 4, v80);\n
    v20 = &v79;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v222 = v81;\n
    *(v222) = *(v222) - 1;\n
    v223 = v82;\n
    *(v223) = *(v223) + 1;\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 21);\n
    if (*(v96) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v95) = *(&*(v97));\n
    cgc_uint2str(&v94, 21, *(&v95));\n
    v19 = &v94;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v224 = v96;\n
    *(v224) = *(v224) - 8;\n
    v225 = v97;\n
    *(v225) = *(v225) + 8;\n
    v180 = a0;\n
    v179 = a1;\n
    memset(&v177, 0, 21);\n
    if (*(v179) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v178) = *(&*(v180));\n
    cgc_uint2str(&v177, 21, *(&v178));\n
    v18 = &v177;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v177)) < 0)\n
        cgc__terminate(1);\n
    v226 = v179;\n
    *(v226) = *(v226) - 8;\n
    v227 = v180;\n
    *(v227) = *(v227) + 8;\n
    v125 = a0;\n
    v124 = a1;\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    v228 = v124;\n
    *(v228) = *(v228) - 2;\n
    v229 = v125;\n
    *(v229) = *(v229) + 2;\n
    if (v123 <= *(v124) && !(!v123))\n
        goto LABEL_4587d8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4587d8:\n
    v122 = cgc_calloc(v123);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v122, *(v125), v123);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v230 = v124;\n
    *(v230) = *(v230) - v123;\n
    v231 = v125;\n
    *(v231) = &(*(v231))[v123];\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    v121 = a0;\n
    v120 = a1;\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    v232 = v120;\n
    *(v232) = *(v232) - 2;\n
    v233 = v121;\n
    *(v233) = *(v233) + 2;\n
    if (v119 <= *(v120) && !(!v119))\n
        goto LABEL_4589a8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4589a8:\n
    v118 = cgc_calloc(v119);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v118, *(v121), v119);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v234 = v120;\n
    *(v234) = *(v234) - v119;\n
    v235 = v121;\n
    *(v235) = &(*(v235))[v119];\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    v164 = a0;\n
    v163 = a1;\n
    v161 = &*(v164)->field_0;\n
    memset(&v160, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((*(v161) << 24))\n
    {\n
        v17 = 0;\n
        if ((v161[1] << 16))\n
        {\n
            v17 = 0;\n
            if ((v161[2] << 8))\n
                v17 = v161[3];\n
        }\n
    }\n
    v162 = v17 & 1;\n
    cgc_uint2str(&v160, 12, v162);\n
    v16 = &v160;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v160)) < 0)\n
        cgc__terminate(1);\n
    v236 = v163;\n
    *(v236) = *(v236) - 4;\n
    v237 = v164;\n
    *(v237) = *(v237) + 4;\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    cgc_uint2str(&v71, 6, v72);\n
    v15 = &v71;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v238 = v73;\n
    *(v238) = *(v238) - 2;\n
    v239 = v74;\n
    *(v239) = *(v239) + 2;\n
    v141 = a0;\n
    v140 = a1;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = *(&*(v141));\n
    v240 = v140;\n
    *(v240) = *(v240) - 2;\n
    v241 = v141;\n
    *(v241) = *(v241) + 2;\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_458e00;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_458e00:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v242 = v140;\n
    *(v242) = *(v242) - v139;\n
    v243 = v141;\n
    *(v243) = &(*(v243))[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 12, v99);\n
    v14 = &v98;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v244 = v100;\n
    *(v244) = *(v244) - 4;\n
    v245 = v101;\n
    *(v245) = *(v245) + 4;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(&*(v113));\n
    cgc_uint2str(&v110, 12, v111);\n
    v13 = &v110;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v246 = v112;\n
    *(v246) = *(v246) - 4;\n
    v247 = v113;\n
    *(v247) = *(v247) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    v57 = &*(v59)->field_0;\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v248 = v58;\n
    *(v248) = *(v248) - 1;\n
    v249 = v59;\n
    *(v249) = *(v249) + 1;\n
    v28 = *(v57);\n
    v137 = a0;\n
    v136 = a1;\n
    if (*(v136) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v135 = *(&*(v137));\n
    v250 = v136;\n
    *(v250) = *(v250) - 2;\n
    v251 = v137;\n
    *(v251) = *(v251) + 2;\n
    if (v135 <= *(v136) && !(!v135))\n
        goto LABEL_459280;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_459280:\n
    v134 = cgc_calloc(v135);\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v134, *(v137), v135);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v252 = v136;\n
    *(v252) = *(v252) - v135;\n
    v253 = v137;\n
    *(v253) = &(*(v253))[v135];\n
    cgc_checkheap();\n
    cgc_free(v134);\n
    v176 = a0;\n
    v175 = a1;\n
    memset(&v173, 0, 21);\n
    if (*(v175) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v174) = *(&*(v176));\n
    cgc_uint2str(&v173, 21, *(&v174));\n
    v12 = &v173;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v173)) < 0)\n
        cgc__terminate(1);\n
    v254 = v175;\n
    *(v254) = *(v254) - 8;\n
    v255 = v176;\n
    *(v255) = *(v255) + 8;\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(&*(v70));\n
    cgc_uint2str(&v67, 6, v68);\n
    v11 = &v67;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v256 = v69;\n
    *(v256) = *(v256) - 2;\n
    v257 = v70;\n
    *(v257) = *(v257) + 2;\n
    v56 = a0;\n
    v55 = a1;\n
    v54 = &*(v56)->field_0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v258 = v55;\n
    *(v258) = *(v258) - 1;\n
    v259 = v56;\n
    *(v259) = *(v259) + 1;\n
    v28 = *(v54);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 21);\n
    if (*(v92) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v91) = *(&*(v93));\n
    cgc_uint2str(&v90, 21, *(&v91));\n
    v10 = &v90;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v260 = v92;\n
    *(v260) = *(v260) - 8;\n
    v261 = v93;\n
    *(v261) = *(v261) + 8;\n
    v41 = a0;\n
    v40 = a1;\n
    *(&v38[0]) = *(v41);\n
    memset(&v37, 0, 21);\n
    if (*(v40) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v38[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v38[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v38[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v38[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v38[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v38[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v38[6] << 8))\n
                                v9 = v38[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v39) = v9 & 1;\n
    cgc_uint2str(&v37, 21, *(&v39));\n
    v8 = &v37;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v262 = v40;\n
    *(v262) = *(v262) - 8;\n
    v263 = v41;\n
    *(v263) = *(v263) + 8;\n
    v53 = a0;\n
    v52 = a1;\n
    v51 = &*(v53)->field_0;\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v264 = v52;\n
    *(v264) = *(v264) - 1;\n
    v265 = v53;\n
    *(v265) = *(v265) + 1;\n
    v28 = *(v51);\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 21);\n
    if (*(v88) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v87) = *(&*(v89));\n
    cgc_uint2str(&v86, 21, *(&v87));\n
    v7 = &v86;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v266 = v88;\n
    *(v266) = *(v266) - 8;\n
    v267 = v89;\n
    *(v267) = *(v267) + 8;\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v167) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v167);\n
    v166 = v6;\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = cgc_calloc(134);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v165, \"Str: \");\n
    cgc_strncpy(v165 + 5, *(v168), v166);\n
    v269 = v168;\n
    *(v269) = &(*(v269))[4 + cgc_strlen(v165)];\n
    v271 = v167;\n
    *(v271) = *(v271) - (cgc_strlen(v165) + -4);\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v159 = a0;\n
    v158 = a1;\n
    *(&v156) = *(v159);\n
    memset(&v155, 0, 12);\n
    if (*(v158) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v156[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v156[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v156[2] << 8))\n
                v5 = v156[3];\n
        }\n
    }\n
    v157 = v5 & 1;\n
    cgc_uint2str(&v155, 12, v157);\n
    v4 = &v155;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v155)) < 0)\n
        cgc__terminate(1);\n
    v272 = v158;\n
    *(v272) = *(v272) - 4;\n
    v273 = v159;\n
    *(v273) = *(v273) + 4;\n
    v133 = a0;\n
    v132 = a1;\n
    if (*(v132) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(&*(v133));\n
    v274 = v132;\n
    *(v274) = *(v274) - 2;\n
    v275 = v133;\n
    *(v275) = *(v275) + 2;\n
    if (v131 <= *(v132) && !(!v131))\n
        goto LABEL_459f45;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_459f45:\n
    v130 = cgc_calloc(v131);\n
    if (!v130)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v130, *(v133), v131);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v276 = v132;\n
    *(v276) = *(v276) - v131;\n
    v277 = v133;\n
    *(v277) = &(*(v277))[v131];\n
    cgc_checkheap();\n
    cgc_free(v130);\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v65) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v65);\n
    v64 = v3;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v63, \"Str: \");\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v279 = v66;\n
    *(v279) = &(*(v279))[4 + cgc_strlen(v63)];\n
    v281 = v65;\n
    *(v281) = *(v281) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v50 = a0;\n
    v49 = a1;\n
    v48 = &*(v50)->field_0;\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v282 = v49;\n
    *(v282) = *(v282) - 1;\n
    v283 = v50;\n
    *(v283) = *(v283) + 1;\n
    v28 = *(v48);\n
    v47 = a0;\n
    v46 = a1;\n
    v45 = &*(v47)->field_0;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v284 = v46;\n
    *(v284) = *(v284) - 1;\n
    v285 = v47;\n
    *(v285) = *(v285) + 1;\n
    v28 = *(v45);\n
    v154 = a0;\n
    v153 = a1;\n
    *(&v151) = *(v154);\n
    memset(&v150, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v151[0] << 24))\n
    {\n
        v2 = 0;\n
        if ((v151[1] << 16))\n
        {\n
            v2 = 0;\n
            if ((v151[2] << 8))\n
                v2 = v151[3];\n
        }\n
    }\n
    v152 = v2 & 1;\n
    cgc_uint2str(&v150, 12, v152);\n
    v1 = &v150;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v150)) < 0)\n
        cgc__terminate(1);\n
    v286 = v153;\n
    *(v286) = *(v286) - 4;\n
    v287 = v154;\n
    *(v287) = *(v287) + 4;\n
    v129 = a0;\n
    v128 = a1;\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    v288 = v128;\n
    *(v288) = *(v288) - 2;\n
    v289 = v129;\n
    *(v289) = *(v289) + 2;\n
    if (v127 <= *(v128) && !(!v127))\n
        goto LABEL_45a5d6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45a5d6:\n
    v126 = cgc_calloc(v127);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v126, *(v129), v127);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v290 = v128;\n
    *(v290) = *(v290) - v127;\n
    v291 = v129;\n
    *(v291) = &(*(v291))[v127];\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 12);\n
    if (*(v108) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(&*(v109));\n
    cgc_uint2str(&v106, 12, v107);\n
    v0 = &v106;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v292 = v108;\n
    *(v292) = *(v292) - 4;\n
    v293 = v109;\n
    *(v293) = *(v293) + 4;\n
    v44 = a0;\n
    v43 = a1;\n
    v42 = &*(v44)->field_0;\n
    if (*(v43) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v294 = v43;\n
    *(v294) = *(v294) - 1;\n
    v295 = v44;\n
    *(v295) = *(v295) + 1;\n
    v28 = *(v42);\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v186 = *(v188)->field_0;\n
    v296 = v187;\n
    *(v296) = *(v296) - 1;\n
    v297 = v188;\n
    *(v297) = *(v297) + 1;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_45a935;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45a935:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v298 = v188;\n
    *(v298) = &(*(v298))[v186];\n
    v299 = v187;\n
    *(v299) = *(v299) - v186;\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v85 = a0;\n
    v84 = a1;\n
    v83 = &*(v85);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v300 = v84;\n
    *(v300) = *(v300) - 2;\n
    v301 = v85;\n
    *(v301) = *(v301) + 2;\n
    v28 = *(v83);\n
    v29 ^= cgc__cookie;\n
    if (v29)\n
        cgc___stack_cookie_fail();\n
    v302 = a1;\n
    if (*(a1) > 0 && v28 >= 0)\n
    {\n
        v302 = v28;\n
        if (v302 < 2)\n
            v302 = (&v30)[v28](a0, a1);\n
    }\n
    return v302;\n
}\n
", "4565779:sub_45ab13": null, "4565792:cgc_process_llamadermophyte": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadermophyte(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1e0]\n
    char v1;  // [bp-0x1d1]\n
    struct_1 *v2;  // [bp-0x1d0]\n
    char v3;  // [bp-0x1c1]\n
    struct_1 *v4;  // [bp-0x1c0]\n
    char v5;  // [bp-0x1b1]\n
    struct_1 *v6;  // [bp-0x1b0]\n
    char v7;  // [bp-0x1a5]\n
    unsigned int v8;  // [bp-0x1a4]\n
    struct_1 *v9;  // [bp-0x1a0]\n
    char v10;  // [bp-0x191]\n
    unsigned int v11;  // [bp-0x190]\n
    unsigned int v12;  // [bp-0x18c]\n
    char v13;  // [bp-0x188]\n
    char v14;  // [bp-0x16e]\n
    char v15[2];  // [bp-0x168]\n
    unsigned short v16;  // [bp-0x15a]\n
    unsigned int *v17;  // [bp-0x158]\n
    struct struct_0 **v18;  // [bp-0x150]\n
    char v19;  // [bp-0x146]\n
    char v20[2];  // [bp-0x140]\n
    unsigned short v21;  // [bp-0x132]\n
    unsigned int *v22;  // [bp-0x130]\n
    struct struct_0 **v23;  // [bp-0x128]\n
    char v24;  // [bp-0x11e]\n
    char v25[2];  // [bp-0x118]\n
    unsigned short v26;  // [bp-0x10a]\n
    unsigned int *v27;  // [bp-0x108]\n
    struct struct_0 **v28;  // [bp-0x100]\n
    char v29;  // [bp-0xf8]\n
    char v30[8];  // [bp-0xd8]\n
    unsigned int v31;  // [bp-0xd0]\n
    unsigned int *v32;  // [bp-0xc8]\n
    struct struct_0 **v33;  // [bp-0xc0]\n
    unsigned long v34;  // [bp-0xb8]\n
    char v35;  // [bp-0xa9]\n
    unsigned int *v36;  // [bp-0xa8]\n
    struct struct_0 **v37;  // [bp-0xa0]\n
    char *v38;  // [bp-0x98]\n
    unsigned int v39;  // [bp-0x8c]\n
    unsigned int *v40;  // [bp-0x88]\n
    struct struct_0 **v41;  // [bp-0x80]\n
    unsigned long v42;  // [bp-0x78]\n
    unsigned short v43;  // [bp-0x6a]\n
    unsigned int *v44;  // [bp-0x68]\n
    struct struct_0 **v45;  // [bp-0x60]\n
    unsigned long v46;  // [bp-0x58]\n
    unsigned short v47;  // [bp-0x4a]\n
    unsigned int *v48;  // [bp-0x48]\n
    struct struct_0 **v49;  // [bp-0x40]\n
    char v50;  // [bp-0x34]\n
    char v51[4];  // [bp-0x28]\n
    unsigned int v52;  // [bp-0x1c]\n
    unsigned int *v53;  // [bp-0x18]\n
    struct struct_0 **v54;  // [bp-0x10]\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    unsigned int *v58;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v60;  // rax\n
    struct struct_0 **v61;  // rax\n
    struct struct_0 **v63;  // rax\n
    unsigned int *v65;  // rax\n
    unsigned int *v66;  // rax\n
    struct struct_0 **v67;  // rax\n
    unsigned int *v68;  // rax\n
    struct struct_0 **v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_0 **v71;  // rax\n
    struct struct_0 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_0 **v75;  // rax\n
    unsigned int *v76;  // rax\n
    struct struct_0 **v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax, Other Possible Types: unsigned long\n
\n
    v12 = cgc__cookie;\n
    v11 = -1;\n
    if (cgc_sendline(1, \"===llamadermophyte===\", 21) < 0)\n
        cgc__terminate(1);\n
    v49 = a0;\n
    v48 = a1;\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(&*(v49)->field_0);\n
    v56 = v48;\n
    *(v56) = *(v56) - 2;\n
    v57 = v49;\n
    *(v57) = &*(v57)->field_2;\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_45ac4e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45ac4e:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v58 = v48;\n
    *(v58) = *(v58) - v47;\n
    v59 = v49;\n
    *(v59) = &(&*(v59)->field_0)[v47];\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v28 = a0;\n
    v27 = a1;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v25[0] << 8))\n
        v10 = v25[1];\n
    v26 = v10 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v9 = &v24;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v60 = v27;\n
    *(v60) = *(v60) - 2;\n
    v61 = v28;\n
    *(v61) = &*(v61)->field_2;\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v40) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v40);\n
    v39 = v8;\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = cgc_calloc(134);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v38, \"Str: \");\n
    cgc_strncpy(v38 + 5, *(v41), v39);\n
    v63 = v41;\n
    *(v63) = &(&*(v63)->field_4)[cgc_strlen(v38)];\n
    v65 = v40;\n
    *(v65) = *(v65) - (cgc_strlen(v38) + -4);\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30[0]) = *(v33);\n
    memset(&v29, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v30[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v30[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v30[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v30[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v30[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v30[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v30[6] << 8))\n
                                v7 = v30[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v31) = v7 & 1;\n
    cgc_uint2str(&v29, 21, *(&v31));\n
    v6 = &v29;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v66 = v32;\n
    *(v66) = *(v66) - 8;\n
    v67 = v33;\n
    *(v67) = *(v67) + 1;\n
    v23 = a0;\n
    v22 = a1;\n
    *(&v20) = *(v23);\n
    memset(&v19, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v20[0] << 8))\n
        v5 = v20[1];\n
    v21 = v5 & 1;\n
    cgc_uint2str(&v19, 6, v21);\n
    v4 = &v19;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v19)) < 0)\n
        cgc__terminate(1);\n
    v68 = v22;\n
    *(v68) = *(v68) - 2;\n
    v69 = v23;\n
    *(v69) = &*(v69)->field_2;\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(v37)->field_0;\n
    v70 = v36;\n
    *(v70) = *(v70) - 1;\n
    v71 = v37;\n
    *(v71) = &*(v71)->padding_1;\n
    if (v35 <= *(v36) && !(!v35))\n
        goto LABEL_45b47c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45b47c:\n
    v34 = cgc_calloc(v35);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v34, *(v37), v35);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v72 = v37;\n
    *(v72) = &(&*(v72)->field_0)[v35];\n
    v73 = v36;\n
    *(v73) = *(v73) - v35;\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    v18 = a0;\n
    v17 = a1;\n
    *(&v15) = *(v18);\n
    memset(&v14, 0, 6);\n
    if (*(v17) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v15[0] << 8))\n
        v3 = v15[1];\n
    v16 = v3 & 1;\n
    cgc_uint2str(&v14, 6, v16);\n
    v2 = &v14;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v74 = v17;\n
    *(v74) = *(v74) - 2;\n
    v75 = v18;\n
    *(v75) = &*(v75)->field_2;\n
    v45 = a0;\n
    v44 = a1;\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = *(&*(v45)->field_0);\n
    v76 = v44;\n
    *(v76) = *(v76) - 2;\n
    v77 = v45;\n
    *(v77) = &*(v77)->field_2;\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_45b776;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45b776:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v78 = v44;\n
    *(v78) = *(v78) - v43;\n
    v79 = v45;\n
    *(v79) = &(&*(v79)->field_0)[v43];\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51) = *(v54);\n
    memset(&v50, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v51[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v51[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v51[2] << 8))\n
                v1 = v51[3];\n
        }\n
    }\n
    v52 = v1 & 1;\n
    cgc_uint2str(&v50, 12, v52);\n
    v0 = &v50;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v80 = v53;\n
    *(v80) = *(v80) - 4;\n
    v81 = v54;\n
    *(v81) = &*(v81)->field_4;\n
    v12 ^= cgc__cookie;\n
    if (v12)\n
        cgc___stack_cookie_fail();\n
    v82 = a1;\n
    if (*(a1) > 0 && v11 >= 0)\n
    {\n
        v82 = v11;\n
        if (v82 < 0)\n
            v82 = *(&(&v13)[8 * v11])(a0, a1);\n
    }\n
    return v82;\n
}\n
", "4569600:cgc_process_llamadyspneic": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6260;\n
extern unsigned long long g_4c6268;\n
extern unsigned long long g_4c6270;\n
extern unsigned long long g_4c6278;\n
\n
long long cgc_process_llamadyspneic(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x100]\n
    struct_0 *v1;  // [bp-0xf8]\n
    struct_0 *v2;  // [bp-0xf0]\n
    struct_0 *v3;  // [bp-0xe8]\n
    unsigned int v4;  // [bp-0xe0]\n
    unsigned int v5;  // [bp-0xdc]\n
    unsigned long v6;  // [bp-0xd8]\n
    unsigned long v7;  // [bp-0xd0]\n
    unsigned long v8;  // [bp-0xc8]\n
    unsigned long v9;  // [bp-0xc0]\n
    char v10;  // [bp-0xa0]\n
    unsigned short v11;  // [bp-0x9a]\n
    unsigned int *v12;  // [bp-0x98]\n
    struct struct_1 **v13;  // [bp-0x90]\n
    char v14;  // [bp-0x88]\n
    unsigned int v15;  // [bp-0x70]\n
    unsigned int *v16;  // [bp-0x68]\n
    struct struct_1 **v17;  // [bp-0x60]\n
    char v18;  // [bp-0x58]\n
    unsigned int v19;  // [bp-0x4c]\n
    unsigned int *v20;  // [bp-0x48]\n
    struct struct_1 **v21;  // [bp-0x40]\n
    char v22;  // [bp-0x38]\n
    unsigned int v23;  // [bp-0x20]\n
    unsigned int *v24;  // [bp-0x18]\n
    struct struct_1 **v25;  // [bp-0x10]\n
    unsigned int *v27;  // rax\n
    struct struct_1 **v28;  // rax\n
    unsigned int *v29;  // rax\n
    struct struct_1 **v30;  // rax\n
    unsigned int *v31;  // rax\n
    struct struct_1 **v32;  // rax\n
    unsigned int *v33;  // rax\n
    struct struct_1 **v34;  // rax\n
    unsigned int *v35;  // rax, Other Possible Types: unsigned long\n
\n
    v6 = g_4c6260;\n
    v7 = g_4c6268;\n
    v8 = g_4c6270;\n
    v9 = g_4c6278;\n
    v5 = cgc__cookie;\n
    v4 = -1;\n
    if (cgc_sendline(1, \"===llamadyspneic===\", 19) < 0)\n
        cgc__terminate(1);\n
    v17 = a0;\n
    v16 = a1;\n
    memset(&v14, 0, 21);\n
    if (*(v16) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v15) = *(&*(v17));\n
    cgc_uint2str(&v14, 21, *(&v15));\n
    v3 = &v14;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v27 = v16;\n
    *(v27) = *(v27) - 8;\n
    v28 = v17;\n
    *(v28) = *(v28) + 4;\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 21);\n
    if (*(v24) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v23) = *(&*(v25));\n
    cgc_uint2str(&v22, 21, *(&v23));\n
    v2 = &v22;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v29 = v24;\n
    *(v29) = *(v29) - 8;\n
    v30 = v25;\n
    *(v30) = *(v30) + 4;\n
    v21 = a0;\n
    v20 = a1;\n
    memset(&v18, 0, 12);\n
    if (*(v20) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(&*(v21));\n
    cgc_uint2str(&v18, 12, v19);\n
    v1 = &v18;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v31 = v20;\n
    *(v31) = *(v31) - 4;\n
    v32 = v21;\n
    *(v32) = *(v32) + 2;\n
    v13 = a0;\n
    v12 = a1;\n
    memset(&v10, 0, 6);\n
    if (*(v12) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = *(v13)->field_0;\n
    cgc_uint2str(&v10, 6, v11);\n
    v0 = &v10;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v10)) < 0)\n
        cgc__terminate(1);\n
    v33 = v12;\n
    *(v33) = *(v33) - 2;\n
    v34 = v13;\n
    *(v34) = *(v34) + 1;\n
    v5 ^= cgc__cookie;\n
    if (v5)\n
        cgc___stack_cookie_fail();\n
    v35 = a1;\n
    if (*(a1) > 0 && v4 >= 0)\n
    {\n
        v35 = v4;\n
        if (v35 < 4)\n
            v35 = (&v6)[v4](a0, a1);\n
    }\n
    return v35;\n
}\n
", "4570816:cgc_process_llamadecoke": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadecoke(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x824]\n
    struct_0 *v1;  // [bp-0x820]\n
    unsigned int v2;  // [bp-0x818]\n
    unsigned int v3;  // [bp-0x814]\n
    struct_0 *v4;  // [bp-0x810]\n
    struct_0 *v5;  // [bp-0x808]\n
    struct_0 *v6;  // [bp-0x800]\n
    char v7;  // [bp-0x7f1]\n
    struct_0 *v8;  // [bp-0x7f0]\n
    char v9;  // [bp-0x7e1]\n
    struct_0 *v10;  // [bp-0x7e0]\n
    struct_0 *v11;  // [bp-0x7d8]\n
    unsigned int v12;  // [bp-0x7cc]\n
    struct_0 *v13;  // [bp-0x7c8]\n
    struct_0 *v14;  // [bp-0x7c0]\n
    struct_0 *v15;  // [bp-0x7b8]\n
    struct_0 *v16;  // [bp-0x7b0]\n
    struct_0 *v17;  // [bp-0x7a8]\n
    struct_0 *v18;  // [bp-0x7a0]\n
    char v19;  // [bp-0x791]\n
    struct_0 *v20;  // [bp-0x790]\n
    char v21;  // [bp-0x781]\n
    struct_0 *v22;  // [bp-0x780]\n
    struct_0 *v23;  // [bp-0x778]\n
    struct_0 *v24;  // [bp-0x770]\n
    char v25;  // [bp-0x761]\n
    struct_0 *v26;  // [bp-0x760]\n
    char v27;  // [bp-0x751]\n
    struct_0 *v28;  // [bp-0x750]\n
    char v29;  // [bp-0x741]\n
    struct_0 *v30;  // [bp-0x740]\n
    struct_0 *v31;  // [bp-0x738]\n
    char v32;  // [bp-0x729]\n
    struct_0 *v33;  // [bp-0x728]\n
    struct_0 *v34;  // [bp-0x720]\n
    char v35;  // [bp-0x715]\n
    unsigned int v36;  // [bp-0x714]\n
    struct_0 *v37;  // [bp-0x710]\n
    unsigned int v38;  // [bp-0x704]\n
    struct_0 *v39;  // [bp-0x700]\n
    char v40;  // [bp-0x6f1]\n
    struct_0 *v41;  // [bp-0x6f0]\n
    char v42;  // [bp-0x6e1]\n
    struct_0 *v43;  // [bp-0x6e0]\n
    unsigned int v44;  // [bp-0x6d8]\n
    unsigned int v45;  // [bp-0x6d4]\n
    char v46;  // [bp-0x6d0]\n
    char v47;  // [bp-0x6b6]\n
    char v48[2];  // [bp-0x6b0]\n
    unsigned short v49;  // [bp-0x6a2]\n
    unsigned int *v50;  // [bp-0x6a0]\n
    struct struct_1 **v51;  // [bp-0x698]\n
    char v52;  // [bp-0x68e]\n
    char v53[8];  // [bp-0x688]\n
    unsigned short v54;  // [bp-0x67a]\n
    unsigned int *v55;  // [bp-0x678]\n
    struct struct_1 **v56;  // [bp-0x670]\n
    char v57;  // [bp-0x668]\n
    char v58[8];  // [bp-0x648]\n
    unsigned int v59;  // [bp-0x640]\n
    unsigned int *v60;  // [bp-0x638]\n
    struct struct_1 **v61;  // [bp-0x630]\n
    char v62;  // [bp-0x628]\n
    char v63[8];  // [bp-0x608]\n
    unsigned int v64;  // [bp-0x600]\n
    unsigned int *v65;  // [bp-0x5f8]\n
    struct struct_1 **v66;  // [bp-0x5f0]\n
    char v67;  // [bp-0x5e8]\n
    char v68[8];  // [bp-0x5c8]\n
    unsigned int v69;  // [bp-0x5c0]\n
    unsigned int *v70;  // [bp-0x5b8]\n
    struct struct_1 **v71;  // [bp-0x5b0]\n
    char v72;  // [bp-0x5a8]\n
    char v73[8];  // [bp-0x590]\n
    unsigned int v74;  // [bp-0x588]\n
    unsigned int *v75;  // [bp-0x580]\n
    struct struct_1 **v76;  // [bp-0x578]\n
    unsigned long v77;  // [bp-0x570]\n
    char v78;  // [bp-0x561]\n
    unsigned int *v79;  // [bp-0x560]\n
    struct struct_1 **v80;  // [bp-0x558]\n
    unsigned long v81;  // [bp-0x550]\n
    char v82;  // [bp-0x541]\n
    unsigned int *v83;  // [bp-0x540]\n
    struct struct_1 **v84;  // [bp-0x538]\n
    unsigned long v85;  // [bp-0x530]\n
    char v86;  // [bp-0x521]\n
    unsigned int *v87;  // [bp-0x520]\n
    struct struct_1 **v88;  // [bp-0x518]\n
    unsigned long v89;  // [bp-0x510]\n
    char v90;  // [bp-0x501]\n
    unsigned int *v91;  // [bp-0x500]\n
    struct struct_1 **v92;  // [bp-0x4f8]\n
    unsigned long v93;  // [bp-0x4f0]\n
    char v94;  // [bp-0x4e1]\n
    unsigned int *v95;  // [bp-0x4e0]\n
    struct struct_1 **v96;  // [bp-0x4d8]\n
    char *v97;  // [bp-0x4d0]\n
    unsigned int v98;  // [bp-0x4c4]\n
    unsigned int *v99;  // [bp-0x4c0]\n
    struct struct_1 **v100;  // [bp-0x4b8]\n
    char *v101;  // [bp-0x4b0]\n
    unsigned int v102;  // [bp-0x4a4]\n
    unsigned int *v103;  // [bp-0x4a0]\n
    struct struct_1 **v104;  // [bp-0x498]\n
    char *v105;  // [bp-0x490]\n
    unsigned int v106;  // [bp-0x484]\n
    unsigned int *v107;  // [bp-0x480]\n
    struct struct_1 **v108;  // [bp-0x478]\n
    char v109;  // [bp-0x470]\n
    unsigned short v110;  // [bp-0x46a]\n
    unsigned int *v111;  // [bp-0x468]\n
    struct struct_1 **v112;  // [bp-0x460]\n
    char v113;  // [bp-0x458]\n
    unsigned short v114;  // [bp-0x452]\n
    unsigned int *v115;  // [bp-0x450]\n
    struct struct_1 **v116;  // [bp-0x448]\n
    char v117;  // [bp-0x43d]\n
    char v118;  // [bp-0x439]\n
    unsigned int *v119;  // [bp-0x438]\n
    struct struct_1 **v120;  // [bp-0x430]\n
    char v121;  // [bp-0x425]\n
    char v122;  // [bp-0x421]\n
    unsigned int *v123;  // [bp-0x420]\n
    struct struct_1 **v124;  // [bp-0x418]\n
    char v125;  // [bp-0x40d]\n
    char v126;  // [bp-0x409]\n
    unsigned int *v127;  // [bp-0x408]\n
    struct struct_1 **v128;  // [bp-0x400]\n
    char v129;  // [bp-0x3f8]\n
    unsigned int v130;  // [bp-0x3e0]\n
    unsigned int *v131;  // [bp-0x3d8]\n
    struct struct_1 **v132;  // [bp-0x3d0]\n
    char v133;  // [bp-0x3c8]\n
    unsigned int v134;  // [bp-0x3b0]\n
    unsigned int *v135;  // [bp-0x3a8]\n
    struct struct_1 **v136;  // [bp-0x3a0]\n
    char v137;  // [bp-0x398]\n
    unsigned int v138;  // [bp-0x38c]\n
    unsigned int *v139;  // [bp-0x388]\n
    struct struct_1 **v140;  // [bp-0x380]\n
    char v141;  // [bp-0x378]\n
    unsigned int v142;  // [bp-0x36c]\n
    unsigned int *v143;  // [bp-0x368]\n
    struct struct_1 **v144;  // [bp-0x360]\n
    char v145;  // [bp-0x358]\n
    unsigned int v146;  // [bp-0x34c]\n
    unsigned int *v147;  // [bp-0x348]\n
    struct struct_1 **v148;  // [bp-0x340]\n
    char v149;  // [bp-0x338]\n
    unsigned int v150;  // [bp-0x32c]\n
    unsigned int *v151;  // [bp-0x328]\n
    struct struct_1 **v152;  // [bp-0x320]\n
    char v153;  // [bp-0x318]\n
    unsigned int v154;  // [bp-0x30c]\n
    unsigned int *v155;  // [bp-0x308]\n
    struct struct_1 **v156;  // [bp-0x300]\n
    char v157;  // [bp-0x2f8]\n
    unsigned int v158;  // [bp-0x2ec]\n
    unsigned int *v159;  // [bp-0x2e8]\n
    struct struct_1 **v160;  // [bp-0x2e0]\n
    char v161;  // [bp-0x2d8]\n
    unsigned int v162;  // [bp-0x2cc]\n
    unsigned int *v163;  // [bp-0x2c8]\n
    struct struct_1 **v164;  // [bp-0x2c0]\n
    unsigned long v165;  // [bp-0x2b8]\n
    unsigned short v166;  // [bp-0x2aa]\n
    unsigned int *v167;  // [bp-0x2a8]\n
    struct struct_1 **v168;  // [bp-0x2a0]\n
    unsigned long v169;  // [bp-0x298]\n
    unsigned short v170;  // [bp-0x28a]\n
    unsigned int *v171;  // [bp-0x288]\n
    struct struct_1 **v172;  // [bp-0x280]\n
    unsigned long v173;  // [bp-0x278]\n
    unsigned short v174;  // [bp-0x26a]\n
    unsigned int *v175;  // [bp-0x268]\n
    struct struct_1 **v176;  // [bp-0x260]\n
    unsigned long v177;  // [bp-0x258]\n
    unsigned short v178;  // [bp-0x24a]\n
    unsigned int *v179;  // [bp-0x248]\n
    struct struct_1 **v180;  // [bp-0x240]\n
    unsigned long v181;  // [bp-0x238]\n
    unsigned short v182;  // [bp-0x22a]\n
    unsigned int *v183;  // [bp-0x228]\n
    struct struct_1 **v184;  // [bp-0x220]\n
    unsigned long v185;  // [bp-0x218]\n
    unsigned short v186;  // [bp-0x20a]\n
    unsigned int *v187;  // [bp-0x208]\n
    struct struct_1 **v188;  // [bp-0x200]\n
    unsigned long v189;  // [bp-0x1f8]\n
    unsigned short v190;  // [bp-0x1ea]\n
    unsigned int *v191;  // [bp-0x1e8]\n
    struct struct_1 **v192;  // [bp-0x1e0]\n
    char v193;  // [bp-0x1d4]\n
    char v194[4];  // [bp-0x1c8]\n
    unsigned int v195;  // [bp-0x1bc]\n
    unsigned int *v196;  // [bp-0x1b8]\n
    struct struct_1 **v197;  // [bp-0x1b0]\n
    char v198;  // [bp-0x1a4]\n
    char *v199;  // [bp-0x198]\n
    unsigned int v200;  // [bp-0x18c]\n
    unsigned int *v201;  // [bp-0x188]\n
    struct struct_1 **v202;  // [bp-0x180]\n
    char v203;  // [bp-0x174]\n
    char v204[4];  // [bp-0x168]\n
    unsigned int v205;  // [bp-0x15c]\n
    unsigned int *v206;  // [bp-0x158]\n
    struct struct_1 **v207;  // [bp-0x150]\n
    char v208;  // [bp-0x144]\n
    char *v209;  // [bp-0x138]\n
    unsigned int v210;  // [bp-0x12c]\n
    unsigned int *v211;  // [bp-0x128]\n
    struct struct_1 **v212;  // [bp-0x120]\n
    char v213;  // [bp-0x114]\n
    char *v214;  // [bp-0x108]\n
    unsigned int v215;  // [bp-0xfc]\n
    unsigned int *v216;  // [bp-0xf8]\n
    struct struct_1 **v217;  // [bp-0xf0]\n
    char *v218;  // [bp-0xe8]\n
    unsigned int v219;  // [bp-0xdc]\n
    unsigned int *v220;  // [bp-0xd8]\n
    struct struct_1 **v221;  // [bp-0xd0]\n
    char *v222;  // [bp-0xc8]\n
    unsigned int v223;  // [bp-0xbc]\n
    unsigned int *v224;  // [bp-0xb8]\n
    struct struct_1 **v225;  // [bp-0xb0]\n
    char *v226;  // [bp-0xa8]\n
    unsigned int v227;  // [bp-0x9c]\n
    unsigned int *v228;  // [bp-0x98]\n
    struct struct_1 **v229;  // [bp-0x90]\n
    char v230;  // [bp-0x88]\n
    unsigned int v231;  // [bp-0x70]\n
    unsigned int *v232;  // [bp-0x68]\n
    struct struct_1 **v233;  // [bp-0x60]\n
    char v234;  // [bp-0x58]\n
    unsigned int v235;  // [bp-0x40]\n
    unsigned int *v236;  // [bp-0x38]\n
    struct struct_1 **v237;  // [bp-0x30]\n
    unsigned long v238;  // [bp-0x28]\n
    char v239;  // [bp-0x19]\n
    unsigned int *v240;  // [bp-0x18]\n
    struct struct_1 **v241;  // [bp-0x10]\n
    unsigned int *v243;  // rax\n
    struct struct_1 **v244;  // rax\n
    struct struct_1 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_1 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_1 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_1 **v252;  // rax\n
    struct struct_1 **v254;  // rax\n
    unsigned int *v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_1 **v258;  // rax\n
    struct struct_1 **v260;  // rax\n
    unsigned int *v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_1 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_1 **v266;  // rax\n
    struct struct_1 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_1 **v270;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_1 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    struct struct_1 **v274;  // rax\n
    struct struct_1 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_1 **v278;  // rax\n
    unsigned int *v279;  // rax\n
    struct struct_1 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_1 **v282;  // rax\n
    unsigned int *v283;  // rax\n
    struct struct_1 **v284;  // rax\n
    unsigned int *v285;  // rax\n
    struct struct_1 **v286;  // rax\n
    unsigned int *v287;  // rax\n
    struct struct_1 **v288;  // rax\n
    unsigned int *v289;  // rax\n
    struct struct_1 **v290;  // rax\n
    unsigned int *v291;  // rax\n
    struct struct_1 **v292;  // rax\n
    unsigned int *v293;  // rax\n
    struct struct_1 **v294;  // rax\n
    struct struct_1 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    unsigned int *v297;  // rax\n
    struct struct_1 **v298;  // rax\n
    unsigned int *v299;  // rax\n
    struct struct_1 **v300;  // rax\n
    unsigned int *v301;  // rax\n
    struct struct_1 **v302;  // rax\n
    unsigned int *v303;  // rax\n
    struct struct_1 **v304;  // rax\n
    unsigned int *v305;  // rax\n
    struct struct_1 **v306;  // rax\n
    unsigned int *v307;  // rax\n
    struct struct_1 **v308;  // rax\n
    unsigned int *v309;  // rax\n
    struct struct_1 **v310;  // rax\n
    unsigned int *v311;  // rax\n
    struct struct_1 **v312;  // rax\n
    unsigned int *v313;  // rax\n
    struct struct_1 **v314;  // rax\n
    unsigned int *v315;  // rax\n
    struct struct_1 **v316;  // rax\n
    struct struct_1 **v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_1 **v320;  // rax\n
    unsigned int *v322;  // rax\n
    unsigned int *v323;  // rax\n
    struct struct_1 **v324;  // rax\n
    unsigned int *v325;  // rax\n
    struct struct_1 **v326;  // rax\n
    unsigned int *v327;  // rax\n
    struct struct_1 **v328;  // rax\n
    unsigned int *v329;  // rax\n
    struct struct_1 **v330;  // rax\n
    unsigned int *v331;  // rax\n
    struct struct_1 **v332;  // rax\n
    unsigned int *v333;  // rax\n
    struct struct_1 **v334;  // rax\n
    unsigned int *v335;  // rax\n
    struct struct_1 **v336;  // rax\n
    unsigned int *v337;  // rax\n
    struct struct_1 **v338;  // rax\n
    unsigned int *v339;  // rax\n
    struct struct_1 **v340;  // rax\n
    unsigned int *v341;  // rax\n
    struct struct_1 **v342;  // rax\n
    struct struct_1 **v343;  // rax\n
    unsigned int *v344;  // rax\n
    unsigned int *v345;  // rax\n
    struct struct_1 **v346;  // rax\n
    unsigned int *v347;  // rax\n
    struct struct_1 **v348;  // rax\n
    unsigned int *v349;  // rax\n
    struct struct_1 **v350;  // rax\n
    struct struct_1 **v352;  // rax\n
    unsigned int *v354;  // rax\n
    struct struct_1 **v356;  // rax\n
    unsigned int *v358;  // rax\n
    unsigned int *v359;  // rax\n
    struct struct_1 **v360;  // rax\n
    struct struct_1 **v362;  // rax\n
    unsigned int *v364;  // rax\n
    unsigned int *v365;  // rax\n
    struct struct_1 **v366;  // rax\n
    unsigned int *v367;  // rax\n
    struct struct_1 **v368;  // rax\n
    unsigned int *v369;  // rax\n
    struct struct_1 **v370;  // rax\n
    unsigned int *v371;  // rax\n
    struct struct_1 **v372;  // rax\n
    unsigned int *v373;  // rax, Other Possible Types: unsigned long\n
\n
    v45 = cgc__cookie;\n
    v44 = -1;\n
    if (cgc_sendline(1, \"===llamadecoke===\", 17) < 0)\n
        cgc__terminate(1);\n
    v241 = a0;\n
    v240 = a1;\n
    if (*(v240) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v239 = *(v241)->field_0;\n
    v243 = v240;\n
    *(v243) = *(v243) - 1;\n
    v244 = v241;\n
    *(v244) = *(v244) + 1;\n
    if (v239 <= *(v240) && !(!v239))\n
        goto LABEL_45bfec;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45bfec:\n
    v238 = cgc_calloc(v239);\n
    if (!v238)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v238, *(v241), v239);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v245 = v241;\n
    *(v245) = &(*(v245))[v239];\n
    v246 = v240;\n
    *(v246) = *(v246) - v239;\n
    cgc_checkheap();\n
    cgc_free(v238);\n
    v237 = a0;\n
    v236 = a1;\n
    memset(&v234, 0, 21);\n
    if (*(v236) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v235) = *(&*(v237));\n
    cgc_uint2str(&v234, 21, *(&v235));\n
    v43 = &v234;\n
    if (cgc_sendline(1, v43, cgc_strlen(&v234)) < 0)\n
        cgc__terminate(1);\n
    v247 = v236;\n
    *(v247) = *(v247) - 8;\n
    v248 = v237;\n
    *(v248) = *(v248) + 8;\n
    v217 = a0;\n
    v216 = a1;\n
    v214 = &*(v217)->field_0;\n
    memset(&v213, 0, 12);\n
    if (*(v216) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = 0;\n
    if ((*(v214) << 24))\n
    {\n
        v42 = 0;\n
        if ((v214[1] << 16))\n
        {\n
            v42 = 0;\n
            if ((v214[2] << 8))\n
                v42 = v214[3];\n
        }\n
    }\n
    v215 = v42 & 1;\n
    cgc_uint2str(&v213, 12, v215);\n
    v41 = &v213;\n
    if (cgc_sendline(1, v41, cgc_strlen(&v213)) < 0)\n
        cgc__terminate(1);\n
    v249 = v216;\n
    *(v249) = *(v249) - 4;\n
    v250 = v217;\n
    *(v250) = *(v250) + 4;\n
    v212 = a0;\n
    v211 = a1;\n
    v209 = &*(v212)->field_0;\n
    memset(&v208, 0, 12);\n
    if (*(v211) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = 0;\n
    if ((*(v209) << 24))\n
    {\n
        v40 = 0;\n
        if ((v209[1] << 16))\n
        {\n
            v40 = 0;\n
            if ((v209[2] << 8))\n
                v40 = v209[3];\n
        }\n
    }\n
    v210 = v40 & 1;\n
    cgc_uint2str(&v208, 12, v210);\n
    v39 = &v208;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v208)) < 0)\n
        cgc__terminate(1);\n
    v251 = v211;\n
    *(v251) = *(v251) - 4;\n
    v252 = v212;\n
    *(v252) = *(v252) + 4;\n
    v108 = a0;\n
    v107 = a1;\n
    if (*(v107) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v107) >= 128)\n
        v38 = 128;\n
    else\n
        v38 = *(v107);\n
    v106 = v38;\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = cgc_calloc(134);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v105, \"Str: \");\n
    cgc_strncpy(v105 + 5, *(v108), v106);\n
    v254 = v108;\n
    *(v254) = &(*(v254))[4 + cgc_strlen(v105)];\n
    v256 = v107;\n
    *(v256) = *(v256) - (cgc_strlen(v105) + -4);\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v156 = a0;\n
    v155 = a1;\n
    memset(&v153, 0, 12);\n
    if (*(v155) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = *(&*(v156));\n
    cgc_uint2str(&v153, 12, v154);\n
    v37 = &v153;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v153)) < 0)\n
        cgc__terminate(1);\n
    v257 = v155;\n
    *(v257) = *(v257) - 4;\n
    v258 = v156;\n
    *(v258) = *(v258) + 4;\n
    v229 = a0;\n
    v228 = a1;\n
    if (*(v228) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v228) >= 128)\n
        v36 = 128;\n
    else\n
        v36 = *(v228);\n
    v227 = v36;\n
    if (!v227)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v226 = cgc_calloc(134);\n
    if (!v226)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v226, \"Str: \");\n
    cgc_strncpy(v226 + 5, *(v229), v227);\n
    v260 = v229;\n
    *(v260) = &(*(v260))[4 + cgc_strlen(v226)];\n
    v262 = v228;\n
    *(v262) = *(v262) - (cgc_strlen(v226) + -4);\n
    cgc_checkheap();\n
    cgc_free(v226);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v56 = a0;\n
    v55 = a1;\n
    *(&v53[0]) = *(v56);\n
    memset(&v52, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if ((v53[0] << 8))\n
        v35 = v53[1];\n
    v54 = v35 & 1;\n
    cgc_uint2str(&v52, 6, v54);\n
    v34 = &v52;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v263 = v55;\n
    *(v263) = *(v263) - 2;\n
    v264 = v56;\n
    *(v264) = *(v264) + 2;\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(v96)->field_0;\n
    v265 = v95;\n
    *(v265) = *(v265) - 1;\n
    v266 = v96;\n
    *(v266) = *(v266) + 1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_45cbb2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45cbb2:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v267 = v96;\n
    *(v267) = &(*(v267))[v94];\n
    v268 = v95;\n
    *(v268) = *(v268) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 4);\n
    if (*(v127) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(v128)->field_0;\n
    cgc_uint2str(&v125, 4, v126);\n
    v33 = &v125;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v269 = v127;\n
    *(v269) = *(v269) - 1;\n
    v270 = v128;\n
    *(v270) = *(v270) + 1;\n
    v76 = a0;\n
    v75 = a1;\n
    *(&v73[0]) = *(v76);\n
    memset(&v72, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if (v73[0] << 56)\n
    {\n
        v32 = 0;\n
        if (v73[1] << 48)\n
        {\n
            v32 = 0;\n
            if (v73[2] << 40)\n
            {\n
                v32 = 0;\n
                if (v73[3] << 32)\n
                {\n
                    v32 = 0;\n
                    if ((v73[4] << 24))\n
                    {\n
                        v32 = 0;\n
                        if ((v73[5] << 16))\n
                        {\n
                            v32 = 0;\n
                            if ((v73[6] << 8))\n
                                v32 = v73[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v74) = v32 & 1;\n
    cgc_uint2str(&v72, 21, *(&v74));\n
    v31 = &v72;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v271 = v75;\n
    *(v271) = *(v271) - 8;\n
    v272 = v76;\n
    *(v272) = *(v272) + 8;\n
    v92 = a0;\n
    v91 = a1;\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(v92)->field_0;\n
    v273 = v91;\n
    *(v273) = *(v273) - 1;\n
    v274 = v92;\n
    *(v274) = *(v274) + 1;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_45d098;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45d098:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v275 = v92;\n
    *(v275) = &(*(v275))[v90];\n
    v276 = v91;\n
    *(v276) = *(v276) - v90;\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 4);\n
    if (*(v123) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(v124)->field_0;\n
    cgc_uint2str(&v121, 4, v122);\n
    v30 = &v121;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v277 = v123;\n
    *(v277) = *(v277) - 1;\n
    v278 = v124;\n
    *(v278) = *(v278) + 1;\n
    v180 = a0;\n
    v179 = a1;\n
    if (*(v179) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v178 = *(&*(v180));\n
    v279 = v179;\n
    *(v279) = *(v279) - 2;\n
    v280 = v180;\n
    *(v280) = *(v280) + 2;\n
    if (v178 <= *(v179) && !(!v178))\n
        goto LABEL_45d36a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45d36a:\n
    v177 = cgc_calloc(v178);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v177, *(v180), v178);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v281 = v179;\n
    *(v281) = *(v281) - v178;\n
    v282 = v180;\n
    *(v282) = &(*(v282))[v178];\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    v51 = a0;\n
    v50 = a1;\n
    *(&v48) = *(v51);\n
    memset(&v47, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = 0;\n
    if ((v48[0] << 8))\n
        v29 = v48[1];\n
    v49 = v29 & 1;\n
    cgc_uint2str(&v47, 6, v49);\n
    v28 = &v47;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v283 = v50;\n
    *(v283) = *(v283) - 2;\n
    v284 = v51;\n
    *(v284) = *(v284) + 2;\n
    v207 = a0;\n
    v206 = a1;\n
    *(&v204) = *(v207);\n
    memset(&v203, 0, 12);\n
    if (*(v206) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v204[0] << 24))\n
    {\n
        v27 = 0;\n
        if ((v204[1] << 16))\n
        {\n
            v27 = 0;\n
            if ((v204[2] << 8))\n
                v27 = v204[3];\n
        }\n
    }\n
    v205 = v27 & 1;\n
    cgc_uint2str(&v203, 12, v205);\n
    v26 = &v203;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v203)) < 0)\n
        cgc__terminate(1);\n
    v285 = v206;\n
    *(v285) = *(v285) - 4;\n
    v286 = v207;\n
    *(v286) = *(v286) + 4;\n
    v71 = a0;\n
    v70 = a1;\n
    *(&v68[0]) = *(v71);\n
    memset(&v67, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if (v68[0] << 56)\n
    {\n
        v25 = 0;\n
        if (v68[1] << 48)\n
        {\n
            v25 = 0;\n
            if (v68[2] << 40)\n
            {\n
                v25 = 0;\n
                if (v68[3] << 32)\n
                {\n
                    v25 = 0;\n
                    if ((v68[4] << 24))\n
                    {\n
                        v25 = 0;\n
                        if ((v68[5] << 16))\n
                        {\n
                            v25 = 0;\n
                            if ((v68[6] << 8))\n
                                v25 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v69) = v25 & 1;\n
    cgc_uint2str(&v67, 21, *(&v69));\n
    v24 = &v67;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v287 = v70;\n
    *(v287) = *(v287) - 8;\n
    v288 = v71;\n
    *(v288) = *(v288) + 8;\n
    v164 = a0;\n
    v163 = a1;\n
    memset(&v161, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = *(&*(v164));\n
    cgc_uint2str(&v161, 12, v162);\n
    v23 = &v161;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v161)) < 0)\n
        cgc__terminate(1);\n
    v289 = v163;\n
    *(v289) = *(v289) - 4;\n
    v290 = v164;\n
    *(v290) = *(v290) + 4;\n
    v233 = a0;\n
    v232 = a1;\n
    memset(&v230, 0, 21);\n
    if (*(v232) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v231) = *(&*(v233));\n
    cgc_uint2str(&v230, 21, *(&v231));\n
    v22 = &v230;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v230)) < 0)\n
        cgc__terminate(1);\n
    v291 = v232;\n
    *(v291) = *(v291) - 8;\n
    v292 = v233;\n
    *(v292) = *(v292) + 8;\n
    v88 = a0;\n
    v87 = a1;\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(v88)->field_0;\n
    v293 = v87;\n
    *(v293) = *(v293) - 1;\n
    v294 = v88;\n
    *(v294) = *(v294) + 1;\n
    if (v86 <= *(v87) && !(!v86))\n
        goto LABEL_45dc06;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45dc06:\n
    v85 = cgc_calloc(v86);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v85, *(v88), v86);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v295 = v88;\n
    *(v295) = &(*(v295))[v86];\n
    v296 = v87;\n
    *(v296) = *(v296) - v86;\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    v202 = a0;\n
    v201 = a1;\n
    v199 = &*(v202)->field_0;\n
    memset(&v198, 0, 12);\n
    if (*(v201) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if ((*(v199) << 24))\n
    {\n
        v21 = 0;\n
        if ((v199[1] << 16))\n
        {\n
            v21 = 0;\n
            if ((v199[2] << 8))\n
                v21 = v199[3];\n
        }\n
    }\n
    v200 = v21 & 1;\n
    cgc_uint2str(&v198, 12, v200);\n
    v20 = &v198;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v198)) < 0)\n
        cgc__terminate(1);\n
    v297 = v201;\n
    *(v297) = *(v297) - 4;\n
    v298 = v202;\n
    *(v298) = *(v298) + 4;\n
    v66 = a0;\n
    v65 = a1;\n
    *(&v63[0]) = *(v66);\n
    memset(&v62, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if (v63[0] << 56)\n
    {\n
        v19 = 0;\n
        if (v63[1] << 48)\n
        {\n
            v19 = 0;\n
            if (v63[2] << 40)\n
            {\n
                v19 = 0;\n
                if (v63[3] << 32)\n
                {\n
                    v19 = 0;\n
                    if ((v63[4] << 24))\n
                    {\n
                        v19 = 0;\n
                        if ((v63[5] << 16))\n
                        {\n
                            v19 = 0;\n
                            if ((v63[6] << 8))\n
                                v19 = v63[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v64) = v19 & 1;\n
    cgc_uint2str(&v62, 21, *(&v64));\n
    v18 = &v62;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v299 = v65;\n
    *(v299) = *(v299) - 8;\n
    v300 = v66;\n
    *(v300) = *(v300) + 8;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v134) = *(&*(v136));\n
    cgc_uint2str(&v133, 21, *(&v134));\n
    v17 = &v133;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v301 = v135;\n
    *(v301) = *(v301) - 8;\n
    v302 = v136;\n
    *(v302) = *(v302) + 8;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 6);\n
    if (*(v115) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 6, v114);\n
    v16 = &v113;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v303 = v115;\n
    *(v303) = *(v303) - 2;\n
    v304 = v116;\n
    *(v304) = *(v304) + 2;\n
    v152 = a0;\n
    v151 = a1;\n
    memset(&v149, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v150 = *(&*(v152));\n
    cgc_uint2str(&v149, 12, v150);\n
    v15 = &v149;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v305 = v151;\n
    *(v305) = *(v305) - 4;\n
    v306 = v152;\n
    *(v306) = *(v306) + 4;\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v190 = *(&*(v192));\n
    v307 = v191;\n
    *(v307) = *(v307) - 2;\n
    v308 = v192;\n
    *(v308) = *(v308) + 2;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_45e47f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45e47f:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v309 = v191;\n
    *(v309) = *(v309) - v190;\n
    v310 = v192;\n
    *(v310) = &(*(v310))[v190];\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v148 = a0;\n
    v147 = a1;\n
    memset(&v145, 0, 12);\n
    if (*(v147) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    cgc_uint2str(&v145, 12, v146);\n
    v14 = &v145;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v145)) < 0)\n
        cgc__terminate(1);\n
    v311 = v147;\n
    *(v311) = *(v311) - 4;\n
    v312 = v148;\n
    *(v312) = *(v312) + 4;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 21);\n
    if (*(v131) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v130) = *(&*(v132));\n
    cgc_uint2str(&v129, 21, *(&v130));\n
    v13 = &v129;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v313 = v131;\n
    *(v313) = *(v313) - 8;\n
    v314 = v132;\n
    *(v314) = *(v314) + 8;\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    v315 = v83;\n
    *(v315) = *(v315) - 1;\n
    v316 = v84;\n
    *(v316) = *(v316) + 1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_45e858;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45e858:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v317 = v84;\n
    *(v317) = &(*(v317))[v82];\n
    v318 = v83;\n
    *(v318) = *(v318) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v225 = a0;\n
    v224 = a1;\n
    if (*(v224) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v224) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v224);\n
    v223 = v12;\n
    if (!v223)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v222 = cgc_calloc(134);\n
    if (!v222)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v222, \"Str: \");\n
    cgc_strncpy(v222 + 5, *(v225), v223);\n
    v320 = v225;\n
    *(v320) = &(*(v320))[4 + cgc_strlen(v222)];\n
    v322 = v224;\n
    *(v322) = *(v322) - (cgc_strlen(v222) + -4);\n
    cgc_checkheap();\n
    cgc_free(v222);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v186 = *(&*(v188));\n
    v323 = v187;\n
    *(v323) = *(v323) - 2;\n
    v324 = v188;\n
    *(v324) = *(v324) + 2;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_45ec1b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45ec1b:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v325 = v187;\n
    *(v325) = *(v325) - v186;\n
    v326 = v188;\n
    *(v326) = &(*(v326))[v186];\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v176 = a0;\n
    v175 = a1;\n
    if (*(v175) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v174 = *(&*(v176));\n
    v327 = v175;\n
    *(v327) = *(v327) - 2;\n
    v328 = v176;\n
    *(v328) = *(v328) + 2;\n
    if (v174 <= *(v175) && !(!v174))\n
        goto LABEL_45edeb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45edeb:\n
    v173 = cgc_calloc(v174);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v173, *(v176), v174);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v329 = v175;\n
    *(v329) = *(v329) - v174;\n
    v330 = v176;\n
    *(v330) = &(*(v330))[v174];\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 6);\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 6, v110);\n
    v11 = &v109;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v331 = v111;\n
    *(v331) = *(v331) - 2;\n
    v332 = v112;\n
    *(v332) = *(v332) + 2;\n
    v160 = a0;\n
    v159 = a1;\n
    memset(&v157, 0, 12);\n
    if (*(v159) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = *(&*(v160));\n
    cgc_uint2str(&v157, 12, v158);\n
    v10 = &v157;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v157)) < 0)\n
        cgc__terminate(1);\n
    v333 = v159;\n
    *(v333) = *(v333) - 4;\n
    v334 = v160;\n
    *(v334) = *(v334) + 4;\n
    v197 = a0;\n
    v196 = a1;\n
    *(&v194) = *(v197);\n
    memset(&v193, 0, 12);\n
    if (*(v196) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v194[0] << 24))\n
    {\n
        v9 = 0;\n
        if ((v194[1] << 16))\n
        {\n
            v9 = 0;\n
            if ((v194[2] << 8))\n
                v9 = v194[3];\n
        }\n
    }\n
    v195 = v9 & 1;\n
    cgc_uint2str(&v193, 12, v195);\n
    v8 = &v193;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v193)) < 0)\n
        cgc__terminate(1);\n
    v335 = v196;\n
    *(v335) = *(v335) - 4;\n
    v336 = v197;\n
    *(v336) = *(v336) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    *(&v58[0]) = *(v61);\n
    memset(&v57, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v58[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v58[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v58[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v58[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v58[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v58[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v58[6] << 8))\n
                                v7 = v58[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v59) = v7 & 1;\n
    cgc_uint2str(&v57, 21, *(&v59));\n
    v6 = &v57;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v337 = v60;\n
    *(v337) = *(v337) - 8;\n
    v338 = v61;\n
    *(v338) = *(v338) + 8;\n
    v144 = a0;\n
    v143 = a1;\n
    memset(&v141, 0, 12);\n
    if (*(v143) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    cgc_uint2str(&v141, 12, v142);\n
    v5 = &v141;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v339 = v143;\n
    *(v339) = *(v339) - 4;\n
    v340 = v144;\n
    *(v340) = *(v340) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(v80)->field_0;\n
    v341 = v79;\n
    *(v341) = *(v341) - 1;\n
    v342 = v80;\n
    *(v342) = *(v342) + 1;\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_45f662;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45f662:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v343 = v80;\n
    *(v343) = &(*(v343))[v78];\n
    v344 = v79;\n
    *(v344) = *(v344) - v78;\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v172 = a0;\n
    v171 = a1;\n
    if (*(v171) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v170 = *(&*(v172));\n
    v345 = v171;\n
    *(v345) = *(v345) - 2;\n
    v346 = v172;\n
    *(v346) = *(v346) + 2;\n
    if (v170 <= *(v171) && !(!v170))\n
        goto LABEL_45f832;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_45f832:\n
    v169 = cgc_calloc(v170);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v169, *(v172), v170);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v347 = v171;\n
    *(v347) = *(v347) - v170;\n
    v348 = v172;\n
    *(v348) = &(*(v348))[v170];\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 4);\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(v120)->field_0;\n
    cgc_uint2str(&v117, 4, v118);\n
    v4 = &v117;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v349 = v119;\n
    *(v349) = *(v349) - 1;\n
    v350 = v120;\n
    *(v350) = *(v350) + 1;\n
    v221 = a0;\n
    v220 = a1;\n
    if (*(v220) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v220) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v220);\n
    v219 = v3;\n
    if (!v219)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v218 = cgc_calloc(134);\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v218, \"Str: \");\n
    cgc_strncpy(v218 + 5, *(v221), v219);\n
    v352 = v221;\n
    *(v352) = &(*(v352))[4 + cgc_strlen(v218)];\n
    v354 = v220;\n
    *(v354) = *(v354) - (cgc_strlen(v218) + -4);\n
    cgc_checkheap();\n
    cgc_free(v218);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v104 = a0;\n
    v103 = a1;\n
    if (*(v103) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v103) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v103);\n
    v102 = v2;\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = cgc_calloc(134);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v101, \"Str: \");\n
    cgc_strncpy(v101 + 5, *(v104), v102);\n
    v356 = v104;\n
    *(v356) = &(*(v356))[4 + cgc_strlen(v101)];\n
    v358 = v103;\n
    *(v358) = *(v358) - (cgc_strlen(v101) + -4);\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v140 = a0;\n
    v139 = a1;\n
    memset(&v137, 0, 12);\n
    if (*(v139) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    cgc_uint2str(&v137, 12, v138);\n
    v1 = &v137;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v137)) < 0)\n
        cgc__terminate(1);\n
    v359 = v139;\n
    *(v359) = *(v359) - 4;\n
    v360 = v140;\n
    *(v360) = *(v360) + 4;\n
    v100 = a0;\n
    v99 = a1;\n
    if (*(v99) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v99) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v99);\n
    v98 = v0;\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = cgc_calloc(134);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v97, \"Str: \");\n
    cgc_strncpy(v97 + 5, *(v100), v98);\n
    v362 = v100;\n
    *(v362) = &(*(v362))[4 + cgc_strlen(v97)];\n
    v364 = v99;\n
    *(v364) = *(v364) - (cgc_strlen(v97) + -4);\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = *(&*(v168));\n
    v365 = v167;\n
    *(v365) = *(v365) - 2;\n
    v366 = v168;\n
    *(v366) = *(v366) + 2;\n
    if (v166 <= *(v167) && !(!v166))\n
        goto LABEL_4601de;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4601de:\n
    v165 = cgc_calloc(v166);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v165, *(v168), v166);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v367 = v167;\n
    *(v367) = *(v367) - v166;\n
    v368 = v168;\n
    *(v368) = &(*(v368))[v166];\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    v184 = a0;\n
    v183 = a1;\n
    if (*(v183) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v182 = *(&*(v184));\n
    v369 = v183;\n
    *(v369) = *(v369) - 2;\n
    v370 = v184;\n
    *(v370) = *(v370) + 2;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_4603ae;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4603ae:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v371 = v183;\n
    *(v371) = *(v371) - v182;\n
    v372 = v184;\n
    *(v372) = &(*(v372))[v182];\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v45 ^= cgc__cookie;\n
    if (v45)\n
        cgc___stack_cookie_fail();\n
    v373 = a1;\n
    if (*(a1) > 0 && v44 >= 0)\n
    {\n
        v373 = v44;\n
        if (v373 < 0)\n
            v373 = *(&(&v46)[8 * v44])(a0, a1);\n
    }\n
    return v373;\n
}\n
", "4588808:sub_460508": null, "4588816:cgc_process_llamadigredience": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadigredience(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x6a8]\n
    struct_1 *v1;  // [bp-0x6a0]\n
    struct_1 *v2;  // [bp-0x698]\n
    char v3;  // [bp-0x68d]\n
    unsigned int v4;  // [bp-0x68c]\n
    struct_1 *v5;  // [bp-0x688]\n
    struct_1 *v6;  // [bp-0x680]\n
    struct_1 *v7;  // [bp-0x678]\n
    struct_1 *v8;  // [bp-0x670]\n
    struct_1 *v9;  // [bp-0x668]\n
    char v10;  // [bp-0x659]\n
    struct_1 *v11;  // [bp-0x658]\n
    struct_1 *v12;  // [bp-0x650]\n
    char v13;  // [bp-0x641]\n
    struct_1 *v14;  // [bp-0x640]\n
    struct_1 *v15;  // [bp-0x638]\n
    unsigned int v16;  // [bp-0x62c]\n
    struct_1 *v17;  // [bp-0x628]\n
    struct_1 *v18;  // [bp-0x620]\n
    struct_1 *v19;  // [bp-0x618]\n
    char v20;  // [bp-0x60d]\n
    unsigned int v21;  // [bp-0x60c]\n
    struct_1 *v22;  // [bp-0x608]\n
    struct_1 *v23;  // [bp-0x600]\n
    struct_1 *v24;  // [bp-0x5f8]\n
    char v25;  // [bp-0x5e9]\n
    struct_1 *v26;  // [bp-0x5e8]\n
    char v27;  // [bp-0x5d9]\n
    struct_1 *v28;  // [bp-0x5d8]\n
    char v29;  // [bp-0x5c9]\n
    struct_1 *v30;  // [bp-0x5c8]\n
    char v31;  // [bp-0x5bd]\n
    unsigned int v32;  // [bp-0x5bc]\n
    struct_1 *v33;  // [bp-0x5b8]\n
    unsigned int v34;  // [bp-0x5ac]\n
    struct_1 *v35;  // [bp-0x5a8]\n
    struct_1 *v36;  // [bp-0x5a0]\n
    unsigned int v37;  // [bp-0x594]\n
    unsigned int v38;  // [bp-0x590]\n
    unsigned int v39;  // [bp-0x58c]\n
    char v40;  // [bp-0x588]\n
    char v41;  // [bp-0x56e]\n
    char v42[2];  // [bp-0x568]\n
    unsigned short v43;  // [bp-0x55a]\n
    unsigned int *v44;  // [bp-0x558]\n
    struct struct_0 **v45;  // [bp-0x550]\n
    char v46;  // [bp-0x546]\n
    char v47[2];  // [bp-0x540]\n
    unsigned short v48;  // [bp-0x532]\n
    unsigned int *v49;  // [bp-0x530]\n
    struct struct_0 **v50;  // [bp-0x528]\n
    char v51;  // [bp-0x51e]\n
    char *v52;  // [bp-0x518]\n
    unsigned short v53;  // [bp-0x50a]\n
    unsigned int *v54;  // [bp-0x508]\n
    struct struct_0 **v55;  // [bp-0x500]\n
    char v56;  // [bp-0x4f8]\n
    char v57[8];  // [bp-0x4d8]\n
    unsigned int v58;  // [bp-0x4d0]\n
    unsigned int *v59;  // [bp-0x4c8]\n
    struct struct_0 **v60;  // [bp-0x4c0]\n
    char v61;  // [bp-0x4b8]\n
    char v62[8];  // [bp-0x498]\n
    unsigned int v63;  // [bp-0x490]\n
    unsigned int *v64;  // [bp-0x488]\n
    struct struct_0 **v65;  // [bp-0x480]\n
    char v66;  // [bp-0x478]\n
    char v67[8];  // [bp-0x460]\n
    unsigned int v68;  // [bp-0x458]\n
    unsigned int *v69;  // [bp-0x450]\n
    struct struct_0 **v70;  // [bp-0x448]\n
    unsigned long v71;  // [bp-0x440]\n
    char v72;  // [bp-0x431]\n
    unsigned int *v73;  // [bp-0x430]\n
    struct struct_0 **v74;  // [bp-0x428]\n
    unsigned long v75;  // [bp-0x420]\n
    char v76;  // [bp-0x411]\n
    unsigned int *v77;  // [bp-0x410]\n
    struct struct_0 **v78;  // [bp-0x408]\n
    unsigned long v79;  // [bp-0x400]\n
    char v80;  // [bp-0x3f1]\n
    unsigned int *v81;  // [bp-0x3f0]\n
    struct struct_0 **v82;  // [bp-0x3e8]\n
    char *v83;  // [bp-0x3e0]\n
    unsigned int v84;  // [bp-0x3d4]\n
    unsigned int *v85;  // [bp-0x3d0]\n
    struct struct_0 **v86;  // [bp-0x3c8]\n
    char *v87;  // [bp-0x3c0]\n
    unsigned int v88;  // [bp-0x3b4]\n
    unsigned int *v89;  // [bp-0x3b0]\n
    struct struct_0 **v90;  // [bp-0x3a8]\n
    char *v91;  // [bp-0x3a0]\n
    unsigned int v92;  // [bp-0x394]\n
    unsigned int *v93;  // [bp-0x390]\n
    struct struct_0 **v94;  // [bp-0x388]\n
    char v95;  // [bp-0x380]\n
    unsigned short v96;  // [bp-0x37a]\n
    unsigned int *v97;  // [bp-0x378]\n
    struct struct_0 **v98;  // [bp-0x370]\n
    char v99;  // [bp-0x368]\n
    unsigned short v100;  // [bp-0x362]\n
    unsigned int *v101;  // [bp-0x360]\n
    struct struct_0 **v102;  // [bp-0x358]\n
    char v103;  // [bp-0x350]\n
    unsigned short v104;  // [bp-0x34a]\n
    unsigned int *v105;  // [bp-0x348]\n
    struct struct_0 **v106;  // [bp-0x340]\n
    char v107;  // [bp-0x338]\n
    unsigned short v108;  // [bp-0x332]\n
    unsigned int *v109;  // [bp-0x330]\n
    struct struct_0 **v110;  // [bp-0x328]\n
    char v111;  // [bp-0x31d]\n
    char v112;  // [bp-0x319]\n
    unsigned int *v113;  // [bp-0x318]\n
    struct struct_0 **v114;  // [bp-0x310]\n
    char v115;  // [bp-0x305]\n
    char v116;  // [bp-0x301]\n
    unsigned int *v117;  // [bp-0x300]\n
    struct struct_0 **v118;  // [bp-0x2f8]\n
    char v119;  // [bp-0x2ed]\n
    char v120;  // [bp-0x2e9]\n
    unsigned int *v121;  // [bp-0x2e8]\n
    struct struct_0 **v122;  // [bp-0x2e0]\n
    char v123;  // [bp-0x2d5]\n
    char v124;  // [bp-0x2d1]\n
    unsigned int *v125;  // [bp-0x2d0]\n
    struct struct_0 **v126;  // [bp-0x2c8]\n
    char v127;  // [bp-0x2bd]\n
    char v128;  // [bp-0x2b9]\n
    unsigned int *v129;  // [bp-0x2b8]\n
    struct struct_0 **v130;  // [bp-0x2b0]\n
    char v131;  // [bp-0x2a8]\n
    unsigned int v132;  // [bp-0x290]\n
    unsigned int *v133;  // [bp-0x288]\n
    struct struct_0 **v134;  // [bp-0x280]\n
    char v135;  // [bp-0x278]\n
    unsigned int v136;  // [bp-0x260]\n
    unsigned int *v137;  // [bp-0x258]\n
    struct struct_0 **v138;  // [bp-0x250]\n
    char v139;  // [bp-0x248]\n
    unsigned int v140;  // [bp-0x230]\n
    unsigned int *v141;  // [bp-0x228]\n
    struct struct_0 **v142;  // [bp-0x220]\n
    char v143;  // [bp-0x218]\n
    unsigned int v144;  // [bp-0x20c]\n
    unsigned int *v145;  // [bp-0x208]\n
    struct struct_0 **v146;  // [bp-0x200]\n
    char v147;  // [bp-0x1f8]\n
    unsigned int v148;  // [bp-0x1ec]\n
    unsigned int *v149;  // [bp-0x1e8]\n
    struct struct_0 **v150;  // [bp-0x1e0]\n
    char v151;  // [bp-0x1d8]\n
    unsigned int v152;  // [bp-0x1cc]\n
    unsigned int *v153;  // [bp-0x1c8]\n
    struct struct_0 **v154;  // [bp-0x1c0]\n
    unsigned long v155;  // [bp-0x1b8]\n
    unsigned short v156;  // [bp-0x1aa]\n
    unsigned int *v157;  // [bp-0x1a8]\n
    struct struct_0 **v158;  // [bp-0x1a0]\n
    unsigned long v159;  // [bp-0x198]\n
    unsigned short v160;  // [bp-0x18a]\n
    unsigned int *v161;  // [bp-0x188]\n
    struct struct_0 **v162;  // [bp-0x180]\n
    unsigned long v163;  // [bp-0x178]\n
    unsigned short v164;  // [bp-0x16a]\n
    unsigned int *v165;  // [bp-0x168]\n
    struct struct_0 **v166;  // [bp-0x160]\n
    unsigned long v167;  // [bp-0x158]\n
    unsigned short v168;  // [bp-0x14a]\n
    unsigned int *v169;  // [bp-0x148]\n
    struct struct_0 **v170;  // [bp-0x140]\n
    char v171;  // [bp-0x134]\n
    char v172[4];  // [bp-0x128]\n
    unsigned int v173;  // [bp-0x11c]\n
    unsigned int *v174;  // [bp-0x118]\n
    struct struct_0 **v175;  // [bp-0x110]\n
    char v176;  // [bp-0x104]\n
    char *v177;  // [bp-0xf8]\n
    unsigned int v178;  // [bp-0xec]\n
    unsigned int *v179;  // [bp-0xe8]\n
    struct struct_0 **v180;  // [bp-0xe0]\n
    char *v181;  // [bp-0xd8]\n
    unsigned int v182;  // [bp-0xcc]\n
    unsigned int *v183;  // [bp-0xc8]\n
    struct struct_0 **v184;  // [bp-0xc0]\n
    char *v185;  // [bp-0xb8]\n
    unsigned int v186;  // [bp-0xac]\n
    unsigned int *v187;  // [bp-0xa8]\n
    struct struct_0 **v188;  // [bp-0xa0]\n
    char *v189;  // [bp-0x98]\n
    unsigned int v190;  // [bp-0x8c]\n
    unsigned int *v191;  // [bp-0x88]\n
    struct struct_0 **v192;  // [bp-0x80]\n
    char v193;  // [bp-0x78]\n
    unsigned int v194;  // [bp-0x60]\n
    unsigned int *v195;  // [bp-0x58]\n
    struct struct_0 **v196;  // [bp-0x50]\n
    unsigned long v197;  // [bp-0x48]\n
    char v198;  // [bp-0x39]\n
    unsigned int *v199;  // [bp-0x38]\n
    struct struct_0 **v200;  // [bp-0x30]\n
    unsigned long v201;  // [bp-0x28]\n
    char v202;  // [bp-0x19]\n
    unsigned int *v203;  // [bp-0x18]\n
    struct struct_0 **v204;  // [bp-0x10]\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v253;  // rax\n
    unsigned int *v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    struct struct_0 **v294;  // rax\n
    unsigned int *v295;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v304;  // rax\n
    struct struct_0 **v305;  // rax\n
    unsigned int *v306;  // rax\n
    struct struct_0 **v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    struct struct_0 **v310;  // rax\n
    unsigned int *v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    unsigned int *v314;  // rax, Other Possible Types: unsigned long\n
\n
    v39 = cgc__cookie;\n
    v38 = -1;\n
    if (cgc_sendline(1, \"===llamadigredience===\", 22) < 0)\n
        cgc__terminate(1);\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v191) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v191);\n
    v190 = v37;\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v189 = cgc_calloc(134);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v189, \"Str: \");\n
    cgc_strncpy(v189 + 5, *(v192), v190);\n
    v207 = v192;\n
    *(v207) = &(*(v207))[4 + cgc_strlen(v189)];\n
    v209 = v191;\n
    *(v209) = *(v209) - (cgc_strlen(v189) + -4);\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v204 = a0;\n
    v203 = a1;\n
    if (*(v203) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v202 = *(v204)->field_0;\n
    v210 = v203;\n
    *(v210) = *(v210) - 1;\n
    v211 = v204;\n
    *(v211) = *(v211) + 1;\n
    if (v202 <= *(v203) && !(!v202))\n
        goto LABEL_460817;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_460817:\n
    v201 = cgc_calloc(v202);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v201, *(v204), v202);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v212 = v204;\n
    *(v212) = &(*(v212))[v202];\n
    v213 = v203;\n
    *(v213) = *(v213) - v202;\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    v110 = a0;\n
    v109 = a1;\n
    memset(&v107, 0, 6);\n
    if (*(v109) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = *(&*(v110));\n
    cgc_uint2str(&v107, 6, v108);\n
    v36 = &v107;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v107)) < 0)\n
        cgc__terminate(1);\n
    v214 = v109;\n
    *(v214) = *(v214) - 2;\n
    v215 = v110;\n
    *(v215) = *(v215) + 2;\n
    v82 = a0;\n
    v81 = a1;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(v82)->field_0;\n
    v216 = v81;\n
    *(v216) = *(v216) - 1;\n
    v217 = v82;\n
    *(v217) = *(v217) + 1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_460ac8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_460ac8:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v218 = v82;\n
    *(v218) = &(*(v218))[v80];\n
    v219 = v81;\n
    *(v219) = *(v219) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v166 = a0;\n
    v165 = a1;\n
    if (*(v165) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = *(&*(v166));\n
    v220 = v165;\n
    *(v220) = *(v220) - 2;\n
    v221 = v166;\n
    *(v221) = *(v221) + 2;\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_460c98;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_460c98:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v222 = v165;\n
    *(v222) = *(v222) - v164;\n
    v223 = v166;\n
    *(v223) = &(*(v223))[v164];\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 6);\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v104 = *(&*(v106));\n
    cgc_uint2str(&v103, 6, v104);\n
    v35 = &v103;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v224 = v105;\n
    *(v224) = *(v224) - 2;\n
    v225 = v106;\n
    *(v225) = *(v225) + 2;\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v187) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v187);\n
    v186 = v34;\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = cgc_calloc(134);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v185, \"Str: \");\n
    cgc_strncpy(v185 + 5, *(v188), v186);\n
    v227 = v188;\n
    *(v227) = &(*(v227))[4 + cgc_strlen(v185)];\n
    v229 = v187;\n
    *(v229) = *(v229) - (cgc_strlen(v185) + -4);\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v142 = a0;\n
    v141 = a1;\n
    memset(&v139, 0, 21);\n
    if (*(v141) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v140) = *(&*(v142));\n
    cgc_uint2str(&v139, 21, *(&v140));\n
    v33 = &v139;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v139)) < 0)\n
        cgc__terminate(1);\n
    v230 = v141;\n
    *(v230) = *(v230) - 8;\n
    v231 = v142;\n
    *(v231) = *(v231) + 8;\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v93) >= 128)\n
        v32 = 128;\n
    else\n
        v32 = *(v93);\n
    v92 = v32;\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = cgc_calloc(134);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v91, \"Str: \");\n
    cgc_strncpy(v91 + 5, *(v94), v92);\n
    v233 = v94;\n
    *(v233) = &(*(v233))[4 + cgc_strlen(v91)];\n
    v235 = v93;\n
    *(v235) = *(v235) - (cgc_strlen(v91) + -4);\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v70 = a0;\n
    v69 = a1;\n
    *(&v67[0]) = *(v70);\n
    memset(&v66, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if (v67[0] << 56)\n
    {\n
        v31 = 0;\n
        if (v67[1] << 48)\n
        {\n
            v31 = 0;\n
            if (v67[2] << 40)\n
            {\n
                v31 = 0;\n
                if (v67[3] << 32)\n
                {\n
                    v31 = 0;\n
                    if ((v67[4] << 24))\n
                    {\n
                        v31 = 0;\n
                        if ((v67[5] << 16))\n
                        {\n
                            v31 = 0;\n
                            if ((v67[6] << 8))\n
                                v31 = v67[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v68) = v31 & 1;\n
    cgc_uint2str(&v66, 21, *(&v68));\n
    v30 = &v66;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v236 = v69;\n
    *(v236) = *(v236) - 8;\n
    v237 = v70;\n
    *(v237) = *(v237) + 8;\n
    v180 = a0;\n
    v179 = a1;\n
    v177 = &*(v180)->field_0;\n
    memset(&v176, 0, 12);\n
    if (*(v179) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = 0;\n
    if ((*(v177) << 24))\n
    {\n
        v29 = 0;\n
        if ((v177[1] << 16))\n
        {\n
            v29 = 0;\n
            if ((v177[2] << 8))\n
                v29 = v177[3];\n
        }\n
    }\n
    v178 = v29 & 1;\n
    cgc_uint2str(&v176, 12, v178);\n
    v28 = &v176;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v176)) < 0)\n
        cgc__terminate(1);\n
    v238 = v179;\n
    *(v238) = *(v238) - 4;\n
    v239 = v180;\n
    *(v239) = *(v239) + 4;\n
    v55 = a0;\n
    v54 = a1;\n
    v52 = &*(v55)->field_0;\n
    memset(&v51, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((*(v52) << 8))\n
        v27 = v52[1];\n
    v53 = v27 & 1;\n
    cgc_uint2str(&v51, 6, v53);\n
    v26 = &v51;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v240 = v54;\n
    *(v240) = *(v240) - 2;\n
    v241 = v55;\n
    *(v241) = *(v241) + 2;\n
    v175 = a0;\n
    v174 = a1;\n
    *(&v172) = *(v175);\n
    memset(&v171, 0, 12);\n
    if (*(v174) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if ((v172[0] << 24))\n
    {\n
        v25 = 0;\n
        if ((v172[1] << 16))\n
        {\n
            v25 = 0;\n
            if ((v172[2] << 8))\n
                v25 = v172[3];\n
        }\n
    }\n
    v173 = v25 & 1;\n
    cgc_uint2str(&v171, 12, v173);\n
    v24 = &v171;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v171)) < 0)\n
        cgc__terminate(1);\n
    v242 = v174;\n
    *(v242) = *(v242) - 4;\n
    v243 = v175;\n
    *(v243) = *(v243) + 4;\n
    v200 = a0;\n
    v199 = a1;\n
    if (*(v199) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v198 = *(v200)->field_0;\n
    v244 = v199;\n
    *(v244) = *(v244) - 1;\n
    v245 = v200;\n
    *(v245) = *(v245) + 1;\n
    if (v198 <= *(v199) && !(!v198))\n
        goto LABEL_461aa2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_461aa2:\n
    v197 = cgc_calloc(v198);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v197, *(v200), v198);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v246 = v200;\n
    *(v246) = &(*(v246))[v198];\n
    v247 = v199;\n
    *(v247) = *(v247) - v198;\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 6);\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(&*(v102));\n
    cgc_uint2str(&v99, 6, v100);\n
    v23 = &v99;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v248 = v101;\n
    *(v248) = *(v248) - 2;\n
    v249 = v102;\n
    *(v249) = *(v249) + 2;\n
    v130 = a0;\n
    v129 = a1;\n
    memset(&v127, 0, 4);\n
    if (*(v129) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = *(v130)->field_0;\n
    cgc_uint2str(&v127, 4, v128);\n
    v22 = &v127;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v127)) < 0)\n
        cgc__terminate(1);\n
    v250 = v129;\n
    *(v250) = *(v250) - 1;\n
    v251 = v130;\n
    *(v251) = *(v251) + 1;\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v89) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v89);\n
    v88 = v21;\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = cgc_calloc(134);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v87, \"Str: \");\n
    cgc_strncpy(v87 + 5, *(v90), v88);\n
    v253 = v90;\n
    *(v253) = &(*(v253))[4 + cgc_strlen(v87)];\n
    v255 = v89;\n
    *(v255) = *(v255) - (cgc_strlen(v87) + -4);\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v65 = a0;\n
    v64 = a1;\n
    *(&v62[0]) = *(v65);\n
    memset(&v61, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (v62[0] << 56)\n
    {\n
        v20 = 0;\n
        if (v62[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v62[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v62[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v62[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v62[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v62[6] << 8))\n
                                v20 = v62[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v63) = v20 & 1;\n
    cgc_uint2str(&v61, 21, *(&v63));\n
    v19 = &v61;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v256 = v64;\n
    *(v256) = *(v256) - 8;\n
    v257 = v65;\n
    *(v257) = *(v257) + 8;\n
    v126 = a0;\n
    v125 = a1;\n
    memset(&v123, 0, 4);\n
    if (*(v125) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = *(v126)->field_0;\n
    cgc_uint2str(&v123, 4, v124);\n
    v18 = &v123;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v258 = v125;\n
    *(v258) = *(v258) - 1;\n
    v259 = v126;\n
    *(v259) = *(v259) + 1;\n
    v150 = a0;\n
    v149 = a1;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v148 = *(&*(v150));\n
    cgc_uint2str(&v147, 12, v148);\n
    v17 = &v147;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v147)) < 0)\n
        cgc__terminate(1);\n
    v260 = v149;\n
    *(v260) = *(v260) - 4;\n
    v261 = v150;\n
    *(v261) = *(v261) + 4;\n
    v86 = a0;\n
    v85 = a1;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v85) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v85);\n
    v84 = v16;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v83, \"Str: \");\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v263 = v86;\n
    *(v263) = &(*(v263))[4 + cgc_strlen(v83)];\n
    v265 = v85;\n
    *(v265) = *(v265) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v196 = a0;\n
    v195 = a1;\n
    memset(&v193, 0, 21);\n
    if (*(v195) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v194) = *(&*(v196));\n
    cgc_uint2str(&v193, 21, *(&v194));\n
    v15 = &v193;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v193)) < 0)\n
        cgc__terminate(1);\n
    v266 = v195;\n
    *(v266) = *(v266) - 8;\n
    v267 = v196;\n
    *(v267) = *(v267) + 8;\n
    v154 = a0;\n
    v153 = a1;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v152 = *(&*(v154));\n
    cgc_uint2str(&v151, 12, v152);\n
    v14 = &v151;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v151)) < 0)\n
        cgc__terminate(1);\n
    v268 = v153;\n
    *(v268) = *(v268) - 4;\n
    v269 = v154;\n
    *(v269) = *(v269) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    *(&v57[0]) = *(v60);\n
    memset(&v56, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if (v57[0] << 56)\n
    {\n
        v13 = 0;\n
        if (v57[1] << 48)\n
        {\n
            v13 = 0;\n
            if (v57[2] << 40)\n
            {\n
                v13 = 0;\n
                if (v57[3] << 32)\n
                {\n
                    v13 = 0;\n
                    if ((v57[4] << 24))\n
                    {\n
                        v13 = 0;\n
                        if ((v57[5] << 16))\n
                        {\n
                            v13 = 0;\n
                            if ((v57[6] << 8))\n
                                v13 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v58) = v13 & 1;\n
    cgc_uint2str(&v56, 21, *(&v58));\n
    v12 = &v56;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v270 = v59;\n
    *(v270) = *(v270) - 8;\n
    v271 = v60;\n
    *(v271) = *(v271) + 8;\n
    v146 = a0;\n
    v145 = a1;\n
    memset(&v143, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v144 = *(&*(v146));\n
    cgc_uint2str(&v143, 12, v144);\n
    v11 = &v143;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v272 = v145;\n
    *(v272) = *(v272) - 4;\n
    v273 = v146;\n
    *(v273) = *(v273) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    *(&v47) = *(v50);\n
    memset(&v46, 0, 6);\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v47[0] << 8))\n
        v10 = v47[1];\n
    v48 = v10 & 1;\n
    cgc_uint2str(&v46, 6, v48);\n
    v9 = &v46;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v274 = v49;\n
    *(v274) = *(v274) - 2;\n
    v275 = v50;\n
    *(v275) = *(v275) + 2;\n
    v138 = a0;\n
    v137 = a1;\n
    memset(&v135, 0, 21);\n
    if (*(v137) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v136) = *(&*(v138));\n
    cgc_uint2str(&v135, 21, *(&v136));\n
    v8 = &v135;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v135)) < 0)\n
        cgc__terminate(1);\n
    v276 = v137;\n
    *(v276) = *(v276) - 8;\n
    v277 = v138;\n
    *(v277) = *(v277) + 8;\n
    v162 = a0;\n
    v161 = a1;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v160 = *(&*(v162));\n
    v278 = v161;\n
    *(v278) = *(v278) - 2;\n
    v279 = v162;\n
    *(v279) = *(v279) + 2;\n
    if (v160 <= *(v161) && !(!v160))\n
        goto LABEL_462dab;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_462dab:\n
    v159 = cgc_calloc(v160);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v159, *(v162), v160);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v280 = v161;\n
    *(v280) = *(v280) - v160;\n
    v281 = v162;\n
    *(v281) = &(*(v281))[v160];\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    v170 = a0;\n
    v169 = a1;\n
    if (*(v169) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v168 = *(&*(v170));\n
    v282 = v169;\n
    *(v282) = *(v282) - 2;\n
    v283 = v170;\n
    *(v283) = *(v283) + 2;\n
    if (v168 <= *(v169) && !(!v168))\n
        goto LABEL_462f7b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_462f7b:\n
    v167 = cgc_calloc(v168);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v167, *(v170), v168);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v284 = v169;\n
    *(v284) = *(v284) - v168;\n
    v285 = v170;\n
    *(v285) = &(*(v285))[v168];\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    v122 = a0;\n
    v121 = a1;\n
    memset(&v119, 0, 4);\n
    if (*(v121) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = *(v122)->field_0;\n
    cgc_uint2str(&v119, 4, v120);\n
    v7 = &v119;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v119)) < 0)\n
        cgc__terminate(1);\n
    v286 = v121;\n
    *(v286) = *(v286) - 1;\n
    v287 = v122;\n
    *(v287) = *(v287) + 1;\n
    v98 = a0;\n
    v97 = a1;\n
    memset(&v95, 0, 6);\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(&*(v98));\n
    cgc_uint2str(&v95, 6, v96);\n
    v6 = &v95;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v95)) < 0)\n
        cgc__terminate(1);\n
    v288 = v97;\n
    *(v288) = *(v288) - 2;\n
    v289 = v98;\n
    *(v289) = *(v289) + 2;\n
    v118 = a0;\n
    v117 = a1;\n
    memset(&v115, 0, 4);\n
    if (*(v117) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = *(v118)->field_0;\n
    cgc_uint2str(&v115, 4, v116);\n
    v5 = &v115;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v115)) < 0)\n
        cgc__terminate(1);\n
    v290 = v117;\n
    *(v290) = *(v290) - 1;\n
    v291 = v118;\n
    *(v291) = *(v291) + 1;\n
    v78 = a0;\n
    v77 = a1;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(v78)->field_0;\n
    v292 = v77;\n
    *(v292) = *(v292) - 1;\n
    v293 = v78;\n
    *(v293) = *(v293) + 1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_463451;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_463451:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v294 = v78;\n
    *(v294) = &(*(v294))[v76];\n
    v295 = v77;\n
    *(v295) = *(v295) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v184 = a0;\n
    v183 = a1;\n
    if (*(v183) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v183) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v183);\n
    v182 = v4;\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v181 = cgc_calloc(134);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v181, \"Str: \");\n
    cgc_strncpy(v181 + 5, *(v184), v182);\n
    v297 = v184;\n
    *(v297) = &(*(v297))[4 + cgc_strlen(v181)];\n
    v299 = v183;\n
    *(v299) = *(v299) - (cgc_strlen(v181) + -4);\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v158 = a0;\n
    v157 = a1;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = *(&*(v158));\n
    v300 = v157;\n
    *(v300) = *(v300) - 2;\n
    v301 = v158;\n
    *(v301) = *(v301) + 2;\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_463814;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_463814:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v302 = v157;\n
    *(v302) = *(v302) - v156;\n
    v303 = v158;\n
    *(v303) = &(*(v303))[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42) = *(v45);\n
    memset(&v41, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v42[0] << 8))\n
        v3 = v42[1];\n
    v43 = v3 & 1;\n
    cgc_uint2str(&v41, 6, v43);\n
    v2 = &v41;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v304 = v44;\n
    *(v304) = *(v304) - 2;\n
    v305 = v45;\n
    *(v305) = *(v305) + 2;\n
    v114 = a0;\n
    v113 = a1;\n
    memset(&v111, 0, 4);\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(v114)->field_0;\n
    cgc_uint2str(&v111, 4, v112);\n
    v1 = &v111;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v306 = v113;\n
    *(v306) = *(v306) - 1;\n
    v307 = v114;\n
    *(v307) = *(v307) + 1;\n
    v74 = a0;\n
    v73 = a1;\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(v74)->field_0;\n
    v308 = v73;\n
    *(v308) = *(v308) - 1;\n
    v309 = v74;\n
    *(v309) = *(v309) + 1;\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_463c2c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_463c2c:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v310 = v74;\n
    *(v310) = &(*(v310))[v72];\n
    v311 = v73;\n
    *(v311) = *(v311) - v72;\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v134 = a0;\n
    v133 = a1;\n
    memset(&v131, 0, 21);\n
    if (*(v133) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v132) = *(&*(v134));\n
    cgc_uint2str(&v131, 21, *(&v132));\n
    v0 = &v131;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v131)) < 0)\n
        cgc__terminate(1);\n
    v312 = v133;\n
    *(v312) = *(v312) - 8;\n
    v313 = v134;\n
    *(v313) = *(v313) + 8;\n
    v39 ^= cgc__cookie;\n
    if (v39)\n
        cgc___stack_cookie_fail();\n
    v314 = a1;\n
    if (*(a1) > 0 && v38 >= 0)\n
    {\n
        v314 = v38;\n
        if (v314 < 0)\n
            v314 = *(&(&v40)[8 * v38])(a0, a1);\n
    }\n
    return v314;\n
}\n
", "4603536:cgc_process_llamabetitle": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamabetitle(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1d0]\n
    char v1;  // [bp-0x1c1]\n
    struct_1 *v2;  // [bp-0x1c0]\n
    unsigned int v3;  // [bp-0x1b4]\n
    struct_1 *v4;  // [bp-0x1b0]\n
    char v5;  // [bp-0x1a1]\n
    struct_1 *v6;  // [bp-0x1a0]\n
    char v7;  // [bp-0x191]\n
    struct_1 *v8;  // [bp-0x190]\n
    struct_1 *v9;  // [bp-0x188]\n
    char v10;  // [bp-0x179]\n
    unsigned int v11;  // [bp-0x178]\n
    unsigned int v12;  // [bp-0x174]\n
    char v13;  // [bp-0x170]\n
    char v14;  // [bp-0x156]\n
    char v15[2];  // [bp-0x150]\n
    unsigned short v16;  // [bp-0x142]\n
    unsigned int *v17;  // [bp-0x140]\n
    struct struct_0 **v18;  // [bp-0x138]\n
    char v19;  // [bp-0x12e]\n
    char v20[2];  // [bp-0x128]\n
    unsigned short v21;  // [bp-0x11a]\n
    unsigned int *v22;  // [bp-0x118]\n
    struct struct_0 **v23;  // [bp-0x110]\n
    char v24;  // [bp-0x108]\n
    char v25[8];  // [bp-0xe8]\n
    unsigned int v26;  // [bp-0xe0]\n
    unsigned int *v27;  // [bp-0xd8]\n
    struct struct_0 **v28;  // [bp-0xd0]\n
    char v29;  // [bp-0xc8]\n
    char v30[8];  // [bp-0xa8]\n
    unsigned int v31;  // [bp-0xa0]\n
    unsigned int *v32;  // [bp-0x98]\n
    struct struct_0 **v33;  // [bp-0x90]\n
    char *v34;  // [bp-0x88]\n
    unsigned int v35;  // [bp-0x7c]\n
    unsigned int *v36;  // [bp-0x78]\n
    struct struct_0 **v37;  // [bp-0x70]\n
    char v38;  // [bp-0x68]\n
    unsigned int v39;  // [bp-0x50]\n
    unsigned int *v40;  // [bp-0x48]\n
    struct struct_0 **v41;  // [bp-0x40]\n
    char v42;  // [bp-0x38]\n
    unsigned int v43;  // [bp-0x20]\n
    unsigned int *v44;  // [bp-0x18]\n
    struct struct_0 **v45;  // [bp-0x10]\n
    unsigned int *v47;  // rax\n
    struct struct_0 **v48;  // rax\n
    unsigned int *v49;  // rax\n
    struct struct_0 **v50;  // rax\n
    unsigned int *v51;  // rax\n
    struct struct_0 **v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    struct struct_0 **v56;  // rax\n
    unsigned int *v58;  // rax\n
    unsigned int *v59;  // rax\n
    struct struct_0 **v60;  // rax\n
    unsigned int *v61;  // rax\n
    struct struct_0 **v62;  // rax\n
    unsigned int *v63;  // rax, Other Possible Types: unsigned long\n
\n
    v12 = cgc__cookie;\n
    v11 = -1;\n
    if (cgc_sendline(1, \"===llamabetitle===\", 18) < 0)\n
        cgc__terminate(1);\n
    v23 = a0;\n
    v22 = a1;\n
    *(&v20) = *(v23);\n
    memset(&v19, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v20[0] << 8))\n
        v10 = v20[1];\n
    v21 = v10 & 1;\n
    cgc_uint2str(&v19, 6, v21);\n
    v9 = &v19;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v19)) < 0)\n
        cgc__terminate(1);\n
    v47 = v22;\n
    *(v47) = *(v47) - 2;\n
    v48 = v23;\n
    *(v48) = *(v48) + 2;\n
    v45 = a0;\n
    v44 = a1;\n
    memset(&v42, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v43) = *(&*(v45));\n
    cgc_uint2str(&v42, 21, *(&v43));\n
    v8 = &v42;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v49 = v44;\n
    *(v49) = *(v49) - 8;\n
    v50 = v45;\n
    *(v50) = *(v50) + 8;\n
    v33 = a0;\n
    v32 = a1;\n
    *(&v30[0]) = *(v33);\n
    memset(&v29, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v30[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v30[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v30[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v30[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v30[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v30[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v30[6] << 8))\n
                                v7 = v30[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v31) = v7 & 1;\n
    cgc_uint2str(&v29, 21, *(&v31));\n
    v6 = &v29;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v51 = v32;\n
    *(v51) = *(v51) - 8;\n
    v52 = v33;\n
    *(v52) = *(v52) + 8;\n
    v28 = a0;\n
    v27 = a1;\n
    *(&v25[0]) = *(v28);\n
    memset(&v24, 0, 21);\n
    if (*(v27) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v25[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v25[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v25[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v25[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v25[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v25[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v25[6] << 8))\n
                                v5 = v25[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v26) = v5 & 1;\n
    cgc_uint2str(&v24, 21, *(&v26));\n
    v4 = &v24;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v53 = v27;\n
    *(v53) = *(v53) - 8;\n
    v54 = v28;\n
    *(v54) = *(v54) + 8;\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v36) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v36);\n
    v35 = v3;\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v34 = cgc_calloc(134);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v34, \"Str: \");\n
    cgc_strncpy(v34 + 5, *(v37), v35);\n
    v56 = v37;\n
    *(v56) = &(*(v56))[4 + cgc_strlen(v34)];\n
    v58 = v36;\n
    *(v58) = *(v58) - (cgc_strlen(v34) + -4);\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v41 = a0;\n
    v40 = a1;\n
    memset(&v38, 0, 21);\n
    if (*(v40) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v39) = *(&*(v41));\n
    cgc_uint2str(&v38, 21, *(&v39));\n
    v2 = &v38;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v59 = v40;\n
    *(v59) = *(v59) - 8;\n
    v60 = v41;\n
    *(v60) = *(v60) + 8;\n
    v18 = a0;\n
    v17 = a1;\n
    *(&v15) = *(v18);\n
    memset(&v14, 0, 6);\n
    if (*(v17) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v15[0] << 8))\n
        v1 = v15[1];\n
    v16 = v1 & 1;\n
    cgc_uint2str(&v14, 6, v16);\n
    v0 = &v14;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v61 = v17;\n
    *(v61) = *(v61) - 2;\n
    v62 = v18;\n
    *(v62) = *(v62) + 2;\n
    v12 ^= cgc__cookie;\n
    if (v12)\n
        cgc___stack_cookie_fail();\n
    v63 = a1;\n
    if (*(a1) > 0 && v11 >= 0)\n
    {\n
        v63 = v11;\n
        if (v63 < 0)\n
            v63 = *(&(&v13)[8 * v11])(a0, a1);\n
    }\n
    return v63;\n
}\n
", "4606375:sub_4649a7": null, "4606384:cgc_process_llamatenebrose": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6200;\n
extern unsigned long long g_4c6208;\n
\n
long long cgc_process_llamatenebrose(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x168]\n
    struct_1 *v1;  // [bp-0x160]\n
    struct_1 *v2;  // [bp-0x158]\n
    struct_1 *v3;  // [bp-0x150]\n
    struct_1 *v4;  // [bp-0x148]\n
    unsigned int v5;  // [bp-0x140]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long v7;  // [bp-0x138]\n
    unsigned long v8;  // [bp-0x130]\n
    char *v9;  // [bp-0x118]\n
    unsigned int *v10;  // [bp-0x110]\n
    struct struct_0 **v11;  // [bp-0x108]\n
    char v12;  // [bp-0x100]\n
    unsigned short v13;  // [bp-0xfa]\n
    unsigned int *v14;  // [bp-0xf8]\n
    struct struct_0 **v15;  // [bp-0xf0]\n
    char v16;  // [bp-0xe8]\n
    unsigned short v17;  // [bp-0xe2]\n
    unsigned int *v18;  // [bp-0xe0]\n
    struct struct_0 **v19;  // [bp-0xd8]\n
    unsigned short *v20;  // [bp-0xd0]\n
    unsigned int *v21;  // [bp-0xc8]\n
    struct struct_0 **v22;  // [bp-0xc0]\n
    char v23;  // [bp-0xb8]\n
    unsigned int v24;  // [bp-0xa0]\n
    unsigned int *v25;  // [bp-0x98]\n
    struct struct_0 **v26;  // [bp-0x90]\n
    char v27;  // [bp-0x88]\n
    unsigned int v28;  // [bp-0x70]\n
    unsigned int *v29;  // [bp-0x68]\n
    struct struct_0 **v30;  // [bp-0x60]\n
    char v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x40]\n
    unsigned int *v33;  // [bp-0x38]\n
    struct struct_0 **v34;  // [bp-0x30]\n
    unsigned long v35;  // [bp-0x28]\n
    char v36;  // [bp-0x19]\n
    unsigned int *v37;  // [bp-0x18]\n
    struct struct_0 **v38;  // [bp-0x10]\n
    unsigned int *v40;  // rax\n
    struct struct_0 **v41;  // rax\n
    unsigned int *v42;  // rax\n
    struct struct_0 **v43;  // rax\n
    unsigned int *v44;  // rax\n
    struct struct_0 **v45;  // rax\n
    unsigned int *v46;  // rax\n
    struct struct_0 **v47;  // rax\n
    unsigned int *v48;  // rax\n
    struct struct_0 **v49;  // rax\n
    unsigned int *v50;  // rax\n
    struct struct_0 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    struct struct_0 **v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    unsigned int *v58;  // rax, Other Possible Types: unsigned long\n
\n
    v7 = g_4c6200;\n
    v8 = g_4c6208;\n
    v6 = cgc__cookie;\n
    v5 = -1;\n
    if (cgc_sendline(1, \"===llamatenebrose===\", 20) < 0)\n
        cgc__terminate(1);\n
    v30 = a0;\n
    v29 = a1;\n
    memset(&v27, 0, 21);\n
    if (*(v29) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v28) = *(&*(v30));\n
    cgc_uint2str(&v27, 21, *(&v28));\n
    v4 = &v27;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v40 = v29;\n
    *(v40) = *(v40) - 8;\n
    v41 = v30;\n
    *(v41) = *(v41) + 8;\n
    v19 = a0;\n
    v18 = a1;\n
    memset(&v16, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = *(&*(v19));\n
    cgc_uint2str(&v16, 6, v17);\n
    v3 = &v16;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v42 = v18;\n
    *(v42) = *(v42) - 2;\n
    v43 = v19;\n
    *(v43) = *(v43) + 2;\n
    v15 = a0;\n
    v14 = a1;\n
    memset(&v12, 0, 6);\n
    if (*(v14) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = *(&*(v15));\n
    cgc_uint2str(&v12, 6, v13);\n
    v2 = &v12;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v12)) < 0)\n
        cgc__terminate(1);\n
    v44 = v14;\n
    *(v44) = *(v44) - 2;\n
    v45 = v15;\n
    *(v45) = *(v45) + 2;\n
    v26 = a0;\n
    v25 = a1;\n
    memset(&v23, 0, 21);\n
    if (*(v25) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v24) = *(&*(v26));\n
    cgc_uint2str(&v23, 21, *(&v24));\n
    v1 = &v23;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v46 = v25;\n
    *(v46) = *(v46) - 8;\n
    v47 = v26;\n
    *(v47) = *(v47) + 8;\n
    v34 = a0;\n
    v33 = a1;\n
    memset(&v31, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v32) = *(&*(v34));\n
    cgc_uint2str(&v31, 21, *(&v32));\n
    v0 = &v31;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v48 = v33;\n
    *(v48) = *(v48) - 8;\n
    v49 = v34;\n
    *(v49) = *(v49) + 8;\n
    v22 = a0;\n
    v21 = a1;\n
    v20 = &*(v22);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = v21;\n
    *(v50) = *(v50) - 2;\n
    v51 = v22;\n
    *(v51) = *(v51) + 2;\n
    v5 = *(v20);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v52 = v37;\n
    *(v52) = *(v52) - 1;\n
    v53 = v38;\n
    *(v53) = *(v53) + 1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_465077;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_465077:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v54 = v38;\n
    *(v54) = &(*(v54))[v36];\n
    v55 = v37;\n
    *(v55) = *(v55) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v11 = a0;\n
    v10 = a1;\n
    v9 = &*(v11)->field_0;\n
    if (*(v10) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = v10;\n
    *(v56) = *(v56) - 1;\n
    v57 = v11;\n
    *(v57) = *(v57) + 1;\n
    v5 = *(v9);\n
    v6 ^= cgc__cookie;\n
    if (v6)\n
        cgc___stack_cookie_fail();\n
    v58 = a1;\n
    if (*(a1) > 0 && v5 >= 0)\n
    {\n
        v58 = v5;\n
        if (v58 < 2)\n
            v58 = (&v7)[v5](a0, a1);\n
    }\n
    return v58;\n
}\n
", "4608597:sub_465255": null, "4608608:cgc_process_llamaonium": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaonium(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x350]\n
    struct_1 *v1;  // [bp-0x348]\n
    struct_1 *v2;  // [bp-0x340]\n
    unsigned int v3;  // [bp-0x334]\n
    struct_1 *v4;  // [bp-0x330]\n
    char v5;  // [bp-0x321]\n
    struct_1 *v6;  // [bp-0x320]\n
    struct_1 *v7;  // [bp-0x318]\n
    char v8;  // [bp-0x309]\n
    struct_1 *v9;  // [bp-0x308]\n
    unsigned int v10;  // [bp-0x300]\n
    unsigned int v11;  // [bp-0x2fc]\n
    struct_1 *v12;  // [bp-0x2f8]\n
    unsigned int v13;  // [bp-0x2ec]\n
    struct_1 *v14;  // [bp-0x2e8]\n
    struct_1 *v15;  // [bp-0x2e0]\n
    char v16;  // [bp-0x2d1]\n
    struct_1 *v17;  // [bp-0x2d0]\n
    struct_1 *v18;  // [bp-0x2c8]\n
    unsigned int v19;  // [bp-0x2c0]\n
    unsigned int v20;  // [bp-0x2bc]\n
    char v21;  // [bp-0x2b8]\n
    char v22;  // [bp-0x29e]\n
    char v23[2];  // [bp-0x298]\n
    unsigned short v24;  // [bp-0x28a]\n
    unsigned int *v25;  // [bp-0x288]\n
    struct struct_0 **v26;  // [bp-0x280]\n
    char v27;  // [bp-0x278]\n
    char v28[8];  // [bp-0x258]\n
    unsigned int v29;  // [bp-0x250]\n
    unsigned int *v30;  // [bp-0x248]\n
    struct struct_0 **v31;  // [bp-0x240]\n
    unsigned long v32;  // [bp-0x238]\n
    char v33;  // [bp-0x229]\n
    unsigned int *v34;  // [bp-0x228]\n
    struct struct_0 **v35;  // [bp-0x220]\n
    char *v36;  // [bp-0x218]\n
    unsigned int v37;  // [bp-0x20c]\n
    unsigned int *v38;  // [bp-0x208]\n
    struct struct_0 **v39;  // [bp-0x200]\n
    char *v40;  // [bp-0x1f8]\n
    unsigned int v41;  // [bp-0x1ec]\n
    unsigned int *v42;  // [bp-0x1e8]\n
    struct struct_0 **v43;  // [bp-0x1e0]\n
    char *v44;  // [bp-0x1d8]\n
    unsigned int v45;  // [bp-0x1cc]\n
    unsigned int *v46;  // [bp-0x1c8]\n
    struct struct_0 **v47;  // [bp-0x1c0]\n
    char v48;  // [bp-0x1b8]\n
    unsigned short v49;  // [bp-0x1b2]\n
    unsigned int *v50;  // [bp-0x1b0]\n
    struct struct_0 **v51;  // [bp-0x1a8]\n
    char v52;  // [bp-0x19d]\n
    char v53;  // [bp-0x199]\n
    unsigned int *v54;  // [bp-0x198]\n
    struct struct_0 **v55;  // [bp-0x190]\n
    char v56;  // [bp-0x188]\n
    unsigned int v57;  // [bp-0x170]\n
    unsigned int *v58;  // [bp-0x168]\n
    struct struct_0 **v59;  // [bp-0x160]\n
    char v60;  // [bp-0x158]\n
    unsigned int v61;  // [bp-0x14c]\n
    unsigned int *v62;  // [bp-0x148]\n
    struct struct_0 **v63;  // [bp-0x140]\n
    char v64;  // [bp-0x138]\n
    unsigned int v65;  // [bp-0x12c]\n
    unsigned int *v66;  // [bp-0x128]\n
    struct struct_0 **v67;  // [bp-0x120]\n
    char v68;  // [bp-0x118]\n
    unsigned int v69;  // [bp-0x10c]\n
    unsigned int *v70;  // [bp-0x108]\n
    struct struct_0 **v71;  // [bp-0x100]\n
    char v72;  // [bp-0xf8]\n
    unsigned int v73;  // [bp-0xec]\n
    unsigned int *v74;  // [bp-0xe8]\n
    struct struct_0 **v75;  // [bp-0xe0]\n
    char v76;  // [bp-0xd4]\n
    char v77[4];  // [bp-0xc8]\n
    unsigned int v78;  // [bp-0xbc]\n
    unsigned int *v79;  // [bp-0xb8]\n
    struct struct_0 **v80;  // [bp-0xb0]\n
    char *v81;  // [bp-0xa8]\n
    unsigned int v82;  // [bp-0x9c]\n
    unsigned int *v83;  // [bp-0x98]\n
    struct struct_0 **v84;  // [bp-0x90]\n
    char v85;  // [bp-0x88]\n
    unsigned int v86;  // [bp-0x70]\n
    unsigned int *v87;  // [bp-0x68]\n
    struct struct_0 **v88;  // [bp-0x60]\n
    char v89;  // [bp-0x58]\n
    unsigned int v90;  // [bp-0x40]\n
    unsigned int *v91;  // [bp-0x38]\n
    struct struct_0 **v92;  // [bp-0x30]\n
    unsigned long v93;  // [bp-0x28]\n
    char v94;  // [bp-0x19]\n
    unsigned int *v95;  // [bp-0x18]\n
    struct struct_0 **v96;  // [bp-0x10]\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    unsigned int *v104;  // rax\n
    struct struct_0 **v105;  // rax\n
    struct struct_0 **v107;  // rax\n
    unsigned int *v109;  // rax\n
    unsigned int *v110;  // rax\n
    struct struct_0 **v111;  // rax\n
    struct struct_0 **v113;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v117;  // rax\n
    unsigned int *v119;  // rax\n
    unsigned int *v120;  // rax\n
    struct struct_0 **v121;  // rax\n
    unsigned int *v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    unsigned int *v126;  // rax\n
    struct struct_0 **v127;  // rax\n
    unsigned int *v128;  // rax\n
    struct struct_0 **v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    unsigned int *v132;  // rax\n
    struct struct_0 **v133;  // rax\n
    unsigned int *v134;  // rax\n
    struct struct_0 **v135;  // rax\n
    struct struct_0 **v137;  // rax\n
    unsigned int *v139;  // rax\n
    unsigned int *v140;  // rax\n
    struct struct_0 **v141;  // rax\n
    unsigned int *v142;  // rax\n
    struct struct_0 **v143;  // rax\n
    unsigned int *v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    unsigned int *v146;  // rax, Other Possible Types: unsigned long\n
\n
    v20 = cgc__cookie;\n
    v19 = -1;\n
    if (cgc_sendline(1, \"===llamaonium===\", 16) < 0)\n
        cgc__terminate(1);\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v57) = *(&*(v59));\n
    cgc_uint2str(&v56, 21, *(&v57));\n
    v18 = &v56;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v98 = v58;\n
    *(v98) = *(v98) - 8;\n
    v99 = v59;\n
    *(v99) = *(v99) + 8;\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 12);\n
    if (*(v74) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(&*(v75));\n
    cgc_uint2str(&v72, 12, v73);\n
    v17 = &v72;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v100 = v74;\n
    *(v100) = *(v100) - 4;\n
    v101 = v75;\n
    *(v101) = *(v101) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    *(&v77) = *(v80);\n
    memset(&v76, 0, 12);\n
    if (*(v79) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v77[0] << 24))\n
    {\n
        v16 = 0;\n
        if ((v77[1] << 16))\n
        {\n
            v16 = 0;\n
            if ((v77[2] << 8))\n
                v16 = v77[3];\n
        }\n
    }\n
    v78 = v16 & 1;\n
    cgc_uint2str(&v76, 12, v78);\n
    v15 = &v76;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v76)) < 0)\n
        cgc__terminate(1);\n
    v102 = v79;\n
    *(v102) = *(v102) - 4;\n
    v103 = v80;\n
    *(v103) = *(v103) + 4;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v90) = *(&*(v92));\n
    cgc_uint2str(&v89, 21, *(&v90));\n
    v14 = &v89;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v104 = v91;\n
    *(v104) = *(v104) - 8;\n
    v105 = v92;\n
    *(v105) = *(v105) + 8;\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v46) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v46);\n
    v45 = v13;\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = cgc_calloc(134);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v44, \"Str: \");\n
    cgc_strncpy(v44 + 5, *(v47), v45);\n
    v107 = v47;\n
    *(v107) = &(*(v107))[4 + cgc_strlen(v44)];\n
    v109 = v46;\n
    *(v109) = *(v109) - (cgc_strlen(v44) + -4);\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v86) = *(&*(v88));\n
    cgc_uint2str(&v85, 21, *(&v86));\n
    v12 = &v85;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v110 = v87;\n
    *(v110) = *(v110) - 8;\n
    v111 = v88;\n
    *(v111) = *(v111) + 8;\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v83) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v83);\n
    v82 = v11;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v81, \"Str: \");\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v113 = v84;\n
    *(v113) = &(*(v113))[4 + cgc_strlen(v81)];\n
    v115 = v83;\n
    *(v115) = *(v115) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v42) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v42);\n
    v41 = v10;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v40, \"Str: \");\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v117 = v43;\n
    *(v117) = &(*(v117))[4 + cgc_strlen(v40)];\n
    v119 = v42;\n
    *(v119) = *(v119) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(&*(v71));\n
    cgc_uint2str(&v68, 12, v69);\n
    v9 = &v68;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v120 = v70;\n
    *(v120) = *(v120) - 4;\n
    v121 = v71;\n
    *(v121) = *(v121) + 4;\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(v96)->field_0;\n
    v122 = v95;\n
    *(v122) = *(v122) - 1;\n
    v123 = v96;\n
    *(v123) = *(v123) + 1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_465fcb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_465fcb:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v124 = v96;\n
    *(v124) = &(*(v124))[v94];\n
    v125 = v95;\n
    *(v125) = *(v125) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v26 = a0;\n
    v25 = a1;\n
    *(&v23) = *(v26);\n
    memset(&v22, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v23[0] << 8))\n
        v8 = v23[1];\n
    v24 = v8 & 1;\n
    cgc_uint2str(&v22, 6, v24);\n
    v7 = &v22;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v126 = v25;\n
    *(v126) = *(v126) - 2;\n
    v127 = v26;\n
    *(v127) = *(v127) + 2;\n
    v35 = a0;\n
    v34 = a1;\n
    if (*(v34) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(v35)->field_0;\n
    v128 = v34;\n
    *(v128) = *(v128) - 1;\n
    v129 = v35;\n
    *(v129) = *(v129) + 1;\n
    if (v33 <= *(v34) && !(!v33))\n
        goto LABEL_4662c0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4662c0:\n
    v32 = cgc_calloc(v33);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v32, *(v35), v33);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v130 = v35;\n
    *(v130) = &(*(v130))[v33];\n
    v131 = v34;\n
    *(v131) = *(v131) - v33;\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 12);\n
    if (*(v62) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(&*(v63));\n
    cgc_uint2str(&v60, 12, v61);\n
    v6 = &v60;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v132 = v62;\n
    *(v132) = *(v132) - 4;\n
    v133 = v63;\n
    *(v133) = *(v133) + 4;\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v28[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v28[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v28[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v28[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v28[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v28[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v28[6] << 8))\n
                                v5 = v28[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v29) = v5 & 1;\n
    cgc_uint2str(&v27, 21, *(&v29));\n
    v4 = &v27;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v134 = v30;\n
    *(v134) = *(v134) - 8;\n
    v135 = v31;\n
    *(v135) = *(v135) + 8;\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v38) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v38);\n
    v37 = v3;\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = cgc_calloc(134);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v36, \"Str: \");\n
    cgc_strncpy(v36 + 5, *(v39), v37);\n
    v137 = v39;\n
    *(v137) = &(*(v137))[4 + cgc_strlen(v36)];\n
    v139 = v38;\n
    *(v139) = *(v139) - (cgc_strlen(v36) + -4);\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v67 = a0;\n
    v66 = a1;\n
    memset(&v64, 0, 12);\n
    if (*(v66) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(&*(v67));\n
    cgc_uint2str(&v64, 12, v65);\n
    v2 = &v64;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v140 = v66;\n
    *(v140) = *(v140) - 4;\n
    v141 = v67;\n
    *(v141) = *(v141) + 4;\n
    v55 = a0;\n
    v54 = a1;\n
    memset(&v52, 0, 4);\n
    if (*(v54) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = *(v55)->field_0;\n
    cgc_uint2str(&v52, 4, v53);\n
    v1 = &v52;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v142 = v54;\n
    *(v142) = *(v142) - 1;\n
    v143 = v55;\n
    *(v143) = *(v143) + 1;\n
    v51 = a0;\n
    v50 = a1;\n
    memset(&v48, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(&*(v51));\n
    cgc_uint2str(&v48, 6, v49);\n
    v0 = &v48;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v144 = v50;\n
    *(v144) = *(v144) - 2;\n
    v145 = v51;\n
    *(v145) = *(v145) + 2;\n
    v20 ^= cgc__cookie;\n
    if (v20)\n
        cgc___stack_cookie_fail();\n
    v146 = a1;\n
    if (*(a1) > 0 && v19 >= 0)\n
    {\n
        v146 = v19;\n
        if (v146 < 0)\n
            v146 = *(&(&v21)[8 * v19])(a0, a1);\n
    }\n
    return v146;\n
}\n
", "4615220:sub_466c34": null, "4615232:cgc_process_llamaforgeability": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaforgeability(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x370]\n
    unsigned int v1;  // [bp-0x36c]\n
    struct_1 *v2;  // [bp-0x368]\n
    char v3;  // [bp-0x359]\n
    struct_1 *v4;  // [bp-0x358]\n
    char v5;  // [bp-0x349]\n
    struct_1 *v6;  // [bp-0x348]\n
    char v7;  // [bp-0x339]\n
    struct_1 *v8;  // [bp-0x338]\n
    char v9;  // [bp-0x329]\n
    struct_1 *v10;  // [bp-0x328]\n
    char v11;  // [bp-0x319]\n
    struct_1 *v12;  // [bp-0x318]\n
    unsigned int v13;  // [bp-0x30c]\n
    struct_1 *v14;  // [bp-0x308]\n
    struct_1 *v15;  // [bp-0x300]\n
    struct_1 *v16;  // [bp-0x2f8]\n
    unsigned int v17;  // [bp-0x2f0]\n
    unsigned int v18;  // [bp-0x2ec]\n
    char v19;  // [bp-0x2e8]\n
    char v20;  // [bp-0x2ce]\n
    char *v21;  // [bp-0x2c8]\n
    unsigned short v22;  // [bp-0x2ba]\n
    unsigned int *v23;  // [bp-0x2b8]\n
    struct struct_0 **v24;  // [bp-0x2b0]\n
    char v25;  // [bp-0x2a8]\n
    char v26[8];  // [bp-0x288]\n
    unsigned int v27;  // [bp-0x280]\n
    unsigned int *v28;  // [bp-0x278]\n
    struct struct_0 **v29;  // [bp-0x270]\n
    char v30;  // [bp-0x268]\n
    char *v31;  // [bp-0x250]\n
    unsigned int v32;  // [bp-0x248]\n
    unsigned int *v33;  // [bp-0x240]\n
    struct struct_0 **v34;  // [bp-0x238]\n
    unsigned long v35;  // [bp-0x230]\n
    char v36;  // [bp-0x221]\n
    unsigned int *v37;  // [bp-0x220]\n
    struct struct_0 **v38;  // [bp-0x218]\n
    unsigned long v39;  // [bp-0x210]\n
    char v40;  // [bp-0x201]\n
    unsigned int *v41;  // [bp-0x200]\n
    struct struct_0 **v42;  // [bp-0x1f8]\n
    char *v43;  // [bp-0x1f0]\n
    unsigned int v44;  // [bp-0x1e4]\n
    unsigned int *v45;  // [bp-0x1e0]\n
    struct struct_0 **v46;  // [bp-0x1d8]\n
    char v47;  // [bp-0x1cd]\n
    char v48;  // [bp-0x1c9]\n
    unsigned int *v49;  // [bp-0x1c8]\n
    struct struct_0 **v50;  // [bp-0x1c0]\n
    char v51;  // [bp-0x1b8]\n
    unsigned int v52;  // [bp-0x1a0]\n
    unsigned int *v53;  // [bp-0x198]\n
    struct struct_0 **v54;  // [bp-0x190]\n
    unsigned long v55;  // [bp-0x188]\n
    unsigned short v56;  // [bp-0x17a]\n
    unsigned int *v57;  // [bp-0x178]\n
    struct struct_0 **v58;  // [bp-0x170]\n
    unsigned long v59;  // [bp-0x168]\n
    unsigned short v60;  // [bp-0x15a]\n
    unsigned int *v61;  // [bp-0x158]\n
    struct struct_0 **v62;  // [bp-0x150]\n
    unsigned long v63;  // [bp-0x148]\n
    unsigned short v64;  // [bp-0x13a]\n
    unsigned int *v65;  // [bp-0x138]\n
    struct struct_0 **v66;  // [bp-0x130]\n
    char v67;  // [bp-0x124]\n
    char v68[4];  // [bp-0x118]\n
    unsigned int v69;  // [bp-0x10c]\n
    unsigned int *v70;  // [bp-0x108]\n
    struct struct_0 **v71;  // [bp-0x100]\n
    char v72;  // [bp-0xf4]\n
    char v73[4];  // [bp-0xe8]\n
    unsigned int v74;  // [bp-0xdc]\n
    unsigned int *v75;  // [bp-0xd8]\n
    struct struct_0 **v76;  // [bp-0xd0]\n
    char *v77;  // [bp-0xc8]\n
    unsigned int v78;  // [bp-0xbc]\n
    unsigned int *v79;  // [bp-0xb8]\n
    struct struct_0 **v80;  // [bp-0xb0]\n
    char *v81;  // [bp-0xa8]\n
    unsigned int v82;  // [bp-0x9c]\n
    unsigned int *v83;  // [bp-0x98]\n
    struct struct_0 **v84;  // [bp-0x90]\n
    char v85;  // [bp-0x88]\n
    unsigned int v86;  // [bp-0x70]\n
    unsigned int *v87;  // [bp-0x68]\n
    struct struct_0 **v88;  // [bp-0x60]\n
    char v89;  // [bp-0x58]\n
    unsigned int v90;  // [bp-0x40]\n
    unsigned int *v91;  // [bp-0x38]\n
    struct struct_0 **v92;  // [bp-0x30]\n
    unsigned long v93;  // [bp-0x28]\n
    char v94;  // [bp-0x19]\n
    unsigned int *v95;  // [bp-0x18]\n
    struct struct_0 **v96;  // [bp-0x10]\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    unsigned int *v104;  // rax\n
    struct struct_0 **v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_0 **v107;  // rax\n
    struct struct_0 **v109;  // rax\n
    unsigned int *v111;  // rax\n
    unsigned int *v112;  // rax\n
    struct struct_0 **v113;  // rax\n
    unsigned int *v114;  // rax\n
    struct struct_0 **v115;  // rax\n
    unsigned int *v116;  // rax\n
    struct struct_0 **v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    unsigned int *v120;  // rax\n
    struct struct_0 **v121;  // rax\n
    unsigned int *v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    unsigned int *v124;  // rax\n
    struct struct_0 **v125;  // rax\n
    unsigned int *v126;  // rax\n
    struct struct_0 **v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    unsigned int *v130;  // rax\n
    struct struct_0 **v131;  // rax\n
    unsigned int *v132;  // rax\n
    struct struct_0 **v133;  // rax\n
    unsigned int *v134;  // rax\n
    struct struct_0 **v135;  // rax\n
    struct struct_0 **v137;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v141;  // rax\n
    unsigned int *v143;  // rax\n
    unsigned int *v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    unsigned int *v146;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v148;  // rax\n
    struct struct_0 **v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    unsigned int *v152;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamaforgeability===\", 23) < 0)\n
        cgc__terminate(1);\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(&*(v66));\n
    v98 = v65;\n
    *(v98) = *(v98) - 2;\n
    v99 = v66;\n
    *(v99) = *(v99) + 2;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_466d8c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_466d8c:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v100 = v65;\n
    *(v100) = *(v100) - v64;\n
    v101 = v66;\n
    *(v101) = &(*(v101))[v64];\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 4);\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(v50)->field_0;\n
    cgc_uint2str(&v47, 4, v48);\n
    v16 = &v47;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v102 = v49;\n
    *(v102) = *(v102) - 1;\n
    v103 = v50;\n
    *(v103) = *(v103) + 1;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v90) = *(&*(v92));\n
    cgc_uint2str(&v89, 21, *(&v90));\n
    v15 = &v89;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v104 = v91;\n
    *(v104) = *(v104) - 8;\n
    v105 = v92;\n
    *(v105) = *(v105) + 8;\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v86) = *(&*(v88));\n
    cgc_uint2str(&v85, 21, *(&v86));\n
    v14 = &v85;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v106 = v87;\n
    *(v106) = *(v106) - 8;\n
    v107 = v88;\n
    *(v107) = *(v107) + 8;\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v83) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v83);\n
    v82 = v13;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v81, \"Str: \");\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v109 = v84;\n
    *(v109) = &(*(v109))[4 + cgc_strlen(v81)];\n
    v111 = v83;\n
    *(v111) = *(v111) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v52) = *(&*(v54));\n
    cgc_uint2str(&v51, 21, *(&v52));\n
    v12 = &v51;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v112 = v53;\n
    *(v112) = *(v112) - 8;\n
    v113 = v54;\n
    *(v113) = *(v113) + 8;\n
    v34 = a0;\n
    v33 = a1;\n
    v31 = &*(v34)->field_0;\n
    memset(&v30, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if (*(v31) << 56)\n
    {\n
        v11 = 0;\n
        if (v31[1] << 48)\n
        {\n
            v11 = 0;\n
            if (v31[2] << 40)\n
            {\n
                v11 = 0;\n
                if (v31[3] << 32)\n
                {\n
                    v11 = 0;\n
                    if ((v31[4] << 24))\n
                    {\n
                        v11 = 0;\n
                        if ((v31[5] << 16))\n
                        {\n
                            v11 = 0;\n
                            if ((v31[6] << 8))\n
                                v11 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v32) = v11 & 1;\n
    cgc_uint2str(&v30, 21, *(&v32));\n
    v10 = &v30;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v114 = v33;\n
    *(v114) = *(v114) - 8;\n
    v115 = v34;\n
    *(v115) = *(v115) + 8;\n
    v96 = a0;\n
    v95 = a1;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(v96)->field_0;\n
    v116 = v95;\n
    *(v116) = *(v116) - 1;\n
    v117 = v96;\n
    *(v117) = *(v117) + 1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_467715;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_467715:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v118 = v96;\n
    *(v118) = &(*(v118))[v94];\n
    v119 = v95;\n
    *(v119) = *(v119) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(&*(v62));\n
    v120 = v61;\n
    *(v120) = *(v120) - 2;\n
    v121 = v62;\n
    *(v121) = *(v121) + 2;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4678c4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4678c4:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v122 = v61;\n
    *(v122) = *(v122) - v60;\n
    v123 = v62;\n
    *(v123) = &(*(v123))[v60];\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v24 = a0;\n
    v23 = a1;\n
    v21 = &*(v24)->field_0;\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((*(v21) << 8))\n
        v9 = v21[1];\n
    v22 = v9 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v8 = &v20;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v124 = v23;\n
    *(v124) = *(v124) - 2;\n
    v125 = v24;\n
    *(v125) = *(v125) + 2;\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = *(v42)->field_0;\n
    v126 = v41;\n
    *(v126) = *(v126) - 1;\n
    v127 = v42;\n
    *(v127) = *(v127) + 1;\n
    if (v40 <= *(v41) && !(!v40))\n
        goto LABEL_467bda;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_467bda:\n
    v39 = cgc_calloc(v40);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v39, *(v42), v40);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v128 = v42;\n
    *(v128) = &(*(v128))[v40];\n
    v129 = v41;\n
    *(v129) = *(v129) - v40;\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    v76 = a0;\n
    v75 = a1;\n
    *(&v73) = *(v76);\n
    memset(&v72, 0, 12);\n
    if (*(v75) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((v73[0] << 24))\n
    {\n
        v7 = 0;\n
        if ((v73[1] << 16))\n
        {\n
            v7 = 0;\n
            if ((v73[2] << 8))\n
                v7 = v73[3];\n
        }\n
    }\n
    v74 = v7 & 1;\n
    cgc_uint2str(&v72, 12, v74);\n
    v6 = &v72;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v130 = v75;\n
    *(v130) = *(v130) - 4;\n
    v131 = v76;\n
    *(v131) = *(v131) + 4;\n
    v71 = a0;\n
    v70 = a1;\n
    *(&v68) = *(v71);\n
    memset(&v67, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v68[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v68[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v68[2] << 8))\n
                v5 = v68[3];\n
        }\n
    }\n
    v69 = v5 & 1;\n
    cgc_uint2str(&v67, 12, v69);\n
    v4 = &v67;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v132 = v70;\n
    *(v132) = *(v132) - 4;\n
    v133 = v71;\n
    *(v133) = *(v133) + 4;\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26[0]) = *(v29);\n
    memset(&v25, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v26[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v26[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v26[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v26[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v26[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v26[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v26[6] << 8))\n
                                v3 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v27) = v3 & 1;\n
    cgc_uint2str(&v25, 21, *(&v27));\n
    v2 = &v25;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v134 = v28;\n
    *(v134) = *(v134) - 8;\n
    v135 = v29;\n
    *(v135) = *(v135) + 8;\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v79) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v79);\n
    v78 = v1;\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = cgc_calloc(134);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v77, \"Str: \");\n
    cgc_strncpy(v77 + 5, *(v80), v78);\n
    v137 = v80;\n
    *(v137) = &(*(v137))[4 + cgc_strlen(v77)];\n
    v139 = v79;\n
    *(v139) = *(v139) - (cgc_strlen(v77) + -4);\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v46 = a0;\n
    v45 = a1;\n
    if (*(v45) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v45) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v45);\n
    v44 = v0;\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = cgc_calloc(134);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v43, \"Str: \");\n
    cgc_strncpy(v43 + 5, *(v46), v44);\n
    v141 = v46;\n
    *(v141) = &(*(v141))[4 + cgc_strlen(v43)];\n
    v143 = v45;\n
    *(v143) = *(v143) - (cgc_strlen(v43) + -4);\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v58 = a0;\n
    v57 = a1;\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(&*(v58));\n
    v144 = v57;\n
    *(v144) = *(v144) - 2;\n
    v145 = v58;\n
    *(v145) = *(v145) + 2;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_4686ae;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4686ae:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v146 = v57;\n
    *(v146) = *(v146) - v56;\n
    v147 = v58;\n
    *(v147) = &(*(v147))[v56];\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v148 = v37;\n
    *(v148) = *(v148) - 1;\n
    v149 = v38;\n
    *(v149) = *(v149) + 1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_46887c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46887c:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v150 = v38;\n
    *(v150) = &(*(v150))[v36];\n
    v151 = v37;\n
    *(v151) = *(v151) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v152 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v152 = v17;\n
        if (v152 < 0)\n
            v152 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v152;\n
}\n
", "4622806:sub_4689d6": null, "4622816:cgc_process_llamaunderlease": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaunderlease(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x98]\n
    struct_0 *v1;  // [bp-0x90]\n
    unsigned int v2;  // [bp-0x88]\n
    unsigned int v3;  // [bp-0x84]\n
    char v4;  // [bp-0x80]\n
    char v5;  // [bp-0x68]\n
    unsigned int v6;  // [bp-0x50]\n
    unsigned int *v7;  // [bp-0x48]\n
    struct struct_1 **v8;  // [bp-0x40]\n
    char v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int *v11;  // [bp-0x18]\n
    struct struct_1 **v12;  // [bp-0x10]\n
    unsigned int *v14;  // rax\n
    struct struct_1 **v15;  // rax\n
    unsigned int *v16;  // rax\n
    struct struct_1 **v17;  // rax\n
    unsigned int *v18;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = cgc__cookie;\n
    v2 = -1;\n
    if (cgc_sendline(1, \"===llamaunderlease===\", 21) < 0)\n
        cgc__terminate(1);\n
    v12 = a0;\n
    v11 = a1;\n
    memset(&v9, 0, 21);\n
    if (*(v11) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v10) = *(v12)->field_0;\n
    cgc_uint2str(&v9, 21, *(&v10));\n
    v1 = &v9;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v9)) < 0)\n
        cgc__terminate(1);\n
    v14 = v11;\n
    *(v14) = *(v14) - 8;\n
    v15 = v12;\n
    *(v15) = *(v15) + 1;\n
    v8 = a0;\n
    v7 = a1;\n
    memset(&v5, 0, 21);\n
    if (*(v7) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v6) = *(v8)->field_0;\n
    cgc_uint2str(&v5, 21, *(&v6));\n
    v0 = &v5;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v5)) < 0)\n
        cgc__terminate(1);\n
    v16 = v7;\n
    *(v16) = *(v16) - 8;\n
    v17 = v8;\n
    *(v17) = *(v17) + 1;\n
    v3 ^= cgc__cookie;\n
    if (v3)\n
        cgc___stack_cookie_fail();\n
    v18 = a1;\n
    if (*(a1) > 0 && v2 >= 0)\n
    {\n
        v18 = v2;\n
        if (v18 < 0)\n
            v18 = *(&(&v4)[8 * v2])(a0, a1);\n
    }\n
    return v18;\n
}\n
", "4623435:sub_468c4b": null, "4623440:cgc_process_llamasupersympathy": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasupersympathy(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x3b0]\n
    struct_1 *v1;  // [bp-0x3a8]\n
    char v2;  // [bp-0x399]\n
    struct_1 *v3;  // [bp-0x398]\n
    char v4;  // [bp-0x389]\n
    struct_1 *v5;  // [bp-0x388]\n
    struct_1 *v6;  // [bp-0x380]\n
    char v7;  // [bp-0x371]\n
    struct_1 *v8;  // [bp-0x370]\n
    char v9;  // [bp-0x361]\n
    struct_1 *v10;  // [bp-0x360]\n
    struct_1 *v11;  // [bp-0x358]\n
    struct_1 *v12;  // [bp-0x350]\n
    struct_1 *v13;  // [bp-0x348]\n
    char v14;  // [bp-0x339]\n
    struct_1 *v15;  // [bp-0x338]\n
    struct_1 *v16;  // [bp-0x330]\n
    char v17;  // [bp-0x321]\n
    struct_1 *v18;  // [bp-0x320]\n
    struct_1 *v19;  // [bp-0x318]\n
    char v20;  // [bp-0x309]\n
    struct_1 *v21;  // [bp-0x308]\n
    char v22;  // [bp-0x2f9]\n
    unsigned int v23;  // [bp-0x2f8]\n
    unsigned int v24;  // [bp-0x2f4]\n
    char v25;  // [bp-0x2f0]\n
    char v26;  // [bp-0x2d6]\n
    char v27[2];  // [bp-0x2d0]\n
    unsigned short v28;  // [bp-0x2c2]\n
    unsigned int *v29;  // [bp-0x2c0]\n
    struct struct_0 **v30;  // [bp-0x2b8]\n
    char v31;  // [bp-0x2ae]\n
    char v32[8];  // [bp-0x2a8]\n
    unsigned short v33;  // [bp-0x29a]\n
    unsigned int *v34;  // [bp-0x298]\n
    struct struct_0 **v35;  // [bp-0x290]\n
    char v36;  // [bp-0x288]\n
    char v37[8];  // [bp-0x268]\n
    unsigned int v38;  // [bp-0x260]\n
    unsigned int *v39;  // [bp-0x258]\n
    struct struct_0 **v40;  // [bp-0x250]\n
    char v41;  // [bp-0x248]\n
    char v42[8];  // [bp-0x228]\n
    unsigned int v43;  // [bp-0x220]\n
    unsigned int *v44;  // [bp-0x218]\n
    struct struct_0 **v45;  // [bp-0x210]\n
    char v46;  // [bp-0x208]\n
    unsigned short v47;  // [bp-0x202]\n
    unsigned int *v48;  // [bp-0x200]\n
    struct struct_0 **v49;  // [bp-0x1f8]\n
    char v50;  // [bp-0x1f0]\n
    unsigned short v51;  // [bp-0x1ea]\n
    unsigned int *v52;  // [bp-0x1e8]\n
    struct struct_0 **v53;  // [bp-0x1e0]\n
    char v54;  // [bp-0x1d8]\n
    unsigned short v55;  // [bp-0x1d2]\n
    unsigned int *v56;  // [bp-0x1d0]\n
    struct struct_0 **v57;  // [bp-0x1c8]\n
    char v58;  // [bp-0x1bd]\n
    char v59;  // [bp-0x1b9]\n
    unsigned int *v60;  // [bp-0x1b8]\n
    struct struct_0 **v61;  // [bp-0x1b0]\n
    char v62;  // [bp-0x1a8]\n
    unsigned int v63;  // [bp-0x190]\n
    unsigned int *v64;  // [bp-0x188]\n
    struct struct_0 **v65;  // [bp-0x180]\n
    char v66;  // [bp-0x178]\n
    unsigned int v67;  // [bp-0x160]\n
    unsigned int *v68;  // [bp-0x158]\n
    struct struct_0 **v69;  // [bp-0x150]\n
    char v70;  // [bp-0x148]\n
    unsigned int v71;  // [bp-0x13c]\n
    unsigned int *v72;  // [bp-0x138]\n
    struct struct_0 **v73;  // [bp-0x130]\n
    unsigned long v74;  // [bp-0x128]\n
    unsigned short v75;  // [bp-0x11a]\n
    unsigned int *v76;  // [bp-0x118]\n
    struct struct_0 **v77;  // [bp-0x110]\n
    unsigned long v78;  // [bp-0x108]\n
    unsigned short v79;  // [bp-0xfa]\n
    unsigned int *v80;  // [bp-0xf8]\n
    struct struct_0 **v81;  // [bp-0xf0]\n
    char v82;  // [bp-0xe4]\n
    char v83[4];  // [bp-0xd8]\n
    unsigned int v84;  // [bp-0xcc]\n
    unsigned int *v85;  // [bp-0xc8]\n
    struct struct_0 **v86;  // [bp-0xc0]\n
    char v87;  // [bp-0xb4]\n
    char v88[4];  // [bp-0xa8]\n
    unsigned int v89;  // [bp-0x9c]\n
    unsigned int *v90;  // [bp-0x98]\n
    struct struct_0 **v91;  // [bp-0x90]\n
    char v92;  // [bp-0x84]\n
    char v93[8];  // [bp-0x78]\n
    unsigned int v94;  // [bp-0x6c]\n
    unsigned int *v95;  // [bp-0x68]\n
    struct struct_0 **v96;  // [bp-0x60]\n
    char v97;  // [bp-0x54]\n
    char v98[8];  // [bp-0x48]\n
    unsigned int v99;  // [bp-0x3c]\n
    unsigned int *v100;  // [bp-0x38]\n
    struct struct_0 **v101;  // [bp-0x30]\n
    unsigned long v102;  // [bp-0x28]\n
    char v103;  // [bp-0x19]\n
    unsigned int *v104;  // [bp-0x18]\n
    struct struct_0 **v105;  // [bp-0x10]\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v113;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    struct struct_0 **v131;  // rax\n
    unsigned int *v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax, Other Possible Types: unsigned long\n
\n
    v24 = cgc__cookie;\n
    v23 = -1;\n
    if (cgc_sendline(1, \"===llamasupersympathy===\", 24) < 0)\n
        cgc__terminate(1);\n
    v35 = a0;\n
    v34 = a1;\n
    *(&v32[0]) = *(v35);\n
    memset(&v31, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v32[0] << 8))\n
        v22 = v32[1];\n
    v33 = v22 & 1;\n
    cgc_uint2str(&v31, 6, v33);\n
    v21 = &v31;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v107 = v34;\n
    *(v107) = *(v107) - 2;\n
    v108 = v35;\n
    *(v108) = *(v108) + 2;\n
    v101 = a0;\n
    v100 = a1;\n
    *(&v98[0]) = *(v101);\n
    memset(&v97, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if ((v98[0] << 24))\n
    {\n
        v20 = 0;\n
        if ((v98[1] << 16))\n
        {\n
            v20 = 0;\n
            if ((v98[2] << 8))\n
                v20 = v98[3];\n
        }\n
    }\n
    v99 = v20 & 1;\n
    cgc_uint2str(&v97, 12, v99);\n
    v19 = &v97;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v109 = v100;\n
    *(v109) = *(v109) - 4;\n
    v110 = v101;\n
    *(v110) = *(v110) + 4;\n
    v57 = a0;\n
    v56 = a1;\n
    memset(&v54, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(&*(v57));\n
    cgc_uint2str(&v54, 6, v55);\n
    v18 = &v54;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v111 = v56;\n
    *(v111) = *(v111) - 2;\n
    v112 = v57;\n
    *(v112) = *(v112) + 2;\n
    v96 = a0;\n
    v95 = a1;\n
    *(&v93[0]) = *(v96);\n
    memset(&v92, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v93[0] << 24))\n
    {\n
        v17 = 0;\n
        if ((v93[1] << 16))\n
        {\n
            v17 = 0;\n
            if ((v93[2] << 8))\n
                v17 = v93[3];\n
        }\n
    }\n
    v94 = v17 & 1;\n
    cgc_uint2str(&v92, 12, v94);\n
    v16 = &v92;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v113 = v95;\n
    *(v113) = *(v113) - 4;\n
    v114 = v96;\n
    *(v114) = *(v114) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    v115 = v80;\n
    *(v115) = *(v115) - 2;\n
    v116 = v81;\n
    *(v116) = *(v116) + 2;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_46928a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46928a:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v117 = v80;\n
    *(v117) = *(v117) - v79;\n
    v118 = v81;\n
    *(v118) = &(*(v118))[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(&*(v53));\n
    cgc_uint2str(&v50, 6, v51);\n
    v15 = &v50;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v119 = v52;\n
    *(v119) = *(v119) - 2;\n
    v120 = v53;\n
    *(v120) = *(v120) + 2;\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42[0]) = *(v45);\n
    memset(&v41, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (v42[0] << 56)\n
    {\n
        v14 = 0;\n
        if (v42[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v42[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v42[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v42[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v42[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v42[6] << 8))\n
                                v14 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v43) = v14 & 1;\n
    cgc_uint2str(&v41, 21, *(&v43));\n
    v13 = &v41;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v121 = v44;\n
    *(v121) = *(v121) - 8;\n
    v122 = v45;\n
    *(v122) = *(v122) + 8;\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 12, v71);\n
    v12 = &v70;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v123 = v72;\n
    *(v123) = *(v123) - 4;\n
    v124 = v73;\n
    *(v124) = *(v124) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    memset(&v58, 0, 4);\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(v61)->field_0;\n
    cgc_uint2str(&v58, 4, v59);\n
    v11 = &v58;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v125 = v60;\n
    *(v125) = *(v125) - 1;\n
    v126 = v61;\n
    *(v126) = *(v126) + 1;\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v67) = *(&*(v69));\n
    cgc_uint2str(&v66, 21, *(&v67));\n
    v10 = &v66;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v127 = v68;\n
    *(v127) = *(v127) - 8;\n
    v128 = v69;\n
    *(v128) = *(v128) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(v105)->field_0;\n
    v129 = v104;\n
    *(v129) = *(v129) - 1;\n
    v130 = v105;\n
    *(v130) = *(v130) + 1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_469a61;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_469a61:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v131 = v105;\n
    *(v131) = &(*(v131))[v103];\n
    v132 = v104;\n
    *(v132) = *(v132) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37[0]) = *(v40);\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v37[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v37[6] << 8))\n
                                v9 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v9 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v8 = &v36;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v133 = v39;\n
    *(v133) = *(v133) - 8;\n
    v134 = v40;\n
    *(v134) = *(v134) + 8;\n
    v91 = a0;\n
    v90 = a1;\n
    *(&v88) = *(v91);\n
    memset(&v87, 0, 12);\n
    if (*(v90) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((v88[0] << 24))\n
    {\n
        v7 = 0;\n
        if ((v88[1] << 16))\n
        {\n
            v7 = 0;\n
            if ((v88[2] << 8))\n
                v7 = v88[3];\n
        }\n
    }\n
    v89 = v7 & 1;\n
    cgc_uint2str(&v87, 12, v89);\n
    v6 = &v87;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v135 = v90;\n
    *(v135) = *(v135) - 4;\n
    v136 = v91;\n
    *(v136) = *(v136) + 4;\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(&*(v49));\n
    cgc_uint2str(&v46, 6, v47);\n
    v5 = &v46;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v137 = v48;\n
    *(v137) = *(v137) - 2;\n
    v138 = v49;\n
    *(v138) = *(v138) + 2;\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    v139 = v76;\n
    *(v139) = *(v139) - 2;\n
    v140 = v77;\n
    *(v140) = *(v140) + 2;\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_46a0ae;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46a0ae:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v141 = v76;\n
    *(v141) = *(v141) - v75;\n
    v142 = v77;\n
    *(v142) = &(*(v142))[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v86 = a0;\n
    v85 = a1;\n
    *(&v83) = *(v86);\n
    memset(&v82, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v83[0] << 24))\n
    {\n
        v4 = 0;\n
        if ((v83[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v83[2] << 8))\n
                v4 = v83[3];\n
        }\n
    }\n
    v84 = v4 & 1;\n
    cgc_uint2str(&v82, 12, v84);\n
    v3 = &v82;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v143 = v85;\n
    *(v143) = *(v143) - 4;\n
    v144 = v86;\n
    *(v144) = *(v144) + 4;\n
    v30 = a0;\n
    v29 = a1;\n
    *(&v27) = *(v30);\n
    memset(&v26, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v27[0] << 8))\n
        v2 = v27[1];\n
    v28 = v2 & 1;\n
    cgc_uint2str(&v26, 6, v28);\n
    v1 = &v26;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v145 = v29;\n
    *(v145) = *(v145) - 2;\n
    v146 = v30;\n
    *(v146) = *(v146) + 2;\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v63) = *(&*(v65));\n
    cgc_uint2str(&v62, 21, *(&v63));\n
    v0 = &v62;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v147 = v64;\n
    *(v147) = *(v147) - 8;\n
    v148 = v65;\n
    *(v148) = *(v148) + 8;\n
    v24 ^= cgc__cookie;\n
    if (v24)\n
        cgc___stack_cookie_fail();\n
    v149 = a1;\n
    if (*(a1) > 0 && v23 >= 0)\n
    {\n
        v149 = v23;\n
        if (v149 < 0)\n
            v149 = *(&(&v25)[8 * v23])(a0, a1);\n
    }\n
    return v149;\n
}\n
", "4629982:sub_46a5de": null, "4629984:cgc_process_llamamegasporic": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamamegasporic(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x3dc]\n
    struct_1 *v1;  // [bp-0x3d8]\n
    struct_1 *v2;  // [bp-0x3d0]\n
    struct_1 *v3;  // [bp-0x3c8]\n
    struct_1 *v4;  // [bp-0x3c0]\n
    unsigned int v5;  // [bp-0x3b4]\n
    struct_1 *v6;  // [bp-0x3b0]\n
    struct_1 *v7;  // [bp-0x3a8]\n
    struct_1 *v8;  // [bp-0x3a0]\n
    struct_1 *v9;  // [bp-0x398]\n
    struct_1 *v10;  // [bp-0x390]\n
    char v11;  // [bp-0x381]\n
    struct_1 *v12;  // [bp-0x380]\n
    unsigned int v13;  // [bp-0x378]\n
    unsigned int v14;  // [bp-0x374]\n
    struct_1 *v15;  // [bp-0x370]\n
    unsigned int v16;  // [bp-0x364]\n
    struct_1 *v17;  // [bp-0x360]\n
    struct_1 *v18;  // [bp-0x358]\n
    struct_1 *v19;  // [bp-0x350]\n
    unsigned int v20;  // [bp-0x348]\n
    unsigned int v21;  // [bp-0x344]\n
    char v22;  // [bp-0x340]\n
    char v23;  // [bp-0x326]\n
    char *v24;  // [bp-0x320]\n
    unsigned short v25;  // [bp-0x312]\n
    unsigned int *v26;  // [bp-0x310]\n
    struct struct_0 **v27;  // [bp-0x308]\n
    unsigned long v28;  // [bp-0x300]\n
    char v29;  // [bp-0x2f1]\n
    unsigned int *v30;  // [bp-0x2f0]\n
    struct struct_0 **v31;  // [bp-0x2e8]\n
    unsigned long v32;  // [bp-0x2e0]\n
    char v33;  // [bp-0x2d1]\n
    unsigned int *v34;  // [bp-0x2d0]\n
    struct struct_0 **v35;  // [bp-0x2c8]\n
    unsigned long v36;  // [bp-0x2c0]\n
    char v37;  // [bp-0x2b1]\n
    unsigned int *v38;  // [bp-0x2b0]\n
    struct struct_0 **v39;  // [bp-0x2a8]\n
    char *v40;  // [bp-0x2a0]\n
    unsigned int v41;  // [bp-0x294]\n
    unsigned int *v42;  // [bp-0x290]\n
    struct struct_0 **v43;  // [bp-0x288]\n
    char *v44;  // [bp-0x280]\n
    unsigned int v45;  // [bp-0x274]\n
    unsigned int *v46;  // [bp-0x270]\n
    struct struct_0 **v47;  // [bp-0x268]\n
    char v48;  // [bp-0x260]\n
    unsigned short v49;  // [bp-0x25a]\n
    unsigned int *v50;  // [bp-0x258]\n
    struct struct_0 **v51;  // [bp-0x250]\n
    char v52;  // [bp-0x245]\n
    char v53;  // [bp-0x241]\n
    unsigned int *v54;  // [bp-0x240]\n
    struct struct_0 **v55;  // [bp-0x238]\n
    char v56;  // [bp-0x22d]\n
    char v57;  // [bp-0x229]\n
    unsigned int *v58;  // [bp-0x228]\n
    struct struct_0 **v59;  // [bp-0x220]\n
    char v60;  // [bp-0x218]\n
    unsigned int v61;  // [bp-0x200]\n
    unsigned int *v62;  // [bp-0x1f8]\n
    struct struct_0 **v63;  // [bp-0x1f0]\n
    char v64;  // [bp-0x1e8]\n
    unsigned int v65;  // [bp-0x1d0]\n
    unsigned int *v66;  // [bp-0x1c8]\n
    struct struct_0 **v67;  // [bp-0x1c0]\n
    char v68;  // [bp-0x1b8]\n
    unsigned int v69;  // [bp-0x1ac]\n
    unsigned int *v70;  // [bp-0x1a8]\n
    struct struct_0 **v71;  // [bp-0x1a0]\n
    char v72;  // [bp-0x198]\n
    unsigned int v73;  // [bp-0x18c]\n
    unsigned int *v74;  // [bp-0x188]\n
    struct struct_0 **v75;  // [bp-0x180]\n
    char v76;  // [bp-0x178]\n
    unsigned int v77;  // [bp-0x16c]\n
    unsigned int *v78;  // [bp-0x168]\n
    struct struct_0 **v79;  // [bp-0x160]\n
    char v80;  // [bp-0x158]\n
    unsigned int v81;  // [bp-0x14c]\n
    unsigned int *v82;  // [bp-0x148]\n
    struct struct_0 **v83;  // [bp-0x140]\n
    char v84;  // [bp-0x138]\n
    unsigned int v85;  // [bp-0x12c]\n
    unsigned int *v86;  // [bp-0x128]\n
    struct struct_0 **v87;  // [bp-0x120]\n
    unsigned long v88;  // [bp-0x118]\n
    unsigned short v89;  // [bp-0x10a]\n
    unsigned int *v90;  // [bp-0x108]\n
    struct struct_0 **v91;  // [bp-0x100]\n
    char *v92;  // [bp-0xf8]\n
    unsigned int v93;  // [bp-0xec]\n
    unsigned int *v94;  // [bp-0xe8]\n
    struct struct_0 **v95;  // [bp-0xe0]\n
    char *v96;  // [bp-0xd8]\n
    unsigned int v97;  // [bp-0xcc]\n
    unsigned int *v98;  // [bp-0xc8]\n
    struct struct_0 **v99;  // [bp-0xc0]\n
    char *v100;  // [bp-0xb8]\n
    unsigned int v101;  // [bp-0xac]\n
    unsigned int *v102;  // [bp-0xa8]\n
    struct struct_0 **v103;  // [bp-0xa0]\n
    char v104;  // [bp-0x98]\n
    unsigned int v105;  // [bp-0x80]\n
    unsigned int *v106;  // [bp-0x78]\n
    struct struct_0 **v107;  // [bp-0x70]\n
    char v108;  // [bp-0x68]\n
    unsigned int v109;  // [bp-0x50]\n
    unsigned int *v110;  // [bp-0x48]\n
    struct struct_0 **v111;  // [bp-0x40]\n
    char v112;  // [bp-0x38]\n
    unsigned int v113;  // [bp-0x20]\n
    unsigned int *v114;  // [bp-0x18]\n
    struct struct_0 **v115;  // [bp-0x10]\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v136;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    unsigned int *v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    struct struct_0 **v149;  // rax\n
    unsigned int *v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_0 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    struct struct_0 **v166;  // rax\n
    unsigned int *v168;  // rax\n
    unsigned int *v169;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v171;  // rax\n
    struct struct_0 **v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_0 **v176;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v180;  // rax\n
    unsigned int *v181;  // rax, Other Possible Types: unsigned long\n
\n
    v21 = cgc__cookie;\n
    v20 = -1;\n
    if (cgc_sendline(1, \"===llamamegasporic===\", 21) < 0)\n
        cgc__terminate(1);\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 21);\n
    if (*(v114) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v113) = *(&*(v115));\n
    cgc_uint2str(&v112, 21, *(&v113));\n
    v19 = &v112;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v117 = v114;\n
    *(v117) = *(v117) - 8;\n
    v118 = v115;\n
    *(v118) = *(v118) + 8;\n
    v91 = a0;\n
    v90 = a1;\n
    if (*(v90) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = *(&*(v91));\n
    v119 = v90;\n
    *(v119) = *(v119) - 2;\n
    v120 = v91;\n
    *(v120) = *(v120) + 2;\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_46a80e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46a80e:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v121 = v90;\n
    *(v121) = *(v121) - v89;\n
    v122 = v91;\n
    *(v122) = &(*(v122))[v89];\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 12);\n
    if (*(v86) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = *(&*(v87));\n
    cgc_uint2str(&v84, 12, v85);\n
    v18 = &v84;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v123 = v86;\n
    *(v123) = *(v123) - 4;\n
    v124 = v87;\n
    *(v124) = *(v124) + 4;\n
    v83 = a0;\n
    v82 = a1;\n
    memset(&v80, 0, 12);\n
    if (*(v82) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = *(&*(v83));\n
    cgc_uint2str(&v80, 12, v81);\n
    v17 = &v80;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v80)) < 0)\n
        cgc__terminate(1);\n
    v125 = v82;\n
    *(v125) = *(v125) - 4;\n
    v126 = v83;\n
    *(v126) = *(v126) + 4;\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v46) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v46);\n
    v45 = v16;\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = cgc_calloc(134);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v44, \"Str: \");\n
    cgc_strncpy(v44 + 5, *(v47), v45);\n
    v128 = v47;\n
    *(v128) = &(*(v128))[4 + cgc_strlen(v44)];\n
    v130 = v46;\n
    *(v130) = *(v130) - (cgc_strlen(v44) + -4);\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 4);\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(v59)->field_0;\n
    cgc_uint2str(&v56, 4, v57);\n
    v15 = &v56;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v131 = v58;\n
    *(v131) = *(v131) - 1;\n
    v132 = v59;\n
    *(v132) = *(v132) + 1;\n
    v103 = a0;\n
    v102 = a1;\n
    if (*(v102) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v102) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v102);\n
    v101 = v14;\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = cgc_calloc(134);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v100, \"Str: \");\n
    cgc_strncpy(v100 + 5, *(v103), v101);\n
    v134 = v103;\n
    *(v134) = &(*(v134))[4 + cgc_strlen(v100)];\n
    v136 = v102;\n
    *(v136) = *(v136) - (cgc_strlen(v100) + -4);\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v99 = a0;\n
    v98 = a1;\n
    if (*(v98) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v98) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v98);\n
    v97 = v13;\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = cgc_calloc(134);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v96, \"Str: \");\n
    cgc_strncpy(v96 + 5, *(v99), v97);\n
    v138 = v99;\n
    *(v138) = &(*(v138))[4 + cgc_strlen(v96)];\n
    v140 = v98;\n
    *(v140) = *(v140) - (cgc_strlen(v96) + -4);\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v51 = a0;\n
    v50 = a1;\n
    memset(&v48, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(&*(v51));\n
    cgc_uint2str(&v48, 6, v49);\n
    v12 = &v48;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v141 = v50;\n
    *(v141) = *(v141) - 2;\n
    v142 = v51;\n
    *(v142) = *(v142) + 2;\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(v39)->field_0;\n
    v143 = v38;\n
    *(v143) = *(v143) - 1;\n
    v144 = v39;\n
    *(v144) = *(v144) + 1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_46b3cf;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46b3cf:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v145 = v39;\n
    *(v145) = &(*(v145))[v37];\n
    v146 = v38;\n
    *(v146) = *(v146) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v35 = a0;\n
    v34 = a1;\n
    if (*(v34) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(v35)->field_0;\n
    v147 = v34;\n
    *(v147) = *(v147) - 1;\n
    v148 = v35;\n
    *(v148) = *(v148) + 1;\n
    if (v33 <= *(v34) && !(!v33))\n
        goto LABEL_46b59d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46b59d:\n
    v32 = cgc_calloc(v33);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v32, *(v35), v33);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v149 = v35;\n
    *(v149) = &(*(v149))[v33];\n
    v150 = v34;\n
    *(v150) = *(v150) - v33;\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    v27 = a0;\n
    v26 = a1;\n
    v24 = &*(v27)->field_0;\n
    memset(&v23, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if ((*(v24) << 8))\n
        v11 = v24[1];\n
    v25 = v11 & 1;\n
    cgc_uint2str(&v23, 6, v25);\n
    v10 = &v23;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v151 = v26;\n
    *(v151) = *(v151) - 2;\n
    v152 = v27;\n
    *(v152) = *(v152) + 2;\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v109) = *(&*(v111));\n
    cgc_uint2str(&v108, 21, *(&v109));\n
    v9 = &v108;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v153 = v110;\n
    *(v153) = *(v153) - 8;\n
    v154 = v111;\n
    *(v154) = *(v154) + 8;\n
    v31 = a0;\n
    v30 = a1;\n
    if (*(v30) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = *(v31)->field_0;\n
    v155 = v30;\n
    *(v155) = *(v155) - 1;\n
    v156 = v31;\n
    *(v156) = *(v156) + 1;\n
    if (v29 <= *(v30) && !(!v29))\n
        goto LABEL_46b995;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46b995:\n
    v28 = cgc_calloc(v29);\n
    if (!v28)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v28, *(v31), v29);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v157 = v31;\n
    *(v157) = &(*(v157))[v29];\n
    v158 = v30;\n
    *(v158) = *(v158) - v29;\n
    cgc_checkheap();\n
    cgc_free(v28);\n
    v79 = a0;\n
    v78 = a1;\n
    memset(&v76, 0, 12);\n
    if (*(v78) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(&*(v79));\n
    cgc_uint2str(&v76, 12, v77);\n
    v8 = &v76;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v76)) < 0)\n
        cgc__terminate(1);\n
    v159 = v78;\n
    *(v159) = *(v159) - 4;\n
    v160 = v79;\n
    *(v160) = *(v160) + 4;\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 21);\n
    if (*(v106) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v105) = *(&*(v107));\n
    cgc_uint2str(&v104, 21, *(&v105));\n
    v7 = &v104;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v161 = v106;\n
    *(v161) = *(v161) - 8;\n
    v162 = v107;\n
    *(v162) = *(v162) + 8;\n
    v67 = a0;\n
    v66 = a1;\n
    memset(&v64, 0, 21);\n
    if (*(v66) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v65) = *(&*(v67));\n
    cgc_uint2str(&v64, 21, *(&v65));\n
    v6 = &v64;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v163 = v66;\n
    *(v163) = *(v163) - 8;\n
    v164 = v67;\n
    *(v164) = *(v164) + 8;\n
    v95 = a0;\n
    v94 = a1;\n
    if (*(v94) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v94) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v94);\n
    v93 = v5;\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = cgc_calloc(134);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v92, \"Str: \");\n
    cgc_strncpy(v92 + 5, *(v95), v93);\n
    v166 = v95;\n
    *(v166) = &(*(v166))[4 + cgc_strlen(v92)];\n
    v168 = v94;\n
    *(v168) = *(v168) - (cgc_strlen(v92) + -4);\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 12);\n
    if (*(v74) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(&*(v75));\n
    cgc_uint2str(&v72, 12, v73);\n
    v4 = &v72;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v169 = v74;\n
    *(v169) = *(v169) - 4;\n
    v170 = v75;\n
    *(v170) = *(v170) + 4;\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 21);\n
    if (*(v62) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v61) = *(&*(v63));\n
    cgc_uint2str(&v60, 21, *(&v61));\n
    v3 = &v60;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v171 = v62;\n
    *(v171) = *(v171) - 8;\n
    v172 = v63;\n
    *(v172) = *(v172) + 8;\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(&*(v71));\n
    cgc_uint2str(&v68, 12, v69);\n
    v2 = &v68;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v173 = v70;\n
    *(v173) = *(v173) - 4;\n
    v174 = v71;\n
    *(v174) = *(v174) + 4;\n
    v55 = a0;\n
    v54 = a1;\n
    memset(&v52, 0, 4);\n
    if (*(v54) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = *(v55)->field_0;\n
    cgc_uint2str(&v52, 4, v53);\n
    v1 = &v52;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v175 = v54;\n
    *(v175) = *(v175) - 1;\n
    v176 = v55;\n
    *(v176) = *(v176) + 1;\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v42) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v42);\n
    v41 = v0;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v40, \"Str: \");\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v178 = v43;\n
    *(v178) = &(*(v178))[4 + cgc_strlen(v40)];\n
    v180 = v42;\n
    *(v180) = *(v180) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v21 ^= cgc__cookie;\n
    if (v21)\n
        cgc___stack_cookie_fail();\n
    v181 = a1;\n
    if (*(a1) > 0 && v20 >= 0)\n
    {\n
        v181 = v20;\n
        if (v181 < 0)\n
            v181 = *(&(&v22)[8 * v20])(a0, a1);\n
    }\n
    return v181;\n
}\n
", "4638190:sub_46c5ee": null, "4638192:cgc_process_llamaboll": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaboll(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x138]\n
    char v1;  // [bp-0x129]\n
    struct_1 *v2;  // [bp-0x128]\n
    struct_1 *v3;  // [bp-0x120]\n
    struct_1 *v4;  // [bp-0x118]\n
    unsigned int v5;  // [bp-0x110]\n
    unsigned int v6;  // [bp-0x10c]\n
    struct_1 *v7;  // [bp-0x108]\n
    unsigned int v8;  // [bp-0x100]\n
    unsigned int v9;  // [bp-0xfc]\n
    char v10;  // [bp-0xf8]\n
    char *v11;  // [bp-0xe0]\n
    unsigned int v12;  // [bp-0xd4]\n
    unsigned int *v13;  // [bp-0xd0]\n
    struct struct_0 **v14;  // [bp-0xc8]\n
    char *v15;  // [bp-0xc0]\n
    unsigned int v16;  // [bp-0xb4]\n
    unsigned int *v17;  // [bp-0xb0]\n
    struct struct_0 **v18;  // [bp-0xa8]\n
    char v19;  // [bp-0xa0]\n
    unsigned short v20;  // [bp-0x9a]\n
    unsigned int *v21;  // [bp-0x98]\n
    struct struct_0 **v22;  // [bp-0x90]\n
    char v23;  // [bp-0x88]\n
    unsigned short v24;  // [bp-0x82]\n
    unsigned int *v25;  // [bp-0x80]\n
    struct struct_0 **v26;  // [bp-0x78]\n
    char v27;  // [bp-0x6d]\n
    char v28;  // [bp-0x69]\n
    unsigned int *v29;  // [bp-0x68]\n
    struct struct_0 **v30;  // [bp-0x60]\n
    char v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x4c]\n
    unsigned int *v33;  // [bp-0x48]\n
    struct struct_0 **v34;  // [bp-0x40]\n
    char v35;  // [bp-0x34]\n
    char v36[4];  // [bp-0x28]\n
    unsigned int v37;  // [bp-0x1c]\n
    unsigned int *v38;  // [bp-0x18]\n
    struct struct_0 **v39;  // [bp-0x10]\n
    unsigned int *v41;  // rax\n
    struct struct_0 **v42;  // rax\n
    struct struct_0 **v44;  // rax\n
    unsigned int *v46;  // rax\n
    struct struct_0 **v48;  // rax\n
    unsigned int *v50;  // rax\n
    unsigned int *v51;  // rax\n
    struct struct_0 **v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    struct struct_0 **v56;  // rax\n
    unsigned int *v57;  // rax\n
    struct struct_0 **v58;  // rax\n
    unsigned int *v59;  // rax, Other Possible Types: unsigned long\n
\n
    v9 = cgc__cookie;\n
    v8 = -1;\n
    if (cgc_sendline(1, \"===llamaboll===\", 15) < 0)\n
        cgc__terminate(1);\n
    v30 = a0;\n
    v29 = a1;\n
    memset(&v27, 0, 4);\n
    if (*(v29) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = *(v30)->field_0;\n
    cgc_uint2str(&v27, 4, v28);\n
    v7 = &v27;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v41 = v29;\n
    *(v41) = *(v41) - 1;\n
    v42 = v30;\n
    *(v42) = *(v42) + 1;\n
    v18 = a0;\n
    v17 = a1;\n
    if (*(v17) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v17) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v17);\n
    v16 = v6;\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = cgc_calloc(134);\n
    if (!v15)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v15, \"Str: \");\n
    cgc_strncpy(v15 + 5, *(v18), v16);\n
    v44 = v18;\n
    *(v44) = &(*(v44))[4 + cgc_strlen(v15)];\n
    v46 = v17;\n
    *(v46) = *(v46) - (cgc_strlen(v15) + -4);\n
    cgc_checkheap();\n
    cgc_free(v15);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v14 = a0;\n
    v13 = a1;\n
    if (*(v13) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v13) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v13);\n
    v12 = v5;\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = cgc_calloc(134);\n
    if (!v11)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v11, \"Str: \");\n
    cgc_strncpy(v11 + 5, *(v14), v12);\n
    v48 = v14;\n
    *(v48) = &(*(v48))[4 + cgc_strlen(v11)];\n
    v50 = v13;\n
    *(v50) = *(v50) - (cgc_strlen(v11) + -4);\n
    cgc_checkheap();\n
    cgc_free(v11);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v26 = a0;\n
    v25 = a1;\n
    memset(&v23, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = *(&*(v26));\n
    cgc_uint2str(&v23, 6, v24);\n
    v4 = &v23;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v51 = v25;\n
    *(v51) = *(v51) - 2;\n
    v52 = v26;\n
    *(v52) = *(v52) + 2;\n
    v34 = a0;\n
    v33 = a1;\n
    memset(&v31, 0, 12);\n
    if (*(v33) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = *(&*(v34));\n
    cgc_uint2str(&v31, 12, v32);\n
    v3 = &v31;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v53 = v33;\n
    *(v53) = *(v53) - 4;\n
    v54 = v34;\n
    *(v54) = *(v54) + 4;\n
    v22 = a0;\n
    v21 = a1;\n
    memset(&v19, 0, 6);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = *(&*(v22));\n
    cgc_uint2str(&v19, 6, v20);\n
    v2 = &v19;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v19)) < 0)\n
        cgc__terminate(1);\n
    v55 = v21;\n
    *(v55) = *(v55) - 2;\n
    v56 = v22;\n
    *(v56) = *(v56) + 2;\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 12);\n
    if (*(v38) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v36[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v36[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v36[2] << 8))\n
                v1 = v36[3];\n
        }\n
    }\n
    v37 = v1 & 1;\n
    cgc_uint2str(&v35, 12, v37);\n
    v0 = &v35;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v57 = v38;\n
    *(v57) = *(v57) - 4;\n
    v58 = v39;\n
    *(v58) = *(v58) + 4;\n
    v9 ^= cgc__cookie;\n
    if (v9)\n
        cgc___stack_cookie_fail();\n
    v59 = a1;\n
    if (*(a1) > 0 && v8 >= 0)\n
    {\n
        v59 = v8;\n
        if (v59 < 0)\n
            v59 = *(&(&v10)[8 * v8])(a0, a1);\n
    }\n
    return v59;\n
}\n
", "4640677:sub_46cfa5": null, "4640688:cgc_process_llamaentodermic": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaentodermic(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0xa0]\n
    char v1;  // [bp-0x95]\n
    unsigned int v2;  // [bp-0x94]\n
    unsigned int v3;  // [bp-0x90]\n
    unsigned int v4;  // [bp-0x8c]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x6e]\n
    char *v7;  // [bp-0x68]\n
    unsigned short v8;  // [bp-0x5a]\n
    unsigned int *v9;  // [bp-0x58]\n
    struct struct_0 **v10;  // [bp-0x50]\n
    char *v11;  // [bp-0x48]\n
    unsigned int v12;  // [bp-0x3c]\n
    unsigned int *v13;  // [bp-0x38]\n
    struct struct_0 **v14;  // [bp-0x30]\n
    unsigned long v15;  // [bp-0x28]\n
    unsigned short v16;  // [bp-0x1a]\n
    unsigned int *v17;  // [bp-0x18]\n
    struct struct_0 **v18;  // [bp-0x10]\n
    struct struct_0 **v21;  // rax\n
    unsigned int *v23;  // rax\n
    unsigned int *v24;  // rax\n
    struct struct_0 **v25;  // rax\n
    unsigned int *v26;  // rax\n
    struct struct_0 **v27;  // rax\n
    unsigned int *v28;  // rax\n
    struct struct_0 **v29;  // rax\n
    unsigned int *v30;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = cgc__cookie;\n
    v3 = -1;\n
    if (cgc_sendline(1, \"===llamaentodermic===\", 21) < 0)\n
        cgc__terminate(1);\n
    v14 = a0;\n
    v13 = a1;\n
    if (*(v13) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v13) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v13);\n
    v12 = v2;\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = cgc_calloc(134);\n
    if (!v11)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v11, \"Str: \");\n
    cgc_strncpy(v11 + 5, *(v14), v12);\n
    v21 = v14;\n
    *(v21) = &(*(v21))[4 + cgc_strlen(v11)];\n
    v23 = v13;\n
    *(v23) = *(v23) - (cgc_strlen(v11) + -4);\n
    cgc_checkheap();\n
    cgc_free(v11);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v10 = a0;\n
    v9 = a1;\n
    v7 = &*(v10)->field_0;\n
    memset(&v6, 0, 6);\n
    if (*(v9) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((*(v7) << 8))\n
        v1 = v7[1];\n
    v8 = v1 & 1;\n
    cgc_uint2str(&v6, 6, v8);\n
    v0 = &v6;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v6)) < 0)\n
        cgc__terminate(1);\n
    v24 = v9;\n
    *(v24) = *(v24) - 2;\n
    v25 = v10;\n
    *(v25) = *(v25) + 2;\n
    v18 = a0;\n
    v17 = a1;\n
    if (*(v17) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = *(&*(v18));\n
    v26 = v17;\n
    *(v26) = *(v26) - 2;\n
    v27 = v18;\n
    *(v27) = *(v27) + 2;\n
    if (v16 <= *(v17) && !(!v16))\n
        goto LABEL_46d39e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46d39e:\n
    v15 = cgc_calloc(v16);\n
    if (!v15)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v15, *(v18), v16);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v28 = v17;\n
    *(v28) = *(v28) - v16;\n
    v29 = v18;\n
    *(v29) = &(*(v29))[v16];\n
    cgc_checkheap();\n
    cgc_free(v15);\n
    v4 ^= cgc__cookie;\n
    if (v4)\n
        cgc___stack_cookie_fail();\n
    v30 = a1;\n
    if (*(a1) > 0 && v3 >= 0)\n
    {\n
        v30 = v3;\n
        if (v30 < 0)\n
            v30 = *(&(&v5)[8 * v3])(a0, a1);\n
    }\n
    return v30;\n
}\n
", "4641995:sub_46d4cb": null, "4642000:cgc_process_llamapolitician": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamapolitician(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x668]\n
    char v1;  // [bp-0x659]\n
    struct_1 *v2;  // [bp-0x658]\n
    char v3;  // [bp-0x64d]\n
    unsigned int v4;  // [bp-0x64c]\n
    struct_1 *v5;  // [bp-0x648]\n
    char v6;  // [bp-0x639]\n
    struct_1 *v7;  // [bp-0x638]\n
    struct_1 *v8;  // [bp-0x630]\n
    struct_1 *v9;  // [bp-0x628]\n
    char v10;  // [bp-0x619]\n
    struct_1 *v11;  // [bp-0x618]\n
    struct_1 *v12;  // [bp-0x610]\n
    struct_1 *v13;  // [bp-0x608]\n
    struct_1 *v14;  // [bp-0x600]\n
    struct_1 *v15;  // [bp-0x5f8]\n
    unsigned int v16;  // [bp-0x5f0]\n
    unsigned int v17;  // [bp-0x5ec]\n
    struct_1 *v18;  // [bp-0x5e8]\n
    struct_1 *v19;  // [bp-0x5e0]\n
    struct_1 *v20;  // [bp-0x5d8]\n
    char v21;  // [bp-0x5c9]\n
    struct_1 *v22;  // [bp-0x5c8]\n
    struct_1 *v23;  // [bp-0x5c0]\n
    unsigned int v24;  // [bp-0x5b4]\n
    struct_1 *v25;  // [bp-0x5b0]\n
    char v26;  // [bp-0x5a1]\n
    struct_1 *v27;  // [bp-0x5a0]\n
    struct_1 *v28;  // [bp-0x598]\n
    unsigned int v29;  // [bp-0x58c]\n
    struct_1 *v30;  // [bp-0x588]\n
    struct_1 *v31;  // [bp-0x580]\n
    struct_1 *v32;  // [bp-0x578]\n
    unsigned int v33;  // [bp-0x570]\n
    unsigned int v34;  // [bp-0x56c]\n
    struct_1 *v35;  // [bp-0x568]\n
    unsigned int v36;  // [bp-0x560]\n
    unsigned int v37;  // [bp-0x55c]\n
    char v38;  // [bp-0x558]\n
    char v39;  // [bp-0x53e]\n
    char v40[4];  // [bp-0x538]\n
    unsigned short v41;  // [bp-0x52a]\n
    unsigned int *v42;  // [bp-0x528]\n
    struct struct_0 **v43;  // [bp-0x520]\n
    char v44;  // [bp-0x518]\n
    char v45[8];  // [bp-0x4f8]\n
    unsigned int v46;  // [bp-0x4f0]\n
    unsigned int *v47;  // [bp-0x4e8]\n
    struct struct_0 **v48;  // [bp-0x4e0]\n
    unsigned long v49;  // [bp-0x4d8]\n
    char v50;  // [bp-0x4c9]\n
    unsigned int *v51;  // [bp-0x4c8]\n
    struct struct_0 **v52;  // [bp-0x4c0]\n
    char *v53;  // [bp-0x4b8]\n
    unsigned int v54;  // [bp-0x4ac]\n
    unsigned int *v55;  // [bp-0x4a8]\n
    struct struct_0 **v56;  // [bp-0x4a0]\n
    char v57;  // [bp-0x498]\n
    unsigned short v58;  // [bp-0x492]\n
    unsigned int *v59;  // [bp-0x490]\n
    struct struct_0 **v60;  // [bp-0x488]\n
    char v61;  // [bp-0x480]\n
    unsigned short v62;  // [bp-0x47a]\n
    unsigned int *v63;  // [bp-0x478]\n
    struct struct_0 **v64;  // [bp-0x470]\n
    char v65;  // [bp-0x468]\n
    unsigned short v66;  // [bp-0x462]\n
    unsigned int *v67;  // [bp-0x460]\n
    struct struct_0 **v68;  // [bp-0x458]\n
    char v69;  // [bp-0x450]\n
    unsigned short v70;  // [bp-0x44a]\n
    unsigned int *v71;  // [bp-0x448]\n
    struct struct_0 **v72;  // [bp-0x440]\n
    char v73;  // [bp-0x435]\n
    char v74;  // [bp-0x431]\n
    unsigned int *v75;  // [bp-0x430]\n
    struct struct_0 **v76;  // [bp-0x428]\n
    char v77;  // [bp-0x41d]\n
    char v78;  // [bp-0x419]\n
    unsigned int *v79;  // [bp-0x418]\n
    struct struct_0 **v80;  // [bp-0x410]\n
    char v81;  // [bp-0x405]\n
    char v82;  // [bp-0x401]\n
    unsigned int *v83;  // [bp-0x400]\n
    struct struct_0 **v84;  // [bp-0x3f8]\n
    char v85;  // [bp-0x3ed]\n
    char v86;  // [bp-0x3e9]\n
    unsigned int *v87;  // [bp-0x3e8]\n
    struct struct_0 **v88;  // [bp-0x3e0]\n
    char v89;  // [bp-0x3d8]\n
    unsigned int v90;  // [bp-0x3c0]\n
    unsigned int *v91;  // [bp-0x3b8]\n
    struct struct_0 **v92;  // [bp-0x3b0]\n
    char v93;  // [bp-0x3a8]\n
    unsigned int v94;  // [bp-0x390]\n
    unsigned int *v95;  // [bp-0x388]\n
    struct struct_0 **v96;  // [bp-0x380]\n
    char v97;  // [bp-0x378]\n
    unsigned int v98;  // [bp-0x360]\n
    unsigned int *v99;  // [bp-0x358]\n
    struct struct_0 **v100;  // [bp-0x350]\n
    char v101;  // [bp-0x348]\n
    unsigned int v102;  // [bp-0x330]\n
    unsigned int *v103;  // [bp-0x328]\n
    struct struct_0 **v104;  // [bp-0x320]\n
    char v105;  // [bp-0x318]\n
    unsigned int v106;  // [bp-0x30c]\n
    unsigned int *v107;  // [bp-0x308]\n
    struct struct_0 **v108;  // [bp-0x300]\n
    char v109;  // [bp-0x2f8]\n
    unsigned int v110;  // [bp-0x2ec]\n
    unsigned int *v111;  // [bp-0x2e8]\n
    struct struct_0 **v112;  // [bp-0x2e0]\n
    char v113;  // [bp-0x2d8]\n
    unsigned int v114;  // [bp-0x2cc]\n
    unsigned int *v115;  // [bp-0x2c8]\n
    struct struct_0 **v116;  // [bp-0x2c0]\n
    char v117;  // [bp-0x2b8]\n
    unsigned int v118;  // [bp-0x2ac]\n
    unsigned int *v119;  // [bp-0x2a8]\n
    struct struct_0 **v120;  // [bp-0x2a0]\n
    unsigned long v121;  // [bp-0x298]\n
    unsigned short v122;  // [bp-0x28a]\n
    unsigned int *v123;  // [bp-0x288]\n
    struct struct_0 **v124;  // [bp-0x280]\n
    unsigned long v125;  // [bp-0x278]\n
    unsigned short v126;  // [bp-0x26a]\n
    unsigned int *v127;  // [bp-0x268]\n
    struct struct_0 **v128;  // [bp-0x260]\n
    unsigned long v129;  // [bp-0x258]\n
    unsigned short v130;  // [bp-0x24a]\n
    unsigned int *v131;  // [bp-0x248]\n
    struct struct_0 **v132;  // [bp-0x240]\n
    char v133;  // [bp-0x234]\n
    char v134[4];  // [bp-0x228]\n
    unsigned int v135;  // [bp-0x21c]\n
    unsigned int *v136;  // [bp-0x218]\n
    struct struct_0 **v137;  // [bp-0x210]\n
    char v138;  // [bp-0x204]\n
    char v139[4];  // [bp-0x1f8]\n
    unsigned int v140;  // [bp-0x1ec]\n
    unsigned int *v141;  // [bp-0x1e8]\n
    struct struct_0 **v142;  // [bp-0x1e0]\n
    char v143;  // [bp-0x1d4]\n
    char *v144;  // [bp-0x1c8]\n
    unsigned int v145;  // [bp-0x1bc]\n
    unsigned int *v146;  // [bp-0x1b8]\n
    struct struct_0 **v147;  // [bp-0x1b0]\n
    char v148;  // [bp-0x1a4]\n
    char *v149;  // [bp-0x198]\n
    unsigned int v150;  // [bp-0x18c]\n
    unsigned int *v151;  // [bp-0x188]\n
    struct struct_0 **v152;  // [bp-0x180]\n
    char *v153;  // [bp-0x178]\n
    unsigned int v154;  // [bp-0x16c]\n
    unsigned int *v155;  // [bp-0x168]\n
    struct struct_0 **v156;  // [bp-0x160]\n
    char *v157;  // [bp-0x158]\n
    unsigned int v158;  // [bp-0x14c]\n
    unsigned int *v159;  // [bp-0x148]\n
    struct struct_0 **v160;  // [bp-0x140]\n
    char *v161;  // [bp-0x138]\n
    unsigned int v162;  // [bp-0x12c]\n
    unsigned int *v163;  // [bp-0x128]\n
    struct struct_0 **v164;  // [bp-0x120]\n
    char *v165;  // [bp-0x118]\n
    unsigned int v166;  // [bp-0x10c]\n
    unsigned int *v167;  // [bp-0x108]\n
    struct struct_0 **v168;  // [bp-0x100]\n
    char *v169;  // [bp-0xf8]\n
    unsigned int v170;  // [bp-0xec]\n
    unsigned int *v171;  // [bp-0xe8]\n
    struct struct_0 **v172;  // [bp-0xe0]\n
    char *v173;  // [bp-0xd8]\n
    unsigned int v174;  // [bp-0xcc]\n
    unsigned int *v175;  // [bp-0xc8]\n
    struct struct_0 **v176;  // [bp-0xc0]\n
    char v177;  // [bp-0xb8]\n
    unsigned int v178;  // [bp-0xa0]\n
    unsigned int *v179;  // [bp-0x98]\n
    struct struct_0 **v180;  // [bp-0x90]\n
    unsigned long v181;  // [bp-0x88]\n
    char v182;  // [bp-0x79]\n
    unsigned int *v183;  // [bp-0x78]\n
    struct struct_0 **v184;  // [bp-0x70]\n
    unsigned long v185;  // [bp-0x68]\n
    char v186;  // [bp-0x59]\n
    unsigned int *v187;  // [bp-0x58]\n
    struct struct_0 **v188;  // [bp-0x50]\n
    unsigned long v189;  // [bp-0x48]\n
    char v190;  // [bp-0x39]\n
    unsigned int *v191;  // [bp-0x38]\n
    struct struct_0 **v192;  // [bp-0x30]\n
    unsigned long v193;  // [bp-0x28]\n
    char v194;  // [bp-0x19]\n
    unsigned int *v195;  // [bp-0x18]\n
    struct struct_0 **v196;  // [bp-0x10]\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    unsigned int *v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_0 **v253;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_0 **v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v304;  // rax, Other Possible Types: unsigned long\n
\n
    v37 = cgc__cookie;\n
    v36 = -1;\n
    if (cgc_sendline(1, \"===llamapolitician===\", 21) < 0)\n
        cgc__terminate(1);\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 6);\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(&*(v72));\n
    cgc_uint2str(&v69, 6, v70);\n
    v35 = &v69;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v198 = v71;\n
    *(v198) = *(v198) - 2;\n
    v199 = v72;\n
    *(v199) = *(v199) + 2;\n
    v176 = a0;\n
    v175 = a1;\n
    if (*(v175) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v175) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v175);\n
    v174 = v34;\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v173 = cgc_calloc(134);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v173, \"Str: \");\n
    cgc_strncpy(v173 + 5, *(v176), v174);\n
    v201 = v176;\n
    *(v201) = &(*(v201))[4 + cgc_strlen(v173)];\n
    v203 = v175;\n
    *(v203) = *(v203) - (cgc_strlen(v173) + -4);\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v55) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v55);\n
    v54 = v33;\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v53 = cgc_calloc(134);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v53, \"Str: \");\n
    cgc_strncpy(v53 + 5, *(v56), v54);\n
    v205 = v56;\n
    *(v205) = &(*(v205))[4 + cgc_strlen(v53)];\n
    v207 = v55;\n
    *(v207) = *(v207) - (cgc_strlen(v53) + -4);\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(v52)->field_0;\n
    v208 = v51;\n
    *(v208) = *(v208) - 1;\n
    v209 = v52;\n
    *(v209) = *(v209) + 1;\n
    if (v50 <= *(v51) && !(!v50))\n
        goto LABEL_46db04;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46db04:\n
    v49 = cgc_calloc(v50);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v49, *(v52), v50);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v210 = v52;\n
    *(v210) = &(*(v210))[v50];\n
    v211 = v51;\n
    *(v211) = *(v211) - v50;\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    cgc_uint2str(&v117, 12, v118);\n
    v32 = &v117;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v212 = v119;\n
    *(v212) = *(v212) - 4;\n
    v213 = v120;\n
    *(v213) = *(v213) + 4;\n
    v196 = a0;\n
    v195 = a1;\n
    if (*(v195) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v194 = *(v196)->field_0;\n
    v214 = v195;\n
    *(v214) = *(v214) - 1;\n
    v215 = v196;\n
    *(v215) = *(v215) + 1;\n
    if (v194 <= *(v195) && !(!v194))\n
        goto LABEL_46ddbe;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46ddbe:\n
    v193 = cgc_calloc(v194);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v193, *(v196), v194);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v216 = v196;\n
    *(v216) = &(*(v216))[v194];\n
    v217 = v195;\n
    *(v217) = *(v217) - v194;\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v31 = &v113;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v218 = v115;\n
    *(v218) = *(v218) - 4;\n
    v219 = v116;\n
    *(v219) = *(v219) + 4;\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v190 = *(v192)->field_0;\n
    v220 = v191;\n
    *(v220) = *(v220) - 1;\n
    v221 = v192;\n
    *(v221) = *(v221) + 1;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_46e04e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46e04e:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v222 = v192;\n
    *(v222) = &(*(v222))[v190];\n
    v223 = v191;\n
    *(v223) = *(v223) - v190;\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v102) = *(&*(v104));\n
    cgc_uint2str(&v101, 21, *(&v102));\n
    v30 = &v101;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v224 = v103;\n
    *(v224) = *(v224) - 8;\n
    v225 = v104;\n
    *(v225) = *(v225) + 8;\n
    v172 = a0;\n
    v171 = a1;\n
    if (*(v171) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v171) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v171);\n
    v170 = v29;\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v169 = cgc_calloc(134);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v169, \"Str: \");\n
    cgc_strncpy(v169 + 5, *(v172), v170);\n
    v227 = v172;\n
    *(v227) = &(*(v227))[4 + cgc_strlen(v169)];\n
    v229 = v171;\n
    *(v229) = *(v229) - (cgc_strlen(v169) + -4);\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v98) = *(&*(v100));\n
    cgc_uint2str(&v97, 21, *(&v98));\n
    v28 = &v97;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v230 = v99;\n
    *(v230) = *(v230) - 8;\n
    v231 = v100;\n
    *(v231) = *(v231) + 8;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 21);\n
    if (*(v95) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v94) = *(&*(v96));\n
    cgc_uint2str(&v93, 21, *(&v94));\n
    v27 = &v93;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v232 = v95;\n
    *(v232) = *(v232) - 8;\n
    v233 = v96;\n
    *(v233) = *(v233) + 8;\n
    v152 = a0;\n
    v151 = a1;\n
    v149 = &*(v152)->field_0;\n
    memset(&v148, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if ((*(v149) << 24))\n
    {\n
        v26 = 0;\n
        if ((v149[1] << 16))\n
        {\n
            v26 = 0;\n
            if ((v149[2] << 8))\n
                v26 = v149[3];\n
        }\n
    }\n
    v150 = v26 & 1;\n
    cgc_uint2str(&v148, 12, v150);\n
    v25 = &v148;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v148)) < 0)\n
        cgc__terminate(1);\n
    v234 = v151;\n
    *(v234) = *(v234) - 4;\n
    v235 = v152;\n
    *(v235) = *(v235) + 4;\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v167) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v167);\n
    v166 = v24;\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = cgc_calloc(134);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v165, \"Str: \");\n
    cgc_strncpy(v165 + 5, *(v168), v166);\n
    v237 = v168;\n
    *(v237) = &(*(v237))[4 + cgc_strlen(v165)];\n
    v239 = v167;\n
    *(v239) = *(v239) - (cgc_strlen(v165) + -4);\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v180 = a0;\n
    v179 = a1;\n
    memset(&v177, 0, 21);\n
    if (*(v179) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v178) = *(&*(v180));\n
    cgc_uint2str(&v177, 21, *(&v178));\n
    v23 = &v177;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v177)) < 0)\n
        cgc__terminate(1);\n
    v240 = v179;\n
    *(v240) = *(v240) - 8;\n
    v241 = v180;\n
    *(v241) = *(v241) + 8;\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 4);\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(v88)->field_0;\n
    cgc_uint2str(&v85, 4, v86);\n
    v22 = &v85;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v242 = v87;\n
    *(v242) = *(v242) - 1;\n
    v243 = v88;\n
    *(v243) = *(v243) + 1;\n
    v147 = a0;\n
    v146 = a1;\n
    v144 = &*(v147)->field_0;\n
    memset(&v143, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if ((*(v144) << 24))\n
    {\n
        v21 = 0;\n
        if ((v144[1] << 16))\n
        {\n
            v21 = 0;\n
            if ((v144[2] << 8))\n
                v21 = v144[3];\n
        }\n
    }\n
    v145 = v21 & 1;\n
    cgc_uint2str(&v143, 12, v145);\n
    v20 = &v143;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v244 = v146;\n
    *(v244) = *(v244) - 4;\n
    v245 = v147;\n
    *(v245) = *(v245) + 4;\n
    v132 = a0;\n
    v131 = a1;\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    v246 = v131;\n
    *(v246) = *(v246) - 2;\n
    v247 = v132;\n
    *(v247) = *(v247) + 2;\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_46ee11;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46ee11:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v248 = v131;\n
    *(v248) = *(v248) - v130;\n
    v249 = v132;\n
    *(v249) = &(*(v249))[v130];\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    cgc_uint2str(&v65, 6, v66);\n
    v19 = &v65;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v250 = v67;\n
    *(v250) = *(v250) - 2;\n
    v251 = v68;\n
    *(v251) = *(v251) + 2;\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v18 = &v109;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v252 = v111;\n
    *(v252) = *(v252) - 4;\n
    v253 = v112;\n
    *(v253) = *(v253) + 4;\n
    v164 = a0;\n
    v163 = a1;\n
    if (*(v163) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v163) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v163);\n
    v162 = v17;\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = cgc_calloc(134);\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v161, \"Str: \");\n
    cgc_strncpy(v161 + 5, *(v164), v162);\n
    v255 = v164;\n
    *(v255) = &(*(v255))[4 + cgc_strlen(v161)];\n
    v257 = v163;\n
    *(v257) = *(v257) - (cgc_strlen(v161) + -4);\n
    cgc_checkheap();\n
    cgc_free(v161);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v160 = a0;\n
    v159 = a1;\n
    if (*(v159) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v159) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v159);\n
    v158 = v16;\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v157 = cgc_calloc(134);\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v157, \"Str: \");\n
    cgc_strncpy(v157 + 5, *(v160), v158);\n
    v259 = v160;\n
    *(v259) = &(*(v259))[4 + cgc_strlen(v157)];\n
    v261 = v159;\n
    *(v261) = *(v261) - (cgc_strlen(v157) + -4);\n
    cgc_checkheap();\n
    cgc_free(v157);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v15 = &v105;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v262 = v107;\n
    *(v262) = *(v262) - 4;\n
    v263 = v108;\n
    *(v263) = *(v263) + 4;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 4);\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    cgc_uint2str(&v81, 4, v82);\n
    v14 = &v81;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v264 = v83;\n
    *(v264) = *(v264) - 1;\n
    v265 = v84;\n
    *(v265) = *(v265) + 1;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 6);\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(&*(v64));\n
    cgc_uint2str(&v61, 6, v62);\n
    v13 = &v61;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v266 = v63;\n
    *(v266) = *(v266) - 2;\n
    v267 = v64;\n
    *(v267) = *(v267) + 2;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v90) = *(&*(v92));\n
    cgc_uint2str(&v89, 21, *(&v90));\n
    v12 = &v89;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v268 = v91;\n
    *(v268) = *(v268) - 8;\n
    v269 = v92;\n
    *(v269) = *(v269) + 8;\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v186 = *(v188)->field_0;\n
    v270 = v187;\n
    *(v270) = *(v270) - 1;\n
    v271 = v188;\n
    *(v271) = *(v271) + 1;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_46f9bd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46f9bd:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v272 = v188;\n
    *(v272) = &(*(v272))[v186];\n
    v273 = v187;\n
    *(v273) = *(v273) - v186;\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v184 = a0;\n
    v183 = a1;\n
    if (*(v183) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v182 = *(v184)->field_0;\n
    v274 = v183;\n
    *(v274) = *(v274) - 1;\n
    v275 = v184;\n
    *(v275) = *(v275) + 1;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_46fb4c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_46fb4c:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v276 = v184;\n
    *(v276) = &(*(v276))[v182];\n
    v277 = v183;\n
    *(v277) = *(v277) - v182;\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 6);\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 6, v58);\n
    v11 = &v57;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v278 = v59;\n
    *(v278) = *(v278) - 2;\n
    v279 = v60;\n
    *(v279) = *(v279) + 2;\n
    v142 = a0;\n
    v141 = a1;\n
    *(&v139) = *(v142);\n
    memset(&v138, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v139[0] << 24))\n
    {\n
        v10 = 0;\n
        if ((v139[1] << 16))\n
        {\n
            v10 = 0;\n
            if ((v139[2] << 8))\n
                v10 = v139[3];\n
        }\n
    }\n
    v140 = v10 & 1;\n
    cgc_uint2str(&v138, 12, v140);\n
    v9 = &v138;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v280 = v141;\n
    *(v280) = *(v280) - 4;\n
    v281 = v142;\n
    *(v281) = *(v281) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 4);\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(v80)->field_0;\n
    cgc_uint2str(&v77, 4, v78);\n
    v8 = &v77;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v282 = v79;\n
    *(v282) = *(v282) - 1;\n
    v283 = v80;\n
    *(v283) = *(v283) + 1;\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 4);\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(v76)->field_0;\n
    cgc_uint2str(&v73, 4, v74);\n
    v7 = &v73;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v284 = v75;\n
    *(v284) = *(v284) - 1;\n
    v285 = v76;\n
    *(v285) = *(v285) + 1;\n
    v128 = a0;\n
    v127 = a1;\n
    if (*(v127) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    v286 = v127;\n
    *(v286) = *(v286) - 2;\n
    v287 = v128;\n
    *(v287) = *(v287) + 2;\n
    if (v126 <= *(v127) && !(!v126))\n
        goto LABEL_470187;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_470187:\n
    v125 = cgc_calloc(v126);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v125, *(v128), v126);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v288 = v127;\n
    *(v288) = *(v288) - v126;\n
    v289 = v128;\n
    *(v289) = &(*(v289))[v126];\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45[0]) = *(v48);\n
    memset(&v44, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v45[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v45[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v45[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v45[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v45[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v45[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v45[6] << 8))\n
                                v6 = v45[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v46) = v6 & 1;\n
    cgc_uint2str(&v44, 21, *(&v46));\n
    v5 = &v44;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v290 = v47;\n
    *(v290) = *(v290) - 8;\n
    v291 = v48;\n
    *(v291) = *(v291) + 8;\n
    v156 = a0;\n
    v155 = a1;\n
    if (*(v155) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v155) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v155);\n
    v154 = v4;\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v153 = cgc_calloc(134);\n
    if (!v153)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v153, \"Str: \");\n
    cgc_strncpy(v153 + 5, *(v156), v154);\n
    v293 = v156;\n
    *(v293) = &(*(v293))[4 + cgc_strlen(v153)];\n
    v295 = v155;\n
    *(v295) = *(v295) - (cgc_strlen(v153) + -4);\n
    cgc_checkheap();\n
    cgc_free(v153);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v40[0] << 8))\n
        v3 = v40[1];\n
    v41 = v3 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v2 = &v39;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v296 = v42;\n
    *(v296) = *(v296) - 2;\n
    v297 = v43;\n
    *(v297) = *(v297) + 2;\n
    v124 = a0;\n
    v123 = a1;\n
    if (*(v123) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    v298 = v123;\n
    *(v298) = *(v298) - 2;\n
    v299 = v124;\n
    *(v299) = *(v299) + 2;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_4708a8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4708a8:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v300 = v123;\n
    *(v300) = *(v300) - v122;\n
    v301 = v124;\n
    *(v301) = &(*(v301))[v122];\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v137 = a0;\n
    v136 = a1;\n
    *(&v134) = *(v137);\n
    memset(&v133, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v134[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v134[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v134[2] << 8))\n
                v1 = v134[3];\n
        }\n
    }\n
    v135 = v1 & 1;\n
    cgc_uint2str(&v133, 12, v135);\n
    v0 = &v133;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v302 = v136;\n
    *(v302) = *(v302) - 4;\n
    v303 = v137;\n
    *(v303) = *(v303) + 4;\n
    v37 ^= cgc__cookie;\n
    if (v37)\n
        cgc___stack_cookie_fail();\n
    v304 = a1;\n
    if (*(a1) > 0 && v36 >= 0)\n
    {\n
        v304 = v36;\n
        if (v304 < 0)\n
            v304 = *(&(&v38)[8 * v36])(a0, a1);\n
    }\n
    return v304;\n
}\n
", "4656006:sub_470b86": null, "4656016:cgc_process_llamatopoalgia": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamatopoalgia(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x2d8]\n
    char v1;  // [bp-0x2c9]\n
    struct_1 *v2;  // [bp-0x2c8]\n
    char v3;  // [bp-0x2bd]\n
    unsigned int v4;  // [bp-0x2bc]\n
    struct_1 *v5;  // [bp-0x2b8]\n
    char v6;  // [bp-0x2a9]\n
    struct_1 *v7;  // [bp-0x2a8]\n
    struct_1 *v8;  // [bp-0x2a0]\n
    char v9;  // [bp-0x291]\n
    struct_1 *v10;  // [bp-0x290]\n
    struct_1 *v11;  // [bp-0x288]\n
    char v12;  // [bp-0x279]\n
    struct_1 *v13;  // [bp-0x278]\n
    struct_1 *v14;  // [bp-0x270]\n
    char v15;  // [bp-0x261]\n
    struct_1 *v16;  // [bp-0x260]\n
    char v17;  // [bp-0x251]\n
    unsigned int v18;  // [bp-0x250]\n
    unsigned int v19;  // [bp-0x24c]\n
    char v20;  // [bp-0x248]\n
    char v21;  // [bp-0x22e]\n
    char *v22;  // [bp-0x228]\n
    unsigned short v23;  // [bp-0x21a]\n
    unsigned int *v24;  // [bp-0x218]\n
    struct struct_0 **v25;  // [bp-0x210]\n
    char v26;  // [bp-0x206]\n
    char v27[2];  // [bp-0x200]\n
    unsigned short v28;  // [bp-0x1f2]\n
    unsigned int *v29;  // [bp-0x1f0]\n
    struct struct_0 **v30;  // [bp-0x1e8]\n
    char v31;  // [bp-0x1de]\n
    char *v32;  // [bp-0x1d8]\n
    unsigned short v33;  // [bp-0x1ca]\n
    unsigned int *v34;  // [bp-0x1c8]\n
    struct struct_0 **v35;  // [bp-0x1c0]\n
    char v36;  // [bp-0x1b8]\n
    char *v37;  // [bp-0x198]\n
    unsigned int v38;  // [bp-0x190]\n
    unsigned int *v39;  // [bp-0x188]\n
    struct struct_0 **v40;  // [bp-0x180]\n
    char v41;  // [bp-0x178]\n
    char v42[8];  // [bp-0x160]\n
    unsigned int v43;  // [bp-0x158]\n
    unsigned int *v44;  // [bp-0x150]\n
    struct struct_0 **v45;  // [bp-0x148]\n
    char v46;  // [bp-0x140]\n
    unsigned short v47;  // [bp-0x13a]\n
    unsigned int *v48;  // [bp-0x138]\n
    struct struct_0 **v49;  // [bp-0x130]\n
    char v50;  // [bp-0x128]\n
    unsigned int v51;  // [bp-0x110]\n
    unsigned int *v52;  // [bp-0x108]\n
    struct struct_0 **v53;  // [bp-0x100]\n
    unsigned long v54;  // [bp-0xf8]\n
    unsigned short v55;  // [bp-0xea]\n
    unsigned int *v56;  // [bp-0xe8]\n
    struct struct_0 **v57;  // [bp-0xe0]\n
    char v58;  // [bp-0xd4]\n
    char v59[4];  // [bp-0xc8]\n
    unsigned int v60;  // [bp-0xbc]\n
    unsigned int *v61;  // [bp-0xb8]\n
    struct struct_0 **v62;  // [bp-0xb0]\n
    char v63;  // [bp-0xa4]\n
    char v64[4];  // [bp-0x98]\n
    unsigned int v65;  // [bp-0x8c]\n
    unsigned int *v66;  // [bp-0x88]\n
    struct struct_0 **v67;  // [bp-0x80]\n
    char *v68;  // [bp-0x78]\n
    unsigned int v69;  // [bp-0x6c]\n
    unsigned int *v70;  // [bp-0x68]\n
    struct struct_0 **v71;  // [bp-0x60]\n
    char v72;  // [bp-0x58]\n
    unsigned int v73;  // [bp-0x40]\n
    unsigned int *v74;  // [bp-0x38]\n
    struct struct_0 **v75;  // [bp-0x30]\n
    unsigned long v76;  // [bp-0x28]\n
    char v77;  // [bp-0x19]\n
    unsigned int *v78;  // [bp-0x18]\n
    struct struct_0 **v79;  // [bp-0x10]\n
    unsigned int *v81;  // rax\n
    struct struct_0 **v82;  // rax\n
    unsigned int *v83;  // rax\n
    struct struct_0 **v84;  // rax\n
    unsigned int *v85;  // rax\n
    struct struct_0 **v86;  // rax\n
    struct struct_0 **v87;  // rax\n
    unsigned int *v88;  // rax\n
    unsigned int *v89;  // rax\n
    struct struct_0 **v90;  // rax\n
    unsigned int *v91;  // rax\n
    struct struct_0 **v92;  // rax\n
    unsigned int *v93;  // rax\n
    struct struct_0 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    struct struct_0 **v96;  // rax\n
    unsigned int *v97;  // rax\n
    struct struct_0 **v98;  // rax\n
    unsigned int *v99;  // rax\n
    struct struct_0 **v100;  // rax\n
    struct struct_0 **v102;  // rax\n
    unsigned int *v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v113;  // rax, Other Possible Types: unsigned long\n
\n
    v19 = cgc__cookie;\n
    v18 = -1;\n
    if (cgc_sendline(1, \"===llamatopoalgia===\", 20) < 0)\n
        cgc__terminate(1);\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42[0]) = *(v45);\n
    memset(&v41, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (v42[0] << 56)\n
    {\n
        v17 = 0;\n
        if (v42[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v42[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v42[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v42[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v42[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v42[6] << 8))\n
                                v17 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v43) = v17 & 1;\n
    cgc_uint2str(&v41, 21, *(&v43));\n
    v16 = &v41;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v81 = v44;\n
    *(v81) = *(v81) - 8;\n
    v82 = v45;\n
    *(v82) = *(v82) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    v32 = &*(v35)->field_0;\n
    memset(&v31, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((*(v32) << 8))\n
        v15 = v32[1];\n
    v33 = v15 & 1;\n
    cgc_uint2str(&v31, 6, v33);\n
    v14 = &v31;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v83 = v34;\n
    *(v83) = *(v83) - 2;\n
    v84 = v35;\n
    *(v84) = *(v84) + 2;\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(v79)->field_0;\n
    v85 = v78;\n
    *(v85) = *(v85) - 1;\n
    v86 = v79;\n
    *(v86) = *(v86) + 1;\n
    if (v77 <= *(v78) && !(!v77))\n
        goto LABEL_47101a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47101a:\n
    v76 = cgc_calloc(v77);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v76, *(v79), v77);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v87 = v79;\n
    *(v87) = &(*(v87))[v77];\n
    v88 = v78;\n
    *(v88) = *(v88) - v77;\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(&*(v49));\n
    cgc_uint2str(&v46, 6, v47);\n
    v13 = &v46;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v89 = v48;\n
    *(v89) = *(v89) - 2;\n
    v90 = v49;\n
    *(v90) = *(v90) + 2;\n
    v30 = a0;\n
    v29 = a1;\n
    *(&v27) = *(v30);\n
    memset(&v26, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v27[0] << 8))\n
        v12 = v27[1];\n
    v28 = v12 & 1;\n
    cgc_uint2str(&v26, 6, v28);\n
    v11 = &v26;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v91 = v29;\n
    *(v91) = *(v91) - 2;\n
    v92 = v30;\n
    *(v92) = *(v92) + 2;\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v51) = *(&*(v53));\n
    cgc_uint2str(&v50, 21, *(&v51));\n
    v10 = &v50;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v93 = v52;\n
    *(v93) = *(v93) - 8;\n
    v94 = v53;\n
    *(v94) = *(v94) + 8;\n
    v40 = a0;\n
    v39 = a1;\n
    v37 = &*(v40)->field_0;\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (*(v37) << 56)\n
    {\n
        v9 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v37[6] << 8))\n
                                v9 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v9 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v8 = &v36;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v95 = v39;\n
    *(v95) = *(v95) - 8;\n
    v96 = v40;\n
    *(v96) = *(v96) + 8;\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v73) = *(&*(v75));\n
    cgc_uint2str(&v72, 21, *(&v73));\n
    v7 = &v72;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v97 = v74;\n
    *(v97) = *(v97) - 8;\n
    v98 = v75;\n
    *(v98) = *(v98) + 8;\n
    v25 = a0;\n
    v24 = a1;\n
    v22 = &*(v25)->field_0;\n
    memset(&v21, 0, 6);\n
    if (*(v24) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((*(v22) << 8))\n
        v6 = v22[1];\n
    v23 = v6 & 1;\n
    cgc_uint2str(&v21, 6, v23);\n
    v5 = &v21;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v21)) < 0)\n
        cgc__terminate(1);\n
    v99 = v24;\n
    *(v99) = *(v99) - 2;\n
    v100 = v25;\n
    *(v100) = *(v100) + 2;\n
    v71 = a0;\n
    v70 = a1;\n
    if (*(v70) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v70) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v70);\n
    v69 = v4;\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = cgc_calloc(134);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v68, \"Str: \");\n
    cgc_strncpy(v68 + 5, *(v71), v69);\n
    v102 = v71;\n
    *(v102) = &(*(v102))[4 + cgc_strlen(v68)];\n
    v104 = v70;\n
    *(v104) = *(v104) - (cgc_strlen(v68) + -4);\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v67 = a0;\n
    v66 = a1;\n
    *(&v64) = *(v67);\n
    memset(&v63, 0, 12);\n
    if (*(v66) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v64[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v64[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v64[2] << 8))\n
                v3 = v64[3];\n
        }\n
    }\n
    v65 = v3 & 1;\n
    cgc_uint2str(&v63, 12, v65);\n
    v2 = &v63;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v105 = v66;\n
    *(v105) = *(v105) - 4;\n
    v106 = v67;\n
    *(v106) = *(v106) + 4;\n
    v57 = a0;\n
    v56 = a1;\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(&*(v57));\n
    v107 = v56;\n
    *(v107) = *(v107) - 2;\n
    v108 = v57;\n
    *(v108) = *(v108) + 2;\n
    if (v55 <= *(v56) && !(!v55))\n
        goto LABEL_471c8e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_471c8e:\n
    v54 = cgc_calloc(v55);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v54, *(v57), v55);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v109 = v56;\n
    *(v109) = *(v109) - v55;\n
    v110 = v57;\n
    *(v110) = &(*(v110))[v55];\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    v62 = a0;\n
    v61 = a1;\n
    *(&v59) = *(v62);\n
    memset(&v58, 0, 12);\n
    if (*(v61) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v59[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v59[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v59[2] << 8))\n
                v1 = v59[3];\n
        }\n
    }\n
    v60 = v1 & 1;\n
    cgc_uint2str(&v58, 12, v60);\n
    v0 = &v58;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v111 = v61;\n
    *(v111) = *(v111) - 4;\n
    v112 = v62;\n
    *(v112) = *(v112) + 4;\n
    v19 ^= cgc__cookie;\n
    if (v19)\n
        cgc___stack_cookie_fail();\n
    v113 = a1;\n
    if (*(a1) > 0 && v18 >= 0)\n
    {\n
        v113 = v18;\n
        if (v113 < 0)\n
            v113 = *(&(&v20)[8 * v18])(a0, a1);\n
    }\n
    return v113;\n
}\n
", "4661100:sub_471f6c": null, "4661104:cgc_process_llamaTamilian": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaTamilian(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x3c0]\n
    char v1;  // [bp-0x3b1]\n
    struct_1 *v2;  // [bp-0x3b0]\n
    unsigned int v3;  // [bp-0x3a8]\n
    unsigned int v4;  // [bp-0x3a4]\n
    struct_1 *v5;  // [bp-0x3a0]\n
    struct_1 *v6;  // [bp-0x398]\n
    struct_1 *v7;  // [bp-0x390]\n
    struct_1 *v8;  // [bp-0x388]\n
    struct_1 *v9;  // [bp-0x380]\n
    struct_1 *v10;  // [bp-0x378]\n
    unsigned int v11;  // [bp-0x36c]\n
    struct_1 *v12;  // [bp-0x368]\n
    char v13;  // [bp-0x359]\n
    struct_1 *v14;  // [bp-0x358]\n
    char v15;  // [bp-0x349]\n
    struct_1 *v16;  // [bp-0x348]\n
    char v17;  // [bp-0x339]\n
    struct_1 *v18;  // [bp-0x338]\n
    char v19;  // [bp-0x329]\n
    struct_1 *v20;  // [bp-0x328]\n
    unsigned int v21;  // [bp-0x31c]\n
    unsigned int v22;  // [bp-0x318]\n
    unsigned int v23;  // [bp-0x314]\n
    char v24;  // [bp-0x310]\n
    char v25;  // [bp-0x2f6]\n
    char v26[2];  // [bp-0x2f0]\n
    unsigned short v27;  // [bp-0x2e2]\n
    unsigned int *v28;  // [bp-0x2e0]\n
    struct struct_0 **v29;  // [bp-0x2d8]\n
    char v30;  // [bp-0x2ce]\n
    char v31[2];  // [bp-0x2c8]\n
    unsigned short v32;  // [bp-0x2ba]\n
    unsigned int *v33;  // [bp-0x2b8]\n
    struct struct_0 **v34;  // [bp-0x2b0]\n
    char v35;  // [bp-0x2a8]\n
    char v36[8];  // [bp-0x290]\n
    unsigned int v37;  // [bp-0x288]\n
    unsigned int *v38;  // [bp-0x280]\n
    struct struct_0 **v39;  // [bp-0x278]\n
    char *v40;  // [bp-0x270]\n
    unsigned int v41;  // [bp-0x264]\n
    unsigned int *v42;  // [bp-0x260]\n
    struct struct_0 **v43;  // [bp-0x258]\n
    char *v44;  // [bp-0x250]\n
    unsigned int v45;  // [bp-0x244]\n
    unsigned int *v46;  // [bp-0x240]\n
    struct struct_0 **v47;  // [bp-0x238]\n
    char *v48;  // [bp-0x230]\n
    unsigned int v49;  // [bp-0x224]\n
    unsigned int *v50;  // [bp-0x220]\n
    struct struct_0 **v51;  // [bp-0x218]\n
    char *v52;  // [bp-0x210]\n
    unsigned int v53;  // [bp-0x204]\n
    unsigned int *v54;  // [bp-0x200]\n
    struct struct_0 **v55;  // [bp-0x1f8]\n
    char v56;  // [bp-0x1f0]\n
    unsigned short v57;  // [bp-0x1ea]\n
    unsigned int *v58;  // [bp-0x1e8]\n
    struct struct_0 **v59;  // [bp-0x1e0]\n
    char v60;  // [bp-0x1d5]\n
    char v61;  // [bp-0x1d1]\n
    unsigned int *v62;  // [bp-0x1d0]\n
    struct struct_0 **v63;  // [bp-0x1c8]\n
    char v64;  // [bp-0x1bd]\n
    char v65;  // [bp-0x1b9]\n
    unsigned int *v66;  // [bp-0x1b8]\n
    struct struct_0 **v67;  // [bp-0x1b0]\n
    char v68;  // [bp-0x1a8]\n
    unsigned int v69;  // [bp-0x190]\n
    unsigned int *v70;  // [bp-0x188]\n
    struct struct_0 **v71;  // [bp-0x180]\n
    char v72;  // [bp-0x178]\n
    unsigned int v73;  // [bp-0x160]\n
    unsigned int *v74;  // [bp-0x158]\n
    struct struct_0 **v75;  // [bp-0x150]\n
    char v76;  // [bp-0x148]\n
    unsigned int v77;  // [bp-0x13c]\n
    unsigned int *v78;  // [bp-0x138]\n
    struct struct_0 **v79;  // [bp-0x130]\n
    unsigned long v80;  // [bp-0x128]\n
    unsigned short v81;  // [bp-0x11a]\n
    unsigned int *v82;  // [bp-0x118]\n
    struct struct_0 **v83;  // [bp-0x110]\n
    char v84;  // [bp-0x104]\n
    char v85[4];  // [bp-0xf8]\n
    unsigned int v86;  // [bp-0xec]\n
    unsigned int *v87;  // [bp-0xe8]\n
    struct struct_0 **v88;  // [bp-0xe0]\n
    char v89;  // [bp-0xd4]\n
    char v90[8];  // [bp-0xc8]\n
    unsigned int v91;  // [bp-0xbc]\n
    unsigned int *v92;  // [bp-0xb8]\n
    struct struct_0 **v93;  // [bp-0xb0]\n
    char v94;  // [bp-0xa8]\n
    unsigned int v95;  // [bp-0x90]\n
    unsigned int *v96;  // [bp-0x88]\n
    struct struct_0 **v97;  // [bp-0x80]\n
    char v98;  // [bp-0x78]\n
    unsigned int v99;  // [bp-0x60]\n
    unsigned int *v100;  // [bp-0x58]\n
    struct struct_0 **v101;  // [bp-0x50]\n
    unsigned long v102;  // [bp-0x48]\n
    char v103;  // [bp-0x39]\n
    unsigned int *v104;  // [bp-0x38]\n
    struct struct_0 **v105;  // [bp-0x30]\n
    unsigned long v106;  // [bp-0x28]\n
    char v107;  // [bp-0x19]\n
    unsigned int *v108;  // [bp-0x18]\n
    struct struct_0 **v109;  // [bp-0x10]\n
    struct struct_0 **v112;  // rax\n
    unsigned int *v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_0 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v144;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    struct struct_0 **v151;  // rax\n
    unsigned int *v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    struct struct_0 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_0 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_0 **v164;  // rax\n
    unsigned int *v165;  // rax, Other Possible Types: unsigned long\n
\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamaTamilian===\", 19) < 0)\n
        cgc__terminate(1);\n
    v55 = a0;\n
    v54 = a1;\n
    if (*(v54) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v54) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v54);\n
    v53 = v21;\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = cgc_calloc(134);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v52, \"Str: \");\n
    cgc_strncpy(v52 + 5, *(v55), v53);\n
    v112 = v55;\n
    *(v112) = &(*(v112))[4 + cgc_strlen(v52)];\n
    v114 = v54;\n
    *(v114) = *(v114) - (cgc_strlen(v52) + -4);\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 21);\n
    if (*(v100) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v99) = *(&*(v101));\n
    cgc_uint2str(&v98, 21, *(&v99));\n
    v20 = &v98;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v115 = v100;\n
    *(v115) = *(v115) - 8;\n
    v116 = v101;\n
    *(v116) = *(v116) + 8;\n
    v93 = a0;\n
    v92 = a1;\n
    *(&v90[0]) = *(v93);\n
    memset(&v89, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((v90[0] << 24))\n
    {\n
        v19 = 0;\n
        if ((v90[1] << 16))\n
        {\n
            v19 = 0;\n
            if ((v90[2] << 8))\n
                v19 = v90[3];\n
        }\n
    }\n
    v91 = v19 & 1;\n
    cgc_uint2str(&v89, 12, v91);\n
    v18 = &v89;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v117 = v92;\n
    *(v117) = *(v117) - 4;\n
    v118 = v93;\n
    *(v118) = *(v118) + 4;\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v31[0] << 8))\n
        v17 = v31[1];\n
    v32 = v17 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v16 = &v30;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v119 = v33;\n
    *(v119) = *(v119) - 2;\n
    v120 = v34;\n
    *(v120) = *(v120) + 2;\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36[0]) = *(v39);\n
    memset(&v35, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if (v36[0] << 56)\n
    {\n
        v15 = 0;\n
        if (v36[1] << 48)\n
        {\n
            v15 = 0;\n
            if (v36[2] << 40)\n
            {\n
                v15 = 0;\n
                if (v36[3] << 32)\n
                {\n
                    v15 = 0;\n
                    if ((v36[4] << 24))\n
                    {\n
                        v15 = 0;\n
                        if ((v36[5] << 16))\n
                        {\n
                            v15 = 0;\n
                            if ((v36[6] << 8))\n
                                v15 = v36[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v37) = v15 & 1;\n
    cgc_uint2str(&v35, 21, *(&v37));\n
    v14 = &v35;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v121 = v38;\n
    *(v121) = *(v121) - 8;\n
    v122 = v39;\n
    *(v122) = *(v122) + 8;\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v26[0] << 8))\n
        v13 = v26[1];\n
    v27 = v13 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v12 = &v25;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v123 = v28;\n
    *(v123) = *(v123) - 2;\n
    v124 = v29;\n
    *(v124) = *(v124) + 2;\n
    v51 = a0;\n
    v50 = a1;\n
    if (*(v50) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v50) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v50);\n
    v49 = v11;\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = cgc_calloc(134);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v48, \"Str: \");\n
    cgc_strncpy(v48 + 5, *(v51), v49);\n
    v126 = v51;\n
    *(v126) = &(*(v126))[4 + cgc_strlen(v48)];\n
    v128 = v50;\n
    *(v128) = *(v128) - (cgc_strlen(v48) + -4);\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v67 = a0;\n
    v66 = a1;\n
    memset(&v64, 0, 4);\n
    if (*(v66) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(v67)->field_0;\n
    cgc_uint2str(&v64, 4, v65);\n
    v10 = &v64;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v129 = v66;\n
    *(v129) = *(v129) - 1;\n
    v130 = v67;\n
    *(v130) = *(v130) + 1;\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v73) = *(&*(v75));\n
    cgc_uint2str(&v72, 21, *(&v73));\n
    v9 = &v72;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v131 = v74;\n
    *(v131) = *(v131) - 8;\n
    v132 = v75;\n
    *(v132) = *(v132) + 8;\n
    v79 = a0;\n
    v78 = a1;\n
    memset(&v76, 0, 12);\n
    if (*(v78) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = *(&*(v79));\n
    cgc_uint2str(&v76, 12, v77);\n
    v8 = &v76;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v76)) < 0)\n
        cgc__terminate(1);\n
    v133 = v78;\n
    *(v133) = *(v133) - 4;\n
    v134 = v79;\n
    *(v134) = *(v134) + 4;\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 21);\n
    if (*(v96) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v95) = *(&*(v97));\n
    cgc_uint2str(&v94, 21, *(&v95));\n
    v7 = &v94;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v135 = v96;\n
    *(v135) = *(v135) - 8;\n
    v136 = v97;\n
    *(v136) = *(v136) + 8;\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 4);\n
    if (*(v62) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(v63)->field_0;\n
    cgc_uint2str(&v60, 4, v61);\n
    v6 = &v60;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v137 = v62;\n
    *(v137) = *(v137) - 1;\n
    v138 = v63;\n
    *(v138) = *(v138) + 1;\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(&*(v59));\n
    cgc_uint2str(&v56, 6, v57);\n
    v5 = &v56;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v139 = v58;\n
    *(v139) = *(v139) - 2;\n
    v140 = v59;\n
    *(v140) = *(v140) + 2;\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v46) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v46);\n
    v45 = v4;\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = cgc_calloc(134);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v44, \"Str: \");\n
    cgc_strncpy(v44 + 5, *(v47), v45);\n
    v142 = v47;\n
    *(v142) = &(*(v142))[4 + cgc_strlen(v44)];\n
    v144 = v46;\n
    *(v144) = *(v144) - (cgc_strlen(v44) + -4);\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v42) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v42);\n
    v41 = v3;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v40, \"Str: \");\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v146 = v43;\n
    *(v146) = &(*(v146))[4 + cgc_strlen(v40)];\n
    v148 = v42;\n
    *(v148) = *(v148) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v109 = a0;\n
    v108 = a1;\n
    if (*(v108) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(v109)->field_0;\n
    v149 = v108;\n
    *(v149) = *(v149) - 1;\n
    v150 = v109;\n
    *(v150) = *(v150) + 1;\n
    if (v107 <= *(v108) && !(!v107))\n
        goto LABEL_473584;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_473584:\n
    v106 = cgc_calloc(v107);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v106, *(v109), v107);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v151 = v109;\n
    *(v151) = &(*(v151))[v107];\n
    v152 = v108;\n
    *(v152) = *(v152) - v107;\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v69) = *(&*(v71));\n
    cgc_uint2str(&v68, 21, *(&v69));\n
    v2 = &v68;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v153 = v70;\n
    *(v153) = *(v153) - 8;\n
    v154 = v71;\n
    *(v154) = *(v154) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(v105)->field_0;\n
    v155 = v104;\n
    *(v155) = *(v155) - 1;\n
    v156 = v105;\n
    *(v156) = *(v156) + 1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_47381d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47381d:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v157 = v105;\n
    *(v157) = &(*(v157))[v103];\n
    v158 = v104;\n
    *(v158) = *(v158) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = *(&*(v83));\n
    v159 = v82;\n
    *(v159) = *(v159) - 2;\n
    v160 = v83;\n
    *(v160) = *(v160) + 2;\n
    if (v81 <= *(v82) && !(!v81))\n
        goto LABEL_4739cc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4739cc:\n
    v80 = cgc_calloc(v81);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v80, *(v83), v81);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v161 = v82;\n
    *(v161) = *(v161) - v81;\n
    v162 = v83;\n
    *(v162) = &(*(v162))[v81];\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    v88 = a0;\n
    v87 = a1;\n
    *(&v85) = *(v88);\n
    memset(&v84, 0, 12);\n
    if (*(v87) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v85[0] << 24))\n
    {\n
        v1 = 0;\n
        if ((v85[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v85[2] << 8))\n
                v1 = v85[3];\n
        }\n
    }\n
    v86 = v1 & 1;\n
    cgc_uint2str(&v84, 12, v86);\n
    v0 = &v84;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v163 = v87;\n
    *(v163) = *(v163) - 4;\n
    v164 = v88;\n
    *(v164) = *(v164) + 4;\n
    v23 ^= cgc__cookie;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v165 = a1;\n
    if (*(a1) > 0 && v22 >= 0)\n
    {\n
        v165 = v22;\n
        if (v165 < 0)\n
            v165 = *(&(&v24)[8 * v22])(a0, a1);\n
    }\n
    return v165;\n
}\n
", "4668586:sub_473caa": null, "4668592:cgc_process_llamasilvicultural": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasilvicultural(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x27c]\n
    struct_1 *v1;  // [bp-0x278]\n
    struct_1 *v2;  // [bp-0x270]\n
    char v3;  // [bp-0x261]\n
    struct_1 *v4;  // [bp-0x260]\n
    char v5;  // [bp-0x251]\n
    struct_1 *v6;  // [bp-0x250]\n
    struct_1 *v7;  // [bp-0x248]\n
    char v8;  // [bp-0x239]\n
    struct_1 *v9;  // [bp-0x238]\n
    char v10;  // [bp-0x229]\n
    struct_1 *v11;  // [bp-0x228]\n
    struct_1 *v12;  // [bp-0x220]\n
    struct_1 *v13;  // [bp-0x218]\n
    struct_1 *v14;  // [bp-0x210]\n
    char v15;  // [bp-0x201]\n
    struct_1 *v16;  // [bp-0x200]\n
    unsigned int v17;  // [bp-0x1f8]\n
    unsigned int v18;  // [bp-0x1f4]\n
    char v19;  // [bp-0x1f0]\n
    char v20;  // [bp-0x1d6]\n
    char v21[4];  // [bp-0x1d0]\n
    unsigned short v22;  // [bp-0x1c2]\n
    unsigned int *v23;  // [bp-0x1c0]\n
    struct struct_0 **v24;  // [bp-0x1b8]\n
    char v25;  // [bp-0x1ae]\n
    char *v26;  // [bp-0x1a8]\n
    unsigned short v27;  // [bp-0x19a]\n
    unsigned int *v28;  // [bp-0x198]\n
    struct struct_0 **v29;  // [bp-0x190]\n
    unsigned long v30;  // [bp-0x188]\n
    char v31;  // [bp-0x179]\n
    unsigned int *v32;  // [bp-0x178]\n
    struct struct_0 **v33;  // [bp-0x170]\n
    char *v34;  // [bp-0x168]\n
    unsigned int v35;  // [bp-0x15c]\n
    unsigned int *v36;  // [bp-0x158]\n
    struct struct_0 **v37;  // [bp-0x150]\n
    char v38;  // [bp-0x148]\n
    unsigned short v39;  // [bp-0x142]\n
    unsigned int *v40;  // [bp-0x140]\n
    struct struct_0 **v41;  // [bp-0x138]\n
    char v42;  // [bp-0x12d]\n
    char v43;  // [bp-0x129]\n
    unsigned int *v44;  // [bp-0x128]\n
    struct struct_0 **v45;  // [bp-0x120]\n
    char v46;  // [bp-0x118]\n
    unsigned int v47;  // [bp-0x10c]\n
    unsigned int *v48;  // [bp-0x108]\n
    struct struct_0 **v49;  // [bp-0x100]\n
    char v50;  // [bp-0xf8]\n
    unsigned int v51;  // [bp-0xec]\n
    unsigned int *v52;  // [bp-0xe8]\n
    struct struct_0 **v53;  // [bp-0xe0]\n
    char v54;  // [bp-0xd8]\n
    unsigned int v55;  // [bp-0xcc]\n
    unsigned int *v56;  // [bp-0xc8]\n
    struct struct_0 **v57;  // [bp-0xc0]\n
    char v58;  // [bp-0xb8]\n
    unsigned int v59;  // [bp-0xac]\n
    unsigned int *v60;  // [bp-0xa8]\n
    struct struct_0 **v61;  // [bp-0xa0]\n
    char v62;  // [bp-0x94]\n
    char v63[4];  // [bp-0x88]\n
    unsigned int v64;  // [bp-0x7c]\n
    unsigned int *v65;  // [bp-0x78]\n
    struct struct_0 **v66;  // [bp-0x70]\n
    char v67;  // [bp-0x64]\n
    char v68[4];  // [bp-0x58]\n
    unsigned int v69;  // [bp-0x4c]\n
    unsigned int *v70;  // [bp-0x48]\n
    struct struct_0 **v71;  // [bp-0x40]\n
    char v72;  // [bp-0x34]\n
    char v73[4];  // [bp-0x28]\n
    unsigned int v74;  // [bp-0x1c]\n
    unsigned int *v75;  // [bp-0x18]\n
    struct struct_0 **v76;  // [bp-0x10]\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_0 **v83;  // rax\n
    unsigned int *v84;  // rax\n
    struct struct_0 **v85;  // rax\n
    unsigned int *v86;  // rax\n
    struct struct_0 **v87;  // rax\n
    unsigned int *v88;  // rax\n
    struct struct_0 **v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_0 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_0 **v93;  // rax\n
    struct struct_0 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_0 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    struct struct_0 **v105;  // rax\n
    unsigned int *v107;  // rax\n
    unsigned int *v108;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamasilvicultural===\", 24) < 0)\n
        cgc__terminate(1);\n
    v61 = a0;\n
    v60 = a1;\n
    memset(&v58, 0, 12);\n
    if (*(v60) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(&*(v61));\n
    cgc_uint2str(&v58, 12, v59);\n
    v16 = &v58;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v78 = v60;\n
    *(v78) = *(v78) - 4;\n
    v79 = v61;\n
    *(v79) = *(v79) + 4;\n
    v29 = a0;\n
    v28 = a1;\n
    v26 = &*(v29)->field_0;\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((*(v26) << 8))\n
        v15 = v26[1];\n
    v27 = v15 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v14 = &v25;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v80 = v28;\n
    *(v80) = *(v80) - 2;\n
    v81 = v29;\n
    *(v81) = *(v81) + 2;\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 12);\n
    if (*(v52) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(&*(v53));\n
    cgc_uint2str(&v50, 12, v51);\n
    v13 = &v50;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v82 = v52;\n
    *(v82) = *(v82) - 4;\n
    v83 = v53;\n
    *(v83) = *(v83) + 4;\n
    v57 = a0;\n
    v56 = a1;\n
    memset(&v54, 0, 12);\n
    if (*(v56) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(&*(v57));\n
    cgc_uint2str(&v54, 12, v55);\n
    v12 = &v54;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v84 = v56;\n
    *(v84) = *(v84) - 4;\n
    v85 = v57;\n
    *(v85) = *(v85) + 4;\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 12);\n
    if (*(v48) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(&*(v49));\n
    cgc_uint2str(&v46, 12, v47);\n
    v11 = &v46;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v86 = v48;\n
    *(v86) = *(v86) - 4;\n
    v87 = v49;\n
    *(v87) = *(v87) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    *(&v73) = *(v76);\n
    memset(&v72, 0, 12);\n
    if (*(v75) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v73[0] << 24))\n
    {\n
        v10 = 0;\n
        if ((v73[1] << 16))\n
        {\n
            v10 = 0;\n
            if ((v73[2] << 8))\n
                v10 = v73[3];\n
        }\n
    }\n
    v74 = v10 & 1;\n
    cgc_uint2str(&v72, 12, v74);\n
    v9 = &v72;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v88 = v75;\n
    *(v88) = *(v88) - 4;\n
    v89 = v76;\n
    *(v89) = *(v89) + 4;\n
    v71 = a0;\n
    v70 = a1;\n
    *(&v68) = *(v71);\n
    memset(&v67, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v68[0] << 24))\n
    {\n
        v8 = 0;\n
        if ((v68[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v68[2] << 8))\n
                v8 = v68[3];\n
        }\n
    }\n
    v69 = v8 & 1;\n
    cgc_uint2str(&v67, 12, v69);\n
    v7 = &v67;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v90 = v70;\n
    *(v90) = *(v90) - 4;\n
    v91 = v71;\n
    *(v91) = *(v91) + 4;\n
    v33 = a0;\n
    v32 = a1;\n
    if (*(v32) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(v33)->field_0;\n
    v92 = v32;\n
    *(v92) = *(v92) - 1;\n
    v93 = v33;\n
    *(v93) = *(v93) + 1;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_4745fa;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4745fa:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v94 = v33;\n
    *(v94) = &(*(v94))[v31];\n
    v95 = v32;\n
    *(v95) = *(v95) - v31;\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v41 = a0;\n
    v40 = a1;\n
    memset(&v38, 0, 6);\n
    if (*(v40) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(&*(v41));\n
    cgc_uint2str(&v38, 6, v39);\n
    v6 = &v38;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v96 = v40;\n
    *(v96) = *(v96) - 2;\n
    v97 = v41;\n
    *(v97) = *(v97) + 2;\n
    v66 = a0;\n
    v65 = a1;\n
    *(&v63) = *(v66);\n
    memset(&v62, 0, 12);\n
    if (*(v65) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v63[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v63[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v63[2] << 8))\n
                v5 = v63[3];\n
        }\n
    }\n
    v64 = v5 & 1;\n
    cgc_uint2str(&v62, 12, v64);\n
    v4 = &v62;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v98 = v65;\n
    *(v98) = *(v98) - 4;\n
    v99 = v66;\n
    *(v99) = *(v99) + 4;\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21) = *(v24);\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v21[0] << 8))\n
        v3 = v21[1];\n
    v22 = v3 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v2 = &v20;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v100 = v23;\n
    *(v100) = *(v100) - 2;\n
    v101 = v24;\n
    *(v101) = *(v101) + 2;\n
    v45 = a0;\n
    v44 = a1;\n
    memset(&v42, 0, 4);\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = *(v45)->field_0;\n
    cgc_uint2str(&v42, 4, v43);\n
    v1 = &v42;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v102 = v44;\n
    *(v102) = *(v102) - 1;\n
    v103 = v45;\n
    *(v103) = *(v103) + 1;\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v36) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v36);\n
    v35 = v0;\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v34 = cgc_calloc(134);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v34, \"Str: \");\n
    cgc_strncpy(v34 + 5, *(v37), v35);\n
    v105 = v37;\n
    *(v105) = &(*(v105))[4 + cgc_strlen(v34)];\n
    v107 = v36;\n
    *(v107) = *(v107) - (cgc_strlen(v34) + -4);\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v108 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v108 = v17;\n
        if (v108 < 0)\n
            v108 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v108;\n
}\n
", "4673010:sub_474df2": null, "4673024:cgc_process_llamaschoppen": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaschoppen(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x5b8]\n
    char v1;  // [bp-0x5ad]\n
    unsigned int v2;  // [bp-0x5ac]\n
    struct_1 *v3;  // [bp-0x5a8]\n
    struct_1 *v4;  // [bp-0x5a0]\n
    char v5;  // [bp-0x591]\n
    struct_1 *v6;  // [bp-0x590]\n
    struct_1 *v7;  // [bp-0x588]\n
    char v8;  // [bp-0x579]\n
    struct_1 *v9;  // [bp-0x578]\n
    char v10;  // [bp-0x569]\n
    struct_1 *v11;  // [bp-0x568]\n
    struct_1 *v12;  // [bp-0x560]\n
    unsigned int v13;  // [bp-0x554]\n
    struct_1 *v14;  // [bp-0x550]\n
    unsigned int v15;  // [bp-0x544]\n
    struct_1 *v16;  // [bp-0x540]\n
    struct_1 *v17;  // [bp-0x538]\n
    struct_1 *v18;  // [bp-0x530]\n
    unsigned int v19;  // [bp-0x524]\n
    struct_1 *v20;  // [bp-0x520]\n
    struct_1 *v21;  // [bp-0x518]\n
    unsigned int v22;  // [bp-0x50c]\n
    struct_1 *v23;  // [bp-0x508]\n
    char v24;  // [bp-0x4f9]\n
    struct_1 *v25;  // [bp-0x4f8]\n
    struct_1 *v26;  // [bp-0x4f0]\n
    unsigned int v27;  // [bp-0x4e4]\n
    struct_1 *v28;  // [bp-0x4e0]\n
    struct_1 *v29;  // [bp-0x4d8]\n
    struct_1 *v30;  // [bp-0x4d0]\n
    unsigned int v31;  // [bp-0x4c8]\n
    unsigned int v32;  // [bp-0x4c4]\n
    char v33;  // [bp-0x4c0]\n
    char v34;  // [bp-0x4a6]\n
    char v35[2];  // [bp-0x4a0]\n
    unsigned short v36;  // [bp-0x492]\n
    unsigned int *v37;  // [bp-0x490]\n
    struct struct_0 **v38;  // [bp-0x488]\n
    char v39;  // [bp-0x47e]\n
    char v40[2];  // [bp-0x478]\n
    unsigned short v41;  // [bp-0x46a]\n
    unsigned int *v42;  // [bp-0x468]\n
    struct struct_0 **v43;  // [bp-0x460]\n
    char v44;  // [bp-0x456]\n
    char *v45;  // [bp-0x450]\n
    unsigned short v46;  // [bp-0x442]\n
    unsigned int *v47;  // [bp-0x440]\n
    struct struct_0 **v48;  // [bp-0x438]\n
    char v49;  // [bp-0x42e]\n
    char v50[2];  // [bp-0x428]\n
    unsigned short v51;  // [bp-0x41a]\n
    unsigned int *v52;  // [bp-0x418]\n
    struct struct_0 **v53;  // [bp-0x410]\n
    char v54;  // [bp-0x408]\n
    char v55[8];  // [bp-0x3e8]\n
    unsigned int v56;  // [bp-0x3e0]\n
    unsigned int *v57;  // [bp-0x3d8]\n
    struct struct_0 **v58;  // [bp-0x3d0]\n
    unsigned long v59;  // [bp-0x3c8]\n
    char v60;  // [bp-0x3b9]\n
    unsigned int *v61;  // [bp-0x3b8]\n
    struct struct_0 **v62;  // [bp-0x3b0]\n
    unsigned long v63;  // [bp-0x3a8]\n
    char v64;  // [bp-0x399]\n
    unsigned int *v65;  // [bp-0x398]\n
    struct struct_0 **v66;  // [bp-0x390]\n
    unsigned long v67;  // [bp-0x388]\n
    char v68;  // [bp-0x379]\n
    unsigned int *v69;  // [bp-0x378]\n
    struct struct_0 **v70;  // [bp-0x370]\n
    char *v71;  // [bp-0x368]\n
    unsigned int v72;  // [bp-0x35c]\n
    unsigned int *v73;  // [bp-0x358]\n
    struct struct_0 **v74;  // [bp-0x350]\n
    char *v75;  // [bp-0x348]\n
    unsigned int v76;  // [bp-0x33c]\n
    unsigned int *v77;  // [bp-0x338]\n
    struct struct_0 **v78;  // [bp-0x330]\n
    char *v79;  // [bp-0x328]\n
    unsigned int v80;  // [bp-0x31c]\n
    unsigned int *v81;  // [bp-0x318]\n
    struct struct_0 **v82;  // [bp-0x310]\n
    char v83;  // [bp-0x308]\n
    unsigned short v84;  // [bp-0x302]\n
    unsigned int *v85;  // [bp-0x300]\n
    struct struct_0 **v86;  // [bp-0x2f8]\n
    char v87;  // [bp-0x2ed]\n
    char v88;  // [bp-0x2e9]\n
    unsigned int *v89;  // [bp-0x2e8]\n
    struct struct_0 **v90;  // [bp-0x2e0]\n
    char v91;  // [bp-0x2d8]\n
    unsigned int v92;  // [bp-0x2c0]\n
    unsigned int *v93;  // [bp-0x2b8]\n
    struct struct_0 **v94;  // [bp-0x2b0]\n
    char v95;  // [bp-0x2a8]\n
    unsigned int v96;  // [bp-0x290]\n
    unsigned int *v97;  // [bp-0x288]\n
    struct struct_0 **v98;  // [bp-0x280]\n
    char v99;  // [bp-0x278]\n
    unsigned int v100;  // [bp-0x260]\n
    unsigned int *v101;  // [bp-0x258]\n
    struct struct_0 **v102;  // [bp-0x250]\n
    char v103;  // [bp-0x248]\n
    unsigned int v104;  // [bp-0x230]\n
    unsigned int *v105;  // [bp-0x228]\n
    struct struct_0 **v106;  // [bp-0x220]\n
    char v107;  // [bp-0x218]\n
    unsigned int v108;  // [bp-0x200]\n
    unsigned int *v109;  // [bp-0x1f8]\n
    struct struct_0 **v110;  // [bp-0x1f0]\n
    char v111;  // [bp-0x1e8]\n
    unsigned int v112;  // [bp-0x1dc]\n
    unsigned int *v113;  // [bp-0x1d8]\n
    struct struct_0 **v114;  // [bp-0x1d0]\n
    char v115;  // [bp-0x1c8]\n
    unsigned int v116;  // [bp-0x1bc]\n
    unsigned int *v117;  // [bp-0x1b8]\n
    struct struct_0 **v118;  // [bp-0x1b0]\n
    char v119;  // [bp-0x1a8]\n
    unsigned int v120;  // [bp-0x19c]\n
    unsigned int *v121;  // [bp-0x198]\n
    struct struct_0 **v122;  // [bp-0x190]\n
    char v123;  // [bp-0x188]\n
    unsigned int v124;  // [bp-0x17c]\n
    unsigned int *v125;  // [bp-0x178]\n
    struct struct_0 **v126;  // [bp-0x170]\n
    char v127;  // [bp-0x168]\n
    unsigned int v128;  // [bp-0x15c]\n
    unsigned int *v129;  // [bp-0x158]\n
    struct struct_0 **v130;  // [bp-0x150]\n
    char v131;  // [bp-0x148]\n
    unsigned int v132;  // [bp-0x13c]\n
    unsigned int *v133;  // [bp-0x138]\n
    struct struct_0 **v134;  // [bp-0x130]\n
    unsigned long v135;  // [bp-0x128]\n
    unsigned short v136;  // [bp-0x11a]\n
    unsigned int *v137;  // [bp-0x118]\n
    struct struct_0 **v138;  // [bp-0x110]\n
    unsigned long v139;  // [bp-0x108]\n
    unsigned short v140;  // [bp-0xfa]\n
    unsigned int *v141;  // [bp-0xf8]\n
    struct struct_0 **v142;  // [bp-0xf0]\n
    char *v143;  // [bp-0xe8]\n
    unsigned int v144;  // [bp-0xdc]\n
    unsigned int *v145;  // [bp-0xd8]\n
    struct struct_0 **v146;  // [bp-0xd0]\n
    char *v147;  // [bp-0xc8]\n
    unsigned int v148;  // [bp-0xbc]\n
    unsigned int *v149;  // [bp-0xb8]\n
    struct struct_0 **v150;  // [bp-0xb0]\n
    char *v151;  // [bp-0xa8]\n
    unsigned int v152;  // [bp-0x9c]\n
    unsigned int *v153;  // [bp-0x98]\n
    struct struct_0 **v154;  // [bp-0x90]\n
    char v155;  // [bp-0x88]\n
    unsigned int v156;  // [bp-0x70]\n
    unsigned int *v157;  // [bp-0x68]\n
    struct struct_0 **v158;  // [bp-0x60]\n
    char v159;  // [bp-0x58]\n
    unsigned int v160;  // [bp-0x40]\n
    unsigned int *v161;  // [bp-0x38]\n
    struct struct_0 **v162;  // [bp-0x30]\n
    unsigned long v163;  // [bp-0x28]\n
    char v164;  // [bp-0x19]\n
    unsigned int *v165;  // [bp-0x18]\n
    struct struct_0 **v166;  // [bp-0x10]\n
    unsigned int *v168;  // rax\n
    struct struct_0 **v169;  // rax\n
    struct struct_0 **v170;  // rax\n
    unsigned int *v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_0 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    unsigned int *v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax, Other Possible Types: unsigned long\n
\n
    v32 = cgc__cookie;\n
    v31 = -1;\n
    if (cgc_sendline(1, \"===llamaschoppen===\", 19) < 0)\n
        cgc__terminate(1);\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(v70)->field_0;\n
    v168 = v69;\n
    *(v168) = *(v168) - 1;\n
    v169 = v70;\n
    *(v169) = *(v169) + 1;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_474f4a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_474f4a:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v170 = v70;\n
    *(v170) = &(*(v170))[v68];\n
    v171 = v69;\n
    *(v171) = *(v171) - v68;\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v86 = a0;\n
    v85 = a1;\n
    memset(&v83, 0, 6);\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    cgc_uint2str(&v83, 6, v84);\n
    v30 = &v83;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v172 = v85;\n
    *(v172) = *(v172) - 2;\n
    v173 = v86;\n
    *(v173) = *(v173) + 2;\n
    v130 = a0;\n
    v129 = a1;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = *(&*(v130));\n
    cgc_uint2str(&v127, 12, v128);\n
    v29 = &v127;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v127)) < 0)\n
        cgc__terminate(1);\n
    v174 = v129;\n
    *(v174) = *(v174) - 4;\n
    v175 = v130;\n
    *(v175) = *(v175) + 4;\n
    v126 = a0;\n
    v125 = a1;\n
    memset(&v123, 0, 12);\n
    if (*(v125) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = *(&*(v126));\n
    cgc_uint2str(&v123, 12, v124);\n
    v28 = &v123;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v176 = v125;\n
    *(v176) = *(v176) - 4;\n
    v177 = v126;\n
    *(v177) = *(v177) + 4;\n
    v82 = a0;\n
    v81 = a1;\n
    if (*(v81) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v81) >= 128)\n
        v27 = 128;\n
    else\n
        v27 = *(v81);\n
    v80 = v27;\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = cgc_calloc(134);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v79, \"Str: \");\n
    cgc_strncpy(v79 + 5, *(v82), v80);\n
    v179 = v82;\n
    *(v179) = &(*(v179))[4 + cgc_strlen(v79)];\n
    v181 = v81;\n
    *(v181) = *(v181) - (cgc_strlen(v79) + -4);\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v90 = a0;\n
    v89 = a1;\n
    memset(&v87, 0, 4);\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    cgc_uint2str(&v87, 4, v88);\n
    v26 = &v87;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v182 = v89;\n
    *(v182) = *(v182) - 1;\n
    v183 = v90;\n
    *(v183) = *(v183) + 1;\n
    v110 = a0;\n
    v109 = a1;\n
    memset(&v107, 0, 21);\n
    if (*(v109) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v108) = *(&*(v110));\n
    cgc_uint2str(&v107, 21, *(&v108));\n
    v25 = &v107;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v107)) < 0)\n
        cgc__terminate(1);\n
    v184 = v109;\n
    *(v184) = *(v184) - 8;\n
    v185 = v110;\n
    *(v185) = *(v185) + 8;\n
    v58 = a0;\n
    v57 = a1;\n
    *(&v55[0]) = *(v58);\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = 0;\n
    if (v55[0] << 56)\n
    {\n
        v24 = 0;\n
        if (v55[1] << 48)\n
        {\n
            v24 = 0;\n
            if (v55[2] << 40)\n
            {\n
                v24 = 0;\n
                if (v55[3] << 32)\n
                {\n
                    v24 = 0;\n
                    if ((v55[4] << 24))\n
                    {\n
                        v24 = 0;\n
                        if ((v55[5] << 16))\n
                        {\n
                            v24 = 0;\n
                            if ((v55[6] << 8))\n
                                v24 = v55[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v56) = v24 & 1;\n
    cgc_uint2str(&v54, 21, *(&v56));\n
    v23 = &v54;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v186 = v57;\n
    *(v186) = *(v186) - 8;\n
    v187 = v58;\n
    *(v187) = *(v187) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    if (*(v77) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v77) >= 128)\n
        v22 = 128;\n
    else\n
        v22 = *(v77);\n
    v76 = v22;\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = cgc_calloc(134);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v75, \"Str: \");\n
    cgc_strncpy(v75 + 5, *(v78), v76);\n
    v189 = v78;\n
    *(v189) = &(*(v189))[4 + cgc_strlen(v75)];\n
    v191 = v77;\n
    *(v191) = *(v191) - (cgc_strlen(v75) + -4);\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v162 = a0;\n
    v161 = a1;\n
    memset(&v159, 0, 21);\n
    if (*(v161) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v160) = *(&*(v162));\n
    cgc_uint2str(&v159, 21, *(&v160));\n
    v21 = &v159;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v159)) < 0)\n
        cgc__terminate(1);\n
    v192 = v161;\n
    *(v192) = *(v192) - 8;\n
    v193 = v162;\n
    *(v193) = *(v193) + 8;\n
    v142 = a0;\n
    v141 = a1;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v140 = *(&*(v142));\n
    v194 = v141;\n
    *(v194) = *(v194) - 2;\n
    v195 = v142;\n
    *(v195) = *(v195) + 2;\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_475d0a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_475d0a:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v196 = v141;\n
    *(v196) = *(v196) - v140;\n
    v197 = v142;\n
    *(v197) = &(*(v197))[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v122 = a0;\n
    v121 = a1;\n
    memset(&v119, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = *(&*(v122));\n
    cgc_uint2str(&v119, 12, v120);\n
    v20 = &v119;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v119)) < 0)\n
        cgc__terminate(1);\n
    v198 = v121;\n
    *(v198) = *(v198) - 4;\n
    v199 = v122;\n
    *(v199) = *(v199) + 4;\n
    v154 = a0;\n
    v153 = a1;\n
    if (*(v153) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v153) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v153);\n
    v152 = v19;\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = cgc_calloc(134);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v151, \"Str: \");\n
    cgc_strncpy(v151 + 5, *(v154), v152);\n
    v201 = v154;\n
    *(v201) = &(*(v201))[4 + cgc_strlen(v151)];\n
    v203 = v153;\n
    *(v203) = *(v203) - (cgc_strlen(v151) + -4);\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 21);\n
    if (*(v105) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v104) = *(&*(v106));\n
    cgc_uint2str(&v103, 21, *(&v104));\n
    v18 = &v103;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v204 = v105;\n
    *(v204) = *(v204) - 8;\n
    v205 = v106;\n
    *(v205) = *(v205) + 8;\n
    v118 = a0;\n
    v117 = a1;\n
    memset(&v115, 0, 12);\n
    if (*(v117) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = *(&*(v118));\n
    cgc_uint2str(&v115, 12, v116);\n
    v17 = &v115;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v115)) < 0)\n
        cgc__terminate(1);\n
    v206 = v117;\n
    *(v206) = *(v206) - 4;\n
    v207 = v118;\n
    *(v207) = *(v207) + 4;\n
    v114 = a0;\n
    v113 = a1;\n
    memset(&v111, 0, 12);\n
    if (*(v113) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(&*(v114));\n
    cgc_uint2str(&v111, 12, v112);\n
    v16 = &v111;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v208 = v113;\n
    *(v208) = *(v208) - 4;\n
    v209 = v114;\n
    *(v209) = *(v209) + 4;\n
    v150 = a0;\n
    v149 = a1;\n
    if (*(v149) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v149) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v149);\n
    v148 = v15;\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = cgc_calloc(134);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v147, \"Str: \");\n
    cgc_strncpy(v147 + 5, *(v150), v148);\n
    v211 = v150;\n
    *(v211) = &(*(v211))[4 + cgc_strlen(v147)];\n
    v213 = v149;\n
    *(v213) = *(v213) - (cgc_strlen(v147) + -4);\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v100) = *(&*(v102));\n
    cgc_uint2str(&v99, 21, *(&v100));\n
    v14 = &v99;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v214 = v101;\n
    *(v214) = *(v214) - 8;\n
    v215 = v102;\n
    *(v215) = *(v215) + 8;\n
    v146 = a0;\n
    v145 = a1;\n
    if (*(v145) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v145) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v145);\n
    v144 = v13;\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v143 = cgc_calloc(134);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v143, \"Str: \");\n
    cgc_strncpy(v143 + 5, *(v146), v144);\n
    v217 = v146;\n
    *(v217) = &(*(v217))[4 + cgc_strlen(v143)];\n
    v219 = v145;\n
    *(v219) = *(v219) - (cgc_strlen(v143) + -4);\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    v220 = v65;\n
    *(v220) = *(v220) - 1;\n
    v221 = v66;\n
    *(v221) = *(v221) + 1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_4769c8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4769c8:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v222 = v66;\n
    *(v222) = &(*(v222))[v64];\n
    v223 = v65;\n
    *(v223) = *(v223) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v138 = a0;\n
    v137 = a1;\n
    if (*(v137) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v136 = *(&*(v138));\n
    v224 = v137;\n
    *(v224) = *(v224) - 2;\n
    v225 = v138;\n
    *(v225) = *(v225) + 2;\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_476b98;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_476b98:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v226 = v137;\n
    *(v226) = *(v226) - v136;\n
    v227 = v138;\n
    *(v227) = &(*(v227))[v136];\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v98 = a0;\n
    v97 = a1;\n
    memset(&v95, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v96) = *(&*(v98));\n
    cgc_uint2str(&v95, 21, *(&v96));\n
    v12 = &v95;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v95)) < 0)\n
        cgc__terminate(1);\n
    v228 = v97;\n
    *(v228) = *(v228) - 8;\n
    v229 = v98;\n
    *(v229) = *(v229) + 8;\n
    v134 = a0;\n
    v133 = a1;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v132 = *(&*(v134));\n
    cgc_uint2str(&v131, 12, v132);\n
    v11 = &v131;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v131)) < 0)\n
        cgc__terminate(1);\n
    v230 = v133;\n
    *(v230) = *(v230) - 4;\n
    v231 = v134;\n
    *(v231) = *(v231) + 4;\n
    v53 = a0;\n
    v52 = a1;\n
    *(&v50) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v50[0] << 8))\n
        v10 = v50[1];\n
    v51 = v10 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v9 = &v49;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v232 = v52;\n
    *(v232) = *(v232) - 2;\n
    v233 = v53;\n
    *(v233) = *(v233) + 2;\n
    v166 = a0;\n
    v165 = a1;\n
    if (*(v165) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = *(v166)->field_0;\n
    v234 = v165;\n
    *(v234) = *(v234) - 1;\n
    v235 = v166;\n
    *(v235) = *(v235) + 1;\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_4770a4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4770a4:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v236 = v166;\n
    *(v236) = &(*(v236))[v164];\n
    v237 = v165;\n
    *(v237) = *(v237) - v164;\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v48 = a0;\n
    v47 = a1;\n
    v45 = &*(v48)->field_0;\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((*(v45) << 8))\n
        v8 = v45[1];\n
    v46 = v8 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v7 = &v44;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v238 = v47;\n
    *(v238) = *(v238) - 2;\n
    v239 = v48;\n
    *(v239) = *(v239) + 2;\n
    v158 = a0;\n
    v157 = a1;\n
    memset(&v155, 0, 21);\n
    if (*(v157) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v156) = *(&*(v158));\n
    cgc_uint2str(&v155, 21, *(&v156));\n
    v6 = &v155;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v155)) < 0)\n
        cgc__terminate(1);\n
    v240 = v157;\n
    *(v240) = *(v240) - 8;\n
    v241 = v158;\n
    *(v241) = *(v241) + 8;\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v40[0] << 8))\n
        v5 = v40[1];\n
    v41 = v5 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v4 = &v39;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v242 = v42;\n
    *(v242) = *(v242) - 2;\n
    v243 = v43;\n
    *(v243) = *(v243) + 2;\n
    v94 = a0;\n
    v93 = a1;\n
    memset(&v91, 0, 21);\n
    if (*(v93) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v92) = *(&*(v94));\n
    cgc_uint2str(&v91, 21, *(&v92));\n
    v3 = &v91;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v91)) < 0)\n
        cgc__terminate(1);\n
    v244 = v93;\n
    *(v244) = *(v244) - 8;\n
    v245 = v94;\n
    *(v245) = *(v245) + 8;\n
    v74 = a0;\n
    v73 = a1;\n
    if (*(v73) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v73) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v73);\n
    v72 = v2;\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = cgc_calloc(134);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v71, \"Str: \");\n
    cgc_strncpy(v71 + 5, *(v74), v72);\n
    v247 = v74;\n
    *(v247) = &(*(v247))[4 + cgc_strlen(v71)];\n
    v249 = v73;\n
    *(v249) = *(v249) - (cgc_strlen(v71) + -4);\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(v62)->field_0;\n
    v250 = v61;\n
    *(v250) = *(v250) - 1;\n
    v251 = v62;\n
    *(v251) = *(v251) + 1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4778c0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4778c0:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v252 = v62;\n
    *(v252) = &(*(v252))[v60];\n
    v253 = v61;\n
    *(v253) = *(v253) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35) = *(v38);\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v35[0] << 8))\n
        v1 = v35[1];\n
    v36 = v1 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v0 = &v34;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v254 = v37;\n
    *(v254) = *(v254) - 2;\n
    v255 = v38;\n
    *(v255) = *(v255) + 2;\n
    v32 ^= cgc__cookie;\n
    if (v32)\n
        cgc___stack_cookie_fail();\n
    v256 = a1;\n
    if (*(a1) > 0 && v31 >= 0)\n
    {\n
        v256 = v31;\n
        if (v256 < 0)\n
            v256 = *(&(&v33)[8 * v31])(a0, a1);\n
    }\n
    return v256;\n
}\n
", "4684642:sub_477b62": null, "4684656:cgc_process_llamasart": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasart(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x770]\n
    struct_1 *v1;  // [bp-0x768]\n
    char v2;  // [bp-0x759]\n
    struct_1 *v3;  // [bp-0x758]\n
    char v4;  // [bp-0x749]\n
    unsigned int v5;  // [bp-0x748]\n
    unsigned int v6;  // [bp-0x744]\n
    struct_1 *v7;  // [bp-0x740]\n
    struct_1 *v8;  // [bp-0x738]\n
    struct_1 *v9;  // [bp-0x730]\n
    char v10;  // [bp-0x721]\n
    struct_1 *v11;  // [bp-0x720]\n
    unsigned int v12;  // [bp-0x714]\n
    struct_1 *v13;  // [bp-0x710]\n
    unsigned int v14;  // [bp-0x704]\n
    struct_1 *v15;  // [bp-0x700]\n
    struct_1 *v16;  // [bp-0x6f8]\n
    struct_1 *v17;  // [bp-0x6f0]\n
    struct_1 *v18;  // [bp-0x6e8]\n
    char v19;  // [bp-0x6d9]\n
    struct_1 *v20;  // [bp-0x6d8]\n
    struct_1 *v21;  // [bp-0x6d0]\n
    struct_1 *v22;  // [bp-0x6c8]\n
    struct_1 *v23;  // [bp-0x6c0]\n
    struct_1 *v24;  // [bp-0x6b8]\n
    unsigned int v25;  // [bp-0x6ac]\n
    struct_1 *v26;  // [bp-0x6a8]\n
    struct_1 *v27;  // [bp-0x6a0]\n
    struct_1 *v28;  // [bp-0x698]\n
    struct_1 *v29;  // [bp-0x690]\n
    struct_1 *v30;  // [bp-0x688]\n
    struct_1 *v31;  // [bp-0x680]\n
    char v32;  // [bp-0x671]\n
    struct_1 *v33;  // [bp-0x670]\n
    struct_1 *v34;  // [bp-0x668]\n
    char v35;  // [bp-0x659]\n
    struct_1 *v36;  // [bp-0x658]\n
    char v37;  // [bp-0x649]\n
    struct_1 *v38;  // [bp-0x648]\n
    struct_1 *v39;  // [bp-0x640]\n
    char v40;  // [bp-0x631]\n
    struct_1 *v41;  // [bp-0x630]\n
    unsigned int v42;  // [bp-0x628]\n
    unsigned int v43;  // [bp-0x624]\n
    char v44;  // [bp-0x620]\n
    char v45;  // [bp-0x606]\n
    char v46[2];  // [bp-0x600]\n
    unsigned short v47;  // [bp-0x5f2]\n
    unsigned int *v48;  // [bp-0x5f0]\n
    struct struct_0 **v49;  // [bp-0x5e8]\n
    char v50;  // [bp-0x5de]\n
    char v51[2];  // [bp-0x5d8]\n
    unsigned short v52;  // [bp-0x5ca]\n
    unsigned int *v53;  // [bp-0x5c8]\n
    struct struct_0 **v54;  // [bp-0x5c0]\n
    char v55;  // [bp-0x5b6]\n
    char v56[2];  // [bp-0x5b0]\n
    unsigned short v57;  // [bp-0x5a2]\n
    unsigned int *v58;  // [bp-0x5a0]\n
    struct struct_0 **v59;  // [bp-0x598]\n
    char v60;  // [bp-0x58e]\n
    char *v61;  // [bp-0x588]\n
    unsigned short v62;  // [bp-0x57a]\n
    unsigned int *v63;  // [bp-0x578]\n
    struct struct_0 **v64;  // [bp-0x570]\n
    char v65;  // [bp-0x566]\n
    char v66[2];  // [bp-0x560]\n
    unsigned short v67;  // [bp-0x552]\n
    unsigned int *v68;  // [bp-0x550]\n
    struct struct_0 **v69;  // [bp-0x548]\n
    char v70;  // [bp-0x53e]\n
    char v71[2];  // [bp-0x538]\n
    unsigned short v72;  // [bp-0x52a]\n
    unsigned int *v73;  // [bp-0x528]\n
    struct struct_0 **v74;  // [bp-0x520]\n
    char v75;  // [bp-0x518]\n
    char v76[8];  // [bp-0x4f8]\n
    unsigned int v77;  // [bp-0x4f0]\n
    unsigned int *v78;  // [bp-0x4e8]\n
    struct struct_0 **v79;  // [bp-0x4e0]\n
    unsigned long v80;  // [bp-0x4d8]\n
    char v81;  // [bp-0x4c9]\n
    unsigned int *v82;  // [bp-0x4c8]\n
    struct struct_0 **v83;  // [bp-0x4c0]\n
    unsigned long v84;  // [bp-0x4b8]\n
    char v85;  // [bp-0x4a9]\n
    unsigned int *v86;  // [bp-0x4a8]\n
    struct struct_0 **v87;  // [bp-0x4a0]\n
    unsigned long v88;  // [bp-0x498]\n
    char v89;  // [bp-0x489]\n
    unsigned int *v90;  // [bp-0x488]\n
    struct struct_0 **v91;  // [bp-0x480]\n
    char v92;  // [bp-0x478]\n
    unsigned short v93;  // [bp-0x472]\n
    unsigned int *v94;  // [bp-0x470]\n
    struct struct_0 **v95;  // [bp-0x468]\n
    char v96;  // [bp-0x45d]\n
    char v97;  // [bp-0x459]\n
    unsigned int *v98;  // [bp-0x458]\n
    struct struct_0 **v99;  // [bp-0x450]\n
    char v100;  // [bp-0x445]\n
    char v101;  // [bp-0x441]\n
    unsigned int *v102;  // [bp-0x440]\n
    struct struct_0 **v103;  // [bp-0x438]\n
    char v104;  // [bp-0x42d]\n
    char v105;  // [bp-0x429]\n
    unsigned int *v106;  // [bp-0x428]\n
    struct struct_0 **v107;  // [bp-0x420]\n
    char v108;  // [bp-0x415]\n
    char v109;  // [bp-0x411]\n
    unsigned int *v110;  // [bp-0x410]\n
    struct struct_0 **v111;  // [bp-0x408]\n
    char v112;  // [bp-0x3fd]\n
    char v113;  // [bp-0x3f9]\n
    unsigned int *v114;  // [bp-0x3f8]\n
    struct struct_0 **v115;  // [bp-0x3f0]\n
    char v116;  // [bp-0x3e5]\n
    char v117;  // [bp-0x3e1]\n
    unsigned int *v118;  // [bp-0x3e0]\n
    struct struct_0 **v119;  // [bp-0x3d8]\n
    char v120;  // [bp-0x3cd]\n
    char v121;  // [bp-0x3c9]\n
    unsigned int *v122;  // [bp-0x3c8]\n
    struct struct_0 **v123;  // [bp-0x3c0]\n
    char v124;  // [bp-0x3b8]\n
    unsigned int v125;  // [bp-0x3a0]\n
    unsigned int *v126;  // [bp-0x398]\n
    struct struct_0 **v127;  // [bp-0x390]\n
    char v128;  // [bp-0x388]\n
    unsigned int v129;  // [bp-0x370]\n
    unsigned int *v130;  // [bp-0x368]\n
    struct struct_0 **v131;  // [bp-0x360]\n
    char v132;  // [bp-0x358]\n
    unsigned int v133;  // [bp-0x340]\n
    unsigned int *v134;  // [bp-0x338]\n
    struct struct_0 **v135;  // [bp-0x330]\n
    char v136;  // [bp-0x328]\n
    unsigned int v137;  // [bp-0x310]\n
    unsigned int *v138;  // [bp-0x308]\n
    struct struct_0 **v139;  // [bp-0x300]\n
    char v140;  // [bp-0x2f8]\n
    unsigned int v141;  // [bp-0x2ec]\n
    unsigned int *v142;  // [bp-0x2e8]\n
    struct struct_0 **v143;  // [bp-0x2e0]\n
    char v144;  // [bp-0x2d8]\n
    unsigned int v145;  // [bp-0x2cc]\n
    unsigned int *v146;  // [bp-0x2c8]\n
    struct struct_0 **v147;  // [bp-0x2c0]\n
    char v148;  // [bp-0x2b8]\n
    unsigned int v149;  // [bp-0x2ac]\n
    unsigned int *v150;  // [bp-0x2a8]\n
    struct struct_0 **v151;  // [bp-0x2a0]\n
    char v152;  // [bp-0x298]\n
    unsigned int v153;  // [bp-0x28c]\n
    unsigned int *v154;  // [bp-0x288]\n
    struct struct_0 **v155;  // [bp-0x280]\n
    char v156;  // [bp-0x278]\n
    unsigned int v157;  // [bp-0x26c]\n
    unsigned int *v158;  // [bp-0x268]\n
    struct struct_0 **v159;  // [bp-0x260]\n
    char v160;  // [bp-0x258]\n
    unsigned int v161;  // [bp-0x24c]\n
    unsigned int *v162;  // [bp-0x248]\n
    struct struct_0 **v163;  // [bp-0x240]\n
    char v164;  // [bp-0x238]\n
    unsigned int v165;  // [bp-0x22c]\n
    unsigned int *v166;  // [bp-0x228]\n
    struct struct_0 **v167;  // [bp-0x220]\n
    unsigned long v168;  // [bp-0x218]\n
    unsigned short v169;  // [bp-0x20a]\n
    unsigned int *v170;  // [bp-0x208]\n
    struct struct_0 **v171;  // [bp-0x200]\n
    unsigned long v172;  // [bp-0x1f8]\n
    unsigned short v173;  // [bp-0x1ea]\n
    unsigned int *v174;  // [bp-0x1e8]\n
    struct struct_0 **v175;  // [bp-0x1e0]\n
    unsigned long v176;  // [bp-0x1d8]\n
    unsigned short v177;  // [bp-0x1ca]\n
    unsigned int *v178;  // [bp-0x1c8]\n
    struct struct_0 **v179;  // [bp-0x1c0]\n
    unsigned long v180;  // [bp-0x1b8]\n
    unsigned short v181;  // [bp-0x1aa]\n
    unsigned int *v182;  // [bp-0x1a8]\n
    struct struct_0 **v183;  // [bp-0x1a0]\n
    unsigned long v184;  // [bp-0x198]\n
    unsigned short v185;  // [bp-0x18a]\n
    unsigned int *v186;  // [bp-0x188]\n
    struct struct_0 **v187;  // [bp-0x180]\n
    char v188;  // [bp-0x174]\n
    char *v189;  // [bp-0x168]\n
    unsigned int v190;  // [bp-0x15c]\n
    unsigned int *v191;  // [bp-0x158]\n
    struct struct_0 **v192;  // [bp-0x150]\n
    char *v193;  // [bp-0x148]\n
    unsigned int v194;  // [bp-0x13c]\n
    unsigned int *v195;  // [bp-0x138]\n
    struct struct_0 **v196;  // [bp-0x130]\n
    char *v197;  // [bp-0x128]\n
    unsigned int v198;  // [bp-0x11c]\n
    unsigned int *v199;  // [bp-0x118]\n
    struct struct_0 **v200;  // [bp-0x110]\n
    char *v201;  // [bp-0x108]\n
    unsigned int v202;  // [bp-0xfc]\n
    unsigned int *v203;  // [bp-0xf8]\n
    struct struct_0 **v204;  // [bp-0xf0]\n
    char *v205;  // [bp-0xe8]\n
    unsigned int v206;  // [bp-0xdc]\n
    unsigned int *v207;  // [bp-0xd8]\n
    struct struct_0 **v208;  // [bp-0xd0]\n
    char *v209;  // [bp-0xc8]\n
    unsigned int v210;  // [bp-0xbc]\n
    unsigned int *v211;  // [bp-0xb8]\n
    struct struct_0 **v212;  // [bp-0xb0]\n
    char v213;  // [bp-0xa8]\n
    unsigned int v214;  // [bp-0x90]\n
    unsigned int *v215;  // [bp-0x88]\n
    struct struct_0 **v216;  // [bp-0x80]\n
    char v217;  // [bp-0x78]\n
    unsigned int v218;  // [bp-0x60]\n
    unsigned int *v219;  // [bp-0x58]\n
    struct struct_0 **v220;  // [bp-0x50]\n
    unsigned long v221;  // [bp-0x48]\n
    char v222;  // [bp-0x39]\n
    unsigned int *v223;  // [bp-0x38]\n
    struct struct_0 **v224;  // [bp-0x30]\n
    unsigned long v225;  // [bp-0x28]\n
    char v226;  // [bp-0x19]\n
    unsigned int *v227;  // [bp-0x18]\n
    struct struct_0 **v228;  // [bp-0x10]\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    struct struct_0 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v304;  // rax\n
    struct struct_0 **v305;  // rax\n
    struct struct_0 **v306;  // rax\n
    unsigned int *v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    unsigned int *v310;  // rax\n
    struct struct_0 **v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    struct struct_0 **v315;  // rax\n
    unsigned int *v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_0 **v319;  // rax\n
    unsigned int *v320;  // rax\n
    struct struct_0 **v321;  // rax\n
    unsigned int *v322;  // rax\n
    struct struct_0 **v323;  // rax\n
    unsigned int *v324;  // rax\n
    struct struct_0 **v325;  // rax\n
    unsigned int *v326;  // rax\n
    struct struct_0 **v327;  // rax\n
    struct struct_0 **v328;  // rax\n
    unsigned int *v329;  // rax\n
    struct struct_0 **v331;  // rax\n
    unsigned int *v333;  // rax\n
    struct struct_0 **v335;  // rax\n
    unsigned int *v337;  // rax\n
    unsigned int *v338;  // rax\n
    struct struct_0 **v339;  // rax\n
    unsigned int *v340;  // rax\n
    struct struct_0 **v341;  // rax\n
    unsigned int *v342;  // rax\n
    struct struct_0 **v343;  // rax\n
    struct struct_0 **v344;  // rax\n
    unsigned int *v345;  // rax\n
    unsigned int *v346;  // rax\n
    struct struct_0 **v347;  // rax\n
    unsigned int *v348;  // rax, Other Possible Types: unsigned long\n
\n
    v43 = cgc__cookie;\n
    v42 = -1;\n
    if (cgc_sendline(1, \"===llamasart===\", 15) < 0)\n
        cgc__terminate(1);\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 4);\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(v123)->field_0;\n
    cgc_uint2str(&v120, 4, v121);\n
    v41 = &v120;\n
    if (cgc_sendline(1, v41, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v230 = v122;\n
    *(v230) = *(v230) - 1;\n
    v231 = v123;\n
    *(v231) = *(v231) + 1;\n
    v74 = a0;\n
    v73 = a1;\n
    *(&v71) = *(v74);\n
    memset(&v70, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v40 = 0;\n
    if ((v71[0] << 8))\n
        v40 = v71[1];\n
    v72 = v40 & 1;\n
    cgc_uint2str(&v70, 6, v72);\n
    v39 = &v70;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v232 = v73;\n
    *(v232) = *(v232) - 2;\n
    v233 = v74;\n
    *(v233) = *(v233) + 2;\n
    v159 = a0;\n
    v158 = a1;\n
    memset(&v156, 0, 12);\n
    if (*(v158) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v157 = *(&*(v159));\n
    cgc_uint2str(&v156, 12, v157);\n
    v38 = &v156;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v156)) < 0)\n
        cgc__terminate(1);\n
    v234 = v158;\n
    *(v234) = *(v234) - 4;\n
    v235 = v159;\n
    *(v235) = *(v235) + 4;\n
    v228 = a0;\n
    v227 = a1;\n
    if (*(v227) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v226 = *(v228)->field_0;\n
    v236 = v227;\n
    *(v236) = *(v236) - 1;\n
    v237 = v228;\n
    *(v237) = *(v237) + 1;\n
    if (v226 <= *(v227) && !(!v226))\n
        goto LABEL_477fe7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_477fe7:\n
    v225 = cgc_calloc(v226);\n
    if (!v225)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v225, *(v228), v226);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v238 = v228;\n
    *(v238) = &(*(v238))[v226];\n
    v239 = v227;\n
    *(v239) = *(v239) - v226;\n
    cgc_checkheap();\n
    cgc_free(v225);\n
    v187 = a0;\n
    v186 = a1;\n
    if (*(v186) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = *(&*(v187));\n
    v240 = v186;\n
    *(v240) = *(v240) - 2;\n
    v241 = v187;\n
    *(v241) = *(v241) + 2;\n
    if (v185 <= *(v186) && !(!v185))\n
        goto LABEL_478196;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_478196:\n
    v184 = cgc_calloc(v185);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v184, *(v187), v185);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v242 = v186;\n
    *(v242) = *(v242) - v185;\n
    v243 = v187;\n
    *(v243) = &(*(v243))[v185];\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    v192 = a0;\n
    v191 = a1;\n
    v189 = &*(v192)->field_0;\n
    memset(&v188, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = 0;\n
    if ((*(v189) << 24))\n
    {\n
        v37 = 0;\n
        if ((v189[1] << 16))\n
        {\n
            v37 = 0;\n
            if ((v189[2] << 8))\n
                v37 = v189[3];\n
        }\n
    }\n
    v190 = v37 & 1;\n
    cgc_uint2str(&v188, 12, v190);\n
    v36 = &v188;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v188)) < 0)\n
        cgc__terminate(1);\n
    v244 = v191;\n
    *(v244) = *(v244) - 4;\n
    v245 = v192;\n
    *(v245) = *(v245) + 4;\n
    v91 = a0;\n
    v90 = a1;\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = *(v91)->field_0;\n
    v246 = v90;\n
    *(v246) = *(v246) - 1;\n
    v247 = v91;\n
    *(v247) = *(v247) + 1;\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_4784e8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4784e8:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v248 = v91;\n
    *(v248) = &(*(v248))[v89];\n
    v249 = v90;\n
    *(v249) = *(v249) - v89;\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v183 = a0;\n
    v182 = a1;\n
    if (*(v182) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v181 = *(&*(v183));\n
    v250 = v182;\n
    *(v250) = *(v250) - 2;\n
    v251 = v183;\n
    *(v251) = *(v251) + 2;\n
    if (v181 <= *(v182) && !(!v181))\n
        goto LABEL_4786b8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4786b8:\n
    v180 = cgc_calloc(v181);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v180, *(v183), v181);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v252 = v182;\n
    *(v252) = *(v252) - v181;\n
    v253 = v183;\n
    *(v253) = &(*(v253))[v181];\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    v79 = a0;\n
    v78 = a1;\n
    *(&v76[0]) = *(v79);\n
    memset(&v75, 0, 21);\n
    if (*(v78) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if (v76[0] << 56)\n
    {\n
        v35 = 0;\n
        if (v76[1] << 48)\n
        {\n
            v35 = 0;\n
            if (v76[2] << 40)\n
            {\n
                v35 = 0;\n
                if (v76[3] << 32)\n
                {\n
                    v35 = 0;\n
                    if ((v76[4] << 24))\n
                    {\n
                        v35 = 0;\n
                        if ((v76[5] << 16))\n
                        {\n
                            v35 = 0;\n
                            if ((v76[6] << 8))\n
                                v35 = v76[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v77) = v35 & 1;\n
    cgc_uint2str(&v75, 21, *(&v77));\n
    v34 = &v75;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v254 = v78;\n
    *(v254) = *(v254) - 8;\n
    v255 = v79;\n
    *(v255) = *(v255) + 8;\n
    v139 = a0;\n
    v138 = a1;\n
    memset(&v136, 0, 21);\n
    if (*(v138) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v137) = *(&*(v139));\n
    cgc_uint2str(&v136, 21, *(&v137));\n
    v33 = &v136;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v136)) < 0)\n
        cgc__terminate(1);\n
    v256 = v138;\n
    *(v256) = *(v256) - 8;\n
    v257 = v139;\n
    *(v257) = *(v257) + 8;\n
    v69 = a0;\n
    v68 = a1;\n
    *(&v66) = *(v69);\n
    memset(&v65, 0, 6);\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if ((v66[0] << 8))\n
        v32 = v66[1];\n
    v67 = v32 & 1;\n
    cgc_uint2str(&v65, 6, v67);\n
    v31 = &v65;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v258 = v68;\n
    *(v258) = *(v258) - 2;\n
    v259 = v69;\n
    *(v259) = *(v259) + 2;\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 4);\n
    if (*(v118) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(v119)->field_0;\n
    cgc_uint2str(&v116, 4, v117);\n
    v30 = &v116;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v260 = v118;\n
    *(v260) = *(v260) - 1;\n
    v261 = v119;\n
    *(v261) = *(v261) + 1;\n
    v155 = a0;\n
    v154 = a1;\n
    memset(&v152, 0, 12);\n
    if (*(v154) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v153 = *(&*(v155));\n
    cgc_uint2str(&v152, 12, v153);\n
    v29 = &v152;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v152)) < 0)\n
        cgc__terminate(1);\n
    v262 = v154;\n
    *(v262) = *(v262) - 4;\n
    v263 = v155;\n
    *(v263) = *(v263) + 4;\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 4);\n
    if (*(v114) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(v115)->field_0;\n
    cgc_uint2str(&v112, 4, v113);\n
    v28 = &v112;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v264 = v114;\n
    *(v264) = *(v264) - 1;\n
    v265 = v115;\n
    *(v265) = *(v265) + 1;\n
    v151 = a0;\n
    v150 = a1;\n
    memset(&v148, 0, 12);\n
    if (*(v150) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v149 = *(&*(v151));\n
    cgc_uint2str(&v148, 12, v149);\n
    v27 = &v148;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v148)) < 0)\n
        cgc__terminate(1);\n
    v266 = v150;\n
    *(v266) = *(v266) - 4;\n
    v267 = v151;\n
    *(v267) = *(v267) + 4;\n
    v179 = a0;\n
    v178 = a1;\n
    if (*(v178) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v177 = *(&*(v179));\n
    v268 = v178;\n
    *(v268) = *(v268) - 2;\n
    v269 = v179;\n
    *(v269) = *(v269) + 2;\n
    if (v177 <= *(v178) && !(!v177))\n
        goto LABEL_4790f6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4790f6:\n
    v176 = cgc_calloc(v177);\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v176, *(v179), v177);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v270 = v178;\n
    *(v270) = *(v270) - v177;\n
    v271 = v179;\n
    *(v271) = &(*(v271))[v177];\n
    cgc_checkheap();\n
    cgc_free(v176);\n
    v167 = a0;\n
    v166 = a1;\n
    memset(&v164, 0, 12);\n
    if (*(v166) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = *(&*(v167));\n
    cgc_uint2str(&v164, 12, v165);\n
    v26 = &v164;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v164)) < 0)\n
        cgc__terminate(1);\n
    v272 = v166;\n
    *(v272) = *(v272) - 4;\n
    v273 = v167;\n
    *(v273) = *(v273) + 4;\n
    v212 = a0;\n
    v211 = a1;\n
    if (*(v211) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v211) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v211);\n
    v210 = v25;\n
    if (!v210)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v209 = cgc_calloc(134);\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v209, \"Str: \");\n
    cgc_strncpy(v209 + 5, *(v212), v210);\n
    v275 = v212;\n
    *(v275) = &(*(v275))[4 + cgc_strlen(v209)];\n
    v277 = v211;\n
    *(v277) = *(v277) - (cgc_strlen(v209) + -4);\n
    cgc_checkheap();\n
    cgc_free(v209);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 6);\n
    if (*(v94) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(&*(v95));\n
    cgc_uint2str(&v92, 6, v93);\n
    v24 = &v92;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v278 = v94;\n
    *(v278) = *(v278) - 2;\n
    v279 = v95;\n
    *(v279) = *(v279) + 2;\n
    v135 = a0;\n
    v134 = a1;\n
    memset(&v132, 0, 21);\n
    if (*(v134) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v133) = *(&*(v135));\n
    cgc_uint2str(&v132, 21, *(&v133));\n
    v23 = &v132;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v132)) < 0)\n
        cgc__terminate(1);\n
    v280 = v134;\n
    *(v280) = *(v280) - 8;\n
    v281 = v135;\n
    *(v281) = *(v281) + 8;\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 4);\n
    if (*(v110) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = *(v111)->field_0;\n
    cgc_uint2str(&v108, 4, v109);\n
    v22 = &v108;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v282 = v110;\n
    *(v282) = *(v282) - 1;\n
    v283 = v111;\n
    *(v283) = *(v283) + 1;\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 4);\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(v107)->field_0;\n
    cgc_uint2str(&v104, 4, v105);\n
    v21 = &v104;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v284 = v106;\n
    *(v284) = *(v284) - 1;\n
    v285 = v107;\n
    *(v285) = *(v285) + 1;\n
    v147 = a0;\n
    v146 = a1;\n
    memset(&v144, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = *(&*(v147));\n
    cgc_uint2str(&v144, 12, v145);\n
    v20 = &v144;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v144)) < 0)\n
        cgc__terminate(1);\n
    v286 = v146;\n
    *(v286) = *(v286) - 4;\n
    v287 = v147;\n
    *(v287) = *(v287) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    v61 = &*(v64)->field_0;\n
    memset(&v60, 0, 6);\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((*(v61) << 8))\n
        v19 = v61[1];\n
    v62 = v19 & 1;\n
    cgc_uint2str(&v60, 6, v62);\n
    v18 = &v60;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v288 = v63;\n
    *(v288) = *(v288) - 2;\n
    v289 = v64;\n
    *(v289) = *(v289) + 2;\n
    v143 = a0;\n
    v142 = a1;\n
    memset(&v140, 0, 12);\n
    if (*(v142) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = *(&*(v143));\n
    cgc_uint2str(&v140, 12, v141);\n
    v17 = &v140;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v140)) < 0)\n
        cgc__terminate(1);\n
    v290 = v142;\n
    *(v290) = *(v290) - 4;\n
    v291 = v143;\n
    *(v291) = *(v291) + 4;\n
    v131 = a0;\n
    v130 = a1;\n
    memset(&v128, 0, 21);\n
    if (*(v130) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v129) = *(&*(v131));\n
    cgc_uint2str(&v128, 21, *(&v129));\n
    v16 = &v128;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v128)) < 0)\n
        cgc__terminate(1);\n
    v292 = v130;\n
    *(v292) = *(v292) - 8;\n
    v293 = v131;\n
    *(v293) = *(v293) + 8;\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 4);\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = *(v103)->field_0;\n
    cgc_uint2str(&v100, 4, v101);\n
    v15 = &v100;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v294 = v102;\n
    *(v294) = *(v294) - 1;\n
    v295 = v103;\n
    *(v295) = *(v295) + 1;\n
    v208 = a0;\n
    v207 = a1;\n
    if (*(v207) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v207) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v207);\n
    v206 = v14;\n
    if (!v206)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v205 = cgc_calloc(134);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v205, \"Str: \");\n
    cgc_strncpy(v205 + 5, *(v208), v206);\n
    v297 = v208;\n
    *(v297) = &(*(v297))[4 + cgc_strlen(v205)];\n
    v299 = v207;\n
    *(v299) = *(v299) - (cgc_strlen(v205) + -4);\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v175 = a0;\n
    v174 = a1;\n
    if (*(v174) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v173 = *(&*(v175));\n
    v300 = v174;\n
    *(v300) = *(v300) - 2;\n
    v301 = v175;\n
    *(v301) = *(v301) + 2;\n
    if (v173 <= *(v174) && !(!v173))\n
        goto LABEL_47a11e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47a11e:\n
    v172 = cgc_calloc(v173);\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v172, *(v175), v173);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v302 = v174;\n
    *(v302) = *(v302) - v173;\n
    v303 = v175;\n
    *(v303) = &(*(v303))[v173];\n
    cgc_checkheap();\n
    cgc_free(v172);\n
    v224 = a0;\n
    v223 = a1;\n
    if (*(v223) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v222 = *(v224)->field_0;\n
    v304 = v223;\n
    *(v304) = *(v304) - 1;\n
    v305 = v224;\n
    *(v305) = *(v305) + 1;\n
    if (v222 <= *(v223) && !(!v222))\n
        goto LABEL_47a2ce;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47a2ce:\n
    v221 = cgc_calloc(v222);\n
    if (!v221)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v221, *(v224), v222);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v306 = v224;\n
    *(v306) = &(*(v306))[v222];\n
    v307 = v223;\n
    *(v307) = *(v307) - v222;\n
    cgc_checkheap();\n
    cgc_free(v221);\n
    v171 = a0;\n
    v170 = a1;\n
    if (*(v170) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v169 = *(&*(v171));\n
    v308 = v170;\n
    *(v308) = *(v308) - 2;\n
    v309 = v171;\n
    *(v309) = *(v309) + 2;\n
    if (v169 <= *(v170) && !(!v169))\n
        goto LABEL_47a47d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47a47d:\n
    v168 = cgc_calloc(v169);\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v168, *(v171), v169);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v310 = v170;\n
    *(v310) = *(v310) - v169;\n
    v311 = v171;\n
    *(v311) = &(*(v311))[v169];\n
    cgc_checkheap();\n
    cgc_free(v168);\n
    v127 = a0;\n
    v126 = a1;\n
    memset(&v124, 0, 21);\n
    if (*(v126) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v125) = *(&*(v127));\n
    cgc_uint2str(&v124, 21, *(&v125));\n
    v13 = &v124;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v312 = v126;\n
    *(v312) = *(v312) - 8;\n
    v313 = v127;\n
    *(v313) = *(v313) + 8;\n
    v204 = a0;\n
    v203 = a1;\n
    if (*(v203) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v203) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v203);\n
    v202 = v12;\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v201 = cgc_calloc(134);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v201, \"Str: \");\n
    cgc_strncpy(v201 + 5, *(v204), v202);\n
    v315 = v204;\n
    *(v315) = &(*(v315))[4 + cgc_strlen(v201)];\n
    v317 = v203;\n
    *(v317) = *(v317) - (cgc_strlen(v201) + -4);\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 4);\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(v99)->field_0;\n
    cgc_uint2str(&v96, 4, v97);\n
    v11 = &v96;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v318 = v98;\n
    *(v318) = *(v318) - 1;\n
    v319 = v99;\n
    *(v319) = *(v319) + 1;\n
    v59 = a0;\n
    v58 = a1;\n
    *(&v56) = *(v59);\n
    memset(&v55, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v56[0] << 8))\n
        v10 = v56[1];\n
    v57 = v10 & 1;\n
    cgc_uint2str(&v55, 6, v57);\n
    v9 = &v55;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v320 = v58;\n
    *(v320) = *(v320) - 2;\n
    v321 = v59;\n
    *(v321) = *(v321) + 2;\n
    v220 = a0;\n
    v219 = a1;\n
    memset(&v217, 0, 21);\n
    if (*(v219) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v218) = *(&*(v220));\n
    cgc_uint2str(&v217, 21, *(&v218));\n
    v8 = &v217;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v217)) < 0)\n
        cgc__terminate(1);\n
    v322 = v219;\n
    *(v322) = *(v322) - 8;\n
    v323 = v220;\n
    *(v323) = *(v323) + 8;\n
    v216 = a0;\n
    v215 = a1;\n
    memset(&v213, 0, 21);\n
    if (*(v215) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v214) = *(&*(v216));\n
    cgc_uint2str(&v213, 21, *(&v214));\n
    v7 = &v213;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v213)) < 0)\n
        cgc__terminate(1);\n
    v324 = v215;\n
    *(v324) = *(v324) - 8;\n
    v325 = v216;\n
    *(v325) = *(v325) + 8;\n
    v87 = a0;\n
    v86 = a1;\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = *(v87)->field_0;\n
    v326 = v86;\n
    *(v326) = *(v326) - 1;\n
    v327 = v87;\n
    *(v327) = *(v327) + 1;\n
    if (v85 <= *(v86) && !(!v85))\n
        goto LABEL_47ad68;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47ad68:\n
    v84 = cgc_calloc(v85);\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v84, *(v87), v85);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v328 = v87;\n
    *(v328) = &(*(v328))[v85];\n
    v329 = v86;\n
    *(v329) = *(v329) - v85;\n
    cgc_checkheap();\n
    cgc_free(v84);\n
    v200 = a0;\n
    v199 = a1;\n
    if (*(v199) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v199) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v199);\n
    v198 = v6;\n
    if (!v198)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v197 = cgc_calloc(134);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v197, \"Str: \");\n
    cgc_strncpy(v197 + 5, *(v200), v198);\n
    v331 = v200;\n
    *(v331) = &(*(v331))[4 + cgc_strlen(v197)];\n
    v333 = v199;\n
    *(v333) = *(v333) - (cgc_strlen(v197) + -4);\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v196 = a0;\n
    v195 = a1;\n
    if (*(v195) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v195) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v195);\n
    v194 = v5;\n
    if (!v194)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v193 = cgc_calloc(134);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v193, \"Str: \");\n
    cgc_strncpy(v193 + 5, *(v196), v194);\n
    v335 = v196;\n
    *(v335) = &(*(v335))[4 + cgc_strlen(v193)];\n
    v337 = v195;\n
    *(v337) = *(v337) - (cgc_strlen(v193) + -4);\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51) = *(v54);\n
    memset(&v50, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v51[0] << 8))\n
        v4 = v51[1];\n
    v52 = v4 & 1;\n
    cgc_uint2str(&v50, 6, v52);\n
    v3 = &v50;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v338 = v53;\n
    *(v338) = *(v338) - 2;\n
    v339 = v54;\n
    *(v339) = *(v339) + 2;\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46) = *(v49);\n
    memset(&v45, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v46[0] << 8))\n
        v2 = v46[1];\n
    v47 = v2 & 1;\n
    cgc_uint2str(&v45, 6, v47);\n
    v1 = &v45;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v340 = v48;\n
    *(v340) = *(v340) - 2;\n
    v341 = v49;\n
    *(v341) = *(v341) + 2;\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = *(v83)->field_0;\n
    v342 = v82;\n
    *(v342) = *(v342) - 1;\n
    v343 = v83;\n
    *(v343) = *(v343) + 1;\n
    if (v81 <= *(v82) && !(!v81))\n
        goto LABEL_47b5ac;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47b5ac:\n
    v80 = cgc_calloc(v81);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v80, *(v83), v81);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v344 = v83;\n
    *(v344) = &(*(v344))[v81];\n
    v345 = v82;\n
    *(v345) = *(v345) - v81;\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    v163 = a0;\n
    v162 = a1;\n
    memset(&v160, 0, 12);\n
    if (*(v162) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = *(&*(v163));\n
    cgc_uint2str(&v160, 12, v161);\n
    v0 = &v160;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v160)) < 0)\n
        cgc__terminate(1);\n
    v346 = v162;\n
    *(v346) = *(v346) - 4;\n
    v347 = v163;\n
    *(v347) = *(v347) + 4;\n
    v43 ^= cgc__cookie;\n
    if (v43)\n
        cgc___stack_cookie_fail();\n
    v348 = a1;\n
    if (*(a1) > 0 && v42 >= 0)\n
    {\n
        v348 = v42;\n
        if (v348 < 0)\n
            v348 = *(&(&v44)[8 * v42])(a0, a1);\n
    }\n
    return v348;\n
}\n
", "4700176:cgc_process_llamamink": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamamink(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    char v3;  // [bp-0x38]\n
    char v4;  // [bp-0x1d]\n
    char v5;  // [bp-0x19]\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned int *v8;  // rax\n
    unsigned int *v9;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamamink===\", 15) < 0)\n
        cgc__terminate(1);\n
    v6 = a1;\n
    memset(&v4, 0, 4);\n
    if (*(v6) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = *(a0)->field_0;\n
    cgc_uint2str(&v4, 4, v5);\n
    v0 = &v4;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v4)) < 0)\n
        cgc__terminate(1);\n
    v8 = v6;\n
    *(v8) = *(v8) - 1;\n
    *(a0) = *(a0) + 1;\n
    v2 ^= cgc__cookie;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v9 = a1;\n
    if (*(a1) > 0 && v1 >= 0)\n
    {\n
        v9 = v1;\n
        if (v9 < 0)\n
            v9 = *(&(&v3)[8 * v1])(a0, a1);\n
    }\n
    return v9;\n
}\n
", "4700555:sub_47b98b": null, "4700560:cgc_process_llamaintracutaneous": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaintracutaneous(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x778]\n
    char v1;  // [bp-0x769]\n
    struct_1 *v2;  // [bp-0x768]\n
    char v3;  // [bp-0x759]\n
    struct_1 *v4;  // [bp-0x758]\n
    struct_1 *v5;  // [bp-0x750]\n
    struct_1 *v6;  // [bp-0x748]\n
    struct_1 *v7;  // [bp-0x740]\n
    struct_1 *v8;  // [bp-0x738]\n
    unsigned int v9;  // [bp-0x72c]\n
    struct_1 *v10;  // [bp-0x728]\n
    struct_1 *v11;  // [bp-0x720]\n
    struct_1 *v12;  // [bp-0x718]\n
    struct_1 *v13;  // [bp-0x710]\n
    struct_1 *v14;  // [bp-0x708]\n
    char v15;  // [bp-0x6f9]\n
    struct_1 *v16;  // [bp-0x6f8]\n
    struct_1 *v17;  // [bp-0x6f0]\n
    char v18;  // [bp-0x6e1]\n
    struct_1 *v19;  // [bp-0x6e0]\n
    struct_1 *v20;  // [bp-0x6d8]\n
    struct_1 *v21;  // [bp-0x6d0]\n
    struct_1 *v22;  // [bp-0x6c8]\n
    struct_1 *v23;  // [bp-0x6c0]\n
    struct_1 *v24;  // [bp-0x6b8]\n
    struct_1 *v25;  // [bp-0x6b0]\n
    struct_1 *v26;  // [bp-0x6a8]\n
    struct_1 *v27;  // [bp-0x6a0]\n
    struct_1 *v28;  // [bp-0x698]\n
    char v29;  // [bp-0x689]\n
    struct_1 *v30;  // [bp-0x688]\n
    struct_1 *v31;  // [bp-0x680]\n
    struct_1 *v32;  // [bp-0x678]\n
    char v33;  // [bp-0x669]\n
    struct_1 *v34;  // [bp-0x668]\n
    char v35;  // [bp-0x659]\n
    struct_1 *v36;  // [bp-0x658]\n
    unsigned int v37;  // [bp-0x64c]\n
    struct_1 *v38;  // [bp-0x648]\n
    char v39;  // [bp-0x639]\n
    unsigned int v40;  // [bp-0x638]\n
    unsigned int v41;  // [bp-0x634]\n
    char v42;  // [bp-0x630]\n
    char v43;  // [bp-0x616]\n
    char v44[8];  // [bp-0x610]\n
    unsigned short v45;  // [bp-0x602]\n
    unsigned int *v46;  // [bp-0x600]\n
    struct struct_0 **v47;  // [bp-0x5f8]\n
    char v48;  // [bp-0x5ee]\n
    char *v49;  // [bp-0x5e8]\n
    unsigned short v50;  // [bp-0x5da]\n
    unsigned int *v51;  // [bp-0x5d8]\n
    struct struct_0 **v52;  // [bp-0x5d0]\n
    char v53;  // [bp-0x5c8]\n
    char v54[8];  // [bp-0x5a8]\n
    unsigned int v55;  // [bp-0x5a0]\n
    unsigned int *v56;  // [bp-0x598]\n
    struct struct_0 **v57;  // [bp-0x590]\n
    char v58;  // [bp-0x588]\n
    char v59[8];  // [bp-0x568]\n
    unsigned int v60;  // [bp-0x560]\n
    unsigned int *v61;  // [bp-0x558]\n
    struct struct_0 **v62;  // [bp-0x550]\n
    char v63;  // [bp-0x548]\n
    char v64[8];  // [bp-0x528]\n
    unsigned int v65;  // [bp-0x520]\n
    unsigned int *v66;  // [bp-0x518]\n
    struct struct_0 **v67;  // [bp-0x510]\n
    char v68;  // [bp-0x508]\n
    char v69[8];  // [bp-0x4e8]\n
    unsigned int v70;  // [bp-0x4e0]\n
    unsigned int *v71;  // [bp-0x4d8]\n
    struct struct_0 **v72;  // [bp-0x4d0]\n
    char v73;  // [bp-0x4c8]\n
    char v74[8];  // [bp-0x4b0]\n
    unsigned int v75;  // [bp-0x4a8]\n
    unsigned int *v76;  // [bp-0x4a0]\n
    struct struct_0 **v77;  // [bp-0x498]\n
    unsigned long v78;  // [bp-0x490]\n
    char v79;  // [bp-0x481]\n
    unsigned int *v80;  // [bp-0x480]\n
    struct struct_0 **v81;  // [bp-0x478]\n
    unsigned long v82;  // [bp-0x470]\n
    char v83;  // [bp-0x461]\n
    unsigned int *v84;  // [bp-0x460]\n
    struct struct_0 **v85;  // [bp-0x458]\n
    unsigned long v86;  // [bp-0x450]\n
    char v87;  // [bp-0x441]\n
    unsigned int *v88;  // [bp-0x440]\n
    struct struct_0 **v89;  // [bp-0x438]\n
    unsigned long v90;  // [bp-0x430]\n
    char v91;  // [bp-0x421]\n
    unsigned int *v92;  // [bp-0x420]\n
    struct struct_0 **v93;  // [bp-0x418]\n
    char *v94;  // [bp-0x410]\n
    unsigned int v95;  // [bp-0x404]\n
    unsigned int *v96;  // [bp-0x400]\n
    struct struct_0 **v97;  // [bp-0x3f8]\n
    char v98;  // [bp-0x3f0]\n
    unsigned short v99;  // [bp-0x3ea]\n
    unsigned int *v100;  // [bp-0x3e8]\n
    struct struct_0 **v101;  // [bp-0x3e0]\n
    char v102;  // [bp-0x3d8]\n
    unsigned short v103;  // [bp-0x3d2]\n
    unsigned int *v104;  // [bp-0x3d0]\n
    struct struct_0 **v105;  // [bp-0x3c8]\n
    char v106;  // [bp-0x3c0]\n
    unsigned short v107;  // [bp-0x3ba]\n
    unsigned int *v108;  // [bp-0x3b8]\n
    struct struct_0 **v109;  // [bp-0x3b0]\n
    char v110;  // [bp-0x3a8]\n
    unsigned short v111;  // [bp-0x3a2]\n
    unsigned int *v112;  // [bp-0x3a0]\n
    struct struct_0 **v113;  // [bp-0x398]\n
    char v114;  // [bp-0x390]\n
    unsigned short v115;  // [bp-0x38a]\n
    unsigned int *v116;  // [bp-0x388]\n
    struct struct_0 **v117;  // [bp-0x380]\n
    char v118;  // [bp-0x378]\n
    unsigned short v119;  // [bp-0x372]\n
    unsigned int *v120;  // [bp-0x370]\n
    struct struct_0 **v121;  // [bp-0x368]\n
    char v122;  // [bp-0x35d]\n
    char v123;  // [bp-0x359]\n
    unsigned int *v124;  // [bp-0x358]\n
    struct struct_0 **v125;  // [bp-0x350]\n
    char v126;  // [bp-0x345]\n
    char v127;  // [bp-0x341]\n
    unsigned int *v128;  // [bp-0x340]\n
    struct struct_0 **v129;  // [bp-0x338]\n
    char v130;  // [bp-0x32d]\n
    char v131;  // [bp-0x329]\n
    unsigned int *v132;  // [bp-0x328]\n
    struct struct_0 **v133;  // [bp-0x320]\n
    char v134;  // [bp-0x318]\n
    unsigned int v135;  // [bp-0x300]\n
    unsigned int *v136;  // [bp-0x2f8]\n
    struct struct_0 **v137;  // [bp-0x2f0]\n
    char v138;  // [bp-0x2e8]\n
    unsigned int v139;  // [bp-0x2d0]\n
    unsigned int *v140;  // [bp-0x2c8]\n
    struct struct_0 **v141;  // [bp-0x2c0]\n
    char v142;  // [bp-0x2b8]\n
    unsigned int v143;  // [bp-0x2a0]\n
    unsigned int *v144;  // [bp-0x298]\n
    struct struct_0 **v145;  // [bp-0x290]\n
    char v146;  // [bp-0x288]\n
    unsigned int v147;  // [bp-0x270]\n
    unsigned int *v148;  // [bp-0x268]\n
    struct struct_0 **v149;  // [bp-0x260]\n
    char v150;  // [bp-0x258]\n
    unsigned int v151;  // [bp-0x24c]\n
    unsigned int *v152;  // [bp-0x248]\n
    struct struct_0 **v153;  // [bp-0x240]\n
    char v154;  // [bp-0x238]\n
    unsigned int v155;  // [bp-0x22c]\n
    unsigned int *v156;  // [bp-0x228]\n
    struct struct_0 **v157;  // [bp-0x220]\n
    char v158;  // [bp-0x218]\n
    unsigned int v159;  // [bp-0x20c]\n
    unsigned int *v160;  // [bp-0x208]\n
    struct struct_0 **v161;  // [bp-0x200]\n
    char v162;  // [bp-0x1f8]\n
    unsigned int v163;  // [bp-0x1ec]\n
    unsigned int *v164;  // [bp-0x1e8]\n
    struct struct_0 **v165;  // [bp-0x1e0]\n
    char v166;  // [bp-0x1d8]\n
    unsigned int v167;  // [bp-0x1cc]\n
    unsigned int *v168;  // [bp-0x1c8]\n
    struct struct_0 **v169;  // [bp-0x1c0]\n
    unsigned long v170;  // [bp-0x1b8]\n
    unsigned short v171;  // [bp-0x1aa]\n
    unsigned int *v172;  // [bp-0x1a8]\n
    struct struct_0 **v173;  // [bp-0x1a0]\n
    unsigned long v174;  // [bp-0x198]\n
    unsigned short v175;  // [bp-0x18a]\n
    unsigned int *v176;  // [bp-0x188]\n
    struct struct_0 **v177;  // [bp-0x180]\n
    unsigned long v178;  // [bp-0x178]\n
    unsigned short v179;  // [bp-0x16a]\n
    unsigned int *v180;  // [bp-0x168]\n
    struct struct_0 **v181;  // [bp-0x160]\n
    unsigned long v182;  // [bp-0x158]\n
    unsigned short v183;  // [bp-0x14a]\n
    unsigned int *v184;  // [bp-0x148]\n
    struct struct_0 **v185;  // [bp-0x140]\n
    char v186;  // [bp-0x134]\n
    char v187[8];  // [bp-0x128]\n
    unsigned int v188;  // [bp-0x11c]\n
    unsigned int *v189;  // [bp-0x118]\n
    struct struct_0 **v190;  // [bp-0x110]\n
    char *v191;  // [bp-0x108]\n
    unsigned int v192;  // [bp-0xfc]\n
    unsigned int *v193;  // [bp-0xf8]\n
    struct struct_0 **v194;  // [bp-0xf0]\n
    char v195;  // [bp-0xe8]\n
    unsigned int v196;  // [bp-0xd0]\n
    unsigned int *v197;  // [bp-0xc8]\n
    struct struct_0 **v198;  // [bp-0xc0]\n
    char v199;  // [bp-0xb8]\n
    unsigned int v200;  // [bp-0xa0]\n
    unsigned int *v201;  // [bp-0x98]\n
    struct struct_0 **v202;  // [bp-0x90]\n
    char v203;  // [bp-0x88]\n
    unsigned int v204;  // [bp-0x70]\n
    unsigned int *v205;  // [bp-0x68]\n
    struct struct_0 **v206;  // [bp-0x60]\n
    char v207;  // [bp-0x58]\n
    unsigned int v208;  // [bp-0x40]\n
    unsigned int *v209;  // [bp-0x38]\n
    struct struct_0 **v210;  // [bp-0x30]\n
    unsigned long v211;  // [bp-0x28]\n
    char v212;  // [bp-0x19]\n
    unsigned int *v213;  // [bp-0x18]\n
    struct struct_0 **v214;  // [bp-0x10]\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    struct struct_0 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    struct struct_0 **v286;  // rax\n
    unsigned int *v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    struct struct_0 **v290;  // rax\n
    unsigned int *v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_0 **v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v305;  // rax\n
    unsigned int *v306;  // rax\n
    struct struct_0 **v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    unsigned int *v310;  // rax\n
    struct struct_0 **v311;  // rax\n
    unsigned int *v312;  // rax\n
    struct struct_0 **v313;  // rax\n
    unsigned int *v314;  // rax\n
    struct struct_0 **v315;  // rax\n
    unsigned int *v316;  // rax\n
    struct struct_0 **v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_0 **v319;  // rax\n
    unsigned int *v320;  // rax, Other Possible Types: unsigned long\n
\n
    v41 = cgc__cookie;\n
    v40 = -1;\n
    if (cgc_sendline(1, \"===llamaintracutaneous===\", 25) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    v49 = &*(v52)->field_0;\n
    memset(&v48, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = 0;\n
    if ((*(v49) << 8))\n
        v39 = v49[1];\n
    v50 = v39 & 1;\n
    cgc_uint2str(&v48, 6, v50);\n
    v38 = &v48;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v216 = v51;\n
    *(v216) = *(v216) - 2;\n
    v217 = v52;\n
    *(v217) = *(v217) + 2;\n
    v177 = a0;\n
    v176 = a1;\n
    if (*(v176) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v175 = *(&*(v177));\n
    v218 = v176;\n
    *(v218) = *(v218) - 2;\n
    v219 = v177;\n
    *(v219) = *(v219) + 2;\n
    if (v175 <= *(v176) && !(!v175))\n
        goto LABEL_47bc24;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47bc24:\n
    v174 = cgc_calloc(v175);\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v174, *(v177), v175);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v220 = v176;\n
    *(v220) = *(v220) - v175;\n
    v221 = v177;\n
    *(v221) = &(*(v221))[v175];\n
    cgc_checkheap();\n
    cgc_free(v174);\n
    v194 = a0;\n
    v193 = a1;\n
    if (*(v193) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v193) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v193);\n
    v192 = v37;\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v191 = cgc_calloc(134);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v191, \"Str: \");\n
    cgc_strncpy(v191 + 5, *(v194), v192);\n
    v223 = v194;\n
    *(v223) = &(*(v223))[4 + cgc_strlen(v191)];\n
    v225 = v193;\n
    *(v225) = *(v225) - (cgc_strlen(v191) + -4);\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v93 = a0;\n
    v92 = a1;\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(v93)->field_0;\n
    v226 = v92;\n
    *(v226) = *(v226) - 1;\n
    v227 = v93;\n
    *(v227) = *(v227) + 1;\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_47bfe5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47bfe5:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v228 = v93;\n
    *(v228) = &(*(v228))[v91];\n
    v229 = v92;\n
    *(v229) = *(v229) - v91;\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v133 = a0;\n
    v132 = a1;\n
    memset(&v130, 0, 4);\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(v133)->field_0;\n
    cgc_uint2str(&v130, 4, v131);\n
    v36 = &v130;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v130)) < 0)\n
        cgc__terminate(1);\n
    v230 = v132;\n
    *(v230) = *(v230) - 1;\n
    v231 = v133;\n
    *(v231) = *(v231) + 1;\n
    v77 = a0;\n
    v76 = a1;\n
    *(&v74[0]) = *(v77);\n
    memset(&v73, 0, 21);\n
    if (*(v76) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if (v74[0] << 56)\n
    {\n
        v35 = 0;\n
        if (v74[1] << 48)\n
        {\n
            v35 = 0;\n
            if (v74[2] << 40)\n
            {\n
                v35 = 0;\n
                if (v74[3] << 32)\n
                {\n
                    v35 = 0;\n
                    if ((v74[4] << 24))\n
                    {\n
                        v35 = 0;\n
                        if ((v74[5] << 16))\n
                        {\n
                            v35 = 0;\n
                            if ((v74[6] << 8))\n
                                v35 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v75) = v35 & 1;\n
    cgc_uint2str(&v73, 21, *(&v75));\n
    v34 = &v73;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v232 = v76;\n
    *(v232) = *(v232) - 8;\n
    v233 = v77;\n
    *(v233) = *(v233) + 8;\n
    v72 = a0;\n
    v71 = a1;\n
    *(&v69[0]) = *(v72);\n
    memset(&v68, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = 0;\n
    if (v69[0] << 56)\n
    {\n
        v33 = 0;\n
        if (v69[1] << 48)\n
        {\n
            v33 = 0;\n
            if (v69[2] << 40)\n
            {\n
                v33 = 0;\n
                if (v69[3] << 32)\n
                {\n
                    v33 = 0;\n
                    if ((v69[4] << 24))\n
                    {\n
                        v33 = 0;\n
                        if ((v69[5] << 16))\n
                        {\n
                            v33 = 0;\n
                            if ((v69[6] << 8))\n
                                v33 = v69[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v70) = v33 & 1;\n
    cgc_uint2str(&v68, 21, *(&v70));\n
    v32 = &v68;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v234 = v71;\n
    *(v234) = *(v234) - 8;\n
    v235 = v72;\n
    *(v235) = *(v235) + 8;\n
    v129 = a0;\n
    v128 = a1;\n
    memset(&v126, 0, 4);\n
    if (*(v128) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(v129)->field_0;\n
    cgc_uint2str(&v126, 4, v127);\n
    v31 = &v126;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v126)) < 0)\n
        cgc__terminate(1);\n
    v236 = v128;\n
    *(v236) = *(v236) - 1;\n
    v237 = v129;\n
    *(v237) = *(v237) + 1;\n
    v185 = a0;\n
    v184 = a1;\n
    if (*(v184) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v183 = *(&*(v185));\n
    v238 = v184;\n
    *(v238) = *(v238) - 2;\n
    v239 = v185;\n
    *(v239) = *(v239) + 2;\n
    if (v183 <= *(v184) && !(!v183))\n
        goto LABEL_47c7e5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47c7e5:\n
    v182 = cgc_calloc(v183);\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v182, *(v185), v183);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v240 = v184;\n
    *(v240) = *(v240) - v183;\n
    v241 = v185;\n
    *(v241) = &(*(v241))[v183];\n
    cgc_checkheap();\n
    cgc_free(v182);\n
    v121 = a0;\n
    v120 = a1;\n
    memset(&v118, 0, 6);\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    cgc_uint2str(&v118, 6, v119);\n
    v30 = &v118;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v242 = v120;\n
    *(v242) = *(v242) - 2;\n
    v243 = v121;\n
    *(v243) = *(v243) + 2;\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44[0]) = *(v47);\n
    memset(&v43, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = 0;\n
    if ((v44[0] << 8))\n
        v29 = v44[1];\n
    v45 = v29 & 1;\n
    cgc_uint2str(&v43, 6, v45);\n
    v28 = &v43;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v244 = v46;\n
    *(v244) = *(v244) - 2;\n
    v245 = v47;\n
    *(v245) = *(v245) + 2;\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 6);\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(&*(v117));\n
    cgc_uint2str(&v114, 6, v115);\n
    v27 = &v114;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v246 = v116;\n
    *(v246) = *(v246) - 2;\n
    v247 = v117;\n
    *(v247) = *(v247) + 2;\n
    v149 = a0;\n
    v148 = a1;\n
    memset(&v146, 0, 21);\n
    if (*(v148) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v147) = *(&*(v149));\n
    cgc_uint2str(&v146, 21, *(&v147));\n
    v26 = &v146;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v146)) < 0)\n
        cgc__terminate(1);\n
    v248 = v148;\n
    *(v248) = *(v248) - 8;\n
    v249 = v149;\n
    *(v249) = *(v249) + 8;\n
    v89 = a0;\n
    v88 = a1;\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(v89)->field_0;\n
    v250 = v88;\n
    *(v250) = *(v250) - 1;\n
    v251 = v89;\n
    *(v251) = *(v251) + 1;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_47ce0d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47ce0d:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v252 = v89;\n
    *(v252) = &(*(v252))[v87];\n
    v253 = v88;\n
    *(v253) = *(v253) - v87;\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v125 = a0;\n
    v124 = a1;\n
    memset(&v122, 0, 4);\n
    if (*(v124) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(v125)->field_0;\n
    cgc_uint2str(&v122, 4, v123);\n
    v25 = &v122;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v122)) < 0)\n
        cgc__terminate(1);\n
    v254 = v124;\n
    *(v254) = *(v254) - 1;\n
    v255 = v125;\n
    *(v255) = *(v255) + 1;\n
    v210 = a0;\n
    v209 = a1;\n
    memset(&v207, 0, 21);\n
    if (*(v209) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v208) = *(&*(v210));\n
    cgc_uint2str(&v207, 21, *(&v208));\n
    v24 = &v207;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v207)) < 0)\n
        cgc__terminate(1);\n
    v256 = v209;\n
    *(v256) = *(v256) - 8;\n
    v257 = v210;\n
    *(v257) = *(v257) + 8;\n
    v145 = a0;\n
    v144 = a1;\n
    memset(&v142, 0, 21);\n
    if (*(v144) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v143) = *(&*(v145));\n
    cgc_uint2str(&v142, 21, *(&v143));\n
    v23 = &v142;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v142)) < 0)\n
        cgc__terminate(1);\n
    v258 = v144;\n
    *(v258) = *(v258) - 8;\n
    v259 = v145;\n
    *(v259) = *(v259) + 8;\n
    v206 = a0;\n
    v205 = a1;\n
    memset(&v203, 0, 21);\n
    if (*(v205) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v204) = *(&*(v206));\n
    cgc_uint2str(&v203, 21, *(&v204));\n
    v22 = &v203;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v203)) < 0)\n
        cgc__terminate(1);\n
    v260 = v205;\n
    *(v260) = *(v260) - 8;\n
    v261 = v206;\n
    *(v261) = *(v261) + 8;\n
    v214 = a0;\n
    v213 = a1;\n
    if (*(v213) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v212 = *(v214)->field_0;\n
    v262 = v213;\n
    *(v262) = *(v262) - 1;\n
    v263 = v214;\n
    *(v263) = *(v263) + 1;\n
    if (v212 <= *(v213) && !(!v212))\n
        goto LABEL_47d38d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47d38d:\n
    v211 = cgc_calloc(v212);\n
    if (!v211)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v211, *(v214), v212);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v264 = v214;\n
    *(v264) = &(*(v264))[v212];\n
    v265 = v213;\n
    *(v265) = *(v265) - v212;\n
    cgc_checkheap();\n
    cgc_free(v211);\n
    v169 = a0;\n
    v168 = a1;\n
    memset(&v166, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v167 = *(&*(v169));\n
    cgc_uint2str(&v166, 12, v167);\n
    v21 = &v166;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v166)) < 0)\n
        cgc__terminate(1);\n
    v266 = v168;\n
    *(v266) = *(v266) - 4;\n
    v267 = v169;\n
    *(v267) = *(v267) + 4;\n
    v157 = a0;\n
    v156 = a1;\n
    memset(&v154, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = *(&*(v157));\n
    cgc_uint2str(&v154, 12, v155);\n
    v20 = &v154;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v154)) < 0)\n
        cgc__terminate(1);\n
    v268 = v156;\n
    *(v268) = *(v268) - 4;\n
    v269 = v157;\n
    *(v269) = *(v269) + 4;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 6);\n
    if (*(v112) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(&*(v113));\n
    cgc_uint2str(&v110, 6, v111);\n
    v19 = &v110;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v270 = v112;\n
    *(v270) = *(v270) - 2;\n
    v271 = v113;\n
    *(v271) = *(v271) + 2;\n
    v67 = a0;\n
    v66 = a1;\n
    *(&v64[0]) = *(v67);\n
    memset(&v63, 0, 21);\n
    if (*(v66) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if (v64[0] << 56)\n
    {\n
        v18 = 0;\n
        if (v64[1] << 48)\n
        {\n
            v18 = 0;\n
            if (v64[2] << 40)\n
            {\n
                v18 = 0;\n
                if (v64[3] << 32)\n
                {\n
                    v18 = 0;\n
                    if ((v64[4] << 24))\n
                    {\n
                        v18 = 0;\n
                        if ((v64[5] << 16))\n
                        {\n
                            v18 = 0;\n
                            if ((v64[6] << 8))\n
                                v18 = v64[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v65) = v18 & 1;\n
    cgc_uint2str(&v63, 21, *(&v65));\n
    v17 = &v63;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v272 = v66;\n
    *(v272) = *(v272) - 8;\n
    v273 = v67;\n
    *(v273) = *(v273) + 8;\n
    v202 = a0;\n
    v201 = a1;\n
    memset(&v199, 0, 21);\n
    if (*(v201) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v200) = *(&*(v202));\n
    cgc_uint2str(&v199, 21, *(&v200));\n
    v16 = &v199;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v199)) < 0)\n
        cgc__terminate(1);\n
    v274 = v201;\n
    *(v274) = *(v274) - 8;\n
    v275 = v202;\n
    *(v275) = *(v275) + 8;\n
    v173 = a0;\n
    v172 = a1;\n
    if (*(v172) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v171 = *(&*(v173));\n
    v276 = v172;\n
    *(v276) = *(v276) - 2;\n
    v277 = v173;\n
    *(v277) = *(v277) + 2;\n
    if (v171 <= *(v172) && !(!v171))\n
        goto LABEL_47db67;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47db67:\n
    v170 = cgc_calloc(v171);\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v170, *(v173), v171);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v278 = v172;\n
    *(v278) = *(v278) - v171;\n
    v279 = v173;\n
    *(v279) = &(*(v279))[v171];\n
    cgc_checkheap();\n
    cgc_free(v170);\n
    v190 = a0;\n
    v189 = a1;\n
    *(&v187[0]) = *(v190);\n
    memset(&v186, 0, 12);\n
    if (*(v189) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v187[0] << 24))\n
    {\n
        v15 = 0;\n
        if ((v187[1] << 16))\n
        {\n
            v15 = 0;\n
            if ((v187[2] << 8))\n
                v15 = v187[3];\n
        }\n
    }\n
    v188 = v15 & 1;\n
    cgc_uint2str(&v186, 12, v188);\n
    v14 = &v186;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v186)) < 0)\n
        cgc__terminate(1);\n
    v280 = v189;\n
    *(v280) = *(v280) - 4;\n
    v281 = v190;\n
    *(v281) = *(v281) + 4;\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 6);\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(&*(v109));\n
    cgc_uint2str(&v106, 6, v107);\n
    v13 = &v106;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v282 = v108;\n
    *(v282) = *(v282) - 2;\n
    v283 = v109;\n
    *(v283) = *(v283) + 2;\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(v85)->field_0;\n
    v284 = v84;\n
    *(v284) = *(v284) - 1;\n
    v285 = v85;\n
    *(v285) = *(v285) + 1;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_47dfbd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47dfbd:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v286 = v85;\n
    *(v286) = &(*(v286))[v83];\n
    v287 = v84;\n
    *(v287) = *(v287) - v83;\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(v81)->field_0;\n
    v288 = v80;\n
    *(v288) = *(v288) - 1;\n
    v289 = v81;\n
    *(v289) = *(v289) + 1;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_47e18b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47e18b:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v290 = v81;\n
    *(v290) = &(*(v290))[v79];\n
    v291 = v80;\n
    *(v291) = *(v291) - v79;\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v165 = a0;\n
    v164 = a1;\n
    memset(&v162, 0, 12);\n
    if (*(v164) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v163 = *(&*(v165));\n
    cgc_uint2str(&v162, 12, v163);\n
    v12 = &v162;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v162)) < 0)\n
        cgc__terminate(1);\n
    v292 = v164;\n
    *(v292) = *(v292) - 4;\n
    v293 = v165;\n
    *(v293) = *(v293) + 4;\n
    v141 = a0;\n
    v140 = a1;\n
    memset(&v138, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v139) = *(&*(v141));\n
    cgc_uint2str(&v138, 21, *(&v139));\n
    v11 = &v138;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v294 = v140;\n
    *(v294) = *(v294) - 8;\n
    v295 = v141;\n
    *(v295) = *(v295) + 8;\n
    v198 = a0;\n
    v197 = a1;\n
    memset(&v195, 0, 21);\n
    if (*(v197) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v196) = *(&*(v198));\n
    cgc_uint2str(&v195, 21, *(&v196));\n
    v10 = &v195;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v195)) < 0)\n
        cgc__terminate(1);\n
    v296 = v197;\n
    *(v296) = *(v296) - 8;\n
    v297 = v198;\n
    *(v297) = *(v297) + 8;\n
    v181 = a0;\n
    v180 = a1;\n
    if (*(v180) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = *(&*(v181));\n
    v298 = v180;\n
    *(v298) = *(v298) - 2;\n
    v299 = v181;\n
    *(v299) = *(v299) + 2;\n
    if (v179 <= *(v180) && !(!v179))\n
        goto LABEL_47e675;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_47e675:\n
    v178 = cgc_calloc(v179);\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v178, *(v181), v179);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v300 = v180;\n
    *(v300) = *(v300) - v179;\n
    v301 = v181;\n
    *(v301) = &(*(v301))[v179];\n
    cgc_checkheap();\n
    cgc_free(v178);\n
    v97 = a0;\n
    v96 = a1;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v96) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v96);\n
    v95 = v9;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v94, \"Str: \");\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v303 = v97;\n
    *(v303) = &(*(v303))[4 + cgc_strlen(v94)];\n
    v305 = v96;\n
    *(v305) = *(v305) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 6);\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 6, v103);\n
    v8 = &v102;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v306 = v104;\n
    *(v306) = *(v306) - 2;\n
    v307 = v105;\n
    *(v307) = *(v307) + 2;\n
    v153 = a0;\n
    v152 = a1;\n
    memset(&v150, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = *(&*(v153));\n
    cgc_uint2str(&v150, 12, v151);\n
    v7 = &v150;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v150)) < 0)\n
        cgc__terminate(1);\n
    v308 = v152;\n
    *(v308) = *(v308) - 4;\n
    v309 = v153;\n
    *(v309) = *(v309) + 4;\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 6);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 6, v99);\n
    v6 = &v98;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v310 = v100;\n
    *(v310) = *(v310) - 2;\n
    v311 = v101;\n
    *(v311) = *(v311) + 2;\n
    v137 = a0;\n
    v136 = a1;\n
    memset(&v134, 0, 21);\n
    if (*(v136) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v135) = *(&*(v137));\n
    cgc_uint2str(&v134, 21, *(&v135));\n
    v5 = &v134;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v134)) < 0)\n
        cgc__terminate(1);\n
    v312 = v136;\n
    *(v312) = *(v312) - 8;\n
    v313 = v137;\n
    *(v313) = *(v313) + 8;\n
    v161 = a0;\n
    v160 = a1;\n
    memset(&v158, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = *(&*(v161));\n
    cgc_uint2str(&v158, 12, v159);\n
    v4 = &v158;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v158)) < 0)\n
        cgc__terminate(1);\n
    v314 = v160;\n
    *(v314) = *(v314) - 4;\n
    v315 = v161;\n
    *(v315) = *(v315) + 4;\n
    v62 = a0;\n
    v61 = a1;\n
    *(&v59[0]) = *(v62);\n
    memset(&v58, 0, 21);\n
    if (*(v61) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v59[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v59[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v59[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v59[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v59[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v59[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v59[6] << 8))\n
                                v3 = v59[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v60) = v3 & 1;\n
    cgc_uint2str(&v58, 21, *(&v60));\n
    v2 = &v58;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v316 = v61;\n
    *(v316) = *(v316) - 8;\n
    v317 = v62;\n
    *(v317) = *(v317) + 8;\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54[0]) = *(v57);\n
    memset(&v53, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v54[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v54[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v54[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v54[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v54[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v54[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v54[6] << 8))\n
                                v1 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v55) = v1 & 1;\n
    cgc_uint2str(&v53, 21, *(&v55));\n
    v0 = &v53;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v318 = v56;\n
    *(v318) = *(v318) - 8;\n
    v319 = v57;\n
    *(v319) = *(v319) + 8;\n
    v41 ^= cgc__cookie;\n
    if (v41)\n
        cgc___stack_cookie_fail();\n
    v320 = a1;\n
    if (*(a1) > 0 && v40 >= 0)\n
    {\n
        v320 = v40;\n
        if (v320 < 0)\n
            v320 = *(&(&v42)[8 * v40])(a0, a1);\n
    }\n
    return v320;\n
}\n
", "4715275:sub_47f30b": null, "4715280:cgc_process_llamasubderivative": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasubderivative(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x640]\n
    unsigned int v1;  // [bp-0x634]\n
    struct_1 *v2;  // [bp-0x630]\n
    struct_1 *v3;  // [bp-0x628]\n
    unsigned int v4;  // [bp-0x620]\n
    unsigned int v5;  // [bp-0x61c]\n
    struct_1 *v6;  // [bp-0x618]\n
    char v7;  // [bp-0x609]\n
    struct_1 *v8;  // [bp-0x608]\n
    char v9;  // [bp-0x5f9]\n
    struct_1 *v10;  // [bp-0x5f8]\n
    struct_1 *v11;  // [bp-0x5f0]\n
    char v12;  // [bp-0x5e1]\n
    struct_1 *v13;  // [bp-0x5e0]\n
    struct_1 *v14;  // [bp-0x5d8]\n
    struct_1 *v15;  // [bp-0x5d0]\n
    struct_1 *v16;  // [bp-0x5c8]\n
    char v17;  // [bp-0x5b9]\n
    struct_1 *v18;  // [bp-0x5b8]\n
    char v19;  // [bp-0x5a9]\n
    struct_1 *v20;  // [bp-0x5a8]\n
    char v21;  // [bp-0x599]\n
    struct_1 *v22;  // [bp-0x598]\n
    struct_1 *v23;  // [bp-0x590]\n
    struct_1 *v24;  // [bp-0x588]\n
    char v25;  // [bp-0x57d]\n
    unsigned int v26;  // [bp-0x57c]\n
    struct_1 *v27;  // [bp-0x578]\n
    struct_1 *v28;  // [bp-0x570]\n
    struct_1 *v29;  // [bp-0x568]\n
    char v30;  // [bp-0x559]\n
    struct_1 *v31;  // [bp-0x558]\n
    char v32;  // [bp-0x549]\n
    struct_1 *v33;  // [bp-0x548]\n
    char v34;  // [bp-0x539]\n
    struct_1 *v35;  // [bp-0x538]\n
    struct_1 *v36;  // [bp-0x530]\n
    struct_1 *v37;  // [bp-0x528]\n
    char v38;  // [bp-0x519]\n
    unsigned int v39;  // [bp-0x518]\n
    unsigned int v40;  // [bp-0x514]\n
    char v41;  // [bp-0x510]\n
    char v42;  // [bp-0x4f6]\n
    char v43[2];  // [bp-0x4f0]\n
    unsigned short v44;  // [bp-0x4e2]\n
    unsigned int *v45;  // [bp-0x4e0]\n
    struct struct_0 **v46;  // [bp-0x4d8]\n
    char v47;  // [bp-0x4ce]\n
    char v48[2];  // [bp-0x4c8]\n
    unsigned short v49;  // [bp-0x4ba]\n
    unsigned int *v50;  // [bp-0x4b8]\n
    struct struct_0 **v51;  // [bp-0x4b0]\n
    char v52;  // [bp-0x4a8]\n
    char v53[8];  // [bp-0x488]\n
    unsigned int v54;  // [bp-0x480]\n
    unsigned int *v55;  // [bp-0x478]\n
    struct struct_0 **v56;  // [bp-0x470]\n
    char v57;  // [bp-0x468]\n
    char v58[8];  // [bp-0x448]\n
    unsigned int v59;  // [bp-0x440]\n
    unsigned int *v60;  // [bp-0x438]\n
    struct struct_0 **v61;  // [bp-0x430]\n
    char v62;  // [bp-0x428]\n
    char v63[8];  // [bp-0x408]\n
    unsigned int v64;  // [bp-0x400]\n
    unsigned int *v65;  // [bp-0x3f8]\n
    struct struct_0 **v66;  // [bp-0x3f0]\n
    char v67;  // [bp-0x3e8]\n
    char v68[8];  // [bp-0x3c8]\n
    unsigned int v69;  // [bp-0x3c0]\n
    unsigned int *v70;  // [bp-0x3b8]\n
    struct struct_0 **v71;  // [bp-0x3b0]\n
    char v72;  // [bp-0x3a8]\n
    char v73[8];  // [bp-0x390]\n
    unsigned int v74;  // [bp-0x388]\n
    unsigned int *v75;  // [bp-0x380]\n
    struct struct_0 **v76;  // [bp-0x378]\n
    char *v77;  // [bp-0x370]\n
    unsigned int v78;  // [bp-0x364]\n
    unsigned int *v79;  // [bp-0x360]\n
    struct struct_0 **v80;  // [bp-0x358]\n
    char *v81;  // [bp-0x350]\n
    unsigned int v82;  // [bp-0x344]\n
    unsigned int *v83;  // [bp-0x340]\n
    struct struct_0 **v84;  // [bp-0x338]\n
    char v85;  // [bp-0x32d]\n
    char v86;  // [bp-0x329]\n
    unsigned int *v87;  // [bp-0x328]\n
    struct struct_0 **v88;  // [bp-0x320]\n
    char v89;  // [bp-0x315]\n
    char v90;  // [bp-0x311]\n
    unsigned int *v91;  // [bp-0x310]\n
    struct struct_0 **v92;  // [bp-0x308]\n
    char v93;  // [bp-0x2fd]\n
    char v94;  // [bp-0x2f9]\n
    unsigned int *v95;  // [bp-0x2f8]\n
    struct struct_0 **v96;  // [bp-0x2f0]\n
    char v97;  // [bp-0x2e8]\n
    unsigned int v98;  // [bp-0x2dc]\n
    unsigned int *v99;  // [bp-0x2d8]\n
    struct struct_0 **v100;  // [bp-0x2d0]\n
    char v101;  // [bp-0x2c8]\n
    unsigned int v102;  // [bp-0x2bc]\n
    unsigned int *v103;  // [bp-0x2b8]\n
    struct struct_0 **v104;  // [bp-0x2b0]\n
    char v105;  // [bp-0x2a8]\n
    unsigned int v106;  // [bp-0x29c]\n
    unsigned int *v107;  // [bp-0x298]\n
    struct struct_0 **v108;  // [bp-0x290]\n
    char v109;  // [bp-0x288]\n
    unsigned int v110;  // [bp-0x27c]\n
    unsigned int *v111;  // [bp-0x278]\n
    struct struct_0 **v112;  // [bp-0x270]\n
    char v113;  // [bp-0x264]\n
    char *v114;  // [bp-0x258]\n
    unsigned int v115;  // [bp-0x24c]\n
    unsigned int *v116;  // [bp-0x248]\n
    struct struct_0 **v117;  // [bp-0x240]\n
    char v118;  // [bp-0x234]\n
    char v119[4];  // [bp-0x228]\n
    unsigned int v120;  // [bp-0x21c]\n
    unsigned int *v121;  // [bp-0x218]\n
    struct struct_0 **v122;  // [bp-0x210]\n
    char v123;  // [bp-0x204]\n
    char *v124;  // [bp-0x1f8]\n
    unsigned int v125;  // [bp-0x1ec]\n
    unsigned int *v126;  // [bp-0x1e8]\n
    struct struct_0 **v127;  // [bp-0x1e0]\n
    char v128;  // [bp-0x1d4]\n
    char v129[4];  // [bp-0x1c8]\n
    unsigned int v130;  // [bp-0x1bc]\n
    unsigned int *v131;  // [bp-0x1b8]\n
    struct struct_0 **v132;  // [bp-0x1b0]\n
    char *v133;  // [bp-0x1a8]\n
    unsigned int v134;  // [bp-0x19c]\n
    unsigned int *v135;  // [bp-0x198]\n
    struct struct_0 **v136;  // [bp-0x190]\n
    char *v137;  // [bp-0x188]\n
    unsigned int v138;  // [bp-0x17c]\n
    unsigned int *v139;  // [bp-0x178]\n
    struct struct_0 **v140;  // [bp-0x170]\n
    char v141;  // [bp-0x168]\n
    unsigned int v142;  // [bp-0x150]\n
    unsigned int *v143;  // [bp-0x148]\n
    struct struct_0 **v144;  // [bp-0x140]\n
    char v145;  // [bp-0x138]\n
    unsigned int v146;  // [bp-0x120]\n
    unsigned int *v147;  // [bp-0x118]\n
    struct struct_0 **v148;  // [bp-0x110]\n
    char v149;  // [bp-0x108]\n
    unsigned int v150;  // [bp-0xf0]\n
    unsigned int *v151;  // [bp-0xe8]\n
    struct struct_0 **v152;  // [bp-0xe0]\n
    char v153;  // [bp-0xd8]\n
    unsigned int v154;  // [bp-0xc0]\n
    unsigned int *v155;  // [bp-0xb8]\n
    struct struct_0 **v156;  // [bp-0xb0]\n
    char v157;  // [bp-0xa8]\n
    unsigned int v158;  // [bp-0x90]\n
    unsigned int *v159;  // [bp-0x88]\n
    struct struct_0 **v160;  // [bp-0x80]\n
    char v161;  // [bp-0x78]\n
    unsigned int v162;  // [bp-0x60]\n
    unsigned int *v163;  // [bp-0x58]\n
    struct struct_0 **v164;  // [bp-0x50]\n
    unsigned long v165;  // [bp-0x48]\n
    char v166;  // [bp-0x39]\n
    unsigned int *v167;  // [bp-0x38]\n
    struct struct_0 **v168;  // [bp-0x30]\n
    unsigned long v169;  // [bp-0x28]\n
    char v170;  // [bp-0x19]\n
    unsigned int *v171;  // [bp-0x18]\n
    struct struct_0 **v172;  // [bp-0x10]\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v193;  // rax\n
    unsigned int *v194;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax, Other Possible Types: unsigned long\n
\n
    v40 = cgc__cookie;\n
    v39 = -1;\n
    if (cgc_sendline(1, \"===llamasubderivative===\", 24) < 0)\n
        cgc__terminate(1);\n
    v76 = a0;\n
    v75 = a1;\n
    *(&v73[0]) = *(v76);\n
    memset(&v72, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = 0;\n
    if (v73[0] << 56)\n
    {\n
        v38 = 0;\n
        if (v73[1] << 48)\n
        {\n
            v38 = 0;\n
            if (v73[2] << 40)\n
            {\n
                v38 = 0;\n
                if (v73[3] << 32)\n
                {\n
                    v38 = 0;\n
                    if ((v73[4] << 24))\n
                    {\n
                        v38 = 0;\n
                        if ((v73[5] << 16))\n
                        {\n
                            v38 = 0;\n
                            if ((v73[6] << 8))\n
                                v38 = v73[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v74) = v38 & 1;\n
    cgc_uint2str(&v72, 21, *(&v74));\n
    v37 = &v72;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v174 = v75;\n
    *(v174) = *(v174) - 8;\n
    v175 = v76;\n
    *(v175) = *(v175) + 8;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 4);\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(v96)->field_0;\n
    cgc_uint2str(&v93, 4, v94);\n
    v36 = &v93;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v176 = v95;\n
    *(v176) = *(v176) - 1;\n
    v177 = v96;\n
    *(v177) = *(v177) + 1;\n
    v164 = a0;\n
    v163 = a1;\n
    memset(&v161, 0, 21);\n
    if (*(v163) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v162) = *(&*(v164));\n
    cgc_uint2str(&v161, 21, *(&v162));\n
    v35 = &v161;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v161)) < 0)\n
        cgc__terminate(1);\n
    v178 = v163;\n
    *(v178) = *(v178) - 8;\n
    v179 = v164;\n
    *(v179) = *(v179) + 8;\n
    v71 = a0;\n
    v70 = a1;\n
    *(&v68[0]) = *(v71);\n
    memset(&v67, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v34 = 0;\n
    if (v68[0] << 56)\n
    {\n
        v34 = 0;\n
        if (v68[1] << 48)\n
        {\n
            v34 = 0;\n
            if (v68[2] << 40)\n
            {\n
                v34 = 0;\n
                if (v68[3] << 32)\n
                {\n
                    v34 = 0;\n
                    if ((v68[4] << 24))\n
                    {\n
                        v34 = 0;\n
                        if ((v68[5] << 16))\n
                        {\n
                            v34 = 0;\n
                            if ((v68[6] << 8))\n
                                v34 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v69) = v34 & 1;\n
    cgc_uint2str(&v67, 21, *(&v69));\n
    v33 = &v67;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v180 = v70;\n
    *(v180) = *(v180) - 8;\n
    v181 = v71;\n
    *(v181) = *(v181) + 8;\n
    v132 = a0;\n
    v131 = a1;\n
    *(&v129) = *(v132);\n
    memset(&v128, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if ((v129[0] << 24))\n
    {\n
        v32 = 0;\n
        if ((v129[1] << 16))\n
        {\n
            v32 = 0;\n
            if ((v129[2] << 8))\n
                v32 = v129[3];\n
        }\n
    }\n
    v130 = v32 & 1;\n
    cgc_uint2str(&v128, 12, v130);\n
    v31 = &v128;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v128)) < 0)\n
        cgc__terminate(1);\n
    v182 = v131;\n
    *(v182) = *(v182) - 4;\n
    v183 = v132;\n
    *(v183) = *(v183) + 4;\n
    v51 = a0;\n
    v50 = a1;\n
    *(&v48) = *(v51);\n
    memset(&v47, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if ((v48[0] << 8))\n
        v30 = v48[1];\n
    v49 = v30 & 1;\n
    cgc_uint2str(&v47, 6, v49);\n
    v29 = &v47;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v184 = v50;\n
    *(v184) = *(v184) - 2;\n
    v185 = v51;\n
    *(v185) = *(v185) + 2;\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 12, v102);\n
    v28 = &v101;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v186 = v103;\n
    *(v186) = *(v186) - 4;\n
    v187 = v104;\n
    *(v187) = *(v187) + 4;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 12, v98);\n
    v27 = &v97;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v188 = v99;\n
    *(v188) = *(v188) - 4;\n
    v189 = v100;\n
    *(v189) = *(v189) + 4;\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v83) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v83);\n
    v82 = v26;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v81, \"Str: \");\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v191 = v84;\n
    *(v191) = &(*(v191))[4 + cgc_strlen(v81)];\n
    v193 = v83;\n
    *(v193) = *(v193) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v127 = a0;\n
    v126 = a1;\n
    v124 = &*(v127)->field_0;\n
    memset(&v123, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if ((*(v124) << 24))\n
    {\n
        v25 = 0;\n
        if ((v124[1] << 16))\n
        {\n
            v25 = 0;\n
            if ((v124[2] << 8))\n
                v25 = v124[3];\n
        }\n
    }\n
    v125 = v25 & 1;\n
    cgc_uint2str(&v123, 12, v125);\n
    v24 = &v123;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v194 = v126;\n
    *(v194) = *(v194) - 4;\n
    v195 = v127;\n
    *(v195) = *(v195) + 4;\n
    v160 = a0;\n
    v159 = a1;\n
    memset(&v157, 0, 21);\n
    if (*(v159) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v158) = *(&*(v160));\n
    cgc_uint2str(&v157, 21, *(&v158));\n
    v23 = &v157;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v157)) < 0)\n
        cgc__terminate(1);\n
    v196 = v159;\n
    *(v196) = *(v196) - 8;\n
    v197 = v160;\n
    *(v197) = *(v197) + 8;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 4);\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(v92)->field_0;\n
    cgc_uint2str(&v89, 4, v90);\n
    v22 = &v89;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v198 = v91;\n
    *(v198) = *(v198) - 1;\n
    v199 = v92;\n
    *(v199) = *(v199) + 1;\n
    v46 = a0;\n
    v45 = a1;\n
    *(&v43) = *(v46);\n
    memset(&v42, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if ((v43[0] << 8))\n
        v21 = v43[1];\n
    v44 = v21 & 1;\n
    cgc_uint2str(&v42, 6, v44);\n
    v20 = &v42;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v200 = v45;\n
    *(v200) = *(v200) - 2;\n
    v201 = v46;\n
    *(v201) = *(v201) + 2;\n
    v122 = a0;\n
    v121 = a1;\n
    *(&v119) = *(v122);\n
    memset(&v118, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((v119[0] << 24))\n
    {\n
        v19 = 0;\n
        if ((v119[1] << 16))\n
        {\n
            v19 = 0;\n
            if ((v119[2] << 8))\n
                v19 = v119[3];\n
        }\n
    }\n
    v120 = v19 & 1;\n
    cgc_uint2str(&v118, 12, v120);\n
    v18 = &v118;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v202 = v121;\n
    *(v202) = *(v202) - 4;\n
    v203 = v122;\n
    *(v203) = *(v203) + 4;\n
    v172 = a0;\n
    v171 = a1;\n
    if (*(v171) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v170 = *(v172)->field_0;\n
    v204 = v171;\n
    *(v204) = *(v204) - 1;\n
    v205 = v172;\n
    *(v205) = *(v205) + 1;\n
    if (v170 <= *(v171) && !(!v170))\n
        goto LABEL_480753;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_480753:\n
    v169 = cgc_calloc(v170);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v169, *(v172), v170);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v206 = v172;\n
    *(v206) = &(*(v206))[v170];\n
    v207 = v171;\n
    *(v207) = *(v207) - v170;\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    v66 = a0;\n
    v65 = a1;\n
    *(&v63[0]) = *(v66);\n
    memset(&v62, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (v63[0] << 56)\n
    {\n
        v17 = 0;\n
        if (v63[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v63[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v63[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v63[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v63[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v63[6] << 8))\n
                                v17 = v63[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v64) = v17 & 1;\n
    cgc_uint2str(&v62, 21, *(&v64));\n
    v16 = &v62;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v208 = v65;\n
    *(v208) = *(v208) - 8;\n
    v209 = v66;\n
    *(v209) = *(v209) + 8;\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v15 = &v109;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v210 = v111;\n
    *(v210) = *(v210) - 4;\n
    v211 = v112;\n
    *(v211) = *(v211) + 4;\n
    v156 = a0;\n
    v155 = a1;\n
    memset(&v153, 0, 21);\n
    if (*(v155) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v154) = *(&*(v156));\n
    cgc_uint2str(&v153, 21, *(&v154));\n
    v14 = &v153;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v153)) < 0)\n
        cgc__terminate(1);\n
    v212 = v155;\n
    *(v212) = *(v212) - 8;\n
    v213 = v156;\n
    *(v213) = *(v213) + 8;\n
    v168 = a0;\n
    v167 = a1;\n
    if (*(v167) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = *(v168)->field_0;\n
    v214 = v167;\n
    *(v214) = *(v214) - 1;\n
    v215 = v168;\n
    *(v215) = *(v215) + 1;\n
    if (v166 <= *(v167) && !(!v166))\n
        goto LABEL_480d08;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_480d08:\n
    v165 = cgc_calloc(v166);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v165, *(v168), v166);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v216 = v168;\n
    *(v216) = &(*(v216))[v166];\n
    v217 = v167;\n
    *(v217) = *(v217) - v166;\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 4);\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(v88)->field_0;\n
    cgc_uint2str(&v85, 4, v86);\n
    v13 = &v85;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v218 = v87;\n
    *(v218) = *(v218) - 1;\n
    v219 = v88;\n
    *(v219) = *(v219) + 1;\n
    v61 = a0;\n
    v60 = a1;\n
    *(&v58[0]) = *(v61);\n
    memset(&v57, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if (v58[0] << 56)\n
    {\n
        v12 = 0;\n
        if (v58[1] << 48)\n
        {\n
            v12 = 0;\n
            if (v58[2] << 40)\n
            {\n
                v12 = 0;\n
                if (v58[3] << 32)\n
                {\n
                    v12 = 0;\n
                    if ((v58[4] << 24))\n
                    {\n
                        v12 = 0;\n
                        if ((v58[5] << 16))\n
                        {\n
                            v12 = 0;\n
                            if ((v58[6] << 8))\n
                                v12 = v58[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v59) = v12 & 1;\n
    cgc_uint2str(&v57, 21, *(&v59));\n
    v11 = &v57;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v220 = v60;\n
    *(v220) = *(v220) - 8;\n
    v221 = v61;\n
    *(v221) = *(v221) + 8;\n
    v152 = a0;\n
    v151 = a1;\n
    memset(&v149, 0, 21);\n
    if (*(v151) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v150) = *(&*(v152));\n
    cgc_uint2str(&v149, 21, *(&v150));\n
    v10 = &v149;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v222 = v151;\n
    *(v222) = *(v222) - 8;\n
    v223 = v152;\n
    *(v223) = *(v223) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    *(&v53[0]) = *(v56);\n
    memset(&v52, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v53[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v53[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v53[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v53[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v53[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v53[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v53[6] << 8))\n
                                v9 = v53[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v54) = v9 & 1;\n
    cgc_uint2str(&v52, 21, *(&v54));\n
    v8 = &v52;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v224 = v55;\n
    *(v224) = *(v224) - 8;\n
    v225 = v56;\n
    *(v225) = *(v225) + 8;\n
    v117 = a0;\n
    v116 = a1;\n
    v114 = &*(v117)->field_0;\n
    memset(&v113, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((*(v114) << 24))\n
    {\n
        v7 = 0;\n
        if ((v114[1] << 16))\n
        {\n
            v7 = 0;\n
            if ((v114[2] << 8))\n
                v7 = v114[3];\n
        }\n
    }\n
    v115 = v7 & 1;\n
    cgc_uint2str(&v113, 12, v115);\n
    v6 = &v113;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v226 = v116;\n
    *(v226) = *(v226) - 4;\n
    v227 = v117;\n
    *(v227) = *(v227) + 4;\n
    v140 = a0;\n
    v139 = a1;\n
    if (*(v139) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v139) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v139);\n
    v138 = v5;\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v137 = cgc_calloc(134);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v137, \"Str: \");\n
    cgc_strncpy(v137 + 5, *(v140), v138);\n
    v229 = v140;\n
    *(v229) = &(*(v229))[4 + cgc_strlen(v137)];\n
    v231 = v139;\n
    *(v231) = *(v231) - (cgc_strlen(v137) + -4);\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v136 = a0;\n
    v135 = a1;\n
    if (*(v135) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v135) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v135);\n
    v134 = v4;\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v133 = cgc_calloc(134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v133, \"Str: \");\n
    cgc_strncpy(v133 + 5, *(v136), v134);\n
    v233 = v136;\n
    *(v233) = &(*(v233))[4 + cgc_strlen(v133)];\n
    v235 = v135;\n
    *(v235) = *(v235) - (cgc_strlen(v133) + -4);\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v148 = a0;\n
    v147 = a1;\n
    memset(&v145, 0, 21);\n
    if (*(v147) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v146) = *(&*(v148));\n
    cgc_uint2str(&v145, 21, *(&v146));\n
    v3 = &v145;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v145)) < 0)\n
        cgc__terminate(1);\n
    v236 = v147;\n
    *(v236) = *(v236) - 8;\n
    v237 = v148;\n
    *(v237) = *(v237) + 8;\n
    v144 = a0;\n
    v143 = a1;\n
    memset(&v141, 0, 21);\n
    if (*(v143) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v142) = *(&*(v144));\n
    cgc_uint2str(&v141, 21, *(&v142));\n
    v2 = &v141;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v238 = v143;\n
    *(v238) = *(v238) - 8;\n
    v239 = v144;\n
    *(v239) = *(v239) + 8;\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v79) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v79);\n
    v78 = v1;\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = cgc_calloc(134);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v77, \"Str: \");\n
    cgc_strncpy(v77 + 5, *(v80), v78);\n
    v241 = v80;\n
    *(v241) = &(*(v241))[4 + cgc_strlen(v77)];\n
    v243 = v79;\n
    *(v243) = *(v243) - (cgc_strlen(v77) + -4);\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v0 = &v105;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v244 = v107;\n
    *(v244) = *(v244) - 4;\n
    v245 = v108;\n
    *(v245) = *(v245) + 4;\n
    v40 ^= cgc__cookie;\n
    if (v40)\n
        cgc___stack_cookie_fail();\n
    v246 = a1;\n
    if (*(a1) > 0 && v39 >= 0)\n
    {\n
        v246 = v39;\n
        if (v246 < 0)\n
            v246 = *(&(&v41)[8 * v39])(a0, a1);\n
    }\n
    return v246;\n
}\n
", "4726504:sub_481ee8": null, "4726512:cgc_process_llamaleaflessness": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaleaflessness(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x338]\n
    struct_1 *v1;  // [bp-0x330]\n
    struct_1 *v2;  // [bp-0x328]\n
    char v3;  // [bp-0x319]\n
    struct_1 *v4;  // [bp-0x318]\n
    struct_1 *v5;  // [bp-0x310]\n
    char v6;  // [bp-0x301]\n
    struct_1 *v7;  // [bp-0x300]\n
    struct_1 *v8;  // [bp-0x2f8]\n
    struct_1 *v9;  // [bp-0x2f0]\n
    struct_1 *v10;  // [bp-0x2e8]\n
    struct_1 *v11;  // [bp-0x2e0]\n
    unsigned int v12;  // [bp-0x2d8]\n
    unsigned int v13;  // [bp-0x2d4]\n
    struct_1 *v14;  // [bp-0x2d0]\n
    char v15;  // [bp-0x2c5]\n
    unsigned int v16;  // [bp-0x2c4]\n
    unsigned int v17;  // [bp-0x2c0]\n
    unsigned int v18;  // [bp-0x2bc]\n
    char v19;  // [bp-0x2b8]\n
    char v20;  // [bp-0x29e]\n
    char *v21;  // [bp-0x298]\n
    unsigned short v22;  // [bp-0x28a]\n
    unsigned int *v23;  // [bp-0x288]\n
    struct struct_0 **v24;  // [bp-0x280]\n
    char v25;  // [bp-0x278]\n
    char v26[8];  // [bp-0x260]\n
    unsigned int v27;  // [bp-0x258]\n
    unsigned int *v28;  // [bp-0x250]\n
    struct struct_0 **v29;  // [bp-0x248]\n
    char *v30;  // [bp-0x240]\n
    unsigned int *v31;  // [bp-0x238]\n
    struct struct_0 **v32;  // [bp-0x230]\n
    char *v33;  // [bp-0x228]\n
    unsigned int v34;  // [bp-0x21c]\n
    unsigned int *v35;  // [bp-0x218]\n
    struct struct_0 **v36;  // [bp-0x210]\n
    char *v37;  // [bp-0x208]\n
    unsigned int v38;  // [bp-0x1fc]\n
    unsigned int *v39;  // [bp-0x1f8]\n
    struct struct_0 **v40;  // [bp-0x1f0]\n
    char *v41;  // [bp-0x1e8]\n
    unsigned int v42;  // [bp-0x1dc]\n
    unsigned int *v43;  // [bp-0x1d8]\n
    struct struct_0 **v44;  // [bp-0x1d0]\n
    char v45;  // [bp-0x1c8]\n
    unsigned short v46;  // [bp-0x1c2]\n
    unsigned int *v47;  // [bp-0x1c0]\n
    struct struct_0 **v48;  // [bp-0x1b8]\n
    char v49;  // [bp-0x1b0]\n
    unsigned short v50;  // [bp-0x1aa]\n
    unsigned int *v51;  // [bp-0x1a8]\n
    struct struct_0 **v52;  // [bp-0x1a0]\n
    char v53;  // [bp-0x195]\n
    char v54;  // [bp-0x191]\n
    unsigned int *v55;  // [bp-0x190]\n
    struct struct_0 **v56;  // [bp-0x188]\n
    char v57;  // [bp-0x17d]\n
    char v58;  // [bp-0x179]\n
    unsigned int *v59;  // [bp-0x178]\n
    struct struct_0 **v60;  // [bp-0x170]\n
    unsigned short *v61;  // [bp-0x168]\n
    unsigned int *v62;  // [bp-0x160]\n
    struct struct_0 **v63;  // [bp-0x158]\n
    char v64[8];  // [bp-0x150]\n
    unsigned int *v65;  // [bp-0x148]\n
    struct struct_0 **v66;  // [bp-0x140]\n
    char v67;  // [bp-0x138]\n
    unsigned int v68;  // [bp-0x120]\n
    unsigned int *v69;  // [bp-0x118]\n
    struct struct_0 **v70;  // [bp-0x110]\n
    char v71;  // [bp-0x108]\n
    unsigned int v72;  // [bp-0xf0]\n
    unsigned int *v73;  // [bp-0xe8]\n
    struct struct_0 **v74;  // [bp-0xe0]\n
    char v75;  // [bp-0xd8]\n
    unsigned int v76;  // [bp-0xcc]\n
    unsigned int *v77;  // [bp-0xc8]\n
    struct struct_0 **v78;  // [bp-0xc0]\n
    char v79;  // [bp-0xb8]\n
    unsigned int v80;  // [bp-0xac]\n
    unsigned int *v81;  // [bp-0xa8]\n
    struct struct_0 **v82;  // [bp-0xa0]\n
    unsigned long v83;  // [bp-0x98]\n
    unsigned short v84;  // [bp-0x8a]\n
    unsigned int *v85;  // [bp-0x88]\n
    struct struct_0 **v86;  // [bp-0x80]\n
    char v87;  // [bp-0x74]\n
    char *v88;  // [bp-0x68]\n
    unsigned int v89;  // [bp-0x5c]\n
    unsigned int *v90;  // [bp-0x58]\n
    struct struct_0 **v91;  // [bp-0x50]\n
    unsigned long v92;  // [bp-0x48]\n
    char v93;  // [bp-0x39]\n
    unsigned int *v94;  // [bp-0x38]\n
    struct struct_0 **v95;  // [bp-0x30]\n
    unsigned long v96;  // [bp-0x28]\n
    char v97;  // [bp-0x19]\n
    unsigned int *v98;  // [bp-0x18]\n
    struct struct_0 **v99;  // [bp-0x10]\n
    struct struct_0 **v102;  // rax\n
    unsigned int *v104;  // rax\n
    unsigned int *v105;  // rax\n
    struct struct_0 **v106;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_0 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_0 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    struct struct_0 **v131;  // rax\n
    unsigned int *v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    struct struct_0 **v135;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v139;  // rax\n
    struct struct_0 **v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamaleaflessness===\", 23) < 0)\n
        cgc__terminate(1);\n
    v44 = a0;\n
    v43 = a1;\n
    if (*(v43) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v43) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v43);\n
    v42 = v16;\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = cgc_calloc(134);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v41, \"Str: \");\n
    cgc_strncpy(v41 + 5, *(v44), v42);\n
    v102 = v44;\n
    *(v102) = &(*(v102))[4 + cgc_strlen(v41)];\n
    v104 = v43;\n
    *(v104) = *(v104) - (cgc_strlen(v41) + -4);\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v91 = a0;\n
    v90 = a1;\n
    v88 = &*(v91)->field_0;\n
    memset(&v87, 0, 12);\n
    if (*(v90) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((*(v88) << 24))\n
    {\n
        v15 = 0;\n
        if ((v88[1] << 16))\n
        {\n
            v15 = 0;\n
            if ((v88[2] << 8))\n
                v15 = v88[3];\n
        }\n
    }\n
    v89 = v15 & 1;\n
    cgc_uint2str(&v87, 12, v89);\n
    v14 = &v87;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v105 = v90;\n
    *(v105) = *(v105) - 4;\n
    v106 = v91;\n
    *(v106) = *(v106) + 4;\n
    v40 = a0;\n
    v39 = a1;\n
    if (*(v39) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v39) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v39);\n
    v38 = v13;\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = cgc_calloc(134);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v37, \"Str: \");\n
    cgc_strncpy(v37 + 5, *(v40), v38);\n
    v108 = v40;\n
    *(v108) = &(*(v108))[4 + cgc_strlen(v37)];\n
    v110 = v39;\n
    *(v110) = *(v110) - (cgc_strlen(v37) + -4);\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v32 = a0;\n
    v31 = a1;\n
    v30 = &*(v32)->field_0;\n
    if (*(v31) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = v31;\n
    *(v111) = *(v111) - 1;\n
    v112 = v32;\n
    *(v112) = *(v112) + 1;\n
    v17 = *(v30);\n
    v36 = a0;\n
    v35 = a1;\n
    if (*(v35) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v35) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v35);\n
    v34 = v12;\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = cgc_calloc(134);\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v33, \"Str: \");\n
    cgc_strncpy(v33 + 5, *(v36), v34);\n
    v114 = v36;\n
    *(v114) = &(*(v114))[4 + cgc_strlen(v33)];\n
    v116 = v35;\n
    *(v116) = *(v116) - (cgc_strlen(v33) + -4);\n
    cgc_checkheap();\n
    cgc_free(v33);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    memset(&v49, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(&*(v52));\n
    cgc_uint2str(&v49, 6, v50);\n
    v11 = &v49;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v117 = v51;\n
    *(v117) = *(v117) - 2;\n
    v118 = v52;\n
    *(v118) = *(v118) + 2;\n
    v66 = a0;\n
    v65 = a1;\n
    *(&v64[0]) = *(v66);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = v65;\n
    *(v119) = *(v119) - 2;\n
    v120 = v66;\n
    *(v120) = *(v120) + 2;\n
    v17 = *(&v64[0]);\n
    v48 = a0;\n
    v47 = a1;\n
    memset(&v45, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v46 = *(&*(v48));\n
    cgc_uint2str(&v45, 6, v46);\n
    v10 = &v45;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v121 = v47;\n
    *(v121) = *(v121) - 2;\n
    v122 = v48;\n
    *(v122) = *(v122) + 2;\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(&*(v82));\n
    cgc_uint2str(&v79, 12, v80);\n
    v9 = &v79;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v123 = v81;\n
    *(v123) = *(v123) - 4;\n
    v124 = v82;\n
    *(v124) = *(v124) + 4;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 4);\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    cgc_uint2str(&v57, 4, v58);\n
    v8 = &v57;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v125 = v59;\n
    *(v125) = *(v125) - 1;\n
    v126 = v60;\n
    *(v126) = *(v126) + 1;\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 4);\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(v56)->field_0;\n
    cgc_uint2str(&v53, 4, v54);\n
    v7 = &v53;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v127 = v55;\n
    *(v127) = *(v127) - 1;\n
    v128 = v56;\n
    *(v128) = *(v128) + 1;\n
    v99 = a0;\n
    v98 = a1;\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(v99)->field_0;\n
    v129 = v98;\n
    *(v129) = *(v129) - 1;\n
    v130 = v99;\n
    *(v130) = *(v130) + 1;\n
    if (v97 <= *(v98) && !(!v97))\n
        goto LABEL_482d9d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_482d9d:\n
    v96 = cgc_calloc(v97);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v96, *(v99), v97);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v131 = v99;\n
    *(v131) = &(*(v131))[v97];\n
    v132 = v98;\n
    *(v132) = *(v132) - v97;\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    v95 = a0;\n
    v94 = a1;\n
    if (*(v94) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(v95)->field_0;\n
    v133 = v94;\n
    *(v133) = *(v133) - 1;\n
    v134 = v95;\n
    *(v134) = *(v134) + 1;\n
    if (v93 <= *(v94) && !(!v93))\n
        goto LABEL_482f2c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_482f2c:\n
    v92 = cgc_calloc(v93);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v92, *(v95), v93);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v135 = v95;\n
    *(v135) = &(*(v135))[v93];\n
    v136 = v94;\n
    *(v136) = *(v136) - v93;\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    v24 = a0;\n
    v23 = a1;\n
    v21 = &*(v24)->field_0;\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((*(v21) << 8))\n
        v6 = v21[1];\n
    v22 = v6 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v5 = &v20;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v137 = v23;\n
    *(v137) = *(v137) - 2;\n
    v138 = v24;\n
    *(v138) = *(v138) + 2;\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v72) = *(&*(v74));\n
    cgc_uint2str(&v71, 21, *(&v72));\n
    v4 = &v71;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v139 = v73;\n
    *(v139) = *(v139) - 8;\n
    v140 = v74;\n
    *(v140) = *(v140) + 8;\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26[0]) = *(v29);\n
    memset(&v25, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v26[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v26[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v26[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v26[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v26[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v26[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v26[6] << 8))\n
                                v3 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v27) = v3 & 1;\n
    cgc_uint2str(&v25, 21, *(&v27));\n
    v2 = &v25;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v141 = v28;\n
    *(v141) = *(v141) - 8;\n
    v142 = v29;\n
    *(v142) = *(v142) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 12);\n
    if (*(v77) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 12, v76);\n
    v1 = &v75;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v143 = v77;\n
    *(v143) = *(v143) - 4;\n
    v144 = v78;\n
    *(v144) = *(v144) + 4;\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v68) = *(&*(v70));\n
    cgc_uint2str(&v67, 21, *(&v68));\n
    v0 = &v67;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v145 = v69;\n
    *(v145) = *(v145) - 8;\n
    v146 = v70;\n
    *(v146) = *(v146) + 8;\n
    v86 = a0;\n
    v85 = a1;\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    v147 = v85;\n
    *(v147) = *(v147) - 2;\n
    v148 = v86;\n
    *(v148) = *(v148) + 2;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_483739;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_483739:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v149 = v85;\n
    *(v149) = *(v149) - v84;\n
    v150 = v86;\n
    *(v150) = &(*(v150))[v84];\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v63 = a0;\n
    v62 = a1;\n
    v61 = &*(v63);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = v62;\n
    *(v151) = *(v151) - 2;\n
    v152 = v63;\n
    *(v152) = *(v152) + 2;\n
    v17 = *(v61);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v153 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v153 = v17;\n
        if (v153 < 0)\n
            v153 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v153;\n
}\n
", "4733231:sub_48392f": null, "4733232:cgc_process_llamasquatinid": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6240;\n
extern unsigned long long g_4c6248;\n
\n
long long cgc_process_llamasquatinid(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x7c8]\n
    struct_1 *v1;  // [bp-0x7c0]\n
    struct_1 *v2;  // [bp-0x7b8]\n
    char v3;  // [bp-0x7a9]\n
    struct_1 *v4;  // [bp-0x7a8]\n
    unsigned int v5;  // [bp-0x79c]\n
    struct_1 *v6;  // [bp-0x798]\n
    struct_1 *v7;  // [bp-0x790]\n
    char v8;  // [bp-0x781]\n
    struct_1 *v9;  // [bp-0x780]\n
    char v10;  // [bp-0x771]\n
    struct_1 *v11;  // [bp-0x770]\n
    struct_1 *v12;  // [bp-0x768]\n
    struct_1 *v13;  // [bp-0x760]\n
    char v14;  // [bp-0x751]\n
    struct_1 *v15;  // [bp-0x750]\n
    struct_1 *v16;  // [bp-0x748]\n
    char v17;  // [bp-0x739]\n
    struct_1 *v18;  // [bp-0x738]\n
    struct_1 *v19;  // [bp-0x730]\n
    char v20;  // [bp-0x721]\n
    struct_1 *v21;  // [bp-0x720]\n
    struct_1 *v22;  // [bp-0x718]\n
    struct_1 *v23;  // [bp-0x710]\n
    struct_1 *v24;  // [bp-0x708]\n
    struct_1 *v25;  // [bp-0x700]\n
    char v26;  // [bp-0x6f1]\n
    struct_1 *v27;  // [bp-0x6f0]\n
    struct_1 *v28;  // [bp-0x6e8]\n
    struct_1 *v29;  // [bp-0x6e0]\n
    struct_1 *v30;  // [bp-0x6d8]\n
    char v31;  // [bp-0x6c9]\n
    struct_1 *v32;  // [bp-0x6c8]\n
    char v33;  // [bp-0x6b9]\n
    struct_1 *v34;  // [bp-0x6b8]\n
    struct_1 *v35;  // [bp-0x6b0]\n
    char v36;  // [bp-0x6a5]\n
    unsigned int v37;  // [bp-0x6a4]\n
    unsigned int v38;  // [bp-0x6a0]\n
    unsigned int v39;  // [bp-0x69c]\n
    unsigned long v40;  // [bp-0x698]\n
    unsigned long v41;  // [bp-0x690]\n
    char v42;  // [bp-0x66e]\n
    char v43[2];  // [bp-0x668]\n
    unsigned short v44;  // [bp-0x65a]\n
    unsigned int *v45;  // [bp-0x658]\n
    struct struct_0 **v46;  // [bp-0x650]\n
    char v47;  // [bp-0x646]\n
    char *v48;  // [bp-0x640]\n
    unsigned short v49;  // [bp-0x632]\n
    unsigned int *v50;  // [bp-0x630]\n
    struct struct_0 **v51;  // [bp-0x628]\n
    char v52;  // [bp-0x61e]\n
    char *v53;  // [bp-0x618]\n
    unsigned short v54;  // [bp-0x60a]\n
    unsigned int *v55;  // [bp-0x608]\n
    struct struct_0 **v56;  // [bp-0x600]\n
    char v57;  // [bp-0x5f8]\n
    char v58[8];  // [bp-0x5d8]\n
    unsigned int v59;  // [bp-0x5d0]\n
    unsigned int *v60;  // [bp-0x5c8]\n
    struct struct_0 **v61;  // [bp-0x5c0]\n
    char v62;  // [bp-0x5b8]\n
    char v63[8];  // [bp-0x598]\n
    unsigned int v64;  // [bp-0x590]\n
    unsigned int *v65;  // [bp-0x588]\n
    struct struct_0 **v66;  // [bp-0x580]\n
    char v67;  // [bp-0x578]\n
    char v68[8];  // [bp-0x558]\n
    unsigned int v69;  // [bp-0x550]\n
    unsigned int *v70;  // [bp-0x548]\n
    struct struct_0 **v71;  // [bp-0x540]\n
    char v72;  // [bp-0x538]\n
    char v73[8];  // [bp-0x518]\n
    unsigned int v74;  // [bp-0x510]\n
    unsigned int *v75;  // [bp-0x508]\n
    struct struct_0 **v76;  // [bp-0x500]\n
    char v77;  // [bp-0x4f8]\n
    char v78[8];  // [bp-0x4d8]\n
    unsigned int v79;  // [bp-0x4d0]\n
    unsigned int *v80;  // [bp-0x4c8]\n
    struct struct_0 **v81;  // [bp-0x4c0]\n
    char v82;  // [bp-0x4b8]\n
    char v83[8];  // [bp-0x498]\n
    unsigned int v84;  // [bp-0x490]\n
    unsigned int *v85;  // [bp-0x488]\n
    struct struct_0 **v86;  // [bp-0x480]\n
    unsigned long v87;  // [bp-0x478]\n
    char v88;  // [bp-0x469]\n
    unsigned int *v89;  // [bp-0x468]\n
    struct struct_0 **v90;  // [bp-0x460]\n
    unsigned long v91;  // [bp-0x458]\n
    char v92;  // [bp-0x449]\n
    unsigned int *v93;  // [bp-0x448]\n
    struct struct_0 **v94;  // [bp-0x440]\n
    unsigned long v95;  // [bp-0x438]\n
    char v96;  // [bp-0x429]\n
    unsigned int *v97;  // [bp-0x428]\n
    struct struct_0 **v98;  // [bp-0x420]\n
    unsigned long v99;  // [bp-0x418]\n
    char v100;  // [bp-0x409]\n
    unsigned int *v101;  // [bp-0x408]\n
    struct struct_0 **v102;  // [bp-0x400]\n
    char *v103;  // [bp-0x3f8]\n
    unsigned int *v104;  // [bp-0x3f0]\n
    struct struct_0 **v105;  // [bp-0x3e8]\n
    char *v106;  // [bp-0x3e0]\n
    unsigned int *v107;  // [bp-0x3d8]\n
    struct struct_0 **v108;  // [bp-0x3d0]\n
    char *v109;  // [bp-0x3c8]\n
    unsigned int *v110;  // [bp-0x3c0]\n
    struct struct_0 **v111;  // [bp-0x3b8]\n
    char *v112;  // [bp-0x3b0]\n
    unsigned int v113;  // [bp-0x3a4]\n
    unsigned int *v114;  // [bp-0x3a0]\n
    struct struct_0 **v115;  // [bp-0x398]\n
    char v116;  // [bp-0x390]\n
    unsigned short v117;  // [bp-0x38a]\n
    unsigned int *v118;  // [bp-0x388]\n
    struct struct_0 **v119;  // [bp-0x380]\n
    char v120;  // [bp-0x375]\n
    char v121;  // [bp-0x371]\n
    unsigned int *v122;  // [bp-0x370]\n
    struct struct_0 **v123;  // [bp-0x368]\n
    char v124;  // [bp-0x35d]\n
    char v125;  // [bp-0x359]\n
    unsigned int *v126;  // [bp-0x358]\n
    struct struct_0 **v127;  // [bp-0x350]\n
    char v128;  // [bp-0x345]\n
    char v129;  // [bp-0x341]\n
    unsigned int *v130;  // [bp-0x340]\n
    struct struct_0 **v131;  // [bp-0x338]\n
    unsigned short *v132;  // [bp-0x330]\n
    unsigned int *v133;  // [bp-0x328]\n
    struct struct_0 **v134;  // [bp-0x320]\n
    unsigned short *v135;  // [bp-0x318]\n
    unsigned int *v136;  // [bp-0x310]\n
    struct struct_0 **v137;  // [bp-0x308]\n
    char *v138;  // [bp-0x300]\n
    unsigned int *v139;  // [bp-0x2f8]\n
    struct struct_0 **v140;  // [bp-0x2f0]\n
    char v141;  // [bp-0x2e8]\n
    unsigned int v142;  // [bp-0x2d0]\n
    unsigned int *v143;  // [bp-0x2c8]\n
    struct struct_0 **v144;  // [bp-0x2c0]\n
    char v145;  // [bp-0x2b8]\n
    unsigned int v146;  // [bp-0x2ac]\n
    unsigned int *v147;  // [bp-0x2a8]\n
    struct struct_0 **v148;  // [bp-0x2a0]\n
    char v149;  // [bp-0x298]\n
    unsigned int v150;  // [bp-0x28c]\n
    unsigned int *v151;  // [bp-0x288]\n
    struct struct_0 **v152;  // [bp-0x280]\n
    char v153;  // [bp-0x278]\n
    unsigned int v154;  // [bp-0x26c]\n
    unsigned int *v155;  // [bp-0x268]\n
    struct struct_0 **v156;  // [bp-0x260]\n
    char v157;  // [bp-0x258]\n
    unsigned int v158;  // [bp-0x24c]\n
    unsigned int *v159;  // [bp-0x248]\n
    struct struct_0 **v160;  // [bp-0x240]\n
    char v161;  // [bp-0x238]\n
    unsigned int v162;  // [bp-0x22c]\n
    unsigned int *v163;  // [bp-0x228]\n
    struct struct_0 **v164;  // [bp-0x220]\n
    char v165;  // [bp-0x218]\n
    unsigned int v166;  // [bp-0x20c]\n
    unsigned int *v167;  // [bp-0x208]\n
    struct struct_0 **v168;  // [bp-0x200]\n
    char v169;  // [bp-0x1f8]\n
    unsigned int v170;  // [bp-0x1ec]\n
    unsigned int *v171;  // [bp-0x1e8]\n
    struct struct_0 **v172;  // [bp-0x1e0]\n
    char v173;  // [bp-0x1d8]\n
    unsigned int v174;  // [bp-0x1cc]\n
    unsigned int *v175;  // [bp-0x1c8]\n
    struct struct_0 **v176;  // [bp-0x1c0]\n
    char v177;  // [bp-0x1b8]\n
    unsigned int v178;  // [bp-0x1ac]\n
    unsigned int *v179;  // [bp-0x1a8]\n
    struct struct_0 **v180;  // [bp-0x1a0]\n
    unsigned long v181;  // [bp-0x198]\n
    unsigned short v182;  // [bp-0x18a]\n
    unsigned int *v183;  // [bp-0x188]\n
    struct struct_0 **v184;  // [bp-0x180]\n
    unsigned long v185;  // [bp-0x178]\n
    unsigned short v186;  // [bp-0x16a]\n
    unsigned int *v187;  // [bp-0x168]\n
    struct struct_0 **v188;  // [bp-0x160]\n
    unsigned long v189;  // [bp-0x158]\n
    unsigned short v190;  // [bp-0x14a]\n
    unsigned int *v191;  // [bp-0x148]\n
    struct struct_0 **v192;  // [bp-0x140]\n
    unsigned long v193;  // [bp-0x138]\n
    unsigned short v194;  // [bp-0x12a]\n
    unsigned int *v195;  // [bp-0x128]\n
    struct struct_0 **v196;  // [bp-0x120]\n
    char v197;  // [bp-0x114]\n
    char v198[8];  // [bp-0x108]\n
    unsigned int v199;  // [bp-0xfc]\n
    unsigned int *v200;  // [bp-0xf8]\n
    struct struct_0 **v201;  // [bp-0xf0]\n
    char *v202;  // [bp-0xe8]\n
    unsigned int v203;  // [bp-0xdc]\n
    unsigned int *v204;  // [bp-0xd8]\n
    struct struct_0 **v205;  // [bp-0xd0]\n
    char v206;  // [bp-0xc8]\n
    unsigned int v207;  // [bp-0xb0]\n
    unsigned int *v208;  // [bp-0xa8]\n
    struct struct_0 **v209;  // [bp-0xa0]\n
    char v210;  // [bp-0x98]\n
    unsigned int v211;  // [bp-0x80]\n
    unsigned int *v212;  // [bp-0x78]\n
    struct struct_0 **v213;  // [bp-0x70]\n
    unsigned long v214;  // [bp-0x68]\n
    char v215;  // [bp-0x59]\n
    unsigned int *v216;  // [bp-0x58]\n
    struct struct_0 **v217;  // [bp-0x50]\n
    unsigned long v218;  // [bp-0x48]\n
    char v219;  // [bp-0x39]\n
    unsigned int *v220;  // [bp-0x38]\n
    struct struct_0 **v221;  // [bp-0x30]\n
    unsigned long v222;  // [bp-0x28]\n
    char v223;  // [bp-0x19]\n
    unsigned int *v224;  // [bp-0x18]\n
    struct struct_0 **v225;  // [bp-0x10]\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_0 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_0 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_0 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_0 **v270;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_0 **v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_0 **v282;  // rax\n
    unsigned int *v283;  // rax\n
    struct struct_0 **v284;  // rax\n
    unsigned int *v285;  // rax\n
    struct struct_0 **v286;  // rax\n
    unsigned int *v287;  // rax\n
    struct struct_0 **v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    unsigned int *v291;  // rax\n
    struct struct_0 **v292;  // rax\n
    unsigned int *v293;  // rax\n
    struct struct_0 **v294;  // rax\n
    unsigned int *v295;  // rax\n
    struct struct_0 **v296;  // rax\n
    unsigned int *v297;  // rax\n
    struct struct_0 **v298;  // rax\n
    unsigned int *v299;  // rax\n
    struct struct_0 **v300;  // rax\n
    unsigned int *v301;  // rax\n
    struct struct_0 **v302;  // rax\n
    unsigned int *v303;  // rax\n
    struct struct_0 **v304;  // rax\n
    unsigned int *v305;  // rax\n
    struct struct_0 **v306;  // rax\n
    unsigned int *v307;  // rax\n
    struct struct_0 **v308;  // rax\n
    unsigned int *v309;  // rax\n
    struct struct_0 **v310;  // rax\n
    unsigned int *v311;  // rax\n
    struct struct_0 **v312;  // rax\n
    unsigned int *v313;  // rax\n
    struct struct_0 **v314;  // rax\n
    struct struct_0 **v316;  // rax\n
    unsigned int *v318;  // rax\n
    unsigned int *v319;  // rax\n
    struct struct_0 **v320;  // rax\n
    unsigned int *v321;  // rax\n
    struct struct_0 **v322;  // rax\n
    unsigned int *v323;  // rax\n
    struct struct_0 **v324;  // rax\n
    unsigned int *v325;  // rax\n
    struct struct_0 **v326;  // rax\n
    unsigned int *v327;  // rax\n
    struct struct_0 **v328;  // rax\n
    struct struct_0 **v329;  // rax\n
    unsigned int *v330;  // rax\n
    unsigned int *v331;  // rax\n
    struct struct_0 **v332;  // rax\n
    unsigned int *v333;  // rax\n
    struct struct_0 **v334;  // rax\n
    unsigned int *v335;  // rax\n
    struct struct_0 **v336;  // rax\n
    unsigned int *v337;  // rax\n
    struct struct_0 **v338;  // rax\n
    unsigned int *v339;  // rax\n
    struct struct_0 **v340;  // rax\n
    struct struct_0 **v341;  // rax\n
    unsigned int *v342;  // rax\n
    unsigned int *v343;  // rax, Other Possible Types: unsigned long\n
\n
    v40 = g_4c6240;\n
    v41 = g_4c6248;\n
    v39 = cgc__cookie;\n
    v38 = -1;\n
    if (cgc_sendline(1, \"===llamasquatinid===\", 20) < 0)\n
        cgc__terminate(1);\n
    v111 = a0;\n
    v110 = a1;\n
    v109 = &*(v111)->field_0;\n
    if (*(v110) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v227 = v110;\n
    *(v227) = *(v227) - 1;\n
    v228 = v111;\n
    *(v228) = *(v228) + 1;\n
    v38 = *(v109);\n
    v115 = a0;\n
    v114 = a1;\n
    if (*(v114) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v114) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v114);\n
    v113 = v37;\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = cgc_calloc(134);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v112, \"Str: \");\n
    cgc_strncpy(v112 + 5, *(v115), v113);\n
    v230 = v115;\n
    *(v230) = &(*(v230))[4 + cgc_strlen(v112)];\n
    v232 = v114;\n
    *(v232) = *(v232) - (cgc_strlen(v112) + -4);\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v86 = a0;\n
    v85 = a1;\n
    *(&v83[0]) = *(v86);\n
    memset(&v82, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = 0;\n
    if (v83[0] << 56)\n
    {\n
        v36 = 0;\n
        if (v83[1] << 48)\n
        {\n
            v36 = 0;\n
            if (v83[2] << 40)\n
            {\n
                v36 = 0;\n
                if (v83[3] << 32)\n
                {\n
                    v36 = 0;\n
                    if ((v83[4] << 24))\n
                    {\n
                        v36 = 0;\n
                        if ((v83[5] << 16))\n
                        {\n
                            v36 = 0;\n
                            if ((v83[6] << 8))\n
                                v36 = v83[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v84) = v36 & 1;\n
    cgc_uint2str(&v82, 21, *(&v84));\n
    v35 = &v82;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v233 = v85;\n
    *(v233) = *(v233) - 8;\n
    v234 = v86;\n
    *(v234) = *(v234) + 8;\n
    v156 = a0;\n
    v155 = a1;\n
    memset(&v153, 0, 12);\n
    if (*(v155) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = *(&*(v156));\n
    cgc_uint2str(&v153, 12, v154);\n
    v34 = &v153;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v153)) < 0)\n
        cgc__terminate(1);\n
    v235 = v155;\n
    *(v235) = *(v235) - 4;\n
    v236 = v156;\n
    *(v236) = *(v236) + 4;\n
    v201 = a0;\n
    v200 = a1;\n
    *(&v198[0]) = *(v201);\n
    memset(&v197, 0, 12);\n
    if (*(v200) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = 0;\n
    if ((v198[0] << 24))\n
    {\n
        v33 = 0;\n
        if ((v198[1] << 16))\n
        {\n
            v33 = 0;\n
            if ((v198[2] << 8))\n
                v33 = v198[3];\n
        }\n
    }\n
    v199 = v33 & 1;\n
    cgc_uint2str(&v197, 12, v199);\n
    v32 = &v197;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v197)) < 0)\n
        cgc__terminate(1);\n
    v237 = v200;\n
    *(v237) = *(v237) - 4;\n
    v238 = v201;\n
    *(v238) = *(v238) + 4;\n
    v184 = a0;\n
    v183 = a1;\n
    if (*(v183) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v182 = *(&*(v184));\n
    v239 = v183;\n
    *(v239) = *(v239) - 2;\n
    v240 = v184;\n
    *(v240) = *(v240) + 2;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_4841cb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4841cb:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v241 = v183;\n
    *(v241) = *(v241) - v182;\n
    v242 = v184;\n
    *(v242) = &(*(v242))[v182];\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v81 = a0;\n
    v80 = a1;\n
    *(&v78[0]) = *(v81);\n
    memset(&v77, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if (v78[0] << 56)\n
    {\n
        v31 = 0;\n
        if (v78[1] << 48)\n
        {\n
            v31 = 0;\n
            if (v78[2] << 40)\n
            {\n
                v31 = 0;\n
                if (v78[3] << 32)\n
                {\n
                    v31 = 0;\n
                    if ((v78[4] << 24))\n
                    {\n
                        v31 = 0;\n
                        if ((v78[5] << 16))\n
                        {\n
                            v31 = 0;\n
                            if ((v78[6] << 8))\n
                                v31 = v78[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v79) = v31 & 1;\n
    cgc_uint2str(&v77, 21, *(&v79));\n
    v30 = &v77;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v243 = v80;\n
    *(v243) = *(v243) - 8;\n
    v244 = v81;\n
    *(v244) = *(v244) + 8;\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 6);\n
    if (*(v118) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(&*(v119));\n
    cgc_uint2str(&v116, 6, v117);\n
    v29 = &v116;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v245 = v118;\n
    *(v245) = *(v245) - 2;\n
    v246 = v119;\n
    *(v246) = *(v246) + 2;\n
    v140 = a0;\n
    v139 = a1;\n
    v138 = &*(v140)->field_0;\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v247 = v139;\n
    *(v247) = *(v247) - 2;\n
    v248 = v140;\n
    *(v248) = *(v248) + 2;\n
    v38 = *(&v138);\n
    v102 = a0;\n
    v101 = a1;\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v100 = *(v102)->field_0;\n
    v249 = v101;\n
    *(v249) = *(v249) - 1;\n
    v250 = v102;\n
    *(v250) = *(v250) + 1;\n
    if (v100 <= *(v101) && !(!v100))\n
        goto LABEL_484758;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_484758:\n
    v99 = cgc_calloc(v100);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v99, *(v102), v100);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v251 = v102;\n
    *(v251) = &(*(v251))[v100];\n
    v252 = v101;\n
    *(v252) = *(v252) - v100;\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    v225 = a0;\n
    v224 = a1;\n
    if (*(v224) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v223 = *(v225)->field_0;\n
    v253 = v224;\n
    *(v253) = *(v253) - 1;\n
    v254 = v225;\n
    *(v254) = *(v254) + 1;\n
    if (v223 <= *(v224) && !(!v223))\n
        goto LABEL_484908;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_484908:\n
    v222 = cgc_calloc(v223);\n
    if (!v222)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v222, *(v225), v223);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v255 = v225;\n
    *(v255) = &(*(v255))[v223];\n
    v256 = v224;\n
    *(v256) = *(v256) - v223;\n
    cgc_checkheap();\n
    cgc_free(v222);\n
    v180 = a0;\n
    v179 = a1;\n
    memset(&v177, 0, 12);\n
    if (*(v179) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v178 = *(&*(v180));\n
    cgc_uint2str(&v177, 12, v178);\n
    v28 = &v177;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v177)) < 0)\n
        cgc__terminate(1);\n
    v257 = v179;\n
    *(v257) = *(v257) - 4;\n
    v258 = v180;\n
    *(v258) = *(v258) + 4;\n
    v176 = a0;\n
    v175 = a1;\n
    memset(&v173, 0, 12);\n
    if (*(v175) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v174 = *(&*(v176));\n
    cgc_uint2str(&v173, 12, v174);\n
    v27 = &v173;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v173)) < 0)\n
        cgc__terminate(1);\n
    v259 = v175;\n
    *(v259) = *(v259) - 4;\n
    v260 = v176;\n
    *(v260) = *(v260) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    *(&v73[0]) = *(v76);\n
    memset(&v72, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if (v73[0] << 56)\n
    {\n
        v26 = 0;\n
        if (v73[1] << 48)\n
        {\n
            v26 = 0;\n
            if (v73[2] << 40)\n
            {\n
                v26 = 0;\n
                if (v73[3] << 32)\n
                {\n
                    v26 = 0;\n
                    if ((v73[4] << 24))\n
                    {\n
                        v26 = 0;\n
                        if ((v73[5] << 16))\n
                        {\n
                            v26 = 0;\n
                            if ((v73[6] << 8))\n
                                v26 = v73[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v74) = v26 & 1;\n
    cgc_uint2str(&v72, 21, *(&v74));\n
    v25 = &v72;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v261 = v75;\n
    *(v261) = *(v261) - 8;\n
    v262 = v76;\n
    *(v262) = *(v262) + 8;\n
    v172 = a0;\n
    v171 = a1;\n
    memset(&v169, 0, 12);\n
    if (*(v171) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v170 = *(&*(v172));\n
    cgc_uint2str(&v169, 12, v170);\n
    v24 = &v169;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v169)) < 0)\n
        cgc__terminate(1);\n
    v263 = v171;\n
    *(v263) = *(v263) - 4;\n
    v264 = v172;\n
    *(v264) = *(v264) + 4;\n
    v196 = a0;\n
    v195 = a1;\n
    if (*(v195) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v194 = *(&*(v196));\n
    v265 = v195;\n
    *(v265) = *(v265) - 2;\n
    v266 = v196;\n
    *(v266) = *(v266) + 2;\n
    if (v194 <= *(v195) && !(!v194))\n
        goto LABEL_484feb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_484feb:\n
    v193 = cgc_calloc(v194);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v193, *(v196), v194);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v267 = v195;\n
    *(v267) = *(v267) - v194;\n
    v268 = v196;\n
    *(v268) = &(*(v268))[v194];\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    v152 = a0;\n
    v151 = a1;\n
    memset(&v149, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v150 = *(&*(v152));\n
    cgc_uint2str(&v149, 12, v150);\n
    v23 = &v149;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v269 = v151;\n
    *(v269) = *(v269) - 4;\n
    v270 = v152;\n
    *(v270) = *(v270) + 4;\n
    v221 = a0;\n
    v220 = a1;\n
    if (*(v220) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v219 = *(v221)->field_0;\n
    v271 = v220;\n
    *(v271) = *(v271) - 1;\n
    v272 = v221;\n
    *(v272) = *(v272) + 1;\n
    if (v219 <= *(v220) && !(!v219))\n
        goto LABEL_48529c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48529c:\n
    v218 = cgc_calloc(v219);\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v218, *(v221), v219);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v273 = v221;\n
    *(v273) = &(*(v273))[v219];\n
    v274 = v220;\n
    *(v274) = *(v274) - v219;\n
    cgc_checkheap();\n
    cgc_free(v218);\n
    v131 = a0;\n
    v130 = a1;\n
    memset(&v128, 0, 4);\n
    if (*(v130) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(v131)->field_0;\n
    cgc_uint2str(&v128, 4, v129);\n
    v22 = &v128;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v128)) < 0)\n
        cgc__terminate(1);\n
    v275 = v130;\n
    *(v275) = *(v275) - 1;\n
    v276 = v131;\n
    *(v276) = *(v276) + 1;\n
    v217 = a0;\n
    v216 = a1;\n
    if (*(v216) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v215 = *(v217)->field_0;\n
    v277 = v216;\n
    *(v277) = *(v277) - 1;\n
    v278 = v217;\n
    *(v278) = *(v278) + 1;\n
    if (v215 <= *(v216) && !(!v215))\n
        goto LABEL_48552d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48552d:\n
    v214 = cgc_calloc(v215);\n
    if (!v214)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v214, *(v217), v215);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v279 = v217;\n
    *(v279) = &(*(v279))[v215];\n
    v280 = v216;\n
    *(v280) = *(v280) - v215;\n
    cgc_checkheap();\n
    cgc_free(v214);\n
    v148 = a0;\n
    v147 = a1;\n
    memset(&v145, 0, 12);\n
    if (*(v147) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    cgc_uint2str(&v145, 12, v146);\n
    v21 = &v145;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v145)) < 0)\n
        cgc__terminate(1);\n
    v281 = v147;\n
    *(v281) = *(v281) - 4;\n
    v282 = v148;\n
    *(v282) = *(v282) + 4;\n
    v71 = a0;\n
    v70 = a1;\n
    *(&v68[0]) = *(v71);\n
    memset(&v67, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (v68[0] << 56)\n
    {\n
        v20 = 0;\n
        if (v68[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v68[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v68[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v68[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v68[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v68[6] << 8))\n
                                v20 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v69) = v20 & 1;\n
    cgc_uint2str(&v67, 21, *(&v69));\n
    v19 = &v67;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v283 = v70;\n
    *(v283) = *(v283) - 8;\n
    v284 = v71;\n
    *(v284) = *(v284) + 8;\n
    v168 = a0;\n
    v167 = a1;\n
    memset(&v165, 0, 12);\n
    if (*(v167) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v166 = *(&*(v168));\n
    cgc_uint2str(&v165, 12, v166);\n
    v18 = &v165;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v165)) < 0)\n
        cgc__terminate(1);\n
    v285 = v167;\n
    *(v285) = *(v285) - 4;\n
    v286 = v168;\n
    *(v286) = *(v286) + 4;\n
    v98 = a0;\n
    v97 = a1;\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v96 = *(v98)->field_0;\n
    v287 = v97;\n
    *(v287) = *(v287) - 1;\n
    v288 = v98;\n
    *(v288) = *(v288) + 1;\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_485afb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_485afb:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v289 = v98;\n
    *(v289) = &(*(v289))[v96];\n
    v290 = v97;\n
    *(v290) = *(v290) - v96;\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v56 = a0;\n
    v55 = a1;\n
    v53 = &*(v56)->field_0;\n
    memset(&v52, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((*(v53) << 8))\n
        v17 = v53[1];\n
    v54 = v17 & 1;\n
    cgc_uint2str(&v52, 6, v54);\n
    v16 = &v52;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v291 = v55;\n
    *(v291) = *(v291) - 2;\n
    v292 = v56;\n
    *(v292) = *(v292) + 2;\n
    v213 = a0;\n
    v212 = a1;\n
    memset(&v210, 0, 21);\n
    if (*(v212) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v211) = *(&*(v213));\n
    cgc_uint2str(&v210, 21, *(&v211));\n
    v15 = &v210;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v210)) < 0)\n
        cgc__terminate(1);\n
    v293 = v212;\n
    *(v293) = *(v293) - 8;\n
    v294 = v213;\n
    *(v294) = *(v294) + 8;\n
    v51 = a0;\n
    v50 = a1;\n
    v48 = &*(v51)->field_0;\n
    memset(&v47, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((*(v48) << 8))\n
        v14 = v48[1];\n
    v49 = v14 & 1;\n
    cgc_uint2str(&v47, 6, v49);\n
    v13 = &v47;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v295 = v50;\n
    *(v295) = *(v295) - 2;\n
    v296 = v51;\n
    *(v296) = *(v296) + 2;\n
    v209 = a0;\n
    v208 = a1;\n
    memset(&v206, 0, 21);\n
    if (*(v208) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v207) = *(&*(v209));\n
    cgc_uint2str(&v206, 21, *(&v207));\n
    v12 = &v206;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v206)) < 0)\n
        cgc__terminate(1);\n
    v297 = v208;\n
    *(v297) = *(v297) - 8;\n
    v298 = v209;\n
    *(v298) = *(v298) + 8;\n
    v108 = a0;\n
    v107 = a1;\n
    v106 = &*(v108)->field_0;\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v299 = v107;\n
    *(v299) = *(v299) - 1;\n
    v300 = v108;\n
    *(v300) = *(v300) + 1;\n
    v38 = *(v106);\n
    v137 = a0;\n
    v136 = a1;\n
    v135 = &*(v137);\n
    if (*(v136) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v301 = v136;\n
    *(v301) = *(v301) - 2;\n
    v302 = v137;\n
    *(v302) = *(v302) + 2;\n
    v38 = *(v135);\n
    v105 = a0;\n
    v104 = a1;\n
    v103 = &*(v105)->field_0;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v303 = v104;\n
    *(v303) = *(v303) - 1;\n
    v304 = v105;\n
    *(v304) = *(v304) + 1;\n
    v38 = *(v103);\n
    v164 = a0;\n
    v163 = a1;\n
    memset(&v161, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v162 = *(&*(v164));\n
    cgc_uint2str(&v161, 12, v162);\n
    v11 = &v161;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v161)) < 0)\n
        cgc__terminate(1);\n
    v305 = v163;\n
    *(v305) = *(v305) - 4;\n
    v306 = v164;\n
    *(v306) = *(v306) + 4;\n
    v66 = a0;\n
    v65 = a1;\n
    *(&v63[0]) = *(v66);\n
    memset(&v62, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if (v63[0] << 56)\n
    {\n
        v10 = 0;\n
        if (v63[1] << 48)\n
        {\n
            v10 = 0;\n
            if (v63[2] << 40)\n
            {\n
                v10 = 0;\n
                if (v63[3] << 32)\n
                {\n
                    v10 = 0;\n
                    if ((v63[4] << 24))\n
                    {\n
                        v10 = 0;\n
                        if ((v63[5] << 16))\n
                        {\n
                            v10 = 0;\n
                            if ((v63[6] << 8))\n
                                v10 = v63[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v64) = v10 & 1;\n
    cgc_uint2str(&v62, 21, *(&v64));\n
    v9 = &v62;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v307 = v65;\n
    *(v307) = *(v307) - 8;\n
    v308 = v66;\n
    *(v308) = *(v308) + 8;\n
    v46 = a0;\n
    v45 = a1;\n
    *(&v43) = *(v46);\n
    memset(&v42, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v43[0] << 8))\n
        v8 = v43[1];\n
    v44 = v8 & 1;\n
    cgc_uint2str(&v42, 6, v44);\n
    v7 = &v42;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v309 = v45;\n
    *(v309) = *(v309) - 2;\n
    v310 = v46;\n
    *(v310) = *(v310) + 2;\n
    v134 = a0;\n
    v133 = a1;\n
    v132 = &*(v134);\n
    if (*(v133) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v311 = v133;\n
    *(v311) = *(v311) - 2;\n
    v312 = v134;\n
    *(v312) = *(v312) + 2;\n
    v38 = *(v132);\n
    v144 = a0;\n
    v143 = a1;\n
    memset(&v141, 0, 21);\n
    if (*(v143) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v142) = *(&*(v144));\n
    cgc_uint2str(&v141, 21, *(&v142));\n
    v6 = &v141;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v313 = v143;\n
    *(v313) = *(v313) - 8;\n
    v314 = v144;\n
    *(v314) = *(v314) + 8;\n
    v205 = a0;\n
    v204 = a1;\n
    if (*(v204) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v204) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v204);\n
    v203 = v5;\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v202 = cgc_calloc(134);\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v202, \"Str: \");\n
    cgc_strncpy(v202 + 5, *(v205), v203);\n
    v316 = v205;\n
    *(v316) = &(*(v316))[4 + cgc_strlen(v202)];\n
    v318 = v204;\n
    *(v318) = *(v318) - (cgc_strlen(v202) + -4);\n
    cgc_checkheap();\n
    cgc_free(v202);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v192 = a0;\n
    v191 = a1;\n
    if (*(v191) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v190 = *(&*(v192));\n
    v319 = v191;\n
    *(v319) = *(v319) - 2;\n
    v320 = v192;\n
    *(v320) = *(v320) + 2;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_486b48;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_486b48:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v321 = v191;\n
    *(v321) = *(v321) - v190;\n
    v322 = v192;\n
    *(v322) = &(*(v322))[v190];\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v127 = a0;\n
    v126 = a1;\n
    memset(&v124, 0, 4);\n
    if (*(v126) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = *(v127)->field_0;\n
    cgc_uint2str(&v124, 4, v125);\n
    v4 = &v124;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v323 = v126;\n
    *(v323) = *(v323) - 1;\n
    v324 = v127;\n
    *(v324) = *(v324) + 1;\n
    v61 = a0;\n
    v60 = a1;\n
    *(&v58[0]) = *(v61);\n
    memset(&v57, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v58[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v58[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v58[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v58[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v58[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v58[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v58[6] << 8))\n
                                v3 = v58[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v59) = v3 & 1;\n
    cgc_uint2str(&v57, 21, *(&v59));\n
    v2 = &v57;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v325 = v60;\n
    *(v325) = *(v325) - 8;\n
    v326 = v61;\n
    *(v326) = *(v326) + 8;\n
    v94 = a0;\n
    v93 = a1;\n
    if (*(v93) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(v94)->field_0;\n
    v327 = v93;\n
    *(v327) = *(v327) - 1;\n
    v328 = v94;\n
    *(v328) = *(v328) + 1;\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_48702e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48702e:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v329 = v94;\n
    *(v329) = &(*(v329))[v92];\n
    v330 = v93;\n
    *(v330) = *(v330) - v92;\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v160 = a0;\n
    v159 = a1;\n
    memset(&v157, 0, 12);\n
    if (*(v159) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = *(&*(v160));\n
    cgc_uint2str(&v157, 12, v158);\n
    v1 = &v157;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v157)) < 0)\n
        cgc__terminate(1);\n
    v331 = v159;\n
    *(v331) = *(v331) - 4;\n
    v332 = v160;\n
    *(v332) = *(v332) + 4;\n
    v188 = a0;\n
    v187 = a1;\n
    if (*(v187) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v186 = *(&*(v188));\n
    v333 = v187;\n
    *(v333) = *(v333) - 2;\n
    v334 = v188;\n
    *(v334) = *(v334) + 2;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_487308;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_487308:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v335 = v187;\n
    *(v335) = *(v335) - v186;\n
    v336 = v188;\n
    *(v336) = &(*(v336))[v186];\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 4);\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(v123)->field_0;\n
    cgc_uint2str(&v120, 4, v121);\n
    v0 = &v120;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v337 = v122;\n
    *(v337) = *(v337) - 1;\n
    v338 = v123;\n
    *(v338) = *(v338) + 1;\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    v339 = v89;\n
    *(v339) = *(v339) - 1;\n
    v340 = v90;\n
    *(v340) = *(v340) + 1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_4875d8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4875d8:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v341 = v90;\n
    *(v341) = &(*(v341))[v88];\n
    v342 = v89;\n
    *(v342) = *(v342) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v39 ^= cgc__cookie;\n
    if (v39)\n
        cgc___stack_cookie_fail();\n
    v343 = a1;\n
    if (*(a1) > 0 && v38 >= 0)\n
    {\n
        v343 = v38;\n
        if (v343 < 2)\n
            v343 = (&v40)[v38](a0, a1);\n
    }\n
    return v343;\n
}\n
", "4749106:sub_487732": null, "4749120:cgc_process_llamaspaying": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaspaying(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1a0]\n
    char v1;  // [bp-0x191]\n
    struct_1 *v2;  // [bp-0x190]\n
    struct_1 *v3;  // [bp-0x188]\n
    char v4;  // [bp-0x179]\n
    struct_1 *v5;  // [bp-0x178]\n
    struct_1 *v6;  // [bp-0x170]\n
    struct_1 *v7;  // [bp-0x168]\n
    unsigned int v8;  // [bp-0x160]\n
    unsigned int v9;  // [bp-0x15c]\n
    char v10;  // [bp-0x158]\n
    char v11;  // [bp-0x13e]\n
    char v12[2];  // [bp-0x138]\n
    unsigned short v13;  // [bp-0x12a]\n
    unsigned int *v14;  // [bp-0x128]\n
    struct struct_0 **v15;  // [bp-0x120]\n
    char v16;  // [bp-0x118]\n
    char v17[8];  // [bp-0xf8]\n
    unsigned int v18;  // [bp-0xf0]\n
    unsigned int *v19;  // [bp-0xe8]\n
    struct struct_0 **v20;  // [bp-0xe0]\n
    char v21;  // [bp-0xd8]\n
    unsigned int v22;  // [bp-0xc0]\n
    unsigned int *v23;  // [bp-0xb8]\n
    struct struct_0 **v24;  // [bp-0xb0]\n
    char v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned int *v27;  // [bp-0x98]\n
    struct struct_0 **v28;  // [bp-0x90]\n
    char v29;  // [bp-0x88]\n
    unsigned int v30;  // [bp-0x70]\n
    unsigned int *v31;  // [bp-0x68]\n
    struct struct_0 **v32;  // [bp-0x60]\n
    char v33;  // [bp-0x58]\n
    unsigned int v34;  // [bp-0x40]\n
    unsigned int *v35;  // [bp-0x38]\n
    struct struct_0 **v36;  // [bp-0x30]\n
    unsigned long v37;  // [bp-0x28]\n
    char v38;  // [bp-0x19]\n
    unsigned int *v39;  // [bp-0x18]\n
    struct struct_0 **v40;  // [bp-0x10]\n
    unsigned int *v42;  // rax\n
    struct struct_0 **v43;  // rax\n
    unsigned int *v44;  // rax\n
    struct struct_0 **v45;  // rax\n
    unsigned int *v46;  // rax\n
    struct struct_0 **v47;  // rax\n
    unsigned int *v48;  // rax\n
    struct struct_0 **v49;  // rax\n
    struct struct_0 **v50;  // rax\n
    unsigned int *v51;  // rax\n
    unsigned int *v52;  // rax\n
    struct struct_0 **v53;  // rax\n
    unsigned int *v54;  // rax\n
    struct struct_0 **v55;  // rax\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    unsigned int *v58;  // rax, Other Possible Types: unsigned long\n
\n
    v9 = cgc__cookie;\n
    v8 = -1;\n
    if (cgc_sendline(1, \"===llamaspaying===\", 18) < 0)\n
        cgc__terminate(1);\n
    v36 = a0;\n
    v35 = a1;\n
    memset(&v33, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v34) = *(&*(v36));\n
    cgc_uint2str(&v33, 21, *(&v34));\n
    v7 = &v33;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v33)) < 0)\n
        cgc__terminate(1);\n
    v42 = v35;\n
    *(v42) = *(v42) - 8;\n
    v43 = v36;\n
    *(v43) = *(v43) + 8;\n
    v28 = a0;\n
    v27 = a1;\n
    memset(&v25, 0, 12);\n
    if (*(v27) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = *(&*(v28));\n
    cgc_uint2str(&v25, 12, v26);\n
    v6 = &v25;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v44 = v27;\n
    *(v44) = *(v44) - 4;\n
    v45 = v28;\n
    *(v45) = *(v45) + 4;\n
    v24 = a0;\n
    v23 = a1;\n
    memset(&v21, 0, 21);\n
    if (*(v23) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v22) = *(&*(v24));\n
    cgc_uint2str(&v21, 21, *(&v22));\n
    v5 = &v21;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v21)) < 0)\n
        cgc__terminate(1);\n
    v46 = v23;\n
    *(v46) = *(v46) - 8;\n
    v47 = v24;\n
    *(v47) = *(v47) + 8;\n
    v40 = a0;\n
    v39 = a1;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = *(v40)->field_0;\n
    v48 = v39;\n
    *(v48) = *(v48) - 1;\n
    v49 = v40;\n
    *(v49) = *(v49) + 1;\n
    if (v38 <= *(v39) && !(!v38))\n
        goto LABEL_487b59;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_487b59:\n
    v37 = cgc_calloc(v38);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v37, *(v40), v38);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v50 = v40;\n
    *(v50) = &(*(v50))[v38];\n
    v51 = v39;\n
    *(v51) = *(v51) - v38;\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    v15 = a0;\n
    v14 = a1;\n
    *(&v12) = *(v15);\n
    memset(&v11, 0, 6);\n
    if (*(v14) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v12[0] << 8))\n
        v4 = v12[1];\n
    v13 = v4 & 1;\n
    cgc_uint2str(&v11, 6, v13);\n
    v3 = &v11;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v11)) < 0)\n
        cgc__terminate(1);\n
    v52 = v14;\n
    *(v52) = *(v52) - 2;\n
    v53 = v15;\n
    *(v53) = *(v53) + 2;\n
    v32 = a0;\n
    v31 = a1;\n
    memset(&v29, 0, 21);\n
    if (*(v31) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v30) = *(&*(v32));\n
    cgc_uint2str(&v29, 21, *(&v30));\n
    v2 = &v29;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v29)) < 0)\n
        cgc__terminate(1);\n
    v54 = v31;\n
    *(v54) = *(v54) - 8;\n
    v55 = v32;\n
    *(v55) = *(v55) + 8;\n
    v20 = a0;\n
    v19 = a1;\n
    *(&v17[0]) = *(v20);\n
    memset(&v16, 0, 21);\n
    if (*(v19) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v17[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v17[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v17[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v17[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v17[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v17[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v17[6] << 8))\n
                                v1 = v17[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v18) = v1 & 1;\n
    cgc_uint2str(&v16, 21, *(&v18));\n
    v0 = &v16;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v56 = v19;\n
    *(v56) = *(v56) - 8;\n
    v57 = v20;\n
    *(v57) = *(v57) + 8;\n
    v9 ^= cgc__cookie;\n
    if (v9)\n
        cgc___stack_cookie_fail();\n
    v58 = a1;\n
    if (*(a1) > 0 && v8 >= 0)\n
    {\n
        v58 = v8;\n
        if (v58 < 0)\n
            v58 = *(&(&v10)[8 * v8])(a0, a1);\n
    }\n
    return v58;\n
}\n
", "4751570:sub_4880d2": null, "4751584:cgc_process_llamaportico": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6250;\n
\n
long long cgc_process_llamaportico(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x5a8]\n
    struct_0 *v1;  // [bp-0x5a0]\n
    struct_0 *v2;  // [bp-0x598]\n
    struct_0 *v3;  // [bp-0x590]\n
    struct_0 *v4;  // [bp-0x588]\n
    char v5;  // [bp-0x57d]\n
    unsigned int v6;  // [bp-0x57c]\n
    struct_0 *v7;  // [bp-0x578]\n
    struct_0 *v8;  // [bp-0x570]\n
    struct_0 *v9;  // [bp-0x568]\n
    char v10;  // [bp-0x559]\n
    struct_0 *v11;  // [bp-0x558]\n
    struct_0 *v12;  // [bp-0x550]\n
    struct_0 *v13;  // [bp-0x548]\n
    struct_0 *v14;  // [bp-0x540]\n
    struct_0 *v15;  // [bp-0x538]\n
    struct_0 *v16;  // [bp-0x530]\n
    char v17;  // [bp-0x521]\n
    struct_0 *v18;  // [bp-0x520]\n
    struct_0 *v19;  // [bp-0x518]\n
    char v20;  // [bp-0x509]\n
    struct_0 *v21;  // [bp-0x508]\n
    char v22;  // [bp-0x4f9]\n
    struct_0 *v23;  // [bp-0x4f8]\n
    char v24;  // [bp-0x4ed]\n
    unsigned int v25;  // [bp-0x4ec]\n
    struct_0 *v26;  // [bp-0x4e8]\n
    char v27;  // [bp-0x4d9]\n
    struct_0 *v28;  // [bp-0x4d8]\n
    char v29;  // [bp-0x4c9]\n
    struct_0 *v30;  // [bp-0x4c8]\n
    char v31;  // [bp-0x4b9]\n
    unsigned int v32;  // [bp-0x4b8]\n
    unsigned int v33;  // [bp-0x4b4]\n
    unsigned long v34;  // [bp-0x4b0]\n
    char v35;  // [bp-0x496]\n
    char v36[2];  // [bp-0x490]\n
    unsigned short v37;  // [bp-0x482]\n
    unsigned int *v38;  // [bp-0x480]\n
    struct struct_1 **v39;  // [bp-0x478]\n
    char v40;  // [bp-0x46e]\n
    char v41[2];  // [bp-0x468]\n
    unsigned short v42;  // [bp-0x45a]\n
    unsigned int *v43;  // [bp-0x458]\n
    struct struct_1 **v44;  // [bp-0x450]\n
    char v45;  // [bp-0x448]\n
    char v46[8];  // [bp-0x428]\n
    unsigned int v47;  // [bp-0x420]\n
    unsigned int *v48;  // [bp-0x418]\n
    struct struct_1 **v49;  // [bp-0x410]\n
    char v50;  // [bp-0x408]\n
    char v51[8];  // [bp-0x3e8]\n
    unsigned int v52;  // [bp-0x3e0]\n
    unsigned int *v53;  // [bp-0x3d8]\n
    struct struct_1 **v54;  // [bp-0x3d0]\n
    char v55;  // [bp-0x3c8]\n
    char v56[8];  // [bp-0x3a8]\n
    unsigned int v57;  // [bp-0x3a0]\n
    unsigned int *v58;  // [bp-0x398]\n
    struct struct_1 **v59;  // [bp-0x390]\n
    char v60;  // [bp-0x388]\n
    char v61[8];  // [bp-0x368]\n
    unsigned int v62;  // [bp-0x360]\n
    unsigned int *v63;  // [bp-0x358]\n
    struct struct_1 **v64;  // [bp-0x350]\n
    char v65;  // [bp-0x348]\n
    char v66[8];  // [bp-0x328]\n
    unsigned int v67;  // [bp-0x320]\n
    unsigned int *v68;  // [bp-0x318]\n
    struct struct_1 **v69;  // [bp-0x310]\n
    unsigned long v70;  // [bp-0x308]\n
    char v71;  // [bp-0x2f9]\n
    unsigned int *v72;  // [bp-0x2f8]\n
    struct struct_1 **v73;  // [bp-0x2f0]\n
    char *v74;  // [bp-0x2e8]\n
    unsigned int v75;  // [bp-0x2dc]\n
    unsigned int *v76;  // [bp-0x2d8]\n
    struct struct_1 **v77;  // [bp-0x2d0]\n
    char v78;  // [bp-0x2c8]\n
    unsigned short v79;  // [bp-0x2c2]\n
    unsigned int *v80;  // [bp-0x2c0]\n
    struct struct_1 **v81;  // [bp-0x2b8]\n
    char v82;  // [bp-0x2ad]\n
    char v83;  // [bp-0x2a9]\n
    unsigned int *v84;  // [bp-0x2a8]\n
    struct struct_1 **v85;  // [bp-0x2a0]\n
    char v86;  // [bp-0x295]\n
    char v87;  // [bp-0x291]\n
    unsigned int *v88;  // [bp-0x290]\n
    struct struct_1 **v89;  // [bp-0x288]\n
    char v90;  // [bp-0x27d]\n
    char v91;  // [bp-0x279]\n
    unsigned int *v92;  // [bp-0x278]\n
    struct struct_1 **v93;  // [bp-0x270]\n
    unsigned short *v94;  // [bp-0x268]\n
    unsigned int *v95;  // [bp-0x260]\n
    struct struct_1 **v96;  // [bp-0x258]\n
    char v97[4];  // [bp-0x250]\n
    unsigned int *v98;  // [bp-0x248]\n
    struct struct_1 **v99;  // [bp-0x240]\n
    char v100;  // [bp-0x238]\n
    unsigned int v101;  // [bp-0x220]\n
    unsigned int *v102;  // [bp-0x218]\n
    struct struct_1 **v103;  // [bp-0x210]\n
    char v104;  // [bp-0x208]\n
    unsigned int v105;  // [bp-0x1fc]\n
    unsigned int *v106;  // [bp-0x1f8]\n
    struct struct_1 **v107;  // [bp-0x1f0]\n
    char v108;  // [bp-0x1e8]\n
    unsigned int v109;  // [bp-0x1dc]\n
    unsigned int *v110;  // [bp-0x1d8]\n
    struct struct_1 **v111;  // [bp-0x1d0]\n
    char v112;  // [bp-0x1c8]\n
    unsigned int v113;  // [bp-0x1bc]\n
    unsigned int *v114;  // [bp-0x1b8]\n
    struct struct_1 **v115;  // [bp-0x1b0]\n
    unsigned long v116;  // [bp-0x1a8]\n
    unsigned short v117;  // [bp-0x19a]\n
    unsigned int *v118;  // [bp-0x198]\n
    struct struct_1 **v119;  // [bp-0x190]\n
    unsigned long v120;  // [bp-0x188]\n
    unsigned short v121;  // [bp-0x17a]\n
    unsigned int *v122;  // [bp-0x178]\n
    struct struct_1 **v123;  // [bp-0x170]\n
    char v124;  // [bp-0x164]\n
    char v125[4];  // [bp-0x158]\n
    unsigned int v126;  // [bp-0x14c]\n
    unsigned int *v127;  // [bp-0x148]\n
    struct struct_1 **v128;  // [bp-0x140]\n
    char v129;  // [bp-0x134]\n
    char v130[4];  // [bp-0x128]\n
    unsigned int v131;  // [bp-0x11c]\n
    unsigned int *v132;  // [bp-0x118]\n
    struct struct_1 **v133;  // [bp-0x110]\n
    char *v134;  // [bp-0x108]\n
    unsigned int v135;  // [bp-0xfc]\n
    unsigned int *v136;  // [bp-0xf8]\n
    struct struct_1 **v137;  // [bp-0xf0]\n
    char v138;  // [bp-0xe8]\n
    unsigned int v139;  // [bp-0xd0]\n
    unsigned int *v140;  // [bp-0xc8]\n
    struct struct_1 **v141;  // [bp-0xc0]\n
    char v142;  // [bp-0xb8]\n
    unsigned int v143;  // [bp-0xa0]\n
    unsigned int *v144;  // [bp-0x98]\n
    struct struct_1 **v145;  // [bp-0x90]\n
    char v146;  // [bp-0x88]\n
    unsigned int v147;  // [bp-0x70]\n
    unsigned int *v148;  // [bp-0x68]\n
    struct struct_1 **v149;  // [bp-0x60]\n
    char v150;  // [bp-0x58]\n
    unsigned int v151;  // [bp-0x40]\n
    unsigned int *v152;  // [bp-0x38]\n
    struct struct_1 **v153;  // [bp-0x30]\n
    unsigned long v154;  // [bp-0x28]\n
    char v155;  // [bp-0x19]\n
    unsigned int *v156;  // [bp-0x18]\n
    struct struct_1 **v157;  // [bp-0x10]\n
    unsigned int *v159;  // rax\n
    struct struct_1 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_1 **v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_1 **v164;  // rax\n
    struct struct_1 **v166;  // rax\n
    unsigned int *v168;  // rax\n
    unsigned int *v169;  // rax\n
    struct struct_1 **v170;  // rax\n
    struct struct_1 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_1 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_1 **v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_1 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_1 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_1 **v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_1 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_1 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_1 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_1 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_1 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_1 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_1 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_1 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_1 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_1 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_1 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_1 **v206;  // rax\n
    struct struct_1 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_1 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_1 **v212;  // rax\n
    struct struct_1 **v214;  // rax\n
    unsigned int *v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_1 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_1 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_1 **v222;  // rax\n
    unsigned int *v223;  // rax\n
    struct struct_1 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_1 **v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_1 **v228;  // rax\n
    unsigned int *v229;  // rax, Other Possible Types: unsigned long\n
\n
    v34 = g_4c6250;\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamaportico===\", 18) < 0)\n
        cgc__terminate(1);\n
    v69 = a0;\n
    v68 = a1;\n
    *(&v66[0]) = *(v69);\n
    memset(&v65, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if (v66[0] << 56)\n
    {\n
        v31 = 0;\n
        if (v66[1] << 48)\n
        {\n
            v31 = 0;\n
            if (v66[2] << 40)\n
            {\n
                v31 = 0;\n
                if (v66[3] << 32)\n
                {\n
                    v31 = 0;\n
                    if ((v66[4] << 24))\n
                    {\n
                        v31 = 0;\n
                        if ((v66[5] << 16))\n
                        {\n
                            v31 = 0;\n
                            if ((v66[6] << 8))\n
                                v31 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v67) = v31 & 1;\n
    cgc_uint2str(&v65, 21, *(&v67));\n
    v30 = &v65;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v159 = v68;\n
    *(v159) = *(v159) - 8;\n
    v160 = v69;\n
    *(v160) = *(v160) + 8;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = 0;\n
    if ((v41[0] << 8))\n
        v29 = v41[1];\n
    v42 = v29 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v28 = &v40;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v161 = v43;\n
    *(v161) = *(v161) - 2;\n
    v162 = v44;\n
    *(v162) = *(v162) + 2;\n
    v133 = a0;\n
    v132 = a1;\n
    *(&v130) = *(v133);\n
    memset(&v129, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v130[0] << 24))\n
    {\n
        v27 = 0;\n
        if ((v130[1] << 16))\n
        {\n
            v27 = 0;\n
            if ((v130[2] << 8))\n
                v27 = v130[3];\n
        }\n
    }\n
    v131 = v27 & 1;\n
    cgc_uint2str(&v129, 12, v131);\n
    v26 = &v129;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v163 = v132;\n
    *(v163) = *(v163) - 4;\n
    v164 = v133;\n
    *(v164) = *(v164) + 4;\n
    v137 = a0;\n
    v136 = a1;\n
    if (*(v136) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v136) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v136);\n
    v135 = v25;\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = cgc_calloc(134);\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v134, \"Str: \");\n
    cgc_strncpy(v134 + 5, *(v137), v135);\n
    v166 = v137;\n
    *(v166) = &(*(v166))[4 + cgc_strlen(v134)];\n
    v168 = v136;\n
    *(v168) = *(v168) - (cgc_strlen(v134) + -4);\n
    cgc_checkheap();\n
    cgc_free(v134);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v157 = a0;\n
    v156 = a1;\n
    if (*(v156) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = *(v157)->field_0;\n
    v169 = v156;\n
    *(v169) = *(v169) - 1;\n
    v170 = v157;\n
    *(v170) = *(v170) + 1;\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_4888ef;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4888ef:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v171 = v157;\n
    *(v171) = &(*(v171))[v155];\n
    v172 = v156;\n
    *(v172) = *(v172) - v155;\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v64 = a0;\n
    v63 = a1;\n
    *(&v61[0]) = *(v64);\n
    memset(&v60, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = 0;\n
    if (v61[0] << 56)\n
    {\n
        v24 = 0;\n
        if (v61[1] << 48)\n
        {\n
            v24 = 0;\n
            if (v61[2] << 40)\n
            {\n
                v24 = 0;\n
                if (v61[3] << 32)\n
                {\n
                    v24 = 0;\n
                    if ((v61[4] << 24))\n
                    {\n
                        v24 = 0;\n
                        if ((v61[5] << 16))\n
                        {\n
                            v24 = 0;\n
                            if ((v61[6] << 8))\n
                                v24 = v61[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v62) = v24 & 1;\n
    cgc_uint2str(&v60, 21, *(&v62));\n
    v23 = &v60;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v173 = v63;\n
    *(v173) = *(v173) - 8;\n
    v174 = v64;\n
    *(v174) = *(v174) + 8;\n
    v128 = a0;\n
    v127 = a1;\n
    *(&v125) = *(v128);\n
    memset(&v124, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v125[0] << 24))\n
    {\n
        v22 = 0;\n
        if ((v125[1] << 16))\n
        {\n
            v22 = 0;\n
            if ((v125[2] << 8))\n
                v22 = v125[3];\n
        }\n
    }\n
    v126 = v22 & 1;\n
    cgc_uint2str(&v124, 12, v126);\n
    v21 = &v124;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v175 = v127;\n
    *(v175) = *(v175) - 4;\n
    v176 = v128;\n
    *(v176) = *(v176) + 4;\n
    v59 = a0;\n
    v58 = a1;\n
    *(&v56[0]) = *(v59);\n
    memset(&v55, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (v56[0] << 56)\n
    {\n
        v20 = 0;\n
        if (v56[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v56[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v56[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v56[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v56[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v56[6] << 8))\n
                                v20 = v56[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v57) = v20 & 1;\n
    cgc_uint2str(&v55, 21, *(&v57));\n
    v19 = &v55;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v55)) < 0)\n
        cgc__terminate(1);\n
    v177 = v58;\n
    *(v177) = *(v177) - 8;\n
    v178 = v59;\n
    *(v178) = *(v178) + 8;\n
    v123 = a0;\n
    v122 = a1;\n
    if (*(v122) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(&*(v123));\n
    v179 = v122;\n
    *(v179) = *(v179) - 2;\n
    v180 = v123;\n
    *(v180) = *(v180) + 2;\n
    if (v121 <= *(v122) && !(!v121))\n
        goto LABEL_48904e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48904e:\n
    v120 = cgc_calloc(v121);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v120, *(v123), v121);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v181 = v122;\n
    *(v181) = *(v181) - v121;\n
    v182 = v123;\n
    *(v182) = &(*(v182))[v121];\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(&*(v115));\n
    cgc_uint2str(&v112, 12, v113);\n
    v18 = &v112;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v183 = v114;\n
    *(v183) = *(v183) - 4;\n
    v184 = v115;\n
    *(v184) = *(v184) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v36[0] << 8))\n
        v17 = v36[1];\n
    v37 = v17 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v16 = &v35;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v185 = v38;\n
    *(v185) = *(v185) - 2;\n
    v186 = v39;\n
    *(v186) = *(v186) + 2;\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 4);\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(v93)->field_0;\n
    cgc_uint2str(&v90, 4, v91);\n
    v15 = &v90;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v187 = v92;\n
    *(v187) = *(v187) - 1;\n
    v188 = v93;\n
    *(v188) = *(v188) + 1;\n
    v153 = a0;\n
    v152 = a1;\n
    memset(&v150, 0, 21);\n
    if (*(v152) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v151) = *(&*(v153));\n
    cgc_uint2str(&v150, 21, *(&v151));\n
    v14 = &v150;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v150)) < 0)\n
        cgc__terminate(1);\n
    v189 = v152;\n
    *(v189) = *(v189) - 8;\n
    v190 = v153;\n
    *(v190) = *(v190) + 8;\n
    v119 = a0;\n
    v118 = a1;\n
    if (*(v118) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(&*(v119));\n
    v191 = v118;\n
    *(v191) = *(v191) - 2;\n
    v192 = v119;\n
    *(v192) = *(v192) + 2;\n
    if (v117 <= *(v118) && !(!v117))\n
        goto LABEL_48964b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48964b:\n
    v116 = cgc_calloc(v117);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v116, *(v119), v117);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v193 = v118;\n
    *(v193) = *(v193) - v117;\n
    v194 = v119;\n
    *(v194) = &(*(v194))[v117];\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    v99 = a0;\n
    v98 = a1;\n
    *(&v97) = *(v99);\n
    if (*(v98) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v195 = v98;\n
    *(v195) = *(v195) - 2;\n
    v196 = v99;\n
    *(v196) = *(v196) + 2;\n
    v32 = *(&v97[0]);\n
    v149 = a0;\n
    v148 = a1;\n
    memset(&v146, 0, 21);\n
    if (*(v148) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v147) = *(&*(v149));\n
    cgc_uint2str(&v146, 21, *(&v147));\n
    v13 = &v146;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v146)) < 0)\n
        cgc__terminate(1);\n
    v197 = v148;\n
    *(v197) = *(v197) - 8;\n
    v198 = v149;\n
    *(v198) = *(v198) + 8;\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 12);\n
    if (*(v110) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = *(&*(v111));\n
    cgc_uint2str(&v108, 12, v109);\n
    v12 = &v108;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v199 = v110;\n
    *(v199) = *(v199) - 4;\n
    v200 = v111;\n
    *(v200) = *(v200) + 4;\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(&*(v107));\n
    cgc_uint2str(&v104, 12, v105);\n
    v11 = &v104;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v201 = v106;\n
    *(v201) = *(v201) - 4;\n
    v202 = v107;\n
    *(v202) = *(v202) + 4;\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51[0]) = *(v54);\n
    memset(&v50, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if (v51[0] << 56)\n
    {\n
        v10 = 0;\n
        if (v51[1] << 48)\n
        {\n
            v10 = 0;\n
            if (v51[2] << 40)\n
            {\n
                v10 = 0;\n
                if (v51[3] << 32)\n
                {\n
                    v10 = 0;\n
                    if ((v51[4] << 24))\n
                    {\n
                        v10 = 0;\n
                        if ((v51[5] << 16))\n
                        {\n
                            v10 = 0;\n
                            if ((v51[6] << 8))\n
                                v10 = v51[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v52) = v10 & 1;\n
    cgc_uint2str(&v50, 21, *(&v52));\n
    v9 = &v50;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v203 = v53;\n
    *(v203) = *(v203) - 8;\n
    v204 = v54;\n
    *(v204) = *(v204) + 8;\n
    v73 = a0;\n
    v72 = a1;\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(v73)->field_0;\n
    v205 = v72;\n
    *(v205) = *(v205) - 1;\n
    v206 = v73;\n
    *(v206) = *(v206) + 1;\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_489db8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_489db8:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v207 = v73;\n
    *(v207) = &(*(v207))[v71];\n
    v208 = v72;\n
    *(v208) = *(v208) - v71;\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v101) = *(&*(v103));\n
    cgc_uint2str(&v100, 21, *(&v101));\n
    v8 = &v100;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v209 = v102;\n
    *(v209) = *(v209) - 8;\n
    v210 = v103;\n
    *(v210) = *(v210) + 8;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    cgc_uint2str(&v78, 6, v79);\n
    v7 = &v78;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v211 = v80;\n
    *(v211) = *(v211) - 2;\n
    v212 = v81;\n
    *(v212) = *(v212) + 2;\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v76) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v76);\n
    v75 = v6;\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = cgc_calloc(134);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v74, \"Str: \");\n
    cgc_strncpy(v74 + 5, *(v77), v75);\n
    v214 = v77;\n
    *(v214) = &(*(v214))[4 + cgc_strlen(v74)];\n
    v216 = v76;\n
    *(v216) = *(v216) - (cgc_strlen(v74) + -4);\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46[0]) = *(v49);\n
    memset(&v45, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v46[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v46[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v46[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v46[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v46[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v46[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v46[6] << 8))\n
                                v5 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v47) = v5 & 1;\n
    cgc_uint2str(&v45, 21, *(&v47));\n
    v4 = &v45;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v217 = v48;\n
    *(v217) = *(v217) - 8;\n
    v218 = v49;\n
    *(v218) = *(v218) + 8;\n
    v145 = a0;\n
    v144 = a1;\n
    memset(&v142, 0, 21);\n
    if (*(v144) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v143) = *(&*(v145));\n
    cgc_uint2str(&v142, 21, *(&v143));\n
    v3 = &v142;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v142)) < 0)\n
        cgc__terminate(1);\n
    v219 = v144;\n
    *(v219) = *(v219) - 8;\n
    v220 = v145;\n
    *(v220) = *(v220) + 8;\n
    v141 = a0;\n
    v140 = a1;\n
    memset(&v138, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v139) = *(&*(v141));\n
    cgc_uint2str(&v138, 21, *(&v139));\n
    v2 = &v138;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v221 = v140;\n
    *(v221) = *(v221) - 8;\n
    v222 = v141;\n
    *(v222) = *(v222) + 8;\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 4);\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(v89)->field_0;\n
    cgc_uint2str(&v86, 4, v87);\n
    v1 = &v86;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v223 = v88;\n
    *(v223) = *(v223) - 1;\n
    v224 = v89;\n
    *(v224) = *(v224) + 1;\n
    v96 = a0;\n
    v95 = a1;\n
    v94 = &*(v96);\n
    if (*(v95) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v225 = v95;\n
    *(v225) = *(v225) - 2;\n
    v226 = v96;\n
    *(v226) = *(v226) + 2;\n
    v32 = *(v94);\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 4);\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(v85)->field_0;\n
    cgc_uint2str(&v82, 4, v83);\n
    v0 = &v82;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v227 = v84;\n
    *(v227) = *(v227) - 1;\n
    v228 = v85;\n
    *(v228) = *(v228) + 1;\n
    v33 ^= cgc__cookie;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v229 = a1;\n
    if (*(a1) > 0 && v32 >= 0)\n
    {\n
        v229 = v32;\n
        if (v229 < 1)\n
            v229 = (&v34)[v32](a0, a1);\n
    }\n
    return v229;\n
}\n
", "4762078:sub_48a9de": null, "4762080:cgc_process_llamaSoricinae": "extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaSoricinae(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned short v4;  // [bp-0x1a]\n
    unsigned int *v5;  // [bp-0x18]\n
    unsigned int *v7;  // rax\n
    struct struct_0 **v8;  // rax\n
    unsigned int *v9;  // rax\n
    struct struct_0 **v10;  // rax\n
    unsigned int *v11;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = cgc__cookie;\n
    v0 = -1;\n
    if (cgc_sendline(1, \"===llamaSoricinae===\", 20) < 0)\n
        cgc__terminate(1);\n
    v5 = a1;\n
    if (*(v5) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = *(a0)->field_0;\n
    v7 = v5;\n
    *(v7) = *(v7) - 2;\n
    v8 = a0;\n
    *(v8) = *(v8) + 1;\n
    if (v4 <= *(v5) && !(!v4))\n
        goto LABEL_48aaf9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48aaf9:\n
    v3 = cgc_calloc(v4);\n
    if (!v3)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v3, *(a0), v4);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v9 = v5;\n
    *(v9) = *(v9) - v4;\n
    v10 = a0;\n
    *(v10) = *(v10) + v4;\n
    cgc_checkheap();\n
    cgc_free(v3);\n
    v1 ^= cgc__cookie;\n
    if (v1)\n
        cgc___stack_cookie_fail();\n
    v11 = a1;\n
    if (*(a1) > 0 && v0 >= 0)\n
    {\n
        v11 = v0;\n
        if (v11 < 0)\n
            v11 = *(&(&v2)[8 * v0])(a0, a1);\n
    }\n
    return v11;\n
}\n
", "4762644:sub_48ac14": null, "4762656:cgc_process_llamaquavery": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6258;\n
\n
long long cgc_process_llamaquavery(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x3e8]\n
    unsigned int v1;  // [bp-0x3dc]\n
    struct_0 *v2;  // [bp-0x3d8]\n
    char v3;  // [bp-0x3c9]\n
    struct_0 *v4;  // [bp-0x3c8]\n
    char v5;  // [bp-0x3b9]\n
    struct_0 *v6;  // [bp-0x3b8]\n
    struct_0 *v7;  // [bp-0x3b0]\n
    struct_0 *v8;  // [bp-0x3a8]\n
    struct_0 *v9;  // [bp-0x3a0]\n
    unsigned int v10;  // [bp-0x398]\n
    unsigned int v11;  // [bp-0x394]\n
    struct_0 *v12;  // [bp-0x390]\n
    struct_0 *v13;  // [bp-0x388]\n
    struct_0 *v14;  // [bp-0x380]\n
    char v15;  // [bp-0x371]\n
    struct_0 *v16;  // [bp-0x370]\n
    unsigned int v17;  // [bp-0x368]\n
    unsigned int v18;  // [bp-0x364]\n
    unsigned long v19;  // [bp-0x360]\n
    char v20;  // [bp-0x348]\n
    char v21[8];  // [bp-0x328]\n
    unsigned int v22;  // [bp-0x320]\n
    unsigned int *v23;  // [bp-0x318]\n
    struct struct_1 **v24;  // [bp-0x310]\n
    unsigned long v25;  // [bp-0x308]\n
    char v26;  // [bp-0x2f9]\n
    unsigned int *v27;  // [bp-0x2f8]\n
    struct struct_1 **v28;  // [bp-0x2f0]\n
    unsigned long v29;  // [bp-0x2e8]\n
    char v30;  // [bp-0x2d9]\n
    unsigned int *v31;  // [bp-0x2d8]\n
    struct struct_1 **v32;  // [bp-0x2d0]\n
    char *v33;  // [bp-0x2c8]\n
    unsigned int *v34;  // [bp-0x2c0]\n
    struct struct_1 **v35;  // [bp-0x2b8]\n
    char *v36;  // [bp-0x2b0]\n
    unsigned int *v37;  // [bp-0x2a8]\n
    struct struct_1 **v38;  // [bp-0x2a0]\n
    char *v39;  // [bp-0x298]\n
    unsigned int v40;  // [bp-0x28c]\n
    unsigned int *v41;  // [bp-0x288]\n
    struct struct_1 **v42;  // [bp-0x280]\n
    char v43;  // [bp-0x278]\n
    unsigned short v44;  // [bp-0x272]\n
    unsigned int *v45;  // [bp-0x270]\n
    struct struct_1 **v46;  // [bp-0x268]\n
    char v47;  // [bp-0x25d]\n
    char v48;  // [bp-0x259]\n
    unsigned int *v49;  // [bp-0x258]\n
    struct struct_1 **v50;  // [bp-0x250]\n
    char v51;  // [bp-0x245]\n
    char v52;  // [bp-0x241]\n
    unsigned int *v53;  // [bp-0x240]\n
    struct struct_1 **v54;  // [bp-0x238]\n
    unsigned short *v55;  // [bp-0x230]\n
    unsigned int *v56;  // [bp-0x228]\n
    struct struct_1 **v57;  // [bp-0x220]\n
    char v58;  // [bp-0x218]\n
    unsigned int v59;  // [bp-0x200]\n
    unsigned int *v60;  // [bp-0x1f8]\n
    struct struct_1 **v61;  // [bp-0x1f0]\n
    char v62;  // [bp-0x1e8]\n
    unsigned int v63;  // [bp-0x1d0]\n
    unsigned int *v64;  // [bp-0x1c8]\n
    struct struct_1 **v65;  // [bp-0x1c0]\n
    char v66;  // [bp-0x1b8]\n
    unsigned int v67;  // [bp-0x1a0]\n
    unsigned int *v68;  // [bp-0x198]\n
    struct struct_1 **v69;  // [bp-0x190]\n
    unsigned long v70;  // [bp-0x188]\n
    unsigned short v71;  // [bp-0x17a]\n
    unsigned int *v72;  // [bp-0x178]\n
    struct struct_1 **v73;  // [bp-0x170]\n
    unsigned long v74;  // [bp-0x168]\n
    unsigned short v75;  // [bp-0x15a]\n
    unsigned int *v76;  // [bp-0x158]\n
    struct struct_1 **v77;  // [bp-0x150]\n
    char v78;  // [bp-0x144]\n
    char v79[8];  // [bp-0x138]\n
    unsigned int v80;  // [bp-0x12c]\n
    unsigned int *v81;  // [bp-0x128]\n
    struct struct_1 **v82;  // [bp-0x120]\n
    char v83;  // [bp-0x114]\n
    char v84[4];  // [bp-0x108]\n
    unsigned int v85;  // [bp-0xfc]\n
    unsigned int *v86;  // [bp-0xf8]\n
    struct struct_1 **v87;  // [bp-0xf0]\n
    char *v88;  // [bp-0xe8]\n
    unsigned int v89;  // [bp-0xdc]\n
    unsigned int *v90;  // [bp-0xd8]\n
    struct struct_1 **v91;  // [bp-0xd0]\n
    char *v92;  // [bp-0xc8]\n
    unsigned int v93;  // [bp-0xbc]\n
    unsigned int *v94;  // [bp-0xb8]\n
    struct struct_1 **v95;  // [bp-0xb0]\n
    char v96;  // [bp-0xa8]\n
    unsigned int v97;  // [bp-0x90]\n
    unsigned int *v98;  // [bp-0x88]\n
    struct struct_1 **v99;  // [bp-0x80]\n
    char v100;  // [bp-0x78]\n
    unsigned int v101;  // [bp-0x60]\n
    unsigned int *v102;  // [bp-0x58]\n
    struct struct_1 **v103;  // [bp-0x50]\n
    unsigned long v104;  // [bp-0x48]\n
    char v105;  // [bp-0x39]\n
    unsigned int *v106;  // [bp-0x38]\n
    struct struct_1 **v107;  // [bp-0x30]\n
    unsigned long v108;  // [bp-0x28]\n
    char v109;  // [bp-0x19]\n
    unsigned int *v110;  // [bp-0x18]\n
    struct struct_1 **v111;  // [bp-0x10]\n
    unsigned int *v113;  // rax\n
    struct struct_1 **v114;  // rax\n
    unsigned int *v115;  // rax\n
    struct struct_1 **v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_1 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_1 **v120;  // rax\n
    struct struct_1 **v121;  // rax\n
    unsigned int *v122;  // rax\n
    unsigned int *v123;  // rax\n
    struct struct_1 **v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_1 **v126;  // rax\n
    unsigned int *v127;  // rax\n
    struct struct_1 **v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_1 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_1 **v132;  // rax\n
    struct struct_1 **v134;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_1 **v138;  // rax\n
    struct struct_1 **v139;  // rax\n
    unsigned int *v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_1 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_1 **v144;  // rax\n
    struct struct_1 **v145;  // rax\n
    unsigned int *v146;  // rax\n
    struct struct_1 **v148;  // rax\n
    unsigned int *v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_1 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_1 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_1 **v156;  // rax\n
    unsigned int *v157;  // rax\n
    struct struct_1 **v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_1 **v160;  // rax\n
    struct struct_1 **v161;  // rax\n
    unsigned int *v162;  // rax\n
    unsigned int *v163;  // rax\n
    struct struct_1 **v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_1 **v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_1 **v168;  // rax\n
    struct struct_1 **v170;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_1 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_1 **v176;  // rax\n
    unsigned int *v177;  // rax, Other Possible Types: unsigned long\n
\n
    v19 = g_4c6258;\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamaquavery===\", 18) < 0)\n
        cgc__terminate(1);\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v67) = *(&*(v69));\n
    cgc_uint2str(&v66, 21, *(&v67));\n
    v16 = &v66;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v113 = v68;\n
    *(v113) = *(v113) - 8;\n
    v114 = v69;\n
    *(v114) = *(v114) + 8;\n
    v87 = a0;\n
    v86 = a1;\n
    *(&v84) = *(v87);\n
    memset(&v83, 0, 12);\n
    if (*(v86) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v84[0] << 24))\n
    {\n
        v15 = 0;\n
        if ((v84[1] << 16))\n
        {\n
            v15 = 0;\n
            if ((v84[2] << 8))\n
                v15 = v84[3];\n
        }\n
    }\n
    v85 = v15 & 1;\n
    cgc_uint2str(&v83, 12, v85);\n
    v14 = &v83;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v115 = v86;\n
    *(v115) = *(v115) - 4;\n
    v116 = v87;\n
    *(v116) = *(v116) + 4;\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v63) = *(&*(v65));\n
    cgc_uint2str(&v62, 21, *(&v63));\n
    v13 = &v62;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v117 = v64;\n
    *(v117) = *(v117) - 8;\n
    v118 = v65;\n
    *(v118) = *(v118) + 8;\n
    v32 = a0;\n
    v31 = a1;\n
    if (*(v31) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = *(v32)->field_0;\n
    v119 = v31;\n
    *(v119) = *(v119) - 1;\n
    v120 = v32;\n
    *(v120) = *(v120) + 1;\n
    if (v30 <= *(v31) && !(!v30))\n
        goto LABEL_48b110;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48b110:\n
    v29 = cgc_calloc(v30);\n
    if (!v29)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v29, *(v32), v30);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v121 = v32;\n
    *(v121) = &(*(v121))[v30];\n
    v122 = v31;\n
    *(v122) = *(v122) - v30;\n
    cgc_checkheap();\n
    cgc_free(v29);\n
    v61 = a0;\n
    v60 = a1;\n
    memset(&v58, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v59) = *(&*(v61));\n
    cgc_uint2str(&v58, 21, *(&v59));\n
    v12 = &v58;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v123 = v60;\n
    *(v123) = *(v123) - 8;\n
    v124 = v61;\n
    *(v124) = *(v124) + 8;\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    v125 = v76;\n
    *(v125) = *(v125) - 2;\n
    v126 = v77;\n
    *(v126) = *(v126) + 2;\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_48b3ea;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48b3ea:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v127 = v76;\n
    *(v127) = *(v127) - v75;\n
    v128 = v77;\n
    *(v128) = &(*(v128))[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v73 = a0;\n
    v72 = a1;\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    v129 = v72;\n
    *(v129) = *(v129) - 2;\n
    v130 = v73;\n
    *(v130) = *(v130) + 2;\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_48b5ba;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48b5ba:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v131 = v72;\n
    *(v131) = *(v131) - v71;\n
    v132 = v73;\n
    *(v132) = &(*(v132))[v71];\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v42 = a0;\n
    v41 = a1;\n
    if (*(v41) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v41) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v41);\n
    v40 = v11;\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = cgc_calloc(134);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v39, \"Str: \");\n
    cgc_strncpy(v39 + 5, *(v42), v40);\n
    v134 = v42;\n
    *(v134) = &(*(v134))[4 + cgc_strlen(v39)];\n
    v136 = v41;\n
    *(v136) = *(v136) - (cgc_strlen(v39) + -4);\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v28 = a0;\n
    v27 = a1;\n
    if (*(v27) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = *(v28)->field_0;\n
    v137 = v27;\n
    *(v137) = *(v137) - 1;\n
    v138 = v28;\n
    *(v138) = *(v138) + 1;\n
    if (v26 <= *(v27) && !(!v26))\n
        goto LABEL_48b97b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48b97b:\n
    v25 = cgc_calloc(v26);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v25, *(v28), v26);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v139 = v28;\n
    *(v139) = &(*(v139))[v26];\n
    v140 = v27;\n
    *(v140) = *(v140) - v26;\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    v57 = a0;\n
    v56 = a1;\n
    v55 = &*(v57);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = v56;\n
    *(v141) = *(v141) - 2;\n
    v142 = v57;\n
    *(v142) = *(v142) + 2;\n
    v17 = *(v55);\n
    v111 = a0;\n
    v110 = a1;\n
    if (*(v110) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = *(v111)->field_0;\n
    v143 = v110;\n
    *(v143) = *(v143) - 1;\n
    v144 = v111;\n
    *(v144) = *(v144) + 1;\n
    if (v109 <= *(v110) && !(!v109))\n
        goto LABEL_48bbd0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48bbd0:\n
    v108 = cgc_calloc(v109);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v108, *(v111), v109);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v145 = v111;\n
    *(v145) = &(*(v145))[v109];\n
    v146 = v110;\n
    *(v146) = *(v146) - v109;\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    v95 = a0;\n
    v94 = a1;\n
    if (*(v94) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v94) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v94);\n
    v93 = v10;\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = cgc_calloc(134);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v92, \"Str: \");\n
    cgc_strncpy(v92 + 5, *(v95), v93);\n
    v148 = v95;\n
    *(v148) = &(*(v148))[4 + cgc_strlen(v92)];\n
    v150 = v94;\n
    *(v150) = *(v150) - (cgc_strlen(v92) + -4);\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 4);\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(v54)->field_0;\n
    cgc_uint2str(&v51, 4, v52);\n
    v9 = &v51;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v151 = v53;\n
    *(v151) = *(v151) - 1;\n
    v152 = v54;\n
    *(v152) = *(v152) + 1;\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v44 = *(&*(v46));\n
    cgc_uint2str(&v43, 6, v44);\n
    v8 = &v43;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v153 = v45;\n
    *(v153) = *(v153) - 2;\n
    v154 = v46;\n
    *(v154) = *(v154) + 2;\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v101) = *(&*(v103));\n
    cgc_uint2str(&v100, 21, *(&v101));\n
    v7 = &v100;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v155 = v102;\n
    *(v155) = *(v155) - 8;\n
    v156 = v103;\n
    *(v156) = *(v156) + 8;\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v97) = *(&*(v99));\n
    cgc_uint2str(&v96, 21, *(&v97));\n
    v6 = &v96;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v157 = v98;\n
    *(v157) = *(v157) - 8;\n
    v158 = v99;\n
    *(v158) = *(v158) + 8;\n
    v107 = a0;\n
    v106 = a1;\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(v107)->field_0;\n
    v159 = v106;\n
    *(v159) = *(v159) - 1;\n
    v160 = v107;\n
    *(v160) = *(v160) + 1;\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_48c32e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48c32e:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v161 = v107;\n
    *(v161) = &(*(v161))[v105];\n
    v162 = v106;\n
    *(v162) = *(v162) - v105;\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v82 = a0;\n
    v81 = a1;\n
    *(&v79[0]) = *(v82);\n
    memset(&v78, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v79[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v79[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v79[2] << 8))\n
                v5 = v79[3];\n
        }\n
    }\n
    v80 = v5 & 1;\n
    cgc_uint2str(&v78, 12, v80);\n
    v4 = &v78;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v163 = v81;\n
    *(v163) = *(v163) - 4;\n
    v164 = v82;\n
    *(v164) = *(v164) + 4;\n
    v38 = a0;\n
    v37 = a1;\n
    v36 = &*(v38)->field_0;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = v37;\n
    *(v165) = *(v165) - 1;\n
    v166 = v38;\n
    *(v166) = *(v166) + 1;\n
    v17 = *(v36);\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21[0]) = *(v24);\n
    memset(&v20, 0, 21);\n
    if (*(v23) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if (v21[0] << 56)\n
    {\n
        v3 = 0;\n
        if (v21[1] << 48)\n
        {\n
            v3 = 0;\n
            if (v21[2] << 40)\n
            {\n
                v3 = 0;\n
                if (v21[3] << 32)\n
                {\n
                    v3 = 0;\n
                    if ((v21[4] << 24))\n
                    {\n
                        v3 = 0;\n
                        if ((v21[5] << 16))\n
                        {\n
                            v3 = 0;\n
                            if ((v21[6] << 8))\n
                                v3 = v21[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v22) = v3 & 1;\n
    cgc_uint2str(&v20, 21, *(&v22));\n
    v2 = &v20;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v167 = v23;\n
    *(v167) = *(v167) - 8;\n
    v168 = v24;\n
    *(v168) = *(v168) + 8;\n
    v91 = a0;\n
    v90 = a1;\n
    if (*(v90) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v90) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v90);\n
    v89 = v1;\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = cgc_calloc(134);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v88, \"Str: \");\n
    cgc_strncpy(v88 + 5, *(v91), v89);\n
    v170 = v91;\n
    *(v170) = &(*(v170))[4 + cgc_strlen(v88)];\n
    v172 = v90;\n
    *(v172) = *(v172) - (cgc_strlen(v88) + -4);\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v35 = a0;\n
    v34 = a1;\n
    v33 = &*(v35)->field_0;\n
    if (*(v34) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v173 = v34;\n
    *(v173) = *(v173) - 1;\n
    v174 = v35;\n
    *(v174) = *(v174) + 1;\n
    v17 = *(v33);\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 4);\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(v50)->field_0;\n
    cgc_uint2str(&v47, 4, v48);\n
    v0 = &v47;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v175 = v49;\n
    *(v175) = *(v175) - 1;\n
    v176 = v50;\n
    *(v176) = *(v176) + 1;\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v177 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v177 = v17;\n
        if (v177 < 1)\n
            v177 = (&v19)[v17](a0, a1);\n
    }\n
    return v177;\n
}\n
", "4770880:cgc_process_llamagamobium": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamagamobium(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1c0]\n
    struct_1 *v1;  // [bp-0x1b8]\n
    struct_1 *v2;  // [bp-0x1b0]\n
    char v3;  // [bp-0x1a5]\n
    unsigned int v4;  // [bp-0x1a4]\n
    struct_1 *v5;  // [bp-0x1a0]\n
    struct_1 *v6;  // [bp-0x198]\n
    struct_1 *v7;  // [bp-0x190]\n
    struct_1 *v8;  // [bp-0x188]\n
    unsigned int v9;  // [bp-0x180]\n
    unsigned int v10;  // [bp-0x17c]\n
    char v11;  // [bp-0x178]\n
    char *v12;  // [bp-0x160]\n
    unsigned int v13;  // [bp-0x154]\n
    unsigned int *v14;  // [bp-0x150]\n
    struct struct_0 **v15;  // [bp-0x148]\n
    char v16;  // [bp-0x140]\n
    unsigned short v17;  // [bp-0x13a]\n
    unsigned int *v18;  // [bp-0x138]\n
    struct struct_0 **v19;  // [bp-0x130]\n
    char v20;  // [bp-0x128]\n
    unsigned int v21;  // [bp-0x110]\n
    unsigned int *v22;  // [bp-0x108]\n
    struct struct_0 **v23;  // [bp-0x100]\n
    char v24;  // [bp-0xf8]\n
    unsigned int v25;  // [bp-0xe0]\n
    unsigned int *v26;  // [bp-0xd8]\n
    struct struct_0 **v27;  // [bp-0xd0]\n
    char v28;  // [bp-0xc8]\n
    unsigned int v29;  // [bp-0xbc]\n
    unsigned int *v30;  // [bp-0xb8]\n
    struct struct_0 **v31;  // [bp-0xb0]\n
    char v32;  // [bp-0xa8]\n
    unsigned int v33;  // [bp-0x9c]\n
    unsigned int *v34;  // [bp-0x98]\n
    struct struct_0 **v35;  // [bp-0x90]\n
    unsigned long v36;  // [bp-0x88]\n
    unsigned short v37;  // [bp-0x7a]\n
    unsigned int *v38;  // [bp-0x78]\n
    struct struct_0 **v39;  // [bp-0x70]\n
    char v40;  // [bp-0x64]\n
    char v41[4];  // [bp-0x58]\n
    unsigned int v42;  // [bp-0x4c]\n
    unsigned int *v43;  // [bp-0x48]\n
    struct struct_0 **v44;  // [bp-0x40]\n
    char v45;  // [bp-0x38]\n
    unsigned int v46;  // [bp-0x20]\n
    unsigned int *v47;  // [bp-0x18]\n
    struct struct_0 **v48;  // [bp-0x10]\n
    unsigned int *v50;  // rax\n
    struct struct_0 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    struct struct_0 **v53;  // rax\n
    unsigned int *v54;  // rax\n
    struct struct_0 **v55;  // rax\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v61;  // rax\n
    unsigned int *v62;  // rax\n
    struct struct_0 **v63;  // rax\n
    unsigned int *v64;  // rax\n
    struct struct_0 **v65;  // rax\n
    unsigned int *v66;  // rax\n
    struct struct_0 **v67;  // rax\n
    unsigned int *v68;  // rax\n
    struct struct_0 **v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_0 **v71;  // rax\n
    unsigned int *v72;  // rax, Other Possible Types: unsigned long\n
\n
    v10 = cgc__cookie;\n
    v9 = -1;\n
    if (cgc_sendline(1, \"===llamagamobium===\", 19) < 0)\n
        cgc__terminate(1);\n
    v27 = a0;\n
    v26 = a1;\n
    memset(&v24, 0, 21);\n
    if (*(v26) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v25) = *(&*(v27));\n
    cgc_uint2str(&v24, 21, *(&v25));\n
    v8 = &v24;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v24)) < 0)\n
        cgc__terminate(1);\n
    v50 = v26;\n
    *(v50) = *(v50) - 8;\n
    v51 = v27;\n
    *(v51) = *(v51) + 8;\n
    v31 = a0;\n
    v30 = a1;\n
    memset(&v28, 0, 12);\n
    if (*(v30) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = *(&*(v31));\n
    cgc_uint2str(&v28, 12, v29);\n
    v7 = &v28;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v28)) < 0)\n
        cgc__terminate(1);\n
    v52 = v30;\n
    *(v52) = *(v52) - 4;\n
    v53 = v31;\n
    *(v53) = *(v53) + 4;\n
    v48 = a0;\n
    v47 = a1;\n
    memset(&v45, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v46) = *(&*(v48));\n
    cgc_uint2str(&v45, 21, *(&v46));\n
    v6 = &v45;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v54 = v47;\n
    *(v54) = *(v54) - 8;\n
    v55 = v48;\n
    *(v55) = *(v55) + 8;\n
    v35 = a0;\n
    v34 = a1;\n
    memset(&v32, 0, 12);\n
    if (*(v34) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = *(&*(v35));\n
    cgc_uint2str(&v32, 12, v33);\n
    v5 = &v32;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v56 = v34;\n
    *(v56) = *(v56) - 4;\n
    v57 = v35;\n
    *(v57) = *(v57) + 4;\n
    v15 = a0;\n
    v14 = a1;\n
    if (*(v14) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v14) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v14);\n
    v13 = v4;\n
    if (!v13)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = cgc_calloc(134);\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v12, \"Str: \");\n
    cgc_strncpy(v12 + 5, *(v15), v13);\n
    v59 = v15;\n
    *(v59) = &(*(v59))[4 + cgc_strlen(v12)];\n
    v61 = v14;\n
    *(v61) = *(v61) - (cgc_strlen(v12) + -4);\n
    cgc_checkheap();\n
    cgc_free(v12);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 12);\n
    if (*(v43) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v41[0] << 24))\n
    {\n
        v3 = 0;\n
        if ((v41[1] << 16))\n
        {\n
            v3 = 0;\n
            if ((v41[2] << 8))\n
                v3 = v41[3];\n
        }\n
    }\n
    v42 = v3 & 1;\n
    cgc_uint2str(&v40, 12, v42);\n
    v2 = &v40;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v62 = v43;\n
    *(v62) = *(v62) - 4;\n
    v63 = v44;\n
    *(v63) = *(v63) + 4;\n
    v39 = a0;\n
    v38 = a1;\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(&*(v39));\n
    v64 = v38;\n
    *(v64) = *(v64) - 2;\n
    v65 = v39;\n
    *(v65) = *(v65) + 2;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_48d4a9;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48d4a9:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v66 = v38;\n
    *(v66) = *(v66) - v37;\n
    v67 = v39;\n
    *(v67) = &(*(v67))[v37];\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v19 = a0;\n
    v18 = a1;\n
    memset(&v16, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = *(&*(v19));\n
    cgc_uint2str(&v16, 6, v17);\n
    v1 = &v16;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v16)) < 0)\n
        cgc__terminate(1);\n
    v68 = v18;\n
    *(v68) = *(v68) - 2;\n
    v69 = v19;\n
    *(v69) = *(v69) + 2;\n
    v23 = a0;\n
    v22 = a1;\n
    memset(&v20, 0, 21);\n
    if (*(v22) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v21) = *(&*(v23));\n
    cgc_uint2str(&v20, 21, *(&v21));\n
    v0 = &v20;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v70 = v22;\n
    *(v70) = *(v70) - 8;\n
    v71 = v23;\n
    *(v71) = *(v71) + 8;\n
    v10 ^= cgc__cookie;\n
    if (v10)\n
        cgc___stack_cookie_fail();\n
    v72 = a1;\n
    if (*(a1) > 0 && v9 >= 0)\n
    {\n
        v72 = v9;\n
        if (v72 < 0)\n
            v72 = *(&(&v11)[8 * v9])(a0, a1);\n
    }\n
    return v72;\n
}\n
", "4773872:cgc_process_llamaateuchus": "extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaateuchus(unsigned long long a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = cgc__cookie;\n
    v0 = -1;\n
    if (cgc_sendline(1, \"===llamaateuchus===\", 19) < 0)\n
        cgc__terminate(1);\n
    v1 ^= cgc__cookie;\n
    if (v1)\n
        cgc___stack_cookie_fail();\n
    v4 = a1;\n
    if (*(a1) > 0 && v0 >= 0)\n
    {\n
        v4 = v0;\n
        if (v4 < 0)\n
            v4 = *(&(&v2)[8 * v0])(a0, a1);\n
    }\n
    return v4;\n
}\n
", "4774041:sub_48d899": null, "4774048:cgc_process_llamadebadge": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadebadge(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x568]\n
    char v1;  // [bp-0x559]\n
    struct_1 *v2;  // [bp-0x558]\n
    char v3;  // [bp-0x549]\n
    struct_1 *v4;  // [bp-0x548]\n
    struct_1 *v5;  // [bp-0x540]\n
    struct_1 *v6;  // [bp-0x538]\n
    struct_1 *v7;  // [bp-0x530]\n
    char v8;  // [bp-0x521]\n
    struct_1 *v9;  // [bp-0x520]\n
    struct_1 *v10;  // [bp-0x518]\n
    struct_1 *v11;  // [bp-0x510]\n
    char v12;  // [bp-0x501]\n
    struct_1 *v13;  // [bp-0x500]\n
    char v14;  // [bp-0x4f5]\n
    unsigned int v15;  // [bp-0x4f4]\n
    struct_1 *v16;  // [bp-0x4f0]\n
    struct_1 *v17;  // [bp-0x4e8]\n
    struct_1 *v18;  // [bp-0x4e0]\n
    struct_1 *v19;  // [bp-0x4d8]\n
    struct_1 *v20;  // [bp-0x4d0]\n
    struct_1 *v21;  // [bp-0x4c8]\n
    struct_1 *v22;  // [bp-0x4c0]\n
    char v23;  // [bp-0x4b5]\n
    unsigned int v24;  // [bp-0x4b4]\n
    struct_1 *v25;  // [bp-0x4b0]\n
    struct_1 *v26;  // [bp-0x4a8]\n
    struct_1 *v27;  // [bp-0x4a0]\n
    char v28;  // [bp-0x495]\n
    unsigned int v29;  // [bp-0x494]\n
    unsigned int v30;  // [bp-0x490]\n
    unsigned int v31;  // [bp-0x48c]\n
    char v32;  // [bp-0x488]\n
    char v33;  // [bp-0x46e]\n
    char v34[2];  // [bp-0x468]\n
    unsigned short v35;  // [bp-0x45a]\n
    unsigned int *v36;  // [bp-0x458]\n
    struct struct_0 **v37;  // [bp-0x450]\n
    char v38;  // [bp-0x446]\n
    char *v39;  // [bp-0x440]\n
    unsigned short v40;  // [bp-0x432]\n
    unsigned int *v41;  // [bp-0x430]\n
    struct struct_0 **v42;  // [bp-0x428]\n
    char v43;  // [bp-0x41e]\n
    char v44[2];  // [bp-0x418]\n
    unsigned short v45;  // [bp-0x40a]\n
    unsigned int *v46;  // [bp-0x408]\n
    struct struct_0 **v47;  // [bp-0x400]\n
    char v48;  // [bp-0x3f8]\n
    char v49[8];  // [bp-0x3e0]\n
    unsigned int v50;  // [bp-0x3d8]\n
    unsigned int *v51;  // [bp-0x3d0]\n
    struct struct_0 **v52;  // [bp-0x3c8]\n
    unsigned long v53;  // [bp-0x3c0]\n
    char v54;  // [bp-0x3b1]\n
    unsigned int *v55;  // [bp-0x3b0]\n
    struct struct_0 **v56;  // [bp-0x3a8]\n
    char *v57;  // [bp-0x3a0]\n
    unsigned int v58;  // [bp-0x394]\n
    unsigned int *v59;  // [bp-0x390]\n
    struct struct_0 **v60;  // [bp-0x388]\n
    char *v61;  // [bp-0x380]\n
    unsigned int v62;  // [bp-0x374]\n
    unsigned int *v63;  // [bp-0x370]\n
    struct struct_0 **v64;  // [bp-0x368]\n
    char v65;  // [bp-0x360]\n
    unsigned short v66;  // [bp-0x35a]\n
    unsigned int *v67;  // [bp-0x358]\n
    struct struct_0 **v68;  // [bp-0x350]\n
    char v69;  // [bp-0x348]\n
    unsigned short v70;  // [bp-0x342]\n
    unsigned int *v71;  // [bp-0x340]\n
    struct struct_0 **v72;  // [bp-0x338]\n
    char v73;  // [bp-0x330]\n
    unsigned short v74;  // [bp-0x32a]\n
    unsigned int *v75;  // [bp-0x328]\n
    struct struct_0 **v76;  // [bp-0x320]\n
    char v77;  // [bp-0x318]\n
    unsigned short v78;  // [bp-0x312]\n
    unsigned int *v79;  // [bp-0x310]\n
    struct struct_0 **v80;  // [bp-0x308]\n
    char v81;  // [bp-0x2fd]\n
    char v82;  // [bp-0x2f9]\n
    unsigned int *v83;  // [bp-0x2f8]\n
    struct struct_0 **v84;  // [bp-0x2f0]\n
    char v85;  // [bp-0x2e5]\n
    char v86;  // [bp-0x2e1]\n
    unsigned int *v87;  // [bp-0x2e0]\n
    struct struct_0 **v88;  // [bp-0x2d8]\n
    char v89;  // [bp-0x2cd]\n
    char v90;  // [bp-0x2c9]\n
    unsigned int *v91;  // [bp-0x2c8]\n
    struct struct_0 **v92;  // [bp-0x2c0]\n
    char v93;  // [bp-0x2b8]\n
    unsigned int v94;  // [bp-0x2a0]\n
    unsigned int *v95;  // [bp-0x298]\n
    struct struct_0 **v96;  // [bp-0x290]\n
    char v97;  // [bp-0x288]\n
    unsigned int v98;  // [bp-0x270]\n
    unsigned int *v99;  // [bp-0x268]\n
    struct struct_0 **v100;  // [bp-0x260]\n
    char v101;  // [bp-0x258]\n
    unsigned int v102;  // [bp-0x24c]\n
    unsigned int *v103;  // [bp-0x248]\n
    struct struct_0 **v104;  // [bp-0x240]\n
    char v105;  // [bp-0x238]\n
    unsigned int v106;  // [bp-0x22c]\n
    unsigned int *v107;  // [bp-0x228]\n
    struct struct_0 **v108;  // [bp-0x220]\n
    char v109;  // [bp-0x218]\n
    unsigned int v110;  // [bp-0x20c]\n
    unsigned int *v111;  // [bp-0x208]\n
    struct struct_0 **v112;  // [bp-0x200]\n
    char v113;  // [bp-0x1f8]\n
    unsigned int v114;  // [bp-0x1ec]\n
    unsigned int *v115;  // [bp-0x1e8]\n
    struct struct_0 **v116;  // [bp-0x1e0]\n
    unsigned long v117;  // [bp-0x1d8]\n
    unsigned short v118;  // [bp-0x1ca]\n
    unsigned int *v119;  // [bp-0x1c8]\n
    struct struct_0 **v120;  // [bp-0x1c0]\n
    unsigned long v121;  // [bp-0x1b8]\n
    unsigned short v122;  // [bp-0x1aa]\n
    unsigned int *v123;  // [bp-0x1a8]\n
    struct struct_0 **v124;  // [bp-0x1a0]\n
    unsigned long v125;  // [bp-0x198]\n
    unsigned short v126;  // [bp-0x18a]\n
    unsigned int *v127;  // [bp-0x188]\n
    struct struct_0 **v128;  // [bp-0x180]\n
    unsigned long v129;  // [bp-0x178]\n
    unsigned short v130;  // [bp-0x16a]\n
    unsigned int *v131;  // [bp-0x168]\n
    struct struct_0 **v132;  // [bp-0x160]\n
    char v133;  // [bp-0x154]\n
    char v134[4];  // [bp-0x148]\n
    unsigned int v135;  // [bp-0x13c]\n
    unsigned int *v136;  // [bp-0x138]\n
    struct struct_0 **v137;  // [bp-0x130]\n
    char v138;  // [bp-0x124]\n
    char v139[4];  // [bp-0x118]\n
    unsigned int v140;  // [bp-0x10c]\n
    unsigned int *v141;  // [bp-0x108]\n
    struct struct_0 **v142;  // [bp-0x100]\n
    char v143;  // [bp-0xf4]\n
    char v144[4];  // [bp-0xe8]\n
    unsigned int v145;  // [bp-0xdc]\n
    unsigned int *v146;  // [bp-0xd8]\n
    struct struct_0 **v147;  // [bp-0xd0]\n
    char *v148;  // [bp-0xc8]\n
    unsigned int v149;  // [bp-0xbc]\n
    unsigned int *v150;  // [bp-0xb8]\n
    struct struct_0 **v151;  // [bp-0xb0]\n
    unsigned long v152;  // [bp-0xa8]\n
    char v153;  // [bp-0x99]\n
    unsigned int *v154;  // [bp-0x98]\n
    struct struct_0 **v155;  // [bp-0x90]\n
    unsigned long v156;  // [bp-0x88]\n
    char v157;  // [bp-0x79]\n
    unsigned int *v158;  // [bp-0x78]\n
    struct struct_0 **v159;  // [bp-0x70]\n
    unsigned long v160;  // [bp-0x68]\n
    char v161;  // [bp-0x59]\n
    unsigned int *v162;  // [bp-0x58]\n
    struct struct_0 **v163;  // [bp-0x50]\n
    unsigned long v164;  // [bp-0x48]\n
    char v165;  // [bp-0x39]\n
    unsigned int *v166;  // [bp-0x38]\n
    struct struct_0 **v167;  // [bp-0x30]\n
    unsigned long v168;  // [bp-0x28]\n
    char v169;  // [bp-0x19]\n
    unsigned int *v170;  // [bp-0x18]\n
    struct struct_0 **v171;  // [bp-0x10]\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_0 **v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_0 **v264;  // rax\n
    unsigned int *v265;  // rax, Other Possible Types: unsigned long\n
\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamadebadge===\", 18) < 0)\n
        cgc__terminate(1);\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v63) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v63);\n
    v62 = v29;\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = cgc_calloc(134);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v61, \"Str: \");\n
    cgc_strncpy(v61 + 5, *(v64), v62);\n
    v174 = v64;\n
    *(v174) = &(*(v174))[4 + cgc_strlen(v61)];\n
    v176 = v63;\n
    *(v176) = *(v176) - (cgc_strlen(v61) + -4);\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v132 = a0;\n
    v131 = a1;\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    v177 = v131;\n
    *(v177) = *(v177) - 2;\n
    v178 = v132;\n
    *(v178) = *(v178) + 2;\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_48dbdf;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48dbdf:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v179 = v131;\n
    *(v179) = *(v179) - v130;\n
    v180 = v132;\n
    *(v180) = &(*(v180))[v130];\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v171 = a0;\n
    v170 = a1;\n
    if (*(v170) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v169 = *(v171)->field_0;\n
    v181 = v170;\n
    *(v181) = *(v181) - 1;\n
    v182 = v171;\n
    *(v182) = *(v182) + 1;\n
    if (v169 <= *(v170) && !(!v169))\n
        goto LABEL_48dd8f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48dd8f:\n
    v168 = cgc_calloc(v169);\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v168, *(v171), v169);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v183 = v171;\n
    *(v183) = &(*(v183))[v169];\n
    v184 = v170;\n
    *(v184) = *(v184) - v169;\n
    cgc_checkheap();\n
    cgc_free(v168);\n
    v128 = a0;\n
    v127 = a1;\n
    if (*(v127) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    v185 = v127;\n
    *(v185) = *(v185) - 2;\n
    v186 = v128;\n
    *(v186) = *(v186) + 2;\n
    if (v126 <= *(v127) && !(!v126))\n
        goto LABEL_48df3e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48df3e:\n
    v125 = cgc_calloc(v126);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v125, *(v128), v126);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v187 = v127;\n
    *(v187) = *(v187) - v126;\n
    v188 = v128;\n
    *(v188) = &(*(v188))[v126];\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = *(v167)->field_0;\n
    v189 = v166;\n
    *(v189) = *(v189) - 1;\n
    v190 = v167;\n
    *(v190) = *(v190) + 1;\n
    if (v165 <= *(v166) && !(!v165))\n
        goto LABEL_48e0ee;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48e0ee:\n
    v164 = cgc_calloc(v165);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v164, *(v167), v165);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v191 = v167;\n
    *(v191) = &(*(v191))[v165];\n
    v192 = v166;\n
    *(v192) = *(v192) - v165;\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    v147 = a0;\n
    v146 = a1;\n
    *(&v144) = *(v147);\n
    memset(&v143, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = 0;\n
    if ((v144[0] << 24))\n
    {\n
        v28 = 0;\n
        if ((v144[1] << 16))\n
        {\n
            v28 = 0;\n
            if ((v144[2] << 8))\n
                v28 = v144[3];\n
        }\n
    }\n
    v145 = v28 & 1;\n
    cgc_uint2str(&v143, 12, v145);\n
    v27 = &v143;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v193 = v146;\n
    *(v193) = *(v193) - 4;\n
    v194 = v147;\n
    *(v194) = *(v194) + 4;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v26 = &v113;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v195 = v115;\n
    *(v195) = *(v195) - 4;\n
    v196 = v116;\n
    *(v196) = *(v196) + 4;\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v25 = &v109;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v197 = v111;\n
    *(v197) = *(v197) - 4;\n
    v198 = v112;\n
    *(v198) = *(v198) + 4;\n
    v151 = a0;\n
    v150 = a1;\n
    if (*(v150) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v150) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v150);\n
    v149 = v24;\n
    if (!v149)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v148 = cgc_calloc(134);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v148, \"Str: \");\n
    cgc_strncpy(v148 + 5, *(v151), v149);\n
    v200 = v151;\n
    *(v200) = &(*(v200))[4 + cgc_strlen(v148)];\n
    v202 = v150;\n
    *(v202) = *(v202) - (cgc_strlen(v148) + -4);\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v142 = a0;\n
    v141 = a1;\n
    *(&v139) = *(v142);\n
    memset(&v138, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if ((v139[0] << 24))\n
    {\n
        v23 = 0;\n
        if ((v139[1] << 16))\n
        {\n
            v23 = 0;\n
            if ((v139[2] << 8))\n
                v23 = v139[3];\n
        }\n
    }\n
    v140 = v23 & 1;\n
    cgc_uint2str(&v138, 12, v140);\n
    v22 = &v138;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v138)) < 0)\n
        cgc__terminate(1);\n
    v203 = v141;\n
    *(v203) = *(v203) - 4;\n
    v204 = v142;\n
    *(v204) = *(v204) + 4;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 6);\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(&*(v80));\n
    cgc_uint2str(&v77, 6, v78);\n
    v21 = &v77;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v205 = v79;\n
    *(v205) = *(v205) - 2;\n
    v206 = v80;\n
    *(v206) = *(v206) + 2;\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 6);\n
    if (*(v75) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(&*(v76));\n
    cgc_uint2str(&v73, 6, v74);\n
    v20 = &v73;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v207 = v75;\n
    *(v207) = *(v207) - 2;\n
    v208 = v76;\n
    *(v208) = *(v208) + 2;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 4);\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(v92)->field_0;\n
    cgc_uint2str(&v89, 4, v90);\n
    v19 = &v89;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v209 = v91;\n
    *(v209) = *(v209) - 1;\n
    v210 = v92;\n
    *(v210) = *(v210) + 1;\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 4);\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(v88)->field_0;\n
    cgc_uint2str(&v85, 4, v86);\n
    v18 = &v85;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v211 = v87;\n
    *(v211) = *(v211) - 1;\n
    v212 = v88;\n
    *(v212) = *(v212) + 1;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 4);\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    cgc_uint2str(&v81, 4, v82);\n
    v17 = &v81;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v213 = v83;\n
    *(v213) = *(v213) - 1;\n
    v214 = v84;\n
    *(v214) = *(v214) + 1;\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v98) = *(&*(v100));\n
    cgc_uint2str(&v97, 21, *(&v98));\n
    v16 = &v97;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v215 = v99;\n
    *(v215) = *(v215) - 8;\n
    v216 = v100;\n
    *(v216) = *(v216) + 8;\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = *(v163)->field_0;\n
    v217 = v162;\n
    *(v217) = *(v217) - 1;\n
    v218 = v163;\n
    *(v218) = *(v218) + 1;\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_48efa4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48efa4:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v219 = v163;\n
    *(v219) = &(*(v219))[v161];\n
    v220 = v162;\n
    *(v220) = *(v220) - v161;\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v56 = a0;\n
    v55 = a1;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(v56)->field_0;\n
    v221 = v55;\n
    *(v221) = *(v221) - 1;\n
    v222 = v56;\n
    *(v222) = *(v222) + 1;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_48f151;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48f151:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v223 = v56;\n
    *(v223) = &(*(v223))[v54];\n
    v224 = v55;\n
    *(v224) = *(v224) - v54;\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v59) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v59);\n
    v58 = v15;\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = cgc_calloc(134);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v57, \"Str: \");\n
    cgc_strncpy(v57 + 5, *(v60), v58);\n
    v226 = v60;\n
    *(v226) = &(*(v226))[4 + cgc_strlen(v57)];\n
    v228 = v59;\n
    *(v228) = *(v228) - (cgc_strlen(v57) + -4);\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v137 = a0;\n
    v136 = a1;\n
    *(&v134) = *(v137);\n
    memset(&v133, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((v134[0] << 24))\n
    {\n
        v14 = 0;\n
        if ((v134[1] << 16))\n
        {\n
            v14 = 0;\n
            if ((v134[2] << 8))\n
                v14 = v134[3];\n
        }\n
    }\n
    v135 = v14 & 1;\n
    cgc_uint2str(&v133, 12, v135);\n
    v13 = &v133;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v229 = v136;\n
    *(v229) = *(v229) - 4;\n
    v230 = v137;\n
    *(v230) = *(v230) + 4;\n
    v124 = a0;\n
    v123 = a1;\n
    if (*(v123) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    v231 = v123;\n
    *(v231) = *(v231) - 2;\n
    v232 = v124;\n
    *(v232) = *(v232) + 2;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_48f698;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48f698:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v233 = v123;\n
    *(v233) = *(v233) - v122;\n
    v234 = v124;\n
    *(v234) = &(*(v234))[v122];\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49[0]) = *(v52);\n
    memset(&v48, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if (v49[0] << 56)\n
    {\n
        v12 = 0;\n
        if (v49[1] << 48)\n
        {\n
            v12 = 0;\n
            if (v49[2] << 40)\n
            {\n
                v12 = 0;\n
                if (v49[3] << 32)\n
                {\n
                    v12 = 0;\n
                    if ((v49[4] << 24))\n
                    {\n
                        v12 = 0;\n
                        if ((v49[5] << 16))\n
                        {\n
                            v12 = 0;\n
                            if ((v49[6] << 8))\n
                                v12 = v49[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v50) = v12 & 1;\n
    cgc_uint2str(&v48, 21, *(&v50));\n
    v11 = &v48;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v235 = v51;\n
    *(v235) = *(v235) - 8;\n
    v236 = v52;\n
    *(v236) = *(v236) + 8;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v10 = &v105;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v237 = v107;\n
    *(v237) = *(v237) - 4;\n
    v238 = v108;\n
    *(v238) = *(v238) + 4;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 21);\n
    if (*(v95) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v94) = *(&*(v96));\n
    cgc_uint2str(&v93, 21, *(&v94));\n
    v9 = &v93;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v239 = v95;\n
    *(v239) = *(v239) - 8;\n
    v240 = v96;\n
    *(v240) = *(v240) + 8;\n
    v120 = a0;\n
    v119 = a1;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    v241 = v119;\n
    *(v241) = *(v241) - 2;\n
    v242 = v120;\n
    *(v242) = *(v242) + 2;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_48fc92;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48fc92:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v243 = v119;\n
    *(v243) = *(v243) - v118;\n
    v244 = v120;\n
    *(v244) = &(*(v244))[v118];\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v159 = a0;\n
    v158 = a1;\n
    if (*(v158) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v157 = *(v159)->field_0;\n
    v245 = v158;\n
    *(v245) = *(v245) - 1;\n
    v246 = v159;\n
    *(v246) = *(v246) + 1;\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_48fe42;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_48fe42:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v247 = v159;\n
    *(v247) = &(*(v247))[v157];\n
    v248 = v158;\n
    *(v248) = *(v248) - v157;\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44) = *(v47);\n
    memset(&v43, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v44[0] << 8))\n
        v8 = v44[1];\n
    v45 = v8 & 1;\n
    cgc_uint2str(&v43, 6, v45);\n
    v7 = &v43;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v249 = v46;\n
    *(v249) = *(v249) - 2;\n
    v250 = v47;\n
    *(v250) = *(v250) + 2;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 6);\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(&*(v72));\n
    cgc_uint2str(&v69, 6, v70);\n
    v6 = &v69;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v251 = v71;\n
    *(v251) = *(v251) - 2;\n
    v252 = v72;\n
    *(v252) = *(v252) + 2;\n
    v155 = a0;\n
    v154 = a1;\n
    if (*(v154) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v153 = *(v155)->field_0;\n
    v253 = v154;\n
    *(v253) = *(v253) - 1;\n
    v254 = v155;\n
    *(v254) = *(v254) + 1;\n
    if (v153 <= *(v154) && !(!v153))\n
        goto LABEL_49023b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49023b:\n
    v152 = cgc_calloc(v153);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v152, *(v155), v153);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v255 = v155;\n
    *(v255) = &(*(v255))[v153];\n
    v256 = v154;\n
    *(v256) = *(v256) - v153;\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    cgc_uint2str(&v101, 12, v102);\n
    v5 = &v101;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v257 = v103;\n
    *(v257) = *(v257) - 4;\n
    v258 = v104;\n
    *(v258) = *(v258) + 4;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    cgc_uint2str(&v65, 6, v66);\n
    v4 = &v65;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v259 = v67;\n
    *(v259) = *(v259) - 2;\n
    v260 = v68;\n
    *(v260) = *(v260) + 2;\n
    v42 = a0;\n
    v41 = a1;\n
    v39 = &*(v42)->field_0;\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((*(v39) << 8))\n
        v3 = v39[1];\n
    v40 = v3 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v2 = &v38;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v261 = v41;\n
    *(v261) = *(v261) - 2;\n
    v262 = v42;\n
    *(v262) = *(v262) + 2;\n
    v37 = a0;\n
    v36 = a1;\n
    *(&v34) = *(v37);\n
    memset(&v33, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v34[0] << 8))\n
        v1 = v34[1];\n
    v35 = v1 & 1;\n
    cgc_uint2str(&v33, 6, v35);\n
    v0 = &v33;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v33)) < 0)\n
        cgc__terminate(1);\n
    v263 = v36;\n
    *(v263) = *(v263) - 2;\n
    v264 = v37;\n
    *(v264) = *(v264) + 2;\n
    v31 ^= cgc__cookie;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v265 = a1;\n
    if (*(a1) > 0 && v30 >= 0)\n
    {\n
        v265 = v30;\n
        if (v265 < 0)\n
            v265 = *(&(&v32)[8 * v30])(a0, a1);\n
    }\n
    return v265;\n
}\n
", "4786218:sub_49082a": null, "4786224:cgc_process_llamaDonia": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaDonia(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x680]\n
    unsigned int v1;  // [bp-0x678]\n
    unsigned int v2;  // [bp-0x674]\n
    struct_1 *v3;  // [bp-0x670]\n
    struct_1 *v4;  // [bp-0x668]\n
    struct_1 *v5;  // [bp-0x660]\n
    char v6;  // [bp-0x651]\n
    unsigned int v7;  // [bp-0x650]\n
    unsigned int v8;  // [bp-0x64c]\n
    struct_1 *v9;  // [bp-0x648]\n
    struct_1 *v10;  // [bp-0x640]\n
    struct_1 *v11;  // [bp-0x638]\n
    struct_1 *v12;  // [bp-0x630]\n
    struct_1 *v13;  // [bp-0x628]\n
    char v14;  // [bp-0x619]\n
    struct_1 *v15;  // [bp-0x618]\n
    char v16;  // [bp-0x609]\n
    struct_1 *v17;  // [bp-0x608]\n
    struct_1 *v18;  // [bp-0x600]\n
    char v19;  // [bp-0x5f1]\n
    struct_1 *v20;  // [bp-0x5f0]\n
    struct_1 *v21;  // [bp-0x5e8]\n
    struct_1 *v22;  // [bp-0x5e0]\n
    unsigned int v23;  // [bp-0x5d4]\n
    struct_1 *v24;  // [bp-0x5d0]\n
    struct_1 *v25;  // [bp-0x5c8]\n
    struct_1 *v26;  // [bp-0x5c0]\n
    struct_1 *v27;  // [bp-0x5b8]\n
    char v28;  // [bp-0x5a9]\n
    struct_1 *v29;  // [bp-0x5a8]\n
    struct_1 *v30;  // [bp-0x5a0]\n
    struct_1 *v31;  // [bp-0x598]\n
    unsigned int v32;  // [bp-0x590]\n
    unsigned int v33;  // [bp-0x58c]\n
    char v34;  // [bp-0x588]\n
    char v35;  // [bp-0x56e]\n
    char v36[2];  // [bp-0x568]\n
    unsigned short v37;  // [bp-0x55a]\n
    unsigned int *v38;  // [bp-0x558]\n
    struct struct_0 **v39;  // [bp-0x550]\n
    char v40;  // [bp-0x546]\n
    char v41[2];  // [bp-0x540]\n
    unsigned short v42;  // [bp-0x532]\n
    unsigned int *v43;  // [bp-0x530]\n
    struct struct_0 **v44;  // [bp-0x528]\n
    char v45;  // [bp-0x51e]\n
    char v46[2];  // [bp-0x518]\n
    unsigned short v47;  // [bp-0x50a]\n
    unsigned int *v48;  // [bp-0x508]\n
    struct struct_0 **v49;  // [bp-0x500]\n
    char v50;  // [bp-0x4f8]\n
    char v51[8];  // [bp-0x4e0]\n
    unsigned int v52;  // [bp-0x4d8]\n
    unsigned int *v53;  // [bp-0x4d0]\n
    struct struct_0 **v54;  // [bp-0x4c8]\n
    unsigned long v55;  // [bp-0x4c0]\n
    char v56;  // [bp-0x4b1]\n
    unsigned int *v57;  // [bp-0x4b0]\n
    struct struct_0 **v58;  // [bp-0x4a8]\n
    char *v59;  // [bp-0x4a0]\n
    unsigned int v60;  // [bp-0x494]\n
    unsigned int *v61;  // [bp-0x490]\n
    struct struct_0 **v62;  // [bp-0x488]\n
    char *v63;  // [bp-0x480]\n
    unsigned int v64;  // [bp-0x474]\n
    unsigned int *v65;  // [bp-0x470]\n
    struct struct_0 **v66;  // [bp-0x468]\n
    char v67;  // [bp-0x460]\n
    unsigned short v68;  // [bp-0x45a]\n
    unsigned int *v69;  // [bp-0x458]\n
    struct struct_0 **v70;  // [bp-0x450]\n
    char v71;  // [bp-0x448]\n
    unsigned short v72;  // [bp-0x442]\n
    unsigned int *v73;  // [bp-0x440]\n
    struct struct_0 **v74;  // [bp-0x438]\n
    char v75;  // [bp-0x430]\n
    unsigned short v76;  // [bp-0x42a]\n
    unsigned int *v77;  // [bp-0x428]\n
    struct struct_0 **v78;  // [bp-0x420]\n
    char v79;  // [bp-0x418]\n
    unsigned short v80;  // [bp-0x412]\n
    unsigned int *v81;  // [bp-0x410]\n
    struct struct_0 **v82;  // [bp-0x408]\n
    char v83;  // [bp-0x400]\n
    unsigned short v84;  // [bp-0x3fa]\n
    unsigned int *v85;  // [bp-0x3f8]\n
    struct struct_0 **v86;  // [bp-0x3f0]\n
    char v87;  // [bp-0x3e5]\n
    char v88;  // [bp-0x3e1]\n
    unsigned int *v89;  // [bp-0x3e0]\n
    struct struct_0 **v90;  // [bp-0x3d8]\n
    char v91;  // [bp-0x3cd]\n
    char v92;  // [bp-0x3c9]\n
    unsigned int *v93;  // [bp-0x3c8]\n
    struct struct_0 **v94;  // [bp-0x3c0]\n
    char v95;  // [bp-0x3b8]\n
    unsigned int v96;  // [bp-0x3a0]\n
    unsigned int *v97;  // [bp-0x398]\n
    struct struct_0 **v98;  // [bp-0x390]\n
    char v99;  // [bp-0x388]\n
    unsigned int v100;  // [bp-0x370]\n
    unsigned int *v101;  // [bp-0x368]\n
    struct struct_0 **v102;  // [bp-0x360]\n
    char v103;  // [bp-0x358]\n
    unsigned int v104;  // [bp-0x340]\n
    unsigned int *v105;  // [bp-0x338]\n
    struct struct_0 **v106;  // [bp-0x330]\n
    char v107;  // [bp-0x328]\n
    unsigned int v108;  // [bp-0x31c]\n
    unsigned int *v109;  // [bp-0x318]\n
    struct struct_0 **v110;  // [bp-0x310]\n
    char v111;  // [bp-0x308]\n
    unsigned int v112;  // [bp-0x2fc]\n
    unsigned int *v113;  // [bp-0x2f8]\n
    struct struct_0 **v114;  // [bp-0x2f0]\n
    char v115;  // [bp-0x2e8]\n
    unsigned int v116;  // [bp-0x2dc]\n
    unsigned int *v117;  // [bp-0x2d8]\n
    struct struct_0 **v118;  // [bp-0x2d0]\n
    char v119;  // [bp-0x2c8]\n
    unsigned int v120;  // [bp-0x2bc]\n
    unsigned int *v121;  // [bp-0x2b8]\n
    struct struct_0 **v122;  // [bp-0x2b0]\n
    unsigned long v123;  // [bp-0x2a8]\n
    unsigned short v124;  // [bp-0x29a]\n
    unsigned int *v125;  // [bp-0x298]\n
    struct struct_0 **v126;  // [bp-0x290]\n
    unsigned long v127;  // [bp-0x288]\n
    unsigned short v128;  // [bp-0x27a]\n
    unsigned int *v129;  // [bp-0x278]\n
    struct struct_0 **v130;  // [bp-0x270]\n
    unsigned long v131;  // [bp-0x268]\n
    unsigned short v132;  // [bp-0x25a]\n
    unsigned int *v133;  // [bp-0x258]\n
    struct struct_0 **v134;  // [bp-0x250]\n
    unsigned long v135;  // [bp-0x248]\n
    unsigned short v136;  // [bp-0x23a]\n
    unsigned int *v137;  // [bp-0x238]\n
    struct struct_0 **v138;  // [bp-0x230]\n
    unsigned long v139;  // [bp-0x228]\n
    unsigned short v140;  // [bp-0x21a]\n
    unsigned int *v141;  // [bp-0x218]\n
    struct struct_0 **v142;  // [bp-0x210]\n
    unsigned long v143;  // [bp-0x208]\n
    unsigned short v144;  // [bp-0x1fa]\n
    unsigned int *v145;  // [bp-0x1f8]\n
    struct struct_0 **v146;  // [bp-0x1f0]\n
    unsigned long v147;  // [bp-0x1e8]\n
    unsigned short v148;  // [bp-0x1da]\n
    unsigned int *v149;  // [bp-0x1d8]\n
    struct struct_0 **v150;  // [bp-0x1d0]\n
    unsigned long v151;  // [bp-0x1c8]\n
    unsigned short v152;  // [bp-0x1ba]\n
    unsigned int *v153;  // [bp-0x1b8]\n
    struct struct_0 **v154;  // [bp-0x1b0]\n
    char v155;  // [bp-0x1a4]\n
    char *v156;  // [bp-0x198]\n
    unsigned int v157;  // [bp-0x18c]\n
    unsigned int *v158;  // [bp-0x188]\n
    struct struct_0 **v159;  // [bp-0x180]\n
    char *v160;  // [bp-0x178]\n
    unsigned int v161;  // [bp-0x16c]\n
    unsigned int *v162;  // [bp-0x168]\n
    struct struct_0 **v163;  // [bp-0x160]\n
    char *v164;  // [bp-0x158]\n
    unsigned int v165;  // [bp-0x14c]\n
    unsigned int *v166;  // [bp-0x148]\n
    struct struct_0 **v167;  // [bp-0x140]\n
    char *v168;  // [bp-0x138]\n
    unsigned int v169;  // [bp-0x12c]\n
    unsigned int *v170;  // [bp-0x128]\n
    struct struct_0 **v171;  // [bp-0x120]\n
    char v172;  // [bp-0x118]\n
    unsigned int v173;  // [bp-0x100]\n
    unsigned int *v174;  // [bp-0xf8]\n
    struct struct_0 **v175;  // [bp-0xf0]\n
    char v176;  // [bp-0xe8]\n
    unsigned int v177;  // [bp-0xd0]\n
    unsigned int *v178;  // [bp-0xc8]\n
    struct struct_0 **v179;  // [bp-0xc0]\n
    char v180;  // [bp-0xb8]\n
    unsigned int v181;  // [bp-0xa0]\n
    unsigned int *v182;  // [bp-0x98]\n
    struct struct_0 **v183;  // [bp-0x90]\n
    unsigned long v184;  // [bp-0x88]\n
    char v185;  // [bp-0x79]\n
    unsigned int *v186;  // [bp-0x78]\n
    struct struct_0 **v187;  // [bp-0x70]\n
    unsigned long v188;  // [bp-0x68]\n
    char v189;  // [bp-0x59]\n
    unsigned int *v190;  // [bp-0x58]\n
    struct struct_0 **v191;  // [bp-0x50]\n
    unsigned long v192;  // [bp-0x48]\n
    char v193;  // [bp-0x39]\n
    unsigned int *v194;  // [bp-0x38]\n
    struct struct_0 **v195;  // [bp-0x30]\n
    unsigned long v196;  // [bp-0x28]\n
    char v197;  // [bp-0x19]\n
    unsigned int *v198;  // [bp-0x18]\n
    struct struct_0 **v199;  // [bp-0x10]\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    unsigned int *v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    struct struct_0 **v226;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_0 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_0 **v268;  // rax\n
    struct struct_0 **v270;  // rax\n
    unsigned int *v272;  // rax\n
    unsigned int *v273;  // rax\n
    struct struct_0 **v274;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_0 **v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_0 **v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v286;  // rax\n
    unsigned int *v288;  // rax\n
    unsigned int *v289;  // rax\n
    struct struct_0 **v290;  // rax\n
    unsigned int *v291;  // rax\n
    struct struct_0 **v292;  // rax\n
    unsigned int *v293;  // rax\n
    struct struct_0 **v294;  // rax\n
    unsigned int *v295;  // rax\n
    struct struct_0 **v296;  // rax\n
    unsigned int *v297;  // rax\n
    struct struct_0 **v298;  // rax\n
    struct struct_0 **v300;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v304;  // rax\n
    unsigned int *v306;  // rax\n
    unsigned int *v307;  // rax\n
    struct struct_0 **v308;  // rax\n
    unsigned int *v309;  // rax\n
    struct struct_0 **v310;  // rax\n
    unsigned int *v311;  // rax\n
    struct struct_0 **v312;  // rax\n
    unsigned int *v313;  // rax\n
    struct struct_0 **v314;  // rax\n
    unsigned int *v315;  // rax\n
    struct struct_0 **v316;  // rax\n
    unsigned int *v317;  // rax, Other Possible Types: unsigned long\n
\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamaDonia===\", 16) < 0)\n
        cgc__terminate(1);\n
    v183 = a0;\n
    v182 = a1;\n
    memset(&v180, 0, 21);\n
    if (*(v182) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v181) = *(&*(v183));\n
    cgc_uint2str(&v180, 21, *(&v181));\n
    v31 = &v180;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v180)) < 0)\n
        cgc__terminate(1);\n
    v201 = v182;\n
    *(v201) = *(v201) - 8;\n
    v202 = v183;\n
    *(v202) = *(v202) + 8;\n
    v122 = a0;\n
    v121 = a1;\n
    memset(&v119, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = *(&*(v122));\n
    cgc_uint2str(&v119, 12, v120);\n
    v30 = &v119;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v119)) < 0)\n
        cgc__terminate(1);\n
    v203 = v121;\n
    *(v203) = *(v203) - 4;\n
    v204 = v122;\n
    *(v204) = *(v204) + 4;\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 21);\n
    if (*(v105) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v104) = *(&*(v106));\n
    cgc_uint2str(&v103, 21, *(&v104));\n
    v29 = &v103;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v205 = v105;\n
    *(v205) = *(v205) - 8;\n
    v206 = v106;\n
    *(v206) = *(v206) + 8;\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46) = *(v49);\n
    memset(&v45, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = 0;\n
    if ((v46[0] << 8))\n
        v28 = v46[1];\n
    v47 = v28 & 1;\n
    cgc_uint2str(&v45, 6, v47);\n
    v27 = &v45;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v207 = v48;\n
    *(v207) = *(v207) - 2;\n
    v208 = v49;\n
    *(v208) = *(v208) + 2;\n
    v86 = a0;\n
    v85 = a1;\n
    memset(&v83, 0, 6);\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    cgc_uint2str(&v83, 6, v84);\n
    v26 = &v83;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v209 = v85;\n
    *(v209) = *(v209) - 2;\n
    v210 = v86;\n
    *(v210) = *(v210) + 2;\n
    v134 = a0;\n
    v133 = a1;\n
    if (*(v133) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v132 = *(&*(v134));\n
    v211 = v133;\n
    *(v211) = *(v211) - 2;\n
    v212 = v134;\n
    *(v212) = *(v212) + 2;\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_490ee2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_490ee2:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v213 = v133;\n
    *(v213) = *(v213) - v132;\n
    v214 = v134;\n
    *(v214) = &(*(v214))[v132];\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v199 = a0;\n
    v198 = a1;\n
    if (*(v198) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v197 = *(v199)->field_0;\n
    v215 = v198;\n
    *(v215) = *(v215) - 1;\n
    v216 = v199;\n
    *(v216) = *(v216) + 1;\n
    if (v197 <= *(v198) && !(!v197))\n
        goto LABEL_491092;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_491092:\n
    v196 = cgc_calloc(v197);\n
    if (!v196)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v196, *(v199), v197);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v217 = v199;\n
    *(v217) = &(*(v217))[v197];\n
    v218 = v198;\n
    *(v218) = *(v218) - v197;\n
    cgc_checkheap();\n
    cgc_free(v196);\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v100) = *(&*(v102));\n
    cgc_uint2str(&v99, 21, *(&v100));\n
    v25 = &v99;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v219 = v101;\n
    *(v219) = *(v219) - 8;\n
    v220 = v102;\n
    *(v220) = *(v220) + 8;\n
    v94 = a0;\n
    v93 = a1;\n
    memset(&v91, 0, 4);\n
    if (*(v93) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v92 = *(v94)->field_0;\n
    cgc_uint2str(&v91, 4, v92);\n
    v24 = &v91;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v91)) < 0)\n
        cgc__terminate(1);\n
    v221 = v93;\n
    *(v221) = *(v221) - 1;\n
    v222 = v94;\n
    *(v222) = *(v222) + 1;\n
    v154 = a0;\n
    v153 = a1;\n
    if (*(v153) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v152 = *(&*(v154));\n
    v223 = v153;\n
    *(v223) = *(v223) - 2;\n
    v224 = v154;\n
    *(v224) = *(v224) + 2;\n
    if (v152 <= *(v153) && !(!v152))\n
        goto LABEL_49144d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49144d:\n
    v151 = cgc_calloc(v152);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v151, *(v154), v152);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v225 = v153;\n
    *(v225) = *(v225) - v152;\n
    v226 = v154;\n
    *(v226) = &(*(v226))[v152];\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    v171 = a0;\n
    v170 = a1;\n
    if (*(v170) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v170) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v170);\n
    v169 = v23;\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v168 = cgc_calloc(134);\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v168, \"Str: \");\n
    cgc_strncpy(v168 + 5, *(v171), v169);\n
    v228 = v171;\n
    *(v228) = &(*(v228))[4 + cgc_strlen(v168)];\n
    v230 = v170;\n
    *(v230) = *(v230) - (cgc_strlen(v168) + -4);\n
    cgc_checkheap();\n
    cgc_free(v168);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v130 = a0;\n
    v129 = a1;\n
    if (*(v129) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = *(&*(v130));\n
    v231 = v129;\n
    *(v231) = *(v231) - 2;\n
    v232 = v130;\n
    *(v232) = *(v232) + 2;\n
    if (v128 <= *(v129) && !(!v128))\n
        goto LABEL_491810;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_491810:\n
    v127 = cgc_calloc(v128);\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v127, *(v130), v128);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v233 = v129;\n
    *(v233) = *(v233) - v128;\n
    v234 = v130;\n
    *(v234) = &(*(v234))[v128];\n
    cgc_checkheap();\n
    cgc_free(v127);\n
    v118 = a0;\n
    v117 = a1;\n
    memset(&v115, 0, 12);\n
    if (*(v117) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = *(&*(v118));\n
    cgc_uint2str(&v115, 12, v116);\n
    v22 = &v115;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v115)) < 0)\n
        cgc__terminate(1);\n
    v235 = v117;\n
    *(v235) = *(v235) - 4;\n
    v236 = v118;\n
    *(v236) = *(v236) + 4;\n
    v114 = a0;\n
    v113 = a1;\n
    memset(&v111, 0, 12);\n
    if (*(v113) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(&*(v114));\n
    cgc_uint2str(&v111, 12, v112);\n
    v21 = &v111;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v237 = v113;\n
    *(v237) = *(v237) - 4;\n
    v238 = v114;\n
    *(v238) = *(v238) + 4;\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 6);\n
    if (*(v81) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(&*(v82));\n
    cgc_uint2str(&v79, 6, v80);\n
    v20 = &v79;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v239 = v81;\n
    *(v239) = *(v239) - 2;\n
    v240 = v82;\n
    *(v240) = *(v240) + 2;\n
    v54 = a0;\n
    v53 = a1;\n
    *(&v51[0]) = *(v54);\n
    memset(&v50, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if (v51[0] << 56)\n
    {\n
        v19 = 0;\n
        if (v51[1] << 48)\n
        {\n
            v19 = 0;\n
            if (v51[2] << 40)\n
            {\n
                v19 = 0;\n
                if (v51[3] << 32)\n
                {\n
                    v19 = 0;\n
                    if ((v51[4] << 24))\n
                    {\n
                        v19 = 0;\n
                        if ((v51[5] << 16))\n
                        {\n
                            v19 = 0;\n
                            if ((v51[6] << 8))\n
                                v19 = v51[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v52) = v19 & 1;\n
    cgc_uint2str(&v50, 21, *(&v52));\n
    v18 = &v50;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v241 = v53;\n
    *(v241) = *(v241) - 8;\n
    v242 = v54;\n
    *(v242) = *(v242) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 6);\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 6, v76);\n
    v17 = &v75;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v243 = v77;\n
    *(v243) = *(v243) - 2;\n
    v244 = v78;\n
    *(v244) = *(v244) + 2;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v41[0] << 8))\n
        v16 = v41[1];\n
    v42 = v16 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v15 = &v40;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v245 = v43;\n
    *(v245) = *(v245) - 2;\n
    v246 = v44;\n
    *(v246) = *(v246) + 2;\n
    v150 = a0;\n
    v149 = a1;\n
    if (*(v149) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v148 = *(&*(v150));\n
    v247 = v149;\n
    *(v247) = *(v247) - 2;\n
    v248 = v150;\n
    *(v248) = *(v248) + 2;\n
    if (v148 <= *(v149) && !(!v148))\n
        goto LABEL_49215a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49215a:\n
    v147 = cgc_calloc(v148);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v147, *(v150), v148);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v249 = v149;\n
    *(v249) = *(v249) - v148;\n
    v250 = v150;\n
    *(v250) = &(*(v250))[v148];\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((v36[0] << 8))\n
        v14 = v36[1];\n
    v37 = v14 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v13 = &v35;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v251 = v38;\n
    *(v251) = *(v251) - 2;\n
    v252 = v39;\n
    *(v252) = *(v252) + 2;\n
    v110 = a0;\n
    v109 = a1;\n
    memset(&v107, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = *(&*(v110));\n
    cgc_uint2str(&v107, 12, v108);\n
    v12 = &v107;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v107)) < 0)\n
        cgc__terminate(1);\n
    v253 = v109;\n
    *(v253) = *(v253) - 4;\n
    v254 = v110;\n
    *(v254) = *(v254) + 4;\n
    v179 = a0;\n
    v178 = a1;\n
    memset(&v176, 0, 21);\n
    if (*(v178) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v177) = *(&*(v179));\n
    cgc_uint2str(&v176, 21, *(&v177));\n
    v11 = &v176;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v176)) < 0)\n
        cgc__terminate(1);\n
    v255 = v178;\n
    *(v255) = *(v255) - 8;\n
    v256 = v179;\n
    *(v256) = *(v256) + 8;\n
    v195 = a0;\n
    v194 = a1;\n
    if (*(v194) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v193 = *(v195)->field_0;\n
    v257 = v194;\n
    *(v257) = *(v257) - 1;\n
    v258 = v195;\n
    *(v258) = *(v258) + 1;\n
    if (v193 <= *(v194) && !(!v193))\n
        goto LABEL_492659;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_492659:\n
    v192 = cgc_calloc(v193);\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v192, *(v195), v193);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v259 = v195;\n
    *(v259) = &(*(v259))[v193];\n
    v260 = v194;\n
    *(v260) = *(v260) - v193;\n
    cgc_checkheap();\n
    cgc_free(v192);\n
    v191 = a0;\n
    v190 = a1;\n
    if (*(v190) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v189 = *(v191)->field_0;\n
    v261 = v190;\n
    *(v261) = *(v261) - 1;\n
    v262 = v191;\n
    *(v262) = *(v262) + 1;\n
    if (v189 <= *(v190) && !(!v189))\n
        goto LABEL_4927e8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4927e8:\n
    v188 = cgc_calloc(v189);\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v188, *(v191), v189);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v263 = v191;\n
    *(v263) = &(*(v263))[v189];\n
    v264 = v190;\n
    *(v264) = *(v264) - v189;\n
    cgc_checkheap();\n
    cgc_free(v188);\n
    v90 = a0;\n
    v89 = a1;\n
    memset(&v87, 0, 4);\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    cgc_uint2str(&v87, 4, v88);\n
    v10 = &v87;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v265 = v89;\n
    *(v265) = *(v265) - 1;\n
    v266 = v90;\n
    *(v266) = *(v266) + 1;\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    cgc_uint2str(&v71, 6, v72);\n
    v9 = &v71;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v267 = v73;\n
    *(v267) = *(v267) - 2;\n
    v268 = v74;\n
    *(v268) = *(v268) + 2;\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v65) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v65);\n
    v64 = v8;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v63, \"Str: \");\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v270 = v66;\n
    *(v270) = &(*(v270))[4 + cgc_strlen(v63)];\n
    v272 = v65;\n
    *(v272) = *(v272) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v146 = a0;\n
    v145 = a1;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v144 = *(&*(v146));\n
    v273 = v145;\n
    *(v273) = *(v273) - 2;\n
    v274 = v146;\n
    *(v274) = *(v274) + 2;\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_492d90;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_492d90:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v275 = v145;\n
    *(v275) = *(v275) - v144;\n
    v276 = v146;\n
    *(v276) = &(*(v276))[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v187 = a0;\n
    v186 = a1;\n
    if (*(v186) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = *(v187)->field_0;\n
    v277 = v186;\n
    *(v277) = *(v277) - 1;\n
    v278 = v187;\n
    *(v278) = *(v278) + 1;\n
    if (v185 <= *(v186) && !(!v185))\n
        goto LABEL_492f40;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_492f40:\n
    v184 = cgc_calloc(v185);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v184, *(v187), v185);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v279 = v187;\n
    *(v279) = &(*(v279))[v185];\n
    v280 = v186;\n
    *(v280) = *(v280) - v185;\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    v58 = a0;\n
    v57 = a1;\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v56 = *(v58)->field_0;\n
    v281 = v57;\n
    *(v281) = *(v281) - 1;\n
    v282 = v58;\n
    *(v282) = *(v282) + 1;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_4930ed;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4930ed:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v283 = v58;\n
    *(v283) = &(*(v283))[v56];\n
    v284 = v57;\n
    *(v284) = *(v284) - v56;\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v61) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v61);\n
    v60 = v7;\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = cgc_calloc(134);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v59, \"Str: \");\n
    cgc_strncpy(v59 + 5, *(v62), v60);\n
    v286 = v62;\n
    *(v286) = &(*(v286))[4 + cgc_strlen(v59)];\n
    v288 = v61;\n
    *(v288) = *(v288) - (cgc_strlen(v59) + -4);\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v159 = a0;\n
    v158 = a1;\n
    v156 = &*(v159)->field_0;\n
    memset(&v155, 0, 12);\n
    if (*(v158) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((*(v156) << 24))\n
    {\n
        v6 = 0;\n
        if ((v156[1] << 16))\n
        {\n
            v6 = 0;\n
            if ((v156[2] << 8))\n
                v6 = v156[3];\n
        }\n
    }\n
    v157 = v6 & 1;\n
    cgc_uint2str(&v155, 12, v157);\n
    v5 = &v155;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v155)) < 0)\n
        cgc__terminate(1);\n
    v289 = v158;\n
    *(v289) = *(v289) - 4;\n
    v290 = v159;\n
    *(v290) = *(v290) + 4;\n
    v142 = a0;\n
    v141 = a1;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v140 = *(&*(v142));\n
    v291 = v141;\n
    *(v291) = *(v291) - 2;\n
    v292 = v142;\n
    *(v292) = *(v292) + 2;\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_493634;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_493634:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v293 = v141;\n
    *(v293) = *(v293) - v140;\n
    v294 = v142;\n
    *(v294) = &(*(v294))[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v175 = a0;\n
    v174 = a1;\n
    memset(&v172, 0, 21);\n
    if (*(v174) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v173) = *(&*(v175));\n
    cgc_uint2str(&v172, 21, *(&v173));\n
    v4 = &v172;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v172)) < 0)\n
        cgc__terminate(1);\n
    v295 = v174;\n
    *(v295) = *(v295) - 8;\n
    v296 = v175;\n
    *(v296) = *(v296) + 8;\n
    v98 = a0;\n
    v97 = a1;\n
    memset(&v95, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v96) = *(&*(v98));\n
    cgc_uint2str(&v95, 21, *(&v96));\n
    v3 = &v95;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v95)) < 0)\n
        cgc__terminate(1);\n
    v297 = v97;\n
    *(v297) = *(v297) - 8;\n
    v298 = v98;\n
    *(v298) = *(v298) + 8;\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v166) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v166);\n
    v165 = v2;\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = cgc_calloc(134);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v164, \"Str: \");\n
    cgc_strncpy(v164 + 5, *(v167), v165);\n
    v300 = v167;\n
    *(v300) = &(*(v300))[4 + cgc_strlen(v164)];\n
    v302 = v166;\n
    *(v302) = *(v302) - (cgc_strlen(v164) + -4);\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v162) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v162);\n
    v161 = v1;\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v160 = cgc_calloc(134);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v160, \"Str: \");\n
    cgc_strncpy(v160 + 5, *(v163), v161);\n
    v304 = v163;\n
    *(v304) = &(*(v304))[4 + cgc_strlen(v160)];\n
    v306 = v162;\n
    *(v306) = *(v306) - (cgc_strlen(v160) + -4);\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v138 = a0;\n
    v137 = a1;\n
    if (*(v137) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v136 = *(&*(v138));\n
    v307 = v137;\n
    *(v307) = *(v307) - 2;\n
    v308 = v138;\n
    *(v308) = *(v308) + 2;\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_493dfa;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_493dfa:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v309 = v137;\n
    *(v309) = *(v309) - v136;\n
    v310 = v138;\n
    *(v310) = &(*(v310))[v136];\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v126 = a0;\n
    v125 = a1;\n
    if (*(v125) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = *(&*(v126));\n
    v311 = v125;\n
    *(v311) = *(v311) - 2;\n
    v312 = v126;\n
    *(v312) = *(v312) + 2;\n
    if (v124 <= *(v125) && !(!v124))\n
        goto LABEL_493fca;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_493fca:\n
    v123 = cgc_calloc(v124);\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v123, *(v126), v124);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v313 = v125;\n
    *(v313) = *(v313) - v124;\n
    v314 = v126;\n
    *(v314) = &(*(v314))[v124];\n
    cgc_checkheap();\n
    cgc_free(v123);\n
    v70 = a0;\n
    v69 = a1;\n
    memset(&v67, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(&*(v70));\n
    cgc_uint2str(&v67, 6, v68);\n
    v0 = &v67;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v67)) < 0)\n
        cgc__terminate(1);\n
    v315 = v69;\n
    *(v315) = *(v315) - 2;\n
    v316 = v70;\n
    *(v316) = *(v316) + 2;\n
    v33 ^= cgc__cookie;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v317 = a1;\n
    if (*(a1) > 0 && v32 >= 0)\n
    {\n
        v317 = v32;\n
        if (v317 < 0)\n
            v317 = *(&(&v34)[8 * v32])(a0, a1);\n
    }\n
    return v317;\n
}\n
", "4801064:sub_494228": null, "4801072:cgc_process_llamacolophonite": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacolophonite(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x3d8]\n
    struct_1 *v1;  // [bp-0x3d0]\n
    char v2;  // [bp-0x3c1]\n
    struct_1 *v3;  // [bp-0x3c0]\n
    struct_1 *v4;  // [bp-0x3b8]\n
    char v5;  // [bp-0x3a9]\n
    struct_1 *v6;  // [bp-0x3a8]\n
    struct_1 *v7;  // [bp-0x3a0]\n
    struct_1 *v8;  // [bp-0x398]\n
    struct_1 *v9;  // [bp-0x390]\n
    unsigned int v10;  // [bp-0x384]\n
    unsigned int v11;  // [bp-0x380]\n
    unsigned int v12;  // [bp-0x37c]\n
    unsigned int v13;  // [bp-0x378]\n
    unsigned int v14;  // [bp-0x374]\n
    struct_1 *v15;  // [bp-0x370]\n
    unsigned int v16;  // [bp-0x364]\n
    struct_1 *v17;  // [bp-0x360]\n
    struct_1 *v18;  // [bp-0x358]\n
    char v19;  // [bp-0x349]\n
    struct_1 *v20;  // [bp-0x348]\n
    struct_1 *v21;  // [bp-0x340]\n
    struct_1 *v22;  // [bp-0x338]\n
    unsigned int v23;  // [bp-0x330]\n
    unsigned int v24;  // [bp-0x32c]\n
    char v25;  // [bp-0x328]\n
    char v26;  // [bp-0x30e]\n
    char *v27;  // [bp-0x308]\n
    unsigned short v28;  // [bp-0x2fa]\n
    unsigned int *v29;  // [bp-0x2f8]\n
    struct struct_0 **v30;  // [bp-0x2f0]\n
    char v31;  // [bp-0x2e8]\n
    char v32[8];  // [bp-0x2c8]\n
    unsigned int v33;  // [bp-0x2c0]\n
    unsigned int *v34;  // [bp-0x2b8]\n
    struct struct_0 **v35;  // [bp-0x2b0]\n
    char v36;  // [bp-0x2a8]\n
    char v37[8];  // [bp-0x288]\n
    unsigned int v38;  // [bp-0x280]\n
    unsigned int *v39;  // [bp-0x278]\n
    struct struct_0 **v40;  // [bp-0x270]\n
    char *v41;  // [bp-0x268]\n
    unsigned int v42;  // [bp-0x25c]\n
    unsigned int *v43;  // [bp-0x258]\n
    struct struct_0 **v44;  // [bp-0x250]\n
    char *v45;  // [bp-0x248]\n
    unsigned int v46;  // [bp-0x23c]\n
    unsigned int *v47;  // [bp-0x238]\n
    struct struct_0 **v48;  // [bp-0x230]\n
    char *v49;  // [bp-0x228]\n
    unsigned int v50;  // [bp-0x21c]\n
    unsigned int *v51;  // [bp-0x218]\n
    struct struct_0 **v52;  // [bp-0x210]\n
    char v53;  // [bp-0x208]\n
    unsigned short v54;  // [bp-0x202]\n
    unsigned int *v55;  // [bp-0x200]\n
    struct struct_0 **v56;  // [bp-0x1f8]\n
    char v57;  // [bp-0x1f0]\n
    unsigned short v58;  // [bp-0x1ea]\n
    unsigned int *v59;  // [bp-0x1e8]\n
    struct struct_0 **v60;  // [bp-0x1e0]\n
    char v61;  // [bp-0x1d5]\n
    char v62;  // [bp-0x1d1]\n
    unsigned int *v63;  // [bp-0x1d0]\n
    struct struct_0 **v64;  // [bp-0x1c8]\n
    char v65;  // [bp-0x1bd]\n
    char v66;  // [bp-0x1b9]\n
    unsigned int *v67;  // [bp-0x1b8]\n
    struct struct_0 **v68;  // [bp-0x1b0]\n
    char v69;  // [bp-0x1a5]\n
    char v70;  // [bp-0x1a1]\n
    unsigned int *v71;  // [bp-0x1a0]\n
    struct struct_0 **v72;  // [bp-0x198]\n
    char v73;  // [bp-0x18d]\n
    char v74;  // [bp-0x189]\n
    unsigned int *v75;  // [bp-0x188]\n
    struct struct_0 **v76;  // [bp-0x180]\n
    char v77;  // [bp-0x178]\n
    unsigned int v78;  // [bp-0x160]\n
    unsigned int *v79;  // [bp-0x158]\n
    struct struct_0 **v80;  // [bp-0x150]\n
    char v81;  // [bp-0x148]\n
    unsigned int v82;  // [bp-0x13c]\n
    unsigned int *v83;  // [bp-0x138]\n
    struct struct_0 **v84;  // [bp-0x130]\n
    char v85;  // [bp-0x128]\n
    unsigned int v86;  // [bp-0x11c]\n
    unsigned int *v87;  // [bp-0x118]\n
    struct struct_0 **v88;  // [bp-0x110]\n
    char v89;  // [bp-0x108]\n
    unsigned int v90;  // [bp-0xfc]\n
    unsigned int *v91;  // [bp-0xf8]\n
    struct struct_0 **v92;  // [bp-0xf0]\n
    char v93;  // [bp-0xe8]\n
    unsigned int v94;  // [bp-0xdc]\n
    unsigned int *v95;  // [bp-0xd8]\n
    struct struct_0 **v96;  // [bp-0xd0]\n
    unsigned long v97;  // [bp-0xc8]\n
    unsigned short v98;  // [bp-0xba]\n
    unsigned int *v99;  // [bp-0xb8]\n
    struct struct_0 **v100;  // [bp-0xb0]\n
    unsigned long v101;  // [bp-0xa8]\n
    unsigned short v102;  // [bp-0x9a]\n
    unsigned int *v103;  // [bp-0x98]\n
    struct struct_0 **v104;  // [bp-0x90]\n
    char *v105;  // [bp-0x88]\n
    unsigned int v106;  // [bp-0x7c]\n
    unsigned int *v107;  // [bp-0x78]\n
    struct struct_0 **v108;  // [bp-0x70]\n
    char *v109;  // [bp-0x68]\n
    unsigned int v110;  // [bp-0x5c]\n
    unsigned int *v111;  // [bp-0x58]\n
    struct struct_0 **v112;  // [bp-0x50]\n
    char *v113;  // [bp-0x48]\n
    unsigned int v114;  // [bp-0x3c]\n
    unsigned int *v115;  // [bp-0x38]\n
    struct struct_0 **v116;  // [bp-0x30]\n
    unsigned long v117;  // [bp-0x28]\n
    char v118;  // [bp-0x19]\n
    unsigned int *v119;  // [bp-0x18]\n
    struct struct_0 **v120;  // [bp-0x10]\n
    unsigned int *v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    unsigned int *v124;  // rax\n
    struct struct_0 **v125;  // rax\n
    unsigned int *v126;  // rax\n
    struct struct_0 **v127;  // rax\n
    unsigned int *v128;  // rax\n
    struct struct_0 **v129;  // rax\n
    unsigned int *v130;  // rax\n
    struct struct_0 **v131;  // rax\n
    struct struct_0 **v133;  // rax\n
    unsigned int *v135;  // rax\n
    unsigned int *v136;  // rax\n
    struct struct_0 **v137;  // rax\n
    struct struct_0 **v139;  // rax\n
    unsigned int *v141;  // rax\n
    unsigned int *v142;  // rax\n
    struct struct_0 **v143;  // rax\n
    unsigned int *v144;  // rax\n
    struct struct_0 **v145;  // rax\n
    struct struct_0 **v147;  // rax\n
    unsigned int *v149;  // rax\n
    unsigned int *v150;  // rax\n
    struct struct_0 **v151;  // rax\n
    unsigned int *v152;  // rax\n
    struct struct_0 **v153;  // rax\n
    struct struct_0 **v155;  // rax\n
    unsigned int *v157;  // rax\n
    struct struct_0 **v159;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_0 **v163;  // rax\n
    unsigned int *v165;  // rax\n
    unsigned int *v166;  // rax\n
    struct struct_0 **v167;  // rax\n
    struct struct_0 **v168;  // rax\n
    unsigned int *v169;  // rax\n
    unsigned int *v170;  // rax\n
    struct struct_0 **v171;  // rax\n
    unsigned int *v172;  // rax\n
    struct struct_0 **v173;  // rax\n
    unsigned int *v174;  // rax\n
    struct struct_0 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    struct struct_0 **v177;  // rax\n
    unsigned int *v178;  // rax\n
    struct struct_0 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    struct struct_0 **v183;  // rax\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax, Other Possible Types: unsigned long\n
\n
    v24 = cgc__cookie;\n
    v23 = -1;\n
    if (cgc_sendline(1, \"===llamacolophonite===\", 22) < 0)\n
        cgc__terminate(1);\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 6);\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 6, v58);\n
    v22 = &v57;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v122 = v59;\n
    *(v122) = *(v122) - 2;\n
    v123 = v60;\n
    *(v123) = *(v123) + 2;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 12);\n
    if (*(v91) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    cgc_uint2str(&v89, 12, v90);\n
    v21 = &v89;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v124 = v91;\n
    *(v124) = *(v124) - 4;\n
    v125 = v92;\n
    *(v125) = *(v125) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 4);\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(v76)->field_0;\n
    cgc_uint2str(&v73, 4, v74);\n
    v20 = &v73;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v126 = v75;\n
    *(v126) = *(v126) - 1;\n
    v127 = v76;\n
    *(v127) = *(v127) + 1;\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37[0]) = *(v40);\n
    memset(&v36, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if (v37[0] << 56)\n
    {\n
        v19 = 0;\n
        if (v37[1] << 48)\n
        {\n
            v19 = 0;\n
            if (v37[2] << 40)\n
            {\n
                v19 = 0;\n
                if (v37[3] << 32)\n
                {\n
                    v19 = 0;\n
                    if ((v37[4] << 24))\n
                    {\n
                        v19 = 0;\n
                        if ((v37[5] << 16))\n
                        {\n
                            v19 = 0;\n
                            if ((v37[6] << 8))\n
                                v19 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v38) = v19 & 1;\n
    cgc_uint2str(&v36, 21, *(&v38));\n
    v18 = &v36;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v128 = v39;\n
    *(v128) = *(v128) - 8;\n
    v129 = v40;\n
    *(v129) = *(v129) + 8;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 4);\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(v72)->field_0;\n
    cgc_uint2str(&v69, 4, v70);\n
    v17 = &v69;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v130 = v71;\n
    *(v130) = *(v130) - 1;\n
    v131 = v72;\n
    *(v131) = *(v131) + 1;\n
    v116 = a0;\n
    v115 = a1;\n
    if (*(v115) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v115) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v115);\n
    v114 = v16;\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = cgc_calloc(134);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v113, \"Str: \");\n
    cgc_strncpy(v113 + 5, *(v116), v114);\n
    v133 = v116;\n
    *(v133) = &(*(v133))[4 + cgc_strlen(v113)];\n
    v135 = v115;\n
    *(v135) = *(v135) - (cgc_strlen(v113) + -4);\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v15 = &v65;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v136 = v67;\n
    *(v136) = *(v136) - 1;\n
    v137 = v68;\n
    *(v137) = *(v137) + 1;\n
    v52 = a0;\n
    v51 = a1;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v51) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v51);\n
    v50 = v14;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v49, \"Str: \");\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v139 = v52;\n
    *(v139) = &(*(v139))[4 + cgc_strlen(v49)];\n
    v141 = v51;\n
    *(v141) = *(v141) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v104 = a0;\n
    v103 = a1;\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v102 = *(&*(v104));\n
    v142 = v103;\n
    *(v142) = *(v142) - 2;\n
    v143 = v104;\n
    *(v143) = *(v143) + 2;\n
    if (v102 <= *(v103) && !(!v102))\n
        goto LABEL_494e4d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_494e4d:\n
    v101 = cgc_calloc(v102);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v101, *(v104), v102);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v144 = v103;\n
    *(v144) = *(v144) - v102;\n
    v145 = v104;\n
    *(v145) = &(*(v145))[v102];\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    v112 = a0;\n
    v111 = a1;\n
    if (*(v111) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v111) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v111);\n
    v110 = v13;\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = cgc_calloc(134);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v109, \"Str: \");\n
    cgc_strncpy(v109 + 5, *(v112), v110);\n
    v147 = v112;\n
    *(v147) = &(*(v147))[4 + cgc_strlen(v109)];\n
    v149 = v111;\n
    *(v149) = *(v149) - (cgc_strlen(v109) + -4);\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v100 = a0;\n
    v99 = a1;\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    v150 = v99;\n
    *(v150) = *(v150) - 2;\n
    v151 = v100;\n
    *(v151) = *(v151) + 2;\n
    if (v98 <= *(v99) && !(!v98))\n
        goto LABEL_4951da;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4951da:\n
    v97 = cgc_calloc(v98);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v97, *(v100), v98);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v152 = v99;\n
    *(v152) = *(v152) - v98;\n
    v153 = v100;\n
    *(v153) = &(*(v153))[v98];\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v47) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v47);\n
    v46 = v12;\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = cgc_calloc(134);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v45, \"Str: \");\n
    cgc_strncpy(v45 + 5, *(v48), v46);\n
    v155 = v48;\n
    *(v155) = &(*(v155))[4 + cgc_strlen(v45)];\n
    v157 = v47;\n
    *(v157) = *(v157) - (cgc_strlen(v45) + -4);\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v108 = a0;\n
    v107 = a1;\n
    if (*(v107) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v107) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v107);\n
    v106 = v11;\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = cgc_calloc(134);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v105, \"Str: \");\n
    cgc_strncpy(v105 + 5, *(v108), v106);\n
    v159 = v108;\n
    *(v159) = &(*(v159))[4 + cgc_strlen(v105)];\n
    v161 = v107;\n
    *(v161) = *(v161) - (cgc_strlen(v105) + -4);\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v44 = a0;\n
    v43 = a1;\n
    if (*(v43) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v43) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v43);\n
    v42 = v10;\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = cgc_calloc(134);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v41, \"Str: \");\n
    cgc_strncpy(v41 + 5, *(v44), v42);\n
    v163 = v44;\n
    *(v163) = &(*(v163))[4 + cgc_strlen(v41)];\n
    v165 = v43;\n
    *(v165) = *(v165) - (cgc_strlen(v41) + -4);\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v120 = a0;\n
    v119 = a1;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(v120)->field_0;\n
    v166 = v119;\n
    *(v166) = *(v166) - 1;\n
    v167 = v120;\n
    *(v167) = *(v167) + 1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_49592d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49592d:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v168 = v120;\n
    *(v168) = &(*(v168))[v118];\n
    v169 = v119;\n
    *(v169) = *(v169) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v78) = *(&*(v80));\n
    cgc_uint2str(&v77, 21, *(&v78));\n
    v9 = &v77;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v170 = v79;\n
    *(v170) = *(v170) - 8;\n
    v171 = v80;\n
    *(v171) = *(v171) + 8;\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 12, v94);\n
    v8 = &v93;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v172 = v95;\n
    *(v172) = *(v172) - 4;\n
    v173 = v96;\n
    *(v173) = *(v173) + 4;\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 12);\n
    if (*(v87) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 12, v86);\n
    v7 = &v85;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v174 = v87;\n
    *(v174) = *(v174) - 4;\n
    v175 = v88;\n
    *(v175) = *(v175) + 4;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 4);\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    cgc_uint2str(&v61, 4, v62);\n
    v6 = &v61;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v176 = v63;\n
    *(v176) = *(v176) - 1;\n
    v177 = v64;\n
    *(v177) = *(v177) + 1;\n
    v30 = a0;\n
    v29 = a1;\n
    v27 = &*(v30)->field_0;\n
    memset(&v26, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((*(v27) << 8))\n
        v5 = v27[1];\n
    v28 = v5 & 1;\n
    cgc_uint2str(&v26, 6, v28);\n
    v4 = &v26;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v178 = v29;\n
    *(v178) = *(v178) - 2;\n
    v179 = v30;\n
    *(v179) = *(v179) + 2;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 12);\n
    if (*(v83) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 12, v82);\n
    v3 = &v81;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v180 = v83;\n
    *(v180) = *(v180) - 4;\n
    v181 = v84;\n
    *(v181) = *(v181) + 4;\n
    v35 = a0;\n
    v34 = a1;\n
    *(&v32[0]) = *(v35);\n
    memset(&v31, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if (v32[0] << 56)\n
    {\n
        v2 = 0;\n
        if (v32[1] << 48)\n
        {\n
            v2 = 0;\n
            if (v32[2] << 40)\n
            {\n
                v2 = 0;\n
                if (v32[3] << 32)\n
                {\n
                    v2 = 0;\n
                    if ((v32[4] << 24))\n
                    {\n
                        v2 = 0;\n
                        if ((v32[5] << 16))\n
                        {\n
                            v2 = 0;\n
                            if ((v32[6] << 8))\n
                                v2 = v32[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v33) = v2 & 1;\n
    cgc_uint2str(&v31, 21, *(&v33));\n
    v1 = &v31;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v31)) < 0)\n
        cgc__terminate(1);\n
    v182 = v34;\n
    *(v182) = *(v182) - 8;\n
    v183 = v35;\n
    *(v183) = *(v183) + 8;\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 6, v54);\n
    v0 = &v53;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v184 = v55;\n
    *(v184) = *(v184) - 2;\n
    v185 = v56;\n
    *(v185) = *(v185) + 2;\n
    v24 ^= cgc__cookie;\n
    if (v24)\n
        cgc___stack_cookie_fail();\n
    v186 = a1;\n
    if (*(a1) > 0 && v23 >= 0)\n
    {\n
        v186 = v23;\n
        if (v186 < 0)\n
            v186 = *(&(&v25)[8 * v23])(a0, a1);\n
    }\n
    return v186;\n
}\n
", "4809696:cgc_process_llamadiscretion": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamadiscretion(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x150]\n
    struct_1 *v1;  // [bp-0x148]\n
    char v2;  // [bp-0x139]\n
    struct_1 *v3;  // [bp-0x138]\n
    struct_1 *v4;  // [bp-0x130]\n
    char v5;  // [bp-0x121]\n
    unsigned int v6;  // [bp-0x120]\n
    unsigned int v7;  // [bp-0x11c]\n
    char v8;  // [bp-0x118]\n
    char v9;  // [bp-0xfe]\n
    char v10[2];  // [bp-0xf8]\n
    unsigned short v11;  // [bp-0xea]\n
    unsigned int *v12;  // [bp-0xe8]\n
    struct struct_0 **v13;  // [bp-0xe0]\n
    char v14;  // [bp-0xd8]\n
    char v15[8];  // [bp-0xb8]\n
    unsigned int v16;  // [bp-0xb0]\n
    unsigned int *v17;  // [bp-0xa8]\n
    struct struct_0 **v18;  // [bp-0xa0]\n
    unsigned long v19;  // [bp-0x98]\n
    char v20;  // [bp-0x89]\n
    unsigned int *v21;  // [bp-0x88]\n
    struct struct_0 **v22;  // [bp-0x80]\n
    char v23;  // [bp-0x78]\n
    unsigned short v24;  // [bp-0x72]\n
    unsigned int *v25;  // [bp-0x70]\n
    struct struct_0 **v26;  // [bp-0x68]\n
    char v27;  // [bp-0x5d]\n
    char v28;  // [bp-0x59]\n
    unsigned int *v29;  // [bp-0x58]\n
    struct struct_0 **v30;  // [bp-0x50]\n
    unsigned long v31;  // [bp-0x48]\n
    unsigned short v32;  // [bp-0x3a]\n
    unsigned int *v33;  // [bp-0x38]\n
    struct struct_0 **v34;  // [bp-0x30]\n
    unsigned long v35;  // [bp-0x28]\n
    char v36;  // [bp-0x19]\n
    unsigned int *v37;  // [bp-0x18]\n
    struct struct_0 **v38;  // [bp-0x10]\n
    unsigned int *v40;  // rax\n
    struct struct_0 **v41;  // rax\n
    struct struct_0 **v42;  // rax\n
    unsigned int *v43;  // rax\n
    unsigned int *v44;  // rax\n
    struct struct_0 **v45;  // rax\n
    unsigned int *v46;  // rax\n
    struct struct_0 **v47;  // rax\n
    unsigned int *v48;  // rax\n
    struct struct_0 **v49;  // rax\n
    unsigned int *v50;  // rax\n
    struct struct_0 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    struct struct_0 **v53;  // rax\n
    unsigned int *v54;  // rax\n
    struct struct_0 **v55;  // rax\n
    struct struct_0 **v56;  // rax\n
    unsigned int *v57;  // rax\n
    unsigned int *v58;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v60;  // rax, Other Possible Types: unsigned long\n
\n
    v7 = cgc__cookie;\n
    v6 = -1;\n
    if (cgc_sendline(1, \"===llamadiscretion===\", 21) < 0)\n
        cgc__terminate(1);\n
    v22 = a0;\n
    v21 = a1;\n
    if (*(v21) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = *(v22)->field_0;\n
    v40 = v21;\n
    *(v40) = *(v40) - 1;\n
    v41 = v22;\n
    *(v41) = &*(v41)->padding_1;\n
    if (v20 <= *(v21) && !(!v20))\n
        goto LABEL_496515;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_496515:\n
    v19 = cgc_calloc(v20);\n
    if (!v19)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v19, *(v22), v20);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v42 = v22;\n
    *(v42) = &(&*(v42)->field_0)[v20];\n
    v43 = v21;\n
    *(v43) = *(v43) - v20;\n
    cgc_checkheap();\n
    cgc_free(v19);\n
    v18 = a0;\n
    v17 = a1;\n
    *(&v15[0]) = *(v18);\n
    memset(&v14, 0, 21);\n
    if (*(v17) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if (v15[0] << 56)\n
    {\n
        v5 = 0;\n
        if (v15[1] << 48)\n
        {\n
            v5 = 0;\n
            if (v15[2] << 40)\n
            {\n
                v5 = 0;\n
                if (v15[3] << 32)\n
                {\n
                    v5 = 0;\n
                    if ((v15[4] << 24))\n
                    {\n
                        v5 = 0;\n
                        if ((v15[5] << 16))\n
                        {\n
                            v5 = 0;\n
                            if ((v15[6] << 8))\n
                                v5 = v15[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v16) = v5 & 1;\n
    cgc_uint2str(&v14, 21, *(&v16));\n
    v4 = &v14;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v44 = v17;\n
    *(v44) = *(v44) - 8;\n
    v45 = v18;\n
    *(v45) = *(v45) + 1;\n
    v30 = a0;\n
    v29 = a1;\n
    memset(&v27, 0, 4);\n
    if (*(v29) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = *(v30)->field_0;\n
    cgc_uint2str(&v27, 4, v28);\n
    v3 = &v27;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v46 = v29;\n
    *(v46) = *(v46) - 1;\n
    v47 = v30;\n
    *(v47) = &*(v47)->padding_1;\n
    v13 = a0;\n
    v12 = a1;\n
    *(&v10) = *(v13);\n
    memset(&v9, 0, 6);\n
    if (*(v12) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v10[0] << 8))\n
        v2 = v10[1];\n
    v11 = v2 & 1;\n
    cgc_uint2str(&v9, 6, v11);\n
    v1 = &v9;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v9)) < 0)\n
        cgc__terminate(1);\n
    v48 = v12;\n
    *(v48) = *(v48) - 2;\n
    v49 = v13;\n
    *(v49) = &*(v49)->field_2;\n
    v34 = a0;\n
    v33 = a1;\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = *(&*(v34)->field_0);\n
    v50 = v33;\n
    *(v50) = *(v50) - 2;\n
    v51 = v34;\n
    *(v51) = &*(v51)->field_2;\n
    if (v32 <= *(v33) && !(!v32))\n
        goto LABEL_496afa;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_496afa:\n
    v31 = cgc_calloc(v32);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v31, *(v34), v32);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v52 = v33;\n
    *(v52) = *(v52) - v32;\n
    v53 = v34;\n
    *(v53) = &(&*(v53)->field_0)[v32];\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(v38)->field_0;\n
    v54 = v37;\n
    *(v54) = *(v54) - 1;\n
    v55 = v38;\n
    *(v55) = &*(v55)->padding_1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_496c89;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_496c89:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v56 = v38;\n
    *(v56) = &(&*(v56)->field_0)[v36];\n
    v57 = v37;\n
    *(v57) = *(v57) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v26 = a0;\n
    v25 = a1;\n
    memset(&v23, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = *(&*(v26)->field_0);\n
    cgc_uint2str(&v23, 6, v24);\n
    v0 = &v23;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v58 = v25;\n
    *(v58) = *(v58) - 2;\n
    v59 = v26;\n
    *(v59) = &*(v59)->field_2;\n
    v7 ^= cgc__cookie;\n
    if (v7)\n
        cgc___stack_cookie_fail();\n
    v60 = a1;\n
    if (*(a1) > 0 && v6 >= 0)\n
    {\n
        v60 = v6;\n
        if (v60 < 0)\n
            v60 = *(&(&v8)[8 * v6])(a0, a1);\n
    }\n
    return v60;\n
}\n
", "4812450:sub_496ea2": null, "4812464:cgc_process_llamafurnishable": "extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamafurnishable(unsigned long long a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = cgc__cookie;\n
    v0 = -1;\n
    if (cgc_sendline(1, \"===llamafurnishable===\", 22) < 0)\n
        cgc__terminate(1);\n
    v1 ^= cgc__cookie;\n
    if (v1)\n
        cgc___stack_cookie_fail();\n
    v4 = a1;\n
    if (*(a1) > 0 && v0 >= 0)\n
    {\n
        v4 = v0;\n
        if (v4 < 0)\n
            v4 = *(&(&v2)[8 * v0])(a0, a1);\n
    }\n
    return v4;\n
}\n
", "4812633:sub_496f59": null, "4812640:cgc_process_llamacombatable": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacombatable(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x328]\n
    struct_1 *v1;  // [bp-0x320]\n
    char v2;  // [bp-0x311]\n
    struct_1 *v3;  // [bp-0x310]\n
    struct_1 *v4;  // [bp-0x308]\n
    unsigned int v5;  // [bp-0x2fc]\n
    struct_1 *v6;  // [bp-0x2f8]\n
    char v7;  // [bp-0x2e9]\n
    struct_1 *v8;  // [bp-0x2e8]\n
    struct_1 *v9;  // [bp-0x2e0]\n
    struct_1 *v10;  // [bp-0x2d8]\n
    struct_1 *v11;  // [bp-0x2d0]\n
    char v12;  // [bp-0x2c1]\n
    struct_1 *v13;  // [bp-0x2c0]\n
    char v14;  // [bp-0x2b1]\n
    struct_1 *v15;  // [bp-0x2b0]\n
    char v16;  // [bp-0x2a1]\n
    struct_1 *v17;  // [bp-0x2a0]\n
    struct_1 *v18;  // [bp-0x298]\n
    unsigned int v19;  // [bp-0x290]\n
    unsigned int v20;  // [bp-0x28c]\n
    char v21;  // [bp-0x288]\n
    char v22;  // [bp-0x26e]\n
    char v23[2];  // [bp-0x268]\n
    unsigned short v24;  // [bp-0x25a]\n
    unsigned int *v25;  // [bp-0x258]\n
    struct struct_0 **v26;  // [bp-0x250]\n
    char v27;  // [bp-0x248]\n
    char v28[8];  // [bp-0x228]\n
    unsigned int v29;  // [bp-0x220]\n
    unsigned int *v30;  // [bp-0x218]\n
    struct struct_0 **v31;  // [bp-0x210]\n
    char v32;  // [bp-0x208]\n
    char *v33;  // [bp-0x1e8]\n
    unsigned int v34;  // [bp-0x1e0]\n
    unsigned int *v35;  // [bp-0x1d8]\n
    struct struct_0 **v36;  // [bp-0x1d0]\n
    char v37;  // [bp-0x1c8]\n
    unsigned short v38;  // [bp-0x1c2]\n
    unsigned int *v39;  // [bp-0x1c0]\n
    struct struct_0 **v40;  // [bp-0x1b8]\n
    char v41;  // [bp-0x1ad]\n
    char v42;  // [bp-0x1a9]\n
    unsigned int *v43;  // [bp-0x1a8]\n
    struct struct_0 **v44;  // [bp-0x1a0]\n
    char v45;  // [bp-0x198]\n
    unsigned int v46;  // [bp-0x180]\n
    unsigned int *v47;  // [bp-0x178]\n
    struct struct_0 **v48;  // [bp-0x170]\n
    char v49;  // [bp-0x168]\n
    unsigned int v50;  // [bp-0x15c]\n
    unsigned int *v51;  // [bp-0x158]\n
    struct struct_0 **v52;  // [bp-0x150]\n
    char v53;  // [bp-0x148]\n
    unsigned int v54;  // [bp-0x13c]\n
    unsigned int *v55;  // [bp-0x138]\n
    struct struct_0 **v56;  // [bp-0x130]\n
    char v57;  // [bp-0x128]\n
    unsigned int v58;  // [bp-0x11c]\n
    unsigned int *v59;  // [bp-0x118]\n
    struct struct_0 **v60;  // [bp-0x110]\n
    char v61;  // [bp-0x108]\n
    unsigned int v62;  // [bp-0xfc]\n
    unsigned int *v63;  // [bp-0xf8]\n
    struct struct_0 **v64;  // [bp-0xf0]\n
    char v65;  // [bp-0xe8]\n
    unsigned int v66;  // [bp-0xdc]\n
    unsigned int *v67;  // [bp-0xd8]\n
    struct struct_0 **v68;  // [bp-0xd0]\n
    unsigned long v69;  // [bp-0xc8]\n
    unsigned short v70;  // [bp-0xba]\n
    unsigned int *v71;  // [bp-0xb8]\n
    struct struct_0 **v72;  // [bp-0xb0]\n
    char v73;  // [bp-0xa4]\n
    char v74[4];  // [bp-0x98]\n
    unsigned int v75;  // [bp-0x8c]\n
    unsigned int *v76;  // [bp-0x88]\n
    struct struct_0 **v77;  // [bp-0x80]\n
    char v78;  // [bp-0x74]\n
    char v79[4];  // [bp-0x68]\n
    unsigned int v80;  // [bp-0x5c]\n
    unsigned int *v81;  // [bp-0x58]\n
    struct struct_0 **v82;  // [bp-0x50]\n
    char *v83;  // [bp-0x48]\n
    unsigned int v84;  // [bp-0x3c]\n
    unsigned int *v85;  // [bp-0x38]\n
    struct struct_0 **v86;  // [bp-0x30]\n
    unsigned long v87;  // [bp-0x28]\n
    char v88;  // [bp-0x19]\n
    unsigned int *v89;  // [bp-0x18]\n
    struct struct_0 **v90;  // [bp-0x10]\n
    unsigned int *v92;  // rax\n
    struct struct_0 **v93;  // rax\n
    unsigned int *v94;  // rax\n
    struct struct_0 **v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_0 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    unsigned int *v104;  // rax\n
    struct struct_0 **v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_0 **v107;  // rax\n
    unsigned int *v108;  // rax\n
    struct struct_0 **v109;  // rax\n
    unsigned int *v110;  // rax\n
    struct struct_0 **v111;  // rax\n
    unsigned int *v112;  // rax\n
    struct struct_0 **v113;  // rax\n
    struct struct_0 **v115;  // rax\n
    unsigned int *v117;  // rax\n
    unsigned int *v118;  // rax\n
    struct struct_0 **v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    unsigned int *v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    unsigned int *v124;  // rax\n
    struct struct_0 **v125;  // rax\n
    unsigned int *v126;  // rax\n
    struct struct_0 **v127;  // rax\n
    unsigned int *v128;  // rax\n
    struct struct_0 **v129;  // rax\n
    unsigned int *v130;  // rax, Other Possible Types: unsigned long\n
\n
    v20 = cgc__cookie;\n
    v19 = -1;\n
    if (cgc_sendline(1, \"===llamacombatable===\", 21) < 0)\n
        cgc__terminate(1);\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 12);\n
    if (*(v63) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(&*(v64));\n
    cgc_uint2str(&v61, 12, v62);\n
    v18 = &v61;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v92 = v63;\n
    *(v92) = *(v92) - 4;\n
    v93 = v64;\n
    *(v93) = *(v93) + 4;\n
    v40 = a0;\n
    v39 = a1;\n
    memset(&v37, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = *(&*(v40));\n
    cgc_uint2str(&v37, 6, v38);\n
    v17 = &v37;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v94 = v39;\n
    *(v94) = *(v94) - 2;\n
    v95 = v40;\n
    *(v95) = *(v95) + 2;\n
    v82 = a0;\n
    v81 = a1;\n
    *(&v79) = *(v82);\n
    memset(&v78, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v79[0] << 24))\n
    {\n
        v16 = 0;\n
        if ((v79[1] << 16))\n
        {\n
            v16 = 0;\n
            if ((v79[2] << 8))\n
                v16 = v79[3];\n
        }\n
    }\n
    v80 = v16 & 1;\n
    cgc_uint2str(&v78, 12, v80);\n
    v15 = &v78;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v96 = v81;\n
    *(v96) = *(v96) - 4;\n
    v97 = v82;\n
    *(v97) = *(v97) + 4;\n
    v36 = a0;\n
    v35 = a1;\n
    v33 = &*(v36)->field_0;\n
    memset(&v32, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (*(v33) << 56)\n
    {\n
        v14 = 0;\n
        if (v33[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v33[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v33[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v33[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v33[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v33[6] << 8))\n
                                v14 = v33[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v34) = v14 & 1;\n
    cgc_uint2str(&v32, 21, *(&v34));\n
    v13 = &v32;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v98 = v35;\n
    *(v98) = *(v98) - 8;\n
    v99 = v36;\n
    *(v99) = *(v99) + 8;\n
    v77 = a0;\n
    v76 = a1;\n
    *(&v74) = *(v77);\n
    memset(&v73, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v12 = 0;\n
    if ((v74[0] << 24))\n
    {\n
        v12 = 0;\n
        if ((v74[1] << 16))\n
        {\n
            v12 = 0;\n
            if ((v74[2] << 8))\n
                v12 = v74[3];\n
        }\n
    }\n
    v75 = v12 & 1;\n
    cgc_uint2str(&v73, 12, v75);\n
    v11 = &v73;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v100 = v76;\n
    *(v100) = *(v100) - 4;\n
    v101 = v77;\n
    *(v101) = *(v101) + 4;\n
    v48 = a0;\n
    v47 = a1;\n
    memset(&v45, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v46) = *(&*(v48));\n
    cgc_uint2str(&v45, 21, *(&v46));\n
    v10 = &v45;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v102 = v47;\n
    *(v102) = *(v102) - 8;\n
    v103 = v48;\n
    *(v103) = *(v103) + 8;\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(&*(v72));\n
    v104 = v71;\n
    *(v104) = *(v104) - 2;\n
    v105 = v72;\n
    *(v105) = *(v105) + 2;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_497894;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_497894:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v106 = v71;\n
    *(v106) = *(v106) - v70;\n
    v107 = v72;\n
    *(v107) = &(*(v107))[v70];\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v44 = a0;\n
    v43 = a1;\n
    memset(&v41, 0, 4);\n
    if (*(v43) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = *(v44)->field_0;\n
    cgc_uint2str(&v41, 4, v42);\n
    v9 = &v41;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v108 = v43;\n
    *(v108) = *(v108) - 1;\n
    v109 = v44;\n
    *(v109) = *(v109) + 1;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 12, v58);\n
    v8 = &v57;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v110 = v59;\n
    *(v110) = *(v110) - 4;\n
    v111 = v60;\n
    *(v111) = *(v111) + 4;\n
    v26 = a0;\n
    v25 = a1;\n
    *(&v23) = *(v26);\n
    memset(&v22, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((v23[0] << 8))\n
        v7 = v23[1];\n
    v24 = v7 & 1;\n
    cgc_uint2str(&v22, 6, v24);\n
    v6 = &v22;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v112 = v25;\n
    *(v112) = *(v112) - 2;\n
    v113 = v26;\n
    *(v113) = *(v113) + 2;\n
    v86 = a0;\n
    v85 = a1;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v85) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v85);\n
    v84 = v5;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v83, \"Str: \");\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v115 = v86;\n
    *(v115) = &(*(v115))[4 + cgc_strlen(v83)];\n
    v117 = v85;\n
    *(v117) = *(v117) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v90 = a0;\n
    v89 = a1;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    v118 = v89;\n
    *(v118) = *(v118) - 1;\n
    v119 = v90;\n
    *(v119) = *(v119) + 1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_497f4c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_497f4c:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v120 = v90;\n
    *(v120) = &(*(v120))[v88];\n
    v121 = v89;\n
    *(v121) = *(v121) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 12);\n
    if (*(v55) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 12, v54);\n
    v4 = &v53;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v122 = v55;\n
    *(v122) = *(v122) - 4;\n
    v123 = v56;\n
    *(v123) = *(v123) + 4;\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 12);\n
    if (*(v67) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    cgc_uint2str(&v65, 12, v66);\n
    v3 = &v65;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v124 = v67;\n
    *(v124) = *(v124) - 4;\n
    v125 = v68;\n
    *(v125) = *(v125) + 4;\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if (v28[0] << 56)\n
    {\n
        v2 = 0;\n
        if (v28[1] << 48)\n
        {\n
            v2 = 0;\n
            if (v28[2] << 40)\n
            {\n
                v2 = 0;\n
                if (v28[3] << 32)\n
                {\n
                    v2 = 0;\n
                    if ((v28[4] << 24))\n
                    {\n
                        v2 = 0;\n
                        if ((v28[5] << 16))\n
                        {\n
                            v2 = 0;\n
                            if ((v28[6] << 8))\n
                                v2 = v28[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v29) = v2 & 1;\n
    cgc_uint2str(&v27, 21, *(&v29));\n
    v1 = &v27;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v126 = v30;\n
    *(v126) = *(v126) - 8;\n
    v127 = v31;\n
    *(v127) = *(v127) + 8;\n
    v52 = a0;\n
    v51 = a1;\n
    memset(&v49, 0, 12);\n
    if (*(v51) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(&*(v52));\n
    cgc_uint2str(&v49, 12, v50);\n
    v0 = &v49;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v128 = v51;\n
    *(v128) = *(v128) - 4;\n
    v129 = v52;\n
    *(v129) = *(v129) + 4;\n
    v20 ^= cgc__cookie;\n
    if (v20)\n
        cgc___stack_cookie_fail();\n
    v130 = a1;\n
    if (*(a1) > 0 && v19 >= 0)\n
    {\n
        v130 = v19;\n
        if (v130 < 0)\n
            v130 = *(&(&v21)[8 * v19])(a0, a1);\n
    }\n
    return v130;\n
}\n
", "4818343:sub_4985a7": null, "4818352:cgc_process_llamakirombo": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6280;\n
extern unsigned long long g_4c6288;\n
\n
long long cgc_process_llamakirombo(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x6f0]\n
    char v1;  // [bp-0x6e1]\n
    struct_1 *v2;  // [bp-0x6e0]\n
    struct_1 *v3;  // [bp-0x6d8]\n
    char v4;  // [bp-0x6cd]\n
    unsigned int v5;  // [bp-0x6cc]\n
    struct_1 *v6;  // [bp-0x6c8]\n
    struct_1 *v7;  // [bp-0x6c0]\n
    struct_1 *v8;  // [bp-0x6b8]\n
    struct_1 *v9;  // [bp-0x6b0]\n
    struct_1 *v10;  // [bp-0x6a8]\n
    unsigned int v11;  // [bp-0x69c]\n
    struct_1 *v12;  // [bp-0x698]\n
    struct_1 *v13;  // [bp-0x690]\n
    char v14;  // [bp-0x681]\n
    unsigned int v15;  // [bp-0x680]\n
    unsigned int v16;  // [bp-0x67c]\n
    struct_1 *v17;  // [bp-0x678]\n
    struct_1 *v18;  // [bp-0x670]\n
    unsigned int v19;  // [bp-0x664]\n
    struct_1 *v20;  // [bp-0x660]\n
    struct_1 *v21;  // [bp-0x658]\n
    char v22;  // [bp-0x649]\n
    struct_1 *v23;  // [bp-0x648]\n
    struct_1 *v24;  // [bp-0x640]\n
    char v25;  // [bp-0x635]\n
    unsigned int v26;  // [bp-0x634]\n
    struct_1 *v27;  // [bp-0x630]\n
    struct_1 *v28;  // [bp-0x628]\n
    struct_1 *v29;  // [bp-0x620]\n
    struct_1 *v30;  // [bp-0x618]\n
    struct_1 *v31;  // [bp-0x610]\n
    struct_1 *v32;  // [bp-0x608]\n
    char v33;  // [bp-0x5f9]\n
    struct_1 *v34;  // [bp-0x5f8]\n
    unsigned int v35;  // [bp-0x5f0]\n
    unsigned int v36;  // [bp-0x5ec]\n
    unsigned long v37;  // [bp-0x5e8]\n
    unsigned long v38;  // [bp-0x5e0]\n
    char v39;  // [bp-0x5be]\n
    char v40[2];  // [bp-0x5b8]\n
    unsigned short v41;  // [bp-0x5aa]\n
    unsigned int *v42;  // [bp-0x5a8]\n
    struct struct_0 **v43;  // [bp-0x5a0]\n
    char v44;  // [bp-0x598]\n
    char v45[8];  // [bp-0x578]\n
    unsigned int v46;  // [bp-0x570]\n
    unsigned int *v47;  // [bp-0x568]\n
    struct struct_0 **v48;  // [bp-0x560]\n
    char v49;  // [bp-0x558]\n
    char *v50;  // [bp-0x538]\n
    unsigned int v51;  // [bp-0x530]\n
    unsigned int *v52;  // [bp-0x528]\n
    struct struct_0 **v53;  // [bp-0x520]\n
    char v54;  // [bp-0x518]\n
    char v55[8];  // [bp-0x500]\n
    unsigned int v56;  // [bp-0x4f8]\n
    unsigned int *v57;  // [bp-0x4f0]\n
    struct struct_0 **v58;  // [bp-0x4e8]\n
    unsigned long v59;  // [bp-0x4e0]\n
    char v60;  // [bp-0x4d1]\n
    unsigned int *v61;  // [bp-0x4d0]\n
    struct struct_0 **v62;  // [bp-0x4c8]\n
    unsigned long v63;  // [bp-0x4c0]\n
    char v64;  // [bp-0x4b1]\n
    unsigned int *v65;  // [bp-0x4b0]\n
    struct struct_0 **v66;  // [bp-0x4a8]\n
    unsigned long v67;  // [bp-0x4a0]\n
    char v68;  // [bp-0x491]\n
    unsigned int *v69;  // [bp-0x490]\n
    struct struct_0 **v70;  // [bp-0x488]\n
    unsigned long v71;  // [bp-0x480]\n
    char v72;  // [bp-0x471]\n
    unsigned int *v73;  // [bp-0x470]\n
    struct struct_0 **v74;  // [bp-0x468]\n
    char *v75;  // [bp-0x460]\n
    unsigned int *v76;  // [bp-0x458]\n
    struct struct_0 **v77;  // [bp-0x450]\n
    char *v78;  // [bp-0x448]\n
    unsigned int v79;  // [bp-0x43c]\n
    unsigned int *v80;  // [bp-0x438]\n
    struct struct_0 **v81;  // [bp-0x430]\n
    char *v82;  // [bp-0x428]\n
    unsigned int v83;  // [bp-0x41c]\n
    unsigned int *v84;  // [bp-0x418]\n
    struct struct_0 **v85;  // [bp-0x410]\n
    char *v86;  // [bp-0x408]\n
    unsigned int v87;  // [bp-0x3fc]\n
    unsigned int *v88;  // [bp-0x3f8]\n
    struct struct_0 **v89;  // [bp-0x3f0]\n
    char *v90;  // [bp-0x3e8]\n
    unsigned int v91;  // [bp-0x3dc]\n
    unsigned int *v92;  // [bp-0x3d8]\n
    struct struct_0 **v93;  // [bp-0x3d0]\n
    char *v94;  // [bp-0x3c8]\n
    unsigned int v95;  // [bp-0x3bc]\n
    unsigned int *v96;  // [bp-0x3b8]\n
    struct struct_0 **v97;  // [bp-0x3b0]\n
    char *v98;  // [bp-0x3a8]\n
    unsigned int v99;  // [bp-0x39c]\n
    unsigned int *v100;  // [bp-0x398]\n
    struct struct_0 **v101;  // [bp-0x390]\n
    char v102;  // [bp-0x388]\n
    unsigned short v103;  // [bp-0x382]\n
    unsigned int *v104;  // [bp-0x380]\n
    struct struct_0 **v105;  // [bp-0x378]\n
    char v106;  // [bp-0x370]\n
    unsigned short v107;  // [bp-0x36a]\n
    unsigned int *v108;  // [bp-0x368]\n
    struct struct_0 **v109;  // [bp-0x360]\n
    char v110;  // [bp-0x355]\n
    char v111;  // [bp-0x351]\n
    unsigned int *v112;  // [bp-0x350]\n
    struct struct_0 **v113;  // [bp-0x348]\n
    char v114;  // [bp-0x33d]\n
    char v115;  // [bp-0x339]\n
    unsigned int *v116;  // [bp-0x338]\n
    struct struct_0 **v117;  // [bp-0x330]\n
    char v118;  // [bp-0x325]\n
    char v119;  // [bp-0x321]\n
    unsigned int *v120;  // [bp-0x320]\n
    struct struct_0 **v121;  // [bp-0x318]\n
    unsigned short *v122;  // [bp-0x310]\n
    unsigned int *v123;  // [bp-0x308]\n
    struct struct_0 **v124;  // [bp-0x300]\n
    unsigned short *v125;  // [bp-0x2f8]\n
    unsigned int *v126;  // [bp-0x2f0]\n
    struct struct_0 **v127;  // [bp-0x2e8]\n
    char *v128;  // [bp-0x2e0]\n
    unsigned int *v129;  // [bp-0x2d8]\n
    struct struct_0 **v130;  // [bp-0x2d0]\n
    char v131;  // [bp-0x2c8]\n
    unsigned int v132;  // [bp-0x2b0]\n
    unsigned int *v133;  // [bp-0x2a8]\n
    struct struct_0 **v134;  // [bp-0x2a0]\n
    char v135;  // [bp-0x298]\n
    unsigned int v136;  // [bp-0x280]\n
    unsigned int *v137;  // [bp-0x278]\n
    struct struct_0 **v138;  // [bp-0x270]\n
    char v139;  // [bp-0x268]\n
    unsigned int v140;  // [bp-0x250]\n
    unsigned int *v141;  // [bp-0x248]\n
    struct struct_0 **v142;  // [bp-0x240]\n
    char v143;  // [bp-0x238]\n
    unsigned int v144;  // [bp-0x220]\n
    unsigned int *v145;  // [bp-0x218]\n
    struct struct_0 **v146;  // [bp-0x210]\n
    char v147;  // [bp-0x208]\n
    unsigned int v148;  // [bp-0x1fc]\n
    unsigned int *v149;  // [bp-0x1f8]\n
    struct struct_0 **v150;  // [bp-0x1f0]\n
    char v151;  // [bp-0x1e8]\n
    unsigned int v152;  // [bp-0x1dc]\n
    unsigned int *v153;  // [bp-0x1d8]\n
    struct struct_0 **v154;  // [bp-0x1d0]\n
    char v155;  // [bp-0x1c8]\n
    unsigned int v156;  // [bp-0x1bc]\n
    unsigned int *v157;  // [bp-0x1b8]\n
    struct struct_0 **v158;  // [bp-0x1b0]\n
    char v159;  // [bp-0x1a8]\n
    unsigned int v160;  // [bp-0x19c]\n
    unsigned int *v161;  // [bp-0x198]\n
    struct struct_0 **v162;  // [bp-0x190]\n
    char v163;  // [bp-0x188]\n
    unsigned int v164;  // [bp-0x17c]\n
    unsigned int *v165;  // [bp-0x178]\n
    struct struct_0 **v166;  // [bp-0x170]\n
    char v167;  // [bp-0x168]\n
    unsigned int v168;  // [bp-0x15c]\n
    unsigned int *v169;  // [bp-0x158]\n
    struct struct_0 **v170;  // [bp-0x150]\n
    char v171;  // [bp-0x148]\n
    unsigned int v172;  // [bp-0x13c]\n
    unsigned int *v173;  // [bp-0x138]\n
    struct struct_0 **v174;  // [bp-0x130]\n
    char v175;  // [bp-0x128]\n
    unsigned int v176;  // [bp-0x11c]\n
    unsigned int *v177;  // [bp-0x118]\n
    struct struct_0 **v178;  // [bp-0x110]\n
    unsigned long v179;  // [bp-0x108]\n
    unsigned short v180;  // [bp-0xfa]\n
    unsigned int *v181;  // [bp-0xf8]\n
    struct struct_0 **v182;  // [bp-0xf0]\n
    unsigned long v183;  // [bp-0xe8]\n
    unsigned short v184;  // [bp-0xda]\n
    unsigned int *v185;  // [bp-0xd8]\n
    struct struct_0 **v186;  // [bp-0xd0]\n
    unsigned long v187;  // [bp-0xc8]\n
    unsigned short v188;  // [bp-0xba]\n
    unsigned int *v189;  // [bp-0xb8]\n
    struct struct_0 **v190;  // [bp-0xb0]\n
    unsigned long v191;  // [bp-0xa8]\n
    unsigned short v192;  // [bp-0x9a]\n
    unsigned int *v193;  // [bp-0x98]\n
    struct struct_0 **v194;  // [bp-0x90]\n
    char v195;  // [bp-0x84]\n
    char *v196;  // [bp-0x78]\n
    unsigned int v197;  // [bp-0x6c]\n
    unsigned int *v198;  // [bp-0x68]\n
    struct struct_0 **v199;  // [bp-0x60]\n
    char v200;  // [bp-0x54]\n
    char v201[4];  // [bp-0x48]\n
    unsigned int v202;  // [bp-0x3c]\n
    unsigned int *v203;  // [bp-0x38]\n
    struct struct_0 **v204;  // [bp-0x30]\n
    unsigned long v205;  // [bp-0x28]\n
    char v206;  // [bp-0x19]\n
    unsigned int *v207;  // [bp-0x18]\n
    struct struct_0 **v208;  // [bp-0x10]\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    struct struct_0 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v283;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v287;  // rax\n
    unsigned int *v288;  // rax\n
    struct struct_0 **v289;  // rax\n
    unsigned int *v290;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v292;  // rax\n
    struct struct_0 **v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v302;  // rax\n
    struct struct_0 **v303;  // rax\n
    unsigned int *v304;  // rax\n
    struct struct_0 **v305;  // rax\n
    unsigned int *v306;  // rax\n
    struct struct_0 **v307;  // rax\n
    unsigned int *v308;  // rax\n
    struct struct_0 **v309;  // rax\n
    struct struct_0 **v311;  // rax\n
    unsigned int *v313;  // rax\n
    unsigned int *v314;  // rax\n
    struct struct_0 **v315;  // rax\n
    unsigned int *v316;  // rax\n
    struct struct_0 **v317;  // rax\n
    unsigned int *v318;  // rax\n
    struct struct_0 **v319;  // rax\n
    struct struct_0 **v320;  // rax\n
    unsigned int *v321;  // rax\n
    unsigned int *v322;  // rax\n
    struct struct_0 **v323;  // rax\n
    unsigned int *v324;  // rax, Other Possible Types: unsigned long\n
\n
    v37 = g_4c6280;\n
    v38 = g_4c6288;\n
    v36 = cgc__cookie;\n
    v35 = -1;\n
    if (cgc_sendline(1, \"===llamakirombo===\", 18) < 0)\n
        cgc__terminate(1);\n
    v121 = a0;\n
    v120 = a1;\n
    memset(&v118, 0, 4);\n
    if (*(v120) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(v121)->field_0;\n
    cgc_uint2str(&v118, 4, v119);\n
    v34 = &v118;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v210 = v120;\n
    *(v210) = *(v210) - 1;\n
    v211 = v121;\n
    *(v211) = *(v211) + 1;\n
    v58 = a0;\n
    v57 = a1;\n
    *(&v55[0]) = *(v58);\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v33 = 0;\n
    if (v55[0] << 56)\n
    {\n
        v33 = 0;\n
        if (v55[1] << 48)\n
        {\n
            v33 = 0;\n
            if (v55[2] << 40)\n
            {\n
                v33 = 0;\n
                if (v55[3] << 32)\n
                {\n
                    v33 = 0;\n
                    if ((v55[4] << 24))\n
                    {\n
                        v33 = 0;\n
                        if ((v55[5] << 16))\n
                        {\n
                            v33 = 0;\n
                            if ((v55[6] << 8))\n
                                v33 = v55[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v56) = v33 & 1;\n
    cgc_uint2str(&v54, 21, *(&v56));\n
    v32 = &v54;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v212 = v57;\n
    *(v212) = *(v212) - 8;\n
    v213 = v58;\n
    *(v213) = *(v213) + 8;\n
    v170 = a0;\n
    v169 = a1;\n
    memset(&v167, 0, 12);\n
    if (*(v169) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v168 = *(&*(v170));\n
    cgc_uint2str(&v167, 12, v168);\n
    v31 = &v167;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v167)) < 0)\n
        cgc__terminate(1);\n
    v214 = v169;\n
    *(v214) = *(v214) - 4;\n
    v215 = v170;\n
    *(v215) = *(v215) + 4;\n
    v146 = a0;\n
    v145 = a1;\n
    memset(&v143, 0, 21);\n
    if (*(v145) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v144) = *(&*(v146));\n
    cgc_uint2str(&v143, 21, *(&v144));\n
    v30 = &v143;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v143)) < 0)\n
        cgc__terminate(1);\n
    v216 = v145;\n
    *(v216) = *(v216) - 8;\n
    v217 = v146;\n
    *(v217) = *(v217) + 8;\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 6);\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(&*(v109));\n
    cgc_uint2str(&v106, 6, v107);\n
    v29 = &v106;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v218 = v108;\n
    *(v218) = *(v218) - 2;\n
    v219 = v109;\n
    *(v219) = *(v219) + 2;\n
    v130 = a0;\n
    v129 = a1;\n
    v128 = &*(v130)->field_0;\n
    if (*(v129) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v220 = v129;\n
    *(v220) = *(v220) - 2;\n
    v221 = v130;\n
    *(v221) = *(v221) + 2;\n
    v35 = *(&v128);\n
    v208 = a0;\n
    v207 = a1;\n
    if (*(v207) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v206 = *(v208)->field_0;\n
    v222 = v207;\n
    *(v222) = *(v222) - 1;\n
    v223 = v208;\n
    *(v223) = *(v223) + 1;\n
    if (v206 <= *(v207) && !(!v206))\n
        goto LABEL_498dc4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_498dc4:\n
    v205 = cgc_calloc(v206);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v205, *(v208), v206);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v224 = v208;\n
    *(v224) = &(*(v224))[v206];\n
    v225 = v207;\n
    *(v225) = *(v225) - v206;\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    v74 = a0;\n
    v73 = a1;\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(v74)->field_0;\n
    v226 = v73;\n
    *(v226) = *(v226) - 1;\n
    v227 = v74;\n
    *(v227) = *(v227) + 1;\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_498f71;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_498f71:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v228 = v74;\n
    *(v228) = &(*(v228))[v72];\n
    v229 = v73;\n
    *(v229) = *(v229) - v72;\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v166 = a0;\n
    v165 = a1;\n
    memset(&v163, 0, 12);\n
    if (*(v165) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = *(&*(v166));\n
    cgc_uint2str(&v163, 12, v164);\n
    v28 = &v163;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v163)) < 0)\n
        cgc__terminate(1);\n
    v230 = v165;\n
    *(v230) = *(v230) - 4;\n
    v231 = v166;\n
    *(v231) = *(v231) + 4;\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 4);\n
    if (*(v116) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(v117)->field_0;\n
    cgc_uint2str(&v114, 4, v115);\n
    v27 = &v114;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v232 = v116;\n
    *(v232) = *(v232) - 1;\n
    v233 = v117;\n
    *(v233) = *(v233) + 1;\n
    v101 = a0;\n
    v100 = a1;\n
    if (*(v100) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v100) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v100);\n
    v99 = v26;\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = cgc_calloc(134);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v98, \"Str: \");\n
    cgc_strncpy(v98 + 5, *(v101), v99);\n
    v235 = v101;\n
    *(v235) = &(*(v235))[4 + cgc_strlen(v98)];\n
    v237 = v100;\n
    *(v237) = *(v237) - (cgc_strlen(v98) + -4);\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v53 = a0;\n
    v52 = a1;\n
    v50 = &*(v53)->field_0;\n
    memset(&v49, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v25 = 0;\n
    if (*(v50) << 56)\n
    {\n
        v25 = 0;\n
        if (v50[1] << 48)\n
        {\n
            v25 = 0;\n
            if (v50[2] << 40)\n
            {\n
                v25 = 0;\n
                if (v50[3] << 32)\n
                {\n
                    v25 = 0;\n
                    if ((v50[4] << 24))\n
                    {\n
                        v25 = 0;\n
                        if ((v50[5] << 16))\n
                        {\n
                            v25 = 0;\n
                            if ((v50[6] << 8))\n
                                v25 = v50[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v51) = v25 & 1;\n
    cgc_uint2str(&v49, 21, *(&v51));\n
    v24 = &v49;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v238 = v52;\n
    *(v238) = *(v238) - 8;\n
    v239 = v53;\n
    *(v239) = *(v239) + 8;\n
    v142 = a0;\n
    v141 = a1;\n
    memset(&v139, 0, 21);\n
    if (*(v141) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v140) = *(&*(v142));\n
    cgc_uint2str(&v139, 21, *(&v140));\n
    v23 = &v139;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v139)) < 0)\n
        cgc__terminate(1);\n
    v240 = v141;\n
    *(v240) = *(v240) - 8;\n
    v241 = v142;\n
    *(v241) = *(v241) + 8;\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45[0]) = *(v48);\n
    memset(&v44, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if (v45[0] << 56)\n
    {\n
        v22 = 0;\n
        if (v45[1] << 48)\n
        {\n
            v22 = 0;\n
            if (v45[2] << 40)\n
            {\n
                v22 = 0;\n
                if (v45[3] << 32)\n
                {\n
                    v22 = 0;\n
                    if ((v45[4] << 24))\n
                    {\n
                        v22 = 0;\n
                        if ((v45[5] << 16))\n
                        {\n
                            v22 = 0;\n
                            if ((v45[6] << 8))\n
                                v22 = v45[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v46) = v22 & 1;\n
    cgc_uint2str(&v44, 21, *(&v46));\n
    v21 = &v44;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v242 = v47;\n
    *(v242) = *(v242) - 8;\n
    v243 = v48;\n
    *(v243) = *(v243) + 8;\n
    v190 = a0;\n
    v189 = a1;\n
    if (*(v189) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v188 = *(&*(v190));\n
    v244 = v189;\n
    *(v244) = *(v244) - 2;\n
    v245 = v190;\n
    *(v245) = *(v245) + 2;\n
    if (v188 <= *(v189) && !(!v188))\n
        goto LABEL_499a6d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_499a6d:\n
    v187 = cgc_calloc(v188);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v187, *(v190), v188);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v246 = v189;\n
    *(v246) = *(v246) - v188;\n
    v247 = v190;\n
    *(v247) = &(*(v247))[v188];\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    v127 = a0;\n
    v126 = a1;\n
    v125 = &*(v127);\n
    if (*(v126) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v248 = v126;\n
    *(v248) = *(v248) - 2;\n
    v249 = v127;\n
    *(v249) = *(v249) + 2;\n
    v35 = *(v125);\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v68 = *(v70)->field_0;\n
    v250 = v69;\n
    *(v250) = *(v250) - 1;\n
    v251 = v70;\n
    *(v251) = *(v251) + 1;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_499ce0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_499ce0:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v252 = v70;\n
    *(v252) = &(*(v252))[v68];\n
    v253 = v69;\n
    *(v253) = *(v253) - v68;\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v162 = a0;\n
    v161 = a1;\n
    memset(&v159, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v160 = *(&*(v162));\n
    cgc_uint2str(&v159, 12, v160);\n
    v20 = &v159;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v159)) < 0)\n
        cgc__terminate(1);\n
    v254 = v161;\n
    *(v254) = *(v254) - 4;\n
    v255 = v162;\n
    *(v255) = *(v255) + 4;\n
    v97 = a0;\n
    v96 = a1;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v96) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v96);\n
    v95 = v19;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v94, \"Str: \");\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v257 = v97;\n
    *(v257) = &(*(v257))[4 + cgc_strlen(v94)];\n
    v259 = v96;\n
    *(v259) = *(v259) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 4);\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(v113)->field_0;\n
    cgc_uint2str(&v110, 4, v111);\n
    v18 = &v110;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v260 = v112;\n
    *(v260) = *(v260) - 1;\n
    v261 = v113;\n
    *(v261) = *(v261) + 1;\n
    v124 = a0;\n
    v123 = a1;\n
    v122 = &*(v124);\n
    if (*(v123) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v262 = v123;\n
    *(v262) = *(v262) - 2;\n
    v263 = v124;\n
    *(v263) = *(v263) + 2;\n
    v35 = *(v122);\n
    v158 = a0;\n
    v157 = a1;\n
    memset(&v155, 0, 12);\n
    if (*(v157) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = *(&*(v158));\n
    cgc_uint2str(&v155, 12, v156);\n
    v17 = &v155;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v155)) < 0)\n
        cgc__terminate(1);\n
    v264 = v157;\n
    *(v264) = *(v264) - 4;\n
    v265 = v158;\n
    *(v265) = *(v265) + 4;\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    v266 = v65;\n
    *(v266) = *(v266) - 1;\n
    v267 = v66;\n
    *(v267) = *(v267) + 1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_49a44a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49a44a:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v268 = v66;\n
    *(v268) = &(*(v268))[v64];\n
    v269 = v65;\n
    *(v269) = *(v269) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v194 = a0;\n
    v193 = a1;\n
    if (*(v193) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v192 = *(&*(v194));\n
    v270 = v193;\n
    *(v270) = *(v270) - 2;\n
    v271 = v194;\n
    *(v271) = *(v271) + 2;\n
    if (v192 <= *(v193) && !(!v192))\n
        goto LABEL_49a61a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49a61a:\n
    v191 = cgc_calloc(v192);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v191, *(v194), v192);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v272 = v193;\n
    *(v272) = *(v272) - v192;\n
    v273 = v194;\n
    *(v273) = &(*(v273))[v192];\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    v186 = a0;\n
    v185 = a1;\n
    if (*(v185) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v184 = *(&*(v186));\n
    v274 = v185;\n
    *(v274) = *(v274) - 2;\n
    v275 = v186;\n
    *(v275) = *(v275) + 2;\n
    if (v184 <= *(v185) && !(!v184))\n
        goto LABEL_49a7ea;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49a7ea:\n
    v183 = cgc_calloc(v184);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v183, *(v186), v184);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v276 = v185;\n
    *(v276) = *(v276) - v184;\n
    v277 = v186;\n
    *(v277) = &(*(v277))[v184];\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    v77 = a0;\n
    v76 = a1;\n
    v75 = &*(v77)->field_0;\n
    if (*(v76) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v278 = v76;\n
    *(v278) = *(v278) - 1;\n
    v279 = v77;\n
    *(v279) = *(v279) + 1;\n
    v35 = *(v75);\n
    v93 = a0;\n
    v92 = a1;\n
    if (*(v92) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v92) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v92);\n
    v91 = v16;\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = cgc_calloc(134);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v90, \"Str: \");\n
    cgc_strncpy(v90 + 5, *(v93), v91);\n
    v281 = v93;\n
    *(v281) = &(*(v281))[4 + cgc_strlen(v90)];\n
    v283 = v92;\n
    *(v283) = *(v283) - (cgc_strlen(v90) + -4);\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v89 = a0;\n
    v88 = a1;\n
    if (*(v88) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v88) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v88);\n
    v87 = v15;\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = cgc_calloc(134);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v86, \"Str: \");\n
    cgc_strncpy(v86 + 5, *(v89), v87);\n
    v285 = v89;\n
    *(v285) = &(*(v285))[4 + cgc_strlen(v86)];\n
    v287 = v88;\n
    *(v287) = *(v287) - (cgc_strlen(v86) + -4);\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((v40[0] << 8))\n
        v14 = v40[1];\n
    v41 = v14 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v13 = &v39;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v288 = v42;\n
    *(v288) = *(v288) - 2;\n
    v289 = v43;\n
    *(v289) = *(v289) + 2;\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 6);\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 6, v103);\n
    v12 = &v102;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v290 = v104;\n
    *(v290) = *(v290) - 2;\n
    v291 = v105;\n
    *(v291) = *(v291) + 2;\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v180 = *(&*(v182));\n
    v292 = v181;\n
    *(v292) = *(v292) - 2;\n
    v293 = v182;\n
    *(v293) = *(v293) + 2;\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_49b091;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49b091:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v294 = v181;\n
    *(v294) = *(v294) - v180;\n
    v295 = v182;\n
    *(v295) = &(*(v295))[v180];\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v84) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v84);\n
    v83 = v11;\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = cgc_calloc(134);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v82, \"Str: \");\n
    cgc_strncpy(v82 + 5, *(v85), v83);\n
    v297 = v85;\n
    *(v297) = &(*(v297))[4 + cgc_strlen(v82)];\n
    v299 = v84;\n
    *(v299) = *(v299) - (cgc_strlen(v82) + -4);\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v178 = a0;\n
    v177 = a1;\n
    memset(&v175, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v176 = *(&*(v178));\n
    cgc_uint2str(&v175, 12, v176);\n
    v10 = &v175;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v175)) < 0)\n
        cgc__terminate(1);\n
    v300 = v177;\n
    *(v300) = *(v300) - 4;\n
    v301 = v178;\n
    *(v301) = *(v301) + 4;\n
    v138 = a0;\n
    v137 = a1;\n
    memset(&v135, 0, 21);\n
    if (*(v137) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v136) = *(&*(v138));\n
    cgc_uint2str(&v135, 21, *(&v136));\n
    v9 = &v135;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v135)) < 0)\n
        cgc__terminate(1);\n
    v302 = v137;\n
    *(v302) = *(v302) - 8;\n
    v303 = v138;\n
    *(v303) = *(v303) + 8;\n
    v134 = a0;\n
    v133 = a1;\n
    memset(&v131, 0, 21);\n
    if (*(v133) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v132) = *(&*(v134));\n
    cgc_uint2str(&v131, 21, *(&v132));\n
    v8 = &v131;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v131)) < 0)\n
        cgc__terminate(1);\n
    v304 = v133;\n
    *(v304) = *(v304) - 8;\n
    v305 = v134;\n
    *(v305) = *(v305) + 8;\n
    v174 = a0;\n
    v173 = a1;\n
    memset(&v171, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v172 = *(&*(v174));\n
    cgc_uint2str(&v171, 12, v172);\n
    v7 = &v171;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v171)) < 0)\n
        cgc__terminate(1);\n
    v306 = v173;\n
    *(v306) = *(v306) - 4;\n
    v307 = v174;\n
    *(v307) = *(v307) + 4;\n
    v154 = a0;\n
    v153 = a1;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v152 = *(&*(v154));\n
    cgc_uint2str(&v151, 12, v152);\n
    v6 = &v151;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v151)) < 0)\n
        cgc__terminate(1);\n
    v308 = v153;\n
    *(v308) = *(v308) - 4;\n
    v309 = v154;\n
    *(v309) = *(v309) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v80) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v80);\n
    v79 = v5;\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = cgc_calloc(134);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v78, \"Str: \");\n
    cgc_strncpy(v78 + 5, *(v81), v79);\n
    v311 = v81;\n
    *(v311) = &(*(v311))[4 + cgc_strlen(v78)];\n
    v313 = v80;\n
    *(v313) = *(v313) - (cgc_strlen(v78) + -4);\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v204 = a0;\n
    v203 = a1;\n
    *(&v201) = *(v204);\n
    memset(&v200, 0, 12);\n
    if (*(v203) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v201[0] << 24))\n
    {\n
        v4 = 0;\n
        if ((v201[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v201[2] << 8))\n
                v4 = v201[3];\n
        }\n
    }\n
    v202 = v4 & 1;\n
    cgc_uint2str(&v200, 12, v202);\n
    v3 = &v200;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v200)) < 0)\n
        cgc__terminate(1);\n
    v314 = v203;\n
    *(v314) = *(v314) - 4;\n
    v315 = v204;\n
    *(v315) = *(v315) + 4;\n
    v150 = a0;\n
    v149 = a1;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v148 = *(&*(v150));\n
    cgc_uint2str(&v147, 12, v148);\n
    v2 = &v147;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v147)) < 0)\n
        cgc__terminate(1);\n
    v316 = v149;\n
    *(v316) = *(v316) - 4;\n
    v317 = v150;\n
    *(v317) = *(v317) + 4;\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(v62)->field_0;\n
    v318 = v61;\n
    *(v318) = *(v318) - 1;\n
    v319 = v62;\n
    *(v319) = *(v319) + 1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_49bdc0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49bdc0:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v320 = v62;\n
    *(v320) = &(*(v320))[v60];\n
    v321 = v61;\n
    *(v321) = *(v321) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v199 = a0;\n
    v198 = a1;\n
    v196 = &*(v199)->field_0;\n
    memset(&v195, 0, 12);\n
    if (*(v198) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((*(v196) << 24))\n
    {\n
        v1 = 0;\n
        if ((v196[1] << 16))\n
        {\n
            v1 = 0;\n
            if ((v196[2] << 8))\n
                v1 = v196[3];\n
        }\n
    }\n
    v197 = v1 & 1;\n
    cgc_uint2str(&v195, 12, v197);\n
    v0 = &v195;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v195)) < 0)\n
        cgc__terminate(1);\n
    v322 = v198;\n
    *(v322) = *(v322) - 4;\n
    v323 = v199;\n
    *(v323) = *(v323) + 4;\n
    v36 ^= cgc__cookie;\n
    if (v36)\n
        cgc___stack_cookie_fail();\n
    v324 = a1;\n
    if (*(a1) > 0 && v35 >= 0)\n
    {\n
        v324 = v35;\n
        if (v324 < 2)\n
            v324 = (&v37)[v35](a0, a1);\n
    }\n
    return v324;\n
}\n
", "4833387:sub_49c06b": null, "4833392:cgc_process_llamaworshipability": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaworshipability(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x630]\n
    char v1;  // [bp-0x625]\n
    unsigned int v2;  // [bp-0x624]\n
    struct_0 *v3;  // [bp-0x620]\n
    struct_0 *v4;  // [bp-0x618]\n
    struct_0 *v5;  // [bp-0x610]\n
    char v6;  // [bp-0x605]\n
    unsigned int v7;  // [bp-0x604]\n
    struct_0 *v8;  // [bp-0x600]\n
    struct_0 *v9;  // [bp-0x5f8]\n
    char v10;  // [bp-0x5e9]\n
    struct_0 *v11;  // [bp-0x5e8]\n
    struct_0 *v12;  // [bp-0x5e0]\n
    struct_0 *v13;  // [bp-0x5d8]\n
    char v14;  // [bp-0x5c9]\n
    struct_0 *v15;  // [bp-0x5c8]\n
    struct_0 *v16;  // [bp-0x5c0]\n
    struct_0 *v17;  // [bp-0x5b8]\n
    struct_0 *v18;  // [bp-0x5b0]\n
    char v19;  // [bp-0x5a5]\n
    unsigned int v20;  // [bp-0x5a4]\n
    struct_0 *v21;  // [bp-0x5a0]\n
    char v22;  // [bp-0x591]\n
    struct_0 *v23;  // [bp-0x590]\n
    struct_0 *v24;  // [bp-0x588]\n
    struct_0 *v25;  // [bp-0x580]\n
    struct_0 *v26;  // [bp-0x578]\n
    struct_0 *v27;  // [bp-0x570]\n
    char v28;  // [bp-0x561]\n
    struct_0 *v29;  // [bp-0x560]\n
    struct_0 *v30;  // [bp-0x558]\n
    struct_0 *v31;  // [bp-0x550]\n
    char v32;  // [bp-0x541]\n
    unsigned int v33;  // [bp-0x540]\n
    unsigned int v34;  // [bp-0x53c]\n
    char v35;  // [bp-0x538]\n
    char v36;  // [bp-0x51e]\n
    char v37[2];  // [bp-0x518]\n
    unsigned short v38;  // [bp-0x50a]\n
    unsigned int *v39;  // [bp-0x508]\n
    struct struct_1 **v40;  // [bp-0x500]\n
    char v41;  // [bp-0x4f6]\n
    char v42[2];  // [bp-0x4f0]\n
    unsigned short v43;  // [bp-0x4e2]\n
    unsigned int *v44;  // [bp-0x4e0]\n
    struct struct_1 **v45;  // [bp-0x4d8]\n
    char v46;  // [bp-0x4ce]\n
    char v47[2];  // [bp-0x4c8]\n
    unsigned short v48;  // [bp-0x4ba]\n
    unsigned int *v49;  // [bp-0x4b8]\n
    struct struct_1 **v50;  // [bp-0x4b0]\n
    char v51;  // [bp-0x4a8]\n
    char v52[8];  // [bp-0x488]\n
    unsigned int v53;  // [bp-0x480]\n
    unsigned int *v54;  // [bp-0x478]\n
    struct struct_1 **v55;  // [bp-0x470]\n
    char v56;  // [bp-0x468]\n
    char *v57;  // [bp-0x448]\n
    unsigned int v58;  // [bp-0x440]\n
    unsigned int *v59;  // [bp-0x438]\n
    struct struct_1 **v60;  // [bp-0x430]\n
    char v61;  // [bp-0x428]\n
    char v62[8];  // [bp-0x408]\n
    unsigned int v63;  // [bp-0x400]\n
    unsigned int *v64;  // [bp-0x3f8]\n
    struct struct_1 **v65;  // [bp-0x3f0]\n
    unsigned long v66;  // [bp-0x3e8]\n
    char v67;  // [bp-0x3d9]\n
    unsigned int *v68;  // [bp-0x3d8]\n
    struct struct_1 **v69;  // [bp-0x3d0]\n
    unsigned long v70;  // [bp-0x3c8]\n
    char v71;  // [bp-0x3b9]\n
    unsigned int *v72;  // [bp-0x3b8]\n
    struct struct_1 **v73;  // [bp-0x3b0]\n
    char *v74;  // [bp-0x3a8]\n
    unsigned int v75;  // [bp-0x39c]\n
    unsigned int *v76;  // [bp-0x398]\n
    struct struct_1 **v77;  // [bp-0x390]\n
    char *v78;  // [bp-0x388]\n
    unsigned int v79;  // [bp-0x37c]\n
    unsigned int *v80;  // [bp-0x378]\n
    struct struct_1 **v81;  // [bp-0x370]\n
    char *v82;  // [bp-0x368]\n
    unsigned int v83;  // [bp-0x35c]\n
    unsigned int *v84;  // [bp-0x358]\n
    struct struct_1 **v85;  // [bp-0x350]\n
    char v86;  // [bp-0x348]\n
    unsigned short v87;  // [bp-0x342]\n
    unsigned int *v88;  // [bp-0x340]\n
    struct struct_1 **v89;  // [bp-0x338]\n
    char v90;  // [bp-0x330]\n
    unsigned short v91;  // [bp-0x32a]\n
    unsigned int *v92;  // [bp-0x328]\n
    struct struct_1 **v93;  // [bp-0x320]\n
    char v94;  // [bp-0x318]\n
    unsigned short v95;  // [bp-0x312]\n
    unsigned int *v96;  // [bp-0x310]\n
    struct struct_1 **v97;  // [bp-0x308]\n
    char v98;  // [bp-0x300]\n
    unsigned short v99;  // [bp-0x2fa]\n
    unsigned int *v100;  // [bp-0x2f8]\n
    struct struct_1 **v101;  // [bp-0x2f0]\n
    char v102;  // [bp-0x2e5]\n
    char v103;  // [bp-0x2e1]\n
    unsigned int *v104;  // [bp-0x2e0]\n
    struct struct_1 **v105;  // [bp-0x2d8]\n
    char v106;  // [bp-0x2cd]\n
    char v107;  // [bp-0x2c9]\n
    unsigned int *v108;  // [bp-0x2c8]\n
    struct struct_1 **v109;  // [bp-0x2c0]\n
    char v110;  // [bp-0x2b8]\n
    unsigned int v111;  // [bp-0x2a0]\n
    unsigned int *v112;  // [bp-0x298]\n
    struct struct_1 **v113;  // [bp-0x290]\n
    char v114;  // [bp-0x288]\n
    unsigned int v115;  // [bp-0x270]\n
    unsigned int *v116;  // [bp-0x268]\n
    struct struct_1 **v117;  // [bp-0x260]\n
    char v118;  // [bp-0x258]\n
    unsigned int v119;  // [bp-0x24c]\n
    unsigned int *v120;  // [bp-0x248]\n
    struct struct_1 **v121;  // [bp-0x240]\n
    char v122;  // [bp-0x238]\n
    unsigned int v123;  // [bp-0x22c]\n
    unsigned int *v124;  // [bp-0x228]\n
    struct struct_1 **v125;  // [bp-0x220]\n
    char v126;  // [bp-0x218]\n
    unsigned int v127;  // [bp-0x20c]\n
    unsigned int *v128;  // [bp-0x208]\n
    struct struct_1 **v129;  // [bp-0x200]\n
    char v130;  // [bp-0x1f8]\n
    unsigned int v131;  // [bp-0x1ec]\n
    unsigned int *v132;  // [bp-0x1e8]\n
    struct struct_1 **v133;  // [bp-0x1e0]\n
    char v134;  // [bp-0x1d8]\n
    unsigned int v135;  // [bp-0x1cc]\n
    unsigned int *v136;  // [bp-0x1c8]\n
    struct struct_1 **v137;  // [bp-0x1c0]\n
    unsigned long v138;  // [bp-0x1b8]\n
    unsigned short v139;  // [bp-0x1aa]\n
    unsigned int *v140;  // [bp-0x1a8]\n
    struct struct_1 **v141;  // [bp-0x1a0]\n
    unsigned long v142;  // [bp-0x198]\n
    unsigned short v143;  // [bp-0x18a]\n
    unsigned int *v144;  // [bp-0x188]\n
    struct struct_1 **v145;  // [bp-0x180]\n
    unsigned long v146;  // [bp-0x178]\n
    unsigned short v147;  // [bp-0x16a]\n
    unsigned int *v148;  // [bp-0x168]\n
    struct struct_1 **v149;  // [bp-0x160]\n
    unsigned long v150;  // [bp-0x158]\n
    unsigned short v151;  // [bp-0x14a]\n
    unsigned int *v152;  // [bp-0x148]\n
    struct struct_1 **v153;  // [bp-0x140]\n
    unsigned long v154;  // [bp-0x138]\n
    unsigned short v155;  // [bp-0x12a]\n
    unsigned int *v156;  // [bp-0x128]\n
    struct struct_1 **v157;  // [bp-0x120]\n
    char v158;  // [bp-0x114]\n
    char v159[4];  // [bp-0x108]\n
    unsigned int v160;  // [bp-0xfc]\n
    unsigned int *v161;  // [bp-0xf8]\n
    struct struct_1 **v162;  // [bp-0xf0]\n
    char v163;  // [bp-0xe4]\n
    char *v164;  // [bp-0xd8]\n
    unsigned int v165;  // [bp-0xcc]\n
    unsigned int *v166;  // [bp-0xc8]\n
    struct struct_1 **v167;  // [bp-0xc0]\n
    char v168;  // [bp-0xb8]\n
    unsigned int v169;  // [bp-0xa0]\n
    unsigned int *v170;  // [bp-0x98]\n
    struct struct_1 **v171;  // [bp-0x90]\n
    unsigned long v172;  // [bp-0x88]\n
    char v173;  // [bp-0x79]\n
    unsigned int *v174;  // [bp-0x78]\n
    struct struct_1 **v175;  // [bp-0x70]\n
    unsigned long v176;  // [bp-0x68]\n
    char v177;  // [bp-0x59]\n
    unsigned int *v178;  // [bp-0x58]\n
    struct struct_1 **v179;  // [bp-0x50]\n
    unsigned long v180;  // [bp-0x48]\n
    char v181;  // [bp-0x39]\n
    unsigned int *v182;  // [bp-0x38]\n
    struct struct_1 **v183;  // [bp-0x30]\n
    unsigned long v184;  // [bp-0x28]\n
    char v185;  // [bp-0x19]\n
    unsigned int *v186;  // [bp-0x18]\n
    struct struct_1 **v187;  // [bp-0x10]\n
    unsigned int *v189;  // rax\n
    struct struct_1 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_1 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_1 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_1 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_1 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_1 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_1 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_1 **v204;  // rax\n
    struct struct_1 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_1 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_1 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_1 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_1 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_1 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_1 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_1 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_1 **v222;  // rax\n
    struct struct_1 **v224;  // rax\n
    unsigned int *v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_1 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_1 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_1 **v232;  // rax\n
    struct struct_1 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_1 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_1 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_1 **v240;  // rax\n
    struct struct_1 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_1 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_1 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_1 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_1 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_1 **v252;  // rax\n
    struct struct_1 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_1 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_1 **v258;  // rax\n
    struct struct_1 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_1 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_1 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_1 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_1 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_1 **v270;  // rax\n
    struct struct_1 **v271;  // rax\n
    unsigned int *v272;  // rax\n
    struct struct_1 **v274;  // rax\n
    unsigned int *v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_1 **v278;  // rax\n
    unsigned int *v279;  // rax\n
    struct struct_1 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_1 **v282;  // rax\n
    struct struct_1 **v284;  // rax\n
    unsigned int *v286;  // rax\n
    unsigned int *v287;  // rax\n
    struct struct_1 **v288;  // rax\n
    unsigned int *v289;  // rax, Other Possible Types: unsigned long\n
\n
    v34 = cgc__cookie;\n
    v33 = -1;\n
    if (cgc_sendline(1, \"===llamaworshipability===\", 25) < 0)\n
        cgc__terminate(1);\n
    v145 = a0;\n
    v144 = a1;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v143 = *(&*(v145));\n
    v189 = v144;\n
    *(v189) = *(v189) - 2;\n
    v190 = v145;\n
    *(v190) = *(v190) + 2;\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_49c1bc;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49c1bc:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v191 = v144;\n
    *(v191) = *(v191) - v143;\n
    v192 = v145;\n
    *(v192) = &(*(v192))[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v65 = a0;\n
    v64 = a1;\n
    *(&v62[0]) = *(v65);\n
    memset(&v61, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if (v62[0] << 56)\n
    {\n
        v32 = 0;\n
        if (v62[1] << 48)\n
        {\n
            v32 = 0;\n
            if (v62[2] << 40)\n
            {\n
                v32 = 0;\n
                if (v62[3] << 32)\n
                {\n
                    v32 = 0;\n
                    if ((v62[4] << 24))\n
                    {\n
                        v32 = 0;\n
                        if ((v62[5] << 16))\n
                        {\n
                            v32 = 0;\n
                            if ((v62[6] << 8))\n
                                v32 = v62[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v63) = v32 & 1;\n
    cgc_uint2str(&v61, 21, *(&v63));\n
    v31 = &v61;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v193 = v64;\n
    *(v193) = *(v193) - 8;\n
    v194 = v65;\n
    *(v194) = *(v194) + 8;\n
    v171 = a0;\n
    v170 = a1;\n
    memset(&v168, 0, 21);\n
    if (*(v170) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v169) = *(&*(v171));\n
    cgc_uint2str(&v168, 21, *(&v169));\n
    v30 = &v168;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v168)) < 0)\n
        cgc__terminate(1);\n
    v195 = v170;\n
    *(v195) = *(v195) - 8;\n
    v196 = v171;\n
    *(v196) = *(v196) + 8;\n
    v129 = a0;\n
    v128 = a1;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    cgc_uint2str(&v126, 12, v127);\n
    v29 = &v126;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v126)) < 0)\n
        cgc__terminate(1);\n
    v197 = v128;\n
    *(v197) = *(v197) - 4;\n
    v198 = v129;\n
    *(v198) = *(v198) + 4;\n
    v50 = a0;\n
    v49 = a1;\n
    *(&v47) = *(v50);\n
    memset(&v46, 0, 6);\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = 0;\n
    if ((v47[0] << 8))\n
        v28 = v47[1];\n
    v48 = v28 & 1;\n
    cgc_uint2str(&v46, 6, v48);\n
    v27 = &v46;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v199 = v49;\n
    *(v199) = *(v199) - 2;\n
    v200 = v50;\n
    *(v200) = *(v200) + 2;\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 6);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 6, v99);\n
    v26 = &v98;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v201 = v100;\n
    *(v201) = *(v201) - 2;\n
    v202 = v101;\n
    *(v202) = *(v202) + 2;\n
    v187 = a0;\n
    v186 = a1;\n
    if (*(v186) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v185 = *(v187)->field_0;\n
    v203 = v186;\n
    *(v203) = *(v203) - 1;\n
    v204 = v187;\n
    *(v204) = *(v204) + 1;\n
    if (v185 <= *(v186) && !(!v185))\n
        goto LABEL_49c9d5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49c9d5:\n
    v184 = cgc_calloc(v185);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v184, *(v187), v185);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v205 = v187;\n
    *(v205) = &(*(v205))[v185];\n
    v206 = v186;\n
    *(v206) = *(v206) - v185;\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    v157 = a0;\n
    v156 = a1;\n
    if (*(v156) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = *(&*(v157));\n
    v207 = v156;\n
    *(v207) = *(v207) - 2;\n
    v208 = v157;\n
    *(v208) = *(v208) + 2;\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_49cb84;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49cb84:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v209 = v156;\n
    *(v209) = *(v209) - v155;\n
    v210 = v157;\n
    *(v210) = &(*(v210))[v155];\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v153 = a0;\n
    v152 = a1;\n
    if (*(v152) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = *(&*(v153));\n
    v211 = v152;\n
    *(v211) = *(v211) - 2;\n
    v212 = v153;\n
    *(v212) = *(v212) + 2;\n
    if (v151 <= *(v152) && !(!v151))\n
        goto LABEL_49cd54;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49cd54:\n
    v150 = cgc_calloc(v151);\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v150, *(v153), v151);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v213 = v152;\n
    *(v213) = *(v213) - v151;\n
    v214 = v153;\n
    *(v214) = &(*(v214))[v151];\n
    cgc_checkheap();\n
    cgc_free(v150);\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 4);\n
    if (*(v108) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(v109)->field_0;\n
    cgc_uint2str(&v106, 4, v107);\n
    v25 = &v106;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v215 = v108;\n
    *(v215) = *(v215) - 1;\n
    v216 = v109;\n
    *(v216) = *(v216) + 1;\n
    v137 = a0;\n
    v136 = a1;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v135 = *(&*(v137));\n
    cgc_uint2str(&v134, 12, v135);\n
    v24 = &v134;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v134)) < 0)\n
        cgc__terminate(1);\n
    v217 = v136;\n
    *(v217) = *(v217) - 4;\n
    v218 = v137;\n
    *(v218) = *(v218) + 4;\n
    v133 = a0;\n
    v132 = a1;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(&*(v133));\n
    cgc_uint2str(&v130, 12, v131);\n
    v23 = &v130;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v130)) < 0)\n
        cgc__terminate(1);\n
    v219 = v132;\n
    *(v219) = *(v219) - 4;\n
    v220 = v133;\n
    *(v220) = *(v220) + 4;\n
    v45 = a0;\n
    v44 = a1;\n
    *(&v42) = *(v45);\n
    memset(&v41, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v42[0] << 8))\n
        v22 = v42[1];\n
    v43 = v22 & 1;\n
    cgc_uint2str(&v41, 6, v43);\n
    v21 = &v41;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v41)) < 0)\n
        cgc__terminate(1);\n
    v221 = v44;\n
    *(v221) = *(v221) - 2;\n
    v222 = v45;\n
    *(v222) = *(v222) + 2;\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v84) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v84);\n
    v83 = v20;\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = cgc_calloc(134);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v82, \"Str: \");\n
    cgc_strncpy(v82 + 5, *(v85), v83);\n
    v224 = v85;\n
    *(v224) = &(*(v224))[4 + cgc_strlen(v82)];\n
    v226 = v84;\n
    *(v226) = *(v226) - (cgc_strlen(v82) + -4);\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v167 = a0;\n
    v166 = a1;\n
    v164 = &*(v167)->field_0;\n
    memset(&v163, 0, 12);\n
    if (*(v166) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = 0;\n
    if ((*(v164) << 24))\n
    {\n
        v19 = 0;\n
        if ((v164[1] << 16))\n
        {\n
            v19 = 0;\n
            if ((v164[2] << 8))\n
                v19 = v164[3];\n
        }\n
    }\n
    v165 = v19 & 1;\n
    cgc_uint2str(&v163, 12, v165);\n
    v18 = &v163;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v163)) < 0)\n
        cgc__terminate(1);\n
    v227 = v166;\n
    *(v227) = *(v227) - 4;\n
    v228 = v167;\n
    *(v228) = *(v228) + 4;\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 21);\n
    if (*(v116) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v115) = *(&*(v117));\n
    cgc_uint2str(&v114, 21, *(&v115));\n
    v17 = &v114;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v229 = v116;\n
    *(v229) = *(v229) - 8;\n
    v230 = v117;\n
    *(v230) = *(v230) + 8;\n
    v73 = a0;\n
    v72 = a1;\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(v73)->field_0;\n
    v231 = v72;\n
    *(v231) = *(v231) - 1;\n
    v232 = v73;\n
    *(v232) = *(v232) + 1;\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_49d801;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49d801:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v233 = v73;\n
    *(v233) = &(*(v233))[v71];\n
    v234 = v72;\n
    *(v234) = *(v234) - v71;\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 6);\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(&*(v97));\n
    cgc_uint2str(&v94, 6, v95);\n
    v16 = &v94;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v235 = v96;\n
    *(v235) = *(v235) - 2;\n
    v236 = v97;\n
    *(v236) = *(v236) + 2;\n
    v125 = a0;\n
    v124 = a1;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    cgc_uint2str(&v122, 12, v123);\n
    v15 = &v122;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v122)) < 0)\n
        cgc__terminate(1);\n
    v237 = v124;\n
    *(v237) = *(v237) - 4;\n
    v238 = v125;\n
    *(v238) = *(v238) + 4;\n
    v183 = a0;\n
    v182 = a1;\n
    if (*(v182) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v181 = *(v183)->field_0;\n
    v239 = v182;\n
    *(v239) = *(v239) - 1;\n
    v240 = v183;\n
    *(v240) = *(v240) + 1;\n
    if (v181 <= *(v182) && !(!v181))\n
        goto LABEL_49dbb6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49dbb6:\n
    v180 = cgc_calloc(v181);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v180, *(v183), v181);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v241 = v183;\n
    *(v241) = &(*(v241))[v181];\n
    v242 = v182;\n
    *(v242) = *(v242) - v181;\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    v60 = a0;\n
    v59 = a1;\n
    v57 = &*(v60)->field_0;\n
    memset(&v56, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if (*(v57) << 56)\n
    {\n
        v14 = 0;\n
        if (v57[1] << 48)\n
        {\n
            v14 = 0;\n
            if (v57[2] << 40)\n
            {\n
                v14 = 0;\n
                if (v57[3] << 32)\n
                {\n
                    v14 = 0;\n
                    if ((v57[4] << 24))\n
                    {\n
                        v14 = 0;\n
                        if ((v57[5] << 16))\n
                        {\n
                            v14 = 0;\n
                            if ((v57[6] << 8))\n
                                v14 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v58) = v14 & 1;\n
    cgc_uint2str(&v56, 21, *(&v58));\n
    v13 = &v56;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v243 = v59;\n
    *(v243) = *(v243) - 8;\n
    v244 = v60;\n
    *(v244) = *(v244) + 8;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v111) = *(&*(v113));\n
    cgc_uint2str(&v110, 21, *(&v111));\n
    v12 = &v110;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v245 = v112;\n
    *(v245) = *(v245) - 8;\n
    v246 = v113;\n
    *(v246) = *(v246) + 8;\n
    v141 = a0;\n
    v140 = a1;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v139 = *(&*(v141));\n
    v247 = v140;\n
    *(v247) = *(v247) - 2;\n
    v248 = v141;\n
    *(v248) = *(v248) + 2;\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_49e085;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49e085:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v249 = v140;\n
    *(v249) = *(v249) - v139;\n
    v250 = v141;\n
    *(v250) = &(*(v250))[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v69 = a0;\n
    v68 = a1;\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v67 = *(v69)->field_0;\n
    v251 = v68;\n
    *(v251) = *(v251) - 1;\n
    v252 = v69;\n
    *(v252) = *(v252) + 1;\n
    if (v67 <= *(v68) && !(!v67))\n
        goto LABEL_49e253;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49e253:\n
    v66 = cgc_calloc(v67);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v66, *(v69), v67);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v253 = v69;\n
    *(v253) = &(*(v253))[v67];\n
    v254 = v68;\n
    *(v254) = *(v254) - v67;\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 6);\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(&*(v93));\n
    cgc_uint2str(&v90, 6, v91);\n
    v11 = &v90;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v255 = v92;\n
    *(v255) = *(v255) - 2;\n
    v256 = v93;\n
    *(v256) = *(v256) + 2;\n
    v179 = a0;\n
    v178 = a1;\n
    if (*(v178) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v177 = *(v179)->field_0;\n
    v257 = v178;\n
    *(v257) = *(v257) - 1;\n
    v258 = v179;\n
    *(v258) = *(v258) + 1;\n
    if (v177 <= *(v178) && !(!v177))\n
        goto LABEL_49e507;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49e507:\n
    v176 = cgc_calloc(v177);\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v176, *(v179), v177);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v259 = v179;\n
    *(v259) = &(*(v259))[v177];\n
    v260 = v178;\n
    *(v260) = *(v260) - v177;\n
    cgc_checkheap();\n
    cgc_free(v176);\n
    v162 = a0;\n
    v161 = a1;\n
    *(&v159) = *(v162);\n
    memset(&v158, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v159[0] << 24))\n
    {\n
        v10 = 0;\n
        if ((v159[1] << 16))\n
        {\n
            v10 = 0;\n
            if ((v159[2] << 8))\n
                v10 = v159[3];\n
        }\n
    }\n
    v160 = v10 & 1;\n
    cgc_uint2str(&v158, 12, v160);\n
    v9 = &v158;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v158)) < 0)\n
        cgc__terminate(1);\n
    v261 = v161;\n
    *(v261) = *(v261) - 4;\n
    v262 = v162;\n
    *(v262) = *(v262) + 4;\n
    v149 = a0;\n
    v148 = a1;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = *(&*(v149));\n
    v263 = v148;\n
    *(v263) = *(v263) - 2;\n
    v264 = v149;\n
    *(v264) = *(v264) + 2;\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_49e83a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49e83a:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v265 = v148;\n
    *(v265) = *(v265) - v147;\n
    v266 = v149;\n
    *(v266) = &(*(v266))[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 6);\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(&*(v89));\n
    cgc_uint2str(&v86, 6, v87);\n
    v8 = &v86;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v267 = v88;\n
    *(v267) = *(v267) - 2;\n
    v268 = v89;\n
    *(v268) = *(v268) + 2;\n
    v175 = a0;\n
    v174 = a1;\n
    if (*(v174) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v173 = *(v175)->field_0;\n
    v269 = v174;\n
    *(v269) = *(v269) - 1;\n
    v270 = v175;\n
    *(v270) = *(v270) + 1;\n
    if (v173 <= *(v174) && !(!v173))\n
        goto LABEL_49eaee;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49eaee:\n
    v172 = cgc_calloc(v173);\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v172, *(v175), v173);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v271 = v175;\n
    *(v271) = &(*(v271))[v173];\n
    v272 = v174;\n
    *(v272) = *(v272) - v173;\n
    cgc_checkheap();\n
    cgc_free(v172);\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v80) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v80);\n
    v79 = v7;\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = cgc_calloc(134);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v78, \"Str: \");\n
    cgc_strncpy(v78 + 5, *(v81), v79);\n
    v274 = v81;\n
    *(v274) = &(*(v274))[4 + cgc_strlen(v78)];\n
    v276 = v80;\n
    *(v276) = *(v276) - (cgc_strlen(v78) + -4);\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v55 = a0;\n
    v54 = a1;\n
    *(&v52[0]) = *(v55);\n
    memset(&v51, 0, 21);\n
    if (*(v54) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v52[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v52[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v52[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v52[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v52[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v52[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v52[6] << 8))\n
                                v6 = v52[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v53) = v6 & 1;\n
    cgc_uint2str(&v51, 21, *(&v53));\n
    v5 = &v51;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v277 = v54;\n
    *(v277) = *(v277) - 8;\n
    v278 = v55;\n
    *(v278) = *(v278) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 4);\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(v105)->field_0;\n
    cgc_uint2str(&v102, 4, v103);\n
    v4 = &v102;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v279 = v104;\n
    *(v279) = *(v279) - 1;\n
    v280 = v105;\n
    *(v280) = *(v280) + 1;\n
    v121 = a0;\n
    v120 = a1;\n
    memset(&v118, 0, 12);\n
    if (*(v120) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    cgc_uint2str(&v118, 12, v119);\n
    v3 = &v118;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v281 = v120;\n
    *(v281) = *(v281) - 4;\n
    v282 = v121;\n
    *(v282) = *(v282) + 4;\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v76) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v76);\n
    v75 = v2;\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = cgc_calloc(134);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v74, \"Str: \");\n
    cgc_strncpy(v74 + 5, *(v77), v75);\n
    v284 = v77;\n
    *(v284) = &(*(v284))[4 + cgc_strlen(v74)];\n
    v286 = v76;\n
    *(v286) = *(v286) - (cgc_strlen(v74) + -4);\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v40 = a0;\n
    v39 = a1;\n
    *(&v37) = *(v40);\n
    memset(&v36, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v37[0] << 8))\n
        v1 = v37[1];\n
    v38 = v1 & 1;\n
    cgc_uint2str(&v36, 6, v38);\n
    v0 = &v36;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v287 = v39;\n
    *(v287) = *(v287) - 2;\n
    v288 = v40;\n
    *(v288) = *(v288) + 2;\n
    v34 ^= cgc__cookie;\n
    if (v34)\n
        cgc___stack_cookie_fail();\n
    v289 = a1;\n
    if (*(a1) > 0 && v33 >= 0)\n
    {\n
        v289 = v33;\n
        if (v289 < 0)\n
            v289 = *(&(&v35)[8 * v33])(a0, a1);\n
    }\n
    return v289;\n
}\n
", "4846958:sub_49f56e": null, "4846960:cgc_process_llamaparmacety": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaparmacety(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x1a8]\n
    unsigned int v1;  // [bp-0x19c]\n
    struct_1 *v2;  // [bp-0x198]\n
    struct_1 *v3;  // [bp-0x190]\n
    unsigned int v4;  // [bp-0x184]\n
    struct_1 *v5;  // [bp-0x180]\n
    struct_1 *v6;  // [bp-0x178]\n
    char v7;  // [bp-0x169]\n
    unsigned int v8;  // [bp-0x168]\n
    unsigned int v9;  // [bp-0x164]\n
    char v10;  // [bp-0x160]\n
    char v11;  // [bp-0x148]\n
    char v12[8];  // [bp-0x128]\n
    unsigned int v13;  // [bp-0x120]\n
    unsigned int *v14;  // [bp-0x118]\n
    struct struct_0 **v15;  // [bp-0x110]\n
    unsigned long v16;  // [bp-0x108]\n
    char v17;  // [bp-0xf9]\n
    unsigned int *v18;  // [bp-0xf8]\n
    struct struct_0 **v19;  // [bp-0xf0]\n
    char *v20;  // [bp-0xe8]\n
    unsigned int v21;  // [bp-0xdc]\n
    unsigned int *v22;  // [bp-0xd8]\n
    struct struct_0 **v23;  // [bp-0xd0]\n
    char *v24;  // [bp-0xc8]\n
    unsigned int v25;  // [bp-0xbc]\n
    unsigned int *v26;  // [bp-0xb8]\n
    struct struct_0 **v27;  // [bp-0xb0]\n
    char v28;  // [bp-0xa8]\n
    unsigned int v29;  // [bp-0x90]\n
    unsigned int *v30;  // [bp-0x88]\n
    struct struct_0 **v31;  // [bp-0x80]\n
    char v32;  // [bp-0x78]\n
    unsigned int v33;  // [bp-0x60]\n
    unsigned int *v34;  // [bp-0x58]\n
    struct struct_0 **v35;  // [bp-0x50]\n
    char v36;  // [bp-0x48]\n
    unsigned int v37;  // [bp-0x3c]\n
    unsigned int *v38;  // [bp-0x38]\n
    struct struct_0 **v39;  // [bp-0x30]\n
    char v40;  // [bp-0x28]\n
    unsigned int v41;  // [bp-0x1c]\n
    unsigned int *v42;  // [bp-0x18]\n
    struct struct_0 **v43;  // [bp-0x10]\n
    unsigned int *v45;  // rax\n
    struct struct_0 **v46;  // rax\n
    unsigned int *v47;  // rax\n
    struct struct_0 **v48;  // rax\n
    struct struct_0 **v50;  // rax\n
    unsigned int *v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    struct struct_0 **v56;  // rax\n
    unsigned int *v57;  // rax\n
    struct struct_0 **v58;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v60;  // rax\n
    struct struct_0 **v62;  // rax\n
    unsigned int *v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_0 **v66;  // rax\n
    unsigned int *v67;  // rax, Other Possible Types: unsigned long\n
\n
    v9 = cgc__cookie;\n
    v8 = -1;\n
    if (cgc_sendline(1, \"===llamaparmacety===\", 20) < 0)\n
        cgc__terminate(1);\n
    v15 = a0;\n
    v14 = a1;\n
    *(&v12[0]) = *(v15);\n
    memset(&v11, 0, 21);\n
    if (*(v14) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if (v12[0] << 56)\n
    {\n
        v7 = 0;\n
        if (v12[1] << 48)\n
        {\n
            v7 = 0;\n
            if (v12[2] << 40)\n
            {\n
                v7 = 0;\n
                if (v12[3] << 32)\n
                {\n
                    v7 = 0;\n
                    if ((v12[4] << 24))\n
                    {\n
                        v7 = 0;\n
                        if ((v12[5] << 16))\n
                        {\n
                            v7 = 0;\n
                            if ((v12[6] << 8))\n
                                v7 = v12[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v13) = v7 & 1;\n
    cgc_uint2str(&v11, 21, *(&v13));\n
    v6 = &v11;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v11)) < 0)\n
        cgc__terminate(1);\n
    v45 = v14;\n
    *(v45) = *(v45) - 8;\n
    v46 = v15;\n
    *(v46) = *(v46) + 8;\n
    v43 = a0;\n
    v42 = a1;\n
    memset(&v40, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = *(&*(v43));\n
    cgc_uint2str(&v40, 12, v41);\n
    v5 = &v40;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v47 = v42;\n
    *(v47) = *(v47) - 4;\n
    v48 = v43;\n
    *(v48) = *(v48) + 4;\n
    v27 = a0;\n
    v26 = a1;\n
    if (*(v26) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v26) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v26);\n
    v25 = v4;\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = cgc_calloc(134);\n
    if (!v24)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v24, \"Str: \");\n
    cgc_strncpy(v24 + 5, *(v27), v25);\n
    v50 = v27;\n
    *(v50) = &(*(v50))[4 + cgc_strlen(v24)];\n
    v52 = v26;\n
    *(v52) = *(v52) - (cgc_strlen(v24) + -4);\n
    cgc_checkheap();\n
    cgc_free(v24);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v39 = a0;\n
    v38 = a1;\n
    memset(&v36, 0, 12);\n
    if (*(v38) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v37 = *(&*(v39));\n
    cgc_uint2str(&v36, 12, v37);\n
    v3 = &v36;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v36)) < 0)\n
        cgc__terminate(1);\n
    v53 = v38;\n
    *(v53) = *(v53) - 4;\n
    v54 = v39;\n
    *(v54) = *(v54) + 4;\n
    v35 = a0;\n
    v34 = a1;\n
    memset(&v32, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v33) = *(&*(v35));\n
    cgc_uint2str(&v32, 21, *(&v33));\n
    v2 = &v32;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v55 = v34;\n
    *(v55) = *(v55) - 8;\n
    v56 = v35;\n
    *(v56) = *(v56) + 8;\n
    v19 = a0;\n
    v18 = a1;\n
    if (*(v18) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = *(v19)->field_0;\n
    v57 = v18;\n
    *(v57) = *(v57) - 1;\n
    v58 = v19;\n
    *(v58) = *(v58) + 1;\n
    if (v17 <= *(v18) && !(!v17))\n
        goto LABEL_49fd75;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_49fd75:\n
    v16 = cgc_calloc(v17);\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v16, *(v19), v17);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v59 = v19;\n
    *(v59) = &(*(v59))[v17];\n
    v60 = v18;\n
    *(v60) = *(v60) - v17;\n
    cgc_checkheap();\n
    cgc_free(v16);\n
    v23 = a0;\n
    v22 = a1;\n
    if (*(v22) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v22) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v22);\n
    v21 = v1;\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = cgc_calloc(134);\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v20, \"Str: \");\n
    cgc_strncpy(v20 + 5, *(v23), v21);\n
    v62 = v23;\n
    *(v62) = &(*(v62))[4 + cgc_strlen(v20)];\n
    v64 = v22;\n
    *(v64) = *(v64) - (cgc_strlen(v20) + -4);\n
    cgc_checkheap();\n
    cgc_free(v20);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v31 = a0;\n
    v30 = a1;\n
    memset(&v28, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v29) = *(&*(v31));\n
    cgc_uint2str(&v28, 21, *(&v29));\n
    v0 = &v28;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v28)) < 0)\n
        cgc__terminate(1);\n
    v65 = v30;\n
    *(v65) = *(v65) - 8;\n
    v66 = v31;\n
    *(v66) = *(v66) + 8;\n
    v9 ^= cgc__cookie;\n
    if (v9)\n
        cgc___stack_cookie_fail();\n
    v67 = a1;\n
    if (*(a1) > 0 && v8 >= 0)\n
    {\n
        v67 = v8;\n
        if (v67 < 0)\n
            v67 = *(&(&v10)[8 * v8])(a0, a1);\n
    }\n
    return v67;\n
}\n
", "4850106:sub_4a01ba": null, "4850112:cgc_process_llamapronephros": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamapronephros(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x640]\n
    char v1;  // [bp-0x635]\n
    unsigned int v2;  // [bp-0x634]\n
    struct_1 *v3;  // [bp-0x630]\n
    struct_1 *v4;  // [bp-0x628]\n
    struct_1 *v5;  // [bp-0x620]\n
    char v6;  // [bp-0x615]\n
    unsigned int v7;  // [bp-0x614]\n
    unsigned int v8;  // [bp-0x610]\n
    unsigned int v9;  // [bp-0x60c]\n
    struct_1 *v10;  // [bp-0x608]\n
    struct_1 *v11;  // [bp-0x600]\n
    unsigned int v12;  // [bp-0x5f4]\n
    struct_1 *v13;  // [bp-0x5f0]\n
    struct_1 *v14;  // [bp-0x5e8]\n
    char v15;  // [bp-0x5d9]\n
    struct_1 *v16;  // [bp-0x5d8]\n
    struct_1 *v17;  // [bp-0x5d0]\n
    char v18;  // [bp-0x5c1]\n
    struct_1 *v19;  // [bp-0x5c0]\n
    char v20;  // [bp-0x5b1]\n
    struct_1 *v21;  // [bp-0x5b0]\n
    struct_1 *v22;  // [bp-0x5a8]\n
    unsigned int v23;  // [bp-0x59c]\n
    struct_1 *v24;  // [bp-0x598]\n
    struct_1 *v25;  // [bp-0x590]\n
    struct_1 *v26;  // [bp-0x588]\n
    struct_1 *v27;  // [bp-0x580]\n
    struct_1 *v28;  // [bp-0x578]\n
    struct_1 *v29;  // [bp-0x570]\n
    struct_1 *v30;  // [bp-0x568]\n
    unsigned int v31;  // [bp-0x560]\n
    unsigned int v32;  // [bp-0x55c]\n
    char v33;  // [bp-0x558]\n
    char v34;  // [bp-0x53e]\n
    char v35[2];  // [bp-0x538]\n
    unsigned short v36;  // [bp-0x52a]\n
    unsigned int *v37;  // [bp-0x528]\n
    struct struct_0 **v38;  // [bp-0x520]\n
    char v39;  // [bp-0x518]\n
    char v40[8];  // [bp-0x4f8]\n
    unsigned int v41;  // [bp-0x4f0]\n
    unsigned int *v42;  // [bp-0x4e8]\n
    struct struct_0 **v43;  // [bp-0x4e0]\n
    char v44;  // [bp-0x4d8]\n
    char v45[8];  // [bp-0x4b8]\n
    unsigned int v46;  // [bp-0x4b0]\n
    unsigned int *v47;  // [bp-0x4a8]\n
    struct struct_0 **v48;  // [bp-0x4a0]\n
    char v49;  // [bp-0x498]\n
    char v50[8];  // [bp-0x478]\n
    unsigned int v51;  // [bp-0x470]\n
    unsigned int *v52;  // [bp-0x468]\n
    struct struct_0 **v53;  // [bp-0x460]\n
    char v54;  // [bp-0x458]\n
    char v55[8];  // [bp-0x440]\n
    unsigned int v56;  // [bp-0x438]\n
    unsigned int *v57;  // [bp-0x430]\n
    struct struct_0 **v58;  // [bp-0x428]\n
    unsigned long v59;  // [bp-0x420]\n
    char v60;  // [bp-0x411]\n
    unsigned int *v61;  // [bp-0x410]\n
    struct struct_0 **v62;  // [bp-0x408]\n
    unsigned long v63;  // [bp-0x400]\n
    char v64;  // [bp-0x3f1]\n
    unsigned int *v65;  // [bp-0x3f0]\n
    struct struct_0 **v66;  // [bp-0x3e8]\n
    char *v67;  // [bp-0x3e0]\n
    unsigned int v68;  // [bp-0x3d4]\n
    unsigned int *v69;  // [bp-0x3d0]\n
    struct struct_0 **v70;  // [bp-0x3c8]\n
    char v71;  // [bp-0x3c0]\n
    unsigned short v72;  // [bp-0x3ba]\n
    unsigned int *v73;  // [bp-0x3b8]\n
    struct struct_0 **v74;  // [bp-0x3b0]\n
    char v75;  // [bp-0x3a8]\n
    unsigned short v76;  // [bp-0x3a2]\n
    unsigned int *v77;  // [bp-0x3a0]\n
    struct struct_0 **v78;  // [bp-0x398]\n
    char v79;  // [bp-0x390]\n
    unsigned short v80;  // [bp-0x38a]\n
    unsigned int *v81;  // [bp-0x388]\n
    struct struct_0 **v82;  // [bp-0x380]\n
    char v83;  // [bp-0x378]\n
    unsigned short v84;  // [bp-0x372]\n
    unsigned int *v85;  // [bp-0x370]\n
    struct struct_0 **v86;  // [bp-0x368]\n
    char v87;  // [bp-0x35d]\n
    char v88;  // [bp-0x359]\n
    unsigned int *v89;  // [bp-0x358]\n
    struct struct_0 **v90;  // [bp-0x350]\n
    char v91;  // [bp-0x348]\n
    unsigned int v92;  // [bp-0x330]\n
    unsigned int *v93;  // [bp-0x328]\n
    struct struct_0 **v94;  // [bp-0x320]\n
    char v95;  // [bp-0x318]\n
    unsigned int v96;  // [bp-0x300]\n
    unsigned int *v97;  // [bp-0x2f8]\n
    struct struct_0 **v98;  // [bp-0x2f0]\n
    char v99;  // [bp-0x2e8]\n
    unsigned int v100;  // [bp-0x2d0]\n
    unsigned int *v101;  // [bp-0x2c8]\n
    struct struct_0 **v102;  // [bp-0x2c0]\n
    char v103;  // [bp-0x2b8]\n
    unsigned int v104;  // [bp-0x2ac]\n
    unsigned int *v105;  // [bp-0x2a8]\n
    struct struct_0 **v106;  // [bp-0x2a0]\n
    char v107;  // [bp-0x298]\n
    unsigned int v108;  // [bp-0x28c]\n
    unsigned int *v109;  // [bp-0x288]\n
    struct struct_0 **v110;  // [bp-0x280]\n
    char v111;  // [bp-0x278]\n
    unsigned int v112;  // [bp-0x26c]\n
    unsigned int *v113;  // [bp-0x268]\n
    struct struct_0 **v114;  // [bp-0x260]\n
    char v115;  // [bp-0x258]\n
    unsigned int v116;  // [bp-0x24c]\n
    unsigned int *v117;  // [bp-0x248]\n
    struct struct_0 **v118;  // [bp-0x240]\n
    unsigned long v119;  // [bp-0x238]\n
    unsigned short v120;  // [bp-0x22a]\n
    unsigned int *v121;  // [bp-0x228]\n
    struct struct_0 **v122;  // [bp-0x220]\n
    unsigned long v123;  // [bp-0x218]\n
    unsigned short v124;  // [bp-0x20a]\n
    unsigned int *v125;  // [bp-0x208]\n
    struct struct_0 **v126;  // [bp-0x200]\n
    unsigned long v127;  // [bp-0x1f8]\n
    unsigned short v128;  // [bp-0x1ea]\n
    unsigned int *v129;  // [bp-0x1e8]\n
    struct struct_0 **v130;  // [bp-0x1e0]\n
    unsigned long v131;  // [bp-0x1d8]\n
    unsigned short v132;  // [bp-0x1ca]\n
    unsigned int *v133;  // [bp-0x1c8]\n
    struct struct_0 **v134;  // [bp-0x1c0]\n
    unsigned long v135;  // [bp-0x1b8]\n
    unsigned short v136;  // [bp-0x1aa]\n
    unsigned int *v137;  // [bp-0x1a8]\n
    struct struct_0 **v138;  // [bp-0x1a0]\n
    unsigned long v139;  // [bp-0x198]\n
    unsigned short v140;  // [bp-0x18a]\n
    unsigned int *v141;  // [bp-0x188]\n
    struct struct_0 **v142;  // [bp-0x180]\n
    unsigned long v143;  // [bp-0x178]\n
    unsigned short v144;  // [bp-0x16a]\n
    unsigned int *v145;  // [bp-0x168]\n
    struct struct_0 **v146;  // [bp-0x160]\n
    char *v147;  // [bp-0x158]\n
    unsigned int v148;  // [bp-0x14c]\n
    unsigned int *v149;  // [bp-0x148]\n
    struct struct_0 **v150;  // [bp-0x140]\n
    char *v151;  // [bp-0x138]\n
    unsigned int v152;  // [bp-0x12c]\n
    unsigned int *v153;  // [bp-0x128]\n
    struct struct_0 **v154;  // [bp-0x120]\n
    char *v155;  // [bp-0x118]\n
    unsigned int v156;  // [bp-0x10c]\n
    unsigned int *v157;  // [bp-0x108]\n
    struct struct_0 **v158;  // [bp-0x100]\n
    char *v159;  // [bp-0xf8]\n
    unsigned int v160;  // [bp-0xec]\n
    unsigned int *v161;  // [bp-0xe8]\n
    struct struct_0 **v162;  // [bp-0xe0]\n
    char *v163;  // [bp-0xd8]\n
    unsigned int v164;  // [bp-0xcc]\n
    unsigned int *v165;  // [bp-0xc8]\n
    struct struct_0 **v166;  // [bp-0xc0]\n
    char v167;  // [bp-0xb8]\n
    unsigned int v168;  // [bp-0xa0]\n
    unsigned int *v169;  // [bp-0x98]\n
    struct struct_0 **v170;  // [bp-0x90]\n
    char v171;  // [bp-0x88]\n
    unsigned int v172;  // [bp-0x70]\n
    unsigned int *v173;  // [bp-0x68]\n
    struct struct_0 **v174;  // [bp-0x60]\n
    char v175;  // [bp-0x58]\n
    unsigned int v176;  // [bp-0x40]\n
    unsigned int *v177;  // [bp-0x38]\n
    struct struct_0 **v178;  // [bp-0x30]\n
    unsigned long v179;  // [bp-0x28]\n
    char v180;  // [bp-0x19]\n
    unsigned int *v181;  // [bp-0x18]\n
    struct struct_0 **v182;  // [bp-0x10]\n
    unsigned int *v184;  // rax\n
    struct struct_0 **v185;  // rax\n
    unsigned int *v186;  // rax\n
    struct struct_0 **v187;  // rax\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    struct struct_0 **v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    unsigned int *v196;  // rax\n
    struct struct_0 **v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_0 **v221;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v253;  // rax\n
    unsigned int *v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v275;  // rax\n
    unsigned int *v276;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    unsigned int *v288;  // rax, Other Possible Types: unsigned long\n
\n
    v32 = cgc__cookie;\n
    v31 = -1;\n
    if (cgc_sendline(1, \"===llamapronephros===\", 21) < 0)\n
        cgc__terminate(1);\n
    v130 = a0;\n
    v129 = a1;\n
    if (*(v129) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = *(&*(v130));\n
    v184 = v129;\n
    *(v184) = *(v184) - 2;\n
    v185 = v130;\n
    *(v185) = *(v185) + 2;\n
    if (v128 <= *(v129) && !(!v128))\n
        goto LABEL_4a030c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a030c:\n
    v127 = cgc_calloc(v128);\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v127, *(v130), v128);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v186 = v129;\n
    *(v186) = *(v186) - v128;\n
    v187 = v130;\n
    *(v187) = &(*(v187))[v128];\n
    cgc_checkheap();\n
    cgc_free(v127);\n
    v118 = a0;\n
    v117 = a1;\n
    memset(&v115, 0, 12);\n
    if (*(v117) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v116 = *(&*(v118));\n
    cgc_uint2str(&v115, 12, v116);\n
    v30 = &v115;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v115)) < 0)\n
        cgc__terminate(1);\n
    v188 = v117;\n
    *(v188) = *(v188) - 4;\n
    v189 = v118;\n
    *(v189) = *(v189) + 4;\n
    v178 = a0;\n
    v177 = a1;\n
    memset(&v175, 0, 21);\n
    if (*(v177) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v176) = *(&*(v178));\n
    cgc_uint2str(&v175, 21, *(&v176));\n
    v29 = &v175;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v175)) < 0)\n
        cgc__terminate(1);\n
    v190 = v177;\n
    *(v190) = *(v190) - 8;\n
    v191 = v178;\n
    *(v191) = *(v191) + 8;\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    v192 = v65;\n
    *(v192) = *(v192) - 1;\n
    v193 = v66;\n
    *(v193) = *(v193) + 1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_4a06c6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a06c6:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v194 = v66;\n
    *(v194) = &(*(v194))[v64];\n
    v195 = v65;\n
    *(v195) = *(v195) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v146 = a0;\n
    v145 = a1;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v144 = *(&*(v146));\n
    v196 = v145;\n
    *(v196) = *(v196) - 2;\n
    v197 = v146;\n
    *(v197) = *(v197) + 2;\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_4a0896;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a0896:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v198 = v145;\n
    *(v198) = *(v198) - v144;\n
    v199 = v146;\n
    *(v199) = &(*(v199))[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v180 = *(v182)->field_0;\n
    v200 = v181;\n
    *(v200) = *(v200) - 1;\n
    v201 = v182;\n
    *(v201) = *(v201) + 1;\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_4a0a46;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a0a46:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v202 = v182;\n
    *(v202) = &(*(v202))[v180];\n
    v203 = v181;\n
    *(v203) = *(v203) - v180;\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v86 = a0;\n
    v85 = a1;\n
    memset(&v83, 0, 6);\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = *(&*(v86));\n
    cgc_uint2str(&v83, 6, v84);\n
    v28 = &v83;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v83)) < 0)\n
        cgc__terminate(1);\n
    v204 = v85;\n
    *(v204) = *(v204) - 2;\n
    v205 = v86;\n
    *(v205) = *(v205) + 2;\n
    v102 = a0;\n
    v101 = a1;\n
    memset(&v99, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v100) = *(&*(v102));\n
    cgc_uint2str(&v99, 21, *(&v100));\n
    v27 = &v99;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v99)) < 0)\n
        cgc__terminate(1);\n
    v206 = v101;\n
    *(v206) = *(v206) - 8;\n
    v207 = v102;\n
    *(v207) = *(v207) + 8;\n
    v174 = a0;\n
    v173 = a1;\n
    memset(&v171, 0, 21);\n
    if (*(v173) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v172) = *(&*(v174));\n
    cgc_uint2str(&v171, 21, *(&v172));\n
    v26 = &v171;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v171)) < 0)\n
        cgc__terminate(1);\n
    v208 = v173;\n
    *(v208) = *(v208) - 8;\n
    v209 = v174;\n
    *(v209) = *(v209) + 8;\n
    v142 = a0;\n
    v141 = a1;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v140 = *(&*(v142));\n
    v210 = v141;\n
    *(v210) = *(v210) - 2;\n
    v211 = v142;\n
    *(v211) = *(v211) + 2;\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_4a0ee5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a0ee5:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v212 = v141;\n
    *(v212) = *(v212) - v140;\n
    v213 = v142;\n
    *(v213) = &(*(v213))[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v126 = a0;\n
    v125 = a1;\n
    if (*(v125) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v124 = *(&*(v126));\n
    v214 = v125;\n
    *(v214) = *(v214) - 2;\n
    v215 = v126;\n
    *(v215) = *(v215) + 2;\n
    if (v124 <= *(v125) && !(!v124))\n
        goto LABEL_4a10b5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a10b5:\n
    v123 = cgc_calloc(v124);\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v123, *(v126), v124);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v216 = v125;\n
    *(v216) = *(v216) - v124;\n
    v217 = v126;\n
    *(v217) = &(*(v217))[v124];\n
    cgc_checkheap();\n
    cgc_free(v123);\n
    v90 = a0;\n
    v89 = a1;\n
    memset(&v87, 0, 4);\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = *(v90)->field_0;\n
    cgc_uint2str(&v87, 4, v88);\n
    v25 = &v87;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v87)) < 0)\n
        cgc__terminate(1);\n
    v218 = v89;\n
    *(v218) = *(v218) - 1;\n
    v219 = v90;\n
    *(v219) = *(v219) + 1;\n
    v170 = a0;\n
    v169 = a1;\n
    memset(&v167, 0, 21);\n
    if (*(v169) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v168) = *(&*(v170));\n
    cgc_uint2str(&v167, 21, *(&v168));\n
    v24 = &v167;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v167)) < 0)\n
        cgc__terminate(1);\n
    v220 = v169;\n
    *(v220) = *(v220) - 8;\n
    v221 = v170;\n
    *(v221) = *(v221) + 8;\n
    v70 = a0;\n
    v69 = a1;\n
    if (*(v69) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v69) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v69);\n
    v68 = v23;\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v67 = cgc_calloc(134);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v67, \"Str: \");\n
    cgc_strncpy(v67 + 5, *(v70), v68);\n
    v223 = v70;\n
    *(v223) = &(*(v223))[4 + cgc_strlen(v67)];\n
    v225 = v69;\n
    *(v225) = *(v225) - (cgc_strlen(v67) + -4);\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v82 = a0;\n
    v81 = a1;\n
    memset(&v79, 0, 6);\n
    if (*(v81) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = *(&*(v82));\n
    cgc_uint2str(&v79, 6, v80);\n
    v22 = &v79;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v79)) < 0)\n
        cgc__terminate(1);\n
    v226 = v81;\n
    *(v226) = *(v226) - 2;\n
    v227 = v82;\n
    *(v227) = *(v227) + 2;\n
    v114 = a0;\n
    v113 = a1;\n
    memset(&v111, 0, 12);\n
    if (*(v113) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v112 = *(&*(v114));\n
    cgc_uint2str(&v111, 12, v112);\n
    v21 = &v111;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v111)) < 0)\n
        cgc__terminate(1);\n
    v228 = v113;\n
    *(v228) = *(v228) - 4;\n
    v229 = v114;\n
    *(v229) = *(v229) + 4;\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(v62)->field_0;\n
    v230 = v61;\n
    *(v230) = *(v230) - 1;\n
    v231 = v62;\n
    *(v231) = *(v231) + 1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4a188c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a188c:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v232 = v62;\n
    *(v232) = &(*(v232))[v60];\n
    v233 = v61;\n
    *(v233) = *(v233) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v138 = a0;\n
    v137 = a1;\n
    if (*(v137) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v136 = *(&*(v138));\n
    v234 = v137;\n
    *(v234) = *(v234) - 2;\n
    v235 = v138;\n
    *(v235) = *(v235) + 2;\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_4a1a5c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a1a5c:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v236 = v137;\n
    *(v236) = *(v236) - v136;\n
    v237 = v138;\n
    *(v237) = &(*(v237))[v136];\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v58 = a0;\n
    v57 = a1;\n
    *(&v55[0]) = *(v58);\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (v55[0] << 56)\n
    {\n
        v20 = 0;\n
        if (v55[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v55[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v55[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v55[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v55[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v55[6] << 8))\n
                                v20 = v55[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v56) = v20 & 1;\n
    cgc_uint2str(&v54, 21, *(&v56));\n
    v19 = &v54;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v238 = v57;\n
    *(v238) = *(v238) - 8;\n
    v239 = v58;\n
    *(v239) = *(v239) + 8;\n
    v53 = a0;\n
    v52 = a1;\n
    *(&v50[0]) = *(v53);\n
    memset(&v49, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if (v50[0] << 56)\n
    {\n
        v18 = 0;\n
        if (v50[1] << 48)\n
        {\n
            v18 = 0;\n
            if (v50[2] << 40)\n
            {\n
                v18 = 0;\n
                if (v50[3] << 32)\n
                {\n
                    v18 = 0;\n
                    if ((v50[4] << 24))\n
                    {\n
                        v18 = 0;\n
                        if ((v50[5] << 16))\n
                        {\n
                            v18 = 0;\n
                            if ((v50[6] << 8))\n
                                v18 = v50[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v51) = v18 & 1;\n
    cgc_uint2str(&v49, 21, *(&v51));\n
    v17 = &v49;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v240 = v52;\n
    *(v240) = *(v240) - 8;\n
    v241 = v53;\n
    *(v241) = *(v241) + 8;\n
    v78 = a0;\n
    v77 = a1;\n
    memset(&v75, 0, 6);\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = *(&*(v78));\n
    cgc_uint2str(&v75, 6, v76);\n
    v16 = &v75;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v75)) < 0)\n
        cgc__terminate(1);\n
    v242 = v77;\n
    *(v242) = *(v242) - 2;\n
    v243 = v78;\n
    *(v243) = *(v243) + 2;\n
    v122 = a0;\n
    v121 = a1;\n
    if (*(v121) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v120 = *(&*(v122));\n
    v244 = v121;\n
    *(v244) = *(v244) - 2;\n
    v245 = v122;\n
    *(v245) = *(v245) + 2;\n
    if (v120 <= *(v121) && !(!v120))\n
        goto LABEL_4a215c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a215c:\n
    v119 = cgc_calloc(v120);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v119, *(v122), v120);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v246 = v121;\n
    *(v246) = *(v246) - v120;\n
    v247 = v122;\n
    *(v247) = &(*(v247))[v120];\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35) = *(v38);\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v35[0] << 8))\n
        v15 = v35[1];\n
    v36 = v15 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v14 = &v34;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v248 = v37;\n
    *(v248) = *(v248) - 2;\n
    v249 = v38;\n
    *(v249) = *(v249) + 2;\n
    v110 = a0;\n
    v109 = a1;\n
    memset(&v107, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v108 = *(&*(v110));\n
    cgc_uint2str(&v107, 12, v108);\n
    v13 = &v107;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v107)) < 0)\n
        cgc__terminate(1);\n
    v250 = v109;\n
    *(v250) = *(v250) - 4;\n
    v251 = v110;\n
    *(v251) = *(v251) + 4;\n
    v166 = a0;\n
    v165 = a1;\n
    if (*(v165) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v165) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v165);\n
    v164 = v12;\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v163 = cgc_calloc(134);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v163, \"Str: \");\n
    cgc_strncpy(v163 + 5, *(v166), v164);\n
    v253 = v166;\n
    *(v253) = &(*(v253))[4 + cgc_strlen(v163)];\n
    v255 = v165;\n
    *(v255) = *(v255) - (cgc_strlen(v163) + -4);\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v134 = a0;\n
    v133 = a1;\n
    if (*(v133) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v132 = *(&*(v134));\n
    v256 = v133;\n
    *(v256) = *(v256) - 2;\n
    v257 = v134;\n
    *(v257) = *(v257) + 2;\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_4a2768;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a2768:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v258 = v133;\n
    *(v258) = *(v258) - v132;\n
    v259 = v134;\n
    *(v259) = &(*(v259))[v132];\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v74 = a0;\n
    v73 = a1;\n
    memset(&v71, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v72 = *(&*(v74));\n
    cgc_uint2str(&v71, 6, v72);\n
    v11 = &v71;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v71)) < 0)\n
        cgc__terminate(1);\n
    v260 = v73;\n
    *(v260) = *(v260) - 2;\n
    v261 = v74;\n
    *(v261) = *(v261) + 2;\n
    v106 = a0;\n
    v105 = a1;\n
    memset(&v103, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v104 = *(&*(v106));\n
    cgc_uint2str(&v103, 12, v104);\n
    v10 = &v103;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v262 = v105;\n
    *(v262) = *(v262) - 4;\n
    v263 = v106;\n
    *(v263) = *(v263) + 4;\n
    v162 = a0;\n
    v161 = a1;\n
    if (*(v161) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v161) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v161);\n
    v160 = v9;\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = cgc_calloc(134);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v159, \"Str: \");\n
    cgc_strncpy(v159 + 5, *(v162), v160);\n
    v265 = v162;\n
    *(v265) = &(*(v265))[4 + cgc_strlen(v159)];\n
    v267 = v161;\n
    *(v267) = *(v267) - (cgc_strlen(v159) + -4);\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v158 = a0;\n
    v157 = a1;\n
    if (*(v157) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v157) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v157);\n
    v156 = v8;\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v155 = cgc_calloc(134);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v155, \"Str: \");\n
    cgc_strncpy(v155 + 5, *(v158), v156);\n
    v269 = v158;\n
    *(v269) = &(*(v269))[4 + cgc_strlen(v155)];\n
    v271 = v157;\n
    *(v271) = *(v271) - (cgc_strlen(v155) + -4);\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v154 = a0;\n
    v153 = a1;\n
    if (*(v153) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v153) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v153);\n
    v152 = v7;\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v151 = cgc_calloc(134);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v151, \"Str: \");\n
    cgc_strncpy(v151 + 5, *(v154), v152);\n
    v273 = v154;\n
    *(v273) = &(*(v273))[4 + cgc_strlen(v151)];\n
    v275 = v153;\n
    *(v275) = *(v275) - (cgc_strlen(v151) + -4);\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45[0]) = *(v48);\n
    memset(&v44, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v45[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v45[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v45[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v45[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v45[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v45[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v45[6] << 8))\n
                                v6 = v45[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v46) = v6 & 1;\n
    cgc_uint2str(&v44, 21, *(&v46));\n
    v5 = &v44;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v276 = v47;\n
    *(v276) = *(v276) - 8;\n
    v277 = v48;\n
    *(v277) = *(v277) + 8;\n
    v98 = a0;\n
    v97 = a1;\n
    memset(&v95, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v96) = *(&*(v98));\n
    cgc_uint2str(&v95, 21, *(&v96));\n
    v4 = &v95;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v95)) < 0)\n
        cgc__terminate(1);\n
    v278 = v97;\n
    *(v278) = *(v278) - 8;\n
    v279 = v98;\n
    *(v279) = *(v279) + 8;\n
    v94 = a0;\n
    v93 = a1;\n
    memset(&v91, 0, 21);\n
    if (*(v93) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v92) = *(&*(v94));\n
    cgc_uint2str(&v91, 21, *(&v92));\n
    v3 = &v91;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v91)) < 0)\n
        cgc__terminate(1);\n
    v280 = v93;\n
    *(v280) = *(v280) - 8;\n
    v281 = v94;\n
    *(v281) = *(v281) + 8;\n
    v150 = a0;\n
    v149 = a1;\n
    if (*(v149) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v149) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v149);\n
    v148 = v2;\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v147 = cgc_calloc(134);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v147, \"Str: \");\n
    cgc_strncpy(v147 + 5, *(v150), v148);\n
    v283 = v150;\n
    *(v283) = &(*(v283))[4 + cgc_strlen(v147)];\n
    v285 = v149;\n
    *(v285) = *(v285) - (cgc_strlen(v147) + -4);\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40[0]) = *(v43);\n
    memset(&v39, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (v40[0] << 56)\n
    {\n
        v1 = 0;\n
        if (v40[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v40[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v40[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v40[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v40[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v40[6] << 8))\n
                                v1 = v40[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v41) = v1 & 1;\n
    cgc_uint2str(&v39, 21, *(&v41));\n
    v0 = &v39;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v286 = v42;\n
    *(v286) = *(v286) - 8;\n
    v287 = v43;\n
    *(v287) = *(v287) + 8;\n
    v32 ^= cgc__cookie;\n
    if (v32)\n
        cgc___stack_cookie_fail();\n
    v288 = a1;\n
    if (*(a1) > 0 && v31 >= 0)\n
    {\n
        v288 = v31;\n
        if (v288 < 0)\n
            v288 = *(&(&v33)[8 * v31])(a0, a1);\n
    }\n
    return v288;\n
}\n
", "4864211:sub_4a38d3": null, "4864224:cgc_process_llamasmolt": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamasmolt(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x744]\n
    struct_0 *v1;  // [bp-0x740]\n
    char v2;  // [bp-0x731]\n
    struct_0 *v3;  // [bp-0x730]\n
    struct_0 *v4;  // [bp-0x728]\n
    char v5;  // [bp-0x719]\n
    struct_0 *v6;  // [bp-0x718]\n
    char v7;  // [bp-0x709]\n
    struct_0 *v8;  // [bp-0x708]\n
    char v9;  // [bp-0x6fd]\n
    unsigned int v10;  // [bp-0x6fc]\n
    struct_0 *v11;  // [bp-0x6f8]\n
    struct_0 *v12;  // [bp-0x6f0]\n
    struct_0 *v13;  // [bp-0x6e8]\n
    struct_0 *v14;  // [bp-0x6e0]\n
    char v15;  // [bp-0x6d1]\n
    struct_0 *v16;  // [bp-0x6d0]\n
    char v17;  // [bp-0x6c1]\n
    struct_0 *v18;  // [bp-0x6c0]\n
    struct_0 *v19;  // [bp-0x6b8]\n
    char v20;  // [bp-0x6a9]\n
    struct_0 *v21;  // [bp-0x6a8]\n
    char v22;  // [bp-0x699]\n
    struct_0 *v23;  // [bp-0x698]\n
    struct_0 *v24;  // [bp-0x690]\n
    struct_0 *v25;  // [bp-0x688]\n
    struct_0 *v26;  // [bp-0x680]\n
    struct_0 *v27;  // [bp-0x678]\n
    struct_0 *v28;  // [bp-0x670]\n
    struct_0 *v29;  // [bp-0x668]\n
    struct_0 *v30;  // [bp-0x660]\n
    char v31;  // [bp-0x651]\n
    struct_0 *v32;  // [bp-0x650]\n
    struct_0 *v33;  // [bp-0x648]\n
    struct_0 *v34;  // [bp-0x640]\n
    unsigned int v35;  // [bp-0x634]\n
    unsigned int v36;  // [bp-0x630]\n
    unsigned int v37;  // [bp-0x62c]\n
    char v38;  // [bp-0x628]\n
    char v39;  // [bp-0x60e]\n
    char *v40;  // [bp-0x608]\n
    unsigned short v41;  // [bp-0x5fa]\n
    unsigned int *v42;  // [bp-0x5f8]\n
    struct struct_1 **v43;  // [bp-0x5f0]\n
    char v44;  // [bp-0x5e6]\n
    char v45[2];  // [bp-0x5e0]\n
    unsigned short v46;  // [bp-0x5d2]\n
    unsigned int *v47;  // [bp-0x5d0]\n
    struct struct_1 **v48;  // [bp-0x5c8]\n
    char v49;  // [bp-0x5be]\n
    char v50[2];  // [bp-0x5b8]\n
    unsigned short v51;  // [bp-0x5aa]\n
    unsigned int *v52;  // [bp-0x5a8]\n
    struct struct_1 **v53;  // [bp-0x5a0]\n
    char v54;  // [bp-0x598]\n
    char v55[8];  // [bp-0x578]\n
    unsigned int v56;  // [bp-0x570]\n
    unsigned int *v57;  // [bp-0x568]\n
    struct struct_1 **v58;  // [bp-0x560]\n
    char v59;  // [bp-0x558]\n
    char v60[8];  // [bp-0x538]\n
    unsigned int v61;  // [bp-0x530]\n
    unsigned int *v62;  // [bp-0x528]\n
    struct struct_1 **v63;  // [bp-0x520]\n
    unsigned long v64;  // [bp-0x518]\n
    char v65;  // [bp-0x509]\n
    unsigned int *v66;  // [bp-0x508]\n
    struct struct_1 **v67;  // [bp-0x500]\n
    unsigned long v68;  // [bp-0x4f8]\n
    char v69;  // [bp-0x4e9]\n
    unsigned int *v70;  // [bp-0x4e8]\n
    struct struct_1 **v71;  // [bp-0x4e0]\n
    unsigned long v72;  // [bp-0x4d8]\n
    char v73;  // [bp-0x4c9]\n
    unsigned int *v74;  // [bp-0x4c8]\n
    struct struct_1 **v75;  // [bp-0x4c0]\n
    char *v76;  // [bp-0x4b8]\n
    unsigned int v77;  // [bp-0x4ac]\n
    unsigned int *v78;  // [bp-0x4a8]\n
    struct struct_1 **v79;  // [bp-0x4a0]\n
    char *v80;  // [bp-0x498]\n
    unsigned int v81;  // [bp-0x48c]\n
    unsigned int *v82;  // [bp-0x488]\n
    struct struct_1 **v83;  // [bp-0x480]\n
    char v84;  // [bp-0x475]\n
    char v85;  // [bp-0x471]\n
    unsigned int *v86;  // [bp-0x470]\n
    struct struct_1 **v87;  // [bp-0x468]\n
    char v88;  // [bp-0x45d]\n
    char v89;  // [bp-0x459]\n
    unsigned int *v90;  // [bp-0x458]\n
    struct struct_1 **v91;  // [bp-0x450]\n
    char v92;  // [bp-0x445]\n
    char v93;  // [bp-0x441]\n
    unsigned int *v94;  // [bp-0x440]\n
    struct struct_1 **v95;  // [bp-0x438]\n
    char v96;  // [bp-0x42d]\n
    char v97;  // [bp-0x429]\n
    unsigned int *v98;  // [bp-0x428]\n
    struct struct_1 **v99;  // [bp-0x420]\n
    char v100;  // [bp-0x418]\n
    unsigned int v101;  // [bp-0x400]\n
    unsigned int *v102;  // [bp-0x3f8]\n
    struct struct_1 **v103;  // [bp-0x3f0]\n
    char v104;  // [bp-0x3e8]\n
    unsigned int v105;  // [bp-0x3d0]\n
    unsigned int *v106;  // [bp-0x3c8]\n
    struct struct_1 **v107;  // [bp-0x3c0]\n
    char v108;  // [bp-0x3b8]\n
    unsigned int v109;  // [bp-0x3a0]\n
    unsigned int *v110;  // [bp-0x398]\n
    struct struct_1 **v111;  // [bp-0x390]\n
    char v112;  // [bp-0x388]\n
    unsigned int v113;  // [bp-0x37c]\n
    unsigned int *v114;  // [bp-0x378]\n
    struct struct_1 **v115;  // [bp-0x370]\n
    char v116;  // [bp-0x368]\n
    unsigned int v117;  // [bp-0x35c]\n
    unsigned int *v118;  // [bp-0x358]\n
    struct struct_1 **v119;  // [bp-0x350]\n
    char v120;  // [bp-0x348]\n
    unsigned int v121;  // [bp-0x33c]\n
    unsigned int *v122;  // [bp-0x338]\n
    struct struct_1 **v123;  // [bp-0x330]\n
    char v124;  // [bp-0x328]\n
    unsigned int v125;  // [bp-0x31c]\n
    unsigned int *v126;  // [bp-0x318]\n
    struct struct_1 **v127;  // [bp-0x310]\n
    unsigned long v128;  // [bp-0x308]\n
    unsigned short v129;  // [bp-0x2fa]\n
    unsigned int *v130;  // [bp-0x2f8]\n
    struct struct_1 **v131;  // [bp-0x2f0]\n
    unsigned long v132;  // [bp-0x2e8]\n
    unsigned short v133;  // [bp-0x2da]\n
    unsigned int *v134;  // [bp-0x2d8]\n
    struct struct_1 **v135;  // [bp-0x2d0]\n
    unsigned long v136;  // [bp-0x2c8]\n
    unsigned short v137;  // [bp-0x2ba]\n
    unsigned int *v138;  // [bp-0x2b8]\n
    struct struct_1 **v139;  // [bp-0x2b0]\n
    unsigned long v140;  // [bp-0x2a8]\n
    unsigned short v141;  // [bp-0x29a]\n
    unsigned int *v142;  // [bp-0x298]\n
    struct struct_1 **v143;  // [bp-0x290]\n
    unsigned long v144;  // [bp-0x288]\n
    unsigned short v145;  // [bp-0x27a]\n
    unsigned int *v146;  // [bp-0x278]\n
    struct struct_1 **v147;  // [bp-0x270]\n
    unsigned long v148;  // [bp-0x268]\n
    unsigned short v149;  // [bp-0x25a]\n
    unsigned int *v150;  // [bp-0x258]\n
    struct struct_1 **v151;  // [bp-0x250]\n
    unsigned long v152;  // [bp-0x248]\n
    unsigned short v153;  // [bp-0x23a]\n
    unsigned int *v154;  // [bp-0x238]\n
    struct struct_1 **v155;  // [bp-0x230]\n
    unsigned long v156;  // [bp-0x228]\n
    unsigned short v157;  // [bp-0x21a]\n
    unsigned int *v158;  // [bp-0x218]\n
    struct struct_1 **v159;  // [bp-0x210]\n
    unsigned long v160;  // [bp-0x208]\n
    unsigned short v161;  // [bp-0x1fa]\n
    unsigned int *v162;  // [bp-0x1f8]\n
    struct struct_1 **v163;  // [bp-0x1f0]\n
    unsigned long v164;  // [bp-0x1e8]\n
    unsigned short v165;  // [bp-0x1da]\n
    unsigned int *v166;  // [bp-0x1d8]\n
    struct struct_1 **v167;  // [bp-0x1d0]\n
    char v168;  // [bp-0x1c4]\n
    char v169[4];  // [bp-0x1b8]\n
    unsigned int v170;  // [bp-0x1ac]\n
    unsigned int *v171;  // [bp-0x1a8]\n
    struct struct_1 **v172;  // [bp-0x1a0]\n
    char v173;  // [bp-0x194]\n
    char v174[4];  // [bp-0x188]\n
    unsigned int v175;  // [bp-0x17c]\n
    unsigned int *v176;  // [bp-0x178]\n
    struct struct_1 **v177;  // [bp-0x170]\n
    char v178;  // [bp-0x164]\n
    char v179[4];  // [bp-0x158]\n
    unsigned int v180;  // [bp-0x14c]\n
    unsigned int *v181;  // [bp-0x148]\n
    struct struct_1 **v182;  // [bp-0x140]\n
    char v183;  // [bp-0x134]\n
    char v184[4];  // [bp-0x128]\n
    unsigned int v185;  // [bp-0x11c]\n
    unsigned int *v186;  // [bp-0x118]\n
    struct struct_1 **v187;  // [bp-0x110]\n
    char *v188;  // [bp-0x108]\n
    unsigned int v189;  // [bp-0xfc]\n
    unsigned int *v190;  // [bp-0xf8]\n
    struct struct_1 **v191;  // [bp-0xf0]\n
    char v192;  // [bp-0xe8]\n
    unsigned int v193;  // [bp-0xd0]\n
    unsigned int *v194;  // [bp-0xc8]\n
    struct struct_1 **v195;  // [bp-0xc0]\n
    char v196;  // [bp-0xb8]\n
    unsigned int v197;  // [bp-0xa0]\n
    unsigned int *v198;  // [bp-0x98]\n
    struct struct_1 **v199;  // [bp-0x90]\n
    char v200;  // [bp-0x88]\n
    unsigned int v201;  // [bp-0x70]\n
    unsigned int *v202;  // [bp-0x68]\n
    struct struct_1 **v203;  // [bp-0x60]\n
    char v204;  // [bp-0x58]\n
    unsigned int v205;  // [bp-0x40]\n
    unsigned int *v206;  // [bp-0x38]\n
    struct struct_1 **v207;  // [bp-0x30]\n
    unsigned long v208;  // [bp-0x28]\n
    char v209;  // [bp-0x19]\n
    unsigned int *v210;  // [bp-0x18]\n
    struct struct_1 **v211;  // [bp-0x10]\n
    unsigned int *v213;  // rax\n
    struct struct_1 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_1 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_1 **v218;  // rax\n
    struct struct_1 **v219;  // rax\n
    unsigned int *v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_1 **v222;  // rax\n
    struct struct_1 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_1 **v226;  // rax\n
    unsigned int *v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_1 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_1 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_1 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_1 **v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_1 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_1 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_1 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_1 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_1 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_1 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_1 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_1 **v252;  // rax\n
    struct struct_1 **v253;  // rax\n
    unsigned int *v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_1 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_1 **v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_1 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_1 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    struct struct_1 **v264;  // rax\n
    unsigned int *v265;  // rax\n
    struct struct_1 **v266;  // rax\n
    unsigned int *v267;  // rax\n
    struct struct_1 **v268;  // rax\n
    unsigned int *v269;  // rax\n
    struct struct_1 **v270;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_1 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    struct struct_1 **v274;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_1 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    struct struct_1 **v278;  // rax\n
    unsigned int *v279;  // rax\n
    struct struct_1 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_1 **v282;  // rax\n
    unsigned int *v283;  // rax\n
    struct struct_1 **v284;  // rax\n
    unsigned int *v285;  // rax\n
    struct struct_1 **v286;  // rax\n
    unsigned int *v287;  // rax\n
    struct struct_1 **v288;  // rax\n
    unsigned int *v289;  // rax\n
    struct struct_1 **v290;  // rax\n
    unsigned int *v291;  // rax\n
    struct struct_1 **v292;  // rax\n
    unsigned int *v293;  // rax\n
    struct struct_1 **v294;  // rax\n
    unsigned int *v295;  // rax\n
    struct struct_1 **v296;  // rax\n
    unsigned int *v297;  // rax\n
    struct struct_1 **v298;  // rax\n
    struct struct_1 **v300;  // rax\n
    unsigned int *v302;  // rax\n
    unsigned int *v303;  // rax\n
    struct struct_1 **v304;  // rax\n
    unsigned int *v305;  // rax\n
    struct struct_1 **v306;  // rax\n
    unsigned int *v307;  // rax\n
    struct struct_1 **v308;  // rax\n
    struct struct_1 **v309;  // rax\n
    unsigned int *v310;  // rax\n
    unsigned int *v311;  // rax\n
    struct struct_1 **v312;  // rax\n
    unsigned int *v313;  // rax\n
    struct struct_1 **v314;  // rax\n
    unsigned int *v315;  // rax\n
    struct struct_1 **v316;  // rax\n
    unsigned int *v317;  // rax\n
    struct struct_1 **v318;  // rax\n
    unsigned int *v319;  // rax\n
    struct struct_1 **v320;  // rax\n
    unsigned int *v321;  // rax\n
    struct struct_1 **v322;  // rax\n
    unsigned int *v323;  // rax\n
    struct struct_1 **v324;  // rax\n
    struct struct_1 **v326;  // rax\n
    unsigned int *v328;  // rax\n
    unsigned int *v329;  // rax, Other Possible Types: unsigned long\n
\n
    v37 = cgc__cookie;\n
    v36 = -1;\n
    if (cgc_sendline(1, \"===llamasmolt===\", 16) < 0)\n
        cgc__terminate(1);\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = *(&*(v167));\n
    v213 = v166;\n
    *(v213) = *(v213) - 2;\n
    v214 = v167;\n
    *(v214) = *(v214) + 2;\n
    if (v165 <= *(v166) && !(!v165))\n
        goto LABEL_4a3a2c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a3a2c:\n
    v164 = cgc_calloc(v165);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v164, *(v167), v165);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v215 = v166;\n
    *(v215) = *(v215) - v165;\n
    v216 = v167;\n
    *(v216) = &(*(v216))[v165];\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    v75 = a0;\n
    v74 = a1;\n
    if (*(v74) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(v75)->field_0;\n
    v217 = v74;\n
    *(v217) = *(v217) - 1;\n
    v218 = v75;\n
    *(v218) = *(v218) + 1;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_4a3bfa;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a3bfa:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v219 = v75;\n
    *(v219) = &(*(v219))[v73];\n
    v220 = v74;\n
    *(v220) = *(v220) - v73;\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v211 = a0;\n
    v210 = a1;\n
    if (*(v210) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v209 = *(v211)->field_0;\n
    v221 = v210;\n
    *(v221) = *(v221) - 1;\n
    v222 = v211;\n
    *(v222) = *(v222) + 1;\n
    if (v209 <= *(v210) && !(!v209))\n
        goto LABEL_4a3daa;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a3daa:\n
    v208 = cgc_calloc(v209);\n
    if (!v208)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v208, *(v211), v209);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v223 = v211;\n
    *(v223) = &(*(v223))[v209];\n
    v224 = v210;\n
    *(v224) = *(v224) - v209;\n
    cgc_checkheap();\n
    cgc_free(v208);\n
    v191 = a0;\n
    v190 = a1;\n
    if (*(v190) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v190) >= 128)\n
        v35 = 128;\n
    else\n
        v35 = *(v190);\n
    v189 = v35;\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v188 = cgc_calloc(134);\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v188, \"Str: \");\n
    cgc_strncpy(v188 + 5, *(v191), v189);\n
    v226 = v191;\n
    *(v226) = &(*(v226))[4 + cgc_strlen(v188)];\n
    v228 = v190;\n
    *(v228) = *(v228) - (cgc_strlen(v188) + -4);\n
    cgc_checkheap();\n
    cgc_free(v188);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 4);\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(v99)->field_0;\n
    cgc_uint2str(&v96, 4, v97);\n
    v34 = &v96;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v229 = v98;\n
    *(v229) = *(v229) - 1;\n
    v230 = v99;\n
    *(v230) = *(v230) + 1;\n
    v207 = a0;\n
    v206 = a1;\n
    memset(&v204, 0, 21);\n
    if (*(v206) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v205) = *(&*(v207));\n
    cgc_uint2str(&v204, 21, *(&v205));\n
    v33 = &v204;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v204)) < 0)\n
        cgc__terminate(1);\n
    v231 = v206;\n
    *(v231) = *(v231) - 8;\n
    v232 = v207;\n
    *(v232) = *(v232) + 8;\n
    v203 = a0;\n
    v202 = a1;\n
    memset(&v200, 0, 21);\n
    if (*(v202) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v201) = *(&*(v203));\n
    cgc_uint2str(&v200, 21, *(&v201));\n
    v32 = &v200;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v200)) < 0)\n
        cgc__terminate(1);\n
    v233 = v202;\n
    *(v233) = *(v233) - 8;\n
    v234 = v203;\n
    *(v234) = *(v234) + 8;\n
    v139 = a0;\n
    v138 = a1;\n
    if (*(v138) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v137 = *(&*(v139));\n
    v235 = v138;\n
    *(v235) = *(v235) - 2;\n
    v236 = v139;\n
    *(v236) = *(v236) + 2;\n
    if (v137 <= *(v138) && !(!v137))\n
        goto LABEL_4a4412;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a4412:\n
    v136 = cgc_calloc(v137);\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v136, *(v139), v137);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v237 = v138;\n
    *(v237) = *(v237) - v137;\n
    v238 = v139;\n
    *(v238) = &(*(v238))[v137];\n
    cgc_checkheap();\n
    cgc_free(v136);\n
    v63 = a0;\n
    v62 = a1;\n
    *(&v60[0]) = *(v63);\n
    memset(&v59, 0, 21);\n
    if (*(v62) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if (v60[0] << 56)\n
    {\n
        v31 = 0;\n
        if (v60[1] << 48)\n
        {\n
            v31 = 0;\n
            if (v60[2] << 40)\n
            {\n
                v31 = 0;\n
                if (v60[3] << 32)\n
                {\n
                    v31 = 0;\n
                    if ((v60[4] << 24))\n
                    {\n
                        v31 = 0;\n
                        if ((v60[5] << 16))\n
                        {\n
                            v31 = 0;\n
                            if ((v60[6] << 8))\n
                                v31 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v61) = v31 & 1;\n
    cgc_uint2str(&v59, 21, *(&v61));\n
    v30 = &v59;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v59)) < 0)\n
        cgc__terminate(1);\n
    v239 = v62;\n
    *(v239) = *(v239) - 8;\n
    v240 = v63;\n
    *(v240) = *(v240) + 8;\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v109) = *(&*(v111));\n
    cgc_uint2str(&v108, 21, *(&v109));\n
    v29 = &v108;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v241 = v110;\n
    *(v241) = *(v241) - 8;\n
    v242 = v111;\n
    *(v242) = *(v242) + 8;\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(&*(v123));\n
    cgc_uint2str(&v120, 12, v121);\n
    v28 = &v120;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v243 = v122;\n
    *(v243) = *(v243) - 4;\n
    v244 = v123;\n
    *(v244) = *(v244) + 4;\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = *(&*(v163));\n
    v245 = v162;\n
    *(v245) = *(v245) - 2;\n
    v246 = v163;\n
    *(v246) = *(v246) + 2;\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_4a4a03;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a4a03:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v247 = v162;\n
    *(v247) = *(v247) - v161;\n
    v248 = v163;\n
    *(v248) = &(*(v248))[v161];\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 21);\n
    if (*(v106) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v105) = *(&*(v107));\n
    cgc_uint2str(&v104, 21, *(&v105));\n
    v27 = &v104;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v249 = v106;\n
    *(v249) = *(v249) - 8;\n
    v250 = v107;\n
    *(v250) = *(v250) + 8;\n
    v71 = a0;\n
    v70 = a1;\n
    if (*(v70) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(v71)->field_0;\n
    v251 = v70;\n
    *(v251) = *(v251) - 1;\n
    v252 = v71;\n
    *(v252) = *(v252) + 1;\n
    if (v69 <= *(v70) && !(!v69))\n
        goto LABEL_4a4cdb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a4cdb:\n
    v68 = cgc_calloc(v69);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v68, *(v71), v69);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v253 = v71;\n
    *(v253) = &(*(v253))[v69];\n
    v254 = v70;\n
    *(v254) = *(v254) - v69;\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    v127 = a0;\n
    v126 = a1;\n
    memset(&v124, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = *(&*(v127));\n
    cgc_uint2str(&v124, 12, v125);\n
    v26 = &v124;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v255 = v126;\n
    *(v255) = *(v255) - 4;\n
    v256 = v127;\n
    *(v256) = *(v256) + 4;\n
    v135 = a0;\n
    v134 = a1;\n
    if (*(v134) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v133 = *(&*(v135));\n
    v257 = v134;\n
    *(v257) = *(v257) - 2;\n
    v258 = v135;\n
    *(v258) = *(v258) + 2;\n
    if (v133 <= *(v134) && !(!v133))\n
        goto LABEL_4a4fb5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a4fb5:\n
    v132 = cgc_calloc(v133);\n
    if (!v132)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v132, *(v135), v133);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v259 = v134;\n
    *(v259) = *(v259) - v133;\n
    v260 = v135;\n
    *(v260) = &(*(v260))[v133];\n
    cgc_checkheap();\n
    cgc_free(v132);\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v101) = *(&*(v103));\n
    cgc_uint2str(&v100, 21, *(&v101));\n
    v25 = &v100;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v261 = v102;\n
    *(v261) = *(v261) - 8;\n
    v262 = v103;\n
    *(v262) = *(v262) + 8;\n
    v159 = a0;\n
    v158 = a1;\n
    if (*(v158) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v157 = *(&*(v159));\n
    v263 = v158;\n
    *(v263) = *(v263) - 2;\n
    v264 = v159;\n
    *(v264) = *(v264) + 2;\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_4a528f;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a528f:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v265 = v158;\n
    *(v265) = *(v265) - v157;\n
    v266 = v159;\n
    *(v266) = &(*(v266))[v157];\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v199 = a0;\n
    v198 = a1;\n
    memset(&v196, 0, 21);\n
    if (*(v198) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v197) = *(&*(v199));\n
    cgc_uint2str(&v196, 21, *(&v197));\n
    v24 = &v196;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v196)) < 0)\n
        cgc__terminate(1);\n
    v267 = v198;\n
    *(v267) = *(v267) - 8;\n
    v268 = v199;\n
    *(v268) = *(v268) + 8;\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 12);\n
    if (*(v118) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(&*(v119));\n
    cgc_uint2str(&v116, 12, v117);\n
    v23 = &v116;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v269 = v118;\n
    *(v269) = *(v269) - 4;\n
    v270 = v119;\n
    *(v270) = *(v270) + 4;\n
    v53 = a0;\n
    v52 = a1;\n
    *(&v50) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if ((v50[0] << 8))\n
        v22 = v50[1];\n
    v51 = v22 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v21 = &v49;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v271 = v52;\n
    *(v271) = *(v271) - 2;\n
    v272 = v53;\n
    *(v272) = *(v272) + 2;\n
    v155 = a0;\n
    v154 = a1;\n
    if (*(v154) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v153 = *(&*(v155));\n
    v273 = v154;\n
    *(v273) = *(v273) - 2;\n
    v274 = v155;\n
    *(v274) = *(v274) + 2;\n
    if (v153 <= *(v154) && !(!v153))\n
        goto LABEL_4a57ae;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a57ae:\n
    v152 = cgc_calloc(v153);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v152, *(v155), v153);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v275 = v154;\n
    *(v275) = *(v275) - v153;\n
    v276 = v155;\n
    *(v276) = &(*(v276))[v153];\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    v187 = a0;\n
    v186 = a1;\n
    *(&v184) = *(v187);\n
    memset(&v183, 0, 12);\n
    if (*(v186) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if ((v184[0] << 24))\n
    {\n
        v20 = 0;\n
        if ((v184[1] << 16))\n
        {\n
            v20 = 0;\n
            if ((v184[2] << 8))\n
                v20 = v184[3];\n
        }\n
    }\n
    v185 = v20 & 1;\n
    cgc_uint2str(&v183, 12, v185);\n
    v19 = &v183;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v183)) < 0)\n
        cgc__terminate(1);\n
    v277 = v186;\n
    *(v277) = *(v277) - 4;\n
    v278 = v187;\n
    *(v278) = *(v278) + 4;\n
    v131 = a0;\n
    v130 = a1;\n
    if (*(v130) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(&*(v131));\n
    v279 = v130;\n
    *(v279) = *(v279) - 2;\n
    v280 = v131;\n
    *(v280) = *(v280) + 2;\n
    if (v129 <= *(v130) && !(!v129))\n
        goto LABEL_4a5b02;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a5b02:\n
    v128 = cgc_calloc(v129);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v128, *(v131), v129);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v281 = v130;\n
    *(v281) = *(v281) - v129;\n
    v282 = v131;\n
    *(v282) = &(*(v282))[v129];\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(&*(v115));\n
    cgc_uint2str(&v112, 12, v113);\n
    v18 = &v112;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v283 = v114;\n
    *(v283) = *(v283) - 4;\n
    v284 = v115;\n
    *(v284) = *(v284) + 4;\n
    v151 = a0;\n
    v150 = a1;\n
    if (*(v150) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v149 = *(&*(v151));\n
    v285 = v150;\n
    *(v285) = *(v285) - 2;\n
    v286 = v151;\n
    *(v286) = *(v286) + 2;\n
    if (v149 <= *(v150) && !(!v149))\n
        goto LABEL_4a5dd3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a5dd3:\n
    v148 = cgc_calloc(v149);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v148, *(v151), v149);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v287 = v150;\n
    *(v287) = *(v287) - v149;\n
    v288 = v151;\n
    *(v288) = &(*(v288))[v149];\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    v182 = a0;\n
    v181 = a1;\n
    *(&v179) = *(v182);\n
    memset(&v178, 0, 12);\n
    if (*(v181) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if ((v179[0] << 24))\n
    {\n
        v17 = 0;\n
        if ((v179[1] << 16))\n
        {\n
            v17 = 0;\n
            if ((v179[2] << 8))\n
                v17 = v179[3];\n
        }\n
    }\n
    v180 = v17 & 1;\n
    cgc_uint2str(&v178, 12, v180);\n
    v16 = &v178;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v178)) < 0)\n
        cgc__terminate(1);\n
    v289 = v181;\n
    *(v289) = *(v289) - 4;\n
    v290 = v182;\n
    *(v290) = *(v290) + 4;\n
    v177 = a0;\n
    v176 = a1;\n
    *(&v174) = *(v177);\n
    memset(&v173, 0, 12);\n
    if (*(v176) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v174[0] << 24))\n
    {\n
        v15 = 0;\n
        if ((v174[1] << 16))\n
        {\n
            v15 = 0;\n
            if ((v174[2] << 8))\n
                v15 = v174[3];\n
        }\n
    }\n
    v175 = v15 & 1;\n
    cgc_uint2str(&v173, 12, v175);\n
    v14 = &v173;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v173)) < 0)\n
        cgc__terminate(1);\n
    v291 = v176;\n
    *(v291) = *(v291) - 4;\n
    v292 = v177;\n
    *(v292) = *(v292) + 4;\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 4);\n
    if (*(v94) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(v95)->field_0;\n
    cgc_uint2str(&v92, 4, v93);\n
    v13 = &v92;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v293 = v94;\n
    *(v293) = *(v293) - 1;\n
    v294 = v95;\n
    *(v294) = *(v294) + 1;\n
    v91 = a0;\n
    v90 = a1;\n
    memset(&v88, 0, 4);\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = *(v91)->field_0;\n
    cgc_uint2str(&v88, 4, v89);\n
    v12 = &v88;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v88)) < 0)\n
        cgc__terminate(1);\n
    v295 = v90;\n
    *(v295) = *(v295) - 1;\n
    v296 = v91;\n
    *(v296) = *(v296) + 1;\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 4);\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = *(v87)->field_0;\n
    cgc_uint2str(&v84, 4, v85);\n
    v11 = &v84;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v297 = v86;\n
    *(v297) = *(v297) - 1;\n
    v298 = v87;\n
    *(v298) = *(v298) + 1;\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v82) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v82);\n
    v81 = v10;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v80, \"Str: \");\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v300 = v83;\n
    *(v300) = &(*(v300))[4 + cgc_strlen(v80)];\n
    v302 = v82;\n
    *(v302) = *(v302) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v147 = a0;\n
    v146 = a1;\n
    if (*(v146) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = *(&*(v147));\n
    v303 = v146;\n
    *(v303) = *(v303) - 2;\n
    v304 = v147;\n
    *(v304) = *(v304) + 2;\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_4a67a4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a67a4:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v305 = v146;\n
    *(v305) = *(v305) - v145;\n
    v306 = v147;\n
    *(v306) = &(*(v306))[v145];\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v67 = a0;\n
    v66 = a1;\n
    if (*(v66) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(v67)->field_0;\n
    v307 = v66;\n
    *(v307) = *(v307) - 1;\n
    v308 = v67;\n
    *(v308) = *(v308) + 1;\n
    if (v65 <= *(v66) && !(!v65))\n
        goto LABEL_4a6972;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a6972:\n
    v64 = cgc_calloc(v65);\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v64, *(v67), v65);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v309 = v67;\n
    *(v309) = &(*(v309))[v65];\n
    v310 = v66;\n
    *(v310) = *(v310) - v65;\n
    cgc_checkheap();\n
    cgc_free(v64);\n
    v48 = a0;\n
    v47 = a1;\n
    *(&v45) = *(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v45[0] << 8))\n
        v9 = v45[1];\n
    v46 = v9 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v8 = &v44;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v44)) < 0)\n
        cgc__terminate(1);\n
    v311 = v47;\n
    *(v311) = *(v311) - 2;\n
    v312 = v48;\n
    *(v312) = *(v312) + 2;\n
    v143 = a0;\n
    v142 = a1;\n
    if (*(v142) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = *(&*(v143));\n
    v313 = v142;\n
    *(v313) = *(v313) - 2;\n
    v314 = v143;\n
    *(v314) = *(v314) + 2;\n
    if (v141 <= *(v142) && !(!v141))\n
        goto LABEL_4a6c8a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a6c8a:\n
    v140 = cgc_calloc(v141);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v140, *(v143), v141);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v315 = v142;\n
    *(v315) = *(v315) - v141;\n
    v316 = v143;\n
    *(v316) = &(*(v316))[v141];\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    v43 = a0;\n
    v42 = a1;\n
    v40 = &*(v43)->field_0;\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((*(v40) << 8))\n
        v7 = v40[1];\n
    v41 = v7 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v6 = &v39;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v317 = v42;\n
    *(v317) = *(v317) - 2;\n
    v318 = v43;\n
    *(v318) = *(v318) + 2;\n
    v172 = a0;\n
    v171 = a1;\n
    *(&v169) = *(v172);\n
    memset(&v168, 0, 12);\n
    if (*(v171) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v169[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v169[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v169[2] << 8))\n
                v5 = v169[3];\n
        }\n
    }\n
    v170 = v5 & 1;\n
    cgc_uint2str(&v168, 12, v170);\n
    v4 = &v168;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v168)) < 0)\n
        cgc__terminate(1);\n
    v319 = v171;\n
    *(v319) = *(v319) - 4;\n
    v320 = v172;\n
    *(v320) = *(v320) + 4;\n
    v195 = a0;\n
    v194 = a1;\n
    memset(&v192, 0, 21);\n
    if (*(v194) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v193) = *(&*(v195));\n
    cgc_uint2str(&v192, 21, *(&v193));\n
    v3 = &v192;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v192)) < 0)\n
        cgc__terminate(1);\n
    v321 = v194;\n
    *(v321) = *(v321) - 8;\n
    v322 = v195;\n
    *(v322) = *(v322) + 8;\n
    v58 = a0;\n
    v57 = a1;\n
    *(&v55[0]) = *(v58);\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if (v55[0] << 56)\n
    {\n
        v2 = 0;\n
        if (v55[1] << 48)\n
        {\n
            v2 = 0;\n
            if (v55[2] << 40)\n
            {\n
                v2 = 0;\n
                if (v55[3] << 32)\n
                {\n
                    v2 = 0;\n
                    if ((v55[4] << 24))\n
                    {\n
                        v2 = 0;\n
                        if ((v55[5] << 16))\n
                        {\n
                            v2 = 0;\n
                            if ((v55[6] << 8))\n
                                v2 = v55[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v56) = v2 & 1;\n
    cgc_uint2str(&v54, 21, *(&v56));\n
    v1 = &v54;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v323 = v57;\n
    *(v323) = *(v323) - 8;\n
    v324 = v58;\n
    *(v324) = *(v324) + 8;\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v78) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v78);\n
    v77 = v0;\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = cgc_calloc(134);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v76, \"Str: \");\n
    cgc_strncpy(v76 + 5, *(v79), v77);\n
    v326 = v79;\n
    *(v326) = &(*(v326))[4 + cgc_strlen(v76)];\n
    v328 = v78;\n
    *(v328) = *(v328) - (cgc_strlen(v76) + -4);\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v37 ^= cgc__cookie;\n
    if (v37)\n
        cgc___stack_cookie_fail();\n
    v329 = a1;\n
    if (*(a1) > 0 && v36 >= 0)\n
    {\n
        v329 = v36;\n
        if (v329 < 0)\n
            v329 = *(&(&v38)[8 * v36])(a0, a1);\n
    }\n
    return v329;\n
}\n
", "4879807:sub_4a75bf": null, "4879808:cgc_process_llamaJuletta": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c6290;\n
extern unsigned long long g_4c6298;\n
extern unsigned long long g_4c62a0;\n
\n
long long cgc_process_llamaJuletta(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x5d8]\n
    struct_1 *v1;  // [bp-0x5d0]\n
    struct_1 *v2;  // [bp-0x5c8]\n
    unsigned int v3;  // [bp-0x5bc]\n
    struct_1 *v4;  // [bp-0x5b8]\n
    unsigned int v5;  // [bp-0x5ac]\n
    struct_1 *v6;  // [bp-0x5a8]\n
    struct_1 *v7;  // [bp-0x5a0]\n
    struct_1 *v8;  // [bp-0x598]\n
    struct_1 *v9;  // [bp-0x590]\n
    unsigned int v10;  // [bp-0x588]\n
    unsigned int v11;  // [bp-0x584]\n
    struct_1 *v12;  // [bp-0x580]\n
    char v13;  // [bp-0x571]\n
    struct_1 *v14;  // [bp-0x570]\n
    struct_1 *v15;  // [bp-0x568]\n
    char v16;  // [bp-0x559]\n
    struct_1 *v17;  // [bp-0x558]\n
    char v18;  // [bp-0x549]\n
    struct_1 *v19;  // [bp-0x548]\n
    char v20;  // [bp-0x539]\n
    struct_1 *v21;  // [bp-0x538]\n
    char v22;  // [bp-0x529]\n
    struct_1 *v23;  // [bp-0x528]\n
    char v24;  // [bp-0x51d]\n
    unsigned int v25;  // [bp-0x51c]\n
    struct_1 *v26;  // [bp-0x518]\n
    struct_1 *v27;  // [bp-0x510]\n
    struct_1 *v28;  // [bp-0x508]\n
    unsigned int v29;  // [bp-0x4fc]\n
    struct_1 *v30;  // [bp-0x4f8]\n
    char v31;  // [bp-0x4e9]\n
    struct_1 *v32;  // [bp-0x4e8]\n
    unsigned int v33;  // [bp-0x4e0]\n
    unsigned int v34;  // [bp-0x4dc]\n
    unsigned long v35;  // [bp-0x4d8]\n
    unsigned long v36;  // [bp-0x4d0]\n
    unsigned long v37;  // [bp-0x4c8]\n
    char v38;  // [bp-0x4ae]\n
    char v39[2];  // [bp-0x4a8]\n
    unsigned short v40;  // [bp-0x49a]\n
    unsigned int *v41;  // [bp-0x498]\n
    struct struct_0 **v42;  // [bp-0x490]\n
    char v43;  // [bp-0x488]\n
    char v44[8];  // [bp-0x468]\n
    unsigned int v45;  // [bp-0x460]\n
    unsigned int *v46;  // [bp-0x458]\n
    struct struct_0 **v47;  // [bp-0x450]\n
    char v48;  // [bp-0x448]\n
    char v49[8];  // [bp-0x428]\n
    unsigned int v50;  // [bp-0x420]\n
    unsigned int *v51;  // [bp-0x418]\n
    struct struct_0 **v52;  // [bp-0x410]\n
    char v53;  // [bp-0x408]\n
    char v54[8];  // [bp-0x3e8]\n
    unsigned int v55;  // [bp-0x3e0]\n
    unsigned int *v56;  // [bp-0x3d8]\n
    struct struct_0 **v57;  // [bp-0x3d0]\n
    unsigned long v58;  // [bp-0x3c8]\n
    char v59;  // [bp-0x3b9]\n
    unsigned int *v60;  // [bp-0x3b8]\n
    struct struct_0 **v61;  // [bp-0x3b0]\n
    unsigned long v62;  // [bp-0x3a8]\n
    char v63;  // [bp-0x399]\n
    unsigned int *v64;  // [bp-0x398]\n
    struct struct_0 **v65;  // [bp-0x390]\n
    char *v66;  // [bp-0x388]\n
    unsigned int *v67;  // [bp-0x380]\n
    struct struct_0 **v68;  // [bp-0x378]\n
    char *v69;  // [bp-0x370]\n
    unsigned int v70;  // [bp-0x364]\n
    unsigned int *v71;  // [bp-0x360]\n
    struct struct_0 **v72;  // [bp-0x358]\n
    char v73;  // [bp-0x350]\n
    unsigned short v74;  // [bp-0x34a]\n
    unsigned int *v75;  // [bp-0x348]\n
    struct struct_0 **v76;  // [bp-0x340]\n
    char v77;  // [bp-0x338]\n
    unsigned short v78;  // [bp-0x332]\n
    unsigned int *v79;  // [bp-0x330]\n
    struct struct_0 **v80;  // [bp-0x328]\n
    char v81;  // [bp-0x320]\n
    unsigned short v82;  // [bp-0x31a]\n
    unsigned int *v83;  // [bp-0x318]\n
    struct struct_0 **v84;  // [bp-0x310]\n
    char v85;  // [bp-0x308]\n
    unsigned short v86;  // [bp-0x302]\n
    unsigned int *v87;  // [bp-0x300]\n
    struct struct_0 **v88;  // [bp-0x2f8]\n
    char v89;  // [bp-0x2ed]\n
    char v90;  // [bp-0x2e9]\n
    unsigned int *v91;  // [bp-0x2e8]\n
    struct struct_0 **v92;  // [bp-0x2e0]\n
    unsigned short *v93;  // [bp-0x2d8]\n
    unsigned int *v94;  // [bp-0x2d0]\n
    struct struct_0 **v95;  // [bp-0x2c8]\n
    char *v96;  // [bp-0x2c0]\n
    unsigned int *v97;  // [bp-0x2b8]\n
    struct struct_0 **v98;  // [bp-0x2b0]\n
    unsigned short *v99;  // [bp-0x2a8]\n
    unsigned int *v100;  // [bp-0x2a0]\n
    struct struct_0 **v101;  // [bp-0x298]\n
    char v102[8];  // [bp-0x290]\n
    unsigned int *v103;  // [bp-0x288]\n
    struct struct_0 **v104;  // [bp-0x280]\n
    char v105;  // [bp-0x278]\n
    unsigned int v106;  // [bp-0x260]\n
    unsigned int *v107;  // [bp-0x258]\n
    struct struct_0 **v108;  // [bp-0x250]\n
    char v109;  // [bp-0x248]\n
    unsigned int v110;  // [bp-0x230]\n
    unsigned int *v111;  // [bp-0x228]\n
    struct struct_0 **v112;  // [bp-0x220]\n
    char v113;  // [bp-0x218]\n
    unsigned int v114;  // [bp-0x20c]\n
    unsigned int *v115;  // [bp-0x208]\n
    struct struct_0 **v116;  // [bp-0x200]\n
    char v117;  // [bp-0x1f8]\n
    unsigned int v118;  // [bp-0x1ec]\n
    unsigned int *v119;  // [bp-0x1e8]\n
    struct struct_0 **v120;  // [bp-0x1e0]\n
    char v121;  // [bp-0x1d8]\n
    unsigned int v122;  // [bp-0x1cc]\n
    unsigned int *v123;  // [bp-0x1c8]\n
    struct struct_0 **v124;  // [bp-0x1c0]\n
    char v125;  // [bp-0x1b8]\n
    unsigned int v126;  // [bp-0x1ac]\n
    unsigned int *v127;  // [bp-0x1a8]\n
    struct struct_0 **v128;  // [bp-0x1a0]\n
    char v129;  // [bp-0x198]\n
    unsigned int v130;  // [bp-0x18c]\n
    unsigned int *v131;  // [bp-0x188]\n
    struct struct_0 **v132;  // [bp-0x180]\n
    char v133;  // [bp-0x178]\n
    unsigned int v134;  // [bp-0x16c]\n
    unsigned int *v135;  // [bp-0x168]\n
    struct struct_0 **v136;  // [bp-0x160]\n
    unsigned long v137;  // [bp-0x158]\n
    unsigned short v138;  // [bp-0x14a]\n
    unsigned int *v139;  // [bp-0x148]\n
    struct struct_0 **v140;  // [bp-0x140]\n
    char v141;  // [bp-0x134]\n
    char v142[4];  // [bp-0x128]\n
    unsigned int v143;  // [bp-0x11c]\n
    unsigned int *v144;  // [bp-0x118]\n
    struct struct_0 **v145;  // [bp-0x110]\n
    char v146;  // [bp-0x104]\n
    char v147[4];  // [bp-0xf8]\n
    unsigned int v148;  // [bp-0xec]\n
    unsigned int *v149;  // [bp-0xe8]\n
    struct struct_0 **v150;  // [bp-0xe0]\n
    char v151;  // [bp-0xd4]\n
    char v152[8];  // [bp-0xc8]\n
    unsigned int v153;  // [bp-0xbc]\n
    unsigned int *v154;  // [bp-0xb8]\n
    struct struct_0 **v155;  // [bp-0xb0]\n
    char *v156;  // [bp-0xa8]\n
    unsigned int v157;  // [bp-0x9c]\n
    unsigned int *v158;  // [bp-0x98]\n
    struct struct_0 **v159;  // [bp-0x90]\n
    char *v160;  // [bp-0x88]\n
    unsigned int v161;  // [bp-0x7c]\n
    unsigned int *v162;  // [bp-0x78]\n
    struct struct_0 **v163;  // [bp-0x70]\n
    char *v164;  // [bp-0x68]\n
    unsigned int v165;  // [bp-0x5c]\n
    unsigned int *v166;  // [bp-0x58]\n
    struct struct_0 **v167;  // [bp-0x50]\n
    char *v168;  // [bp-0x48]\n
    unsigned int v169;  // [bp-0x3c]\n
    unsigned int *v170;  // [bp-0x38]\n
    struct struct_0 **v171;  // [bp-0x30]\n
    char *v172;  // [bp-0x28]\n
    unsigned int v173;  // [bp-0x1c]\n
    unsigned int *v174;  // [bp-0x18]\n
    struct struct_0 **v175;  // [bp-0x10]\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_0 **v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v226;  // rax\n
    unsigned int *v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v235;  // rax\n
    struct struct_0 **v236;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    unsigned int *v259;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax, Other Possible Types: unsigned long\n
\n
    v35 = g_4c6290;\n
    v36 = g_4c6298;\n
    v37 = g_4c62a0;\n
    v34 = cgc__cookie;\n
    v33 = -1;\n
    if (cgc_sendline(1, \"===llamaJuletta===\", 18) < 0)\n
        cgc__terminate(1);\n
    v104 = a0;\n
    v103 = a1;\n
    *(&v102[0]) = *(v104);\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v177 = v103;\n
    *(v177) = *(v177) - 2;\n
    v178 = v104;\n
    *(v178) = *(v178) + 2;\n
    v33 = *(&v102[0]);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 6, v86);\n
    v32 = &v85;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v179 = v87;\n
    *(v179) = *(v179) - 2;\n
    v180 = v88;\n
    *(v180) = *(v180) + 2;\n
    v42 = a0;\n
    v41 = a1;\n
    *(&v39) = *(v42);\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if ((v39[0] << 8))\n
        v31 = v39[1];\n
    v40 = v31 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v30 = &v38;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v38)) < 0)\n
        cgc__terminate(1);\n
    v181 = v41;\n
    *(v181) = *(v181) - 2;\n
    v182 = v42;\n
    *(v182) = *(v182) + 2;\n
    v101 = a0;\n
    v100 = a1;\n
    v99 = &*(v101);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v183 = v100;\n
    *(v183) = *(v183) - 2;\n
    v184 = v101;\n
    *(v184) = *(v184) + 2;\n
    v33 = *(v99);\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v71) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v71);\n
    v70 = v29;\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = cgc_calloc(134);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v69, \"Str: \");\n
    cgc_strncpy(v69 + 5, *(v72), v70);\n
    v186 = v72;\n
    *(v186) = &(*(v186))[4 + cgc_strlen(v69)];\n
    v188 = v71;\n
    *(v188) = *(v188) - (cgc_strlen(v69) + -4);\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 6);\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 6, v82);\n
    v28 = &v81;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v189 = v83;\n
    *(v189) = *(v189) - 2;\n
    v190 = v84;\n
    *(v190) = *(v190) + 2;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    cgc_uint2str(&v133, 12, v134);\n
    v27 = &v133;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v191 = v135;\n
    *(v191) = *(v191) - 4;\n
    v192 = v136;\n
    *(v192) = *(v192) + 4;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    cgc_uint2str(&v121, 12, v122);\n
    v26 = &v121;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v193 = v123;\n
    *(v193) = *(v193) - 4;\n
    v194 = v124;\n
    *(v194) = *(v194) + 4;\n
    v175 = a0;\n
    v174 = a1;\n
    if (*(v174) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v174) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v174);\n
    v173 = v25;\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v172 = cgc_calloc(134);\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v172, \"Str: \");\n
    cgc_strncpy(v172 + 5, *(v175), v173);\n
    v196 = v175;\n
    *(v196) = &(*(v196))[4 + cgc_strlen(v172)];\n
    v198 = v174;\n
    *(v198) = *(v198) - (cgc_strlen(v172) + -4);\n
    cgc_checkheap();\n
    cgc_free(v172);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v155 = a0;\n
    v154 = a1;\n
    *(&v152[0]) = *(v155);\n
    memset(&v151, 0, 12);\n
    if (*(v154) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = 0;\n
    if ((v152[0] << 24))\n
    {\n
        v24 = 0;\n
        if ((v152[1] << 16))\n
        {\n
            v24 = 0;\n
            if ((v152[2] << 8))\n
                v24 = v152[3];\n
        }\n
    }\n
    v153 = v24 & 1;\n
    cgc_uint2str(&v151, 12, v153);\n
    v23 = &v151;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v151)) < 0)\n
        cgc__terminate(1);\n
    v199 = v154;\n
    *(v199) = *(v199) - 4;\n
    v200 = v155;\n
    *(v200) = *(v200) + 4;\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54[0]) = *(v57);\n
    memset(&v53, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v22 = 0;\n
    if (v54[0] << 56)\n
    {\n
        v22 = 0;\n
        if (v54[1] << 48)\n
        {\n
            v22 = 0;\n
            if (v54[2] << 40)\n
            {\n
                v22 = 0;\n
                if (v54[3] << 32)\n
                {\n
                    v22 = 0;\n
                    if ((v54[4] << 24))\n
                    {\n
                        v22 = 0;\n
                        if ((v54[5] << 16))\n
                        {\n
                            v22 = 0;\n
                            if ((v54[6] << 8))\n
                                v22 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v55) = v22 & 1;\n
    cgc_uint2str(&v53, 21, *(&v55));\n
    v21 = &v53;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v201 = v56;\n
    *(v201) = *(v201) - 8;\n
    v202 = v57;\n
    *(v202) = *(v202) + 8;\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49[0]) = *(v52);\n
    memset(&v48, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v20 = 0;\n
    if (v49[0] << 56)\n
    {\n
        v20 = 0;\n
        if (v49[1] << 48)\n
        {\n
            v20 = 0;\n
            if (v49[2] << 40)\n
            {\n
                v20 = 0;\n
                if (v49[3] << 32)\n
                {\n
                    v20 = 0;\n
                    if ((v49[4] << 24))\n
                    {\n
                        v20 = 0;\n
                        if ((v49[5] << 16))\n
                        {\n
                            v20 = 0;\n
                            if ((v49[6] << 8))\n
                                v20 = v49[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v50) = v20 & 1;\n
    cgc_uint2str(&v48, 21, *(&v50));\n
    v19 = &v48;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v203 = v51;\n
    *(v203) = *(v203) - 8;\n
    v204 = v52;\n
    *(v204) = *(v204) + 8;\n
    v150 = a0;\n
    v149 = a1;\n
    *(&v147) = *(v150);\n
    memset(&v146, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v147[0] << 24))\n
    {\n
        v18 = 0;\n
        if ((v147[1] << 16))\n
        {\n
            v18 = 0;\n
            if ((v147[2] << 8))\n
                v18 = v147[3];\n
        }\n
    }\n
    v148 = v18 & 1;\n
    cgc_uint2str(&v146, 12, v148);\n
    v17 = &v146;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v146)) < 0)\n
        cgc__terminate(1);\n
    v205 = v149;\n
    *(v205) = *(v205) - 4;\n
    v206 = v150;\n
    *(v206) = *(v206) + 4;\n
    v65 = a0;\n
    v64 = a1;\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(v65)->field_0;\n
    v207 = v64;\n
    *(v207) = *(v207) - 1;\n
    v208 = v65;\n
    *(v208) = *(v208) + 1;\n
    if (v63 <= *(v64) && !(!v63))\n
        goto LABEL_4a88bd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a88bd:\n
    v62 = cgc_calloc(v63);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v62, *(v65), v63);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v209 = v65;\n
    *(v209) = &(*(v209))[v63];\n
    v210 = v64;\n
    *(v210) = *(v210) - v63;\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44[0]) = *(v47);\n
    memset(&v43, 0, 21);\n
    if (*(v46) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if (v44[0] << 56)\n
    {\n
        v16 = 0;\n
        if (v44[1] << 48)\n
        {\n
            v16 = 0;\n
            if (v44[2] << 40)\n
            {\n
                v16 = 0;\n
                if (v44[3] << 32)\n
                {\n
                    v16 = 0;\n
                    if ((v44[4] << 24))\n
                    {\n
                        v16 = 0;\n
                        if ((v44[5] << 16))\n
                        {\n
                            v16 = 0;\n
                            if ((v44[6] << 8))\n
                                v16 = v44[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v45) = v16 & 1;\n
    cgc_uint2str(&v43, 21, *(&v45));\n
    v15 = &v43;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v211 = v46;\n
    *(v211) = *(v211) - 8;\n
    v212 = v47;\n
    *(v212) = *(v212) + 8;\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 6);\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v78 = *(&*(v80));\n
    cgc_uint2str(&v77, 6, v78);\n
    v14 = &v77;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v213 = v79;\n
    *(v213) = *(v213) - 2;\n
    v214 = v80;\n
    *(v214) = *(v214) + 2;\n
    v145 = a0;\n
    v144 = a1;\n
    *(&v142) = *(v145);\n
    memset(&v141, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v142[0] << 24))\n
    {\n
        v13 = 0;\n
        if ((v142[1] << 16))\n
        {\n
            v13 = 0;\n
            if ((v142[2] << 8))\n
                v13 = v142[3];\n
        }\n
    }\n
    v143 = v13 & 1;\n
    cgc_uint2str(&v141, 12, v143);\n
    v12 = &v141;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v215 = v144;\n
    *(v215) = *(v215) - 4;\n
    v216 = v145;\n
    *(v216) = *(v216) + 4;\n
    v171 = a0;\n
    v170 = a1;\n
    if (*(v170) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v170) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v170);\n
    v169 = v11;\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v168 = cgc_calloc(134);\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v168, \"Str: \");\n
    cgc_strncpy(v168 + 5, *(v171), v169);\n
    v218 = v171;\n
    *(v218) = &(*(v218))[4 + cgc_strlen(v168)];\n
    v220 = v170;\n
    *(v220) = *(v220) - (cgc_strlen(v168) + -4);\n
    cgc_checkheap();\n
    cgc_free(v168);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(v61)->field_0;\n
    v221 = v60;\n
    *(v221) = *(v221) - 1;\n
    v222 = v61;\n
    *(v222) = *(v222) + 1;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_4a90e6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a90e6:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v223 = v61;\n
    *(v223) = &(*(v223))[v59];\n
    v224 = v60;\n
    *(v224) = *(v224) - v59;\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v166) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v166);\n
    v165 = v10;\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v164 = cgc_calloc(134);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v164, \"Str: \");\n
    cgc_strncpy(v164 + 5, *(v167), v165);\n
    v226 = v167;\n
    *(v226) = &(*(v226))[4 + cgc_strlen(v164)];\n
    v228 = v166;\n
    *(v228) = *(v228) - (cgc_strlen(v164) + -4);\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v9 = &v129;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v229 = v131;\n
    *(v229) = *(v229) - 4;\n
    v230 = v132;\n
    *(v230) = *(v230) + 4;\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    cgc_uint2str(&v125, 12, v126);\n
    v8 = &v125;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v231 = v127;\n
    *(v231) = *(v231) - 4;\n
    v232 = v128;\n
    *(v232) = *(v232) + 4;\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    cgc_uint2str(&v117, 12, v118);\n
    v7 = &v117;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v233 = v119;\n
    *(v233) = *(v233) - 4;\n
    v234 = v120;\n
    *(v234) = *(v234) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    memset(&v73, 0, 6);\n
    if (*(v75) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(&*(v76));\n
    cgc_uint2str(&v73, 6, v74);\n
    v6 = &v73;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v73)) < 0)\n
        cgc__terminate(1);\n
    v235 = v75;\n
    *(v235) = *(v235) - 2;\n
    v236 = v76;\n
    *(v236) = *(v236) + 2;\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v162) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v162);\n
    v161 = v5;\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v160 = cgc_calloc(134);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v160, \"Str: \");\n
    cgc_strncpy(v160 + 5, *(v163), v161);\n
    v238 = v163;\n
    *(v238) = &(*(v238))[4 + cgc_strlen(v160)];\n
    v240 = v162;\n
    *(v240) = *(v240) - (cgc_strlen(v160) + -4);\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 21);\n
    if (*(v111) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v110) = *(&*(v112));\n
    cgc_uint2str(&v109, 21, *(&v110));\n
    v4 = &v109;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v241 = v111;\n
    *(v241) = *(v241) - 8;\n
    v242 = v112;\n
    *(v242) = *(v242) + 8;\n
    v159 = a0;\n
    v158 = a1;\n
    if (*(v158) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v158) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v158);\n
    v157 = v3;\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v156 = cgc_calloc(134);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v156, \"Str: \");\n
    cgc_strncpy(v156 + 5, *(v159), v157);\n
    v244 = v159;\n
    *(v244) = &(*(v244))[4 + cgc_strlen(v156)];\n
    v246 = v158;\n
    *(v246) = *(v246) - (cgc_strlen(v156) + -4);\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v98 = a0;\n
    v97 = a1;\n
    v96 = &*(v98)->field_0;\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v247 = v97;\n
    *(v247) = *(v247) - 2;\n
    v248 = v98;\n
    *(v248) = *(v248) + 2;\n
    v33 = *(&v96);\n
    v140 = a0;\n
    v139 = a1;\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    v249 = v139;\n
    *(v249) = *(v249) - 2;\n
    v250 = v140;\n
    *(v250) = *(v250) + 2;\n
    if (v138 <= *(v139) && !(!v138))\n
        goto LABEL_4a9deb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4a9deb:\n
    v137 = cgc_calloc(v138);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v137, *(v140), v138);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v251 = v139;\n
    *(v251) = *(v251) - v138;\n
    v252 = v140;\n
    *(v252) = &(*(v252))[v138];\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    v95 = a0;\n
    v94 = a1;\n
    v93 = &*(v95);\n
    if (*(v94) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v253 = v94;\n
    *(v253) = *(v253) - 2;\n
    v254 = v95;\n
    *(v254) = *(v254) + 2;\n
    v33 = *(v93);\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 4);\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(v92)->field_0;\n
    cgc_uint2str(&v89, 4, v90);\n
    v2 = &v89;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v255 = v91;\n
    *(v255) = *(v255) - 1;\n
    v256 = v92;\n
    *(v256) = *(v256) + 1;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v1 = &v113;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v257 = v115;\n
    *(v257) = *(v257) - 4;\n
    v258 = v116;\n
    *(v258) = *(v258) + 4;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 21);\n
    if (*(v107) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v106) = *(&*(v108));\n
    cgc_uint2str(&v105, 21, *(&v106));\n
    v0 = &v105;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v259 = v107;\n
    *(v259) = *(v259) - 8;\n
    v260 = v108;\n
    *(v260) = *(v260) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    v66 = &*(v68)->field_0;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v261 = v67;\n
    *(v261) = *(v261) - 1;\n
    v262 = v68;\n
    *(v262) = *(v262) + 1;\n
    v33 = *(v66);\n
    v34 ^= cgc__cookie;\n
    if (v34)\n
        cgc___stack_cookie_fail();\n
    v263 = a1;\n
    if (*(a1) > 0 && v33 >= 0)\n
    {\n
        v263 = v33;\n
        if (v263 < 3)\n
            v263 = (&v35)[v33](a0, a1);\n
    }\n
    return v263;\n
}\n
", "4891548:sub_4aa39c": null, "4891552:cgc_process_llamaaalii": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaaalii(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x5f4]\n
    struct_1 *v1;  // [bp-0x5f0]\n
    struct_1 *v2;  // [bp-0x5e8]\n
    char v3;  // [bp-0x5d9]\n
    struct_1 *v4;  // [bp-0x5d8]\n
    char v5;  // [bp-0x5c9]\n
    struct_1 *v6;  // [bp-0x5c8]\n
    struct_1 *v7;  // [bp-0x5c0]\n
    unsigned int v8;  // [bp-0x5b4]\n
    struct_1 *v9;  // [bp-0x5b0]\n
    struct_1 *v10;  // [bp-0x5a8]\n
    struct_1 *v11;  // [bp-0x5a0]\n
    struct_1 *v12;  // [bp-0x598]\n
    char v13;  // [bp-0x589]\n
    struct_1 *v14;  // [bp-0x588]\n
    struct_1 *v15;  // [bp-0x580]\n
    char v16;  // [bp-0x571]\n
    struct_1 *v17;  // [bp-0x570]\n
    struct_1 *v18;  // [bp-0x568]\n
    struct_1 *v19;  // [bp-0x560]\n
    struct_1 *v20;  // [bp-0x558]\n
    struct_1 *v21;  // [bp-0x550]\n
    struct_1 *v22;  // [bp-0x548]\n
    char v23;  // [bp-0x539]\n
    struct_1 *v24;  // [bp-0x538]\n
    struct_1 *v25;  // [bp-0x530]\n
    struct_1 *v26;  // [bp-0x528]\n
    struct_1 *v27;  // [bp-0x520]\n
    char v28;  // [bp-0x511]\n
    unsigned int v29;  // [bp-0x510]\n
    unsigned int v30;  // [bp-0x50c]\n
    struct_1 *v31;  // [bp-0x508]\n
    unsigned int v32;  // [bp-0x4fc]\n
    struct_1 *v33;  // [bp-0x4f8]\n
    unsigned int v34;  // [bp-0x4f0]\n
    unsigned int v35;  // [bp-0x4ec]\n
    char v36;  // [bp-0x4e8]\n
    char v37;  // [bp-0x4ce]\n
    char v38[2];  // [bp-0x4c8]\n
    unsigned short v39;  // [bp-0x4ba]\n
    unsigned int *v40;  // [bp-0x4b8]\n
    struct struct_0 **v41;  // [bp-0x4b0]\n
    char v42;  // [bp-0x4a6]\n
    char v43[2];  // [bp-0x4a0]\n
    unsigned short v44;  // [bp-0x492]\n
    unsigned int *v45;  // [bp-0x490]\n
    struct struct_0 **v46;  // [bp-0x488]\n
    char v47;  // [bp-0x47e]\n
    char v48[2];  // [bp-0x478]\n
    unsigned short v49;  // [bp-0x46a]\n
    unsigned int *v50;  // [bp-0x468]\n
    struct struct_0 **v51;  // [bp-0x460]\n
    char v52;  // [bp-0x458]\n
    char v53[8];  // [bp-0x440]\n
    unsigned int v54;  // [bp-0x438]\n
    unsigned int *v55;  // [bp-0x430]\n
    struct struct_0 **v56;  // [bp-0x428]\n
    unsigned long v57;  // [bp-0x420]\n
    char v58;  // [bp-0x411]\n
    unsigned int *v59;  // [bp-0x410]\n
    struct struct_0 **v60;  // [bp-0x408]\n
    unsigned long v61;  // [bp-0x400]\n
    char v62;  // [bp-0x3f1]\n
    unsigned int *v63;  // [bp-0x3f0]\n
    struct struct_0 **v64;  // [bp-0x3e8]\n
    unsigned long v65;  // [bp-0x3e0]\n
    char v66;  // [bp-0x3d1]\n
    unsigned int *v67;  // [bp-0x3d0]\n
    struct struct_0 **v68;  // [bp-0x3c8]\n
    unsigned long v69;  // [bp-0x3c0]\n
    char v70;  // [bp-0x3b1]\n
    unsigned int *v71;  // [bp-0x3b0]\n
    struct struct_0 **v72;  // [bp-0x3a8]\n
    char *v73;  // [bp-0x3a0]\n
    unsigned int v74;  // [bp-0x394]\n
    unsigned int *v75;  // [bp-0x390]\n
    struct struct_0 **v76;  // [bp-0x388]\n
    char *v77;  // [bp-0x380]\n
    unsigned int v78;  // [bp-0x374]\n
    unsigned int *v79;  // [bp-0x370]\n
    struct struct_0 **v80;  // [bp-0x368]\n
    char v81;  // [bp-0x360]\n
    unsigned short v82;  // [bp-0x35a]\n
    unsigned int *v83;  // [bp-0x358]\n
    struct struct_0 **v84;  // [bp-0x350]\n
    char v85;  // [bp-0x348]\n
    unsigned short v86;  // [bp-0x342]\n
    unsigned int *v87;  // [bp-0x340]\n
    struct struct_0 **v88;  // [bp-0x338]\n
    char v89;  // [bp-0x330]\n
    unsigned short v90;  // [bp-0x32a]\n
    unsigned int *v91;  // [bp-0x328]\n
    struct struct_0 **v92;  // [bp-0x320]\n
    char v93;  // [bp-0x318]\n
    unsigned short v94;  // [bp-0x312]\n
    unsigned int *v95;  // [bp-0x310]\n
    struct struct_0 **v96;  // [bp-0x308]\n
    char v97;  // [bp-0x300]\n
    unsigned short v98;  // [bp-0x2fa]\n
    unsigned int *v99;  // [bp-0x2f8]\n
    struct struct_0 **v100;  // [bp-0x2f0]\n
    char v101;  // [bp-0x2e8]\n
    unsigned int v102;  // [bp-0x2d0]\n
    unsigned int *v103;  // [bp-0x2c8]\n
    struct struct_0 **v104;  // [bp-0x2c0]\n
    char v105;  // [bp-0x2b8]\n
    unsigned int v106;  // [bp-0x2ac]\n
    unsigned int *v107;  // [bp-0x2a8]\n
    struct struct_0 **v108;  // [bp-0x2a0]\n
    char v109;  // [bp-0x298]\n
    unsigned int v110;  // [bp-0x28c]\n
    unsigned int *v111;  // [bp-0x288]\n
    struct struct_0 **v112;  // [bp-0x280]\n
    char v113;  // [bp-0x278]\n
    unsigned int v114;  // [bp-0x26c]\n
    unsigned int *v115;  // [bp-0x268]\n
    struct struct_0 **v116;  // [bp-0x260]\n
    char v117;  // [bp-0x258]\n
    unsigned int v118;  // [bp-0x24c]\n
    unsigned int *v119;  // [bp-0x248]\n
    struct struct_0 **v120;  // [bp-0x240]\n
    char v121;  // [bp-0x238]\n
    unsigned int v122;  // [bp-0x22c]\n
    unsigned int *v123;  // [bp-0x228]\n
    struct struct_0 **v124;  // [bp-0x220]\n
    char v125;  // [bp-0x218]\n
    unsigned int v126;  // [bp-0x20c]\n
    unsigned int *v127;  // [bp-0x208]\n
    struct struct_0 **v128;  // [bp-0x200]\n
    char v129;  // [bp-0x1f8]\n
    unsigned int v130;  // [bp-0x1ec]\n
    unsigned int *v131;  // [bp-0x1e8]\n
    struct struct_0 **v132;  // [bp-0x1e0]\n
    char v133;  // [bp-0x1d8]\n
    unsigned int v134;  // [bp-0x1cc]\n
    unsigned int *v135;  // [bp-0x1c8]\n
    struct struct_0 **v136;  // [bp-0x1c0]\n
    char v137;  // [bp-0x1b8]\n
    unsigned int v138;  // [bp-0x1ac]\n
    unsigned int *v139;  // [bp-0x1a8]\n
    struct struct_0 **v140;  // [bp-0x1a0]\n
    char v141;  // [bp-0x198]\n
    unsigned int v142;  // [bp-0x18c]\n
    unsigned int *v143;  // [bp-0x188]\n
    struct struct_0 **v144;  // [bp-0x180]\n
    unsigned long v145;  // [bp-0x178]\n
    unsigned short v146;  // [bp-0x16a]\n
    unsigned int *v147;  // [bp-0x168]\n
    struct struct_0 **v148;  // [bp-0x160]\n
    char v149;  // [bp-0x154]\n
    char v150[4];  // [bp-0x148]\n
    unsigned int v151;  // [bp-0x13c]\n
    unsigned int *v152;  // [bp-0x138]\n
    struct struct_0 **v153;  // [bp-0x130]\n
    char v154;  // [bp-0x124]\n
    char v155[4];  // [bp-0x118]\n
    unsigned int v156;  // [bp-0x10c]\n
    unsigned int *v157;  // [bp-0x108]\n
    struct struct_0 **v158;  // [bp-0x100]\n
    char *v159;  // [bp-0xf8]\n
    unsigned int v160;  // [bp-0xec]\n
    unsigned int *v161;  // [bp-0xe8]\n
    struct struct_0 **v162;  // [bp-0xe0]\n
    char *v163;  // [bp-0xd8]\n
    unsigned int v164;  // [bp-0xcc]\n
    unsigned int *v165;  // [bp-0xc8]\n
    struct struct_0 **v166;  // [bp-0xc0]\n
    char *v167;  // [bp-0xb8]\n
    unsigned int v168;  // [bp-0xac]\n
    unsigned int *v169;  // [bp-0xa8]\n
    struct struct_0 **v170;  // [bp-0xa0]\n
    char v171;  // [bp-0x98]\n
    unsigned int v172;  // [bp-0x80]\n
    unsigned int *v173;  // [bp-0x78]\n
    struct struct_0 **v174;  // [bp-0x70]\n
    unsigned long v175;  // [bp-0x68]\n
    char v176;  // [bp-0x59]\n
    unsigned int *v177;  // [bp-0x58]\n
    struct struct_0 **v178;  // [bp-0x50]\n
    unsigned long v179;  // [bp-0x48]\n
    char v180;  // [bp-0x39]\n
    unsigned int *v181;  // [bp-0x38]\n
    struct struct_0 **v182;  // [bp-0x30]\n
    unsigned long v183;  // [bp-0x28]\n
    char v184;  // [bp-0x19]\n
    unsigned int *v185;  // [bp-0x18]\n
    struct struct_0 **v186;  // [bp-0x10]\n
    unsigned int *v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    unsigned int *v192;  // rax\n
    struct struct_0 **v193;  // rax\n
    struct struct_0 **v195;  // rax\n
    unsigned int *v197;  // rax\n
    unsigned int *v198;  // rax\n
    struct struct_0 **v199;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    unsigned int *v218;  // rax\n
    struct struct_0 **v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    unsigned int *v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    unsigned int *v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    struct struct_0 **v237;  // rax\n
    unsigned int *v238;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v240;  // rax\n
    struct struct_0 **v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    unsigned int *v244;  // rax\n
    struct struct_0 **v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    unsigned int *v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    struct struct_0 **v253;  // rax\n
    unsigned int *v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    struct struct_0 **v262;  // rax\n
    unsigned int *v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    unsigned int *v268;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v270;  // rax\n
    struct struct_0 **v271;  // rax\n
    struct struct_0 **v272;  // rax\n
    unsigned int *v273;  // rax\n
    unsigned int *v274;  // rax\n
    struct struct_0 **v275;  // rax\n
    struct struct_0 **v276;  // rax\n
    unsigned int *v277;  // rax\n
    unsigned int *v278;  // rax\n
    struct struct_0 **v279;  // rax\n
    struct struct_0 **v280;  // rax\n
    unsigned int *v281;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v285;  // rax\n
    unsigned int *v286;  // rax, Other Possible Types: unsigned long\n
\n
    v35 = cgc__cookie;\n
    v34 = -1;\n
    if (cgc_sendline(1, \"===llamaaalii===\", 16) < 0)\n
        cgc__terminate(1);\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(v72)->field_0;\n
    v188 = v71;\n
    *(v188) = *(v188) - 1;\n
    v189 = v72;\n
    *(v189) = *(v189) + 1;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_4aa4ea;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4aa4ea:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v190 = v72;\n
    *(v190) = &(*(v190))[v70];\n
    v191 = v71;\n
    *(v191) = *(v191) - v70;\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v104 = a0;\n
    v103 = a1;\n
    memset(&v101, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v102) = *(&*(v104));\n
    cgc_uint2str(&v101, 21, *(&v102));\n
    v33 = &v101;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v101)) < 0)\n
        cgc__terminate(1);\n
    v192 = v103;\n
    *(v192) = *(v192) - 8;\n
    v193 = v104;\n
    *(v193) = *(v193) + 8;\n
    v170 = a0;\n
    v169 = a1;\n
    if (*(v169) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v169) >= 128)\n
        v32 = 128;\n
    else\n
        v32 = *(v169);\n
    v168 = v32;\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v167 = cgc_calloc(134);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v167, \"Str: \");\n
    cgc_strncpy(v167 + 5, *(v170), v168);\n
    v195 = v170;\n
    *(v195) = &(*(v195))[4 + cgc_strlen(v167)];\n
    v197 = v169;\n
    *(v197) = *(v197) - (cgc_strlen(v167) + -4);\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v100 = a0;\n
    v99 = a1;\n
    memset(&v97, 0, 6);\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v98 = *(&*(v100));\n
    cgc_uint2str(&v97, 6, v98);\n
    v31 = &v97;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v97)) < 0)\n
        cgc__terminate(1);\n
    v198 = v99;\n
    *(v198) = *(v198) - 2;\n
    v199 = v100;\n
    *(v199) = *(v199) + 2;\n
    v166 = a0;\n
    v165 = a1;\n
    if (*(v165) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v165) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v165);\n
    v164 = v30;\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v163 = cgc_calloc(134);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v163, \"Str: \");\n
    cgc_strncpy(v163 + 5, *(v166), v164);\n
    v201 = v166;\n
    *(v201) = &(*(v201))[4 + cgc_strlen(v163)];\n
    v203 = v165;\n
    *(v203) = *(v203) - (cgc_strlen(v163) + -4);\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v80 = a0;\n
    v79 = a1;\n
    if (*(v79) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v79) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v79);\n
    v78 = v29;\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v77 = cgc_calloc(134);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v77, \"Str: \");\n
    cgc_strncpy(v77 + 5, *(v80), v78);\n
    v205 = v80;\n
    *(v205) = &(*(v205))[4 + cgc_strlen(v77)];\n
    v207 = v79;\n
    *(v207) = *(v207) - (cgc_strlen(v77) + -4);\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v158 = a0;\n
    v157 = a1;\n
    *(&v155) = *(v158);\n
    memset(&v154, 0, 12);\n
    if (*(v157) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = 0;\n
    if ((v155[0] << 24))\n
    {\n
        v28 = 0;\n
        if ((v155[1] << 16))\n
        {\n
            v28 = 0;\n
            if ((v155[2] << 8))\n
                v28 = v155[3];\n
        }\n
    }\n
    v156 = v28 & 1;\n
    cgc_uint2str(&v154, 12, v156);\n
    v27 = &v154;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v154)) < 0)\n
        cgc__terminate(1);\n
    v208 = v157;\n
    *(v208) = *(v208) - 4;\n
    v209 = v158;\n
    *(v209) = *(v209) + 4;\n
    v148 = a0;\n
    v147 = a1;\n
    if (*(v147) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v146 = *(&*(v148));\n
    v210 = v147;\n
    *(v210) = *(v210) - 2;\n
    v211 = v148;\n
    *(v211) = *(v211) + 2;\n
    if (v146 <= *(v147) && !(!v146))\n
        goto LABEL_4ab025;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ab025:\n
    v145 = cgc_calloc(v146);\n
    if (!v145)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v145, *(v148), v146);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v212 = v147;\n
    *(v212) = *(v212) - v146;\n
    v213 = v148;\n
    *(v213) = &(*(v213))[v146];\n
    cgc_checkheap();\n
    cgc_free(v145);\n
    v128 = a0;\n
    v127 = a1;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v126 = *(&*(v128));\n
    cgc_uint2str(&v125, 12, v126);\n
    v26 = &v125;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v125)) < 0)\n
        cgc__terminate(1);\n
    v214 = v127;\n
    *(v214) = *(v214) - 4;\n
    v215 = v128;\n
    *(v215) = *(v215) + 4;\n
    v144 = a0;\n
    v143 = a1;\n
    memset(&v141, 0, 12);\n
    if (*(v143) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v142 = *(&*(v144));\n
    cgc_uint2str(&v141, 12, v142);\n
    v25 = &v141;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v141)) < 0)\n
        cgc__terminate(1);\n
    v216 = v143;\n
    *(v216) = *(v216) - 4;\n
    v217 = v144;\n
    *(v217) = *(v217) + 4;\n
    v186 = a0;\n
    v185 = a1;\n
    if (*(v185) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v184 = *(v186)->field_0;\n
    v218 = v185;\n
    *(v218) = *(v218) - 1;\n
    v219 = v186;\n
    *(v219) = *(v219) + 1;\n
    if (v184 <= *(v185) && !(!v184))\n
        goto LABEL_4ab3e0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ab3e0:\n
    v183 = cgc_calloc(v184);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v183, *(v186), v184);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v220 = v186;\n
    *(v220) = &(*(v220))[v184];\n
    v221 = v185;\n
    *(v221) = *(v221) - v184;\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    v96 = a0;\n
    v95 = a1;\n
    memset(&v93, 0, 6);\n
    if (*(v95) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v94 = *(&*(v96));\n
    cgc_uint2str(&v93, 6, v94);\n
    v24 = &v93;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v93)) < 0)\n
        cgc__terminate(1);\n
    v222 = v95;\n
    *(v222) = *(v222) - 2;\n
    v223 = v96;\n
    *(v223) = *(v223) + 2;\n
    v56 = a0;\n
    v55 = a1;\n
    *(&v53[0]) = *(v56);\n
    memset(&v52, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if (v53[0] << 56)\n
    {\n
        v23 = 0;\n
        if (v53[1] << 48)\n
        {\n
            v23 = 0;\n
            if (v53[2] << 40)\n
            {\n
                v23 = 0;\n
                if (v53[3] << 32)\n
                {\n
                    v23 = 0;\n
                    if ((v53[4] << 24))\n
                    {\n
                        v23 = 0;\n
                        if ((v53[5] << 16))\n
                        {\n
                            v23 = 0;\n
                            if ((v53[6] << 8))\n
                                v23 = v53[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v54) = v23 & 1;\n
    cgc_uint2str(&v52, 21, *(&v54));\n
    v22 = &v52;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v52)) < 0)\n
        cgc__terminate(1);\n
    v224 = v55;\n
    *(v224) = *(v224) - 8;\n
    v225 = v56;\n
    *(v225) = *(v225) + 8;\n
    v124 = a0;\n
    v123 = a1;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v122 = *(&*(v124));\n
    cgc_uint2str(&v121, 12, v122);\n
    v21 = &v121;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v121)) < 0)\n
        cgc__terminate(1);\n
    v226 = v123;\n
    *(v226) = *(v226) - 4;\n
    v227 = v124;\n
    *(v227) = *(v227) + 4;\n
    v140 = a0;\n
    v139 = a1;\n
    memset(&v137, 0, 12);\n
    if (*(v139) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v138 = *(&*(v140));\n
    cgc_uint2str(&v137, 12, v138);\n
    v20 = &v137;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v137)) < 0)\n
        cgc__terminate(1);\n
    v228 = v139;\n
    *(v228) = *(v228) - 4;\n
    v229 = v140;\n
    *(v229) = *(v229) + 4;\n
    v120 = a0;\n
    v119 = a1;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v118 = *(&*(v120));\n
    cgc_uint2str(&v117, 12, v118);\n
    v19 = &v117;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v117)) < 0)\n
        cgc__terminate(1);\n
    v230 = v119;\n
    *(v230) = *(v230) - 4;\n
    v231 = v120;\n
    *(v231) = *(v231) + 4;\n
    v136 = a0;\n
    v135 = a1;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v134 = *(&*(v136));\n
    cgc_uint2str(&v133, 12, v134);\n
    v18 = &v133;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v133)) < 0)\n
        cgc__terminate(1);\n
    v232 = v135;\n
    *(v232) = *(v232) - 4;\n
    v233 = v136;\n
    *(v233) = *(v233) + 4;\n
    v116 = a0;\n
    v115 = a1;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v114 = *(&*(v116));\n
    cgc_uint2str(&v113, 12, v114);\n
    v17 = &v113;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v234 = v115;\n
    *(v234) = *(v234) - 4;\n
    v235 = v116;\n
    *(v235) = *(v235) + 4;\n
    v51 = a0;\n
    v50 = a1;\n
    *(&v48) = *(v51);\n
    memset(&v47, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v48[0] << 8))\n
        v16 = v48[1];\n
    v49 = v16 & 1;\n
    cgc_uint2str(&v47, 6, v49);\n
    v15 = &v47;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v236 = v50;\n
    *(v236) = *(v236) - 2;\n
    v237 = v51;\n
    *(v237) = *(v237) + 2;\n
    v132 = a0;\n
    v131 = a1;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v130 = *(&*(v132));\n
    cgc_uint2str(&v129, 12, v130);\n
    v14 = &v129;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v129)) < 0)\n
        cgc__terminate(1);\n
    v238 = v131;\n
    *(v238) = *(v238) - 4;\n
    v239 = v132;\n
    *(v239) = *(v239) + 4;\n
    v46 = a0;\n
    v45 = a1;\n
    *(&v43) = *(v46);\n
    memset(&v42, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if ((v43[0] << 8))\n
        v13 = v43[1];\n
    v44 = v13 & 1;\n
    cgc_uint2str(&v42, 6, v44);\n
    v12 = &v42;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v240 = v45;\n
    *(v240) = *(v240) - 2;\n
    v241 = v46;\n
    *(v241) = *(v241) + 2;\n
    v92 = a0;\n
    v91 = a1;\n
    memset(&v89, 0, 6);\n
    if (*(v91) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v90 = *(&*(v92));\n
    cgc_uint2str(&v89, 6, v90);\n
    v11 = &v89;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v89)) < 0)\n
        cgc__terminate(1);\n
    v242 = v91;\n
    *(v242) = *(v242) - 2;\n
    v243 = v92;\n
    *(v243) = *(v243) + 2;\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(v68)->field_0;\n
    v244 = v67;\n
    *(v244) = *(v244) - 1;\n
    v245 = v68;\n
    *(v245) = *(v245) + 1;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_4ac25c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ac25c:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v246 = v68;\n
    *(v246) = &(*(v246))[v66];\n
    v247 = v67;\n
    *(v247) = *(v247) - v66;\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v112 = a0;\n
    v111 = a1;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v110 = *(&*(v112));\n
    cgc_uint2str(&v109, 12, v110);\n
    v10 = &v109;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v109)) < 0)\n
        cgc__terminate(1);\n
    v248 = v111;\n
    *(v248) = *(v248) - 4;\n
    v249 = v112;\n
    *(v249) = *(v249) + 4;\n
    v108 = a0;\n
    v107 = a1;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v106 = *(&*(v108));\n
    cgc_uint2str(&v105, 12, v106);\n
    v9 = &v105;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v105)) < 0)\n
        cgc__terminate(1);\n
    v250 = v107;\n
    *(v250) = *(v250) - 4;\n
    v251 = v108;\n
    *(v251) = *(v251) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v75) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v75);\n
    v74 = v8;\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = cgc_calloc(134);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v73, \"Str: \");\n
    cgc_strncpy(v73 + 5, *(v76), v74);\n
    v253 = v76;\n
    *(v253) = &(*(v253))[4 + cgc_strlen(v73)];\n
    v255 = v75;\n
    *(v255) = *(v255) - (cgc_strlen(v73) + -4);\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v88 = a0;\n
    v87 = a1;\n
    memset(&v85, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v86 = *(&*(v88));\n
    cgc_uint2str(&v85, 6, v86);\n
    v7 = &v85;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v85)) < 0)\n
        cgc__terminate(1);\n
    v256 = v87;\n
    *(v256) = *(v256) - 2;\n
    v257 = v88;\n
    *(v257) = *(v257) + 2;\n
    v174 = a0;\n
    v173 = a1;\n
    memset(&v171, 0, 21);\n
    if (*(v173) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v172) = *(&*(v174));\n
    cgc_uint2str(&v171, 21, *(&v172));\n
    v6 = &v171;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v171)) < 0)\n
        cgc__terminate(1);\n
    v258 = v173;\n
    *(v258) = *(v258) - 8;\n
    v259 = v174;\n
    *(v259) = *(v259) + 8;\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v180 = *(v182)->field_0;\n
    v260 = v181;\n
    *(v260) = *(v260) - 1;\n
    v261 = v182;\n
    *(v261) = *(v261) + 1;\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_4ac9f3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ac9f3:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v262 = v182;\n
    *(v262) = &(*(v262))[v180];\n
    v263 = v181;\n
    *(v263) = *(v263) - v180;\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v153 = a0;\n
    v152 = a1;\n
    *(&v150) = *(v153);\n
    memset(&v149, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = 0;\n
    if ((v150[0] << 24))\n
    {\n
        v5 = 0;\n
        if ((v150[1] << 16))\n
        {\n
            v5 = 0;\n
            if ((v150[2] << 8))\n
                v5 = v150[3];\n
        }\n
    }\n
    v151 = v5 & 1;\n
    cgc_uint2str(&v149, 12, v151);\n
    v4 = &v149;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v264 = v152;\n
    *(v264) = *(v264) - 4;\n
    v265 = v153;\n
    *(v265) = *(v265) + 4;\n
    v41 = a0;\n
    v40 = a1;\n
    *(&v38) = *(v41);\n
    memset(&v37, 0, 6);\n
    if (*(v40) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v38[0] << 8))\n
        v3 = v38[1];\n
    v39 = v3 & 1;\n
    cgc_uint2str(&v37, 6, v39);\n
    v2 = &v37;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v37)) < 0)\n
        cgc__terminate(1);\n
    v266 = v40;\n
    *(v266) = *(v266) - 2;\n
    v267 = v41;\n
    *(v267) = *(v267) + 2;\n
    v84 = a0;\n
    v83 = a1;\n
    memset(&v81, 0, 6);\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(&*(v84));\n
    cgc_uint2str(&v81, 6, v82);\n
    v1 = &v81;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v81)) < 0)\n
        cgc__terminate(1);\n
    v268 = v83;\n
    *(v268) = *(v268) - 2;\n
    v269 = v84;\n
    *(v269) = *(v269) + 2;\n
    v178 = a0;\n
    v177 = a1;\n
    if (*(v177) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v176 = *(v178)->field_0;\n
    v270 = v177;\n
    *(v270) = *(v270) - 1;\n
    v271 = v178;\n
    *(v271) = *(v271) + 1;\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_4acf52;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4acf52:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v272 = v178;\n
    *(v272) = &(*(v272))[v176];\n
    v273 = v177;\n
    *(v273) = *(v273) - v176;\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(v64)->field_0;\n
    v274 = v63;\n
    *(v274) = *(v274) - 1;\n
    v275 = v64;\n
    *(v275) = *(v275) + 1;\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_4ad0ff;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ad0ff:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v276 = v64;\n
    *(v276) = &(*(v276))[v62];\n
    v277 = v63;\n
    *(v277) = *(v277) - v62;\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v60 = a0;\n
    v59 = a1;\n
    if (*(v59) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(v60)->field_0;\n
    v278 = v59;\n
    *(v278) = *(v278) - 1;\n
    v279 = v60;\n
    *(v279) = *(v279) + 1;\n
    if (v58 <= *(v59) && !(!v58))\n
        goto LABEL_4ad2cd;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ad2cd:\n
    v57 = cgc_calloc(v58);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v57, *(v60), v58);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v280 = v60;\n
    *(v280) = &(*(v280))[v58];\n
    v281 = v59;\n
    *(v281) = *(v281) - v58;\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    v162 = a0;\n
    v161 = a1;\n
    if (*(v161) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v161) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v161);\n
    v160 = v0;\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v159 = cgc_calloc(134);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v159, \"Str: \");\n
    cgc_strncpy(v159 + 5, *(v162), v160);\n
    v283 = v162;\n
    *(v283) = &(*(v283))[4 + cgc_strlen(v159)];\n
    v285 = v161;\n
    *(v285) = *(v285) - (cgc_strlen(v159) + -4);\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v35 ^= cgc__cookie;\n
    if (v35)\n
        cgc___stack_cookie_fail();\n
    v286 = a1;\n
    if (*(a1) > 0 && v34 >= 0)\n
    {\n
        v286 = v34;\n
        if (v286 < 0)\n
            v286 = *(&(&v36)[8 * v34])(a0, a1);\n
    }\n
    return v286;\n
}\n
", "4904474:sub_4ad61a": null, "4904480:cgc_process_llamalutecia": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamalutecia(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x90]\n
    unsigned int v1;  // [bp-0x88]\n
    unsigned int v2;  // [bp-0x84]\n
    char v3;  // [bp-0x80]\n
    unsigned long v4;  // [bp-0x68]\n
    char v5;  // [bp-0x59]\n
    unsigned int *v6;  // [bp-0x58]\n
    struct struct_1 **v7;  // [bp-0x50]\n
    char v8;  // [bp-0x48]\n
    unsigned int v9;  // [bp-0x3c]\n
    unsigned int *v10;  // [bp-0x38]\n
    struct struct_1 **v11;  // [bp-0x30]\n
    unsigned long v12;  // [bp-0x28]\n
    unsigned short v13;  // [bp-0x1a]\n
    unsigned int *v14;  // [bp-0x18]\n
    struct struct_1 **v15;  // [bp-0x10]\n
    unsigned int *v17;  // rax\n
    struct struct_1 **v18;  // rax\n
    unsigned int *v19;  // rax\n
    struct struct_1 **v20;  // rax\n
    unsigned int *v21;  // rax\n
    struct struct_1 **v22;  // rax\n
    unsigned int *v23;  // rax\n
    struct struct_1 **v24;  // rax\n
    struct struct_1 **v25;  // rax\n
    unsigned int *v26;  // rax\n
    unsigned int *v27;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamalutecia===\", 18) < 0)\n
        cgc__terminate(1);\n
    v11 = a0;\n
    v10 = a1;\n
    memset(&v8, 0, 12);\n
    if (*(v10) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = *(&*(v11));\n
    cgc_uint2str(&v8, 12, v9);\n
    v0 = &v8;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v8)) < 0)\n
        cgc__terminate(1);\n
    v17 = v10;\n
    *(v17) = *(v17) - 4;\n
    v18 = v11;\n
    *(v18) = *(v18) + 4;\n
    v15 = a0;\n
    v14 = a1;\n
    if (*(v14) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = *(&*(v15));\n
    v19 = v14;\n
    *(v19) = *(v19) - 2;\n
    v20 = v15;\n
    *(v20) = *(v20) + 2;\n
    if (v13 <= *(v14) && !(!v13))\n
        goto LABEL_4ad81c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ad81c:\n
    v12 = cgc_calloc(v13);\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v12, *(v15), v13);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v21 = v14;\n
    *(v21) = *(v21) - v13;\n
    v22 = v15;\n
    *(v22) = &(*(v22))[v13];\n
    cgc_checkheap();\n
    cgc_free(v12);\n
    v7 = a0;\n
    v6 = a1;\n
    if (*(v6) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v5 = *(v7)->field_0;\n
    v23 = v6;\n
    *(v23) = *(v23) - 1;\n
    v24 = v7;\n
    *(v24) = *(v24) + 1;\n
    if (v5 <= *(v6) && !(!v5))\n
        goto LABEL_4ad9a5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ad9a5:\n
    v4 = cgc_calloc(v5);\n
    if (!v4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v4, *(v7), v5);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v25 = v7;\n
    *(v25) = &(*(v25))[v5];\n
    v26 = v6;\n
    *(v26) = *(v26) - v5;\n
    cgc_checkheap();\n
    cgc_free(v4);\n
    v2 ^= cgc__cookie;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v27 = a1;\n
    if (*(a1) > 0 && v1 >= 0)\n
    {\n
        v27 = v1;\n
        if (v27 < 0)\n
            v27 = *(&(&v3)[8 * v1])(a0, a1);\n
    }\n
    return v27;\n
}\n
", "4905667:sub_4adac3": null, "4905680:cgc_process_llamaposit": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaposit(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x5dc]\n
    struct_1 *v1;  // [bp-0x5d8]\n
    struct_1 *v2;  // [bp-0x5d0]\n
    struct_1 *v3;  // [bp-0x5c8]\n
    char v4;  // [bp-0x5b9]\n
    struct_1 *v5;  // [bp-0x5b8]\n
    char v6;  // [bp-0x5a9]\n
    struct_1 *v7;  // [bp-0x5a8]\n
    unsigned int v8;  // [bp-0x59c]\n
    struct_1 *v9;  // [bp-0x598]\n
    unsigned int v10;  // [bp-0x58c]\n
    struct_1 *v11;  // [bp-0x588]\n
    struct_1 *v12;  // [bp-0x580]\n
    unsigned int v13;  // [bp-0x574]\n
    struct_1 *v14;  // [bp-0x570]\n
    struct_1 *v15;  // [bp-0x568]\n
    char v16;  // [bp-0x559]\n
    struct_1 *v17;  // [bp-0x558]\n
    char v18;  // [bp-0x549]\n
    struct_1 *v19;  // [bp-0x548]\n
    struct_1 *v20;  // [bp-0x540]\n
    struct_1 *v21;  // [bp-0x538]\n
    struct_1 *v22;  // [bp-0x530]\n
    struct_1 *v23;  // [bp-0x528]\n
    char v24;  // [bp-0x519]\n
    struct_1 *v25;  // [bp-0x518]\n
    struct_1 *v26;  // [bp-0x510]\n
    struct_1 *v27;  // [bp-0x508]\n
    struct_1 *v28;  // [bp-0x500]\n
    struct_1 *v29;  // [bp-0x4f8]\n
    char v30;  // [bp-0x4e9]\n
    unsigned int v31;  // [bp-0x4e8]\n
    unsigned int v32;  // [bp-0x4e4]\n
    char v33;  // [bp-0x4e0]\n
    char v34;  // [bp-0x4c6]\n
    char v35[2];  // [bp-0x4c0]\n
    unsigned short v36;  // [bp-0x4b2]\n
    unsigned int *v37;  // [bp-0x4b0]\n
    struct struct_0 **v38;  // [bp-0x4a8]\n
    char v39;  // [bp-0x49e]\n
    char v40[2];  // [bp-0x498]\n
    unsigned short v41;  // [bp-0x48a]\n
    unsigned int *v42;  // [bp-0x488]\n
    struct struct_0 **v43;  // [bp-0x480]\n
    unsigned long v44;  // [bp-0x478]\n
    char v45;  // [bp-0x469]\n
    unsigned int *v46;  // [bp-0x468]\n
    struct struct_0 **v47;  // [bp-0x460]\n
    unsigned long v48;  // [bp-0x458]\n
    char v49;  // [bp-0x449]\n
    unsigned int *v50;  // [bp-0x448]\n
    struct struct_0 **v51;  // [bp-0x440]\n
    char *v52;  // [bp-0x438]\n
    unsigned int v53;  // [bp-0x42c]\n
    unsigned int *v54;  // [bp-0x428]\n
    struct struct_0 **v55;  // [bp-0x420]\n
    char v56;  // [bp-0x418]\n
    unsigned short v57;  // [bp-0x412]\n
    unsigned int *v58;  // [bp-0x410]\n
    struct struct_0 **v59;  // [bp-0x408]\n
    char v60;  // [bp-0x400]\n
    unsigned short v61;  // [bp-0x3fa]\n
    unsigned int *v62;  // [bp-0x3f8]\n
    struct struct_0 **v63;  // [bp-0x3f0]\n
    char v64;  // [bp-0x3e5]\n
    char v65;  // [bp-0x3e1]\n
    unsigned int *v66;  // [bp-0x3e0]\n
    struct struct_0 **v67;  // [bp-0x3d8]\n
    char v68;  // [bp-0x3cd]\n
    char v69;  // [bp-0x3c9]\n
    unsigned int *v70;  // [bp-0x3c8]\n
    struct struct_0 **v71;  // [bp-0x3c0]\n
    char v72;  // [bp-0x3b8]\n
    unsigned int v73;  // [bp-0x3a0]\n
    unsigned int *v74;  // [bp-0x398]\n
    struct struct_0 **v75;  // [bp-0x390]\n
    char v76;  // [bp-0x388]\n
    unsigned int v77;  // [bp-0x370]\n
    unsigned int *v78;  // [bp-0x368]\n
    struct struct_0 **v79;  // [bp-0x360]\n
    char v80;  // [bp-0x358]\n
    unsigned int v81;  // [bp-0x34c]\n
    unsigned int *v82;  // [bp-0x348]\n
    struct struct_0 **v83;  // [bp-0x340]\n
    char v84;  // [bp-0x338]\n
    unsigned int v85;  // [bp-0x32c]\n
    unsigned int *v86;  // [bp-0x328]\n
    struct struct_0 **v87;  // [bp-0x320]\n
    char v88;  // [bp-0x318]\n
    unsigned int v89;  // [bp-0x30c]\n
    unsigned int *v90;  // [bp-0x308]\n
    struct struct_0 **v91;  // [bp-0x300]\n
    char v92;  // [bp-0x2f8]\n
    unsigned int v93;  // [bp-0x2ec]\n
    unsigned int *v94;  // [bp-0x2e8]\n
    struct struct_0 **v95;  // [bp-0x2e0]\n
    unsigned long v96;  // [bp-0x2d8]\n
    unsigned short v97;  // [bp-0x2ca]\n
    unsigned int *v98;  // [bp-0x2c8]\n
    struct struct_0 **v99;  // [bp-0x2c0]\n
    unsigned long v100;  // [bp-0x2b8]\n
    unsigned short v101;  // [bp-0x2aa]\n
    unsigned int *v102;  // [bp-0x2a8]\n
    struct struct_0 **v103;  // [bp-0x2a0]\n
    unsigned long v104;  // [bp-0x298]\n
    unsigned short v105;  // [bp-0x28a]\n
    unsigned int *v106;  // [bp-0x288]\n
    struct struct_0 **v107;  // [bp-0x280]\n
    char v108;  // [bp-0x274]\n
    char v109[4];  // [bp-0x268]\n
    unsigned int v110;  // [bp-0x25c]\n
    unsigned int *v111;  // [bp-0x258]\n
    struct struct_0 **v112;  // [bp-0x250]\n
    char v113;  // [bp-0x244]\n
    char v114[4];  // [bp-0x238]\n
    unsigned int v115;  // [bp-0x22c]\n
    unsigned int *v116;  // [bp-0x228]\n
    struct struct_0 **v117;  // [bp-0x220]\n
    char v118;  // [bp-0x214]\n
    char v119[4];  // [bp-0x208]\n
    unsigned int v120;  // [bp-0x1fc]\n
    unsigned int *v121;  // [bp-0x1f8]\n
    struct struct_0 **v122;  // [bp-0x1f0]\n
    char v123;  // [bp-0x1e4]\n
    char v124[4];  // [bp-0x1d8]\n
    unsigned int v125;  // [bp-0x1cc]\n
    unsigned int *v126;  // [bp-0x1c8]\n
    struct struct_0 **v127;  // [bp-0x1c0]\n
    char *v128;  // [bp-0x1b8]\n
    unsigned int v129;  // [bp-0x1ac]\n
    unsigned int *v130;  // [bp-0x1a8]\n
    struct struct_0 **v131;  // [bp-0x1a0]\n
    char *v132;  // [bp-0x198]\n
    unsigned int v133;  // [bp-0x18c]\n
    unsigned int *v134;  // [bp-0x188]\n
    struct struct_0 **v135;  // [bp-0x180]\n
    char *v136;  // [bp-0x178]\n
    unsigned int v137;  // [bp-0x16c]\n
    unsigned int *v138;  // [bp-0x168]\n
    struct struct_0 **v139;  // [bp-0x160]\n
    char v140;  // [bp-0x158]\n
    unsigned int v141;  // [bp-0x140]\n
    unsigned int *v142;  // [bp-0x138]\n
    struct struct_0 **v143;  // [bp-0x130]\n
    char v144;  // [bp-0x128]\n
    unsigned int v145;  // [bp-0x110]\n
    unsigned int *v146;  // [bp-0x108]\n
    struct struct_0 **v147;  // [bp-0x100]\n
    char v148;  // [bp-0xf8]\n
    unsigned int v149;  // [bp-0xe0]\n
    unsigned int *v150;  // [bp-0xd8]\n
    struct struct_0 **v151;  // [bp-0xd0]\n
    char v152;  // [bp-0xc8]\n
    unsigned int v153;  // [bp-0xb0]\n
    unsigned int *v154;  // [bp-0xa8]\n
    struct struct_0 **v155;  // [bp-0xa0]\n
    char v156;  // [bp-0x98]\n
    unsigned int v157;  // [bp-0x80]\n
    unsigned int *v158;  // [bp-0x78]\n
    struct struct_0 **v159;  // [bp-0x70]\n
    unsigned long v160;  // [bp-0x68]\n
    char v161;  // [bp-0x59]\n
    unsigned int *v162;  // [bp-0x58]\n
    struct struct_0 **v163;  // [bp-0x50]\n
    unsigned long v164;  // [bp-0x48]\n
    char v165;  // [bp-0x39]\n
    unsigned int *v166;  // [bp-0x38]\n
    struct struct_0 **v167;  // [bp-0x30]\n
    unsigned long v168;  // [bp-0x28]\n
    char v169;  // [bp-0x19]\n
    unsigned int *v170;  // [bp-0x18]\n
    struct struct_0 **v171;  // [bp-0x10]\n
    unsigned int *v173;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v175;  // rax\n
    struct struct_0 **v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    struct struct_0 **v181;  // rax\n
    unsigned int *v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_0 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    struct struct_0 **v189;  // rax\n
    unsigned int *v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_0 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    unsigned int *v219;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v221;  // rax\n
    struct struct_0 **v222;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v232;  // rax\n
    unsigned int *v233;  // rax\n
    struct struct_0 **v234;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    unsigned int *v247;  // rax\n
    struct struct_0 **v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    unsigned int *v255;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v257;  // rax\n
    struct struct_0 **v258;  // rax\n
    struct struct_0 **v260;  // rax\n
    unsigned int *v262;  // rax\n
    unsigned int *v263;  // rax, Other Possible Types: unsigned long\n
\n
    v32 = cgc__cookie;\n
    v31 = -1;\n
    if (cgc_sendline(1, \"===llamaposit===\", 16) < 0)\n
        cgc__terminate(1);\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v30 = 0;\n
    if ((v40[0] << 8))\n
        v30 = v40[1];\n
    v41 = v30 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v29 = &v39;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v173 = v42;\n
    *(v173) = *(v173) - 2;\n
    v174 = v43;\n
    *(v174) = *(v174) + 2;\n
    v63 = a0;\n
    v62 = a1;\n
    memset(&v60, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v61 = *(&*(v63));\n
    cgc_uint2str(&v60, 6, v61);\n
    v28 = &v60;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v60)) < 0)\n
        cgc__terminate(1);\n
    v175 = v62;\n
    *(v175) = *(v175) - 2;\n
    v176 = v63;\n
    *(v176) = *(v176) + 2;\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(&*(v95));\n
    cgc_uint2str(&v92, 12, v93);\n
    v27 = &v92;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v177 = v94;\n
    *(v177) = *(v177) - 4;\n
    v178 = v95;\n
    *(v178) = *(v178) + 4;\n
    v51 = a0;\n
    v50 = a1;\n
    if (*(v50) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v49 = *(v51)->field_0;\n
    v179 = v50;\n
    *(v179) = *(v179) - 1;\n
    v180 = v51;\n
    *(v180) = *(v180) + 1;\n
    if (v49 <= *(v50) && !(!v49))\n
        goto LABEL_4adf67;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4adf67:\n
    v48 = cgc_calloc(v49);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v48, *(v51), v49);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v181 = v51;\n
    *(v181) = &(*(v181))[v49];\n
    v182 = v50;\n
    *(v182) = *(v182) - v49;\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    v59 = a0;\n
    v58 = a1;\n
    memset(&v56, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v57 = *(&*(v59));\n
    cgc_uint2str(&v56, 6, v57);\n
    v26 = &v56;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v56)) < 0)\n
        cgc__terminate(1);\n
    v183 = v58;\n
    *(v183) = *(v183) - 2;\n
    v184 = v59;\n
    *(v184) = *(v184) + 2;\n
    v159 = a0;\n
    v158 = a1;\n
    memset(&v156, 0, 21);\n
    if (*(v158) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v157) = *(&*(v159));\n
    cgc_uint2str(&v156, 21, *(&v157));\n
    v25 = &v156;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v156)) < 0)\n
        cgc__terminate(1);\n
    v185 = v158;\n
    *(v185) = *(v185) - 8;\n
    v186 = v159;\n
    *(v186) = *(v186) + 8;\n
    v171 = a0;\n
    v170 = a1;\n
    if (*(v170) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v169 = *(v171)->field_0;\n
    v187 = v170;\n
    *(v187) = *(v187) - 1;\n
    v188 = v171;\n
    *(v188) = *(v188) + 1;\n
    if (v169 <= *(v170) && !(!v169))\n
        goto LABEL_4ae309;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ae309:\n
    v168 = cgc_calloc(v169);\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v168, *(v171), v169);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v189 = v171;\n
    *(v189) = &(*(v189))[v169];\n
    v190 = v170;\n
    *(v190) = *(v190) - v169;\n
    cgc_checkheap();\n
    cgc_free(v168);\n
    v127 = a0;\n
    v126 = a1;\n
    *(&v124) = *(v127);\n
    memset(&v123, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = 0;\n
    if ((v124[0] << 24))\n
    {\n
        v24 = 0;\n
        if ((v124[1] << 16))\n
        {\n
            v24 = 0;\n
            if ((v124[2] << 8))\n
                v24 = v124[3];\n
        }\n
    }\n
    v125 = v24 & 1;\n
    cgc_uint2str(&v123, 12, v125);\n
    v23 = &v123;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v123)) < 0)\n
        cgc__terminate(1);\n
    v191 = v126;\n
    *(v191) = *(v191) - 4;\n
    v192 = v127;\n
    *(v192) = *(v192) + 4;\n
    v91 = a0;\n
    v90 = a1;\n
    memset(&v88, 0, 12);\n
    if (*(v90) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v89 = *(&*(v91));\n
    cgc_uint2str(&v88, 12, v89);\n
    v22 = &v88;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v88)) < 0)\n
        cgc__terminate(1);\n
    v193 = v90;\n
    *(v193) = *(v193) - 4;\n
    v194 = v91;\n
    *(v194) = *(v194) + 4;\n
    v79 = a0;\n
    v78 = a1;\n
    memset(&v76, 0, 21);\n
    if (*(v78) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v77) = *(&*(v79));\n
    cgc_uint2str(&v76, 21, *(&v77));\n
    v21 = &v76;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v76)) < 0)\n
        cgc__terminate(1);\n
    v195 = v78;\n
    *(v195) = *(v195) - 8;\n
    v196 = v79;\n
    *(v196) = *(v196) + 8;\n
    v71 = a0;\n
    v70 = a1;\n
    memset(&v68, 0, 4);\n
    if (*(v70) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(v71)->field_0;\n
    cgc_uint2str(&v68, 4, v69);\n
    v20 = &v68;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v68)) < 0)\n
        cgc__terminate(1);\n
    v197 = v70;\n
    *(v197) = *(v197) - 1;\n
    v198 = v71;\n
    *(v198) = *(v198) + 1;\n
    v155 = a0;\n
    v154 = a1;\n
    memset(&v152, 0, 21);\n
    if (*(v154) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v153) = *(&*(v155));\n
    cgc_uint2str(&v152, 21, *(&v153));\n
    v19 = &v152;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v152)) < 0)\n
        cgc__terminate(1);\n
    v199 = v154;\n
    *(v199) = *(v199) - 8;\n
    v200 = v155;\n
    *(v200) = *(v200) + 8;\n
    v122 = a0;\n
    v121 = a1;\n
    *(&v119) = *(v122);\n
    memset(&v118, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if ((v119[0] << 24))\n
    {\n
        v18 = 0;\n
        if ((v119[1] << 16))\n
        {\n
            v18 = 0;\n
            if ((v119[2] << 8))\n
                v18 = v119[3];\n
        }\n
    }\n
    v120 = v18 & 1;\n
    cgc_uint2str(&v118, 12, v120);\n
    v17 = &v118;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v118)) < 0)\n
        cgc__terminate(1);\n
    v201 = v121;\n
    *(v201) = *(v201) - 4;\n
    v202 = v122;\n
    *(v202) = *(v202) + 4;\n
    v117 = a0;\n
    v116 = a1;\n
    *(&v114) = *(v117);\n
    memset(&v113, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((v114[0] << 24))\n
    {\n
        v16 = 0;\n
        if ((v114[1] << 16))\n
        {\n
            v16 = 0;\n
            if ((v114[2] << 8))\n
                v16 = v114[3];\n
        }\n
    }\n
    v115 = v16 & 1;\n
    cgc_uint2str(&v113, 12, v115);\n
    v15 = &v113;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v113)) < 0)\n
        cgc__terminate(1);\n
    v203 = v116;\n
    *(v203) = *(v203) - 4;\n
    v204 = v117;\n
    *(v204) = *(v204) + 4;\n
    v87 = a0;\n
    v86 = a1;\n
    memset(&v84, 0, 12);\n
    if (*(v86) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v85 = *(&*(v87));\n
    cgc_uint2str(&v84, 12, v85);\n
    v14 = &v84;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v84)) < 0)\n
        cgc__terminate(1);\n
    v205 = v86;\n
    *(v205) = *(v205) - 4;\n
    v206 = v87;\n
    *(v206) = *(v206) + 4;\n
    v167 = a0;\n
    v166 = a1;\n
    if (*(v166) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v165 = *(v167)->field_0;\n
    v207 = v166;\n
    *(v207) = *(v207) - 1;\n
    v208 = v167;\n
    *(v208) = *(v208) + 1;\n
    if (v165 <= *(v166) && !(!v165))\n
        goto LABEL_4aee38;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4aee38:\n
    v164 = cgc_calloc(v165);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v164, *(v167), v165);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v209 = v167;\n
    *(v209) = &(*(v209))[v165];\n
    v210 = v166;\n
    *(v210) = *(v210) - v165;\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    v139 = a0;\n
    v138 = a1;\n
    if (*(v138) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v138) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v138);\n
    v137 = v13;\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v136 = cgc_calloc(134);\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v136, \"Str: \");\n
    cgc_strncpy(v136 + 5, *(v139), v137);\n
    v212 = v139;\n
    *(v212) = &(*(v212))[4 + cgc_strlen(v136)];\n
    v214 = v138;\n
    *(v214) = *(v214) - (cgc_strlen(v136) + -4);\n
    cgc_checkheap();\n
    cgc_free(v136);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v151 = a0;\n
    v150 = a1;\n
    memset(&v148, 0, 21);\n
    if (*(v150) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v149) = *(&*(v151));\n
    cgc_uint2str(&v148, 21, *(&v149));\n
    v12 = &v148;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v148)) < 0)\n
        cgc__terminate(1);\n
    v215 = v150;\n
    *(v215) = *(v215) - 8;\n
    v216 = v151;\n
    *(v216) = *(v216) + 8;\n
    v103 = a0;\n
    v102 = a1;\n
    if (*(v102) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = *(&*(v103));\n
    v217 = v102;\n
    *(v217) = *(v217) - 2;\n
    v218 = v103;\n
    *(v218) = *(v218) + 2;\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_4af2e0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4af2e0:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v219 = v102;\n
    *(v219) = *(v219) - v101;\n
    v220 = v103;\n
    *(v220) = &(*(v220))[v101];\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v147 = a0;\n
    v146 = a1;\n
    memset(&v144, 0, 21);\n
    if (*(v146) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v145) = *(&*(v147));\n
    cgc_uint2str(&v144, 21, *(&v145));\n
    v11 = &v144;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v144)) < 0)\n
        cgc__terminate(1);\n
    v221 = v146;\n
    *(v221) = *(v221) - 8;\n
    v222 = v147;\n
    *(v222) = *(v222) + 8;\n
    v135 = a0;\n
    v134 = a1;\n
    if (*(v134) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v134) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v134);\n
    v133 = v10;\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v132 = cgc_calloc(134);\n
    if (!v132)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v132, \"Str: \");\n
    cgc_strncpy(v132 + 5, *(v135), v133);\n
    v224 = v135;\n
    *(v224) = &(*(v224))[4 + cgc_strlen(v132)];\n
    v226 = v134;\n
    *(v226) = *(v226) - (cgc_strlen(v132) + -4);\n
    cgc_checkheap();\n
    cgc_free(v132);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v75 = a0;\n
    v74 = a1;\n
    memset(&v72, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v73) = *(&*(v75));\n
    cgc_uint2str(&v72, 21, *(&v73));\n
    v9 = &v72;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v72)) < 0)\n
        cgc__terminate(1);\n
    v227 = v74;\n
    *(v227) = *(v227) - 8;\n
    v228 = v75;\n
    *(v228) = *(v228) + 8;\n
    v55 = a0;\n
    v54 = a1;\n
    if (*(v54) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v54) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v54);\n
    v53 = v8;\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = cgc_calloc(134);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v52, \"Str: \");\n
    cgc_strncpy(v52 + 5, *(v55), v53);\n
    v230 = v55;\n
    *(v230) = &(*(v230))[4 + cgc_strlen(v52)];\n
    v232 = v54;\n
    *(v232) = *(v232) - (cgc_strlen(v52) + -4);\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v163 = a0;\n
    v162 = a1;\n
    if (*(v162) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v161 = *(v163)->field_0;\n
    v233 = v162;\n
    *(v233) = *(v233) - 1;\n
    v234 = v163;\n
    *(v234) = *(v234) + 1;\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_4afa86;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4afa86:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v235 = v163;\n
    *(v235) = &(*(v235))[v161];\n
    v236 = v162;\n
    *(v236) = *(v236) - v161;\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v143 = a0;\n
    v142 = a1;\n
    memset(&v140, 0, 21);\n
    if (*(v142) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v141) = *(&*(v143));\n
    cgc_uint2str(&v140, 21, *(&v141));\n
    v7 = &v140;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v140)) < 0)\n
        cgc__terminate(1);\n
    v237 = v142;\n
    *(v237) = *(v237) - 8;\n
    v238 = v143;\n
    *(v238) = *(v238) + 8;\n
    v99 = a0;\n
    v98 = a1;\n
    if (*(v98) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(&*(v99));\n
    v239 = v98;\n
    *(v239) = *(v239) - 2;\n
    v240 = v99;\n
    *(v240) = *(v240) + 2;\n
    if (v97 <= *(v98) && !(!v97))\n
        goto LABEL_4afd3b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4afd3b:\n
    v96 = cgc_calloc(v97);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v96, *(v99), v97);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v241 = v98;\n
    *(v241) = *(v241) - v97;\n
    v242 = v99;\n
    *(v242) = &(*(v242))[v97];\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    v107 = a0;\n
    v106 = a1;\n
    if (*(v106) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(&*(v107));\n
    v243 = v106;\n
    *(v243) = *(v243) - 2;\n
    v244 = v107;\n
    *(v244) = *(v244) + 2;\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_4aff0b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4aff0b:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v245 = v106;\n
    *(v245) = *(v245) - v105;\n
    v246 = v107;\n
    *(v246) = &(*(v246))[v105];\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v38 = a0;\n
    v37 = a1;\n
    *(&v35) = *(v38);\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v35[0] << 8))\n
        v6 = v35[1];\n
    v36 = v6 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v5 = &v34;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v247 = v37;\n
    *(v247) = *(v247) - 2;\n
    v248 = v38;\n
    *(v248) = *(v248) + 2;\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(v47)->field_0;\n
    v249 = v46;\n
    *(v249) = *(v249) - 1;\n
    v250 = v47;\n
    *(v250) = *(v250) + 1;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_4b0221;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b0221:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v251 = v47;\n
    *(v251) = &(*(v251))[v45];\n
    v252 = v46;\n
    *(v252) = *(v252) - v45;\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v112 = a0;\n
    v111 = a1;\n
    *(&v109) = *(v112);\n
    memset(&v108, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v109[0] << 24))\n
    {\n
        v4 = 0;\n
        if ((v109[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v109[2] << 8))\n
                v4 = v109[3];\n
        }\n
    }\n
    v110 = v4 & 1;\n
    cgc_uint2str(&v108, 12, v110);\n
    v3 = &v108;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v253 = v111;\n
    *(v253) = *(v253) - 4;\n
    v254 = v112;\n
    *(v254) = *(v254) + 4;\n
    v83 = a0;\n
    v82 = a1;\n
    memset(&v80, 0, 12);\n
    if (*(v82) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v81 = *(&*(v83));\n
    cgc_uint2str(&v80, 12, v81);\n
    v2 = &v80;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v80)) < 0)\n
        cgc__terminate(1);\n
    v255 = v82;\n
    *(v255) = *(v255) - 4;\n
    v256 = v83;\n
    *(v256) = *(v256) + 4;\n
    v67 = a0;\n
    v66 = a1;\n
    memset(&v64, 0, 4);\n
    if (*(v66) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v65 = *(v67)->field_0;\n
    cgc_uint2str(&v64, 4, v65);\n
    v1 = &v64;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v64)) < 0)\n
        cgc__terminate(1);\n
    v257 = v66;\n
    *(v257) = *(v257) - 1;\n
    v258 = v67;\n
    *(v258) = *(v258) + 1;\n
    v131 = a0;\n
    v130 = a1;\n
    if (*(v130) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v130) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v130);\n
    v129 = v0;\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v128 = cgc_calloc(134);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v128, \"Str: \");\n
    cgc_strncpy(v128 + 5, *(v131), v129);\n
    v260 = v131;\n
    *(v260) = &(*(v260))[4 + cgc_strlen(v128)];\n
    v262 = v130;\n
    *(v262) = *(v262) - (cgc_strlen(v128) + -4);\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v32 ^= cgc__cookie;\n
    if (v32)\n
        cgc___stack_cookie_fail();\n
    v263 = a1;\n
    if (*(a1) > 0 && v31 >= 0)\n
    {\n
        v263 = v31;\n
        if (v263 < 0)\n
            v263 = *(&(&v33)[8 * v31])(a0, a1);\n
    }\n
    return v263;\n
}\n
", "4917493:sub_4b08f5": null, "4917504:cgc_process_llamacarnaptious": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacarnaptious(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x59c]\n
    struct_1 *v1;  // [bp-0x598]\n
    struct_1 *v2;  // [bp-0x590]\n
    struct_1 *v3;  // [bp-0x588]\n
    unsigned int v4;  // [bp-0x57c]\n
    struct_1 *v5;  // [bp-0x578]\n
    unsigned int v6;  // [bp-0x56c]\n
    struct_1 *v7;  // [bp-0x568]\n
    struct_1 *v8;  // [bp-0x560]\n
    char v9;  // [bp-0x551]\n
    struct_1 *v10;  // [bp-0x550]\n
    char v11;  // [bp-0x541]\n
    struct_1 *v12;  // [bp-0x540]\n
    char v13;  // [bp-0x531]\n
    struct_1 *v14;  // [bp-0x530]\n
    struct_1 *v15;  // [bp-0x528]\n
    char v16;  // [bp-0x519]\n
    struct_1 *v17;  // [bp-0x518]\n
    struct_1 *v18;  // [bp-0x510]\n
    struct_1 *v19;  // [bp-0x508]\n
    struct_1 *v20;  // [bp-0x500]\n
    struct_1 *v21;  // [bp-0x4f8]\n
    struct_1 *v22;  // [bp-0x4f0]\n
    char v23;  // [bp-0x4e1]\n
    struct_1 *v24;  // [bp-0x4e0]\n
    unsigned int v25;  // [bp-0x4d4]\n
    struct_1 *v26;  // [bp-0x4d0]\n
    char v27;  // [bp-0x4c1]\n
    struct_1 *v28;  // [bp-0x4c0]\n
    unsigned int v29;  // [bp-0x4b4]\n
    struct_1 *v30;  // [bp-0x4b0]\n
    char v31;  // [bp-0x4a1]\n
    unsigned int v32;  // [bp-0x4a0]\n
    unsigned int v33;  // [bp-0x49c]\n
    char v34;  // [bp-0x498]\n
    char v35;  // [bp-0x47e]\n
    char v36[2];  // [bp-0x478]\n
    unsigned short v37;  // [bp-0x46a]\n
    unsigned int *v38;  // [bp-0x468]\n
    struct struct_0 **v39;  // [bp-0x460]\n
    char v40;  // [bp-0x458]\n
    char v41[8];  // [bp-0x438]\n
    unsigned int v42;  // [bp-0x430]\n
    unsigned int *v43;  // [bp-0x428]\n
    struct struct_0 **v44;  // [bp-0x420]\n
    char v45;  // [bp-0x418]\n
    char v46[8];  // [bp-0x400]\n
    unsigned int v47;  // [bp-0x3f8]\n
    unsigned int *v48;  // [bp-0x3f0]\n
    struct struct_0 **v49;  // [bp-0x3e8]\n
    unsigned long v50;  // [bp-0x3e0]\n
    char v51;  // [bp-0x3d1]\n
    unsigned int *v52;  // [bp-0x3d0]\n
    struct struct_0 **v53;  // [bp-0x3c8]\n
    unsigned long v54;  // [bp-0x3c0]\n
    char v55;  // [bp-0x3b1]\n
    unsigned int *v56;  // [bp-0x3b0]\n
    struct struct_0 **v57;  // [bp-0x3a8]\n
    unsigned long v58;  // [bp-0x3a0]\n
    char v59;  // [bp-0x391]\n
    unsigned int *v60;  // [bp-0x390]\n
    struct struct_0 **v61;  // [bp-0x388]\n
    char *v62;  // [bp-0x380]\n
    unsigned int v63;  // [bp-0x374]\n
    unsigned int *v64;  // [bp-0x370]\n
    struct struct_0 **v65;  // [bp-0x368]\n
    char *v66;  // [bp-0x360]\n
    unsigned int v67;  // [bp-0x354]\n
    unsigned int *v68;  // [bp-0x350]\n
    struct struct_0 **v69;  // [bp-0x348]\n
    char *v70;  // [bp-0x340]\n
    unsigned int v71;  // [bp-0x334]\n
    unsigned int *v72;  // [bp-0x330]\n
    struct struct_0 **v73;  // [bp-0x328]\n
    char v74;  // [bp-0x320]\n
    unsigned short v75;  // [bp-0x31a]\n
    unsigned int *v76;  // [bp-0x318]\n
    struct struct_0 **v77;  // [bp-0x310]\n
    char v78;  // [bp-0x308]\n
    unsigned short v79;  // [bp-0x302]\n
    unsigned int *v80;  // [bp-0x300]\n
    struct struct_0 **v81;  // [bp-0x2f8]\n
    char v82;  // [bp-0x2f0]\n
    unsigned short v83;  // [bp-0x2ea]\n
    unsigned int *v84;  // [bp-0x2e8]\n
    struct struct_0 **v85;  // [bp-0x2e0]\n
    char v86;  // [bp-0x2d5]\n
    char v87;  // [bp-0x2d1]\n
    unsigned int *v88;  // [bp-0x2d0]\n
    struct struct_0 **v89;  // [bp-0x2c8]\n
    char v90;  // [bp-0x2bd]\n
    char v91;  // [bp-0x2b9]\n
    unsigned int *v92;  // [bp-0x2b8]\n
    struct struct_0 **v93;  // [bp-0x2b0]\n
    char v94;  // [bp-0x2a8]\n
    unsigned int v95;  // [bp-0x29c]\n
    unsigned int *v96;  // [bp-0x298]\n
    struct struct_0 **v97;  // [bp-0x290]\n
    char v98;  // [bp-0x288]\n
    unsigned int v99;  // [bp-0x27c]\n
    unsigned int *v100;  // [bp-0x278]\n
    struct struct_0 **v101;  // [bp-0x270]\n
    char v102;  // [bp-0x268]\n
    unsigned int v103;  // [bp-0x25c]\n
    unsigned int *v104;  // [bp-0x258]\n
    struct struct_0 **v105;  // [bp-0x250]\n
    char v106;  // [bp-0x248]\n
    unsigned int v107;  // [bp-0x23c]\n
    unsigned int *v108;  // [bp-0x238]\n
    struct struct_0 **v109;  // [bp-0x230]\n
    char v110;  // [bp-0x228]\n
    unsigned int v111;  // [bp-0x21c]\n
    unsigned int *v112;  // [bp-0x218]\n
    struct struct_0 **v113;  // [bp-0x210]\n
    char v114;  // [bp-0x208]\n
    unsigned int v115;  // [bp-0x1fc]\n
    unsigned int *v116;  // [bp-0x1f8]\n
    struct struct_0 **v117;  // [bp-0x1f0]\n
    unsigned long v118;  // [bp-0x1e8]\n
    unsigned short v119;  // [bp-0x1da]\n
    unsigned int *v120;  // [bp-0x1d8]\n
    struct struct_0 **v121;  // [bp-0x1d0]\n
    unsigned long v122;  // [bp-0x1c8]\n
    unsigned short v123;  // [bp-0x1ba]\n
    unsigned int *v124;  // [bp-0x1b8]\n
    struct struct_0 **v125;  // [bp-0x1b0]\n
    unsigned long v126;  // [bp-0x1a8]\n
    unsigned short v127;  // [bp-0x19a]\n
    unsigned int *v128;  // [bp-0x198]\n
    struct struct_0 **v129;  // [bp-0x190]\n
    unsigned long v130;  // [bp-0x188]\n
    unsigned short v131;  // [bp-0x17a]\n
    unsigned int *v132;  // [bp-0x178]\n
    struct struct_0 **v133;  // [bp-0x170]\n
    char v134;  // [bp-0x164]\n
    char v135[4];  // [bp-0x158]\n
    unsigned int v136;  // [bp-0x14c]\n
    unsigned int *v137;  // [bp-0x148]\n
    struct struct_0 **v138;  // [bp-0x140]\n
    char v139;  // [bp-0x134]\n
    char *v140;  // [bp-0x128]\n
    unsigned int v141;  // [bp-0x11c]\n
    unsigned int *v142;  // [bp-0x118]\n
    struct struct_0 **v143;  // [bp-0x110]\n
    char v144;  // [bp-0x104]\n
    char *v145;  // [bp-0xf8]\n
    unsigned int v146;  // [bp-0xec]\n
    unsigned int *v147;  // [bp-0xe8]\n
    struct struct_0 **v148;  // [bp-0xe0]\n
    char v149;  // [bp-0xd4]\n
    char *v150;  // [bp-0xc8]\n
    unsigned int v151;  // [bp-0xbc]\n
    unsigned int *v152;  // [bp-0xb8]\n
    struct struct_0 **v153;  // [bp-0xb0]\n
    char *v154;  // [bp-0xa8]\n
    unsigned int v155;  // [bp-0x9c]\n
    unsigned int *v156;  // [bp-0x98]\n
    struct struct_0 **v157;  // [bp-0x90]\n
    char *v158;  // [bp-0x88]\n
    unsigned int v159;  // [bp-0x7c]\n
    unsigned int *v160;  // [bp-0x78]\n
    struct struct_0 **v161;  // [bp-0x70]\n
    char v162;  // [bp-0x68]\n
    unsigned int v163;  // [bp-0x50]\n
    unsigned int *v164;  // [bp-0x48]\n
    struct struct_0 **v165;  // [bp-0x40]\n
    char v166;  // [bp-0x38]\n
    unsigned int v167;  // [bp-0x20]\n
    unsigned int *v168;  // [bp-0x18]\n
    struct struct_0 **v169;  // [bp-0x10]\n
    unsigned int *v171;  // rax\n
    struct struct_0 **v172;  // rax\n
    struct struct_0 **v174;  // rax\n
    unsigned int *v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_0 **v178;  // rax\n
    unsigned int *v179;  // rax\n
    struct struct_0 **v180;  // rax\n
    struct struct_0 **v182;  // rax\n
    unsigned int *v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_0 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_0 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_0 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_0 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_0 **v194;  // rax\n
    unsigned int *v195;  // rax\n
    struct struct_0 **v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_0 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_0 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_0 **v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_0 **v206;  // rax\n
    unsigned int *v207;  // rax\n
    struct struct_0 **v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_0 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_0 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_0 **v214;  // rax\n
    unsigned int *v215;  // rax\n
    struct struct_0 **v216;  // rax\n
    unsigned int *v217;  // rax\n
    struct struct_0 **v218;  // rax\n
    struct struct_0 **v220;  // rax\n
    unsigned int *v222;  // rax\n
    unsigned int *v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    struct struct_0 **v225;  // rax\n
    unsigned int *v226;  // rax\n
    unsigned int *v227;  // rax\n
    struct struct_0 **v228;  // rax\n
    unsigned int *v229;  // rax\n
    struct struct_0 **v230;  // rax\n
    unsigned int *v231;  // rax\n
    struct struct_0 **v232;  // rax\n
    struct struct_0 **v234;  // rax\n
    unsigned int *v236;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v238;  // rax\n
    unsigned int *v239;  // rax\n
    struct struct_0 **v240;  // rax\n
    unsigned int *v241;  // rax\n
    struct struct_0 **v242;  // rax\n
    unsigned int *v243;  // rax\n
    struct struct_0 **v244;  // rax\n
    unsigned int *v245;  // rax\n
    struct struct_0 **v246;  // rax\n
    struct struct_0 **v247;  // rax\n
    unsigned int *v248;  // rax\n
    unsigned int *v249;  // rax\n
    struct struct_0 **v250;  // rax\n
    unsigned int *v251;  // rax\n
    struct struct_0 **v252;  // rax\n
    unsigned int *v253;  // rax\n
    struct struct_0 **v254;  // rax\n
    struct struct_0 **v256;  // rax\n
    unsigned int *v258;  // rax\n
    unsigned int *v259;  // rax, Other Possible Types: unsigned long\n
\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamacarnaptious===\", 22) < 0)\n
        cgc__terminate(1);\n
    v49 = a0;\n
    v48 = a1;\n
    *(&v46[0]) = *(v49);\n
    memset(&v45, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = 0;\n
    if (v46[0] << 56)\n
    {\n
        v31 = 0;\n
        if (v46[1] << 48)\n
        {\n
            v31 = 0;\n
            if (v46[2] << 40)\n
            {\n
                v31 = 0;\n
                if (v46[3] << 32)\n
                {\n
                    v31 = 0;\n
                    if ((v46[4] << 24))\n
                    {\n
                        v31 = 0;\n
                        if ((v46[5] << 16))\n
                        {\n
                            v31 = 0;\n
                            if ((v46[6] << 8))\n
                                v31 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v47) = v31 & 1;\n
    cgc_uint2str(&v45, 21, *(&v47));\n
    v30 = &v45;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v171 = v48;\n
    *(v171) = *(v171) - 8;\n
    v172 = v49;\n
    *(v172) = *(v172) + 8;\n
    v73 = a0;\n
    v72 = a1;\n
    if (*(v72) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v72) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v72);\n
    v71 = v29;\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = cgc_calloc(134);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v70, \"Str: \");\n
    cgc_strncpy(v70 + 5, *(v73), v71);\n
    v174 = v73;\n
    *(v174) = &(*(v174))[4 + cgc_strlen(v70)];\n
    v176 = v72;\n
    *(v176) = *(v176) - (cgc_strlen(v70) + -4);\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v85 = a0;\n
    v84 = a1;\n
    memset(&v82, 0, 6);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    cgc_uint2str(&v82, 6, v83);\n
    v28 = &v82;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v82)) < 0)\n
        cgc__terminate(1);\n
    v177 = v84;\n
    *(v177) = *(v177) - 2;\n
    v178 = v85;\n
    *(v178) = *(v178) + 2;\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = 0;\n
    if ((v36[0] << 8))\n
        v27 = v36[1];\n
    v37 = v27 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v26 = &v35;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v179 = v38;\n
    *(v179) = *(v179) - 2;\n
    v180 = v39;\n
    *(v180) = *(v180) + 2;\n
    v69 = a0;\n
    v68 = a1;\n
    if (*(v68) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v68) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v68);\n
    v67 = v25;\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = cgc_calloc(134);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v66, \"Str: \");\n
    cgc_strncpy(v66 + 5, *(v69), v67);\n
    v182 = v69;\n
    *(v182) = &(*(v182))[4 + cgc_strlen(v66)];\n
    v184 = v68;\n
    *(v184) = *(v184) - (cgc_strlen(v66) + -4);\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v117 = a0;\n
    v116 = a1;\n
    memset(&v114, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v115 = *(&*(v117));\n
    cgc_uint2str(&v114, 12, v115);\n
    v24 = &v114;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v114)) < 0)\n
        cgc__terminate(1);\n
    v185 = v116;\n
    *(v185) = *(v185) - 4;\n
    v186 = v117;\n
    *(v186) = *(v186) + 4;\n
    v153 = a0;\n
    v152 = a1;\n
    v150 = &*(v153)->field_0;\n
    memset(&v149, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = 0;\n
    if ((*(v150) << 24))\n
    {\n
        v23 = 0;\n
        if ((v150[1] << 16))\n
        {\n
            v23 = 0;\n
            if ((v150[2] << 8))\n
                v23 = v150[3];\n
        }\n
    }\n
    v151 = v23 & 1;\n
    cgc_uint2str(&v149, 12, v151);\n
    v22 = &v149;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v149)) < 0)\n
        cgc__terminate(1);\n
    v187 = v152;\n
    *(v187) = *(v187) - 4;\n
    v188 = v153;\n
    *(v188) = *(v188) + 4;\n
    v113 = a0;\n
    v112 = a1;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v111 = *(&*(v113));\n
    cgc_uint2str(&v110, 12, v111);\n
    v21 = &v110;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v110)) < 0)\n
        cgc__terminate(1);\n
    v189 = v112;\n
    *(v189) = *(v189) - 4;\n
    v190 = v113;\n
    *(v190) = *(v190) + 4;\n
    v109 = a0;\n
    v108 = a1;\n
    memset(&v106, 0, 12);\n
    if (*(v108) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v107 = *(&*(v109));\n
    cgc_uint2str(&v106, 12, v107);\n
    v20 = &v106;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v106)) < 0)\n
        cgc__terminate(1);\n
    v191 = v108;\n
    *(v191) = *(v191) - 4;\n
    v192 = v109;\n
    *(v192) = *(v192) + 4;\n
    v81 = a0;\n
    v80 = a1;\n
    memset(&v78, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    cgc_uint2str(&v78, 6, v79);\n
    v19 = &v78;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v78)) < 0)\n
        cgc__terminate(1);\n
    v193 = v80;\n
    *(v193) = *(v193) - 2;\n
    v194 = v81;\n
    *(v194) = *(v194) + 2;\n
    v133 = a0;\n
    v132 = a1;\n
    if (*(v132) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v131 = *(&*(v133));\n
    v195 = v132;\n
    *(v195) = *(v195) - 2;\n
    v196 = v133;\n
    *(v196) = *(v196) + 2;\n
    if (v131 <= *(v132) && !(!v131))\n
        goto LABEL_4b1831;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b1831:\n
    v130 = cgc_calloc(v131);\n
    if (!v130)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v130, *(v133), v131);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v197 = v132;\n
    *(v197) = *(v197) - v131;\n
    v198 = v133;\n
    *(v198) = &(*(v198))[v131];\n
    cgc_checkheap();\n
    cgc_free(v130);\n
    v105 = a0;\n
    v104 = a1;\n
    memset(&v102, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(&*(v105));\n
    cgc_uint2str(&v102, 12, v103);\n
    v18 = &v102;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v102)) < 0)\n
        cgc__terminate(1);\n
    v199 = v104;\n
    *(v199) = *(v199) - 4;\n
    v200 = v105;\n
    *(v200) = *(v200) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v59 = *(v61)->field_0;\n
    v201 = v60;\n
    *(v201) = *(v201) - 1;\n
    v202 = v61;\n
    *(v202) = *(v202) + 1;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_4b1b00;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b1b00:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v203 = v61;\n
    *(v203) = &(*(v203))[v59];\n
    v204 = v60;\n
    *(v204) = *(v204) - v59;\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v101 = a0;\n
    v100 = a1;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(&*(v101));\n
    cgc_uint2str(&v98, 12, v99);\n
    v17 = &v98;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v205 = v100;\n
    *(v205) = *(v205) - 4;\n
    v206 = v101;\n
    *(v206) = *(v206) + 4;\n
    v148 = a0;\n
    v147 = a1;\n
    v145 = &*(v148)->field_0;\n
    memset(&v144, 0, 12);\n
    if (*(v147) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = 0;\n
    if ((*(v145) << 24))\n
    {\n
        v16 = 0;\n
        if ((v145[1] << 16))\n
        {\n
            v16 = 0;\n
            if ((v145[2] << 8))\n
                v16 = v145[3];\n
        }\n
    }\n
    v146 = v16 & 1;\n
    cgc_uint2str(&v144, 12, v146);\n
    v15 = &v144;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v144)) < 0)\n
        cgc__terminate(1);\n
    v207 = v147;\n
    *(v207) = *(v207) - 4;\n
    v208 = v148;\n
    *(v208) = *(v208) + 4;\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 12);\n
    if (*(v96) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(&*(v97));\n
    cgc_uint2str(&v94, 12, v95);\n
    v14 = &v94;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v209 = v96;\n
    *(v209) = *(v209) - 4;\n
    v210 = v97;\n
    *(v210) = *(v210) + 4;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41[0]) = *(v44);\n
    memset(&v40, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v13 = 0;\n
    if (v41[0] << 56)\n
    {\n
        v13 = 0;\n
        if (v41[1] << 48)\n
        {\n
            v13 = 0;\n
            if (v41[2] << 40)\n
            {\n
                v13 = 0;\n
                if (v41[3] << 32)\n
                {\n
                    v13 = 0;\n
                    if ((v41[4] << 24))\n
                    {\n
                        v13 = 0;\n
                        if ((v41[5] << 16))\n
                        {\n
                            v13 = 0;\n
                            if ((v41[6] << 8))\n
                                v13 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v42) = v13 & 1;\n
    cgc_uint2str(&v40, 21, *(&v42));\n
    v12 = &v40;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v211 = v43;\n
    *(v211) = *(v211) - 8;\n
    v212 = v44;\n
    *(v212) = *(v212) + 8;\n
    v143 = a0;\n
    v142 = a1;\n
    v140 = &*(v143)->field_0;\n
    memset(&v139, 0, 12);\n
    if (*(v142) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if ((*(v140) << 24))\n
    {\n
        v11 = 0;\n
        if ((v140[1] << 16))\n
        {\n
            v11 = 0;\n
            if ((v140[2] << 8))\n
                v11 = v140[3];\n
        }\n
    }\n
    v141 = v11 & 1;\n
    cgc_uint2str(&v139, 12, v141);\n
    v10 = &v139;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v139)) < 0)\n
        cgc__terminate(1);\n
    v213 = v142;\n
    *(v213) = *(v213) - 4;\n
    v214 = v143;\n
    *(v214) = *(v214) + 4;\n
    v138 = a0;\n
    v137 = a1;\n
    *(&v135) = *(v138);\n
    memset(&v134, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v135[0] << 24))\n
    {\n
        v9 = 0;\n
        if ((v135[1] << 16))\n
        {\n
            v9 = 0;\n
            if ((v135[2] << 8))\n
                v9 = v135[3];\n
        }\n
    }\n
    v136 = v9 & 1;\n
    cgc_uint2str(&v134, 12, v136);\n
    v8 = &v134;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v134)) < 0)\n
        cgc__terminate(1);\n
    v215 = v137;\n
    *(v215) = *(v215) - 4;\n
    v216 = v138;\n
    *(v216) = *(v216) + 4;\n
    v169 = a0;\n
    v168 = a1;\n
    memset(&v166, 0, 21);\n
    if (*(v168) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v167) = *(&*(v169));\n
    cgc_uint2str(&v166, 21, *(&v167));\n
    v7 = &v166;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v166)) < 0)\n
        cgc__terminate(1);\n
    v217 = v168;\n
    *(v217) = *(v217) - 8;\n
    v218 = v169;\n
    *(v218) = *(v218) + 8;\n
    v161 = a0;\n
    v160 = a1;\n
    if (*(v160) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v160) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v160);\n
    v159 = v6;\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v158 = cgc_calloc(134);\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v158, \"Str: \");\n
    cgc_strncpy(v158 + 5, *(v161), v159);\n
    v220 = v161;\n
    *(v220) = &(*(v220))[4 + cgc_strlen(v158)];\n
    v222 = v160;\n
    *(v222) = *(v222) - (cgc_strlen(v158) + -4);\n
    cgc_checkheap();\n
    cgc_free(v158);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v57 = a0;\n
    v56 = a1;\n
    if (*(v56) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(v57)->field_0;\n
    v223 = v56;\n
    *(v223) = *(v223) - 1;\n
    v224 = v57;\n
    *(v224) = *(v224) + 1;\n
    if (v55 <= *(v56) && !(!v55))\n
        goto LABEL_4b2811;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b2811:\n
    v54 = cgc_calloc(v55);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v54, *(v57), v55);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v225 = v57;\n
    *(v225) = &(*(v225))[v55];\n
    v226 = v56;\n
    *(v226) = *(v226) - v55;\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    v129 = a0;\n
    v128 = a1;\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v127 = *(&*(v129));\n
    v227 = v128;\n
    *(v227) = *(v227) - 2;\n
    v228 = v129;\n
    *(v228) = *(v228) + 2;\n
    if (v127 <= *(v128) && !(!v127))\n
        goto LABEL_4b29e1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b29e1:\n
    v126 = cgc_calloc(v127);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v126, *(v129), v127);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v229 = v128;\n
    *(v229) = *(v229) - v127;\n
    v230 = v129;\n
    *(v230) = &(*(v230))[v127];\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 4);\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(v93)->field_0;\n
    cgc_uint2str(&v90, 4, v91);\n
    v5 = &v90;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v231 = v92;\n
    *(v231) = *(v231) - 1;\n
    v232 = v93;\n
    *(v232) = *(v232) + 1;\n
    v65 = a0;\n
    v64 = a1;\n
    if (*(v64) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v64) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v64);\n
    v63 = v4;\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = cgc_calloc(134);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v62, \"Str: \");\n
    cgc_strncpy(v62 + 5, *(v65), v63);\n
    v234 = v65;\n
    *(v234) = &(*(v234))[4 + cgc_strlen(v62)];\n
    v236 = v64;\n
    *(v236) = *(v236) - (cgc_strlen(v62) + -4);\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v125 = a0;\n
    v124 = a1;\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v123 = *(&*(v125));\n
    v237 = v124;\n
    *(v237) = *(v237) - 2;\n
    v238 = v125;\n
    *(v238) = *(v238) + 2;\n
    if (v123 <= *(v124) && !(!v123))\n
        goto LABEL_4b2ea6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b2ea6:\n
    v122 = cgc_calloc(v123);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v122, *(v125), v123);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v239 = v124;\n
    *(v239) = *(v239) - v123;\n
    v240 = v125;\n
    *(v240) = &(*(v240))[v123];\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    v121 = a0;\n
    v120 = a1;\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v119 = *(&*(v121));\n
    v241 = v120;\n
    *(v241) = *(v241) - 2;\n
    v242 = v121;\n
    *(v242) = *(v242) + 2;\n
    if (v119 <= *(v120) && !(!v119))\n
        goto LABEL_4b3076;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b3076:\n
    v118 = cgc_calloc(v119);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v118, *(v121), v119);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v243 = v120;\n
    *(v243) = *(v243) - v119;\n
    v244 = v121;\n
    *(v244) = &(*(v244))[v119];\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    v53 = a0;\n
    v52 = a1;\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(v53)->field_0;\n
    v245 = v52;\n
    *(v245) = *(v245) - 1;\n
    v246 = v53;\n
    *(v246) = *(v246) + 1;\n
    if (v51 <= *(v52) && !(!v51))\n
        goto LABEL_4b3244;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b3244:\n
    v50 = cgc_calloc(v51);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v50, *(v53), v51);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v247 = v53;\n
    *(v247) = &(*(v247))[v51];\n
    v248 = v52;\n
    *(v248) = *(v248) - v51;\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    v77 = a0;\n
    v76 = a1;\n
    memset(&v74, 0, 6);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    cgc_uint2str(&v74, 6, v75);\n
    v3 = &v74;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v74)) < 0)\n
        cgc__terminate(1);\n
    v249 = v76;\n
    *(v249) = *(v249) - 2;\n
    v250 = v77;\n
    *(v250) = *(v250) + 2;\n
    v165 = a0;\n
    v164 = a1;\n
    memset(&v162, 0, 21);\n
    if (*(v164) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v163) = *(&*(v165));\n
    cgc_uint2str(&v162, 21, *(&v163));\n
    v2 = &v162;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v162)) < 0)\n
        cgc__terminate(1);\n
    v251 = v164;\n
    *(v251) = *(v251) - 8;\n
    v252 = v165;\n
    *(v252) = *(v252) + 8;\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 4);\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(v89)->field_0;\n
    cgc_uint2str(&v86, 4, v87);\n
    v1 = &v86;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v253 = v88;\n
    *(v253) = *(v253) - 1;\n
    v254 = v89;\n
    *(v254) = *(v254) + 1;\n
    v157 = a0;\n
    v156 = a1;\n
    if (*(v156) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v156) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v156);\n
    v155 = v0;\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v154 = cgc_calloc(134);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v154, \"Str: \");\n
    cgc_strncpy(v154 + 5, *(v157), v155);\n
    v256 = v157;\n
    *(v256) = &(*(v256))[4 + cgc_strlen(v154)];\n
    v258 = v156;\n
    *(v258) = *(v258) - (cgc_strlen(v154) + -4);\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v33 ^= cgc__cookie;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v259 = a1;\n
    if (*(a1) > 0 && v32 >= 0)\n
    {\n
        v259 = v32;\n
        if (v259 < 0)\n
            v259 = *(&(&v34)[8 * v32])(a0, a1);\n
    }\n
    return v259;\n
}\n
", "4929657:sub_4b3879": null, "4929664:cgc_process_llamaferocity": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaferocity(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x1cc]\n
    struct_1 *v1;  // [bp-0x1c8]\n
    struct_1 *v2;  // [bp-0x1c0]\n
    struct_1 *v3;  // [bp-0x1b8]\n
    char v4;  // [bp-0x1a9]\n
    struct_1 *v5;  // [bp-0x1a8]\n
    char v6;  // [bp-0x199]\n
    struct_1 *v7;  // [bp-0x198]\n
    struct_1 *v8;  // [bp-0x190]\n
    struct_1 *v9;  // [bp-0x188]\n
    unsigned int v10;  // [bp-0x180]\n
    unsigned int v11;  // [bp-0x17c]\n
    char v12;  // [bp-0x178]\n
    char v13;  // [bp-0x15e]\n
    char v14[2];  // [bp-0x158]\n
    unsigned short v15;  // [bp-0x14a]\n
    unsigned int *v16;  // [bp-0x148]\n
    struct struct_0 **v17;  // [bp-0x140]\n
    unsigned long v18;  // [bp-0x138]\n
    char v19;  // [bp-0x129]\n
    unsigned int *v20;  // [bp-0x128]\n
    struct struct_0 **v21;  // [bp-0x120]\n
    char v22;  // [bp-0x118]\n
    unsigned short v23;  // [bp-0x112]\n
    unsigned int *v24;  // [bp-0x110]\n
    struct struct_0 **v25;  // [bp-0x108]\n
    char v26;  // [bp-0x100]\n
    unsigned short v27;  // [bp-0xfa]\n
    unsigned int *v28;  // [bp-0xf8]\n
    struct struct_0 **v29;  // [bp-0xf0]\n
    char v30;  // [bp-0xe8]\n
    unsigned int v31;  // [bp-0xdc]\n
    unsigned int *v32;  // [bp-0xd8]\n
    struct struct_0 **v33;  // [bp-0xd0]\n
    char v34;  // [bp-0xc8]\n
    unsigned int v35;  // [bp-0xbc]\n
    unsigned int *v36;  // [bp-0xb8]\n
    struct struct_0 **v37;  // [bp-0xb0]\n
    unsigned long v38;  // [bp-0xa8]\n
    unsigned short v39;  // [bp-0x9a]\n
    unsigned int *v40;  // [bp-0x98]\n
    struct struct_0 **v41;  // [bp-0x90]\n
    char v42;  // [bp-0x84]\n
    char v43[4];  // [bp-0x78]\n
    unsigned int v44;  // [bp-0x6c]\n
    unsigned int *v45;  // [bp-0x68]\n
    struct struct_0 **v46;  // [bp-0x60]\n
    char *v47;  // [bp-0x58]\n
    unsigned int v48;  // [bp-0x4c]\n
    unsigned int *v49;  // [bp-0x48]\n
    struct struct_0 **v50;  // [bp-0x40]\n
    char v51;  // [bp-0x38]\n
    unsigned int v52;  // [bp-0x20]\n
    unsigned int *v53;  // [bp-0x18]\n
    struct struct_0 **v54;  // [bp-0x10]\n
    unsigned int *v56;  // rax\n
    struct struct_0 **v57;  // rax\n
    unsigned int *v58;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v60;  // rax\n
    struct struct_0 **v61;  // rax\n
    struct struct_0 **v62;  // rax\n
    unsigned int *v63;  // rax\n
    unsigned int *v64;  // rax\n
    struct struct_0 **v65;  // rax\n
    unsigned int *v66;  // rax\n
    struct struct_0 **v67;  // rax\n
    unsigned int *v68;  // rax\n
    struct struct_0 **v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_0 **v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_0 **v73;  // rax\n
    struct struct_0 **v75;  // rax\n
    unsigned int *v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax, Other Possible Types: unsigned long\n
\n
    v11 = cgc__cookie;\n
    v10 = -1;\n
    if (cgc_sendline(1, \"===llamaferocity===\", 19) < 0)\n
        cgc__terminate(1);\n
    v29 = a0;\n
    v28 = a1;\n
    memset(&v26, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v27 = *(&*(v29));\n
    cgc_uint2str(&v26, 6, v27);\n
    v9 = &v26;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v26)) < 0)\n
        cgc__terminate(1);\n
    v56 = v28;\n
    *(v56) = *(v56) - 2;\n
    v57 = v29;\n
    *(v57) = *(v57) + 2;\n
    v25 = a0;\n
    v24 = a1;\n
    memset(&v22, 0, 6);\n
    if (*(v24) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v23 = *(&*(v25));\n
    cgc_uint2str(&v22, 6, v23);\n
    v8 = &v22;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v58 = v24;\n
    *(v58) = *(v58) - 2;\n
    v59 = v25;\n
    *(v59) = *(v59) + 2;\n
    v21 = a0;\n
    v20 = a1;\n
    if (*(v20) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = *(v21)->field_0;\n
    v60 = v20;\n
    *(v60) = *(v60) - 1;\n
    v61 = v21;\n
    *(v61) = *(v61) + 1;\n
    if (v19 <= *(v20) && !(!v19))\n
        goto LABEL_4b3bd2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b3bd2:\n
    v18 = cgc_calloc(v19);\n
    if (!v18)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v18, *(v21), v19);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v62 = v21;\n
    *(v62) = &(*(v62))[v19];\n
    v63 = v20;\n
    *(v63) = *(v63) - v19;\n
    cgc_checkheap();\n
    cgc_free(v18);\n
    v37 = a0;\n
    v36 = a1;\n
    memset(&v34, 0, 12);\n
    if (*(v36) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(&*(v37));\n
    cgc_uint2str(&v34, 12, v35);\n
    v7 = &v34;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v34)) < 0)\n
        cgc__terminate(1);\n
    v64 = v36;\n
    *(v64) = *(v64) - 4;\n
    v65 = v37;\n
    *(v65) = *(v65) + 4;\n
    v46 = a0;\n
    v45 = a1;\n
    *(&v43) = *(v46);\n
    memset(&v42, 0, 12);\n
    if (*(v45) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((v43[0] << 24))\n
    {\n
        v6 = 0;\n
        if ((v43[1] << 16))\n
        {\n
            v6 = 0;\n
            if ((v43[2] << 8))\n
                v6 = v43[3];\n
        }\n
    }\n
    v44 = v6 & 1;\n
    cgc_uint2str(&v42, 12, v44);\n
    v5 = &v42;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v66 = v45;\n
    *(v66) = *(v66) - 4;\n
    v67 = v46;\n
    *(v67) = *(v67) + 4;\n
    v17 = a0;\n
    v16 = a1;\n
    *(&v14) = *(v17);\n
    memset(&v13, 0, 6);\n
    if (*(v16) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v14[0] << 8))\n
        v4 = v14[1];\n
    v15 = v4 & 1;\n
    cgc_uint2str(&v13, 6, v15);\n
    v3 = &v13;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v13)) < 0)\n
        cgc__terminate(1);\n
    v68 = v16;\n
    *(v68) = *(v68) - 2;\n
    v69 = v17;\n
    *(v69) = *(v69) + 2;\n
    v33 = a0;\n
    v32 = a1;\n
    memset(&v30, 0, 12);\n
    if (*(v32) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(&*(v33));\n
    cgc_uint2str(&v30, 12, v31);\n
    v2 = &v30;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v70 = v32;\n
    *(v70) = *(v70) - 4;\n
    v71 = v33;\n
    *(v71) = *(v71) + 4;\n
    v54 = a0;\n
    v53 = a1;\n
    memset(&v51, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v52) = *(&*(v54));\n
    cgc_uint2str(&v51, 21, *(&v52));\n
    v1 = &v51;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v51)) < 0)\n
        cgc__terminate(1);\n
    v72 = v53;\n
    *(v72) = *(v72) - 8;\n
    v73 = v54;\n
    *(v73) = *(v73) + 8;\n
    v50 = a0;\n
    v49 = a1;\n
    if (*(v49) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v49) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v49);\n
    v48 = v0;\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = cgc_calloc(134);\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v47, \"Str: \");\n
    cgc_strncpy(v47 + 5, *(v50), v48);\n
    v75 = v50;\n
    *(v75) = &(*(v75))[4 + cgc_strlen(v47)];\n
    v77 = v49;\n
    *(v77) = *(v77) - (cgc_strlen(v47) + -4);\n
    cgc_checkheap();\n
    cgc_free(v47);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(&*(v41));\n
    v78 = v40;\n
    *(v78) = *(v78) - 2;\n
    v79 = v41;\n
    *(v79) = *(v79) + 2;\n
    if (v39 <= *(v40) && !(!v39))\n
        goto LABEL_4b44e5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b44e5:\n
    v38 = cgc_calloc(v39);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v38, *(v41), v39);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v80 = v40;\n
    *(v80) = *(v80) - v39;\n
    v81 = v41;\n
    *(v81) = &(*(v81))[v39];\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    v11 ^= cgc__cookie;\n
    if (v11)\n
        cgc___stack_cookie_fail();\n
    v82 = a1;\n
    if (*(a1) > 0 && v10 >= 0)\n
    {\n
        v82 = v10;\n
        if (v82 < 0)\n
            v82 = *(&(&v12)[8 * v10])(a0, a1);\n
    }\n
    return v82;\n
}\n
", "4933183:sub_4b463f": null, "4933184:cgc_process_llamacoruscant": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamacoruscant(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x254]\n
    struct_0 *v1;  // [bp-0x250]\n
    char v2;  // [bp-0x245]\n
    unsigned int v3;  // [bp-0x244]\n
    struct_0 *v4;  // [bp-0x240]\n
    unsigned int v5;  // [bp-0x234]\n
    struct_0 *v6;  // [bp-0x230]\n
    struct_0 *v7;  // [bp-0x228]\n
    struct_0 *v8;  // [bp-0x220]\n
    char v9;  // [bp-0x211]\n
    unsigned int v10;  // [bp-0x210]\n
    unsigned int v11;  // [bp-0x20c]\n
    char v12;  // [bp-0x208]\n
    char v13;  // [bp-0x1ee]\n
    char v14[2];  // [bp-0x1e8]\n
    unsigned short v15;  // [bp-0x1da]\n
    unsigned int *v16;  // [bp-0x1d8]\n
    struct struct_1 **v17;  // [bp-0x1d0]\n
    char v18;  // [bp-0x1c8]\n
    char v19[8];  // [bp-0x1a8]\n
    unsigned int v20;  // [bp-0x1a0]\n
    unsigned int *v21;  // [bp-0x198]\n
    struct struct_1 **v22;  // [bp-0x190]\n
    unsigned long v23;  // [bp-0x188]\n
    char v24;  // [bp-0x179]\n
    unsigned int *v25;  // [bp-0x178]\n
    struct struct_1 **v26;  // [bp-0x170]\n
    unsigned long v27;  // [bp-0x168]\n
    char v28;  // [bp-0x159]\n
    unsigned int *v29;  // [bp-0x158]\n
    struct struct_1 **v30;  // [bp-0x150]\n
    char *v31;  // [bp-0x148]\n
    unsigned int v32;  // [bp-0x13c]\n
    unsigned int *v33;  // [bp-0x138]\n
    struct struct_1 **v34;  // [bp-0x130]\n
    char *v35;  // [bp-0x128]\n
    unsigned int v36;  // [bp-0x11c]\n
    unsigned int *v37;  // [bp-0x118]\n
    struct struct_1 **v38;  // [bp-0x110]\n
    char v39;  // [bp-0x108]\n
    unsigned int v40;  // [bp-0xf0]\n
    unsigned int *v41;  // [bp-0xe8]\n
    struct struct_1 **v42;  // [bp-0xe0]\n
    char v43;  // [bp-0xd8]\n
    unsigned int v44;  // [bp-0xc0]\n
    unsigned int *v45;  // [bp-0xb8]\n
    struct struct_1 **v46;  // [bp-0xb0]\n
    char v47;  // [bp-0xa8]\n
    unsigned int v48;  // [bp-0x9c]\n
    unsigned int *v49;  // [bp-0x98]\n
    struct struct_1 **v50;  // [bp-0x90]\n
    unsigned long v51;  // [bp-0x88]\n
    unsigned short v52;  // [bp-0x7a]\n
    unsigned int *v53;  // [bp-0x78]\n
    struct struct_1 **v54;  // [bp-0x70]\n
    char *v55;  // [bp-0x68]\n
    unsigned int v56;  // [bp-0x5c]\n
    unsigned int *v57;  // [bp-0x58]\n
    struct struct_1 **v58;  // [bp-0x50]\n
    unsigned long v59;  // [bp-0x48]\n
    char v60;  // [bp-0x39]\n
    unsigned int *v61;  // [bp-0x38]\n
    struct struct_1 **v62;  // [bp-0x30]\n
    unsigned long v63;  // [bp-0x28]\n
    char v64;  // [bp-0x19]\n
    unsigned int *v65;  // [bp-0x18]\n
    struct struct_1 **v66;  // [bp-0x10]\n
    unsigned int *v68;  // rax\n
    struct struct_1 **v69;  // rax\n
    unsigned int *v70;  // rax\n
    struct struct_1 **v71;  // rax\n
    unsigned int *v72;  // rax\n
    struct struct_1 **v73;  // rax\n
    unsigned int *v74;  // rax\n
    struct struct_1 **v75;  // rax\n
    struct struct_1 **v76;  // rax\n
    unsigned int *v77;  // rax\n
    unsigned int *v78;  // rax\n
    struct struct_1 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_1 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_1 **v83;  // rax\n
    struct struct_1 **v84;  // rax\n
    unsigned int *v85;  // rax\n
    struct struct_1 **v87;  // rax\n
    unsigned int *v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_1 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_1 **v93;  // rax\n
    struct struct_1 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    struct struct_1 **v97;  // rax\n
    unsigned int *v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_1 **v101;  // rax\n
    struct struct_1 **v103;  // rax\n
    unsigned int *v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_1 **v107;  // rax\n
    struct struct_1 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    unsigned int *v110;  // rax, Other Possible Types: unsigned long\n
\n
    v11 = cgc__cookie;\n
    v10 = -1;\n
    if (cgc_sendline(1, \"===llamacoruscant===\", 20) < 0)\n
        cgc__terminate(1);\n
    v54 = a0;\n
    v53 = a1;\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v52 = *(&*(v54));\n
    v68 = v53;\n
    *(v68) = *(v68) - 2;\n
    v69 = v54;\n
    *(v69) = *(v69) + 2;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_4b476e;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b476e:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v70 = v53;\n
    *(v70) = *(v70) - v52;\n
    v71 = v54;\n
    *(v71) = &(*(v71))[v52];\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v22 = a0;\n
    v21 = a1;\n
    *(&v19[0]) = *(v22);\n
    memset(&v18, 0, 21);\n
    if (*(v21) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v19[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v19[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v19[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v19[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v19[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v19[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v19[6] << 8))\n
                                v9 = v19[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v20) = v9 & 1;\n
    cgc_uint2str(&v18, 21, *(&v20));\n
    v8 = &v18;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v18)) < 0)\n
        cgc__terminate(1);\n
    v72 = v21;\n
    *(v72) = *(v72) - 8;\n
    v73 = v22;\n
    *(v73) = *(v73) + 8;\n
    v66 = a0;\n
    v65 = a1;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v64 = *(v66)->field_0;\n
    v74 = v65;\n
    *(v74) = *(v74) - 1;\n
    v75 = v66;\n
    *(v75) = *(v75) + 1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_4b4b13;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b4b13:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v76 = v66;\n
    *(v76) = &(*(v76))[v64];\n
    v77 = v65;\n
    *(v77) = *(v77) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v46 = a0;\n
    v45 = a1;\n
    memset(&v43, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v44) = *(&*(v46));\n
    cgc_uint2str(&v43, 21, *(&v44));\n
    v7 = &v43;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v78 = v45;\n
    *(v78) = *(v78) - 8;\n
    v79 = v46;\n
    *(v79) = *(v79) + 8;\n
    v50 = a0;\n
    v49 = a1;\n
    memset(&v47, 0, 12);\n
    if (*(v49) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v48 = *(&*(v50));\n
    cgc_uint2str(&v47, 12, v48);\n
    v6 = &v47;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v47)) < 0)\n
        cgc__terminate(1);\n
    v80 = v49;\n
    *(v80) = *(v80) - 4;\n
    v81 = v50;\n
    *(v81) = *(v81) + 4;\n
    v62 = a0;\n
    v61 = a1;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v60 = *(v62)->field_0;\n
    v82 = v61;\n
    *(v82) = *(v82) - 1;\n
    v83 = v62;\n
    *(v83) = *(v83) + 1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4b4ead;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b4ead:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v84 = v62;\n
    *(v84) = &(*(v84))[v60];\n
    v85 = v61;\n
    *(v85) = *(v85) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v58 = a0;\n
    v57 = a1;\n
    if (*(v57) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v57) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v57);\n
    v56 = v5;\n
    if (!v56)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = cgc_calloc(134);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v55, \"Str: \");\n
    cgc_strncpy(v55 + 5, *(v58), v56);\n
    v87 = v58;\n
    *(v87) = &(*(v87))[4 + cgc_strlen(v55)];\n
    v89 = v57;\n
    *(v89) = *(v89) - (cgc_strlen(v55) + -4);\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v42 = a0;\n
    v41 = a1;\n
    memset(&v39, 0, 21);\n
    if (*(v41) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v40) = *(&*(v42));\n
    cgc_uint2str(&v39, 21, *(&v40));\n
    v4 = &v39;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v90 = v41;\n
    *(v90) = *(v90) - 8;\n
    v91 = v42;\n
    *(v91) = *(v91) + 8;\n
    v30 = a0;\n
    v29 = a1;\n
    if (*(v29) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = *(v30)->field_0;\n
    v92 = v29;\n
    *(v92) = *(v92) - 1;\n
    v93 = v30;\n
    *(v93) = *(v93) + 1;\n
    if (v28 <= *(v29) && !(!v28))\n
        goto LABEL_4b5321;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b5321:\n
    v27 = cgc_calloc(v28);\n
    if (!v27)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v27, *(v30), v28);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v94 = v30;\n
    *(v94) = &(*(v94))[v28];\n
    v95 = v29;\n
    *(v95) = *(v95) - v28;\n
    cgc_checkheap();\n
    cgc_free(v27);\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v37) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v37);\n
    v36 = v3;\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = cgc_calloc(134);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v35, \"Str: \");\n
    cgc_strncpy(v35 + 5, *(v38), v36);\n
    v97 = v38;\n
    *(v97) = &(*(v97))[4 + cgc_strlen(v35)];\n
    v99 = v37;\n
    *(v99) = *(v99) - (cgc_strlen(v35) + -4);\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v17 = a0;\n
    v16 = a1;\n
    *(&v14) = *(v17);\n
    memset(&v13, 0, 6);\n
    if (*(v16) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = 0;\n
    if ((v14[0] << 8))\n
        v2 = v14[1];\n
    v15 = v2 & 1;\n
    cgc_uint2str(&v13, 6, v15);\n
    v1 = &v13;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v13)) < 0)\n
        cgc__terminate(1);\n
    v100 = v16;\n
    *(v100) = *(v100) - 2;\n
    v101 = v17;\n
    *(v101) = *(v101) + 2;\n
    v34 = a0;\n
    v33 = a1;\n
    if (*(v33) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v33) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v33);\n
    v32 = v0;\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = cgc_calloc(134);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v31, \"Str: \");\n
    cgc_strncpy(v31 + 5, *(v34), v32);\n
    v103 = v34;\n
    *(v103) = &(*(v103))[4 + cgc_strlen(v31)];\n
    v105 = v33;\n
    *(v105) = *(v105) - (cgc_strlen(v31) + -4);\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v26 = a0;\n
    v25 = a1;\n
    if (*(v25) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = *(v26)->field_0;\n
    v106 = v25;\n
    *(v106) = *(v106) - 1;\n
    v107 = v26;\n
    *(v107) = *(v107) + 1;\n
    if (v24 <= *(v25) && !(!v24))\n
        goto LABEL_4b5a1d;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b5a1d:\n
    v23 = cgc_calloc(v24);\n
    if (!v23)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v23, *(v26), v24);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v108 = v26;\n
    *(v108) = &(*(v108))[v24];\n
    v109 = v25;\n
    *(v109) = *(v109) - v24;\n
    cgc_checkheap();\n
    cgc_free(v23);\n
    v11 ^= cgc__cookie;\n
    if (v11)\n
        cgc___stack_cookie_fail();\n
    v110 = a1;\n
    if (*(a1) > 0 && v10 >= 0)\n
    {\n
        v110 = v10;\n
        if (v110 < 0)\n
            v110 = *(&(&v12)[8 * v10])(a0, a1);\n
    }\n
    return v110;\n
}\n
", "4938615:sub_4b5b77": null, "4938624:cgc_process_llamaParthenon": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaParthenon(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x6a0]\n
    struct_1 *v1;  // [bp-0x698]\n
    unsigned int v2;  // [bp-0x68c]\n
    struct_1 *v3;  // [bp-0x688]\n
    unsigned int v4;  // [bp-0x67c]\n
    unsigned int v5;  // [bp-0x678]\n
    unsigned int v6;  // [bp-0x674]\n
    struct_1 *v7;  // [bp-0x670]\n
    struct_1 *v8;  // [bp-0x668]\n
    char v9;  // [bp-0x659]\n
    struct_1 *v10;  // [bp-0x658]\n
    struct_1 *v11;  // [bp-0x650]\n
    struct_1 *v12;  // [bp-0x648]\n
    struct_1 *v13;  // [bp-0x640]\n
    struct_1 *v14;  // [bp-0x638]\n
    char v15;  // [bp-0x62d]\n
    unsigned int v16;  // [bp-0x62c]\n
    struct_1 *v17;  // [bp-0x628]\n
    char v18;  // [bp-0x61d]\n
    unsigned int v19;  // [bp-0x61c]\n
    struct_1 *v20;  // [bp-0x618]\n
    char v21;  // [bp-0x609]\n
    unsigned int v22;  // [bp-0x608]\n
    unsigned int v23;  // [bp-0x604]\n
    struct_1 *v24;  // [bp-0x600]\n
    struct_1 *v25;  // [bp-0x5f8]\n
    char v26;  // [bp-0x5e9]\n
    struct_1 *v27;  // [bp-0x5e8]\n
    struct_1 *v28;  // [bp-0x5e0]\n
    char v29;  // [bp-0x5d5]\n
    unsigned int v30;  // [bp-0x5d4]\n
    struct_1 *v31;  // [bp-0x5d0]\n
    char v32;  // [bp-0x5c1]\n
    struct_1 *v33;  // [bp-0x5c0]\n
    struct_1 *v34;  // [bp-0x5b8]\n
    char v35;  // [bp-0x5a9]\n
    struct_1 *v36;  // [bp-0x5a8]\n
    struct_1 *v37;  // [bp-0x5a0]\n
    struct_1 *v38;  // [bp-0x598]\n
    struct_1 *v39;  // [bp-0x590]\n
    unsigned int v40;  // [bp-0x588]\n
    unsigned int v41;  // [bp-0x584]\n
    char v42;  // [bp-0x580]\n
    char v43;  // [bp-0x566]\n
    char v44[2];  // [bp-0x560]\n
    unsigned short v45;  // [bp-0x552]\n
    unsigned int *v46;  // [bp-0x550]\n
    struct struct_0 **v47;  // [bp-0x548]\n
    char v48;  // [bp-0x53e]\n
    char v49[2];  // [bp-0x538]\n
    unsigned short v50;  // [bp-0x52a]\n
    unsigned int *v51;  // [bp-0x528]\n
    struct struct_0 **v52;  // [bp-0x520]\n
    char v53;  // [bp-0x518]\n
    char v54[8];  // [bp-0x4f8]\n
    unsigned int v55;  // [bp-0x4f0]\n
    unsigned int *v56;  // [bp-0x4e8]\n
    struct struct_0 **v57;  // [bp-0x4e0]\n
    char v58;  // [bp-0x4d8]\n
    char v59[8];  // [bp-0x4b8]\n
    unsigned int v60;  // [bp-0x4b0]\n
    unsigned int *v61;  // [bp-0x4a8]\n
    struct struct_0 **v62;  // [bp-0x4a0]\n
    char v63;  // [bp-0x498]\n
    char v64[8];  // [bp-0x478]\n
    unsigned int v65;  // [bp-0x470]\n
    unsigned int *v66;  // [bp-0x468]\n
    struct struct_0 **v67;  // [bp-0x460]\n
    unsigned long v68;  // [bp-0x458]\n
    char v69;  // [bp-0x449]\n
    unsigned int *v70;  // [bp-0x448]\n
    struct struct_0 **v71;  // [bp-0x440]\n
    unsigned long v72;  // [bp-0x438]\n
    char v73;  // [bp-0x429]\n
    unsigned int *v74;  // [bp-0x428]\n
    struct struct_0 **v75;  // [bp-0x420]\n
    char *v76;  // [bp-0x418]\n
    unsigned int v77;  // [bp-0x40c]\n
    unsigned int *v78;  // [bp-0x408]\n
    struct struct_0 **v79;  // [bp-0x400]\n
    char *v80;  // [bp-0x3f8]\n
    unsigned int v81;  // [bp-0x3ec]\n
    unsigned int *v82;  // [bp-0x3e8]\n
    struct struct_0 **v83;  // [bp-0x3e0]\n
    char *v84;  // [bp-0x3d8]\n
    unsigned int v85;  // [bp-0x3cc]\n
    unsigned int *v86;  // [bp-0x3c8]\n
    struct struct_0 **v87;  // [bp-0x3c0]\n
    char *v88;  // [bp-0x3b8]\n
    unsigned int v89;  // [bp-0x3ac]\n
    unsigned int *v90;  // [bp-0x3a8]\n
    struct struct_0 **v91;  // [bp-0x3a0]\n
    char v92;  // [bp-0x398]\n
    unsigned short v93;  // [bp-0x392]\n
    unsigned int *v94;  // [bp-0x390]\n
    struct struct_0 **v95;  // [bp-0x388]\n
    char v96;  // [bp-0x37d]\n
    char v97;  // [bp-0x379]\n
    unsigned int *v98;  // [bp-0x378]\n
    struct struct_0 **v99;  // [bp-0x370]\n
    char v100;  // [bp-0x365]\n
    char v101;  // [bp-0x361]\n
    unsigned int *v102;  // [bp-0x360]\n
    struct struct_0 **v103;  // [bp-0x358]\n
    char v104;  // [bp-0x34d]\n
    char v105;  // [bp-0x349]\n
    unsigned int *v106;  // [bp-0x348]\n
    struct struct_0 **v107;  // [bp-0x340]\n
    char v108;  // [bp-0x338]\n
    unsigned int v109;  // [bp-0x32c]\n
    unsigned int *v110;  // [bp-0x328]\n
    struct struct_0 **v111;  // [bp-0x320]\n
    char v112;  // [bp-0x318]\n
    unsigned int v113;  // [bp-0x30c]\n
    unsigned int *v114;  // [bp-0x308]\n
    struct struct_0 **v115;  // [bp-0x300]\n
    char v116;  // [bp-0x2f8]\n
    unsigned int v117;  // [bp-0x2ec]\n
    unsigned int *v118;  // [bp-0x2e8]\n
    struct struct_0 **v119;  // [bp-0x2e0]\n
    char v120;  // [bp-0x2d8]\n
    unsigned int v121;  // [bp-0x2cc]\n
    unsigned int *v122;  // [bp-0x2c8]\n
    struct struct_0 **v123;  // [bp-0x2c0]\n
    char v124;  // [bp-0x2b8]\n
    unsigned int v125;  // [bp-0x2ac]\n
    unsigned int *v126;  // [bp-0x2a8]\n
    struct struct_0 **v127;  // [bp-0x2a0]\n
    char v128;  // [bp-0x298]\n
    unsigned int v129;  // [bp-0x28c]\n
    unsigned int *v130;  // [bp-0x288]\n
    struct struct_0 **v131;  // [bp-0x280]\n
    char v132;  // [bp-0x278]\n
    unsigned int v133;  // [bp-0x26c]\n
    unsigned int *v134;  // [bp-0x268]\n
    struct struct_0 **v135;  // [bp-0x260]\n
    unsigned long v136;  // [bp-0x258]\n
    unsigned short v137;  // [bp-0x24a]\n
    unsigned int *v138;  // [bp-0x248]\n
    struct struct_0 **v139;  // [bp-0x240]\n
    unsigned long v140;  // [bp-0x238]\n
    unsigned short v141;  // [bp-0x22a]\n
    unsigned int *v142;  // [bp-0x228]\n
    struct struct_0 **v143;  // [bp-0x220]\n
    unsigned long v144;  // [bp-0x218]\n
    unsigned short v145;  // [bp-0x20a]\n
    unsigned int *v146;  // [bp-0x208]\n
    struct struct_0 **v147;  // [bp-0x200]\n
    char v148;  // [bp-0x1f4]\n
    char v149[4];  // [bp-0x1e8]\n
    unsigned int v150;  // [bp-0x1dc]\n
    unsigned int *v151;  // [bp-0x1d8]\n
    struct struct_0 **v152;  // [bp-0x1d0]\n
    char v153;  // [bp-0x1c4]\n
    char v154[4];  // [bp-0x1b8]\n
    unsigned int v155;  // [bp-0x1ac]\n
    unsigned int *v156;  // [bp-0x1a8]\n
    struct struct_0 **v157;  // [bp-0x1a0]\n
    char v158;  // [bp-0x194]\n
    char v159[4];  // [bp-0x188]\n
    unsigned int v160;  // [bp-0x17c]\n
    unsigned int *v161;  // [bp-0x178]\n
    struct struct_0 **v162;  // [bp-0x170]\n
    char *v163;  // [bp-0x168]\n
    unsigned int v164;  // [bp-0x15c]\n
    unsigned int *v165;  // [bp-0x158]\n
    struct struct_0 **v166;  // [bp-0x150]\n
    char *v167;  // [bp-0x148]\n
    unsigned int v168;  // [bp-0x13c]\n
    unsigned int *v169;  // [bp-0x138]\n
    struct struct_0 **v170;  // [bp-0x130]\n
    char *v171;  // [bp-0x128]\n
    unsigned int v172;  // [bp-0x11c]\n
    unsigned int *v173;  // [bp-0x118]\n
    struct struct_0 **v174;  // [bp-0x110]\n
    char *v175;  // [bp-0x108]\n
    unsigned int v176;  // [bp-0xfc]\n
    unsigned int *v177;  // [bp-0xf8]\n
    struct struct_0 **v178;  // [bp-0xf0]\n
    char *v179;  // [bp-0xe8]\n
    unsigned int v180;  // [bp-0xdc]\n
    unsigned int *v181;  // [bp-0xd8]\n
    struct struct_0 **v182;  // [bp-0xd0]\n
    char v183;  // [bp-0xc8]\n
    unsigned int v184;  // [bp-0xb0]\n
    unsigned int *v185;  // [bp-0xa8]\n
    struct struct_0 **v186;  // [bp-0xa0]\n
    char v187;  // [bp-0x98]\n
    unsigned int v188;  // [bp-0x80]\n
    unsigned int *v189;  // [bp-0x78]\n
    struct struct_0 **v190;  // [bp-0x70]\n
    char v191;  // [bp-0x68]\n
    unsigned int v192;  // [bp-0x50]\n
    unsigned int *v193;  // [bp-0x48]\n
    struct struct_0 **v194;  // [bp-0x40]\n
    char v195;  // [bp-0x38]\n
    unsigned int v196;  // [bp-0x20]\n
    unsigned int *v197;  // [bp-0x18]\n
    struct struct_0 **v198;  // [bp-0x10]\n
    unsigned int *v200;  // rax\n
    struct struct_0 **v201;  // rax\n
    unsigned int *v202;  // rax\n
    struct struct_0 **v203;  // rax\n
    unsigned int *v204;  // rax\n
    struct struct_0 **v205;  // rax\n
    unsigned int *v206;  // rax\n
    struct struct_0 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    struct struct_0 **v209;  // rax\n
    unsigned int *v210;  // rax\n
    struct struct_0 **v211;  // rax\n
    unsigned int *v212;  // rax\n
    struct struct_0 **v213;  // rax\n
    unsigned int *v214;  // rax\n
    struct struct_0 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_0 **v217;  // rax\n
    struct struct_0 **v219;  // rax\n
    unsigned int *v221;  // rax\n
    unsigned int *v222;  // rax\n
    struct struct_0 **v223;  // rax\n
    struct struct_0 **v224;  // rax\n
    unsigned int *v225;  // rax\n
    unsigned int *v226;  // rax\n
    struct struct_0 **v227;  // rax\n
    unsigned int *v228;  // rax\n
    struct struct_0 **v229;  // rax\n
    unsigned int *v230;  // rax\n
    struct struct_0 **v231;  // rax\n
    unsigned int *v232;  // rax\n
    struct struct_0 **v233;  // rax\n
    struct struct_0 **v235;  // rax\n
    unsigned int *v237;  // rax\n
    struct struct_0 **v239;  // rax\n
    unsigned int *v241;  // rax\n
    unsigned int *v242;  // rax\n
    struct struct_0 **v243;  // rax\n
    struct struct_0 **v245;  // rax\n
    unsigned int *v247;  // rax\n
    unsigned int *v248;  // rax\n
    struct struct_0 **v249;  // rax\n
    struct struct_0 **v251;  // rax\n
    unsigned int *v253;  // rax\n
    unsigned int *v254;  // rax\n
    struct struct_0 **v255;  // rax\n
    unsigned int *v256;  // rax\n
    struct struct_0 **v257;  // rax\n
    unsigned int *v258;  // rax\n
    struct struct_0 **v259;  // rax\n
    unsigned int *v260;  // rax\n
    struct struct_0 **v261;  // rax\n
    unsigned int *v262;  // rax\n
    struct struct_0 **v263;  // rax\n
    unsigned int *v264;  // rax\n
    struct struct_0 **v265;  // rax\n
    unsigned int *v266;  // rax\n
    struct struct_0 **v267;  // rax\n
    struct struct_0 **v269;  // rax\n
    unsigned int *v271;  // rax\n
    struct struct_0 **v273;  // rax\n
    unsigned int *v275;  // rax\n
    struct struct_0 **v277;  // rax\n
    unsigned int *v279;  // rax\n
    unsigned int *v280;  // rax\n
    struct struct_0 **v281;  // rax\n
    unsigned int *v282;  // rax\n
    struct struct_0 **v283;  // rax\n
    unsigned int *v284;  // rax\n
    struct struct_0 **v285;  // rax\n
    unsigned int *v286;  // rax\n
    struct struct_0 **v287;  // rax\n
    struct struct_0 **v288;  // rax\n
    unsigned int *v289;  // rax\n
    struct struct_0 **v291;  // rax\n
    unsigned int *v293;  // rax\n
    unsigned int *v294;  // rax\n
    struct struct_0 **v295;  // rax\n
    unsigned int *v296;  // rax\n
    struct struct_0 **v297;  // rax\n
    unsigned int *v298;  // rax\n
    struct struct_0 **v299;  // rax\n
    unsigned int *v300;  // rax\n
    struct struct_0 **v301;  // rax\n
    unsigned int *v302;  // rax, Other Possible Types: unsigned long\n
\n
    v41 = cgc__cookie;\n
    v40 = -1;\n
    if (cgc_sendline(1, \"===llamaParthenon===\", 20) < 0)\n
        cgc__terminate(1);\n
    v107 = a0;\n
    v106 = a1;\n
    memset(&v104, 0, 4);\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v105 = *(v107)->field_0;\n
    cgc_uint2str(&v104, 4, v105);\n
    v39 = &v104;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v104)) < 0)\n
        cgc__terminate(1);\n
    v200 = v106;\n
    *(v200) = *(v200) - 1;\n
    v201 = v107;\n
    *(v201) = *(v201) + 1;\n
    v103 = a0;\n
    v102 = a1;\n
    memset(&v100, 0, 4);\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v101 = *(v103)->field_0;\n
    cgc_uint2str(&v100, 4, v101);\n
    v38 = &v100;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v100)) < 0)\n
        cgc__terminate(1);\n
    v202 = v102;\n
    *(v202) = *(v202) - 1;\n
    v203 = v103;\n
    *(v203) = *(v203) + 1;\n
    v139 = a0;\n
    v138 = a1;\n
    if (*(v138) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v137 = *(&*(v139));\n
    v204 = v138;\n
    *(v204) = *(v204) - 2;\n
    v205 = v139;\n
    *(v205) = *(v205) + 2;\n
    if (v137 <= *(v138) && !(!v137))\n
        goto LABEL_4b5ed0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b5ed0:\n
    v136 = cgc_calloc(v137);\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v136, *(v139), v137);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v206 = v138;\n
    *(v206) = *(v206) - v137;\n
    v207 = v139;\n
    *(v207) = &(*(v207))[v137];\n
    cgc_checkheap();\n
    cgc_free(v136);\n
    v99 = a0;\n
    v98 = a1;\n
    memset(&v96, 0, 4);\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v97 = *(v99)->field_0;\n
    cgc_uint2str(&v96, 4, v97);\n
    v37 = &v96;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v96)) < 0)\n
        cgc__terminate(1);\n
    v208 = v98;\n
    *(v208) = *(v208) - 1;\n
    v209 = v99;\n
    *(v209) = *(v209) + 1;\n
    v135 = a0;\n
    v134 = a1;\n
    memset(&v132, 0, 12);\n
    if (*(v134) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v133 = *(&*(v135));\n
    cgc_uint2str(&v132, 12, v133);\n
    v36 = &v132;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v132)) < 0)\n
        cgc__terminate(1);\n
    v210 = v134;\n
    *(v210) = *(v210) - 4;\n
    v211 = v135;\n
    *(v211) = *(v211) + 4;\n
    v52 = a0;\n
    v51 = a1;\n
    *(&v49) = *(v52);\n
    memset(&v48, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = 0;\n
    if ((v49[0] << 8))\n
        v35 = v49[1];\n
    v50 = v35 & 1;\n
    cgc_uint2str(&v48, 6, v50);\n
    v34 = &v48;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v48)) < 0)\n
        cgc__terminate(1);\n
    v212 = v51;\n
    *(v212) = *(v212) - 2;\n
    v213 = v52;\n
    *(v213) = *(v213) + 2;\n
    v131 = a0;\n
    v130 = a1;\n
    memset(&v128, 0, 12);\n
    if (*(v130) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(&*(v131));\n
    cgc_uint2str(&v128, 12, v129);\n
    v33 = &v128;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v128)) < 0)\n
        cgc__terminate(1);\n
    v214 = v130;\n
    *(v214) = *(v214) - 4;\n
    v215 = v131;\n
    *(v215) = *(v215) + 4;\n
    v47 = a0;\n
    v46 = a1;\n
    *(&v44) = *(v47);\n
    memset(&v43, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = 0;\n
    if ((v44[0] << 8))\n
        v32 = v44[1];\n
    v45 = v32 & 1;\n
    cgc_uint2str(&v43, 6, v45);\n
    v31 = &v43;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v43)) < 0)\n
        cgc__terminate(1);\n
    v216 = v46;\n
    *(v216) = *(v216) - 2;\n
    v217 = v47;\n
    *(v217) = *(v217) + 2;\n
    v182 = a0;\n
    v181 = a1;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v181) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v181);\n
    v180 = v30;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v179, \"Str: \");\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v219 = v182;\n
    *(v219) = &(*(v219))[4 + cgc_strlen(v179)];\n
    v221 = v181;\n
    *(v221) = *(v221) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v75 = a0;\n
    v74 = a1;\n
    if (*(v74) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = *(v75)->field_0;\n
    v222 = v74;\n
    *(v222) = *(v222) - 1;\n
    v223 = v75;\n
    *(v223) = *(v223) + 1;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_4b6837;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b6837:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v224 = v75;\n
    *(v224) = &(*(v224))[v73];\n
    v225 = v74;\n
    *(v225) = *(v225) - v73;\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v162 = a0;\n
    v161 = a1;\n
    *(&v159) = *(v162);\n
    memset(&v158, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v29 = 0;\n
    if ((v159[0] << 24))\n
    {\n
        v29 = 0;\n
        if ((v159[1] << 16))\n
        {\n
            v29 = 0;\n
            if ((v159[2] << 8))\n
                v29 = v159[3];\n
        }\n
    }\n
    v160 = v29 & 1;\n
    cgc_uint2str(&v158, 12, v160);\n
    v28 = &v158;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v158)) < 0)\n
        cgc__terminate(1);\n
    v226 = v161;\n
    *(v226) = *(v226) - 4;\n
    v227 = v162;\n
    *(v227) = *(v227) + 4;\n
    v198 = a0;\n
    v197 = a1;\n
    memset(&v195, 0, 21);\n
    if (*(v197) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v196) = *(&*(v198));\n
    cgc_uint2str(&v195, 21, *(&v196));\n
    v27 = &v195;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v195)) < 0)\n
        cgc__terminate(1);\n
    v228 = v197;\n
    *(v228) = *(v228) - 8;\n
    v229 = v198;\n
    *(v229) = *(v229) + 8;\n
    v67 = a0;\n
    v66 = a1;\n
    *(&v64[0]) = *(v67);\n
    memset(&v63, 0, 21);\n
    if (*(v66) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v26 = 0;\n
    if (v64[0] << 56)\n
    {\n
        v26 = 0;\n
        if (v64[1] << 48)\n
        {\n
            v26 = 0;\n
            if (v64[2] << 40)\n
            {\n
                v26 = 0;\n
                if (v64[3] << 32)\n
                {\n
                    v26 = 0;\n
                    if ((v64[4] << 24))\n
                    {\n
                        v26 = 0;\n
                        if ((v64[5] << 16))\n
                        {\n
                            v26 = 0;\n
                            if ((v64[6] << 8))\n
                                v26 = v64[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v65) = v26 & 1;\n
    cgc_uint2str(&v63, 21, *(&v65));\n
    v25 = &v63;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v63)) < 0)\n
        cgc__terminate(1);\n
    v230 = v66;\n
    *(v230) = *(v230) - 8;\n
    v231 = v67;\n
    *(v231) = *(v231) + 8;\n
    v119 = a0;\n
    v118 = a1;\n
    memset(&v116, 0, 12);\n
    if (*(v118) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(&*(v119));\n
    cgc_uint2str(&v116, 12, v117);\n
    v24 = &v116;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v116)) < 0)\n
        cgc__terminate(1);\n
    v232 = v118;\n
    *(v232) = *(v232) - 4;\n
    v233 = v119;\n
    *(v233) = *(v233) + 4;\n
    v91 = a0;\n
    v90 = a1;\n
    if (*(v90) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v90) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v90);\n
    v89 = v23;\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v88 = cgc_calloc(134);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v88, \"Str: \");\n
    cgc_strncpy(v88 + 5, *(v91), v89);\n
    v235 = v91;\n
    *(v235) = &(*(v235))[4 + cgc_strlen(v88)];\n
    v237 = v90;\n
    *(v237) = *(v237) - (cgc_strlen(v88) + -4);\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v178 = a0;\n
    v177 = a1;\n
    if (*(v177) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v177) >= 128)\n
        v22 = 128;\n
    else\n
        v22 = *(v177);\n
    v176 = v22;\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v175 = cgc_calloc(134);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v175, \"Str: \");\n
    cgc_strncpy(v175 + 5, *(v178), v176);\n
    v239 = v178;\n
    *(v239) = &(*(v239))[4 + cgc_strlen(v175)];\n
    v241 = v177;\n
    *(v241) = *(v241) - (cgc_strlen(v175) + -4);\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v157 = a0;\n
    v156 = a1;\n
    *(&v154) = *(v157);\n
    memset(&v153, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v21 = 0;\n
    if ((v154[0] << 24))\n
    {\n
        v21 = 0;\n
        if ((v154[1] << 16))\n
        {\n
            v21 = 0;\n
            if ((v154[2] << 8))\n
                v21 = v154[3];\n
        }\n
    }\n
    v155 = v21 & 1;\n
    cgc_uint2str(&v153, 12, v155);\n
    v20 = &v153;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v153)) < 0)\n
        cgc__terminate(1);\n
    v242 = v156;\n
    *(v242) = *(v242) - 4;\n
    v243 = v157;\n
    *(v243) = *(v243) + 4;\n
    v174 = a0;\n
    v173 = a1;\n
    if (*(v173) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v173) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v173);\n
    v172 = v19;\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v171 = cgc_calloc(134);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v171, \"Str: \");\n
    cgc_strncpy(v171 + 5, *(v174), v172);\n
    v245 = v174;\n
    *(v245) = &(*(v245))[4 + cgc_strlen(v171)];\n
    v247 = v173;\n
    *(v247) = *(v247) - (cgc_strlen(v171) + -4);\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v62 = a0;\n
    v61 = a1;\n
    *(&v59[0]) = *(v62);\n
    memset(&v58, 0, 21);\n
    if (*(v61) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v18 = 0;\n
    if (v59[0] << 56)\n
    {\n
        v18 = 0;\n
        if (v59[1] << 48)\n
        {\n
            v18 = 0;\n
            if (v59[2] << 40)\n
            {\n
                v18 = 0;\n
                if (v59[3] << 32)\n
                {\n
                    v18 = 0;\n
                    if ((v59[4] << 24))\n
                    {\n
                        v18 = 0;\n
                        if ((v59[5] << 16))\n
                        {\n
                            v18 = 0;\n
                            if ((v59[6] << 8))\n
                                v18 = v59[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v60) = v18 & 1;\n
    cgc_uint2str(&v58, 21, *(&v60));\n
    v17 = &v58;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v248 = v61;\n
    *(v248) = *(v248) - 8;\n
    v249 = v62;\n
    *(v249) = *(v249) + 8;\n
    v87 = a0;\n
    v86 = a1;\n
    if (*(v86) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v86) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v86);\n
    v85 = v16;\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v84 = cgc_calloc(134);\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v84, \"Str: \");\n
    cgc_strncpy(v84 + 5, *(v87), v85);\n
    v251 = v87;\n
    *(v251) = &(*(v251))[4 + cgc_strlen(v84)];\n
    v253 = v86;\n
    *(v253) = *(v253) - (cgc_strlen(v84) + -4);\n
    cgc_checkheap();\n
    cgc_free(v84);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v57 = a0;\n
    v56 = a1;\n
    *(&v54[0]) = *(v57);\n
    memset(&v53, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if (v54[0] << 56)\n
    {\n
        v15 = 0;\n
        if (v54[1] << 48)\n
        {\n
            v15 = 0;\n
            if (v54[2] << 40)\n
            {\n
                v15 = 0;\n
                if (v54[3] << 32)\n
                {\n
                    v15 = 0;\n
                    if ((v54[4] << 24))\n
                    {\n
                        v15 = 0;\n
                        if ((v54[5] << 16))\n
                        {\n
                            v15 = 0;\n
                            if ((v54[6] << 8))\n
                                v15 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v55) = v15 & 1;\n
    cgc_uint2str(&v53, 21, *(&v55));\n
    v14 = &v53;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v254 = v56;\n
    *(v254) = *(v254) - 8;\n
    v255 = v57;\n
    *(v255) = *(v255) + 8;\n
    v127 = a0;\n
    v126 = a1;\n
    memset(&v124, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = *(&*(v127));\n
    cgc_uint2str(&v124, 12, v125);\n
    v13 = &v124;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v124)) < 0)\n
        cgc__terminate(1);\n
    v256 = v126;\n
    *(v256) = *(v256) - 4;\n
    v257 = v127;\n
    *(v257) = *(v257) + 4;\n
    v115 = a0;\n
    v114 = a1;\n
    memset(&v112, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(&*(v115));\n
    cgc_uint2str(&v112, 12, v113);\n
    v12 = &v112;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v112)) < 0)\n
        cgc__terminate(1);\n
    v258 = v114;\n
    *(v258) = *(v258) - 4;\n
    v259 = v115;\n
    *(v259) = *(v259) + 4;\n
    v194 = a0;\n
    v193 = a1;\n
    memset(&v191, 0, 21);\n
    if (*(v193) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v192) = *(&*(v194));\n
    cgc_uint2str(&v191, 21, *(&v192));\n
    v11 = &v191;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v191)) < 0)\n
        cgc__terminate(1);\n
    v260 = v193;\n
    *(v260) = *(v260) - 8;\n
    v261 = v194;\n
    *(v261) = *(v261) + 8;\n
    v95 = a0;\n
    v94 = a1;\n
    memset(&v92, 0, 6);\n
    if (*(v94) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v93 = *(&*(v95));\n
    cgc_uint2str(&v92, 6, v93);\n
    v10 = &v92;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v92)) < 0)\n
        cgc__terminate(1);\n
    v262 = v94;\n
    *(v262) = *(v262) - 2;\n
    v263 = v95;\n
    *(v263) = *(v263) + 2;\n
    v152 = a0;\n
    v151 = a1;\n
    *(&v149) = *(v152);\n
    memset(&v148, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if ((v149[0] << 24))\n
    {\n
        v9 = 0;\n
        if ((v149[1] << 16))\n
        {\n
            v9 = 0;\n
            if ((v149[2] << 8))\n
                v9 = v149[3];\n
        }\n
    }\n
    v150 = v9 & 1;\n
    cgc_uint2str(&v148, 12, v150);\n
    v8 = &v148;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v148)) < 0)\n
        cgc__terminate(1);\n
    v264 = v151;\n
    *(v264) = *(v264) - 4;\n
    v265 = v152;\n
    *(v265) = *(v265) + 4;\n
    v190 = a0;\n
    v189 = a1;\n
    memset(&v187, 0, 21);\n
    if (*(v189) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v188) = *(&*(v190));\n
    cgc_uint2str(&v187, 21, *(&v188));\n
    v7 = &v187;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v187)) < 0)\n
        cgc__terminate(1);\n
    v266 = v189;\n
    *(v266) = *(v266) - 8;\n
    v267 = v190;\n
    *(v267) = *(v267) + 8;\n
    v170 = a0;\n
    v169 = a1;\n
    if (*(v169) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v169) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v169);\n
    v168 = v6;\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v167 = cgc_calloc(134);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v167, \"Str: \");\n
    cgc_strncpy(v167 + 5, *(v170), v168);\n
    v269 = v170;\n
    *(v269) = &(*(v269))[4 + cgc_strlen(v167)];\n
    v271 = v169;\n
    *(v271) = *(v271) - (cgc_strlen(v167) + -4);\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v166 = a0;\n
    v165 = a1;\n
    if (*(v165) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v165) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v165);\n
    v164 = v5;\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v163 = cgc_calloc(134);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v163, \"Str: \");\n
    cgc_strncpy(v163 + 5, *(v166), v164);\n
    v273 = v166;\n
    *(v273) = &(*(v273))[4 + cgc_strlen(v163)];\n
    v275 = v165;\n
    *(v275) = *(v275) - (cgc_strlen(v163) + -4);\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v83 = a0;\n
    v82 = a1;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v82) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v82);\n
    v81 = v4;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v80, \"Str: \");\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v277 = v83;\n
    *(v277) = &(*(v277))[4 + cgc_strlen(v80)];\n
    v279 = v82;\n
    *(v279) = *(v279) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v147 = a0;\n
    v146 = a1;\n
    if (*(v146) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v145 = *(&*(v147));\n
    v280 = v146;\n
    *(v280) = *(v280) - 2;\n
    v281 = v147;\n
    *(v281) = *(v281) + 2;\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_4b893c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b893c:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v282 = v146;\n
    *(v282) = *(v282) - v145;\n
    v283 = v147;\n
    *(v283) = &(*(v283))[v145];\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 12);\n
    if (*(v110) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v109 = *(&*(v111));\n
    cgc_uint2str(&v108, 12, v109);\n
    v3 = &v108;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v284 = v110;\n
    *(v284) = *(v284) - 4;\n
    v285 = v111;\n
    *(v285) = *(v285) + 4;\n
    v71 = a0;\n
    v70 = a1;\n
    if (*(v70) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v69 = *(v71)->field_0;\n
    v286 = v70;\n
    *(v286) = *(v286) - 1;\n
    v287 = v71;\n
    *(v287) = *(v287) + 1;\n
    if (v69 <= *(v70) && !(!v69))\n
        goto LABEL_4b8c0b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b8c0b:\n
    v68 = cgc_calloc(v69);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v68, *(v71), v69);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v288 = v71;\n
    *(v288) = &(*(v288))[v69];\n
    v289 = v70;\n
    *(v289) = *(v289) - v69;\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    v79 = a0;\n
    v78 = a1;\n
    if (*(v78) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v78) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v78);\n
    v77 = v2;\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v76 = cgc_calloc(134);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v76, \"Str: \");\n
    cgc_strncpy(v76 + 5, *(v79), v77);\n
    v291 = v79;\n
    *(v291) = &(*(v291))[4 + cgc_strlen(v76)];\n
    v293 = v78;\n
    *(v293) = *(v293) - (cgc_strlen(v76) + -4);\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v143 = a0;\n
    v142 = a1;\n
    if (*(v142) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v141 = *(&*(v143));\n
    v294 = v142;\n
    *(v294) = *(v294) - 2;\n
    v295 = v143;\n
    *(v295) = *(v295) + 2;\n
    if (v141 <= *(v142) && !(!v141))\n
        goto LABEL_4b8fce;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b8fce:\n
    v140 = cgc_calloc(v141);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v140, *(v143), v141);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v296 = v142;\n
    *(v296) = *(v296) - v141;\n
    v297 = v143;\n
    *(v297) = &(*(v297))[v141];\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    v186 = a0;\n
    v185 = a1;\n
    memset(&v183, 0, 21);\n
    if (*(v185) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v184) = *(&*(v186));\n
    cgc_uint2str(&v183, 21, *(&v184));\n
    v1 = &v183;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v183)) < 0)\n
        cgc__terminate(1);\n
    v298 = v185;\n
    *(v298) = *(v298) - 8;\n
    v299 = v186;\n
    *(v299) = *(v299) + 8;\n
    v123 = a0;\n
    v122 = a1;\n
    memset(&v120, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(&*(v123));\n
    cgc_uint2str(&v120, 12, v121);\n
    v0 = &v120;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v120)) < 0)\n
        cgc__terminate(1);\n
    v300 = v122;\n
    *(v300) = *(v300) - 4;\n
    v301 = v123;\n
    *(v301) = *(v301) + 4;\n
    v41 ^= cgc__cookie;\n
    if (v41)\n
        cgc___stack_cookie_fail();\n
    v302 = a1;\n
    if (*(a1) > 0 && v40 >= 0)\n
    {\n
        v302 = v40;\n
        if (v302 < 0)\n
            v302 = *(&(&v42)[8 * v40])(a0, a1);\n
    }\n
    return v302;\n
}\n
", "4952888:sub_4b9338": null, "4952896:cgc_process_llamahemostat": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamahemostat(struct struct_1 **a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x1b0]\n
    struct_0 *v1;  // [bp-0x1a8]\n
    unsigned int v2;  // [bp-0x19c]\n
    struct_0 *v3;  // [bp-0x198]\n
    char v4;  // [bp-0x189]\n
    struct_0 *v5;  // [bp-0x188]\n
    char v6;  // [bp-0x179]\n
    unsigned int v7;  // [bp-0x178]\n
    unsigned int v8;  // [bp-0x174]\n
    char v9;  // [bp-0x170]\n
    char v10;  // [bp-0x158]\n
    char v11[8];  // [bp-0x138]\n
    unsigned int v12;  // [bp-0x130]\n
    unsigned int *v13;  // [bp-0x128]\n
    struct struct_1 **v14;  // [bp-0x120]\n
    unsigned long v15;  // [bp-0x118]\n
    char v16;  // [bp-0x109]\n
    unsigned int *v17;  // [bp-0x108]\n
    struct struct_1 **v18;  // [bp-0x100]\n
    char *v19;  // [bp-0xf8]\n
    unsigned int v20;  // [bp-0xec]\n
    unsigned int *v21;  // [bp-0xe8]\n
    struct struct_1 **v22;  // [bp-0xe0]\n
    char v23;  // [bp-0xd8]\n
    unsigned int v24;  // [bp-0xcc]\n
    unsigned int *v25;  // [bp-0xc8]\n
    struct struct_1 **v26;  // [bp-0xc0]\n
    char v27;  // [bp-0xb8]\n
    unsigned int v28;  // [bp-0xac]\n
    unsigned int *v29;  // [bp-0xa8]\n
    struct struct_1 **v30;  // [bp-0xa0]\n
    unsigned long v31;  // [bp-0x98]\n
    unsigned short v32;  // [bp-0x8a]\n
    unsigned int *v33;  // [bp-0x88]\n
    struct struct_1 **v34;  // [bp-0x80]\n
    unsigned long v35;  // [bp-0x78]\n
    unsigned short v36;  // [bp-0x6a]\n
    unsigned int *v37;  // [bp-0x68]\n
    struct struct_1 **v38;  // [bp-0x60]\n
    char v39;  // [bp-0x54]\n
    char v40[4];  // [bp-0x48]\n
    unsigned int v41;  // [bp-0x3c]\n
    unsigned int *v42;  // [bp-0x38]\n
    struct struct_1 **v43;  // [bp-0x30]\n
    unsigned long v44;  // [bp-0x28]\n
    char v45;  // [bp-0x19]\n
    unsigned int *v46;  // [bp-0x18]\n
    struct struct_1 **v47;  // [bp-0x10]\n
    unsigned int *v49;  // rax\n
    struct struct_1 **v50;  // rax\n
    struct struct_1 **v51;  // rax\n
    unsigned int *v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_1 **v54;  // rax\n
    unsigned int *v55;  // rax\n
    struct struct_1 **v56;  // rax\n
    unsigned int *v57;  // rax\n
    struct struct_1 **v58;  // rax\n
    unsigned int *v59;  // rax\n
    struct struct_1 **v60;  // rax\n
    unsigned int *v61;  // rax\n
    struct struct_1 **v62;  // rax\n
    unsigned int *v63;  // rax\n
    struct struct_1 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_1 **v66;  // rax\n
    struct struct_1 **v67;  // rax\n
    unsigned int *v68;  // rax\n
    struct struct_1 **v70;  // rax\n
    unsigned int *v72;  // rax\n
    unsigned int *v73;  // rax\n
    struct struct_1 **v74;  // rax\n
    unsigned int *v75;  // rax\n
    struct struct_1 **v76;  // rax\n
    unsigned int *v77;  // rax, Other Possible Types: unsigned long\n
\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamahemostat===\", 19) < 0)\n
        cgc__terminate(1);\n
    v47 = a0;\n
    v46 = a1;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v45 = *(v47)->field_0;\n
    v49 = v46;\n
    *(v49) = *(v49) - 1;\n
    v50 = v47;\n
    *(v50) = &*(v50)->padding_1;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_4b946c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b946c:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v51 = v47;\n
    *(v51) = &(&*(v51)->field_0)[v45];\n
    v52 = v46;\n
    *(v52) = *(v52) - v45;\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v14 = a0;\n
    v13 = a1;\n
    *(&v11[0]) = *(v14);\n
    memset(&v10, 0, 21);\n
    if (*(v13) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if (v11[0] << 56)\n
    {\n
        v6 = 0;\n
        if (v11[1] << 48)\n
        {\n
            v6 = 0;\n
            if (v11[2] << 40)\n
            {\n
                v6 = 0;\n
                if (v11[3] << 32)\n
                {\n
                    v6 = 0;\n
                    if ((v11[4] << 24))\n
                    {\n
                        v6 = 0;\n
                        if ((v11[5] << 16))\n
                        {\n
                            v6 = 0;\n
                            if ((v11[6] << 8))\n
                                v6 = v11[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v12) = v6 & 1;\n
    cgc_uint2str(&v10, 21, *(&v12));\n
    v5 = &v10;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v10)) < 0)\n
        cgc__terminate(1);\n
    v53 = v13;\n
    *(v53) = *(v53) - 8;\n
    v54 = v14;\n
    *(v54) = *(v54) + 1;\n
    v38 = a0;\n
    v37 = a1;\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v36 = *(&*(v38)->field_0);\n
    v55 = v37;\n
    *(v55) = *(v55) - 2;\n
    v56 = v38;\n
    *(v56) = &*(v56)->padding_1[1];\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_4b9813;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b9813:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v57 = v37;\n
    *(v57) = *(v57) - v36;\n
    v58 = v38;\n
    *(v58) = &(&*(v58)->field_0)[v36];\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v34 = a0;\n
    v33 = a1;\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v32 = *(&*(v34)->field_0);\n
    v59 = v33;\n
    *(v59) = *(v59) - 2;\n
    v60 = v34;\n
    *(v60) = &*(v60)->padding_1[1];\n
    if (v32 <= *(v33) && !(!v32))\n
        goto LABEL_4b99ad;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b99ad:\n
    v31 = cgc_calloc(v32);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v31, *(v34), v32);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v61 = v33;\n
    *(v61) = *(v61) - v32;\n
    v62 = v34;\n
    *(v62) = &(&*(v62)->field_0)[v32];\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    v43 = a0;\n
    v42 = a1;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v40[0] << 24))\n
    {\n
        v4 = 0;\n
        if ((v40[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v40[2] << 8))\n
                v4 = v40[3];\n
        }\n
    }\n
    v41 = v4 & 1;\n
    cgc_uint2str(&v39, 12, v41);\n
    v3 = &v39;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v39)) < 0)\n
        cgc__terminate(1);\n
    v63 = v42;\n
    *(v63) = *(v63) - 4;\n
    v64 = v43;\n
    *(v64) = &*(v64)->field_4;\n
    v18 = a0;\n
    v17 = a1;\n
    if (*(v17) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v16 = *(v18)->field_0;\n
    v65 = v17;\n
    *(v65) = *(v65) - 1;\n
    v66 = v18;\n
    *(v66) = &*(v66)->padding_1;\n
    if (v16 <= *(v17) && !(!v16))\n
        goto LABEL_4b9cc3;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4b9cc3:\n
    v15 = cgc_calloc(v16);\n
    if (!v15)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v15, *(v18), v16);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v67 = v18;\n
    *(v67) = &(&*(v67)->field_0)[v16];\n
    v68 = v17;\n
    *(v68) = *(v68) - v16;\n
    cgc_checkheap();\n
    cgc_free(v15);\n
    v22 = a0;\n
    v21 = a1;\n
    if (*(v21) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v21) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v21);\n
    v20 = v2;\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = cgc_calloc(134);\n
    if (!v19)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v19, \"Str: \");\n
    cgc_strncpy(v19 + 5, *(v22), v20);\n
    v70 = v22;\n
    *(v70) = &(&*(v70)->field_4)[cgc_strlen(v19)];\n
    v72 = v21;\n
    *(v72) = *(v72) - (cgc_strlen(v19) + -4);\n
    cgc_checkheap();\n
    cgc_free(v19);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v30 = a0;\n
    v29 = a1;\n
    memset(&v27, 0, 12);\n
    if (*(v29) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v28 = *(&*(v30)->field_0);\n
    cgc_uint2str(&v27, 12, v28);\n
    v1 = &v27;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v73 = v29;\n
    *(v73) = *(v73) - 4;\n
    v74 = v30;\n
    *(v74) = &*(v74)->field_4;\n
    v26 = a0;\n
    v25 = a1;\n
    memset(&v23, 0, 12);\n
    if (*(v25) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = *(&*(v26)->field_0);\n
    cgc_uint2str(&v23, 12, v24);\n
    v0 = &v23;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v75 = v25;\n
    *(v75) = *(v75) - 4;\n
    v76 = v26;\n
    *(v76) = &*(v76)->field_4;\n
    v8 ^= cgc__cookie;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v77 = a1;\n
    if (*(a1) > 0 && v7 >= 0)\n
    {\n
        v77 = v7;\n
        if (v77 < 0)\n
            v77 = *(&(&v9)[8 * v7])(a0, a1);\n
    }\n
    return v77;\n
}\n
", "4956708:sub_4ba224": null, "4956720:cgc_process_llamamitigate": "extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamamitigate(struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned short v4;  // [bp-0x1a]\n
    unsigned int *v5;  // [bp-0x18]\n
    unsigned int *v7;  // rax\n
    struct struct_0 **v8;  // rax\n
    unsigned int *v9;  // rax\n
    struct struct_0 **v10;  // rax\n
    unsigned int *v11;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = cgc__cookie;\n
    v0 = -1;\n
    if (cgc_sendline(1, \"===llamamitigate===\", 19) < 0)\n
        cgc__terminate(1);\n
    v5 = a1;\n
    if (*(v5) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = *(a0)->field_0;\n
    v7 = v5;\n
    *(v7) = *(v7) - 2;\n
    v8 = a0;\n
    *(v8) = *(v8) + 1;\n
    if (v4 <= *(v5) && !(!v4))\n
        goto LABEL_4ba349;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ba349:\n
    v3 = cgc_calloc(v4);\n
    if (!v3)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v3, *(a0), v4);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v9 = v5;\n
    *(v9) = *(v9) - v4;\n
    v10 = a0;\n
    *(v10) = *(v10) + v4;\n
    cgc_checkheap();\n
    cgc_free(v3);\n
    v1 ^= cgc__cookie;\n
    if (v1)\n
        cgc___stack_cookie_fail();\n
    v11 = a1;\n
    if (*(a1) > 0 && v0 >= 0)\n
    {\n
        v11 = v0;\n
        if (v11 < 0)\n
            v11 = *(&(&v2)[8 * v0])(a0, a1);\n
    }\n
    return v11;\n
}\n
", "4957284:sub_4ba464": null, "4957296:cgc_process_llamamachar": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamamachar(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x300]\n
    char v1;  // [bp-0x2f1]\n
    struct_1 *v2;  // [bp-0x2f0]\n
    struct_1 *v3;  // [bp-0x2e8]\n
    char v4;  // [bp-0x2d9]\n
    struct_1 *v5;  // [bp-0x2d8]\n
    struct_1 *v6;  // [bp-0x2d0]\n
    struct_1 *v7;  // [bp-0x2c8]\n
    char v8;  // [bp-0x2b9]\n
    struct_1 *v9;  // [bp-0x2b8]\n
    char v10;  // [bp-0x2a9]\n
    struct_1 *v11;  // [bp-0x2a8]\n
    unsigned int v12;  // [bp-0x29c]\n
    struct_1 *v13;  // [bp-0x298]\n
    unsigned int v14;  // [bp-0x290]\n
    unsigned int v15;  // [bp-0x28c]\n
    char v16;  // [bp-0x288]\n
    char v17;  // [bp-0x26e]\n
    char v18[2];  // [bp-0x268]\n
    unsigned short v19;  // [bp-0x25a]\n
    unsigned int *v20;  // [bp-0x258]\n
    struct struct_0 **v21;  // [bp-0x250]\n
    char v22;  // [bp-0x248]\n
    char *v23;  // [bp-0x228]\n
    unsigned int v24;  // [bp-0x220]\n
    unsigned int *v25;  // [bp-0x218]\n
    struct struct_0 **v26;  // [bp-0x210]\n
    char v27;  // [bp-0x208]\n
    char v28[8];  // [bp-0x1e8]\n
    unsigned int v29;  // [bp-0x1e0]\n
    unsigned int *v30;  // [bp-0x1d8]\n
    struct struct_0 **v31;  // [bp-0x1d0]\n
    char v32;  // [bp-0x1c8]\n
    char v33[8];  // [bp-0x1a8]\n
    unsigned int v34;  // [bp-0x1a0]\n
    unsigned int *v35;  // [bp-0x198]\n
    struct struct_0 **v36;  // [bp-0x190]\n
    unsigned long v37;  // [bp-0x188]\n
    char v38;  // [bp-0x179]\n
    unsigned int *v39;  // [bp-0x178]\n
    struct struct_0 **v40;  // [bp-0x170]\n
    char *v41;  // [bp-0x168]\n
    unsigned int v42;  // [bp-0x15c]\n
    unsigned int *v43;  // [bp-0x158]\n
    struct struct_0 **v44;  // [bp-0x150]\n
    char v45;  // [bp-0x148]\n
    unsigned int v46;  // [bp-0x130]\n
    unsigned int *v47;  // [bp-0x128]\n
    struct struct_0 **v48;  // [bp-0x120]\n
    char v49;  // [bp-0x118]\n
    unsigned int v50;  // [bp-0x100]\n
    unsigned int *v51;  // [bp-0xf8]\n
    struct struct_0 **v52;  // [bp-0xf0]\n
    char v53;  // [bp-0xe8]\n
    unsigned int v54;  // [bp-0xd0]\n
    unsigned int *v55;  // [bp-0xc8]\n
    struct struct_0 **v56;  // [bp-0xc0]\n
    char v57;  // [bp-0xb8]\n
    unsigned int v58;  // [bp-0xac]\n
    unsigned int *v59;  // [bp-0xa8]\n
    struct struct_0 **v60;  // [bp-0xa0]\n
    unsigned long v61;  // [bp-0x98]\n
    unsigned short v62;  // [bp-0x8a]\n
    unsigned int *v63;  // [bp-0x88]\n
    struct struct_0 **v64;  // [bp-0x80]\n
    unsigned long v65;  // [bp-0x78]\n
    unsigned short v66;  // [bp-0x6a]\n
    unsigned int *v67;  // [bp-0x68]\n
    struct struct_0 **v68;  // [bp-0x60]\n
    char v69;  // [bp-0x58]\n
    unsigned int v70;  // [bp-0x40]\n
    unsigned int *v71;  // [bp-0x38]\n
    struct struct_0 **v72;  // [bp-0x30]\n
    unsigned long v73;  // [bp-0x28]\n
    char v74;  // [bp-0x19]\n
    unsigned int *v75;  // [bp-0x18]\n
    struct struct_0 **v76;  // [bp-0x10]\n
    unsigned int *v78;  // rax\n
    struct struct_0 **v79;  // rax\n
    unsigned int *v80;  // rax\n
    struct struct_0 **v81;  // rax\n
    unsigned int *v82;  // rax\n
    struct struct_0 **v83;  // rax\n
    struct struct_0 **v85;  // rax\n
    unsigned int *v87;  // rax\n
    unsigned int *v88;  // rax\n
    struct struct_0 **v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_0 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_0 **v93;  // rax\n
    unsigned int *v94;  // rax\n
    struct struct_0 **v95;  // rax\n
    struct struct_0 **v96;  // rax\n
    unsigned int *v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_0 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_0 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_0 **v103;  // rax\n
    struct struct_0 **v104;  // rax\n
    unsigned int *v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_0 **v107;  // rax\n
    unsigned int *v108;  // rax\n
    struct struct_0 **v109;  // rax\n
    unsigned int *v110;  // rax\n
    struct struct_0 **v111;  // rax\n
    unsigned int *v112;  // rax\n
    struct struct_0 **v113;  // rax\n
    unsigned int *v114;  // rax\n
    struct struct_0 **v115;  // rax\n
    unsigned int *v116;  // rax, Other Possible Types: unsigned long\n
\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamamachar===\", 17) < 0)\n
        cgc__terminate(1);\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v54) = *(&*(v56));\n
    cgc_uint2str(&v53, 21, *(&v54));\n
    v13 = &v53;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v78 = v55;\n
    *(v78) = *(v78) - 8;\n
    v79 = v56;\n
    *(v79) = *(v79) + 8;\n
    v68 = a0;\n
    v67 = a1;\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    v80 = v67;\n
    *(v80) = *(v80) - 2;\n
    v81 = v68;\n
    *(v81) = *(v81) + 2;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_4ba6a8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4ba6a8:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v82 = v67;\n
    *(v82) = *(v82) - v66;\n
    v83 = v68;\n
    *(v83) = &(*(v83))[v66];\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v44 = a0;\n
    v43 = a1;\n
    if (*(v43) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v43) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v43);\n
    v42 = v12;\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v41 = cgc_calloc(134);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v41, \"Str: \");\n
    cgc_strncpy(v41 + 5, *(v44), v42);\n
    v85 = v44;\n
    *(v85) = &(*(v85))[4 + cgc_strlen(v41)];\n
    v87 = v43;\n
    *(v87) = *(v87) - (cgc_strlen(v41) + -4);\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v52 = a0;\n
    v51 = a1;\n
    memset(&v49, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v50) = *(&*(v52));\n
    cgc_uint2str(&v49, 21, *(&v50));\n
    v11 = &v49;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v88 = v51;\n
    *(v88) = *(v88) - 8;\n
    v89 = v52;\n
    *(v89) = *(v89) + 8;\n
    v21 = a0;\n
    v20 = a1;\n
    *(&v18) = *(v21);\n
    memset(&v17, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v18[0] << 8))\n
        v10 = v18[1];\n
    v19 = v10 & 1;\n
    cgc_uint2str(&v17, 6, v19);\n
    v9 = &v17;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v17)) < 0)\n
        cgc__terminate(1);\n
    v90 = v20;\n
    *(v90) = *(v90) - 2;\n
    v91 = v21;\n
    *(v91) = *(v91) + 2;\n
    v36 = a0;\n
    v35 = a1;\n
    *(&v33[0]) = *(v36);\n
    memset(&v32, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if (v33[0] << 56)\n
    {\n
        v8 = 0;\n
        if (v33[1] << 48)\n
        {\n
            v8 = 0;\n
            if (v33[2] << 40)\n
            {\n
                v8 = 0;\n
                if (v33[3] << 32)\n
                {\n
                    v8 = 0;\n
                    if ((v33[4] << 24))\n
                    {\n
                        v8 = 0;\n
                        if ((v33[5] << 16))\n
                        {\n
                            v8 = 0;\n
                            if ((v33[6] << 8))\n
                                v8 = v33[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v34) = v8 & 1;\n
    cgc_uint2str(&v32, 21, *(&v34));\n
    v7 = &v32;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v32)) < 0)\n
        cgc__terminate(1);\n
    v92 = v35;\n
    *(v92) = *(v92) - 8;\n
    v93 = v36;\n
    *(v93) = *(v93) + 8;\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v74 = *(v76)->field_0;\n
    v94 = v75;\n
    *(v94) = *(v94) - 1;\n
    v95 = v76;\n
    *(v95) = *(v95) + 1;\n
    if (v74 <= *(v75) && !(!v74))\n
        goto LABEL_4bae92;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bae92:\n
    v73 = cgc_calloc(v74);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v73, *(v76), v74);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v96 = v76;\n
    *(v96) = &(*(v96))[v74];\n
    v97 = v75;\n
    *(v97) = *(v97) - v74;\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    v64 = a0;\n
    v63 = a1;\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(&*(v64));\n
    v98 = v63;\n
    *(v98) = *(v98) - 2;\n
    v99 = v64;\n
    *(v99) = *(v99) + 2;\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_4bb02c;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bb02c:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v100 = v63;\n
    *(v100) = *(v100) - v62;\n
    v101 = v64;\n
    *(v101) = &(*(v101))[v62];\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v40 = a0;\n
    v39 = a1;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = *(v40)->field_0;\n
    v102 = v39;\n
    *(v102) = *(v102) - 1;\n
    v103 = v40;\n
    *(v103) = *(v103) + 1;\n
    if (v38 <= *(v39) && !(!v38))\n
        goto LABEL_4bb1f1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bb1f1:\n
    v37 = cgc_calloc(v38);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v37, *(v40), v38);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v104 = v40;\n
    *(v104) = &(*(v104))[v38];\n
    v105 = v39;\n
    *(v105) = *(v105) - v38;\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    v48 = a0;\n
    v47 = a1;\n
    memset(&v45, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v46) = *(&*(v48));\n
    cgc_uint2str(&v45, 21, *(&v46));\n
    v6 = &v45;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v45)) < 0)\n
        cgc__terminate(1);\n
    v106 = v47;\n
    *(v106) = *(v106) - 8;\n
    v107 = v48;\n
    *(v107) = *(v107) + 8;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 12, v58);\n
    v5 = &v57;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v108 = v59;\n
    *(v108) = *(v108) - 4;\n
    v109 = v60;\n
    *(v109) = *(v109) + 4;\n
    v31 = a0;\n
    v30 = a1;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if (v28[0] << 56)\n
    {\n
        v4 = 0;\n
        if (v28[1] << 48)\n
        {\n
            v4 = 0;\n
            if (v28[2] << 40)\n
            {\n
                v4 = 0;\n
                if (v28[3] << 32)\n
                {\n
                    v4 = 0;\n
                    if ((v28[4] << 24))\n
                    {\n
                        v4 = 0;\n
                        if ((v28[5] << 16))\n
                        {\n
                            v4 = 0;\n
                            if ((v28[6] << 8))\n
                                v4 = v28[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v29) = v4 & 1;\n
    cgc_uint2str(&v27, 21, *(&v29));\n
    v3 = &v27;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v27)) < 0)\n
        cgc__terminate(1);\n
    v110 = v30;\n
    *(v110) = *(v110) - 8;\n
    v111 = v31;\n
    *(v111) = *(v111) + 8;\n
    v72 = a0;\n
    v71 = a1;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v70) = *(&*(v72));\n
    cgc_uint2str(&v69, 21, *(&v70));\n
    v2 = &v69;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v69)) < 0)\n
        cgc__terminate(1);\n
    v112 = v71;\n
    *(v112) = *(v112) - 8;\n
    v113 = v72;\n
    *(v113) = *(v113) + 8;\n
    v26 = a0;\n
    v25 = a1;\n
    v23 = &*(v26)->field_0;\n
    memset(&v22, 0, 21);\n
    if (*(v25) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if (*(v23) << 56)\n
    {\n
        v1 = 0;\n
        if (v23[1] << 48)\n
        {\n
            v1 = 0;\n
            if (v23[2] << 40)\n
            {\n
                v1 = 0;\n
                if (v23[3] << 32)\n
                {\n
                    v1 = 0;\n
                    if ((v23[4] << 24))\n
                    {\n
                        v1 = 0;\n
                        if ((v23[5] << 16))\n
                        {\n
                            v1 = 0;\n
                            if ((v23[6] << 8))\n
                                v1 = v23[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v24) = v1 & 1;\n
    cgc_uint2str(&v22, 21, *(&v24));\n
    v0 = &v22;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v22)) < 0)\n
        cgc__terminate(1);\n
    v114 = v25;\n
    *(v114) = *(v114) - 8;\n
    v115 = v26;\n
    *(v115) = *(v115) + 8;\n
    v15 ^= cgc__cookie;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v116 = a1;\n
    if (*(a1) > 0 && v14 >= 0)\n
    {\n
        v116 = v14;\n
        if (v116 < 0)\n
            v116 = *(&(&v16)[8 * v14])(a0, a1);\n
    }\n
    return v116;\n
}\n
", "4962925:sub_4bba6d": null, "4962928:cgc_process_llamafactorization": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamafactorization(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2e4]\n
    struct_0 *v1;  // [bp-0x2e0]\n
    struct_0 *v2;  // [bp-0x2d8]\n
    struct_0 *v3;  // [bp-0x2d0]\n
    char v4;  // [bp-0x2c1]\n
    struct_0 *v5;  // [bp-0x2c0]\n
    char v6;  // [bp-0x2b1]\n
    struct_0 *v7;  // [bp-0x2b0]\n
    struct_0 *v8;  // [bp-0x2a8]\n
    char v9;  // [bp-0x299]\n
    struct_0 *v10;  // [bp-0x298]\n
    char v11;  // [bp-0x289]\n
    struct_0 *v12;  // [bp-0x288]\n
    struct_0 *v13;  // [bp-0x280]\n
    char v14;  // [bp-0x271]\n
    struct_0 *v15;  // [bp-0x270]\n
    struct_0 *v16;  // [bp-0x268]\n
    unsigned int v17;  // [bp-0x260]\n
    unsigned int v18;  // [bp-0x25c]\n
    char v19;  // [bp-0x258]\n
    char v20;  // [bp-0x23e]\n
    char v21[2];  // [bp-0x238]\n
    unsigned short v22;  // [bp-0x22a]\n
    unsigned int *v23;  // [bp-0x228]\n
    struct struct_1 **v24;  // [bp-0x220]\n
    char v25;  // [bp-0x216]\n
    char *v26;  // [bp-0x210]\n
    unsigned short v27;  // [bp-0x202]\n
    unsigned int *v28;  // [bp-0x200]\n
    struct struct_1 **v29;  // [bp-0x1f8]\n
    char v30;  // [bp-0x1ee]\n
    char v31[2];  // [bp-0x1e8]\n
    unsigned short v32;  // [bp-0x1da]\n
    unsigned int *v33;  // [bp-0x1d8]\n
    struct struct_1 **v34;  // [bp-0x1d0]\n
    char v35;  // [bp-0x1c8]\n
    char v36[8];  // [bp-0x1a8]\n
    unsigned int v37;  // [bp-0x1a0]\n
    unsigned int *v38;  // [bp-0x198]\n
    struct struct_1 **v39;  // [bp-0x190]\n
    char v40;  // [bp-0x188]\n
    char v41[8];  // [bp-0x170]\n
    unsigned int v42;  // [bp-0x168]\n
    unsigned int *v43;  // [bp-0x160]\n
    struct struct_1 **v44;  // [bp-0x158]\n
    unsigned long v45;  // [bp-0x150]\n
    char v46;  // [bp-0x141]\n
    unsigned int *v47;  // [bp-0x140]\n
    struct struct_1 **v48;  // [bp-0x138]\n
    char v49;  // [bp-0x130]\n
    unsigned short v50;  // [bp-0x12a]\n
    unsigned int *v51;  // [bp-0x128]\n
    struct struct_1 **v52;  // [bp-0x120]\n
    char v53;  // [bp-0x118]\n
    unsigned int v54;  // [bp-0x10c]\n
    unsigned int *v55;  // [bp-0x108]\n
    struct struct_1 **v56;  // [bp-0x100]\n
    char v57;  // [bp-0xf8]\n
    unsigned int v58;  // [bp-0xec]\n
    unsigned int *v59;  // [bp-0xe8]\n
    struct struct_1 **v60;  // [bp-0xe0]\n
    char v61;  // [bp-0xd8]\n
    unsigned int v62;  // [bp-0xcc]\n
    unsigned int *v63;  // [bp-0xc8]\n
    struct struct_1 **v64;  // [bp-0xc0]\n
    char v65;  // [bp-0xb8]\n
    unsigned int v66;  // [bp-0xac]\n
    unsigned int *v67;  // [bp-0xa8]\n
    struct struct_1 **v68;  // [bp-0xa0]\n
    unsigned long v69;  // [bp-0x98]\n
    unsigned short v70;  // [bp-0x8a]\n
    unsigned int *v71;  // [bp-0x88]\n
    struct struct_1 **v72;  // [bp-0x80]\n
    char *v73;  // [bp-0x78]\n
    unsigned int v74;  // [bp-0x6c]\n
    unsigned int *v75;  // [bp-0x68]\n
    struct struct_1 **v76;  // [bp-0x60]\n
    char v77;  // [bp-0x58]\n
    unsigned int v78;  // [bp-0x40]\n
    unsigned int *v79;  // [bp-0x38]\n
    struct struct_1 **v80;  // [bp-0x30]\n
    unsigned long v81;  // [bp-0x28]\n
    char v82;  // [bp-0x19]\n
    unsigned int *v83;  // [bp-0x18]\n
    struct struct_1 **v84;  // [bp-0x10]\n
    unsigned int *v86;  // rax\n
    struct struct_1 **v87;  // rax\n
    unsigned int *v88;  // rax\n
    struct struct_1 **v89;  // rax\n
    unsigned int *v90;  // rax\n
    struct struct_1 **v91;  // rax\n
    unsigned int *v92;  // rax\n
    struct struct_1 **v93;  // rax\n
    struct struct_1 **v94;  // rax\n
    unsigned int *v95;  // rax\n
    unsigned int *v96;  // rax\n
    struct struct_1 **v97;  // rax\n
    unsigned int *v98;  // rax\n
    struct struct_1 **v99;  // rax\n
    unsigned int *v100;  // rax\n
    struct struct_1 **v101;  // rax\n
    unsigned int *v102;  // rax\n
    struct struct_1 **v103;  // rax\n
    unsigned int *v104;  // rax\n
    struct struct_1 **v105;  // rax\n
    unsigned int *v106;  // rax\n
    struct struct_1 **v107;  // rax\n
    unsigned int *v108;  // rax\n
    struct struct_1 **v109;  // rax\n
    unsigned int *v110;  // rax\n
    struct struct_1 **v111;  // rax\n
    unsigned int *v112;  // rax\n
    struct struct_1 **v113;  // rax\n
    unsigned int *v114;  // rax\n
    struct struct_1 **v115;  // rax\n
    struct struct_1 **v117;  // rax\n
    unsigned int *v119;  // rax\n
    unsigned int *v120;  // rax\n
    struct struct_1 **v121;  // rax\n
    struct struct_1 **v122;  // rax\n
    unsigned int *v123;  // rax\n
    unsigned int *v124;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamafactorization===\", 24) < 0)\n
        cgc__terminate(1);\n
    v68 = a0;\n
    v67 = a1;\n
    memset(&v65, 0, 12);\n
    if (*(v67) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v66 = *(&*(v68));\n
    cgc_uint2str(&v65, 12, v66);\n
    v16 = &v65;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v65)) < 0)\n
        cgc__terminate(1);\n
    v86 = v67;\n
    *(v86) = *(v86) - 4;\n
    v87 = v68;\n
    *(v87) = *(v87) + 4;\n
    v72 = a0;\n
    v71 = a1;\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v70 = *(&*(v72));\n
    v88 = v71;\n
    *(v88) = *(v88) - 2;\n
    v89 = v72;\n
    *(v89) = *(v89) + 2;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_4bbcb1;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bbcb1:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v90 = v71;\n
    *(v90) = *(v90) - v70;\n
    v91 = v72;\n
    *(v91) = &(*(v91))[v70];\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v48 = a0;\n
    v47 = a1;\n
    if (*(v47) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v46 = *(v48)->field_0;\n
    v92 = v47;\n
    *(v92) = *(v92) - 1;\n
    v93 = v48;\n
    *(v93) = *(v93) + 1;\n
    if (v46 <= *(v47) && !(!v46))\n
        goto LABEL_4bbe76;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bbe76:\n
    v45 = cgc_calloc(v46);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v45, *(v48), v46);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v94 = v48;\n
    *(v94) = &(*(v94))[v46];\n
    v95 = v47;\n
    *(v95) = *(v95) - v46;\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    v80 = a0;\n
    v79 = a1;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v78) = *(&*(v80));\n
    cgc_uint2str(&v77, 21, *(&v78));\n
    v15 = &v77;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v77)) < 0)\n
        cgc__terminate(1);\n
    v96 = v79;\n
    *(v96) = *(v96) - 8;\n
    v97 = v80;\n
    *(v97) = *(v97) + 8;\n
    v34 = a0;\n
    v33 = a1;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v14 = 0;\n
    if ((v31[0] << 8))\n
        v14 = v31[1];\n
    v32 = v14 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v13 = &v30;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v30)) < 0)\n
        cgc__terminate(1);\n
    v98 = v33;\n
    *(v98) = *(v98) - 2;\n
    v99 = v34;\n
    *(v99) = *(v99) + 2;\n
    v64 = a0;\n
    v63 = a1;\n
    memset(&v61, 0, 12);\n
    if (*(v63) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v62 = *(&*(v64));\n
    cgc_uint2str(&v61, 12, v62);\n
    v12 = &v61;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v61)) < 0)\n
        cgc__terminate(1);\n
    v100 = v63;\n
    *(v100) = *(v100) - 4;\n
    v101 = v64;\n
    *(v101) = *(v101) + 4;\n
    v44 = a0;\n
    v43 = a1;\n
    *(&v41[0]) = *(v44);\n
    memset(&v40, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if (v41[0] << 56)\n
    {\n
        v11 = 0;\n
        if (v41[1] << 48)\n
        {\n
            v11 = 0;\n
            if (v41[2] << 40)\n
            {\n
                v11 = 0;\n
                if (v41[3] << 32)\n
                {\n
                    v11 = 0;\n
                    if ((v41[4] << 24))\n
                    {\n
                        v11 = 0;\n
                        if ((v41[5] << 16))\n
                        {\n
                            v11 = 0;\n
                            if ((v41[6] << 8))\n
                                v11 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v42) = v11 & 1;\n
    cgc_uint2str(&v40, 21, *(&v42));\n
    v10 = &v40;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v40)) < 0)\n
        cgc__terminate(1);\n
    v102 = v43;\n
    *(v102) = *(v102) - 8;\n
    v103 = v44;\n
    *(v103) = *(v103) + 8;\n
    v39 = a0;\n
    v38 = a1;\n
    *(&v36[0]) = *(v39);\n
    memset(&v35, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v9 = 0;\n
    if (v36[0] << 56)\n
    {\n
        v9 = 0;\n
        if (v36[1] << 48)\n
        {\n
            v9 = 0;\n
            if (v36[2] << 40)\n
            {\n
                v9 = 0;\n
                if (v36[3] << 32)\n
                {\n
                    v9 = 0;\n
                    if ((v36[4] << 24))\n
                    {\n
                        v9 = 0;\n
                        if ((v36[5] << 16))\n
                        {\n
                            v9 = 0;\n
                            if ((v36[6] << 8))\n
                                v9 = v36[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v37) = v9 & 1;\n
    cgc_uint2str(&v35, 21, *(&v37));\n
    v8 = &v35;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v35)) < 0)\n
        cgc__terminate(1);\n
    v104 = v38;\n
    *(v104) = *(v104) - 8;\n
    v105 = v39;\n
    *(v105) = *(v105) + 8;\n
    v60 = a0;\n
    v59 = a1;\n
    memset(&v57, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 12, v58);\n
    v7 = &v57;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v57)) < 0)\n
        cgc__terminate(1);\n
    v106 = v59;\n
    *(v106) = *(v106) - 4;\n
    v107 = v60;\n
    *(v107) = *(v107) + 4;\n
    v29 = a0;\n
    v28 = a1;\n
    v26 = &*(v29)->field_0;\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v6 = 0;\n
    if ((*(v26) << 8))\n
        v6 = v26[1];\n
    v27 = v6 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v5 = &v25;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v108 = v28;\n
    *(v108) = *(v108) - 2;\n
    v109 = v29;\n
    *(v109) = *(v109) + 2;\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21) = *(v24);\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v21[0] << 8))\n
        v4 = v21[1];\n
    v22 = v4 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v3 = &v20;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v110 = v23;\n
    *(v110) = *(v110) - 2;\n
    v111 = v24;\n
    *(v111) = *(v111) + 2;\n
    v52 = a0;\n
    v51 = a1;\n
    memset(&v49, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = *(&*(v52));\n
    cgc_uint2str(&v49, 6, v50);\n
    v2 = &v49;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v49)) < 0)\n
        cgc__terminate(1);\n
    v112 = v51;\n
    *(v112) = *(v112) - 2;\n
    v113 = v52;\n
    *(v113) = *(v113) + 2;\n
    v56 = a0;\n
    v55 = a1;\n
    memset(&v53, 0, 12);\n
    if (*(v55) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 12, v54);\n
    v1 = &v53;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v53)) < 0)\n
        cgc__terminate(1);\n
    v114 = v55;\n
    *(v114) = *(v114) - 4;\n
    v115 = v56;\n
    *(v115) = *(v115) + 4;\n
    v76 = a0;\n
    v75 = a1;\n
    if (*(v75) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v75) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v75);\n
    v74 = v0;\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v73 = cgc_calloc(134);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v73, \"Str: \");\n
    cgc_strncpy(v73 + 5, *(v76), v74);\n
    v117 = v76;\n
    *(v117) = &(*(v117))[4 + cgc_strlen(v73)];\n
    v119 = v75;\n
    *(v119) = *(v119) - (cgc_strlen(v73) + -4);\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v84 = a0;\n
    v83 = a1;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = *(v84)->field_0;\n
    v120 = v83;\n
    *(v120) = *(v120) - 1;\n
    v121 = v84;\n
    *(v121) = *(v121) + 1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4bced0;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bced0:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v122 = v84;\n
    *(v122) = &(*(v122))[v82];\n
    v123 = v83;\n
    *(v123) = *(v123) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v124 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v124 = v17;\n
        if (v124 < 0)\n
            v124 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v124;\n
}\n
", "4968457:sub_4bd009": null, "4968464:cgc_process_llamaantimaterialistic": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamaantimaterialistic(struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x440]\n
    unsigned int v1;  // [bp-0x43c]\n
    struct_0 *v2;  // [bp-0x438]\n
    struct_0 *v3;  // [bp-0x430]\n
    char v4;  // [bp-0x425]\n
    unsigned int v5;  // [bp-0x424]\n
    struct_0 *v6;  // [bp-0x420]\n
    struct_0 *v7;  // [bp-0x418]\n
    char v8;  // [bp-0x409]\n
    struct_0 *v9;  // [bp-0x408]\n
    char v10;  // [bp-0x3f9]\n
    struct_0 *v11;  // [bp-0x3f8]\n
    struct_0 *v12;  // [bp-0x3f0]\n
    unsigned int v13;  // [bp-0x3e4]\n
    struct_0 *v14;  // [bp-0x3e0]\n
    char v15;  // [bp-0x3d5]\n
    unsigned int v16;  // [bp-0x3d4]\n
    unsigned int v17;  // [bp-0x3d0]\n
    unsigned int v18;  // [bp-0x3cc]\n
    char v19;  // [bp-0x3c8]\n
    char v20;  // [bp-0x3ae]\n
    char v21[2];  // [bp-0x3a8]\n
    unsigned short v22;  // [bp-0x39a]\n
    unsigned int *v23;  // [bp-0x398]\n
    struct struct_1 **v24;  // [bp-0x390]\n
    char v25;  // [bp-0x386]\n
    char v26[2];  // [bp-0x380]\n
    unsigned short v27;  // [bp-0x372]\n
    unsigned int *v28;  // [bp-0x370]\n
    struct struct_1 **v29;  // [bp-0x368]\n
    unsigned long v30;  // [bp-0x360]\n
    char v31;  // [bp-0x351]\n
    unsigned int *v32;  // [bp-0x350]\n
    struct struct_1 **v33;  // [bp-0x348]\n
    unsigned long v34;  // [bp-0x340]\n
    char v35;  // [bp-0x331]\n
    unsigned int *v36;  // [bp-0x330]\n
    struct struct_1 **v37;  // [bp-0x328]\n
    unsigned long v38;  // [bp-0x320]\n
    char v39;  // [bp-0x311]\n
    unsigned int *v40;  // [bp-0x310]\n
    struct struct_1 **v41;  // [bp-0x308]\n
    char *v42;  // [bp-0x300]\n
    unsigned int v43;  // [bp-0x2f4]\n
    unsigned int *v44;  // [bp-0x2f0]\n
    struct struct_1 **v45;  // [bp-0x2e8]\n
    char *v46;  // [bp-0x2e0]\n
    unsigned int v47;  // [bp-0x2d4]\n
    unsigned int *v48;  // [bp-0x2d0]\n
    struct struct_1 **v49;  // [bp-0x2c8]\n
    char *v50;  // [bp-0x2c0]\n
    unsigned int v51;  // [bp-0x2b4]\n
    unsigned int *v52;  // [bp-0x2b0]\n
    struct struct_1 **v53;  // [bp-0x2a8]\n
    char *v54;  // [bp-0x2a0]\n
    unsigned int v55;  // [bp-0x294]\n
    unsigned int *v56;  // [bp-0x290]\n
    struct struct_1 **v57;  // [bp-0x288]\n
    char *v58;  // [bp-0x280]\n
    unsigned int v59;  // [bp-0x274]\n
    unsigned int *v60;  // [bp-0x270]\n
    struct struct_1 **v61;  // [bp-0x268]\n
    char v62;  // [bp-0x25d]\n
    char v63;  // [bp-0x259]\n
    unsigned int *v64;  // [bp-0x258]\n
    struct struct_1 **v65;  // [bp-0x250]\n
    char v66;  // [bp-0x248]\n
    unsigned int v67;  // [bp-0x230]\n
    unsigned int *v68;  // [bp-0x228]\n
    struct struct_1 **v69;  // [bp-0x220]\n
    char v70;  // [bp-0x218]\n
    unsigned int v71;  // [bp-0x20c]\n
    unsigned int *v72;  // [bp-0x208]\n
    struct struct_1 **v73;  // [bp-0x200]\n
    unsigned long v74;  // [bp-0x1f8]\n
    unsigned short v75;  // [bp-0x1ea]\n
    unsigned int *v76;  // [bp-0x1e8]\n
    struct struct_1 **v77;  // [bp-0x1e0]\n
    unsigned long v78;  // [bp-0x1d8]\n
    unsigned short v79;  // [bp-0x1ca]\n
    unsigned int *v80;  // [bp-0x1c8]\n
    struct struct_1 **v81;  // [bp-0x1c0]\n
    unsigned long v82;  // [bp-0x1b8]\n
    unsigned short v83;  // [bp-0x1aa]\n
    unsigned int *v84;  // [bp-0x1a8]\n
    struct struct_1 **v85;  // [bp-0x1a0]\n
    unsigned long v86;  // [bp-0x198]\n
    unsigned short v87;  // [bp-0x18a]\n
    unsigned int *v88;  // [bp-0x188]\n
    struct struct_1 **v89;  // [bp-0x180]\n
    unsigned long v90;  // [bp-0x178]\n
    unsigned short v91;  // [bp-0x16a]\n
    unsigned int *v92;  // [bp-0x168]\n
    struct struct_1 **v93;  // [bp-0x160]\n
    unsigned long v94;  // [bp-0x158]\n
    unsigned short v95;  // [bp-0x14a]\n
    unsigned int *v96;  // [bp-0x148]\n
    struct struct_1 **v97;  // [bp-0x140]\n
    char v98;  // [bp-0x134]\n
    char v99[4];  // [bp-0x128]\n
    unsigned int v100;  // [bp-0x11c]\n
    unsigned int *v101;  // [bp-0x118]\n
    struct struct_1 **v102;  // [bp-0x110]\n
    char v103;  // [bp-0x104]\n
    char v104[4];  // [bp-0xf8]\n
    unsigned int v105;  // [bp-0xec]\n
    unsigned int *v106;  // [bp-0xe8]\n
    struct struct_1 **v107;  // [bp-0xe0]\n
    char v108;  // [bp-0xd8]\n
    unsigned int v109;  // [bp-0xc0]\n
    unsigned int *v110;  // [bp-0xb8]\n
    struct struct_1 **v111;  // [bp-0xb0]\n
    unsigned long v112;  // [bp-0xa8]\n
    char v113;  // [bp-0x99]\n
    unsigned int *v114;  // [bp-0x98]\n
    struct struct_1 **v115;  // [bp-0x90]\n
    unsigned long v116;  // [bp-0x88]\n
    char v117;  // [bp-0x79]\n
    unsigned int *v118;  // [bp-0x78]\n
    struct struct_1 **v119;  // [bp-0x70]\n
    unsigned long v120;  // [bp-0x68]\n
    char v121;  // [bp-0x59]\n
    unsigned int *v122;  // [bp-0x58]\n
    struct struct_1 **v123;  // [bp-0x50]\n
    unsigned long v124;  // [bp-0x48]\n
    char v125;  // [bp-0x39]\n
    unsigned int *v126;  // [bp-0x38]\n
    struct struct_1 **v127;  // [bp-0x30]\n
    unsigned long v128;  // [bp-0x28]\n
    char v129;  // [bp-0x19]\n
    unsigned int *v130;  // [bp-0x18]\n
    struct struct_1 **v131;  // [bp-0x10]\n
    struct struct_1 **v134;  // rax\n
    unsigned int *v136;  // rax\n
    unsigned int *v137;  // rax\n
    struct struct_1 **v138;  // rax\n
    struct struct_1 **v140;  // rax\n
    unsigned int *v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_1 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_1 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_1 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_1 **v150;  // rax\n
    struct struct_1 **v151;  // rax\n
    unsigned int *v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_1 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_1 **v156;  // rax\n
    struct struct_1 **v157;  // rax\n
    unsigned int *v158;  // rax\n
    unsigned int *v159;  // rax\n
    struct struct_1 **v160;  // rax\n
    unsigned int *v161;  // rax\n
    struct struct_1 **v162;  // rax\n
    struct struct_1 **v163;  // rax\n
    unsigned int *v164;  // rax\n
    unsigned int *v165;  // rax\n
    struct struct_1 **v166;  // rax\n
    unsigned int *v167;  // rax\n
    struct struct_1 **v168;  // rax\n
    struct struct_1 **v170;  // rax\n
    unsigned int *v172;  // rax\n
    unsigned int *v173;  // rax\n
    struct struct_1 **v174;  // rax\n
    struct struct_1 **v175;  // rax\n
    unsigned int *v176;  // rax\n
    unsigned int *v177;  // rax\n
    struct struct_1 **v178;  // rax\n
    struct struct_1 **v179;  // rax\n
    unsigned int *v180;  // rax\n
    unsigned int *v181;  // rax\n
    struct struct_1 **v182;  // rax\n
    unsigned int *v183;  // rax\n
    struct struct_1 **v184;  // rax\n
    unsigned int *v185;  // rax\n
    struct struct_1 **v186;  // rax\n
    unsigned int *v187;  // rax\n
    struct struct_1 **v188;  // rax\n
    unsigned int *v189;  // rax\n
    struct struct_1 **v190;  // rax\n
    unsigned int *v191;  // rax\n
    struct struct_1 **v192;  // rax\n
    unsigned int *v193;  // rax\n
    struct struct_1 **v194;  // rax\n
    struct struct_1 **v195;  // rax\n
    unsigned int *v196;  // rax\n
    unsigned int *v197;  // rax\n
    struct struct_1 **v198;  // rax\n
    unsigned int *v199;  // rax\n
    struct struct_1 **v200;  // rax\n
    unsigned int *v201;  // rax\n
    struct struct_1 **v202;  // rax\n
    unsigned int *v203;  // rax\n
    struct struct_1 **v204;  // rax\n
    unsigned int *v205;  // rax\n
    struct struct_1 **v206;  // rax\n
    struct struct_1 **v207;  // rax\n
    unsigned int *v208;  // rax\n
    unsigned int *v209;  // rax\n
    struct struct_1 **v210;  // rax\n
    unsigned int *v211;  // rax\n
    struct struct_1 **v212;  // rax\n
    unsigned int *v213;  // rax\n
    struct struct_1 **v214;  // rax\n
    struct struct_1 **v215;  // rax\n
    unsigned int *v216;  // rax\n
    struct struct_1 **v218;  // rax\n
    unsigned int *v220;  // rax\n
    struct struct_1 **v222;  // rax\n
    unsigned int *v224;  // rax\n
    unsigned int *v225;  // rax, Other Possible Types: unsigned long\n
\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamaantimaterialistic===\", 28) < 0)\n
        cgc__terminate(1);\n
    v61 = a0;\n
    v60 = a1;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v60) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v60);\n
    v59 = v16;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v58, \"Str: \");\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v134 = v61;\n
    *(v134) = &(*(v134))[4 + cgc_strlen(v58)];\n
    v136 = v60;\n
    *(v136) = *(v136) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v29 = a0;\n
    v28 = a1;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v15 = 0;\n
    if ((v26[0] << 8))\n
        v15 = v26[1];\n
    v27 = v15 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v14 = &v25;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v25)) < 0)\n
        cgc__terminate(1);\n
    v137 = v28;\n
    *(v137) = *(v137) - 2;\n
    v138 = v29;\n
    *(v138) = *(v138) + 2;\n
    v57 = a0;\n
    v56 = a1;\n
    if (*(v56) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v56) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v56);\n
    v55 = v13;\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v54 = cgc_calloc(134);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v54, \"Str: \");\n
    cgc_strncpy(v54 + 5, *(v57), v55);\n
    v140 = v57;\n
    *(v140) = &(*(v140))[4 + cgc_strlen(v54)];\n
    v142 = v56;\n
    *(v142) = *(v142) - (cgc_strlen(v54) + -4);\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 4);\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(v65)->field_0;\n
    cgc_uint2str(&v62, 4, v63);\n
    v12 = &v62;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v143 = v64;\n
    *(v143) = *(v143) - 1;\n
    v144 = v65;\n
    *(v144) = *(v144) + 1;\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 12, v71);\n
    v11 = &v70;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v145 = v72;\n
    *(v145) = *(v145) - 4;\n
    v146 = v73;\n
    *(v146) = *(v146) + 4;\n
    v24 = a0;\n
    v23 = a1;\n
    *(&v21) = *(v24);\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v10 = 0;\n
    if ((v21[0] << 8))\n
        v10 = v21[1];\n
    v22 = v10 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v9 = &v20;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v20)) < 0)\n
        cgc__terminate(1);\n
    v147 = v23;\n
    *(v147) = *(v147) - 2;\n
    v148 = v24;\n
    *(v148) = *(v148) + 2;\n
    v131 = a0;\n
    v130 = a1;\n
    if (*(v130) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v129 = *(v131)->field_0;\n
    v149 = v130;\n
    *(v149) = *(v149) - 1;\n
    v150 = v131;\n
    *(v150) = *(v150) + 1;\n
    if (v129 <= *(v130) && !(!v129))\n
        goto LABEL_4bd9b5;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bd9b5:\n
    v128 = cgc_calloc(v129);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v128, *(v131), v129);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v151 = v131;\n
    *(v151) = &(*(v151))[v129];\n
    v152 = v130;\n
    *(v152) = *(v152) - v129;\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    v107 = a0;\n
    v106 = a1;\n
    *(&v104) = *(v107);\n
    memset(&v103, 0, 12);\n
    if (*(v106) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v8 = 0;\n
    if ((v104[0] << 24))\n
    {\n
        v8 = 0;\n
        if ((v104[1] << 16))\n
        {\n
            v8 = 0;\n
            if ((v104[2] << 8))\n
                v8 = v104[3];\n
        }\n
    }\n
    v105 = v8 & 1;\n
    cgc_uint2str(&v103, 12, v105);\n
    v7 = &v103;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v103)) < 0)\n
        cgc__terminate(1);\n
    v153 = v106;\n
    *(v153) = *(v153) - 4;\n
    v154 = v107;\n
    *(v154) = *(v154) + 4;\n
    v127 = a0;\n
    v126 = a1;\n
    if (*(v126) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v125 = *(v127)->field_0;\n
    v155 = v126;\n
    *(v155) = *(v155) - 1;\n
    v156 = v127;\n
    *(v156) = *(v156) + 1;\n
    if (v125 <= *(v126) && !(!v125))\n
        goto LABEL_4bdcc8;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bdcc8:\n
    v124 = cgc_calloc(v125);\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v124, *(v127), v125);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v157 = v127;\n
    *(v157) = &(*(v157))[v125];\n
    v158 = v126;\n
    *(v158) = *(v158) - v125;\n
    cgc_checkheap();\n
    cgc_free(v124);\n
    v111 = a0;\n
    v110 = a1;\n
    memset(&v108, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v109) = *(&*(v111));\n
    cgc_uint2str(&v108, 21, *(&v109));\n
    v6 = &v108;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v108)) < 0)\n
        cgc__terminate(1);\n
    v159 = v110;\n
    *(v159) = *(v159) - 8;\n
    v160 = v111;\n
    *(v160) = *(v160) + 8;\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(v41)->field_0;\n
    v161 = v40;\n
    *(v161) = *(v161) - 1;\n
    v162 = v41;\n
    *(v162) = *(v162) + 1;\n
    if (v39 <= *(v40) && !(!v39))\n
        goto LABEL_4bdf7b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bdf7b:\n
    v38 = cgc_calloc(v39);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v38, *(v41), v39);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v163 = v41;\n
    *(v163) = &(*(v163))[v39];\n
    v164 = v40;\n
    *(v164) = *(v164) - v39;\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    v97 = a0;\n
    v96 = a1;\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v95 = *(&*(v97));\n
    v165 = v96;\n
    *(v165) = *(v165) - 2;\n
    v166 = v97;\n
    *(v166) = *(v166) + 2;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_4be14b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4be14b:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v167 = v96;\n
    *(v167) = *(v167) - v95;\n
    v168 = v97;\n
    *(v168) = &(*(v168))[v95];\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v53 = a0;\n
    v52 = a1;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v52) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v52);\n
    v51 = v5;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v50, \"Str: \");\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v170 = v53;\n
    *(v170) = &(*(v170))[4 + cgc_strlen(v50)];\n
    v172 = v52;\n
    *(v172) = *(v172) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v123 = a0;\n
    v122 = a1;\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v121 = *(v123)->field_0;\n
    v173 = v122;\n
    *(v173) = *(v173) - 1;\n
    v174 = v123;\n
    *(v174) = *(v174) + 1;\n
    if (v121 <= *(v122) && !(!v121))\n
        goto LABEL_4be4ee;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4be4ee:\n
    v120 = cgc_calloc(v121);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v120, *(v123), v121);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v175 = v123;\n
    *(v175) = &(*(v175))[v121];\n
    v176 = v122;\n
    *(v176) = *(v176) - v121;\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(v37)->field_0;\n
    v177 = v36;\n
    *(v177) = *(v177) - 1;\n
    v178 = v37;\n
    *(v178) = *(v178) + 1;\n
    if (v35 <= *(v36) && !(!v35))\n
        goto LABEL_4be69b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4be69b:\n
    v34 = cgc_calloc(v35);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v34, *(v37), v35);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v179 = v37;\n
    *(v179) = &(*(v179))[v35];\n
    v180 = v36;\n
    *(v180) = *(v180) - v35;\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    v93 = a0;\n
    v92 = a1;\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v91 = *(&*(v93));\n
    v181 = v92;\n
    *(v181) = *(v181) - 2;\n
    v182 = v93;\n
    *(v182) = *(v182) + 2;\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_4be86b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4be86b:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v183 = v92;\n
    *(v183) = *(v183) - v91;\n
    v184 = v93;\n
    *(v184) = &(*(v184))[v91];\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v83 = *(&*(v85));\n
    v185 = v84;\n
    *(v185) = *(v185) - 2;\n
    v186 = v85;\n
    *(v186) = *(v186) + 2;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_4bea3b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bea3b:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v187 = v84;\n
    *(v187) = *(v187) - v83;\n
    v188 = v85;\n
    *(v188) = &(*(v188))[v83];\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v89 = a0;\n
    v88 = a1;\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v87 = *(&*(v89));\n
    v189 = v88;\n
    *(v189) = *(v189) - 2;\n
    v190 = v89;\n
    *(v190) = *(v190) + 2;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_4bec0b;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bec0b:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v191 = v88;\n
    *(v191) = *(v191) - v87;\n
    v192 = v89;\n
    *(v192) = &(*(v192))[v87];\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v119 = a0;\n
    v118 = a1;\n
    if (*(v118) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v117 = *(v119)->field_0;\n
    v193 = v118;\n
    *(v193) = *(v193) - 1;\n
    v194 = v119;\n
    *(v194) = *(v194) + 1;\n
    if (v117 <= *(v118) && !(!v117))\n
        goto LABEL_4bedbb;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bedbb:\n
    v116 = cgc_calloc(v117);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v116, *(v119), v117);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v195 = v119;\n
    *(v195) = &(*(v195))[v117];\n
    v196 = v118;\n
    *(v196) = *(v196) - v117;\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    v197 = v80;\n
    *(v197) = *(v197) - 2;\n
    v198 = v81;\n
    *(v198) = *(v198) + 2;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_4bef6a;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bef6a:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v199 = v80;\n
    *(v199) = *(v199) - v79;\n
    v200 = v81;\n
    *(v200) = &(*(v200))[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v102 = a0;\n
    v101 = a1;\n
    *(&v99) = *(v102);\n
    memset(&v98, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v4 = 0;\n
    if ((v99[0] << 24))\n
    {\n
        v4 = 0;\n
        if ((v99[1] << 16))\n
        {\n
            v4 = 0;\n
            if ((v99[2] << 8))\n
                v4 = v99[3];\n
        }\n
    }\n
    v100 = v4 & 1;\n
    cgc_uint2str(&v98, 12, v100);\n
    v3 = &v98;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v98)) < 0)\n
        cgc__terminate(1);\n
    v201 = v101;\n
    *(v201) = *(v201) - 4;\n
    v202 = v102;\n
    *(v202) = *(v202) + 4;\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v67) = *(&*(v69));\n
    cgc_uint2str(&v66, 21, *(&v67));\n
    v2 = &v66;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v203 = v68;\n
    *(v203) = *(v203) - 8;\n
    v204 = v69;\n
    *(v204) = *(v204) + 8;\n
    v115 = a0;\n
    v114 = a1;\n
    if (*(v114) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v113 = *(v115)->field_0;\n
    v205 = v114;\n
    *(v205) = *(v205) - 1;\n
    v206 = v115;\n
    *(v206) = *(v206) + 1;\n
    if (v113 <= *(v114) && !(!v113))\n
        goto LABEL_4bf3c6;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bf3c6:\n
    v112 = cgc_calloc(v113);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v112, *(v115), v113);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v207 = v115;\n
    *(v207) = &(*(v207))[v113];\n
    v208 = v114;\n
    *(v208) = *(v208) - v113;\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    v77 = a0;\n
    v76 = a1;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    v209 = v76;\n
    *(v209) = *(v209) - 2;\n
    v210 = v77;\n
    *(v210) = *(v210) + 2;\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_4bf596;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bf596:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v211 = v76;\n
    *(v211) = *(v211) - v75;\n
    v212 = v77;\n
    *(v212) = &(*(v212))[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v33 = a0;\n
    v32 = a1;\n
    if (*(v32) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(v33)->field_0;\n
    v213 = v32;\n
    *(v213) = *(v213) - 1;\n
    v214 = v33;\n
    *(v214) = *(v214) + 1;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_4bf764;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4bf764:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v215 = v33;\n
    *(v215) = &(*(v215))[v31];\n
    v216 = v32;\n
    *(v216) = *(v216) - v31;\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v49 = a0;\n
    v48 = a1;\n
    if (*(v48) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v48) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v48);\n
    v47 = v1;\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v46 = cgc_calloc(134);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v46, \"Str: \");\n
    cgc_strncpy(v46 + 5, *(v49), v47);\n
    v218 = v49;\n
    *(v218) = &(*(v218))[4 + cgc_strlen(v46)];\n
    v220 = v48;\n
    *(v220) = *(v220) - (cgc_strlen(v46) + -4);\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v45 = a0;\n
    v44 = a1;\n
    if (*(v44) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v44) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v44);\n
    v43 = v0;\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v42 = cgc_calloc(134);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v42, \"Str: \");\n
    cgc_strncpy(v42 + 5, *(v45), v43);\n
    v222 = v45;\n
    *(v222) = &(*(v222))[4 + cgc_strlen(v42)];\n
    v224 = v44;\n
    *(v224) = *(v224) - (cgc_strlen(v42) + -4);\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v18 ^= cgc__cookie;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v225 = a1;\n
    if (*(a1) > 0 && v17 >= 0)\n
    {\n
        v225 = v17;\n
        if (v225 < 0)\n
            v225 = *(&(&v19)[8 * v17])(a0, a1);\n
    }\n
    return v225;\n
}\n
", "4979876:sub_4bfca4": null, "4979888:cgc_process_llamalowermost": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
\n
long long cgc_process_llamalowermost(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x3b0]\n
    struct_1 *v1;  // [bp-0x3a8]\n
    struct_1 *v2;  // [bp-0x3a0]\n
    struct_1 *v3;  // [bp-0x398]\n
    struct_1 *v4;  // [bp-0x390]\n
    struct_1 *v5;  // [bp-0x388]\n
    struct_1 *v6;  // [bp-0x380]\n
    char v7;  // [bp-0x371]\n
    struct_1 *v8;  // [bp-0x370]\n
    unsigned int v9;  // [bp-0x364]\n
    struct_1 *v10;  // [bp-0x360]\n
    char v11;  // [bp-0x351]\n
    struct_1 *v12;  // [bp-0x350]\n
    struct_1 *v13;  // [bp-0x348]\n
    struct_1 *v14;  // [bp-0x340]\n
    unsigned int v15;  // [bp-0x334]\n
    struct_1 *v16;  // [bp-0x330]\n
    char v17;  // [bp-0x321]\n
    struct_1 *v18;  // [bp-0x320]\n
    struct_1 *v19;  // [bp-0x318]\n
    unsigned int v20;  // [bp-0x310]\n
    unsigned int v21;  // [bp-0x30c]\n
    char v22;  // [bp-0x308]\n
    char v23;  // [bp-0x2ee]\n
    char v24[2];  // [bp-0x2e8]\n
    unsigned short v25;  // [bp-0x2da]\n
    unsigned int *v26;  // [bp-0x2d8]\n
    struct struct_0 **v27;  // [bp-0x2d0]\n
    char v28;  // [bp-0x2c8]\n
    char v29[8];  // [bp-0x2a8]\n
    unsigned int v30;  // [bp-0x2a0]\n
    unsigned int *v31;  // [bp-0x298]\n
    struct struct_0 **v32;  // [bp-0x290]\n
    char v33;  // [bp-0x288]\n
    char v34[8];  // [bp-0x268]\n
    unsigned int v35;  // [bp-0x260]\n
    unsigned int *v36;  // [bp-0x258]\n
    struct struct_0 **v37;  // [bp-0x250]\n
    char *v38;  // [bp-0x248]\n
    unsigned int v39;  // [bp-0x23c]\n
    unsigned int *v40;  // [bp-0x238]\n
    struct struct_0 **v41;  // [bp-0x230]\n
    char v42;  // [bp-0x228]\n
    unsigned short v43;  // [bp-0x222]\n
    unsigned int *v44;  // [bp-0x220]\n
    struct struct_0 **v45;  // [bp-0x218]\n
    char v46;  // [bp-0x210]\n
    unsigned short v47;  // [bp-0x20a]\n
    unsigned int *v48;  // [bp-0x208]\n
    struct struct_0 **v49;  // [bp-0x200]\n
    char v50;  // [bp-0x1f5]\n
    char v51;  // [bp-0x1f1]\n
    unsigned int *v52;  // [bp-0x1f0]\n
    struct struct_0 **v53;  // [bp-0x1e8]\n
    char v54;  // [bp-0x1dd]\n
    char v55;  // [bp-0x1d9]\n
    unsigned int *v56;  // [bp-0x1d8]\n
    struct struct_0 **v57;  // [bp-0x1d0]\n
    char v58;  // [bp-0x1c8]\n
    unsigned int v59;  // [bp-0x1b0]\n
    unsigned int *v60;  // [bp-0x1a8]\n
    struct struct_0 **v61;  // [bp-0x1a0]\n
    char v62;  // [bp-0x198]\n
    unsigned int v63;  // [bp-0x18c]\n
    unsigned int *v64;  // [bp-0x188]\n
    struct struct_0 **v65;  // [bp-0x180]\n
    char v66;  // [bp-0x178]\n
    unsigned int v67;  // [bp-0x16c]\n
    unsigned int *v68;  // [bp-0x168]\n
    struct struct_0 **v69;  // [bp-0x160]\n
    char v70;  // [bp-0x158]\n
    unsigned int v71;  // [bp-0x14c]\n
    unsigned int *v72;  // [bp-0x148]\n
    struct struct_0 **v73;  // [bp-0x140]\n
    char v74;  // [bp-0x138]\n
    unsigned int v75;  // [bp-0x12c]\n
    unsigned int *v76;  // [bp-0x128]\n
    struct struct_0 **v77;  // [bp-0x120]\n
    unsigned long v78;  // [bp-0x118]\n
    unsigned short v79;  // [bp-0x10a]\n
    unsigned int *v80;  // [bp-0x108]\n
    struct struct_0 **v81;  // [bp-0x100]\n
    char *v82;  // [bp-0xf8]\n
    unsigned int v83;  // [bp-0xec]\n
    unsigned int *v84;  // [bp-0xe8]\n
    struct struct_0 **v85;  // [bp-0xe0]\n
    char v86;  // [bp-0xd8]\n
    unsigned int v87;  // [bp-0xc0]\n
    unsigned int *v88;  // [bp-0xb8]\n
    struct struct_0 **v89;  // [bp-0xb0]\n
    char v90;  // [bp-0xa8]\n
    unsigned int v91;  // [bp-0x90]\n
    unsigned int *v92;  // [bp-0x88]\n
    struct struct_0 **v93;  // [bp-0x80]\n
    char v94;  // [bp-0x78]\n
    unsigned int v95;  // [bp-0x60]\n
    unsigned int *v96;  // [bp-0x58]\n
    struct struct_0 **v97;  // [bp-0x50]\n
    unsigned long v98;  // [bp-0x48]\n
    char v99;  // [bp-0x39]\n
    unsigned int *v100;  // [bp-0x38]\n
    struct struct_0 **v101;  // [bp-0x30]\n
    unsigned long v102;  // [bp-0x28]\n
    char v103;  // [bp-0x19]\n
    unsigned int *v104;  // [bp-0x18]\n
    struct struct_0 **v105;  // [bp-0x10]\n
    unsigned int *v107;  // rax\n
    struct struct_0 **v108;  // rax\n
    unsigned int *v109;  // rax\n
    struct struct_0 **v110;  // rax\n
    unsigned int *v111;  // rax\n
    struct struct_0 **v112;  // rax\n
    struct struct_0 **v114;  // rax\n
    unsigned int *v116;  // rax\n
    unsigned int *v117;  // rax\n
    struct struct_0 **v118;  // rax\n
    unsigned int *v119;  // rax\n
    struct struct_0 **v120;  // rax\n
    unsigned int *v121;  // rax\n
    struct struct_0 **v122;  // rax\n
    struct struct_0 **v123;  // rax\n
    unsigned int *v124;  // rax\n
    unsigned int *v125;  // rax\n
    struct struct_0 **v126;  // rax\n
    struct struct_0 **v127;  // rax\n
    unsigned int *v128;  // rax\n
    unsigned int *v129;  // rax\n
    struct struct_0 **v130;  // rax\n
    unsigned int *v131;  // rax\n
    struct struct_0 **v132;  // rax\n
    unsigned int *v133;  // rax\n
    struct struct_0 **v134;  // rax\n
    unsigned int *v135;  // rax\n
    struct struct_0 **v136;  // rax\n
    struct struct_0 **v138;  // rax\n
    unsigned int *v140;  // rax\n
    unsigned int *v141;  // rax\n
    struct struct_0 **v142;  // rax\n
    unsigned int *v143;  // rax\n
    struct struct_0 **v144;  // rax\n
    unsigned int *v145;  // rax\n
    struct struct_0 **v146;  // rax\n
    unsigned int *v147;  // rax\n
    struct struct_0 **v148;  // rax\n
    unsigned int *v149;  // rax\n
    struct struct_0 **v150;  // rax\n
    unsigned int *v151;  // rax\n
    struct struct_0 **v152;  // rax\n
    unsigned int *v153;  // rax\n
    struct struct_0 **v154;  // rax\n
    unsigned int *v155;  // rax\n
    struct struct_0 **v156;  // rax\n
    unsigned int *v157;  // rax, Other Possible Types: unsigned long\n
\n
    v21 = cgc__cookie;\n
    v20 = -1;\n
    if (cgc_sendline(1, \"===llamalowermost===\", 20) < 0)\n
        cgc__terminate(1);\n
    v57 = a0;\n
    v56 = a1;\n
    memset(&v54, 0, 4);\n
    if (*(v56) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v55 = *(v57)->field_0;\n
    cgc_uint2str(&v54, 4, v55);\n
    v19 = &v54;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v54)) < 0)\n
        cgc__terminate(1);\n
    v107 = v56;\n
    *(v107) = *(v107) - 1;\n
    v108 = v57;\n
    *(v108) = *(v108) + 1;\n
    v97 = a0;\n
    v96 = a1;\n
    memset(&v94, 0, 21);\n
    if (*(v96) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v95) = *(&*(v97));\n
    cgc_uint2str(&v94, 21, *(&v95));\n
    v18 = &v94;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v94)) < 0)\n
        cgc__terminate(1);\n
    v109 = v96;\n
    *(v109) = *(v109) - 8;\n
    v110 = v97;\n
    *(v110) = *(v110) + 8;\n
    v37 = a0;\n
    v36 = a1;\n
    *(&v34[0]) = *(v37);\n
    memset(&v33, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v17 = 0;\n
    if (v34[0] << 56)\n
    {\n
        v17 = 0;\n
        if (v34[1] << 48)\n
        {\n
            v17 = 0;\n
            if (v34[2] << 40)\n
            {\n
                v17 = 0;\n
                if (v34[3] << 32)\n
                {\n
                    v17 = 0;\n
                    if ((v34[4] << 24))\n
                    {\n
                        v17 = 0;\n
                        if ((v34[5] << 16))\n
                        {\n
                            v17 = 0;\n
                            if ((v34[6] << 8))\n
                                v17 = v34[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v35) = v17 & 1;\n
    cgc_uint2str(&v33, 21, *(&v35));\n
    v16 = &v33;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v33)) < 0)\n
        cgc__terminate(1);\n
    v111 = v36;\n
    *(v111) = *(v111) - 8;\n
    v112 = v37;\n
    *(v112) = *(v112) + 8;\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v40) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v40);\n
    v39 = v15;\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v38 = cgc_calloc(134);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v38, \"Str: \");\n
    cgc_strncpy(v38 + 5, *(v41), v39);\n
    v114 = v41;\n
    *(v114) = &(*(v114))[4 + cgc_strlen(v38)];\n
    v116 = v40;\n
    *(v116) = *(v116) - (cgc_strlen(v38) + -4);\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v77 = a0;\n
    v76 = a1;\n
    memset(&v74, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v75 = *(&*(v77));\n
    cgc_uint2str(&v74, 12, v75);\n
    v14 = &v74;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v74)) < 0)\n
        cgc__terminate(1);\n
    v117 = v76;\n
    *(v117) = *(v117) - 4;\n
    v118 = v77;\n
    *(v118) = *(v118) + 4;\n
    v93 = a0;\n
    v92 = a1;\n
    memset(&v90, 0, 21);\n
    if (*(v92) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v91) = *(&*(v93));\n
    cgc_uint2str(&v90, 21, *(&v91));\n
    v13 = &v90;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v90)) < 0)\n
        cgc__terminate(1);\n
    v119 = v92;\n
    *(v119) = *(v119) - 8;\n
    v120 = v93;\n
    *(v120) = *(v120) + 8;\n
    v105 = a0;\n
    v104 = a1;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v103 = *(v105)->field_0;\n
    v121 = v104;\n
    *(v121) = *(v121) - 1;\n
    v122 = v105;\n
    *(v122) = *(v122) + 1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_4c05c7;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c05c7:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v123 = v105;\n
    *(v123) = &(*(v123))[v103];\n
    v124 = v104;\n
    *(v124) = *(v124) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v101 = a0;\n
    v100 = a1;\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v99 = *(v101)->field_0;\n
    v125 = v100;\n
    *(v125) = *(v125) - 1;\n
    v126 = v101;\n
    *(v126) = *(v126) + 1;\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_4c0756;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c0756:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v127 = v101;\n
    *(v127) = &(*(v127))[v99];\n
    v128 = v100;\n
    *(v128) = *(v128) - v99;\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v81 = a0;\n
    v80 = a1;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v79 = *(&*(v81));\n
    v129 = v80;\n
    *(v129) = *(v129) - 2;\n
    v130 = v81;\n
    *(v130) = *(v130) + 2;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_4c0905;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c0905:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v131 = v80;\n
    *(v131) = *(v131) - v79;\n
    v132 = v81;\n
    *(v132) = &(*(v132))[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v69 = a0;\n
    v68 = a1;\n
    memset(&v66, 0, 12);\n
    if (*(v68) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v67 = *(&*(v69));\n
    cgc_uint2str(&v66, 12, v67);\n
    v12 = &v66;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v66)) < 0)\n
        cgc__terminate(1);\n
    v133 = v68;\n
    *(v133) = *(v133) - 4;\n
    v134 = v69;\n
    *(v134) = *(v134) + 4;\n
    v32 = a0;\n
    v31 = a1;\n
    *(&v29[0]) = *(v32);\n
    memset(&v28, 0, 21);\n
    if (*(v31) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v11 = 0;\n
    if (v29[0] << 56)\n
    {\n
        v11 = 0;\n
        if (v29[1] << 48)\n
        {\n
            v11 = 0;\n
            if (v29[2] << 40)\n
            {\n
                v11 = 0;\n
                if (v29[3] << 32)\n
                {\n
                    v11 = 0;\n
                    if ((v29[4] << 24))\n
                    {\n
                        v11 = 0;\n
                        if ((v29[5] << 16))\n
                        {\n
                            v11 = 0;\n
                            if ((v29[6] << 8))\n
                                v11 = v29[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    *(&v30) = v11 & 1;\n
    cgc_uint2str(&v28, 21, *(&v30));\n
    v10 = &v28;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v28)) < 0)\n
        cgc__terminate(1);\n
    v135 = v31;\n
    *(v135) = *(v135) - 8;\n
    v136 = v32;\n
    *(v136) = *(v136) + 8;\n
    v85 = a0;\n
    v84 = a1;\n
    if (*(v84) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v84) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v84);\n
    v83 = v9;\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v82 = cgc_calloc(134);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v82, \"Str: \");\n
    cgc_strncpy(v82 + 5, *(v85), v83);\n
    v138 = v85;\n
    *(v138) = &(*(v138))[4 + cgc_strlen(v82)];\n
    v140 = v84;\n
    *(v140) = *(v140) - (cgc_strlen(v82) + -4);\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v49 = a0;\n
    v48 = a1;\n
    memset(&v46, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = *(&*(v49));\n
    cgc_uint2str(&v46, 6, v47);\n
    v8 = &v46;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v46)) < 0)\n
        cgc__terminate(1);\n
    v141 = v48;\n
    *(v141) = *(v141) - 2;\n
    v142 = v49;\n
    *(v142) = *(v142) + 2;\n
    v27 = a0;\n
    v26 = a1;\n
    *(&v24) = *(v27);\n
    memset(&v23, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v7 = 0;\n
    if ((v24[0] << 8))\n
        v7 = v24[1];\n
    v25 = v7 & 1;\n
    cgc_uint2str(&v23, 6, v25);\n
    v6 = &v23;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v143 = v26;\n
    *(v143) = *(v143) - 2;\n
    v144 = v27;\n
    *(v144) = *(v144) + 2;\n
    v45 = a0;\n
    v44 = a1;\n
    memset(&v42, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = *(&*(v45));\n
    cgc_uint2str(&v42, 6, v43);\n
    v5 = &v42;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v42)) < 0)\n
        cgc__terminate(1);\n
    v145 = v44;\n
    *(v145) = *(v145) - 2;\n
    v146 = v45;\n
    *(v146) = *(v146) + 2;\n
    v89 = a0;\n
    v88 = a1;\n
    memset(&v86, 0, 21);\n
    if (*(v88) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v87) = *(&*(v89));\n
    cgc_uint2str(&v86, 21, *(&v87));\n
    v4 = &v86;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v86)) < 0)\n
        cgc__terminate(1);\n
    v147 = v88;\n
    *(v147) = *(v147) - 8;\n
    v148 = v89;\n
    *(v148) = *(v148) + 8;\n
    v65 = a0;\n
    v64 = a1;\n
    memset(&v62, 0, 12);\n
    if (*(v64) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v63 = *(&*(v65));\n
    cgc_uint2str(&v62, 12, v63);\n
    v3 = &v62;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v62)) < 0)\n
        cgc__terminate(1);\n
    v149 = v64;\n
    *(v149) = *(v149) - 4;\n
    v150 = v65;\n
    *(v150) = *(v150) + 4;\n
    v53 = a0;\n
    v52 = a1;\n
    memset(&v50, 0, 4);\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v51 = *(v53)->field_0;\n
    cgc_uint2str(&v50, 4, v51);\n
    v2 = &v50;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v50)) < 0)\n
        cgc__terminate(1);\n
    v151 = v52;\n
    *(v151) = *(v151) - 1;\n
    v152 = v53;\n
    *(v152) = *(v152) + 1;\n
    v73 = a0;\n
    v72 = a1;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v71 = *(&*(v73));\n
    cgc_uint2str(&v70, 12, v71);\n
    v1 = &v70;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v70)) < 0)\n
        cgc__terminate(1);\n
    v153 = v72;\n
    *(v153) = *(v153) - 4;\n
    v154 = v73;\n
    *(v154) = *(v154) + 4;\n
    v61 = a0;\n
    v60 = a1;\n
    memset(&v58, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    *(&v59) = *(&*(v61));\n
    cgc_uint2str(&v58, 21, *(&v59));\n
    v0 = &v58;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v58)) < 0)\n
        cgc__terminate(1);\n
    v155 = v60;\n
    *(v155) = *(v155) - 8;\n
    v156 = v61;\n
    *(v156) = *(v156) + 8;\n
    v21 ^= cgc__cookie;\n
    if (v21)\n
        cgc___stack_cookie_fail();\n
    v157 = a1;\n
    if (*(a1) > 0 && v20 >= 0)\n
    {\n
        v157 = v20;\n
        if (v157 < 0)\n
            v157 = *(&(&v22)[8 * v20])(a0, a1);\n
    }\n
    return v157;\n
}\n
", "4986838:sub_4c17d6": null, "4986848:cgc_process_llamamononomial": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int cgc__cookie;\n
extern unsigned long long g_4c62a8;\n
\n
long long cgc_process_llamamononomial(struct struct_0 **a0, unsigned int *a1)\n
{\n
    struct_1 *v0;  // [bp-0x178]\n
    char v1;  // [bp-0x169]\n
    struct_1 *v2;  // [bp-0x168]\n
    char v3;  // [bp-0x159]\n
    struct_1 *v4;  // [bp-0x158]\n
    unsigned int v5;  // [bp-0x14c]\n
    unsigned int v6;  // [bp-0x148]\n
    unsigned int v7;  // [bp-0x144]\n
    unsigned long v8;  // [bp-0x140]\n
    char v9;  // [bp-0x126]\n
    char v10[2];  // [bp-0x120]\n
    unsigned short v11;  // [bp-0x112]\n
    unsigned int *v12;  // [bp-0x110]\n
    struct struct_0 **v13;  // [bp-0x108]\n
    char v14;  // [bp-0xfe]\n
    char v15[2];  // [bp-0xf8]\n
    unsigned short v16;  // [bp-0xea]\n
    unsigned int *v17;  // [bp-0xe8]\n
    struct struct_0 **v18;  // [bp-0xe0]\n
    char *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8]\n
    struct struct_0 **v22;  // [bp-0xc0]\n
    char v23;  // [bp-0xb5]\n
    char v24;  // [bp-0xb1]\n
    unsigned int *v25;  // [bp-0xb0]\n
    struct struct_0 **v26;  // [bp-0xa8]\n
    unsigned short *v27;  // [bp-0xa0]\n
    unsigned int *v28;  // [bp-0x98]\n
    struct struct_0 **v29;  // [bp-0x90]\n
    unsigned long v30;  // [bp-0x88]\n
    unsigned short v31;  // [bp-0x7a]\n
    unsigned int *v32;  // [bp-0x78]\n
    struct struct_0 **v33;  // [bp-0x70]\n
    unsigned long v34;  // [bp-0x68]\n
    unsigned short v35;  // [bp-0x5a]\n
    unsigned int *v36;  // [bp-0x58]\n
    struct struct_0 **v37;  // [bp-0x50]\n
    unsigned long v38;  // [bp-0x48]\n
    char v39;  // [bp-0x39]\n
    unsigned int *v40;  // [bp-0x38]\n
    struct struct_0 **v41;  // [bp-0x30]\n
    unsigned long v42;  // [bp-0x28]\n
    char v43;  // [bp-0x19]\n
    unsigned int *v44;  // [bp-0x18]\n
    struct struct_0 **v45;  // [bp-0x10]\n
    unsigned int *v47;  // rax\n
    struct struct_0 **v48;  // rax\n
    struct struct_0 **v50;  // rax\n
    unsigned int *v52;  // rax\n
    unsigned int *v53;  // rax\n
    struct struct_0 **v54;  // rax\n
    struct struct_0 **v55;  // rax\n
    unsigned int *v56;  // rax\n
    unsigned int *v57;  // rax\n
    struct struct_0 **v58;  // rax\n
    struct struct_0 **v59;  // rax\n
    unsigned int *v60;  // rax\n
    unsigned int *v61;  // rax\n
    struct struct_0 **v62;  // rax\n
    unsigned int *v63;  // rax\n
    struct struct_0 **v64;  // rax\n
    unsigned int *v65;  // rax\n
    struct struct_0 **v66;  // rax\n
    unsigned int *v67;  // rax\n
    struct struct_0 **v68;  // rax\n
    unsigned int *v69;  // rax\n
    struct struct_0 **v70;  // rax\n
    unsigned int *v71;  // rax\n
    struct struct_0 **v72;  // rax\n
    unsigned int *v73;  // rax\n
    struct struct_0 **v74;  // rax\n
    unsigned int *v75;  // rax, Other Possible Types: unsigned long\n
\n
    v8 = g_4c62a8;\n
    v7 = cgc__cookie;\n
    v6 = -1;\n
    if (cgc_sendline(1, \"===llamamononomial===\", 21) < 0)\n
        cgc__terminate(1);\n
    v29 = a0;\n
    v28 = a1;\n
    v27 = &*(v29);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v47 = v28;\n
    *(v47) = *(v47) - 2;\n
    v48 = v29;\n
    *(v48) = *(v48) + 2;\n
    v6 = *(v27);\n
    v22 = a0;\n
    v21 = a1;\n
    if (*(v21) <= 0)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(v21) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v21);\n
    v20 = v5;\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v19 = cgc_calloc(134);\n
    if (!v19)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_strcpy(v19, \"Str: \");\n
    cgc_strncpy(v19 + 5, *(v22), v20);\n
    v50 = v22;\n
    *(v50) = &(*(v50))[4 + cgc_strlen(v19)];\n
    v52 = v21;\n
    *(v52) = *(v52) - (cgc_strlen(v19) + -4);\n
    cgc_checkheap();\n
    cgc_free(v19);\n
    if (cgc_sendline(1, \"string received\", 15) < 0)\n
        cgc__terminate(1);\n
    v45 = a0;\n
    v44 = a1;\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v43 = *(v45)->field_0;\n
    v53 = v44;\n
    *(v53) = *(v53) - 1;\n
    v54 = v45;\n
    *(v54) = *(v54) + 1;\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_4c1bb2;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c1bb2:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v55 = v45;\n
    *(v55) = &(*(v55))[v43];\n
    v56 = v44;\n
    *(v56) = *(v56) - v43;\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v41 = a0;\n
    v40 = a1;\n
    if (*(v40) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v39 = *(v41)->field_0;\n
    v57 = v40;\n
    *(v57) = *(v57) - 1;\n
    v58 = v41;\n
    *(v58) = *(v58) + 1;\n
    if (v39 <= *(v40) && !(!v39))\n
        goto LABEL_4c1d41;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c1d41:\n
    v38 = cgc_calloc(v39);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v38, *(v41), v39);\n
    if (cgc_sendline(1, \"LV type received.\", 17) < 0)\n
        cgc__terminate(1);\n
    v59 = v41;\n
    *(v59) = &(*(v59))[v39];\n
    v60 = v40;\n
    *(v60) = *(v60) - v39;\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    v26 = a0;\n
    v25 = a1;\n
    memset(&v23, 0, 4);\n
    if (*(v25) < 1)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v24 = *(v26)->field_0;\n
    cgc_uint2str(&v23, 4, v24);\n
    v4 = &v23;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v23)) < 0)\n
        cgc__terminate(1);\n
    v61 = v25;\n
    *(v61) = *(v61) - 1;\n
    v62 = v26;\n
    *(v62) = *(v62) + 1;\n
    v37 = a0;\n
    v36 = a1;\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v35 = *(&*(v37));\n
    v63 = v36;\n
    *(v63) = *(v63) - 2;\n
    v64 = v37;\n
    *(v64) = *(v64) + 2;\n
    if (v35 <= *(v36) && !(!v35))\n
        goto LABEL_4c1fd4;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c1fd4:\n
    v34 = cgc_calloc(v35);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v34, *(v37), v35);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v65 = v36;\n
    *(v65) = *(v65) - v35;\n
    v66 = v37;\n
    *(v66) = &(*(v66))[v35];\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    v33 = a0;\n
    v32 = a1;\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v31 = *(&*(v33));\n
    v67 = v32;\n
    *(v67) = *(v67) - 2;\n
    v68 = v33;\n
    *(v68) = *(v68) + 2;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_4c2165;\n
    if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_4c2165:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, \"SLV type received.\", 18) < 0)\n
        cgc__terminate(1);\n
    v69 = v32;\n
    *(v69) = *(v69) - v31;\n
    v70 = v33;\n
    *(v70) = &(*(v70))[v31];\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v18 = a0;\n
    v17 = a1;\n
    *(&v15) = *(v18);\n
    memset(&v14, 0, 6);\n
    if (*(v17) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v3 = 0;\n
    if ((v15[0] << 8))\n
        v3 = v15[1];\n
    v16 = v3 & 1;\n
    cgc_uint2str(&v14, 6, v16);\n
    v2 = &v14;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v14)) < 0)\n
        cgc__terminate(1);\n
    v71 = v17;\n
    *(v71) = *(v71) - 2;\n
    v72 = v18;\n
    *(v72) = *(v72) + 2;\n
    v13 = a0;\n
    v12 = a1;\n
    *(&v10) = *(v13);\n
    memset(&v9, 0, 6);\n
    if (*(v12) < 2)\n
    {\n
        if (cgc_sendline(1, \"Not cool.\", 9) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = 0;\n
    if ((v10[0] << 8))\n
        v1 = v10[1];\n
    v11 = v1 & 1;\n
    cgc_uint2str(&v9, 6, v11);\n
    v0 = &v9;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v9)) < 0)\n
        cgc__terminate(1);\n
    v73 = v12;\n
    *(v73) = *(v73) - 2;\n
    v74 = v13;\n
    *(v74) = *(v74) + 2;\n
    v7 ^= cgc__cookie;\n
    if (v7)\n
        cgc___stack_cookie_fail();\n
    v75 = a1;\n
    if (*(a1) > 0 && v6 >= 0)\n
    {\n
        v75 = v6;\n
        if (v75 < 1)\n
            v75 = (&v8)[v6](a0, a1);\n
    }\n
    return v75;\n
}\n
", "4990254:sub_4c252e": null, "4990256:main": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int main(unsigned long a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned int v2[6];  // [bp-0x28]\n
    char v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned long v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v7 = 0;\n
    v6 = a0;\n
    v5 = a1;\n
    for (v4 = 0x400; v4 > 0; v4 -= 1)\n
    {\n
        v1 = cgc_malloc((v4 + 1) * 2);\n
        cgc_free(v1);\n
    }\n
    cgc___stack_cookie_init();\n
    if (cgc_recv(0, &v3, 4) < 0)\n
    {\n
        if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (*(&v3) > 0x300000)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    cgc_setheap(0);\n
    *(&v2[0]) = cgc_malloc(*(&v3));\n
    if (!v2)\n
    {\n
        v7 = 2;\n
        return v7;\n
    }\n
    if (cgc_recv(0, v2, *(&v3)) < 0)\n
    {\n
        if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v0 = cgc_dupe_open(v2);\n
    if (v0 && v0->field_8 == *(&v3) - 24)\n
    {\n
        cgc_process_dupe(v0);\n
        cgc_setheap(0);\n
        cgc_dupe_close(v0);\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (cgc_sendline(1, \"Bad file.\", 9) < 0)\n
        cgc__terminate(1);\n
    v7 = 3;\n
    return v7;\n
}\n
", "4990712:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242896:cgc__terminate": null, "5242904:memset": null, "5242912:cgc_transmit": null, "5242920:cgc_random": null, "5242928:cgc_allocate": null, "5242936:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}