{"4206592:_init": "extern struct_0 *g_40bb00;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40bb00;\n
    if (g_40bb00)\n
        v1 = g_40bb00();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40bb18;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40bb18;\n
    goto *(4242208);\n
}\n
", "4206636:sub_40302c": null, "4206640:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206656:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libstdc++.so::cgc_fdwait();\n
    return;\n
}\n
", "4206672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4206688:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4206704:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4206720:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206736:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206752:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206768:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libstdc++.so::cgc_rint();\n
    return;\n
}\n
", "4206784:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libstdc++.so::cgc_log10();\n
    return;\n
}\n
", "4206800:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4206816:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libstdc++.so::cgc_pow();\n
    return;\n
}\n
", "4206832:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4242152);\n
}\n
", "4206848:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206885:sub_403125": null, "4206886:sub_403126": null, "4206896:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40baf8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206937:sub_403159": null, "4206944:register_tm_clones": "extern unsigned long long g_40bb08;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4207001:sub_403199": null, "4207008:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40bae8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40bae8)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207061:sub_4031d5": null, "4207065:sub_4031d9": null, "4207072:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207081:sub_4031e9": null, "4207088:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
\n
    v1 = a1 * a0;\n
    v0 = cgc_malloc(v1);\n
    cgc_memset(v0, 0, v1);\n
    return v0;\n
}\n
", "4207155:sub_403233": null, "4207168:cgc_malloc": "extern struct_0 *g_memManager;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct struct_0 *v0[2];  // [bp-0x50]\n
    unsigned long long *v1;  // [bp-0x48]\n
    unsigned long long *v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x38]\n
    unsigned long v4;  // [bp-0x30]\n
    struct struct_0 *v5[2];  // [bp-0x28]\n
    unsigned long long *v6;  // [bp-0x20]\n
    unsigned long long *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v8;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long *v10;  // rax\n
    unsigned long long *v11;  // rax\n
\n
    v8 = a0;\n
    if (v8 < 8)\n
    {\n
        v8 = 8;\n
    }\n
    else if ((v8 & 3))\n
    {\n
        v8 = (v8 >> 2) + 1;\n
        v8 *= 4;\n
    }\n
    v7 = &g_memManager->field_0;\n
    while (true)\n
    {\n
        if (!v7)\n
            v7 = cgc_add_free_list(v8);\n
        v6 = v7;\n
        v5[0] = v7 + (*(v6) & -4) - 8;\n
        if (*(v6) >= v8)\n
            break;\n
        v7 = v5[0];\n
    }\n
    v4 = v7 + 8;\n
    v3 = *(v6) - v8;\n
    *(v6) = v8;\n
    v10 = v6;\n
    *(v10) = *(v10) | 1;\n
    if (v3 >= 24)\n
    {\n
        v2 = v7 + v8 + 8;\n
        v1 = v2;\n
        *(v1) = v3 - 8;\n
        v0[0] = &v5[0];\n
        if (-8 + v1 + (*(v1) & -4) != v5)\n
        {\n
            cgc_printf(\"Footer != in malloc\");\n
            cgc__terminate(\"Footer != in malloc\");\n
        }\n
        if (g_memManager != v7)\n
        {\n
            if (v0[1])\n
                *((-8 + &v0[1]->field_0 + (v0[1]->field_0 & -4))) = v2;\n
            if (v0[0])\n
                *((&v0[0]->field_0 + (v0[0]->field_0 & -4))) = v2;\n
        }\n
        else\n
        {\n
            g_memManager = v1;\n
            if (v0[0])\n
                *((&v0[0]->field_0 + (v0[0]->field_0 & -4))) = v1;\n
        }\n
        v11 = v6;\n
        *(v11) = *(v11) | 2;\n
    }\n
    else if (g_memManager != v7)\n
    {\n
        if (v5[1])\n
            *((-8 + &v5[1]->field_0 + (v5[1]->field_0 & -4))) = v5[0];\n
        if (v5[0])\n
            *((&v5[0]->field_0 + (v5[0]->field_0 & -4))) = v5[1];\n
    }\n
    else\n
    {\n
        g_memManager = v5[0];\n
        if (v5[0])\n
            *((&v5[0]->field_0 + (v5[0]->field_0 & -4))) = 0;\n
    }\n
    cgc_memset(v7 + 8, 0, v8);\n
    return v7 + 8;\n
}\n
", "4207938:sub_403542": null, "4207952:cgc_add_free_list": "extern struct_0 *g_memManager;\n
\n
long long cgc_add_free_list(unsigned long long a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v3 = a0 + 4;\n
    if ((v3 & 4095))\n
    {\n
        v3 = (v3 >> 12) + 1;\n
        v3 *= 0x1000;\n
    }\n
    if (cgc_allocate(a0, v5, v6))\n
        cgc__terminate(a0);\n
    v1 = *(&v2);\n
    v0[0] = *(&v2) + v3 - 16;\n
    *(v1) = v3 - 8;\n
    v0[1] = 0;\n
    v0[0] = g_memManager;\n
    g_memManager = v1;\n
    return v1;\n
}\n
", "4208147:sub_403613": null, "4208160:cgc_free": "extern struct_0 *g_memManager;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x40]\n
    struct struct_0 *v1[2];  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x30]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned long long *v4;  // [bp-0x20]\n
    unsigned long long *v5;  // [bp-0x18]\n
    unsigned long long *v7;  // rax\n
    unsigned long long *v8;  // rax\n
    unsigned long long *v9;  // rax, Other Possible Types: struct struct_0 *[2], struct struct_0 **, unsigned long\n
\n
    v5 = a0 - 8;\n
    if (!(*(v5) & 1))\n
        cgc__terminate(a0);\n
    if ((*(v5) & 2))\n
    {\n
        v4 = a0 + (*(v5) & -4);\n
        if (!(*(v4) & 1))\n
        {\n
            v3 = (*(v5) & -4) + (*(v4) & -4) + 8;\n
            *(v5) = v3;\n
            if ((*(v4) & 2))\n
            {\n
                v8 = v5;\n
                *(v8) = *(v8) | 2;\n
            }\n
            if (g_memManager != v4)\n
            {\n
                v1[0] = -8 + v5 + v3;\n
                if (v1[1])\n
                    *((-8 + &v1[1]->field_0 + (v1[1]->field_0 & -4))) = v5;\n
                v9 = v1;\n
                if (v9[0])\n
                {\n
                    v9 = v1[0];\n
                    *((v9 + (v1[0]->field_0 & -4))) = v5;\n
                }\n
            }\n
            else\n
            {\n
                g_memManager = v5;\n
                v2 = -8 + v5 + v3;\n
                v9 = v2;\n
                if (*(v9))\n
                {\n
                    v9 = *(v2);\n
                    *((v9 + (*(v2)->field_0 & -4))) = v5;\n
                }\n
            }\n
            return v9;\n
        }\n
    }\n
    v7 = v5;\n
    *(v7) = *(v7) & -2;\n
    v0[0] = -8 + v5 + (*(v5) & -4);\n
    v0[0] = g_memManager;\n
    v0[1] = 0;\n
    if (g_memManager)\n
        *((&g_memManager->field_0 + (g_memManager->field_0 & -4))) = v5;\n
    v9 = v5;\n
    g_memManager = v9;\n
    return v5;\n
}\n
", "4208700:sub_40383c": null, "4208704:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4208852:sub_4038d4": null, "4208864:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4208988:sub_40395c": null, "4208992:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4209120:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4209182:sub_403a1e": null, "4209184:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4209409:sub_403b01": null, "4209424:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v7;  // rax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v4 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4209631:sub_403bdf": null, "4209632:cgc_float_to_str": "long long cgc_float_to_str(char *a0, unsigned long a1)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x4a]\n
    char v1;  // [bp-0x49]\n
    unsigned long long v2;  // [bp-0x48]\n
    char *v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_403ee1;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < a1;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_403ee1:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4210417:sub_403ef1": null, "4210432:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    char v0;  // [bp-0x159]\n
    unsigned long v1;  // [bp-0x158]\n
    struct struct_0 **v2;  // [bp-0x150]\n
    struct_1 *v3;  // [bp-0x148]\n
    unsigned int v4;  // [bp-0x13c]\n
    unsigned long v5;  // [bp-0x138]\n
    unsigned long long *v6;  // [bp-0x130], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x128]\n
    unsigned int *v8;  // [bp-0x120]\n
    unsigned int v9;  // [bp-0x114]\n
    unsigned long v10;  // [bp-0x110]\n
    unsigned int *v11;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x100]\n
    unsigned int v13;  // [bp-0xf4]\n
    unsigned long v14;  // [bp-0xf0]\n
    unsigned int *v15;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xe0]\n
    unsigned int v17;  // [bp-0xd4]\n
    unsigned int *v18;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xc8]\n
    unsigned int v20;  // [bp-0xc0]\n
    unsigned int v21;  // [bp-0xbc]\n
    char *v22;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_3 *v23;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xa8]\n
    struct_3 *v25;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0x94]\n
    struct_3 *v27;  // [bp-0x90], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x88]\n
    char v29;  // [bp-0x81]\n
    unsigned int v30;  // [bp-0x80]\n
    unsigned int v31;  // [bp-0x7c]\n
    unsigned int v32;  // [bp-0x78]\n
    unsigned int v33;  // [bp-0x74]\n
    unsigned int v34;  // [bp-0x70]\n
    unsigned int v35;  // [bp-0x6c]\n
    char v36;  // [bp-0x68]\n
    unsigned int v37;  // [bp-0x24]\n
    char *v38;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v39;  // [bp-0xc]\n
    struct_1 *v41;  // rcx\n
    unsigned long long v42;  // rdx\n
    unsigned int *v43;  // rax\n
    struct_1 *v44;  // rcx\n
    unsigned int *v45;  // rdx\n
    struct_1 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax\n
    struct_1 *v49;  // rcx\n
    unsigned int *v50;  // rdx\n
    struct_1 *v51;  // rcx\n
    unsigned long long v52;  // rdx\n
    unsigned int *v53;  // rax\n
    struct_1 *v54;  // rcx\n
    unsigned int *v55;  // rdx\n
    unsigned long long v56;  // rdx\n
    unsigned long long *v57;  // rax\n
    struct_1 *v58;  // rcx\n
    unsigned long long *v59;  // rdx\n
    struct_1 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    struct struct_0 **v62;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v63;  // rcx\n
\n
    v38 = a0;\n
    v37 = 0;\n
    if (!v38)\n
    {\n
        v39 = -1;\n
        return v39;\n
    }\n
    while (*(v38))\n
    {\n
        if (*(v38) != 64)\n
        {\n
            cgc_putc(*(v38));\n
            v38 += 1;\n
            v37 += 1;\n
LABEL_404906:\n
        }\n
        else\n
        {\n
            v38 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v38) == 64)\n
            {\n
                cgc_putc(64);\n
                v38 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 45)\n
            {\n
                v32 = 1;\n
                v38 += 1;\n
            }\n
            if (cgc_isdigit(*(v38)))\n
            {\n
                if (*(v38) == 48)\n
                {\n
                    v33 = 1;\n
                    v38 += 1;\n
                }\n
                if (cgc_isdigit(*(v38)))\n
                {\n
                    for (v35 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
                }\n
            }\n
            if (*(v38) == 46)\n
            {\n
                v38 += 1;\n
                for (v34 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
            }\n
            if (*(v38) == 99)\n
            {\n
                v19 = a1;\n
                v20 = v19->field_0;\n
                if (v20 > 40)\n
                {\n
                    v44 = v19;\n
                    v45 = v44->field_8;\n
                    v44->field_8 = &v45[2];\n
                    v18 = v45;\n
                }\n
                else\n
                {\n
                    v41 = v19;\n
                    v42 = v20;\n
                    v43 = v42 + v41->field_10;\n
                    v41->field_0 = v42 + 8;\n
                    v18 = v43;\n
                }\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                cgc_putc(v29);\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 100)\n
            {\n
                v16 = a1;\n
                v17 = v16->field_0;\n
                if (v17 > 40)\n
                {\n
                    v49 = v16;\n
                    v50 = v49->field_8;\n
                    v49->field_8 = &v50[2];\n
                    v15 = v50;\n
                }\n
                else\n
                {\n
                    v46 = v16;\n
                    v47 = v17;\n
                    v48 = v47 + v46->field_10;\n
                    v46->field_0 = v47 + 8;\n
                    v15 = v48;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; *(v27); v27 += 1)\n
                {\n
                    cgc_putc(*(v27));\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 120)\n
            {\n
                v12 = a1;\n
                v13 = v12->field_0;\n
                if (v13 > 40)\n
                {\n
                    v54 = v12;\n
                    v55 = v54->field_8;\n
                    v54->field_8 = &v55[2];\n
                    v11 = v55;\n
                }\n
                else\n
                {\n
                    v51 = v12;\n
                    v52 = v13;\n
                    v53 = v52 + v51->field_10;\n
                    v51->field_0 = v52 + 8;\n
                    v11 = v53;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; v25->field_0; v25 += 1)\n
                {\n
                    cgc_putc(v25->field_0);\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 102)\n
            {\n
                v7 = a1;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 > 160)\n
                {\n
                    v58 = v7;\n
                    v59 = v58->field_8;\n
                    v58->field_8 = &v59[1];\n
                    v6 = v59;\n
                }\n
                else\n
                {\n
                    v56 = v9;\n
                    v57 = v56 + v7->field_10;\n
                    *(v8) = v56 + 16;\n
                    v6 = v57;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; v23->field_0; v23 += 1)\n
                {\n
                    cgc_putc(v23->field_0);\n
                    v37 += 1;\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (!(*(v38) == 115))\n
                goto LABEL_404906;\n
            v3 = a1;\n
            v4 = v3->field_0;\n
            if (v4 <= 40)\n
            {\n
                v60 = v3;\n
                v61 = v4;\n
                v62 = v61 + v60->field_10;\n
                v60->field_0 = v61 + 8;\n
            }\n
            else\n
            {\n
                v63 = v3;\n
                v62 = v63->field_8;\n
                v63->field_8 = v62 + 8;\n
            }\n
            v2 = v62;\n
            v22 = &*(v2)->field_0;\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_4047a3;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_4047a3:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (!v33)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                cgc_putc(*(v22));\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v37 += 1;\n
                }\n
            }\n
            v38 += 1;\n
        }\n
    }\n
    v39 = v37;\n
    return v39;\n
}\n
", "4213021:sub_40491d": null, "4213024:cgc_vsprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vsprintf(char *a0, char *a1, struct_2 *a2)\n
{\n
    char v0;  // [bp-0x169]\n
    unsigned long v1;  // [bp-0x168]\n
    struct struct_0 **v2;  // [bp-0x160]\n
    struct_2 *v3;  // [bp-0x158]\n
    unsigned int v4;  // [bp-0x14c]\n
    unsigned long v5;  // [bp-0x148]\n
    unsigned long long *v6;  // [bp-0x140], Other Possible Types: unsigned long\n
    struct_2 *v7;  // [bp-0x138]\n
    unsigned int *v8;  // [bp-0x130]\n
    unsigned int v9;  // [bp-0x124]\n
    unsigned long v10;  // [bp-0x120]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x110]\n
    unsigned int v13;  // [bp-0x104]\n
    unsigned long v14;  // [bp-0x100]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0]\n
    struct_2 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xd0]\n
    unsigned int v21;  // [bp-0xcc]\n
    char *v22;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v23;  // [bp-0xc0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xb8]\n
    struct_1 *v25;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0xa4]\n
    struct_1 *v27;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x98]\n
    char v29;  // [bp-0x91]\n
    unsigned int v30;  // [bp-0x90]\n
    unsigned int v31;  // [bp-0x8c]\n
    unsigned int v32;  // [bp-0x88]\n
    unsigned int v33;  // [bp-0x84]\n
    unsigned int v34;  // [bp-0x80]\n
    unsigned int v35;  // [bp-0x7c]\n
    char v36;  // [bp-0x78]\n
    unsigned int v37;  // [bp-0x2c]\n
    struct_2 *v38;  // [bp-0x28]\n
    char *v39;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v40;  // [bp-0xc]\n
    struct_2 *v42;  // rcx\n
    unsigned long long v43;  // rdx\n
    unsigned int *v44;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v45;  // rcx\n
    struct_2 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax\n
    struct_2 *v49;  // rcx\n
    unsigned int *v50;  // rdx\n
    struct_2 *v51;  // rcx\n
    unsigned long long v52;  // rdx\n
    unsigned int *v53;  // rax\n
    struct_2 *v54;  // rcx\n
    unsigned int *v55;  // rdx\n
    unsigned long long v56;  // rdx\n
    unsigned long long *v57;  // rax\n
    struct_2 *v58;  // rcx\n
    unsigned long long *v59;  // rdx\n
    struct_2 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    struct struct_0 **v62;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v63;  // rcx\n
\n
    v39 = a1;\n
    v38 = a2;\n
    v37 = 0;\n
    if (!v39)\n
    {\n
        v40 = -1;\n
        return v40;\n
    }\n
    while (*(v39))\n
    {\n
        if (*(v39) != 64)\n
        {\n
            a0[v37] = *(v39);\n
            v39 += 1;\n
            v37 += 1;\n
LABEL_40540b:\n
        }\n
        else\n
        {\n
            v39 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v39) == 64)\n
            {\n
                a0[v37] = 64;\n
                v39 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 45)\n
            {\n
                v32 = 1;\n
                v39 += 1;\n
            }\n
            if (cgc_isdigit(*(v39)))\n
            {\n
                if (*(v39) == 48)\n
                {\n
                    v33 = 1;\n
                    v39 += 1;\n
                }\n
                if (cgc_isdigit(*(v39)))\n
                {\n
                    for (v35 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
                }\n
            }\n
            if (*(v39) == 46)\n
            {\n
                v39 += 1;\n
                for (v34 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
            }\n
            if (*(v39) == 99)\n
            {\n
                v19 = v38;\n
                v20 = v19->field_0;\n
                if (v20 > 40)\n
                {\n
                    v45 = v19;\n
                    v44 = v45->field_8;\n
                    v45->field_8 = v44 + 8;\n
                }\n
                else\n
                {\n
                    v42 = v19;\n
                    v43 = v20;\n
                    v44 = v43 + v42->field_10;\n
                    v42->field_0 = v43 + 8;\n
                }\n
                v18 = v44;\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                a0[v37] = v29;\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 100)\n
            {\n
                v16 = v38;\n
                v17 = v16->field_0;\n
                if (v17 > 40)\n
                {\n
                    v49 = v16;\n
                    v50 = v49->field_8;\n
                    v49->field_8 = &v50[2];\n
                    v15 = v50;\n
                }\n
                else\n
                {\n
                    v46 = v16;\n
                    v47 = v17;\n
                    v48 = v47 + v46->field_10;\n
                    v46->field_0 = v47 + 8;\n
                    v15 = v48;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; v27->field_0; v27 += 1)\n
                {\n
                    a0[v37] = v27->field_0;\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 120)\n
            {\n
                v12 = v38;\n
                v13 = v12->field_0;\n
                if (v13 <= 40)\n
                {\n
                    v51 = v12;\n
                    v52 = v13;\n
                    v53 = v52 + v51->field_10;\n
                    v51->field_0 = v52 + 8;\n
                    v11 = v53;\n
                }\n
                else\n
                {\n
                    v54 = v12;\n
                    v55 = v54->field_8;\n
                    v54->field_8 = &v55[2];\n
                    v11 = v55;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; v25->field_0; v25 += 1)\n
                {\n
                    a0[v37] = v25->field_0;\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 102)\n
            {\n
                v7 = v38;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 > 160)\n
                {\n
                    v58 = v7;\n
                    v59 = v58->field_8;\n
                    v58->field_8 = &v59[1];\n
                    v6 = v59;\n
                }\n
                else\n
                {\n
                    v56 = v9;\n
                    v57 = v56 + v7->field_10;\n
                    *(v8) = v56 + 16;\n
                    v6 = v57;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; *(v23); v23 += 1)\n
                {\n
                    a0[v37] = *(v23);\n
                    v37 += 1;\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (!(*(v39) == 115))\n
                goto LABEL_40540b;\n
            v3 = v38;\n
            v4 = v3->field_0;\n
            if (v4 <= 40)\n
            {\n
                v60 = v3;\n
                v61 = v4;\n
                v62 = v61 + v60->field_10;\n
                v60->field_0 = v61 + 8;\n
            }\n
            else\n
            {\n
                v63 = v3;\n
                v62 = v63->field_8;\n
                v63->field_8 = v62 + 8;\n
            }\n
            v2 = v62;\n
            v22 = &*(v2)->field_0;\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_405277;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_405277:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (!v33)\n
                        a0[v37] = 32;\n
                    else\n
                        a0[v37] = 48;\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                a0[v37] = *(v22);\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    a0[v37] = 32;\n
                    v37 += 1;\n
                }\n
            }\n
            v39 += 1;\n
        }\n
    }\n
    v40 = v37;\n
    return v40;\n
}\n
", "4215842:sub_405422": null, "4215856:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x10f8]\n
    unsigned long v1;  // [bp-0x10f0]\n
    unsigned long v2;  // [bp-0x10e8]\n
    unsigned long v3;  // [bp-0x10e0]\n
    unsigned long v4;  // [bp-0x10d8]\n
    unsigned long v5;  // [bp-0x10d0]\n
    int v6;  // [bp-0x10c8]\n
    int v7;  // [bp-0x10b8]\n
    int v8;  // [bp-0x10a8]\n
    int v9;  // [bp-0x1098]\n
    int v10;  // [bp-0x1088]\n
    int v11;  // [bp-0x1078]\n
    int v12;  // [bp-0x1068]\n
    int v13;  // [bp-0x1058]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4216031:sub_4054df": null, "4216032:cgc_sprintf": "long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    a0[v13] = 0;\n
    return v13;\n
}\n
", "4216208:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4216299:sub_4055eb": null, "4216304:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4216355:sub_405623": null, "4216368:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4216396:sub_40564c": null, "4216400:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4216452:sub_405684": null, "4216464:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = a0 + 32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4216519:sub_4056c7": null, "4216528:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = a0 + -32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4216583:sub_405707": null, "4216592:cgc_strcmp": "long long cgc_strcmp(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((a0 + v0)) && !*((a1 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a1 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) < *((a1 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) <= *((a1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4216847:sub_40580f": null, "4216848:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4216951:sub_405877": null, "4216960:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4217081:sub_4058f9": null, "4217088:cgc_flush_input": "long long cgc_flush_input(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xa0]\n
    unsigned int v1;  // [bp-0x9c]\n
    unsigned int v2;  // [bp-0x94]\n
    char v3;  // [bp-0x90]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long v6;  // rax\n
    unsigned long long v7;  // rcx\n
    unsigned long long v8;  // r8\n
\n
    while (true)\n
    {\n
        cgc_memset(&v3, 0, 128);\n
        v6 = a0 >> 6;\n
        *(&(&v3)[8 * v6]) = 1 << (a0 & 63 & 31) | *(&(&v3)[8 * v6]);\n
        v0 = 0;\n
        v1 = 10;\n
        v2 = cgc_fdwait(a0, 0, 128, v7, v8);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        else if ((*(&(&v3)[8 * (a0 >> 6)]) & 1 << (a0 & 63 & 31)))\n
        {\n
            cgc_receive(a0, 0, 128, v7);\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4217359:sub_405a0f": null, "4217360:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (a2 >= 4)\n
    {\n
        for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v1 + 3 < a2; v1 += 4)\n
        {\n
            *((a0 + v1)) = v0;\n
        }\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        *((a0 + v1)) = a1;\n
    }\n
    return a0;\n
}\n
", "4217544:sub_405ac8": null, "4217552:cgc_getline": "long long cgc_getline(char *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    v0 = cgc_receive_until(a0, 10, a1);\n
    if (v0 != a1)\n
    {\n
        a0[v0] = 0;\n
        return v0;\n
    }\n
    a0[1 + a1] = 0;\n
    return v0;\n
}\n
", "4217646:sub_405b2e": null, "4217648:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = 0; v2 < a2; v2 += 1)\n
    {\n
        v2[a0] = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v0 == a1)\n
                break;\n
            v2[a0] = v0;\n
        }\n
    }\n
    if (v2 == a2)\n
        cgc_flush_input(0);\n
    return v2;\n
}\n
", "4217846:sub_405bf6": null, "4217856:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    if (a2 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a2; v0 += 4)\n
        {\n
            *((a0 + v0)) = *((a1 + v0));\n
        }\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4218022:sub_405ca6": null, "4218032:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4218424:sub_405e38": null, "4218432:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4218492:sub_405e7c": null, "4218496:cgc_abs": "long long cgc_abs(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < 0)\n
    {\n
        v0 = -(a0);\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4218537:sub_405ea9": null, "4218544:_ZN6StringC2Ev": "long long String::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4218573:sub_405ecd": null, "4218576:_ZN6StringC1EPKc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long String::__ctor__(struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    *(&v0) = cgc_strlen(a1) + 1;\n
    *(&a0->field_8) = operator new[](*(&v0));\n
    cgc_memcpy(*(&a0->field_8), a1, *(&v0) - 1);\n
    *((*(&a0->field_8) + *(&v0) - 1)) = 0;\n
    a0->field_0 = *(&v0) - 1;\n
    return a0;\n
}\n
", "4218695:sub_405f47": null, "4218704:_ZN6StringC2ERKS_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long String::__base_ctor__(struct_0 *a0, unsigned int a1[3])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    *(&v0) = *(&a1[0]) + 1;\n
    *(&a0->field_8) = operator new[](*(&v0));\n
    cgc_memcpy(*(&a0->field_8), *(&a1[2]), *(&a1[0]));\n
    *((*(&a0->field_8) + *(&v0) - 1)) = 0;\n
    a0->field_0 = *(&a1[0]);\n
    return a0;\n
}\n
", "4218823:sub_405fc7": null, "4218832:_ZN6StringD2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long String::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned long long v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a0->field_8)\n
        return a0;\n
    v3 = v1->field_8;\n
    *(&v0) = v3;\n
    if (!v3)\n
        return v3;\n
    v3 = operator delete[](*(&v0));\n
}\n
", "4218905:sub_406019": null, "4218912:_ZN6StringpLERKS_": "long long String::operator+=(unsigned int a0[3], unsigned int a1[3])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
\n
    *(&v2) = *(&a0[0]) + *(&a1[0]) + 1;\n
    *(&v1) = operator new[](*(&v2));\n
    cgc_memcpy(*(&v1), *(&a0[2]), *(&a0[0]));\n
    cgc_memcpy(*(&v1) + *(&a0[0]), *(&a1[2]), *(&a1[0]));\n
    if (*(&a0[2]))\n
    {\n
        *(&v0) = *(&a0[2]);\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    *(&a0[2]) = *(&v1);\n
    *(&a0[0]) = *(&v2) - 1;\n
    return a0;\n
}\n
", "4219101:sub_4060dd": null, "4219104:_ZNK6StringplERKS_": "long long String::operator+ const(void* a0, unsigned int a1[3], unsigned int a2[3])\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    String::__base_ctor__(&v0, a1);\n
    String::__base_ctor__(a0, String::operator+=(&v0, a2));\n
    String::__base_dtor__(&v0);\n
    return a0;\n
}\n
", "4219200:_ZNK6String5c_strEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long String::c_str const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4219218:sub_406152": null, "4219232:_ZN6String6lengthEv": "long long String::length(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4219249:sub_406171": null, "4219264:_ZN6String5emptyEv": "long long String::empty(unsigned long long *a0)\n
{\n
    return !*(a0);\n
}\n
", "4219290:sub_40619a": null, "4219296:_ZNK6String5upperEv": "long long String::upper const(unsigned long long a0[2], unsigned int a1[3])\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long v2[2];  // [bp-0x10]\n
\n
    v2[0] = a0;\n
    v1 = 0;\n
    String::__base_ctor__(a0, a1);\n
    for (v0 = 0; v0 < a0[0]; v0 += 1)\n
    {\n
        v0[a0[1]] = cgc_toupper(v0[a0[1]]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        String::__base_dtor__(a0);\n
    return a0;\n
}\n
", "4219454:sub_40623e": null, "4219456:_ZNK6String5lowerEv": "long long String::lower const(unsigned long long a0[2], unsigned int a1[3])\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long v2[2];  // [bp-0x10]\n
\n
    v2[0] = a0;\n
    v1 = 0;\n
    String::__base_ctor__(a0, a1);\n
    for (v0 = 0; v0 < a0[0]; v0 += 1)\n
    {\n
        v0[a0[1]] = cgc_tolower(v0[a0[1]]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        String::__base_dtor__(a0);\n
    return a0;\n
}\n
", "4219614:sub_4062de": null, "4219616:_ZNK6String11StripSpacesEv": "long long String::StripSpaces const(unsigned long long a0, unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1[0]; v0 += 1)\n
    {\n
        if (v0[a1[1]] != 32)\n
            break;\n
    }\n
    String::SubString const(a0, a1, v0, 4294967295);\n
    return a0;\n
}\n
", "4219760:_ZNK6String9SubStringEmm": "extern unsigned int g_4095d3;\n
\n
long long String::SubString const(void* a0, unsigned long long a1[2], char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
\n
    v5 = a0;\n
    v4 = a3;\n
    if (a2 >= a1[0])\n
    {\n
        String::__ctor__(a0, 4232659);\n
        return a0;\n
    }\n
    if (v4 > a1[0])\n
        v4 = a1[0];\n
    if (a2 >= v4)\n
    {\n
        String::__ctor__(a0, 4232659);\n
        return a0;\n
    }\n
    v3 = v4 - a2;\n
    v2 = operator new[](v3 + 1);\n
    v1 = 0;\n
    for (v0 = a2; v0 < v4; v0 += 1)\n
    {\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v2[v7] = *((a1[1] + v0));\n
    }\n
    v2[v1] = 0;\n
    String::__ctor__(a0, v2);\n
    return a0;\n
}\n
", "4220048:_ZN6String4TrimEm": "long long String::Trim(void* a0, unsigned int a1[3], unsigned int a2)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    String::SubString const(&v0, a1, NULL, a2);\n
    String::operator=(a1, &v0);\n
    String::__base_dtor__(&v0);\n
    String::__base_ctor__(a0, a1);\n
    return a0;\n
}\n
", "4220149:sub_4064f5": null, "4220160:_ZN6StringaSERKS_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long String::operator=(struct_0 *a0, unsigned int a1[3])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
\n
    if (*(&a0->field_8))\n
    {\n
        *(&v0) = *(&a0->field_8);\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    *(&v1) = *(&a1[0]) + 1;\n
    *(&a0->field_8) = operator new[](*(&v1));\n
    cgc_memcpy(*(&a0->field_8), *(&a1[2]), *(&a1[0]));\n
    *((*(&a0->field_8) + *(&v1) - 1)) = 0;\n
    a0->field_0 = *(&a1[0]);\n
    return a0;\n
}\n
", "4220326:sub_4065a6": null, "4220336:_ZNK6StringeqERKS_": "long long String::operator== const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x9]\n
\n
    if (a0[0] != a1[0])\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0[0])\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
        else if (v0[a0[1]] == v0[a1[1]])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
    }\n
}\n
", "4220491:sub_40664b": null, "4220496:_ZNK6StringneERKS_": "long long String::operator!= const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    return (String::operator== const(a0, a1) ^ 255) & 1;\n
}\n
", "4220538:sub_40667a": null, "4220544:_ZN6String9SetStringEPKc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long String::SetString(struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
\n
    if (*(&a0->field_8))\n
    {\n
        *(&v0) = *(&a0->field_8);\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    *(&v1) = cgc_strlen(a1) + 1;\n
    *(&a0->field_8) = operator new[](*(&v1));\n
    cgc_memcpy(*(&a0->field_8), a1, *(&v1) - 1);\n
    *((*(&a0->field_8) + *(&v1) - 1)) = 0;\n
    a0->field_0 = *(&v1) - 1;\n
    return a0;\n
}\n
", "4220710:sub_406726": null, "4220720:_ZN6String9ToIntegerERi": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
long long String::ToInteger(struct_0 *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a0->field_8)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a1) = cgc_atoi(a0->field_8);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4220803:sub_406783": null, "4220816:_Z8ReadLineR6String": "long long ReadLine(void* a0)\n
{\n
    char v0;  // [bp-0x218]\n
\n
    cgc_getline(&v0, 0x200);\n
    return String::SetString(a0, &v0);\n
}\n
", "4220873:sub_4067c9": null, "4220880:_Z10recv_bytesPhm": "long long recv_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1)\n
            return v1;\n
        if (cgc_receive(a0, a1, v4, v5))\n
            return v1;\n
        if (v0 != 1)\n
            return v1;\n
        v1 += 1;\n
    }\n
}\n
", "4221012:sub_406854": null, "4221024:_ZN15CDoubleItemListC2Ev": "long long CDoubleItemList::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4221053:sub_40687d": null, "4221056:_ZN15CDoubleItemListD2Ev": "long long CDoubleItemList::__base_dtor__(unsigned long long a0)\n
{\n
    return CDoubleItemList::DeleteAll(a0);\n
}\n
", "4221083:sub_40689b": null, "4221088:_ZN15CDoubleItemList9DeleteAllEv": "long long CDoubleItemList::DeleteAll(struct struct_0 **a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    struct struct_0 **v4;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = *(a0);\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (!v1)\n
            break;\n
        v2 = &*(v1)->field_0;\n
        v0 = v1;\n
        if (v0)\n
        {\n
            CDoubleItemLink::__dtor__(v0);\n
            operator delete(v0);\n
        }\n
        v1 = v2;\n
        v4 = v2;\n
    }\n
    return v4;\n
}\n
", "4221196:sub_40690c": null, "4221200:_ZN15CDoubleItemList7GetNextEP15CDoubleItemLink": "long long CDoubleItemList::GetNext(unsigned long a0, unsigned long long a1[3])\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a1[2] != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a1[0];\n
    return v0;\n
}\n
", "4221260:sub_40694c": null, "4221264:_ZN15CDoubleItemList7GetPrevEP15CDoubleItemLink": "long long CDoubleItemList::GetPrev(unsigned long a0, unsigned long long a1[3])\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a1[2] != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a1[1];\n
    return v0;\n
}\n
", "4221325:sub_40698d": null, "4221328:_ZN15CDoubleItemList11RemoveFirstEv": "long long CDoubleItemList::RemoveFirst(unsigned long long *a0)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    unsigned long long *v1;  // [bp-0x10]\n
    unsigned long long *v3;  // rdi\n
\n
    v1 = a0;\n
    v3 = v1;\n
    v0 = *(v3);\n
    CDoubleItemList::RemoveItem(v3, v0);\n
    return v0;\n
}\n
", "4221370:sub_4069ba": null, "4221376:_ZN15CDoubleItemList10RemoveItemEP15CDoubleItemLink": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CDoubleItemList::RemoveItem(unsigned long long a0[2], struct_1 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a1;\n
    if (a1->field_10 != a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (a1->field_0)\n
        v0->field_0->field_8 = a1->field_8;\n
    if (a1->field_8)\n
        a1->field_8->field_0 = v0->field_0;\n
    if (a1 == a0[1])\n
        a0[1] = a1->field_8;\n
    if (a1 == a0[0])\n
        a0[0] = a1->field_0;\n
    CDoubleItemLink::ClearList(a1);\n
    v1 = a1;\n
    return v1;\n
}\n
", "4221585:sub_406a91": null, "4221600:_ZN15CDoubleItemList10RemoveLastEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CDoubleItemList::RemoveLast(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v3;  // rdi\n
\n
    v1 = a0;\n
    v3 = v1;\n
    v0 = v3->field_8;\n
    CDoubleItemList::RemoveItem(v3, v0);\n
    return v0;\n
}\n
", "4221643:sub_406acb": null, "4221648:_ZN15CDoubleItemList8AddFirstEP15CDoubleItemLink": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CDoubleItemList::AddFirst(struct_1 *a0, unsigned long long a1[3])\n
{\n
    unsigned long long v0[3];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v0[0] = 0;\n
        return v0;\n
    }\n
    else if (!a1[2])\n
    {\n
        if (a0->field_0)\n
        {\n
            a1[0] = a0->field_0;\n
            a1[1] = 0;\n
            a0->field_0->field_8 = a1;\n
        }\n
        else\n
        {\n
            a1[1] = 0;\n
            a1[0] = 0;\n
            a0->field_8 = a1;\n
        }\n
        a0->field_0 = &a1[0];\n
        CDoubleItemLink::AddList(a1, a0);\n
        v0 = a1;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4221856:_ZN15CDoubleItemList8AddAfterEP15CDoubleItemLinkS1_": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CDoubleItemList::AddAfter(struct_0 *a0, struct_1 *a1, unsigned long long a2[3])\n
{\n
    unsigned long long v0[3];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a2)\n
    {\n
        v0[0] = 0;\n
        return v0;\n
    }\n
    else if (a2[2])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a1)\n
    {\n
        v0 = CDoubleItemList::AddFirst(a0, a2);\n
        return v0;\n
    }\n
    else if (a1->field_10 == a0)\n
    {\n
        a2[0] = a1->field_0;\n
        a2[1] = a1;\n
        if (a1->field_0)\n
            a1->field_0->field_8 = a2;\n
        a1->field_0 = &a2[0];\n
        if (a0->field_8 == a1)\n
            a0->field_8 = a2;\n
        CDoubleItemLink::AddList(a2, a0);\n
        v0 = a2;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4222127:sub_406caf": null, "4222128:_ZN15CDoubleItemList7AddLastEP15CDoubleItemLink": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CDoubleItemList::AddLast(struct_0 *a0, unsigned long long a1[3])\n
{\n
    unsigned long long v0[3];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v0[0] = 0;\n
        return v0;\n
    }\n
    else if (!a1[2])\n
    {\n
        if (a0->field_8)\n
        {\n
            a1[0] = 0;\n
            a1[1] = a0->field_8;\n
            a0->field_8->field_0 = a1;\n
            a0->field_8 = &a1[0];\n
        }\n
        else\n
        {\n
            a1[0] = 0;\n
            a1[1] = 0;\n
            a0->field_8 = &a1[0];\n
            a0->field_0 = a1;\n
        }\n
        CDoubleItemLink::AddList(a1, a0);\n
        v0 = a1;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4222339:sub_406d83": null, "4222352:_ZN15CDoubleItemLinkC1Ev": "long long CDoubleItemLink::__ctor__(unsigned long long a0[3])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    a0[2] = 0;\n
    return a0;\n
}\n
", "4222389:sub_406db5": null, "4222400:_ZN15CDoubleItemLinkD1Ev": "long long CDoubleItemLink::__dtor__(unsigned long long a0)\n
{\n
    return CDoubleItemLink::Unlink(a0);\n
}\n
", "4222427:sub_406ddb": null, "4222432:_ZN15CDoubleItemLink6UnlinkEv": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10[2];\n
} struct_0;\n
\n
long long CDoubleItemLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rsi\n
\n
    v2 = a0;\n
    v0 = a0;\n
    if (a0->field_10)\n
    {\n
        v3 = v0;\n
        v2 = CDoubleItemList::RemoveItem(v3->field_10, v3);\n
    }\n
    return v2;\n
}\n
", "4222487:sub_406e17": null, "4222496:_ZN12CDoubleQueueC1Ev": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CDoubleQueue::__ctor__(struct_0 *a0)\n
{\n
    CDoubleItemList::__base_ctor__(a0);\n
    a0->field_10 = 0;\n
    return a0;\n
}\n
", "4222538:sub_406e4a": null, "4222544:_ZN12CDoubleQueueD2Ev": "long long CDoubleQueue::__base_dtor__(unsigned long long a0)\n
{\n
    return CDoubleItemList::__base_dtor__(a0);\n
}\n
", "4222571:sub_406e6b": null, "4222576:_ZN15CDoubleItemLink9ClearListEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long CDoubleItemLink::ClearList(struct_0 *a0)\n
{\n
    a0->field_10 = 0;\n
    return a0;\n
}\n
", "4222598:sub_406e86": null, "4222608:_ZN15CDoubleItemLink7AddListEP15CDoubleItemList": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long CDoubleItemLink::AddList(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_10 = a1;\n
    return a0;\n
}\n
", "4222634:sub_406eaa": null, "4222640:main": "int main(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x228]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    v1 = a1;\n
    CUserManager::__base_ctor__(&v0);\n
    CUserManager::Run(&v0);\n
    v3 = 0;\n
    CUserManager::__base_dtor__(&v0);\n
    return v3;\n
}\n
", "4222720:_ZN10CUserEntryC2ERK6StringS2_": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::__base_ctor__(struct_0 *a0, unsigned int a1[3], unsigned int a2[3])\n
{\n
    String::__base_ctor__(a0, a1);\n
    String::__base_ctor__(&a0->padding_0[16], a2);\n
    a0->field_20 = 0;\n
    return CDoubleQueue::__ctor__(a0 + 1);\n
}\n
", "4222801:sub_406f51": null, "4222816:_ZN10CUserEntryD2Ev": "long long CUserEntry::__base_dtor__(void* a0)\n
{\n
    CDoubleQueue::__base_dtor__(a0 + 40);\n
    String::__base_dtor__(a0 + 16);\n
    return String::__base_dtor__(a0);\n
}\n
", "4222873:sub_406f99": null, "4222880:_ZN10CUserEntry13DeleteMessageEP12CUserMessage": "long long CUserEntry::DeleteMessage(unsigned long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a1)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    CDoubleQueue::DeleteItem(a0 + 40, a1);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4222959:sub_406fef": null, "4222960:_ZN10CUserEntry15GetFirstMessageEv": "long long CUserEntry::GetFirstMessage(unsigned long a0)\n
{\n
    return CDoubleItemList::GetFirst(a0 + 40);\n
}\n
", "4222991:sub_40700f": null, "4222992:_ZN10CUserEntry14GetNextMessageEP12CUserMessage": "long long CUserEntry::GetNextMessage(unsigned long a0, unsigned long long a1[3])\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = CDoubleItemList::GetNext(a0 + 40, a1);\n
    return v0;\n
}\n
", "4223071:sub_40705f": null, "4223072:_ZN10CUserEntry21GetFirstUnreadMessageEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::GetFirstUnreadMessage(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0->field_20)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = CDoubleItemList::GetFirst(a0 + 1);\n
    return v0;\n
}\n
", "4223143:sub_4070a7": null, "4223152:_ZN10CUserEntry20GetLastUnreadMessageEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::GetLastUnreadMessage(struct_0 *a0)\n
{\n
    return a0->field_20;\n
}\n
", "4223170:sub_4070c2": null, "4223184:_ZN10CUserEntry20GetNextUnreadMessageEP12CUserMessage": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::GetNextUnreadMessage(struct_0 *a0, unsigned long long a1[3])\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0->field_20)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a1 != a0->field_20)\n
    {\n
        v0 = CDoubleItemList::GetNext(a0 + 1, a1);\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4223294:sub_40713e": null, "4223296:_ZN10CUserEntry19ClearUnreadMessagesEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::ClearUnreadMessages(struct_0 *a0)\n
{\n
    a0->field_20 = 0;\n
    return a0;\n
}\n
", "4223318:sub_407156": null, "4223328:_ZN10CUserEntry10AddMessageEP12CUserMessage": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::AddMessage(struct_0 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a1)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    if (!a0->field_20)\n
        a0->field_20 = a1;\n
    CDoubleQueue::PushFront(a0 + 1, a1);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4223434:sub_4071ca": null, "4223440:_ZN10CUserEntry15GetMessageCountEv": "long long CUserEntry::GetMessageCount(unsigned long a0)\n
{\n
    return CDoubleQueue::GetCount const(a0 + 40);\n
}\n
", "4223471:sub_4071ef": null, "4223472:_ZN10CUserEntry21GetUnreadMessageCountEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUserEntry::GetUnreadMessageCount(struct_0 *a0)\n
{\n
    unsigned long long v0[3];  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (!a0->field_20)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    for (v0[0] = CDoubleItemList::GetFirst(a0 + 1); v0; v0 = CDoubleItemList::GetNext(a0 + 1, v0))\n
    {\n
        v1 += 1;\n
        if (v0 == a0->field_20)\n
            break;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4223628:sub_40728c": null, "4223632:_ZN10CUserEntry17GetMessageByIndexEj": "long long CUserEntry::GetMessageByIndex(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0[3];  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0[0] = CDoubleItemList::GetFirst(a0 + 40);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1 != a1)\n
        {\n
            v1 += 1;\n
            v0 = CDoubleItemList::GetNext(a0 + 40, v0);\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4223764:sub_407314": null, "4223776:_ZN13CUserDatabaseC1Ev": "long long CUserDatabase::__ctor__(unsigned long long *a0)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    for (v1 = 0; v1 < 64; v1 = v3)\n
    {\n
        v0[v1] = 0;\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4223840:_ZN13CUserDatabaseD1Ev": "long long CUserDatabase::__dtor__(unsigned long long *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long long *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v1 = a0;\n
    for (v2 = 0; v2 < 64; v2 = v4)\n
    {\n
        if (v1[v2])\n
        {\n
            v0 = v1[v2];\n
            if (v0)\n
            {\n
                CUserEntry::__base_dtor__(v0);\n
                operator delete(v0);\n
            }\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4223968:_ZN13CUserDatabase10CreateUserERK6StringS2_": "long long CUserDatabase::CreateUser(unsigned long long *a0, unsigned int a1[3], unsigned int a2[3])\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x9]\n
\n
    if (CUserDatabase::FindUserByName const(a0, a1))\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    else if (CUserDatabase::GetUserCount const(a0) < 64)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= 64)\n
            {\n
                v2 = 0;\n
                return v2 & 1;\n
            }\n
            else if (a0[v1])\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v0 = operator new(64);\n
                CUserEntry::__base_ctor__(v0, a1, a2);\n
                a0[v1] = v0;\n
                v2 = 1;\n
                return v2 & 1;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
}\n
", "4224177:sub_4074b1": null, "4224192:_ZNK13CUserDatabase14FindUserByNameERK6String": "long long CUserDatabase::FindUserByName const(unsigned long long *a0, unsigned long long a1[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < 64)\n
        {\n
            if (a0[v0] && (String::operator== const(CUserEntry::GetUserName const(a0[v0]), a1) & 1))\n
            {\n
                v1 = a0[v0];\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4224354:sub_407562": null, "4224368:_ZNK13CUserDatabase12GetUserCountEv": "long long CUserDatabase::GetUserCount const(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < 64; v0 += 1)\n
    {\n
        if (a0[v0])\n
            v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4224459:sub_4075cb": null, "4224464:_ZNK13CUserDatabase15GetUserForIndexEj": "long long CUserDatabase::GetUserForIndex const(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 64)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (a0[v0])\n
        {\n
            if (a1 != v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v2 = a0[v0];\n
                return v2;\n
            }\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4224599:sub_407657": null, "4224608:_ZN13CUserDatabase16DeleteUserByNameERK6String": "long long CUserDatabase::DeleteUserByName(unsigned long long *a0, unsigned long long a1[2])\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 64)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        if (a0[v1] && (String::operator== const(CUserEntry::GetUserName const(a0[v1]), a1) & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v0 = a0[v1];\n
    if (v0)\n
    {\n
        CUserEntry::__base_dtor__(v0);\n
        operator delete(v0);\n
    }\n
    a0[v1] = 0;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4224817:sub_407731": null, "4224832:_ZN12CDoubleQueue10DeleteItemEP15CDoubleItemLink": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CDoubleQueue::DeleteItem(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = CDoubleItemList::RemoveItem(a0, a1);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    a0->field_10 = a0->field_10 - 1;\n
    if (a1)\n
    {\n
        CDoubleItemLink::__dtor__(a1);\n
        operator delete(a1);\n
    }\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4224961:sub_4077c1": null, "4224976:_ZN15CDoubleItemList8GetFirstEv": "long long CDoubleItemList::GetFirst(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4224993:sub_4077e1": null, "4225008:_ZN12CDoubleQueue9PushFrontEP15CDoubleItemLink": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CDoubleQueue::PushFront(struct_0 *a0, unsigned long long a1[3])\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = CDoubleItemList::AddFirst(a0, a1);\n
    if (v1)\n
    {\n
        a0->field_10 = a0->field_10 + 1;\n
        return a0;\n
    }\n
    return v1;\n
}\n
", "4225070:sub_40782e": null, "4225072:_ZNK12CDoubleQueue8GetCountEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long CDoubleQueue::GetCount const(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4225089:sub_407841": null, "4225104:_ZNK10CUserEntry11GetUserNameEv": "long long CUserEntry::GetUserName const(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4225118:sub_40785e": null, "4225120:_ZN12CUserManagerC2Ev": "extern unsigned int g_4090a8;\n
\n
long long CUserManager::__base_ctor__(void* a0)\n
{\n
    char v0;  // [bp-0x20]\n
\n
    String::__base_ctor__(a0);\n
    CUserDatabase::__ctor__(a0 + 16);\n
    String::__ctor__(&v0, 4231336);\n
    String::operator=(a0, &v0);\n
    return String::__base_dtor__(&v0);\n
}\n
", "4225202:sub_4078b2": null, "4225216:_ZN12CUserManagerD2Ev": "long long CUserManager::__base_dtor__(void* a0)\n
{\n
    CUserDatabase::__dtor__(a0 + 16);\n
    return String::__base_dtor__(a0);\n
}\n
", "4225260:sub_4078ec": null, "4225264:_ZN12CUserManager3RunEv": "extern char g_409070;\n
\n
long long CUserManager::Run(unsigned long long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x21]\n
    char v3;  // [bp-0x20]\n
    unsigned long v5;  // rax\n
\n
    String::__base_ctor__(&v3);\n
    cgc_printf(\"User Manager Console:\\n
\", a1, a2, a3, a4);\n
    v2 = 1;\n
    do\n
    {\n
        cgc_printf(\"1) Create User\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"2) User Login\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"3) Admin Login\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"4) Exit\\n
\", a1, a2, a3, a4);\n
        ReadLine(&v3);\n
        if (!(String::ToInteger(&v3, &v1) & 1))\n
            v1 = -1;\n
        v5 = v1 - 1;\n
        a3 = v5;\n
        v0 = v5;\n
        switch (v5)\n
        {\n
        case 0:\n
            v2 = CUserManager::RunCreateUser(a0) & 1;\n
            break;\n
        case 1:\n
            v2 = CUserManager::RunUserLogin(a0) & 1;\n
            break;\n
        case 2:\n
            v2 = CUserManager::RunAdminLogin(a0) & 1;\n
            break;\n
        case 3:\n
            v2 = 0;\n
            break;\n
        default:\n
            cgc_printf(\"Invalid choice\\n
\", a1, a2, v5, a4);\n
        }\n
    } while ((v2 & 1));\n
    cgc_printf(\"Exiting\\n
\", a1, a2, a3, a4);\n
    return String::__base_dtor__(&v3);\n
}\n
", "4225569:sub_407a21": null, "4225584:_ZN12CUserManager13RunCreateUserEv": "long long CUserManager::RunCreateUser(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    char v2;  // [bp-0x30]\n
    char v3;  // [bp-0x20]\n
\n
    String::__base_ctor__(&v3);\n
    String::__base_ctor__(&v2);\n
    v1 = 1;\n
    do\n
    {\n
        cgc_printf(\"Username: \", 12, a2, a3, a4);\n
        ReadLine(&v3);\n
        if (String::length(&v3) <= 12)\n
        {\n
            v1 = 1;\n
        }\n
        else\n
        {\n
            cgc_printf(\"Username too long, only @d characters allowed.\\n
\", 12, a2, a3, a4);\n
            v1 = 0;\n
        }\n
    } while (((v1 ^ 255) & 1));\n
    v0 = 0;\n
    do\n
    {\n
        cgc_printf(\"Password: \", a1, a2, a3, a4);\n
        ReadLine(&v2);\n
        if (String::length(&v2) > 12)\n
        {\n
            cgc_printf(\"Password too long, only @d characters allowed.\\n
\", 12, a2, a3, a4);\n
            v0 = 0;\n
        }\n
        else\n
        {\n
            v0 = 1;\n
        }\n
    } while (((v0 ^ 255) & 1));\n
    if ((CUserDatabase::CreateUser(a0 + 16, &v3, &v2) & 1))\n
        cgc_printf(\"User created successfully.\\n
\", a1, a2, a3, a4);\n
    else\n
        cgc_printf(\"Failed to create user -- user already exists.\\n
\", a1, a2, a3, a4);\n
    String::__base_dtor__(&v2);\n
    String::__base_dtor__(&v3);\n
    return 1;\n
}\n
", "4225907:sub_407b73": null, "4225920:_ZN12CUserManager12RunUserLoginEv": "extern char g_409080;\n
\n
long long CUserManager::RunUserLogin(unsigned long long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x5c]\n
    char v2;  // [bp-0x55]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned long long v4;  // [bp-0x50]\n
    char v5;  // [bp-0x48]\n
    char v6;  // [bp-0x38]\n
    char v7;  // [bp-0x28]\n
    char v8;  // [bp-0x9]\n
    unsigned long v10;  // rax\n
\n
    String::__base_ctor__(&v7);\n
    String::__base_ctor__(&v6);\n
    String::__base_ctor__(&v5);\n
    cgc_printf(\"Enter Username: \", a1, a2, a3, a4);\n
    ReadLine(&v7);\n
    cgc_printf(\"Enter Password: \", a1, a2, a3, a4);\n
    ReadLine(&v6);\n
    v4 = CUserDatabase::FindUserByName const(a0 + 16, &v7);\n
    if (!v4)\n
    {\n
        cgc_printf(\"Login failed. Invalid username or password.\\n
\", a1, a2, a3, a4);\n
        v8 = 1;\n
        v3 = 1;\n
    }\n
    else if ((String::operator!= const(CUserEntry::GetPassword const(v4), &v6) & 1))\n
    {\n
        cgc_printf(\"Login failed. Invalid username or password.\\n
\", a1, a2, a3, a4);\n
        v8 = 1;\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(\"Login success.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
        do\n
        {\n
            cgc_printf(\"1) Send Message\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"2) Read Message\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"3) List Messages\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"4) Delete Message\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"5) Logout\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"6) Exit\\n
\", a1, a2, a3, a4);\n
            ReadLine(&v5);\n
            if (!(String::ToInteger(&v5, &v1) & 1))\n
                v1 = -1;\n
            v10 = v1 - 1;\n
            a3 = v10;\n
            v0 = v10;\n
            switch (v10)\n
            {\n
            case 0:\n
                CUserManager::DoUserSendMessage(a0, v4);\n
                break;\n
            case 1:\n
                CUserManager::DoUserReadMessages(a0, v4);\n
                break;\n
            case 2:\n
                CUserManager::DoUserListMessages(a0, v4);\n
                break;\n
            case 3:\n
                CUserManager::DoUserDeleteMessage(a0, v4);\n
                break;\n
            case 4:\n
                v2 = 0;\n
                break;\n
            case 5:\n
                v8 = 0;\n
                v3 = 1;\n
                goto LABEL_407da6;\n
            default:\n
                cgc_printf(\"Invalid command\\n
\", a1, a2, v10, a4);\n
            }\n
        } while ((v2 & 1));\n
        cgc_printf(\"Logged out.\\n
\", a1, a2, a3, a4);\n
        v8 = 1;\n
        v3 = 1;\n
    }\n
LABEL_407da6:\n
    String::__base_dtor__(&v5);\n
    String::__base_dtor__(&v6);\n
    String::__base_dtor__(&v7);\n
    return v8 & 1;\n
}\n
", "4226511:sub_407dcf": null, "4226512:_ZN12CUserManager13RunAdminLoginEv": "extern unsigned int g_409098;\n
\n
long long CUserManager::RunAdminLogin(unsigned long long a0[2], unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char v4;  // [bp-0x38]\n
    char v5;  // [bp-0x28]\n
    char v6;  // [bp-0x9]\n
    unsigned long long v8;  // rax\n
\n
    String::__base_ctor__(&v5);\n
    String::__base_ctor__(&v4);\n
    cgc_printf(\"Admin Password: \", a1, a2, a3, a4);\n
    ReadLine(&v4);\n
    if ((String::operator!= const(&v4, a0) & 1))\n
    {\n
        cgc_printf(\"Invalid Password.\\n
\", a1, a2, a3, a4);\n
        v6 = 1;\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            cgc_printf(\"Admin Commands:\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"1) List Users\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"2) Delete User\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"3) Change User Password\\n
\", a1, a2, a3, a4);\n
            cgc_printf(\"4) Logout\\n
\", a1, a2, a3, a4);\n
            ReadLine(&v5);\n
            if (!(String::ToInteger(&v5, &v1) & 1))\n
                v1 = -1;\n
            v8 = v1 - 1;\n
            a3 = v8;\n
            v0 = v8;\n
            switch (v8)\n
            {\n
            case 0:\n
                CUserManager::DoAdminListUsers(a0);\n
                break;\n
            case 1:\n
                CUserManager::DoAdminDeleteUser(a0);\n
                break;\n
            case 2:\n
                CUserManager::DoAdminChangePassword(a0);\n
                break;\n
            case 3:\n
                cgc_printf(\"Logging out\\n
\", a1, a2, &g_409098, a4);\n
                v2 = 1;\n
                break;\n
            }\n
        } while (((v2 ^ 255) & 1));\n
        v6 = 1;\n
        v3 = 1;\n
    }\n
    String::__base_dtor__(&v4);\n
    String::__base_dtor__(&v5);\n
    return v6 & 1;\n
}\n
", "4226902:sub_407f56": null, "4226912:_ZN12CUserManager17DoUserSendMessageEP10CUserEntry": "long long CUserManager::DoUserSendMessage(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x70]\n
    unsigned long long v1;  // [bp-0x68]\n
    char v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x44]\n
    unsigned long v4;  // [bp-0x40]\n
    char v5;  // [bp-0x38]\n
    char v6;  // [bp-0x28]\n
\n
    String::__base_ctor__(&v6);\n
    String::__base_ctor__(&v5);\n
    cgc_printf(\"Username to send to: \", a1, a2, a3, a4);\n
    ReadLine(&v6);\n
    v4 = CUserDatabase::FindUserByName const(a0 + 16, &v6);\n
    if (!v4)\n
    {\n
        cgc_printf(\"User not found.\\n
\", a1, a2, a3, a4);\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(\"Enter Message: \", a1, a2, a3, a4);\n
        ReadLine(&v5);\n
        if (String::length(&v5) > 128)\n
        {\n
            cgc_printf(\"Message too long, truncating.\\n
\", a1, a2, a3, a4);\n
            String::Trim(&v2, &v5, 128);\n
            String::__base_dtor__(&v2);\n
        }\n
        v0 = v4;\n
        v1 = operator new(56);\n
        CUserMessage::__ctor__(v1, CUserEntry::GetUserName const(a1), &v5);\n
        if ((CUserEntry::AddMessage(v0, v1) & 1))\n
            cgc_printf(\"Message sent.\\n
\", a1, 128, a3, a4);\n
        else\n
            cgc_printf(\"Message not sent.\\n
\", a1, 128, a3, a4);\n
        v3 = 0;\n
    }\n
    String::__base_dtor__(&v5);\n
    return String::__base_dtor__(&v6);\n
}\n
", "4227252:sub_4080b4": null, "4227264:_ZN12CUserManager18DoUserReadMessagesEP10CUserEntry": "long long CUserManager::DoUserReadMessages(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long long v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    char v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x10]\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
\n
    v6 = a0;\n
    if (!CUserEntry::GetMessageCount(a1))\n
    {\n
        v8 = cgc_printf(\"No messages.\\n
\", a1, a2, a3, a4);\n
        return v8;\n
    }\n
    if (CUserEntry::GetUnreadMessageCount(a1) > 0)\n
    {\n
        cgc_printf(\"@d unread messages available. Last unread message:\\n
\", CUserEntry::GetUnreadMessageCount(a1), a2, a3, a4);\n
        v5 = CUserEntry::GetLastUnreadMessage(a1);\n
        cgc_printf(\"From: @s\\n
\", String::c_str const(CUserMessage::GetFrom const(v5)), a2, a3, a4);\n
        cgc_printf(\"Message: @s\\n
\", String::c_str const(CUserMessage::GetMessage const(v5)), a2, a3, a4);\n
        CUserEntry::ClearUnreadMessages(a1);\n
    }\n
    cgc_printf(\"@d total messages available, enter number to read: \", CUserEntry::GetMessageCount(a1), a2, a3, a4);\n
    String::__base_ctor__(&v4);\n
    ReadLine(&v4);\n
    if (!(String::ToInteger(&v4, &v3) & 1))\n
    {\n
        cgc_printf(\"Invalid message number.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
    }\n
    else if (v3 < 0)\n
    {\n
LABEL_4081fa:\n
        cgc_printf(\"Invalid message number.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        v0 = v3;\n
        a3 = CUserEntry::GetMessageCount(a1);\n
        if (!(v0 < a3))\n
            goto LABEL_4081fa;\n
        v1 = CUserEntry::GetMessageByIndex(a1, v3);\n
        if (!v1)\n
        {\n
            v2 = 1;\n
        }\n
        else\n
        {\n
            cgc_printf(\"Message @d:\\n
\", v3, a2, a3, a4);\n
            cgc_printf(\"From: @s\\n
\", String::c_str const(CUserMessage::GetFrom const(v1)), a2, a3, a4);\n
            cgc_printf(\"Message: @s\\n
\", String::c_str const(CUserMessage::GetMessage const(v1)), a2, a3, a4);\n
            v2 = 1;\n
        }\n
    }\n
    v8 = String::__base_dtor__(&v4);\n
    return v8;\n
}\n
", "4227750:sub_4082a6": null, "4227760:_ZN12CUserManager18DoUserListMessagesEP10CUserEntry": "long long CUserManager::DoUserListMessages(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long long v0[3];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a0;\n
    if (!CUserEntry::GetMessageCount(a1))\n
    {\n
        v4 = cgc_printf(\"No messages.\\n
\", a1, a2, a3, a4);\n
        return v4;\n
    }\n
    cgc_printf(\"Listing @d messages:\\n
\", CUserEntry::GetMessageCount(a1), a2, a3, a4);\n
    v1 = 0;\n
    v4 = CUserEntry::GetFirstMessage(a1);\n
    while (true)\n
    {\n
        v0[0] = v4;\n
        if (!v0)\n
            break;\n
        cgc_printf(\"Message @d:\\n
\", v1, a2, a3, a4);\n
        cgc_printf(\"From: @s\\n
\", String::c_str const(CUserMessage::GetFrom const(v0)), a2, a3, a4);\n
        cgc_printf(\"Message: @s\\n
\", String::c_str const(CUserMessage::GetMessage const(v0)), a2, a3, a4);\n
        v1 += 1;\n
        v4 = CUserEntry::GetNextMessage(a1, v0);\n
    }\n
    return v4;\n
}\n
", "4227991:sub_408397": null, "4228000:_ZN12CUserManager19DoUserDeleteMessageEP10CUserEntry": "long long CUserManager::DoUserDeleteMessage(unsigned long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned long long v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
\n
    v5 = a0;\n
    if (!CUserEntry::GetMessageCount(a1))\n
    {\n
        v7 = cgc_printf(\"No messages to delete.\\n
\", a1, a2, a3, a4);\n
        return v7;\n
    }\n
    cgc_printf(\"@d messages available. Enter number to delete: \", CUserEntry::GetMessageCount(a1), a2, a3, a4);\n
    String::__base_ctor__(&v4);\n
    ReadLine(&v4);\n
    if (!(String::ToInteger(&v4, &v3) & 1))\n
    {\n
        cgc_printf(\"Invalid message number.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
    }\n
    else if (v3 < 0)\n
    {\n
LABEL_408455:\n
        cgc_printf(\"Invalid message number.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        v0 = v3;\n
        a3 = CUserEntry::GetMessageCount(a1);\n
        if (!(v0 < a3))\n
            goto LABEL_408455;\n
        v1 = CUserEntry::GetMessageByIndex(a1, v3);\n
        if ((CUserEntry::DeleteMessage(a1, v1) & 1))\n
            cgc_printf(\"Message deleted.\\n
\", a1, a2, a3, a4);\n
        else\n
            cgc_printf(\"Failed to delete message.\\n
\", a1, a2, a3, a4);\n
        v2 = 0;\n
    }\n
    v7 = String::__base_dtor__(&v4);\n
    return v7;\n
}\n
", "4228299:sub_4084cb": null, "4228304:_ZN12CUserManager16DoAdminListUsersEv": "long long CUserManager::DoAdminListUsers(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
\n
    cgc_printf(\"Listing users in database:\\n
\", a1, a2, a3, a4);\n
    v2 = CUserDatabase::GetUserCount const(a0 + 16);\n
    for (v3 = 0; v3 < v2; v3 += 1)\n
    {\n
        *(&v1) = CUserDatabase::GetUserForIndex const(a0 + 16, v3);\n
        v0 = v3;\n
        cgc_printf(\"@d: @s\\n
\", v0, String::c_str const(CUserEntry::GetUserName const(*(&v1))), a3, a4);\n
    }\n
    return v3;\n
}\n
", "4228456:sub_408568": null, "4228464:_ZN12CUserManager17DoAdminDeleteUserEv": "long long CUserManager::DoAdminDeleteUser(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x20]\n
\n
    String::__base_ctor__(&v0);\n
    cgc_printf(\"Username to delete: \", a1, a2, a3, a4);\n
    ReadLine(&v0);\n
    if (!(CUserDatabase::DeleteUserByName(a0 + 16, &v0) & 1))\n
    {\n
        cgc_printf(\"User not found, failed to delete.\\n
\", a1, a2, a3, a4);\n
        return String::__base_dtor__(&v0);\n
    }\n
    cgc_printf(\"User deleted.\\n
\", a1, a2, a3, a4);\n
    return String::__base_dtor__(&v0);\n
}\n
", "4228594:sub_4085f2": null, "4228608:_ZN12CUserManager21DoAdminChangePasswordEv": "long long CUserManager::DoAdminChangePassword(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long long v0;  // [bp-0x60]\n
    char v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned long v3;  // [bp-0x38]\n
    char v4;  // [bp-0x30]\n
    char v5;  // [bp-0x20]\n
\n
    String::__base_ctor__(&v5);\n
    String::__base_ctor__(&v4);\n
    cgc_printf(\"Username to change password: \", a1, a2, a3, a4);\n
    ReadLine(&v5);\n
    v3 = CUserDatabase::FindUserByName const(a0 + 16, &v5);\n
    if (!v3)\n
    {\n
        cgc_printf(\"User not found in database.\\n
\", a1, a2, a3, a4);\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(\"New password: \", a1, a2, a3, a4);\n
        ReadLine(&v4);\n
        if (String::length(&v4) > 12)\n
        {\n
            cgc_printf(\"Password too long. Failed to change password.\\n
\", a1, a2, a3, a4);\n
            v2 = 1;\n
        }\n
        else\n
        {\n
            v0 = v3;\n
            String::__base_ctor__(&v1, &v4);\n
            CUserEntry::SetPassword(v0, &v1);\n
            String::__base_dtor__(&v1);\n
            cgc_printf(\"Password set for user.\\n
\", a1, a2, a3, a4);\n
            v2 = 1;\n
        }\n
    }\n
    String::__base_dtor__(&v4);\n
    return String::__base_dtor__(&v5);\n
}\n
", "4228883:sub_408713": null, "4228896:_ZNK10CUserEntry11GetPasswordEv": "long long CUserEntry::GetPassword const(unsigned long a0)\n
{\n
    return a0 + 16;\n
}\n
", "4228914:sub_408732": null, "4228928:_ZN10CUserEntry11SetPasswordE6String": "long long CUserEntry::SetPassword(unsigned long a0, unsigned int a1[3])\n
{\n
    return String::operator=(a0 + 16, a1);\n
}\n
", "4228959:sub_40875f": null, "4228960:_ZNK12CUserMessage7GetFromEv": "long long CUserMessage::GetFrom const(unsigned long a0)\n
{\n
    return a0 + 24;\n
}\n
", "4228978:sub_408772": null, "4228992:_ZNK12CUserMessage10GetMessageEv": "long long CUserMessage::GetMessage const(unsigned long a0)\n
{\n
    return a0 + 40;\n
}\n
", "4229010:sub_408792": null, "4229024:_ZN12CUserMessageC1ERK6StringS2_": "long long CUserMessage::__ctor__(unsigned long long a0[3], unsigned int a1[3], unsigned int a2[3])\n
{\n
    CDoubleItemLink::__ctor__(a0);\n
    String::__base_ctor__(a0 + 1, a1);\n
    return String::__base_ctor__(&a0[1 + 2], a2);\n
}\n
", "4229097:sub_4087e9": null, "4229104:_ZN12CUserMessageD2Ev": "long long CUserMessage::__base_dtor__(unsigned long long a0)\n
{\n
    String::__base_dtor__(a0 + 40);\n
    String::__base_dtor__(a0 + 24);\n
    return CDoubleItemLink::__dtor__(a0);\n
}\n
", "4229164:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_fdwait": null, "5242904:cgc_receive": null, "5242912:cgc_allocate": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:_ZdaPv": null, "5242952:cgc_rint": null, "5242960:cgc_log10": null, "5242968:cgc_transmit": null, "5242976:cgc_pow": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}