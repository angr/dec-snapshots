{"4206592:_init": "extern struct_0 *g_408f98;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_408f98;\n
    if (g_408f98)\n
        v1 = g_408f98();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_408fb8;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_408fb8;\n
    goto *(4231104);\n
}\n
", "4206636:sub_40302c": null, "4206640:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206656:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206672:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206688:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206720:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4231080);\n
}\n
", "4206736:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206773:sub_4030b5": null, "4206774:sub_4030b6": null, "4206784:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_408f90;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206825:sub_4030e9": null, "4206832:register_tm_clones": "extern unsigned long long g_408fa0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206889:sub_403129": null, "4206896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_408fa8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_408fa8)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4206949:sub_403165": null, "4206953:sub_403169": null, "4206960:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4206969:sub_403179": null, "4206976:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v2;  // rbx\n
    unsigned long long v3;  // rax\n
\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdi<8>, cc_ndep<8>))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = a1 * a0;\n
        v3 = cgc_malloc(v2);\n
        if (v3)\n
            return cgc_memset(v3, 0, v2);\n
        return 0;\n
    }\n
}\n
", "4207032:sub_4031b8": null, "4207040:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    return a0 - 48 < 10 | (a0 & -33) - 65 < 26;\n
}\n
", "4207069:sub_4031dd": null, "4207072:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    return (a0 & -33) - 65 < 26;\n
}\n
", "4207087:sub_4031ef": null, "4207088:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4207100:sub_4031fc": null, "4207104:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4207116:sub_40320c": null, "4207120:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4207132:sub_40321c": null, "4207136:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return a0 < 128;\n
}\n
", "4207148:sub_40322c": null, "4207152:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    return a0 == 9 | a0 == 32;\n
}\n
", "4207170:sub_403242": null, "4207184:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    return a0 < 32 | a0 == 127;\n
}\n
", "4207202:sub_403262": null, "4207216:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    return 33 <= a0 & a0 != 127;\n
}\n
", "4207234:sub_403282": null, "4207248:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    return a0 != 127 & 32 <= a0;\n
}\n
", "4207266:sub_4032a2": null, "4207280:cgc_ispunct": "typedef struct struct_0 {\n
    char padding_0[4218896];\n
    char field_406010;\n
} struct_0;\n
\n
extern char _punct;\n
\n
long long cgc_ispunct(struct_0 *a0)\n
{\n
    return *((a0 + &_punct));\n
}\n
", "4207295:sub_4032bf": null, "4207296:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    return a0 == 32 | a0 - 9 < 5;\n
}\n
", "4207317:sub_4032d5": null, "4207328:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4219024];\n
    char field_406090;\n
} struct_0;\n
\n
extern char _xdigit;\n
\n
long long cgc_isxdigit(struct_0 *a0)\n
{\n
    return *((a0 + &_xdigit));\n
}\n
", "4207343:sub_4032ef": null, "4207344:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4207350:sub_4032f6": null, "4207360:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    if ((a0 - 91) >= -26)\n
        return a0 | 32;\n
    return a0;\n
}\n
", "4207375:sub_40330f": null, "4207376:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    if ((a0 - 123) >= -26)\n
        return a0 & 95;\n
    return a0;\n
}\n
", "4207391:sub_40331f": null, "4207392:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v1;  // rdi\n
    unsigned long v2;  // rax\n
\n
    if (!a0)\n
        return v2;\n
    v1 = a0 - 24;\n
    if (v1->field_8)\n
    {\n
        return v2;\n
    }\n
    else if (v1->field_0 >= 0x40000)\n
    {\n
        return cgc_deallocate(v1);\n
    }\n
    else\n
    {\n
        cgc_insert_into_flist(v1);\n
        return cgc_coalesce(v1);\n
    }\n
}\n
", "4207452:sub_40335c": null, "4207456:cgc_malloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    uint128_t field_10;\n
    uint128_t field_20;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    struct struct_1 *field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_1;\n
\n
extern char cgc_free_lists;\n
extern struct_2 *g_409eb8;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    struct_0 *v7;  // rax\n
    unsigned long v9;  // r14, Other Possible Types: unsigned long long\n
    unsigned long v10;  // r14\n
    struct struct_2 **v11;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v13;  // rsi\n
    unsigned long long v14;  // rdx\n
    struct_0 *v16;  // rdi\n
    unsigned long long v17;  // rax\n
    unsigned long long v18;  // rdi\n
    struct_1 *v19;  // rax\n
    unsigned long long v20;  // rbx\n
\n
    v0 = v2;\n
    if (!a0)\n
        return 0;\n
    if (a0 - 262120 <= -262145)\n
    {\n
        if (cgc_allocate(a0, v4, v5))\n
            return 0;\n
        v7 = v0;\n
        v7->field_0 = a0 + 24;\n
        v7->field_8 = 0;\n
        v7->field_10 = 0;\n
        v7->field_20 = 0;\n
        return v7 + 24;\n
    }\n
    v9 = a0 + 7 & -8;\n
    if (!(a0 & 7))\n
        v9 = a0;\n
    if (v9 <= 2147483647)\n
    {\n
        v10 = v9 + 24;\n
        v11 = cgc_get_size_class(v10);\n
        if (v11 <= 31)\n
        {\n
            do\n
            {\n
                v12 = *(&(&cgc_free_lists)[8 * v11]);\n
                if (v12)\n
                {\n
                    while (*(v12) < v10)\n
                    {\n
                        v12 = *((v12 + 16));\n
                        if (!v12)\n
                            goto LABEL_4033f6;\n
                    }\n
                }\n
LABEL_4033f6:\n
                v11 += 1;\n
            } while (v11 != 32);\n
            goto LABEL_403422;\n
        }\n
        v12 = 0;\n
LABEL_403422:\n
        if (v12)\n
        {\n
LABEL_403427:\n
            cgc_remove_from_flist(v12);\n
            v17 = v12->field_0 - v10;\n
            if (v17 >= 49)\n
            {\n
                v18 = v12 + v10;\n
                *((&v12->field_0 + v10)) = v17;\n
                *(&v12->padding_8[v10]) = 1;\n
                *((16 + &v12->field_0 + v10)) = 0;\n
                v12->field_0 = v10;\n
                *((40 + &v12->field_0 + v10)) = v12;\n
                *((32 + &v12->field_0 + v10)) = v12->field_20;\n
                v19 = v12->field_20;\n
                if (v19)\n
                    v19->field_28 = v18;\n
                v12->field_20 = v18;\n
                cgc_insert_into_flist(v18);\n
            }\n
            v20 = v12 + 24;\n
            return v20;\n
        }\n
        else if (!cgc_allocate(v10, v13, v14))\n
        {\n
            v16 = v0;\n
            if (v16)\n
            {\n
                v16->field_0 = 0x40000;\n
                v16->field_8 = 1;\n
                v16->field_10 = 0;\n
                v16->field_20 = 0;\n
                cgc_insert_into_flist(v16);\n
                v12 = g_409eb8;\n
                goto LABEL_403427;\n
            }\n
        }\n
    }\n
}\n
", "4207839:sub_4034df": null, "4207840:cgc_get_size_class": "extern unsigned long long size_class_limits;\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    unsigned long long *v1;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = &size_class_limits;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*(v1) >= a0)\n
            return v2;\n
        v2 += 1;\n
        v1 += 8;\n
        if (v2 == 32)\n
            return 32;\n
    }\n
}\n
", "4207881:sub_403509": null, "4207888:cgc_insert_into_flist": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern unsigned long long size_class_limits;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned long long *v1;  // rdx, Other Possible Types: unsigned long\n
    struct struct_0 **v2;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rdx\n
\n
    v1 = &size_class_limits;\n
    v2 = 0;\n
    while (*(v1) < a0->field_0)\n
    {\n
        v2 += 1;\n
        v1 += 8;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    a0->field_8 = 1;\n
    v3 = *(&(&cgc_free_lists)[8 * v2]);\n
    if (v3)\n
    {\n
        a0->field_10 = v3;\n
        *((*(&(&cgc_free_lists)[8 * v2]) + 24)) = a0;\n
        *(&(&cgc_free_lists)[8 * v2]) = a0;\n
        a0->field_18 = 0;\n
        return v2;\n
    }\n
    *(&(&cgc_free_lists)[8 * v2]) = a0;\n
    return v2;\n
}\n
", "4207983:sub_40356f": null, "4207984:cgc_remove_from_flist": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern char cgc_free_lists;\n
extern unsigned long long size_class_limits;\n
\n
long long cgc_remove_from_flist(struct_1 *a0)\n
{\n
    unsigned long long *v1;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v2[4];  // rax, Other Possible Types: unsigned long\n
    struct_3 *v3;  // rdx\n
    struct_0 *v4;  // rcx\n
\n
    v1 = &size_class_limits;\n
    v2 = 0;\n
    do\n
    {\n
        if (*(v1) >= a0->field_0)\n
        {\n
            v3 = a0[1].field_0;\n
            if (v3)\n
                v3->field_10 = a0->field_10;\n
            v4 = a0->field_10;\n
            if (v4)\n
                v4->field_18 = v3;\n
            if (*(&(&cgc_free_lists)[8 * v2]) == a0)\n
            {\n
                *(&(&cgc_free_lists)[8 * v2]) = v4;\n
                goto LABEL_4035c9;\n
            }\n
        }\n
        v2 += 1;\n
        v1 += 8;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_4035c9:\n
    *(&a0->field_10) = 0;\n
    a0->field_8 = 0;\n
    return v2;\n
}\n
", "4208088:sub_4035d8": null, "4208096:cgc_coalesce": "extern char cgc_free_lists;\n
extern char size_class_limits;\n
\n
long long cgc_coalesce(unsigned long a0)\n
{\n
    unsigned long v1;  // rcx\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rsi\n
    unsigned long v4;  // rax\n
    unsigned long v5;  // rsi\n
    unsigned long v6;  // rsi\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rdx\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rsi\n
    unsigned long v11;  // rsi\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long v14;  // rax\n
    unsigned long v15;  // rdx\n
    unsigned long v16;  // rdx\n
    unsigned long v17;  // rsi\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // rsi\n
    unsigned long v22;  // rdx\n
    unsigned long v23;  // rsi\n
    unsigned long v24;  // rax\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rsi\n
    unsigned long v27;  // rdx\n
    unsigned long v28;  // rcx\n
    unsigned long v29;  // rax\n
    unsigned long v30;  // rdx\n
    unsigned long v31;  // rsi\n
    unsigned long v32;  // rsi\n
    unsigned long v33;  // rax\n
    unsigned long v34;  // rax\n
    unsigned long v35;  // rdx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rax\n
    unsigned long v38;  // rsi\n
    unsigned long v39;  // rsi\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v42;  // rdx\n
    unsigned long v43;  // rdx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    unsigned long v46;  // rax\n
    unsigned long v47;  // rsi\n
    unsigned long v48;  // rsi\n
    unsigned long v49;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rax\n
    unsigned long v54;  // rcx\n
    unsigned long v55;  // rcx\n
\n
    v1 = *((a0 + 40));\n
    if (!v1)\n
        return v2;\n
    if (*((v1 + 8)))\n
    {\n
        v2 = *((a0 + 32));\n
        if (v2 && *((v2 + 8)))\n
        {\n
            v3 = &size_class_limits;\n
            v4 = 0;\n
            do\n
            {\n
                if (*(v3) >= *(v1))\n
                {\n
LABEL_403638:\n
                    v5 = *((v1 + 24));\n
                    if (v5)\n
                        *((v5 + 16)) = *((v1 + 16));\n
                    v8 = *((v1 + 16));\n
                    if (v8)\n
                        *((v8 + 24)) = v5;\n
                    if ((&cgc_free_lists)[v4] == v1)\n
                        (&cgc_free_lists)[v4] = v8;\n
                    *((v1 + 16)) = 0;\n
                    *((v1 + 8)) = 0;\n
                    v13 = *((a0 + 32));\n
                    v14 = &size_class_limits;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        if (*(v14) >= *(v13))\n
                        {\n
LABEL_4036a8:\n
                            v18 = *((v13 + 24));\n
                            if (v18)\n
                                *((v18 + 16)) = *((v13 + 16));\n
                            v23 = *((v13 + 16));\n
                            if (v23)\n
                                *((v23 + 24)) = v18;\n
                            if ((&cgc_free_lists)[v15] == v13)\n
                                (&cgc_free_lists)[v15] = v23;\n
                            *((v13 + 16)) = 0;\n
                            *((v13 + 8)) = 0;\n
                            v28 = *(a0);\n
                            v29 = &size_class_limits;\n
                            v30 = 0;\n
                            do\n
                            {\n
                                if (*(v29) >= v28)\n
                                {\n
LABEL_403708:\n
                                    v33 = *((a0 + 24));\n
                                    if (v33)\n
                                        *((v33 + 16)) = *((a0 + 16));\n
                                    v39 = *((a0 + 16));\n
                                    if (v39)\n
                                        *((v39 + 24)) = v33;\n
                                    if ((&cgc_free_lists)[v30] == a0)\n
                                        (&cgc_free_lists)[v30] = v39;\n
                                    *((a0 + 16)) = 0;\n
                                    *((a0 + 8)) = 0;\n
                                    v43 = *((a0 + 40));\n
                                    v44 = v28 + *(v43);\n
                                    *(v43) = v44;\n
                                    v45 = v44 + *(*((a0 + 32)));\n
                                    *(v43) = v45;\n
                                    v46 = &size_class_limits;\n
                                    v47 = 0;\n
                                    do\n
                                    {\n
                                        if (*(v46) >= v45)\n
                                        {\n
LABEL_403778:\n
                                            *((v43 + 8)) = 1;\n
                                            v50 = (&cgc_free_lists)[v47];\n
                                            if (!v50)\n
                                            {\n
                                                (&cgc_free_lists)[v47] = v43;\n
                                            }\n
                                            else\n
                                            {\n
                                                *((v43 + 16)) = v50;\n
                                                *(((&cgc_free_lists)[v47] + 24)) = v43;\n
                                                (&cgc_free_lists)[v47] = v43;\n
                                                *((v43 + 24)) = 0;\n
                                            }\n
                                            v52 = *((a0 + 32));\n
                                            v53 = *((v52 + 40));\n
                                            if (v53)\n
                                                *((v53 + 32)) = *((v52 + 32));\n
                                            v55 = *((v52 + 32));\n
                                            if (v55)\n
                                            {\n
                                                *((v55 + 40)) = v53;\n
                                                goto LABEL_403a99;\n
                                            }\n
                                        }\n
                                        v47 += 1;\n
                                        v46 += 8;\n
                                    } while (v47 != 32);\n
                                    v47 = 32;\n
                                    goto LABEL_403778;\n
                                }\n
                                v30 += 1;\n
                                v29 += 8;\n
                            } while (v30 != 32);\n
                            v30 = 32;\n
                            goto LABEL_403708;\n
                        }\n
                        v15 += 1;\n
                        v14 += 8;\n
                    } while (v15 != 32);\n
                    v15 = 32;\n
                    goto LABEL_4036a8;\n
                }\n
                v4 += 1;\n
                v3 += 8;\n
            } while (v4 != 32);\n
            v4 = 32;\n
            goto LABEL_403638;\n
        }\n
    }\n
    if (!v1)\n
        return *((a0 + 32));\n
    if (*((v1 + 8)))\n
    {\n
        v2 = *((a0 + 32));\n
        if (v2 && !*((v2 + 8)))\n
        {\n
            v6 = &size_class_limits;\n
            v7 = 0;\n
            do\n
            {\n
                if (*(v6) >= *(v1))\n
                {\n
                    v10 = *((v1 + 24));\n
                    if (v10)\n
                        *((v10 + 16)) = *((v1 + 16));\n
                    v16 = *((v1 + 16));\n
                    if (v16)\n
                        *((v16 + 24)) = v10;\n
                    if ((&cgc_free_lists)[v7] == v1)\n
                        (&cgc_free_lists)[v7] = v16;\n
                    *((v1 + 16)) = 0;\n
                    *((v1 + 8)) = 0;\n
                    v20 = *(a0);\n
                    v21 = &size_class_limits;\n
                    v22 = 0;\n
                    do\n
                    {\n
                        if (*(v21) >= v20)\n
                        {\n
LABEL_4039f8:\n
                            v24 = *((a0 + 24));\n
                            if (v24)\n
                                *((v24 + 16)) = *((a0 + 16));\n
                            v31 = *((a0 + 16));\n
                            if (v31)\n
                                *((v31 + 24)) = v24;\n
                            if ((&cgc_free_lists)[v22] == a0)\n
                                (&cgc_free_lists)[v22] = v31;\n
                            *((a0 + 16)) = 0;\n
                            *((a0 + 8)) = 0;\n
                            v35 = *((a0 + 40));\n
                            v36 = v20 + *(v35);\n
                            *(v35) = v36;\n
                            v37 = &size_class_limits;\n
                            v38 = 0;\n
                            do\n
                            {\n
                                if (*(v37) >= v36)\n
                                {\n
LABEL_403a68:\n
                                    *((v35 + 8)) = 1;\n
                                    v40 = (&cgc_free_lists)[v38];\n
                                    if (!v40)\n
                                    {\n
                                        (&cgc_free_lists)[v38] = v35;\n
                                        goto LABEL_403a99;\n
                                    }\n
                                    else\n
                                    {\n
                                        *((v35 + 16)) = v40;\n
                                        *(((&cgc_free_lists)[v38] + 24)) = v35;\n
                                        (&cgc_free_lists)[v38] = v35;\n
                                        *((v35 + 24)) = 0;\n
                                        goto LABEL_403a99;\n
                                    }\n
                                }\n
                                v38 += 1;\n
                                v37 += 8;\n
                            } while (v38 != 32);\n
                            v38 = 32;\n
                            goto LABEL_403a68;\n
                        }\n
                        v22 += 1;\n
                        v21 += 8;\n
                    } while (v22 != 32);\n
                    v22 = 32;\n
                    goto LABEL_4039f8;\n
                }\n
                v7 += 1;\n
                v6 += 8;\n
            } while (v7 != 32);\n
            v7 = 32;\n
LABEL_403a99:\n
            v2 = *((a0 + 40));\n
            if (v2)\n
                *((v2 + 32)) = *((a0 + 32));\n
            v54 = *((a0 + 32));\n
            if (v54)\n
            {\n
LABEL_403ab7:\n
                *((v54 + 40)) = v2;\n
                return v2;\n
            }\n
            return *((a0 + 40));\n
        }\n
    }\n
    if (!v1)\n
    {\n
        return v2;\n
    }\n
    else if (*((v1 + 8)))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v9 = *((a0 + 32));\n
        if (!v9)\n
        {\n
            return v2;\n
        }\n
        else if (!*((v9 + 8)))\n
        {\n
            return v2;\n
        }\n
        else\n
        {\n
            v11 = &size_class_limits;\n
            v12 = 0;\n
            do\n
            {\n
                if (*(v11) >= *(v9))\n
                {\n
                    v17 = *((v9 + 24));\n
                    if (v17)\n
                        *((v17 + 16)) = *((v9 + 16));\n
                    v19 = *((v9 + 16));\n
                    if (v19)\n
                        *((v19 + 24)) = v17;\n
                    if ((&cgc_free_lists)[v12] == v9)\n
                        (&cgc_free_lists)[v12] = v19;\n
                    *((v9 + 16)) = 0;\n
                    *((v9 + 8)) = 0;\n
                    v25 = *(a0);\n
                    v26 = &size_class_limits;\n
                    v27 = 0;\n
                    do\n
                    {\n
                        if (*(v26) >= v25)\n
                        {\n
LABEL_403888:\n
                            v32 = *((a0 + 24));\n
                            if (v32)\n
                                *((v32 + 16)) = *((a0 + 16));\n
                            v34 = *((a0 + 16));\n
                            if (v34)\n
                                *((v34 + 24)) = v32;\n
                            if ((&cgc_free_lists)[v27] == a0)\n
                                (&cgc_free_lists)[v27] = v34;\n
                            *((a0 + 16)) = 0;\n
                            *((a0 + 8)) = 0;\n
                            v41 = v25 + *(*((a0 + 32)));\n
                            *(a0) = v41;\n
                            v48 = &size_class_limits;\n
                            v42 = 0;\n
                            do\n
                            {\n
                                if (*(v48) >= v41)\n
                                {\n
LABEL_4038f8:\n
                                    *((a0 + 8)) = 1;\n
                                    v49 = (&cgc_free_lists)[v42];\n
                                    if (!v49)\n
                                    {\n
                                        (&cgc_free_lists)[v42] = a0;\n
                                    }\n
                                    else\n
                                    {\n
                                        *((a0 + 16)) = v49;\n
                                        *(((&cgc_free_lists)[v42] + 24)) = a0;\n
                                        (&cgc_free_lists)[v42] = a0;\n
                                        *((a0 + 24)) = 0;\n
                                    }\n
                                    v51 = *((a0 + 32));\n
                                    v2 = *((v51 + 40));\n
                                    if (v2)\n
                                    {\n
                                        *((v2 + 32)) = *((v51 + 32));\n
                                        goto LABEL_403ad5;\n
                                    }\n
                                }\n
                                v42 += 1;\n
                                v48 += 8;\n
                            } while (v42 != 32);\n
                            v42 = 32;\n
                            goto LABEL_4038f8;\n
                        }\n
                        v27 += 1;\n
                        v26 += 8;\n
                    } while (v27 != 32);\n
                    v27 = 32;\n
                    goto LABEL_403888;\n
                }\n
                v12 += 1;\n
                v11 += 8;\n
            } while (v12 != 32);\n
            v12 = 32;\n
LABEL_403ad5:\n
            v54 = *((v51 + 32));\n
            if (!v54)\n
                return v2;\n
        }\n
    }\n
    goto LABEL_403ab7;\n
}\n
", "4209379:sub_403ae3": null, "4209392:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // r8, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) == a1)\n
            return a0 + v1;\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4209434:sub_403b1a": null, "4209440:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a1 + v1)) != *((a0 + v1)))\n
            return *((a1 + v1)) - *((a0 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4209486:sub_403b4e": null, "4209488:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rax\n
    unsigned long v2;  // rdi\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    v2 = 0;\n
    do\n
    {\n
        v1[v2] = *((a1 + v2));\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4209521:sub_403b71": null, "4209536:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rcx\n
\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a2)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        do\n
        {\n
            a0[v1] = a1;\n
            v1 += 1;\n
        } while (a2 != v1);\n
        return a0;\n
    }\n
}\n
", "4209569:sub_403ba1": null, "4209584:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    int tmp_5;  // tmp #5\n
    char v0;  // [bp-0x3d]\n
    unsigned int v1;  // [bp-0x3c]\n
    char v3;  // bpl\n
    unsigned long long v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // r15, Other Possible Types: unsigned long long\n
    char v7;  // al\n
    char v8;  // cl\n
\n
    v3 = a4;\n
    v6 = a1;\n
    if (a1 < a2)\n
    {\n
        v1 = 0;\n
        if (a3 <= 0)\n
            goto LABEL_403c4a;\n
    }\n
    else\n
    {\n
        a3 -= 1;\n
        v6 = (0 CONCAT a1) /m a2 >> 32;\n
        v1 = cgc_output_number_printf(a0, (0 CONCAT a1) /m a2, a2, a3, a4);\n
        if (a3 <= 0)\n
            goto LABEL_403c4a;\n
    }\n
    if (!v1)\n
    {\n
        v5 = a3 - 1;\n
        if (a3 + -1)\n
        {\n
            do\n
            {\n
                if ((v3 & 1))\n
                    v0 = 48;\n
                else\n
                    v0 = 32;\n
                cgc_transmit(a0, a1, a2, a3);\n
                tmp_5 = v5;\n
                v5 = v5 - 1;\n
            } while (tmp_5 + -1);\n
        }\n
    }\n
LABEL_403c4a:\n
    v7 = (!(v3 & 2) ? v6 + 55 : v6 + 87);\n
    v8 = v6 + 48;\n
    if (10 <= v6)\n
        v8 = v7;\n
    v0 = v8;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4209692:sub_403c1c": null, "4209814:sub_403c96": null, "4209824:cgc_fdprintf": "extern unsigned long long g_406110;\n
\n
long long cgc_fdprintf(unsigned long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x119]\n
    unsigned int v1;  // [bp-0x118], Other Possible Types: unsigned long long\n
    struct struct_0 **v2;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x108]\n
    struct struct_0 **v4;  // [bp-0xf8], Other Possible Types: unsigned long\n
    char v5;  // [bp-0xf0]\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    unsigned long long v30;  // r13\n
    struct struct_0 **v31;  // al, Other Possible Types: unsigned long\n
    unsigned long long v32;  // rbx\n
    unsigned long v33;  // r12, Other Possible Types: unsigned long long\n
    void* v34;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v35;  // rax\n
    unsigned long v36;  // rcx, Other Possible Types: unsigned int\n
    unsigned long long v37;  // rcx\n
    unsigned long long v38;  // rcx\n
    unsigned long long v39;  // rcx\n
    struct struct_0 **v40;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v41;  // rax, Other Possible Types: unsigned long\n
    unsigned long v42;  // rcx, Other Possible Types: unsigned long long\n
    struct struct_0 **v43;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v44;  // rax, Other Possible Types: unsigned long\n
    unsigned long v45;  // r14, Other Possible Types: unsigned long long\n
    char *v46;  // rbp\n
    unsigned long v47;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v48;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v49;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long v50;  // rbx\n
    unsigned long long v51;  // r12, Other Possible Types: unsigned long\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v4 = a1;\n
    v3 = &v6;\n
    v2 = &v19;\n
    v1 = 206158430224;\n
    if (!*(a1))\n
        return 0;\n
    v30 = a0;\n
    v51 = &v5;\n
    do\n
    {\n
        v4 = a1 + 1;\n
        v31 = *(a1);\n
        if (*(a1) == 37)\n
        {\n
            v32 = v51;\n
            v33 = 0;\n
            v34 = 0;\n
            while (true)\n
            {\n
                a0 = v4;\n
                v4 = a0 + 1;\n
                v35 = *(a0);\n
                a3 = v35;\n
                if ((a3 - 49) >= 9)\n
                    break;\n
                v34 = cgc_strtol(a0, &v4, 10, a3);\n
            }\n
            a2 = a3 - 88;\n
            switch (a2)\n
            {\n
            case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26: case 28: case 30: case 31:\n
                v0 = v35;\n
                goto LABEL_403eee;\n
            case 11:\n
                a3 = v1;\n
                if (a3 <= 40)\n
                {\n
                    v31 = a3 + v3;\n
                    a3 = a3 + 8;\n
                    v1 = a3;\n
                }\n
                else\n
                {\n
                    v31 = v2;\n
                    v2 = v31 + 8;\n
                }\n
                v51 = rbx<8>;\n
                *(&v31) = *(v31);\n
                goto LABEL_403d70;\n
            case 12:\n
                v36 = v1;\n
                if (v36 <= 40)\n
                {\n
                    v40 = v36 + v3;\n
                    v36 = v36 + 8;\n
                    v1 = v36;\n
                }\n
                else\n
                {\n
                    v40 = v2;\n
                    v2 = v40 + 8;\n
                }\n
                v45 = *(v40);\n
                if (v45 < 0)\n
                {\n
                    v0 = 45;\n
                    cgc_transmit(a0, &g_406110, a2, v36);\n
                    v45 = -(v45);\n
                }\n
                cgc_output_number_printf(v30, v45, 10, v34, v33);\n
                v51 = rbx<8>;\n
                break;\n
            case 27:\n
                v37 = v1;\n
                if (v37 > 40)\n
                {\n
                    v41 = v2;\n
                    v42 = v41 + 8;\n
                    v2 = v42;\n
                }\n
                else\n
                {\n
                    v41 = v37 + v3;\n
                    v42 = v37 + 8;\n
                    v1 = v42;\n
                }\n
                v51 = rbx<8>;\n
                v46 = *(v41);\n
                if (cgc_strlen(v46))\n
                {\n
                    v50 = 0;\n
                    do\n
                    {\n
                        v0 = v46[v50];\n
                        cgc_transmit(a0, &g_406110, a2, v42);\n
                        v50 += 1;\n
                    } while (cgc_strlen(v46) > v50);\n
                }\n
                break;\n
            case 29:\n
                v38 = v1;\n
                if (v38 > 40)\n
                {\n
                    v43 = v2;\n
                    v2 = v43 + 8;\n
                }\n
                else\n
                {\n
                    v43 = v38 + v3;\n
                    v1 = v38 + 8;\n
                }\n
                v47 = *(v43);\n
                v48 = v30;\n
                v49 = 10;\n
LABEL_403fca:\n
                cgc_output_number_printf(v48, v47, v49, v34, v33);\n
                v51 = rbx<8>;\n
                break;\n
            case 0:\n
                v33 = v33 | 2;\n
            case 32:\n
                v39 = v1;\n
                if (v39 > 40)\n
                {\n
                    v44 = v2;\n
                    v2 = v44 + 8;\n
                }\n
                else\n
                {\n
                    v44 = v39 + v3;\n
                    v1 = v39 + 8;\n
                }\n
                v47 = *(v44);\n
                v48 = v30;\n
                v49 = 16;\n
                goto LABEL_403fca;\n
            default:\n
                if (a3 == 37)\n
                    goto LABEL_0x403ee9;\n
                else\n
                    goto LABEL_0x403ded;\n
            }\n
LABEL_403eee:\n
            v51 = rbx<8>;\n
            goto LABEL_403d82;\n
        }\n
LABEL_403d70:\n
        v0 = v31;\n
LABEL_403d82:\n
        cgc_transmit(a0, a1, a2, a3);\n
        a1 = v4;\n
    } while (*(a1));\n
    return 0;\n
}\n
", "4210094:sub_403dae": null, "4210170:sub_403dfa": null, "4210672:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long long a3, unsigned long long a4, unsigned long long a5)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_19;  // tmp #19\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // r15\n
    unsigned long v8;  // r14\n
    unsigned long v9;  // r13\n
    unsigned long v10;  // r12\n
    unsigned long v11;  // rbx\n
    unsigned long v12;  // rax\n
    char v13;  // r15b\n
    unsigned long long v14;  // rax\n
    unsigned long v15;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v16;  // rbp, Other Possible Types: unsigned long long\n
    char v17;  // cl\n
    char v18;  // cl\n
    char *v19;  // rax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v2 = v10;\n
    v1 = v11;\n
    v0 = v12;\n
    v13 = a5;\n
    v15 = a2;\n
    if (a2 >= a3)\n
    {\n
        a4 -= 1;\n
        v14 = (0 CONCAT a2) /m a3;\n
        v15 = v14 / 0x100000000;\n
        cgc_output_number_sprintf(a0, a1, v14, a3, a4, a5);\n
    }\n
    if (a4 > 0 && v15 < a3)\n
    {\n
        v16 = a4 - 1;\n
        if (a4 + -1)\n
        {\n
            do\n
            {\n
                *(a1)->field_0 = ((v13 & 1) * 16) | 32;\n
                *(a1) = *(a1) + 1;\n
                *(a0) = *(a0) + 1;\n
                tmp_19 = v16;\n
                v16 = v16 - 1;\n
            } while (tmp_19 + -1);\n
        }\n
    }\n
    v17 = (10 <= v15 ? 48 : ((!(v13 & 2)) * 32 + 55));\n
    v18 = v17 + v15;\n
    v19 = *(a1);\n
    *(v19) = v18;\n
    *(a1) = *(a1) + 1;\n
    *(a0) = *(a0) + 1;\n
    return v19;\n
}\n
", "4210844:sub_40409c": null, "4210848:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char *v1;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x108], Other Possible Types: unsigned long long\n
    struct struct_0 **v3;  // [bp-0x100], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0xf8]\n
    char *v5;  // [bp-0xf0], Other Possible Types: unsigned long\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    struct struct_0 **v30;  // r15\n
    struct_1 *v31;  // r14\n
    struct struct_0 **v32;  // r13\n
    char *v33;  // rcx\n
    void* v35;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v36;  // rbp\n
    unsigned long v37;  // rdx, Other Possible Types: unsigned long long\n
    char *v38;  // rdi\n
    unsigned long long v39;  // rcx\n
    unsigned int v40;  // esi\n
    unsigned long long v42;  // rax\n
    char *v43;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v44;  // rdx\n
    unsigned long long v45;  // rcx\n
    unsigned long long v46;  // rdx\n
    struct struct_0 **v47;  // rcx, Other Possible Types: unsigned long\n
    struct struct_0 **v48;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v49;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v50;  // rdx, Other Possible Types: unsigned long\n
    char *v51;  // rbp\n
    unsigned long v52;  // r14\n
    unsigned int v53;  // r13d\n
    struct_1 *v54;  // rdi, Other Possible Types: unsigned long\n
    struct struct_0 **v55;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v56;  // rcx, Other Possible Types: unsigned long long\n
    char *v57;  // rcx\n
    struct struct_0 **v58;  // rbx\n
    unsigned long v59;  // r15\n
    struct struct_0 **v60;  // r15\n
    struct_1 *v61;  // r14\n
    struct struct_0 **v62;  // r13\n
    char *v63;  // rax\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v1 = a0;\n
    v5 = a1;\n
    v0 = 0;\n
    v4 = &v6;\n
    v3 = &v19;\n
    v2 = 206158430224;\n
    if (!*(a1))\n
    {\n
        v63 = v1;\n
        v1 = v63 + 1;\n
        *(v63) = 0;\n
        return v0;\n
    }\n
    v30 = &v5;\n
    v31 = &v0;\n
    v32 = &v1;\n
    do\n
    {\n
        v5 = a1 + 1;\n
        if (*(a1) != 37)\n
        {\n
            v33 = v1;\n
            *(v33) = *(a1);\n
            v1 = v33 + 1;\n
        }\n
        else\n
        {\n
            v35 = 0;\n
            while (true)\n
            {\n
                v36 = v35 | 1;\n
                v37 = v35;\n
                do\n
                {\n
                    v35 = v37;\n
                    v38 = v5;\n
                    v5 = v38 + 1;\n
                    v39 = *(v38);\n
                    v40 = v39;\n
                    v37 = v36;\n
                } while (v40 == 48);\n
                switch (v40)\n
                {\n
                case 37:\n
                    v43 = v1;\n
                    *(v43) = 37;\n
                    goto LABEL_4041eb;\n
                case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                    v42 = cgc_strtol();\n
                    continue;\n
                case 100:\n
                    v44 = v2;\n
                    if (v44 <= 40)\n
                    {\n
                        v47 = v44 + v4;\n
                        v2 = v44 + 8;\n
                    }\n
                    else\n
                    {\n
                        v47 = v3;\n
                        v3 = v47 + 8;\n
                    }\n
                    v50 = *(v47);\n
                    if (v50 < 0)\n
                    {\n
                        v57 = v1;\n
                        *(v57) = 45;\n
                        v1 = v57 + 1;\n
                        v0 += 1;\n
                        v50 = -(v50);\n
                    }\n
                    v54 = *(&v0);\n
                    v55 = v1;\n
                    v56 = 10;\n
LABEL_4042a4:\n
                    cgc_output_number_sprintf(v54, v55, v50, v56, 0, v35);\n
                    break;\n
                case 115:\n
                    v45 = v2;\n
                    if (v45 > 40)\n
                    {\n
                        v48 = v3;\n
                        v3 = v48 + 8;\n
                    }\n
                    else\n
                    {\n
                        v48 = v45 + v4;\n
                        v2 = v45 + 8;\n
                    }\n
                    v51 = *(v48);\n
                    v52 = v1;\n
                    v53 = v0;\n
                    if (cgc_strlen(v51))\n
                    {\n
                        v58 = r15<8>;\n
                        v59 = 0;\n
                        do\n
                        {\n
                            *((v52 + v59)) = v51[v59];\n
                            v59 += 1;\n
                        } while (cgc_strlen(v51) > v59);\n
                        v52 += v59;\n
                        v53 += v59;\n
                        v60 = rbx<8>;\n
                    }\n
                    v1 = v52;\n
                    v0 = v53;\n
                    v61 = &v0;\n
                    v62 = &v1;\n
                    break;\n
                case 88:\n
                    v35 = v35 | 2;\n
                case 120:\n
                    v46 = v2;\n
                    if (v46 > 40)\n
                    {\n
                        v49 = v3;\n
                        v3 = v49 + 8;\n
                    }\n
                    else\n
                    {\n
                        v49 = v46 + v4;\n
                        v2 = v46 + 8;\n
                    }\n
                    v50 = *(v49);\n
                    v54 = r14<8>;\n
                    v55 = r13<8>;\n
                    v56 = 16;\n
                    goto LABEL_4042a4;\n
                default:\n
                    v43 = v1;\n
                    *(v43) = v39;\n
LABEL_4041eb:\n
                    v1 = v43 + 1;\n
                    goto LABEL_404170;\n
                }\n
            }\n
        }\n
LABEL_404170:\n
        v0 += 1;\n
        a1 = v5;\n
    } while (*(a1));\n
}\n
", "4211036:sub_40415c": null, "4211540:sub_404354": null, "4211552:cgc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-18;\n
} struct_0;\n
\n
long long cgc_realloc(struct_0 *a0, unsigned long long a1)\n
{\n
    char *v1;  // rax\n
    unsigned long v3;  // rdx\n
\n
    if (!a0)\n
        return cgc_malloc(a1);\n
    if (!a1)\n
    {\n
        cgc_free(a0);\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(a1);\n
        if (v1)\n
        {\n
            v3 = a0[3].field_-18 - 24;\n
            if (v3 > a1)\n
                v3 = a1;\n
            cgc_memcpy(v1, a0, v3);\n
            cgc_free(a0);\n
            return v1;\n
        }\n
    }\n
    return 0;\n
}\n
", "4211663:sub_4043cf": null, "4211664:cgc_strcasecmp": "long long cgc_strcasecmp(char a0[2], char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    char v2[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v3;  // al, Other Possible Types: char\n
    char v4;  // cl\n
    unsigned long long v5;  // rax\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = a0[0];\n
    while (true)\n
    {\n
        if (!v3)\n
            return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        v4 = *(v1);\n
        if (!v4)\n
            return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        if (v3 != v4)\n
        {\n
            v5 = cgc_tolower(v3);\n
            if (v5 != cgc_tolower(*(v1)))\n
                return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        }\n
        v1 += 1;\n
        v3 = *((v2 + 1));\n
        v2 += 1;\n
    }\n
}\n
", "4211678:sub_4043de": null, "4211759:sub_40442f": null, "4211760:cgc_strcat": "long long cgc_strcat(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_strcpy(cgc_strlen() + a0, a1);\n
    return a0;\n
}\n
", "4211798:sub_404456": null, "4211808:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // ecx\n
\n
    v1 = a0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a1)\n
            return v1;\n
    }\n
}\n
", "4211843:sub_404483": null, "4211856:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // al\n
\n
    v1 = *(a0);\n
    if (!*(a0))\n
        return *(a1) - v1;\n
    v2 = a0 + 1;\n
    while (true)\n
    {\n
        v3 = *(a1);\n
        if (!v3)\n
            break;\n
        if (v1 != v3)\n
            break;\n
        a1 += 1;\n
        v1 = *(v2);\n
        v2 += 1;\n
        if (!v1)\n
            break;\n
    }\n
    return *(a1) - v1;\n
}\n
", "4211907:sub_4044c3": null, "4211920:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v1;  // rax\n
    char v2;  // cl\n
    unsigned long v3;  // rdi\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    if (!*(a1))\n
    {\n
        *(a0) = 0;\n
        return a0;\n
    }\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = v2;\n
        v2 = a1[1 + v3];\n
        v3 += 1;\n
    } while (v2);\n
    v1[v3] = 0;\n
    return v1;\n
}\n
", "4211967:sub_4044ff": null, "4211968:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((a0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4211996:sub_40451c": null, "4212000:cgc_strncasecmp": "long long cgc_strncasecmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    char v5;  // al\n
    char *v6;  // rbx, Other Possible Types: unsigned long\n
    void* v7;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a2)\n
        return 0;\n
    v3 = a1;\n
    for (v6 = a0; a2 != 1; v3 += 1)\n
    {\n
        v4 = *(v6);\n
        if (!v4)\n
            break;\n
        v5 = *(v3);\n
        if (!v5)\n
            break;\n
        if (v4 != v5 && cgc_tolower(v4) != cgc_tolower(*(v3)))\n
            break;\n
        v6 += 1;\n
    }\n
    v7 = cgc_tolower(*(v6)) - cgc_tolower(*(v3));\n
    return v7;\n
}\n
", "4212023:sub_404537": null, "4212124:sub_40459c": null, "4212128:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_2;  // tmp #2\n
    int tmp_8;  // tmp #8\n
    unsigned long v1;  // rdx, Other Possible Types: unsigned long long\n
    char *v2;  // r8\n
    char *v3;  // r9\n
    char v4;  // al\n
    char v5;  // cl\n
\n
    if (!a2)\n
        return 0;\n
    tmp_2 = a2;\n
    v1 = a2 - 1;\n
    if (tmp_2 == 1)\n
        return *(a1) - *(a0);\n
    v2 = &a0[v1];\n
    v3 = &a1[v1];\n
    while (true)\n
    {\n
        v4 = *(a0);\n
        if (!v4)\n
            return *(a1) - *(a0);\n
        v5 = *(a1);\n
        if (!v5)\n
        {\n
            return *(a1) - *(a0);\n
        }\n
        else if (v4 != v5)\n
        {\n
            return *(a1) - *(a0);\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            a1 += 1;\n
            tmp_8 = v1;\n
            v1 -= 1;\n
            if (tmp_8 == 1)\n
                return *(v3) - *(v2);\n
        }\n
    }\n
}\n
", "4212210:sub_4045f2": null, "4212224:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v1[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // al, Other Possible Types: char\n
    unsigned long long v3;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (!v1)\n
        return 0;\n
    v2 = v1[0];\n
    if (v1[0])\n
    {\n
        while (true)\n
        {\n
            v3 = cgc_strchr(a1, v2);\n
            if (v3)\n
                break;\n
            v2 = *((v1 + 1));\n
            v1 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        v5 = v1 + 1;\n
    }\n
    *(a0) = v5;\n
    return *(a0);\n
}\n
", "4212316:sub_40465c": null, "4212320:cgc_strtol": "long long cgc_strtol(char *a0, unsigned long long *a1, unsigned int a2)\n
{\n
    char *v1;  // r9d, Other Possible Types: unsigned long\n
    void* v2;  // rax, Other Possible Types: unsigned long\n
    char *v3;  // r8, Other Possible Types: unsigned long, unsigned long long\n
    char *v4;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rax\n
    unsigned long v6;  // rbp\n
    unsigned long long v7;  // r9\n
    unsigned long v8;  // r8\n
    void* v9;  // r11, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v10;  // rcx\n
    char v11;  // bpl\n
    unsigned long v12;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v13;  // r11\n
    unsigned long long v14;  // rcx\n
    unsigned long v15;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = a0;\n
    if (a2 <= 36 && a2 != 1)\n
    {\n
        v4 = a0;\n
        while (true)\n
        {\n
            v5 = *(v4);\n
            if (v5 - 9 >= 4 && v5 != 32)\n
                break;\n
            v4 += 1;\n
        }\n
        v6 = 0;\n
        *(&v6) = v5 == 45;\n
        v7 = (*((v4 + v6)) == 43) + v6;\n
        v8 = v4 + v7;\n
        if (!a2)\n
        {\n
            a2 = 10;\n
            if (*(v8) == 48)\n
            {\n
                if ((*((v4 + v7 + 1)) | 32) != 120)\n
                {\n
                    v8 = v4 + v7 + 1;\n
                    a2 = 8;\n
                }\n
                else\n
                {\n
                    v8 = v4 + v7 + 2;\n
                    a2 = 16;\n
                }\n
            }\n
        }\n
        else if (a2 == 16)\n
        {\n
            a2 = 16;\n
            if (*(v8) == 48 && (*((v4 + v7 + 1)) | 32) == 120)\n
                v8 = v4 + v7 + 2;\n
        }\n
        v1 = 0;\n
        v9 = 0;\n
        while (true)\n
        {\n
            v10 = *((v8 + v1));\n
            v11 = v10 - 48;\n
            if (v11 >= 10 && (v10 & 223) - 65 >= 26)\n
                break;\n
            if (v11 <= 9)\n
            {\n
                v12 = v10 - 48;\n
                if (v12 >= a2)\n
                    break;\n
            }\n
            else if ((v10 & 223) - 65 >= 26)\n
            {\n
                v12 = v11 < 10;\n
                if (v12 >= a2)\n
                    break;\n
            }\n
            else\n
            {\n
                v12 = v10 + (v10 - 65 < 26) * 32 - 87;\n
                if (v12 >= a2)\n
                    break;\n
            }\n
            v13 = a2 * v9;\n
            v14 = v12 + v13;\n
            v1 += 1;\n
            v9 = v14;\n
        }\n
        v15 = -(v9);\n
        if (v5 != 45)\n
            v15 = v9;\n
        v2 = v15;\n
        v3 = v8 + v1;\n
    }\n
    if (!a1)\n
        return v2;\n
    if (!v1)\n
        v3 = a0;\n
    *(a1) = v3;\n
    return v2;\n
}\n
", "4212360:sub_404688": null, "4212586:sub_40476a": null, "4212695:sub_4047d7": null, "4212704:cgc_strtoul": "long long cgc_strtoul(char *a0, unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4212712:sub_4047e8": null, "4212720:cgc_contains": "long long cgc_contains(unsigned long long *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rbx\n
    unsigned long long *v4;  // rbp, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return 0;\n
    v4 = a0 + 1;\n
    while (true)\n
    {\n
        if (cgc_strncmp(v3, a1, cgc_strlen(v3)))\n
        {\n
            v3 = *(v4);\n
            v4 += 8;\n
            if (!v3)\n
                return 0;\n
        }\n
        else\n
        {\n
            return 1;\n
        }\n
    }\n
}\n
", "4212813:sub_40484d": null, "4212816:cgc_validate_edu": "extern unsigned long long g_408a48;\n
\n
long long cgc_validate_edu(char *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = \"HS\";\n
    v2 = &g_408a48;\n
    while (true)\n
    {\n
        if (cgc_strncmp(v1, a0, cgc_strlen(v1)))\n
        {\n
            v1 = *(v2);\n
            v2 += 8;\n
            if (!v1)\n
                return 0;\n
        }\n
        else\n
        {\n
            return 1;\n
        }\n
    }\n
}\n
", "4212901:sub_4048a5": null, "4212912:cgc_validate_eye_color": "extern unsigned long long g_408a68;\n
\n
long long cgc_validate_eye_color(char *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = \"Black\";\n
    v2 = &g_408a68;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, a0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 8;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4212997:sub_404905": null, "4213008:cgc_validate_hair_color": "extern unsigned long long g_408ac8;\n
\n
long long cgc_validate_hair_color(char *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = \"Bald\";\n
    v2 = &g_408ac8;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, a0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 8;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4213093:sub_404965": null, "4213104:cgc_validate_state": "extern unsigned long long g_408b48;\n
\n
long long cgc_validate_state(char *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = \"AL\";\n
    v2 = &g_408b48;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, a0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 8;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4213189:sub_4049c5": null, "4213200:cgc_validate_suffix": "extern unsigned long long g_408ce8;\n
\n
long long cgc_validate_suffix(char *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = \"Jr\";\n
    v2 = &g_408ce8;\n
    while (true)\n
    {\n
        if (cgc_strncmp(v1, a0, cgc_strlen(v1)))\n
        {\n
            v1 = *(v2);\n
            v2 += 8;\n
            if (!v1)\n
                return 0;\n
        }\n
        else\n
        {\n
            return 1;\n
        }\n
    }\n
}\n
", "4213285:sub_404a25": null, "4213296:cgc_within": "long long cgc_within(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a2 <= a1 & a0 <= a2;\n
}\n
", "4213312:cgc_all_digits": "long long cgc_all_digits(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (!v1)\n
    {\n
        return v1 ^ 1;\n
    }\n
    else if (!cgc_isdigit(a0[0]))\n
    {\n
        return v2 ^ 1;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                return v4 < v5 ^ 1;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                return v2 ^ 1;\n
        }\n
    }\n
}\n
", "4213408:cgc_validate_day": "long long cgc_validate_day(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
        return cgc_strtol(a0, NULL, 10) - 1 < 31;\n
    return 0;\n
}\n
", "4213532:sub_404b1c": null, "4213536:cgc_validate_month": "long long cgc_validate_month(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
        return cgc_strtol(a0, NULL, 10) - 1 < 12;\n
    return 0;\n
}\n
", "4213660:sub_404b9c": null, "4213664:cgc_validate_year": "long long cgc_validate_year(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
        return cgc_strtol(a0, NULL, 10) - 1900 < 115;\n
    return 0;\n
}\n
", "4213791:sub_404c1f": null, "4213792:cgc_validate_height_inches": "long long cgc_validate_height_inches(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
    unsigned long v7;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
    {\n
        v7 = 0;\n
        *(&v7) = cgc_strtol(a0, NULL, 10) < 12;\n
        return v7;\n
    }\n
    return 0;\n
}\n
", "4213913:sub_404c99": null, "4213920:cgc_validate_height_feet": "long long cgc_validate_height_feet(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
        return cgc_strtol(a0, NULL, 10) - 1 < 9;\n
    return 0;\n
}\n
", "4214044:sub_404d1c": null, "4214048:cgc_validate_weight": "long long cgc_validate_weight(char a0[2])\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (v1 && cgc_isdigit(a0[0]))\n
    {\n
        v4 = 1;\n
        while (true)\n
        {\n
            v5 = cgc_strlen(a0);\n
            v2 = v4 < v5;\n
            if (v4 >= v5)\n
                break;\n
            v6 = cgc_isdigit(a0[v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
    }\n
    if (!v2)\n
        return cgc_strtol(a0, NULL, 10) - 50 < 451;\n
    return 0;\n
}\n
", "4214175:sub_404d9f": null, "4214176:cgc_validate_name": "long long cgc_validate_name(char *a0)\n
{\n
    unsigned long long v1;  // rax\n
    char v2;  // bpl\n
    unsigned long long v3;  // rax\n
    unsigned long v4;  // rbx\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = v1;\n
    if (!v1)\n
        return ~(v1) & 1;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (!cgc_isprint(a0[v4]) && a0[v4] != 39)\n
            return ~(v2) & 1;\n
        v4 += 1;\n
        v3 = cgc_strlen(a0);\n
        v2 = v4 < v3;\n
        if (v4 >= v3)\n
            return ~(v4 < v3) & 1;\n
    }\n
}\n
", "4214201:sub_404db9": null, "4214265:sub_404df9": null, "4214272:cgc_validate_email": "long long cgc_validate_email(char *a0)\n
{\n
    unsigned long long v0;  // [bp-0x158]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v3;  // rax\n
    unsigned long v5;  // r13, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rbx\n
    unsigned long v7;  // rbp\n
\n
    v1 = v3;\n
    if (cgc_strlen(a0) < 3)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(a0) > 64)\n
    {\n
        return 0;\n
    }\n
    else if (!cgc_strlen(a0))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v5 = 0;\n
        while (true)\n
        {\n
            v6 = a0[v7];\n
            if (v6 == 64)\n
            {\n
                v5 = 1;\n
            }\n
            else if (!cgc_isalnum(v6))\n
            {\n
                *(&v6) = v6 - 45;\n
                if (*(&v6) > 50)\n
                    break;\n
                v0 = 1125899906842627;\n
                if (!((*(&v0 + ((v6 & 63) >> 3)) >> (v6 & 63 & 7)) & 1))\n
                    break;\n
            }\n
            v7 += 1;\n
            if (v7 >= cgc_strlen(a0))\n
                return v5;\n
        }\n
        return 0;\n
    }\n
}\n
", "4214348:sub_404e4c": null, "4214447:sub_404eaf": null, "4214448:cgc_validate_street": "long long cgc_validate_street(char *a0)\n
{\n
    void* v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2;  // rax\n
    unsigned long v3;  // rbp\n
    unsigned long long v4;  // rax\n
    unsigned int v5;  // ebx\n
\n
    if (cgc_strlen(a0) > 32)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(a0) < 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = cgc_strlen(a0);\n
        *(&v1) = v2;\n
        if (v2)\n
        {\n
            v3 = 0;\n
            do\n
            {\n
                if (!cgc_isalnum(a0[v3]))\n
                {\n
                    if (!(!cgc_isspace(a0[v3])))\n
                        continue;\n
                    if (!cgc_ispunct(a0[v3]))\n
                        break;\n
                    continue;\n
                }\n
                v3 += 1;\n
                v4 = cgc_strlen(a0);\n
                *(&v1) = v3 < v4;\n
            } while (v3 < v4);\n
        }\n
        v5 = ~(v1);\n
        v1 = v5 & 1;\n
        return v1;\n
    }\n
}\n
", "4214502:sub_404ee6": null, "4214589:sub_404f3d": null, "4214592:cgc_validate_city": "long long cgc_validate_city(char *a0)\n
{\n
    void* v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2;  // rax\n
    unsigned long v3;  // rbp\n
    unsigned long long v4;  // rax\n
    unsigned int v5;  // ebx\n
\n
    if (cgc_strlen(a0) > 32)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(a0) < 4)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = cgc_strlen(a0);\n
        *(&v1) = v2;\n
        if (v2)\n
        {\n
            v3 = 0;\n
            do\n
            {\n
                if (!cgc_isalnum(a0[v3]))\n
                {\n
                    if (!(!cgc_isspace(a0[v3])))\n
                        continue;\n
                    if (!cgc_ispunct(a0[v3]))\n
                        break;\n
                    continue;\n
                }\n
                v3 += 1;\n
                v4 = cgc_strlen(a0);\n
                *(&v1) = v3 < v4;\n
            } while (v3 < v4);\n
        }\n
        v5 = ~(v1);\n
        v1 = v5 & 1;\n
        return v1;\n
    }\n
}\n
", "4214646:sub_404f76": null, "4214733:sub_404fcd": null, "4214736:cgc_validate_zip": "long long cgc_validate_zip(char *a0)\n
{\n
    void* v2;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rbp\n
    unsigned long long v4;  // rax\n
\n
    if (cgc_strlen(a0) != 5)\n
    {\n
        return 0;\n
    }\n
    else if (!cgc_isdigit(*(a0)))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v3 = v2;\n
            if (v2 == 4)\n
                break;\n
            v4 = cgc_isdigit(a0[1 + v2]);\n
            v2 += 1;\n
            if (!v4)\n
                break;\n
        }\n
        return 4 <= v3;\n
    }\n
}\n
", "4214830:sub_40502e": null, "4214832:cgc_validate_phone": "long long cgc_validate_phone(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rbx\n
    unsigned long v5;  // rdi\n
\n
    v0 = v2;\n
    if (cgc_strlen(a0) != 12)\n
        return 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v5 = a0[v4];\n
        if ((v4 & 2147483643) == 3)\n
        {\n
            if (v5 != 45)\n
                break;\n
        }\n
        else\n
        {\n
            if (!cgc_isdigit(v5))\n
                break;\n
        }\n
        v4 += 1;\n
        if (v4 == 12)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4214859:sub_40504b": null, "4214923:sub_40508b": null, "4214928:cgc_validate_sex": "long long cgc_validate_sex(char *a0)\n
{\n
    if (cgc_strlen(a0) == 1)\n
        return *(a0) == 70 | *(a0) == 77;\n
    return 0;\n
}\n
", "4214967:sub_4050b7": null, "4214976:cgc_validate_yes_no": "long long cgc_validate_yes_no(char *a0)\n
{\n
    if (cgc_strlen(a0) == 1)\n
        return *(a0) == 78 | *(a0) == 89;\n
    return 0;\n
}\n
", "4215015:sub_4050e7": null, "4215024:cgc_validate_gpa": "long long cgc_validate_gpa(char a0[2])\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rbx\n
\n
    v0 = v2;\n
    if (cgc_strlen(a0) != 4)\n
        return 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 != 1)\n
        {\n
            if (!cgc_isdigit(a0[v4]))\n
                break;\n
        }\n
        else\n
        {\n
            if (a0[1] != 46)\n
                break;\n
        }\n
        v4 += 1;\n
        if (v4 == 4)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4215051:sub_40510b": null, "4215110:sub_405146": null, "4215120:cgc_init_af86": "extern char address;\n
extern char background;\n
extern char candidate;\n
extern char city;\n
extern char contact;\n
extern char dob_day;\n
extern char dob_month;\n
extern char dob_year;\n
extern char drugz;\n
extern char ecity;\n
extern char education;\n
extern char eem;\n
extern char eey;\n
extern char employeer;\n
extern char employment;\n
extern char esm;\n
extern char estate;\n
extern char estreet;\n
extern char esy;\n
extern char eye_color;\n
extern char ezip;\n
extern char fin;\n
extern char final;\n
extern char first_name;\n
extern void* g_409108;\n
extern unsigned long long g_409110;\n
extern unsigned long long g_409118;\n
extern unsigned long long g_409130;\n
extern unsigned long long g_409138;\n
extern unsigned long long g_409140;\n
extern unsigned long long g_409158;\n
extern unsigned long long g_409160;\n
extern unsigned long long g_409168;\n
extern unsigned long long g_409180;\n
extern unsigned long long g_409188;\n
extern unsigned long long g_409190;\n
extern unsigned long long g_4091a8;\n
extern unsigned long long g_4091b0;\n
extern unsigned long long g_4091b8;\n
extern unsigned long long g_4091d0;\n
extern unsigned long long g_4091d8;\n
extern unsigned long long g_4091e0;\n
extern void* g_409210;\n
extern unsigned long long g_409218;\n
extern void* g_409248;\n
extern unsigned long long g_409250;\n
extern void* g_409280;\n
extern unsigned long long g_409288;\n
extern void* g_4092b8;\n
extern unsigned long long g_4092c0;\n
extern void* g_4092f0;\n
extern unsigned long long g_4092f8;\n
extern void* g_409328;\n
extern unsigned long long g_409330;\n
extern unsigned long long g_409360;\n
extern unsigned long long g_409368;\n
extern unsigned long long g_409398;\n
extern unsigned long long g_4093a0;\n
extern unsigned long long g_4093d0;\n
extern unsigned long long g_4093d8;\n
extern unsigned long long g_409408;\n
extern unsigned long long g_409410;\n
extern unsigned long long g_409440;\n
extern unsigned long long g_409448;\n
extern unsigned long long g_409478;\n
extern unsigned long long g_409480;\n
extern unsigned long long g_4094b0;\n
extern unsigned long long g_4094b8;\n
extern unsigned long long g_4094e8;\n
extern unsigned long long g_4094f0;\n
extern unsigned long long g_409520;\n
extern unsigned long long g_409528;\n
extern unsigned long long g_409558;\n
extern unsigned long long g_409560;\n
extern unsigned long long g_409590;\n
extern unsigned long long g_409598;\n
extern unsigned long long g_4095c8;\n
extern void* g_4095d0;\n
extern unsigned long long g_409600;\n
extern unsigned long long g_409608;\n
extern unsigned long long g_409638;\n
extern unsigned long long g_409640;\n
extern unsigned long long g_409670;\n
extern void* g_409678;\n
extern unsigned long long g_4096a8;\n
extern unsigned long long g_4096b0;\n
extern unsigned long long g_4096e0;\n
extern unsigned long long g_4096e8;\n
extern unsigned long long g_409718;\n
extern unsigned long long g_409720;\n
extern unsigned long long g_409750;\n
extern unsigned long long g_409758;\n
extern unsigned long long g_409788;\n
extern unsigned long long g_409790;\n
extern unsigned long long g_4097c0;\n
extern void* g_4097c8;\n
extern unsigned long long g_4097f8;\n
extern unsigned long long g_409800;\n
extern unsigned long long g_409830;\n
extern unsigned long long g_409838;\n
extern unsigned long long g_409868;\n
extern unsigned long long g_409870;\n
extern unsigned long long g_4098a0;\n
extern unsigned long long g_4098a8;\n
extern unsigned long long g_4098d8;\n
extern unsigned long long g_4098e0;\n
extern unsigned long long g_409910;\n
extern unsigned long long g_409918;\n
extern unsigned long long g_409948;\n
extern unsigned long long g_409950;\n
extern unsigned long long g_409980;\n
extern unsigned long long g_409988;\n
extern unsigned long long g_4099b8;\n
extern unsigned long long g_4099c0;\n
extern unsigned long long g_4099f0;\n
extern unsigned long long g_4099f8;\n
extern unsigned long long g_409a28;\n
extern void* g_409a30;\n
extern unsigned long long g_409a60;\n
extern unsigned long long g_409a68;\n
extern unsigned long long g_409a98;\n
extern unsigned long long g_409aa0;\n
extern unsigned long long g_409ad0;\n
extern unsigned long long g_409ad8;\n
extern unsigned long long g_409b08;\n
extern unsigned long long g_409b10;\n
extern unsigned long long g_409b40;\n
extern unsigned long long g_409b48;\n
extern unsigned long long g_409b78;\n
extern unsigned long long g_409b80;\n
extern unsigned long long g_409bb0;\n
extern unsigned long long g_409bb8;\n
extern unsigned long long g_409be8;\n
extern unsigned long long g_409bf0;\n
extern unsigned long long g_409c20;\n
extern unsigned long long g_409c28;\n
extern unsigned long long g_409c58;\n
extern unsigned long long g_409c60;\n
extern unsigned long long g_409c90;\n
extern unsigned long long g_409c98;\n
extern unsigned long long g_409cc8;\n
extern unsigned long long g_409cd0;\n
extern unsigned long long g_409d00;\n
extern void* g_409d08;\n
extern unsigned long long g_409d38;\n
extern void* g_409d40;\n
extern unsigned long long g_409ec8;\n
extern void* g_409ed0;\n
extern char gpa;\n
extern char hair_color;\n
extern char height_feet;\n
extern char height_inches;\n
extern char highest_edu;\n
extern char hphone;\n
extern char last_name;\n
extern char major;\n
extern char middle_name;\n
extern char mim;\n
extern char miy;\n
extern char owned;\n
extern char pemail;\n
extern char school_name;\n
extern char semail;\n
extern char sex;\n
extern char sphone;\n
extern char state;\n
extern char street;\n
extern char suffix;\n
extern char sup_first_name;\n
extern char sup_last_name;\n
extern char sup_title;\n
extern char wcity;\n
extern char weight;\n
extern char wem;\n
extern char wemail;\n
extern char wey;\n
extern char wphone;\n
extern char wsm;\n
extern char wstate;\n
extern char wstreet;\n
extern char wsy;\n
extern char wzip;\n
extern char zip;\n
\n
long long cgc_init_af86()\n
{\n
    g_409108 = 0;\n
    g_409110 = &contact;\n
    g_409130 = &candidate;\n
    g_409138 = &address;\n
    g_409158 = &contact;\n
    g_409160 = &education;\n
    g_409180 = &address;\n
    g_409188 = &employment;\n
    g_4091a8 = &education;\n
    g_4091b0 = &final;\n
    g_4091d0 = &employment;\n
    g_4091d8 = &fin;\n
    g_409ec8 = &final;\n
    g_409ed0 = 0;\n
    g_409118 = &last_name;\n
    g_409140 = &pemail;\n
    g_409168 = &mim;\n
    g_409190 = &highest_edu;\n
    g_4091b8 = &employeer;\n
    g_4091e0 = &drugz;\n
    g_409210 = 0;\n
    g_409218 = &first_name;\n
    g_409360 = &last_name;\n
    g_409368 = &middle_name;\n
    g_409398 = &first_name;\n
    g_4093a0 = &suffix;\n
    g_4093d0 = &middle_name;\n
    g_4093d8 = &dob_month;\n
    g_409408 = &suffix;\n
    g_409410 = &dob_day;\n
    g_409440 = &dob_month;\n
    g_409448 = &dob_year;\n
    g_409478 = &dob_day;\n
    g_409480 = &height_feet;\n
    g_4094b0 = &dob_year;\n
    g_4094b8 = &height_inches;\n
    g_4094e8 = &height_feet;\n
    g_4094f0 = &weight;\n
    g_409520 = &height_inches;\n
    g_409528 = &sex;\n
    g_409558 = &weight;\n
    g_409560 = &hair_color;\n
    g_409590 = &sex;\n
    g_409598 = &eye_color;\n
    g_4095c8 = &hair_color;\n
    g_4095d0 = 0;\n
    g_409248 = 0;\n
    g_409250 = &wemail;\n
    g_409600 = &pemail;\n
    g_409608 = &hphone;\n
    g_409638 = &wemail;\n
    g_409640 = &wphone;\n
    g_409670 = &hphone;\n
    g_409678 = 0;\n
    g_409280 = 0;\n
    g_409288 = &miy;\n
    g_4096a8 = &mim;\n
    g_4096b0 = &street;\n
    g_4096e0 = &miy;\n
    g_4096e8 = &city;\n
    g_409718 = &street;\n
    g_409720 = &state;\n
    g_409750 = &city;\n
    g_409758 = &zip;\n
    g_409788 = &state;\n
    g_409790 = &owned;\n
    g_4097c0 = &zip;\n
    g_4097c8 = 0;\n
    g_4092b8 = 0;\n
    g_4092c0 = &esm;\n
    g_4097f8 = &highest_edu;\n
    g_409800 = &esy;\n
    g_409830 = &esm;\n
    g_409838 = &eem;\n
    g_409868 = &esy;\n
    g_409870 = &eey;\n
    g_4098a0 = &eem;\n
    g_4098a8 = &school_name;\n
    g_4098d8 = &eey;\n
    g_4098e0 = &estreet;\n
    g_409910 = &school_name;\n
    g_409918 = &ecity;\n
    g_409948 = &estreet;\n
    g_409950 = &estate;\n
    g_409980 = &ecity;\n
    g_409988 = &ezip;\n
    g_4099b8 = &estate;\n
    g_4099c0 = &gpa;\n
    g_4099f0 = &ezip;\n
    g_4099f8 = &major;\n
    g_409a28 = &gpa;\n
    g_409a30 = 0;\n
    g_4092f0 = 0;\n
    g_4092f8 = &wsm;\n
    g_409a60 = &employeer;\n
    g_409a68 = &wsy;\n
    g_409a98 = &wsm;\n
    g_409aa0 = &wem;\n
    g_409ad0 = &wsy;\n
    g_409ad8 = &wey;\n
    g_409b08 = &wem;\n
    g_409b10 = &wstreet;\n
    g_409b40 = &wey;\n
    g_409b48 = &wcity;\n
    g_409b78 = &wstreet;\n
    g_409b80 = &wstate;\n
    g_409bb0 = &wcity;\n
    g_409bb8 = &wzip;\n
    g_409be8 = &wstate;\n
    g_409bf0 = &sup_last_name;\n
    g_409c20 = &wzip;\n
    g_409c28 = &sup_first_name;\n
    g_409c58 = &sup_last_name;\n
    g_409c60 = &sup_title;\n
    g_409c90 = &sup_first_name;\n
    g_409c98 = &sphone;\n
    g_409cc8 = &sup_title;\n
    g_409cd0 = &semail;\n
    g_409d00 = &sphone;\n
    g_409d08 = 0;\n
    g_409328 = 0;\n
    g_409330 = &background;\n
    g_409d38 = &drugz;\n
    g_409d40 = 0;\n
    return &background;\n
}\n
", "4216458:sub_40568a": null, "4216464:cgc_handle_next": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[64];\n
    struct struct_1 *field_50;\n
    struct struct_0 *field_58;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_2 *field_10;\n
    char padding_18[8];\n
    char field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[16];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    unsigned long long field_18;\n
} struct_2;\n
\n
long long cgc_handle_next(struct_3 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rcx, Other Possible Types: char, unsigned long\n
    struct_3 *v4;  // rbx\n
    char *v5;  // rdi\n
    unsigned long long v6[4];  // rcx\n
    char v7;  // al\n
    void* **v9;  // rsi, Other Possible Types: unsigned long\n
    struct_0 *v10;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v11;  // rcx\n
\n
    v0 = v2;\n
    v3 = a0->field_50;\n
    if (!v3->field_0)\n
        return 1;\n
    v4 = a0;\n
    if (!v3->field_20)\n
    {\n
        v5 = v3->field_10->field_0;\n
        if (!v5)\n
        {\n
            a2 = v4->field_8;\n
            v9 = \"%s\";\n
LABEL_40575b:\n
            cgc_fdprintf(1, v9, a2, v3, a4);\n
        }\n
        else if (cgc_strncmp(v5, \"Fin\", 3))\n
        {\n
            a2 = v4->field_50->field_10->field_0;\n
            v9 = \"\\n
%s Form\\n
\";\n
            goto LABEL_40575b;\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, \"\\n
Final Questions\\n
\", 3, v3, a4);\n
        }\n
        cgc_fdprintf(1, \"You must complete the previous page before proceeding to this page\\n
\", a2, v3, a4);\n
        return 1;\n
    }\n
    else\n
    {\n
        v7 = 1;\n
        if (!v3)\n
        {\n
            *(&v3) = 1;\n
        }\n
        else\n
        {\n
            v6 = v3->field_10;\n
            if (!v6)\n
            {\n
                v3 = 0;\n
            }\n
            else\n
            {\n
                a0->field_50 = &v6;\n
                a0->field_58 = v6[3];\n
                v3 = 0;\n
                v7 = 0;\n
            }\n
        }\n
        if (v3)\n
        {\n
            return (v3 ^ 1) * 3 - 1;\n
        }\n
        else if (v7)\n
        {\n
            return (v3 ^ 1) * 3 - 1;\n
        }\n
        else\n
        {\n
            v10 = a0->field_58;\n
            if (v10)\n
            {\n
                while (true)\n
                {\n
                    v11 = *((v10 + 40));\n
                    if (!v11)\n
                        break;\n
                    if (!*((v10 + 16)))\n
                        break;\n
                    v10 = v11;\n
                    a0->field_58 = v11;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4216733:sub_40579d": null, "4216736:cgc_handle_exit": "long long cgc_handle_exit(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // r9\n
\n
    v0 = v2;\n
    cgc_fdprintf(1, \"Thank you!\\n
\", a2, a3, a4);\n
    cgc__terminate(1);\n
    return cgc_handle_help(1, \"Thank you!\\n
\", a2, a3, a4, v3);\n
}\n
", "4216768:cgc_handle_help": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_handle_help(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_fdprintf(1, \"%s\", *(&a0->field_10), a3, a4);\n
    return 1;\n
}\n
", "4216799:sub_4057df": null, "4216800:cgc_handle_prev": "typedef struct struct_2 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
    unsigned long long field_58;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
    struct struct_0 *field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
long long cgc_handle_prev(struct_2 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_3 *v1;  // rax\n
    struct_0 *v2;  // rcx\n
\n
    v1 = a0->field_50;\n
    if (!v1)\n
        return 4294967295;\n
    v2 = v1->field_8;\n
    if (v2)\n
    {\n
        a0->field_50 = &v2->padding_0[0];\n
        a0->field_58 = v2->field_18;\n
        return 1;\n
    }\n
    else if (cgc_strncmp(v1->field_0, \"Fin\", 3))\n
    {\n
        cgc_fdprintf(1, \"\\n
%s Form\\n
\", *(&a0->field_50->field_0), v2, a4);\n
        return 0;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"\\n
Final Questions\\n
\", 3, v2, a4);\n
        return 0;\n
    }\n
}\n
", "4216927:sub_40585f": null, "4216928:cgc_handle_update": "typedef struct struct_3 {\n
    char padding_0[80];\n
    struct struct_2 *field_50;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
    char field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    char field_18;\n
    char padding_19[15];\n
    struct struct_1 *field_28;\n
    struct struct_0 *field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_handle_update(struct_3 *a0, char *a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_2 *v1;  // rax\n
    void* **v3;  // rsi, Other Possible Types: unsigned long\n
    struct_1 *v4;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v5;  // rbp\n
    void* **v6;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rdi\n
    unsigned long v9;  // rbp\n
    unsigned long v10;  // rdi\n
\n
    v1 = a0->field_50;\n
    if (!v1->field_20)\n
    {\n
        v3 = \"Cannot update field until all fields are inputted\\n
\";\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return 1;\n
        v4 = v1->field_18;\n
        if (v4)\n
        {\n
            do\n
            {\n
                v5 = *(v4);\n
                if (!cgc_strncmp(v5, a1, cgc_strlen(v5)))\n
                {\n
                    v7 = cgc_malloc(0x1000);\n
                    if (!v7)\n
                        return 4294967295;\n
                    a2 = *(v4);\n
                    a3 = *((v4 + 8));\n
                    if (!a3)\n
                        cgc_fdprintf(1, \"%s: \", a2, a3, a4);\n
                    else\n
                        cgc_fdprintf(1, \"%s%s: \", a2, a3, a4);\n
                    if (cgc_read_line(v7) < 0)\n
                        return 4294967295;\n
                    if (!cgc_strlen(v7) && *((v4 + 24)))\n
                    {\n
                        cgc_free(v7);\n
                        v8 = *((v4 + 16));\n
                        if (v8)\n
                            cgc_free(v8);\n
                        *((v4 + 16)) = 0;\n
                        goto LABEL_4059e0;\n
                    }\n
                    if (!*((v4 + 48))(v7))\n
                    {\n
                        cgc_free(v7);\n
                        v6 = \"Bad input.\\n
\";\n
                        goto LABEL_4058bd;\n
                    }\n
                    v9 = *((v4 + 16));\n
                    if (v9)\n
                    {\n
                        v10 = *((v4 + 16));\n
                        if (!cgc_strncmp(v9, v7, cgc_strlen(v9)))\n
                        {\n
                            cgc_strcpy(v10, v7);\n
                            cgc_free(v7);\n
LABEL_4059e0:\n
                            return 1;\n
                        }\n
                        cgc_free(v10);\n
                    }\n
                    *((v4 + 16)) = v7;\n
                    goto LABEL_4059e0;\n
                }\n
                v4 = *((v4 + 40));\n
            } while (v4);\n
            goto LABEL_4058bd;\n
        }\n
        v6 = \"Could not find specified field\\n
\";\n
LABEL_4058bd:\n
        cgc_fdprintf(1, v6, a2, a3, a4);\n
        v3 = \"Update Unsuccessful\\n
\";\n
    }\n
    cgc_fdprintf(1, v3, a2, a3, a4);\n
    return 1;\n
}\n
", "4217322:sub_4059ea": null, "4217328:cgc_print_prompt": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[64];\n
    struct struct_1 *field_50;\n
    struct struct_3 *field_58;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[16];\n
    struct struct_0 *field_18;\n
    char field_20;\n
} struct_1;\n
\n
typedef struct struct_5 {\n
    struct struct_6 *field_0;\n
    char padding_8[8];\n
    struct struct_4 *field_10;\n
    char padding_18[16];\n
    struct struct_5 *field_28;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_8[32];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    struct struct_6 *field_0;\n
    char padding_8[16];\n
    struct struct_5 *field_18;\n
    char field_20;\n
} struct_6;\n
\n
typedef struct struct_4 {\n
    struct struct_4 *field_0;\n
    char padding_8[16];\n
    struct struct_5 *field_18;\n
    char field_20;\n
} struct_4;\n
\n
long long cgc_print_prompt(struct_2 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_2 *v1;  // r14\n
    struct_1 *v2;  // rdi\n
    struct_1 *v3;  // rax\n
    unsigned long long v4[2];  // rax\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    void* **v6;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rax\n
    unsigned long long v8;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v9;  // rdx\n
    struct_1 *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    struct_1 *v12;  // rdx, Other Possible Types: unsigned long\n
    struct_5 *v13;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    v2 = a0->field_50->field_0;\n
    if (!v2)\n
    {\n
        v9 = v1->field_8;\n
        v6 = \"%s\";\n
    }\n
    else\n
    {\n
        if (a1)\n
        {\n
            if (!cgc_strncmp(v2, \"Fin\", 3))\n
                cgc_fdprintf(1, \"\\n
Final Questions\\n
\", 3, a3, a4);\n
            else\n
                cgc_fdprintf(1, \"\\n
%s Form\\n
\", v1->field_50->field_0, a3, a4);\n
        }\n
        v3 = v1->field_50;\n
        if (v3->field_20)\n
        {\n
            v13 = v3->field_18;\n
            v10 = v1->field_50->field_0;\n
            if (!cgc_strncmp(v3->field_0, \"Edu\", 3))\n
            {\n
                v8 = \"\\n
*********Highest %s:*********\\n
\";\n
            }\n
            else\n
            {\n
                v7 = cgc_strncmp(v10, \"Emp\", 3);\n
                v10 = v1->field_50->field_0;\n
                if (!v7)\n
                {\n
                    v8 = \"\\n
*********Most Recent Employer:*********\\n
\";\n
                }\n
                else\n
                {\n
                    v11 = cgc_strncmp(v10, \"Fin\", 3);\n
                    v10 = v1->field_50;\n
                    v12 = *(v10);\n
                    v8 = (!v11 ? \"\\n
*********%s:*********\\n
\" : \"\\n
*********Final Screening:*********\\n
\");\n
                    goto LABEL_405b36;\n
                }\n
            }\n
            v12 = v10;\n
LABEL_405b36:\n
            cgc_fdprintf(1, v8, v12, v10, a4);\n
            if (v13)\n
            {\n
                do\n
                {\n
                    v12 = *(v13);\n
                    v10 = *((v13 + 16));\n
                    if (!v10)\n
                        cgc_fdprintf(1, \"%s=\\n
\", v12, v10, a4);\n
                    else\n
                        cgc_fdprintf(1, \"%s=%s\\n
\", v12, v10, a4);\n
                    v13 = *((v13 + 40));\n
                } while (v13);\n
            }\n
            v5 = cgc_fdprintf(1, \"\\n
Type **next to continue\\n
\", v12, v10, a4);\n
            return v5;\n
        }\n
        v4 = v1->field_58;\n
        v9 = v4[0];\n
        a3 = v4[1];\n
        if (a3)\n
        {\n
            v5 = cgc_fdprintf(1, \"%s%s: \", v9, a3, a4);\n
            return v5;\n
        }\n
        v6 = \"%s: \";\n
    }\n
    v5 = cgc_fdprintf(1, v6, v9, a3, a4);\n
    return v5;\n
}\n
", "4217682:sub_405b52": null, "4217769:sub_405ba9": null, "4217776:cgc_handle_line": "typedef struct struct_3 {\n
    char padding_0[80];\n
    struct struct_2 *field_50;\n
    struct struct_1 *field_58;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char field_18;\n
    char padding_19[15];\n
    unsigned long long field_28;\n
    struct struct_0 *field_30;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[32];\n
    char field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_handle_line(struct_3 *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    struct_3 *v2;  // r14\n
    unsigned long long v3;  // rbp, Other Possible Types: unsigned long\n
    struct_1 *v4;  // rcx\n
    unsigned long v5;  // rdi\n
    unsigned long v6;  // rbx\n
    struct_1 *v7;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v8;  // al, Other Possible Types: char\n
    struct_1 *v9;  // rax\n
    unsigned long long v10;  // rax\n
\n
    v2 = a0;\n
    if (!cgc_strncmp(\"**\", a1, 2) && cgc_handler_index(a1) >= 0)\n
    {\n
        v0 = cgc_malloc(cgc_strlen(a1) + 1);\n
        if (v0)\n
        {\n
            cgc_strcpy(v0, a1);\n
            v0[cgc_strlen(a1)] = 0;\n
            v6 = cgc_strsep(&v0, \" \");\n
            v3 = cgc_handler_index(v6);\n
            if (v3 >= 0)\n
                v3 = *(&a0->padding_0[32 + 8 * v3])(a0, v0);\n
            if (v6)\n
            {\n
                cgc_free(v6);\n
                return v3;\n
            }\n
            return v3;\n
        }\n
LABEL_405d28:\n
        return 4294967295;\n
    }\n
    if (a0->field_50->field_20)\n
        return 1;\n
    if (!a0->field_58)\n
        return 1;\n
    v4 = a0->field_58;\n
    if (cgc_strlen(a1))\n
    {\n
        if (!v4->field_30(a1))\n
        {\n
            v8 = 1;\n
            v7 = 0;\n
        }\n
        else\n
        {\n
            v5 = a0->field_58->field_10;\n
            if (v5)\n
                cgc_free(v5);\n
            v8 = cgc_malloc(cgc_strlen(a1) + 1);\n
            v7 = v2->field_58;\n
            *((v7 + 16)) = v8;\n
            if (!v8)\n
            {\n
                *(&v7) = 1;\n
                *(&v8) = 1;\n
            }\n
            else\n
            {\n
                cgc_strcpy(v8, a1);\n
                v7 = 0;\n
                v8 = 0;\n
            }\n
        }\n
        if (v7)\n
            return -(v7);\n
        if (v8)\n
            return -(v7);\n
    }\n
    else if (!v4->field_18)\n
    {\n
        goto LABEL_405d37;\n
    }\n
    v9 = v2->field_58;\n
    if (v9)\n
    {\n
        v10 = v9->field_28;\n
        if (v10)\n
            v2->field_58 = v10;\n
        else\n
            v2->field_50->field_20 = 1;\n
LABEL_405d37:\n
        return 0;\n
    }\n
    goto LABEL_405d28;\n
}\n
", "4218180:sub_405d44": null, "4218192:cgc_print_greeting": "long long cgc_print_greeting(unsigned int *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax\n
\n
    cgc_fdprintf(1, \"%s\", *(&a0), a3, a4);\n
    return v1;\n
}\n
", "4218217:sub_405d69": null, "4218224:cgc_handler_index": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
extern unsigned long long cmd_lbls;\n
\n
long long cgc_handler_index(unsigned long a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v0;  // [bp-0x38]\n
    struct_0 *v2;  // r12, Other Possible Types: unsigned long\n
    void* v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long v4;  // rbx\n
    unsigned long v5;  // r14, Other Possible Types: unsigned long long\n
    unsigned long long *v6;  // r13, Other Possible Types: unsigned long\n
\n
    v2 = a0 - 1;\n
    v3 = 0;\n
    while (true)\n
    {\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (tmp_7 != 42)\n
            break;\n
        v3 += 1;\n
        if (false)\n
            break;\n
    }\n
    v6 = &cmd_lbls;\n
    v5 = 0;\n
    while (true)\n
    {\n
        v4 = *(v6);\n
        cgc_memcpy(&v0, v2, cgc_strlen(v4));\n
        (&v0)[cgc_strlen(v4)] = 0;\n
        if (!cgc_strncasecmp(&v0, v4, cgc_strlen(v4)))\n
            return v5;\n
        v5 += 1;\n
        v6 += 8;\n
        if (v5 == 5)\n
            return 4294967295;\n
    }\n
}\n
", "4218405:sub_405e25": null, "4218416:cgc_read_line": "long long cgc_read_line(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    char *v4;  // r12\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = v2;\n
    v3 = 0;\n
    do\n
    {\n
        v4 = a0 + v3;\n
        if (cgc_receive(a0, v5, v6, v7) && !v0)\n
            return 4294967295;\n
        if (*(v4) == 10)\n
        {\n
            *((a0 + v3)) = 0;\n
            goto LABEL_405e8d__1;\n
        }\n
        v3 += 1;\n
    } while (v3 != 4095);\n
    v3 = 4095;\n
LABEL_405e8d__1:\n
    return v3 / 0x80000000;\n
}\n
", "4218521:sub_405e99": null, "4218528:main": "extern void cgc_af86;\n
\n
int main(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x1018]\n
    void* v2;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_init_af86();\n
    cgc_print_greeting(&cgc_af86, a1, a2, a3, a4);\n
    v2 = 0;\n
    cgc_print_prompt(&cgc_af86, 1, 0, a3, a4);\n
    cgc_memset(&v0, 0, 0x1000);\n
    if (cgc_read_line(&v0) < 0)\n
        return 0;\n
    while (true)\n
    {\n
        v3 = cgc_handle_line(&cgc_af86, &v0);\n
        if (v3 < 0)\n
            return 0;\n
        if (v3 != 1)\n
        {\n
            if (v3 == 3)\n
            {\n
                v2 = 0;\n
                v3 = 1;\n
            }\n
            else\n
            {\n
                if (v3 == 2)\n
                    v2 = 1;\n
                v3 = 0;\n
            }\n
        }\n
        cgc_print_prompt(&cgc_af86, v3, v2, a3, a4);\n
        cgc_memset(&v0, 0, 0x1000);\n
        if (cgc_read_line(&v0) < 0)\n
            return 0;\n
    }\n
}\n
", "4218616:sub_405ef8": null, "4218702:sub_405f4e": null, "4218728:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_allocate": null, "5242912:cgc_deallocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}