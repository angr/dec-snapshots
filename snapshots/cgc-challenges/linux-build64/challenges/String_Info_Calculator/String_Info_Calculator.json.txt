{"4202496:_init": "extern struct_0 *g_407230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_407230;\n
    if (g_407230)\n
        v1 = g_407230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_407250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_407250;\n
    goto *(4223576);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4223552);\n
}\n
", "4202640:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202677:sub_4020b5": null, "4202678:sub_4020b6": null, "4202688:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_407228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202729:sub_4020e9": null, "4202736:register_tm_clones": "extern unsigned long long g_407238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202793:sub_402129": null, "4202800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_407240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_407240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202853:sub_402165": null, "4202857:sub_402169": null, "4202864:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202873:sub_402179": null, "4202880:cgc_is_non_printable": "long long cgc_is_non_printable(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!cgc_is_printable(a0))\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202939:sub_4021bb": null, "4202944:cgc_is_printable": "long long cgc_is_printable(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (cgc_is_digit(a0) != 1 && cgc_is_letter(a0) != 1 && cgc_is_symbol(a0) != 1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203056:cgc_is_digit": "long long cgc_is_digit(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (48 <= a0 && 57 >= a0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203119:sub_40226f": null, "4203120:cgc_is_letter": "long long cgc_is_letter(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (cgc_is_upper(a0) != 1 && cgc_is_lower(a0) != 1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203207:sub_4022c7": null, "4203216:cgc_is_symbol": "long long cgc_is_symbol(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (33 <= a0 && a0 <= 47)\n
        goto LABEL_402352;\n
    if (58 <= a0 && a0 <= 64)\n
        goto LABEL_402352;\n
    if (91 <= a0 && a0 <= 96)\n
        goto LABEL_402352;\n
    if (123 > a0)\n
    {\n
LABEL_40235b:\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!(a0 <= 126))\n
    {\n
        goto LABEL_40235b;\n
    }\n
LABEL_402352:\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203365:sub_402365": null, "4203376:cgc_is_upper": "long long cgc_is_upper(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (65 <= a0 && 90 >= a0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203439:sub_4023af": null, "4203440:cgc_is_lower": "long long cgc_is_lower(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (97 <= a0 && 122 >= a0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203503:sub_4023ef": null, "4203504:cgc_isalnum": "extern char type_flags;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 7);\n
}\n
", "4203549:sub_40241d": null, "4203552:cgc_isalpha": "extern char type_flags;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 6);\n
}\n
", "4203597:sub_40244d": null, "4203600:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 0)\n
        v0 = a0 < 128;\n
    return v0 & 1;\n
}\n
", "4203645:sub_40247d": null, "4203648:cgc_isblank": "extern char type_flags;\n
\n
long long cgc_isblank(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 64);\n
}\n
", "4203693:sub_4024ad": null, "4203696:cgc_iscntrl": "extern char type_flags;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 32);\n
}\n
", "4203741:sub_4024dd": null, "4203744:cgc_isdigit": "extern char type_flags;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 1);\n
}\n
", "4203789:sub_40250d": null, "4203792:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 > 32)\n
        v0 = a0 <= 126;\n
    return v0 & 1;\n
}\n
", "4203834:sub_40253a": null, "4203840:cgc_islower": "extern char type_flags;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 4);\n
}\n
", "4203885:sub_40256d": null, "4203888:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 <= 126;\n
    return v0 & 1;\n
}\n
", "4203930:sub_40259a": null, "4203936:cgc_ispunct": "extern char type_flags;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isprint(a0))\n
    {\n
        v0 = !((&type_flags)[a0 & 255] & 15);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4204019:sub_4025f3": null, "4204032:cgc_isspace": "extern char type_flags;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 8);\n
}\n
", "4204077:sub_40262d": null, "4204080:cgc_isupper": "extern char type_flags;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 2);\n
}\n
", "4204125:sub_40265d": null, "4204128:cgc_isxdigit": "extern char type_flags;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 16);\n
}\n
", "4204173:sub_40268d": null, "4204176:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & -33;\n
    return v0;\n
}\n
", "4204233:sub_4026c9": null, "4204240:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4204297:sub_402709": null, "4204304:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v6);\n
            if (v0)\n
            {\n
                v4 = 3;\n
                return v4;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204490:sub_4027ca": null, "4204496:cgc_receive_all": "long long cgc_receive_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    for (v1 = 0; v2 < a2; v2 = v1 + v2)\n
    {\n
        v0 = cgc_receive(a0, a1, a2, v7);\n
        if (v0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!v1)\n
            break;\n
    }\n
    v5 = v2;\n
    return v5;\n
}\n
", "4204647:sub_402867": null, "4204656:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v1))\n
                v0 = *(v2) == *(v1);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4204795:sub_4028fb": null, "4204800:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (*(v2) == *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = *(v2) - *(v1);\n
            return v3;\n
        }\n
    }\n
}\n
", "4204930:sub_402982": null, "4204944:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_24;  // tmp #24\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = a2; v0; v0 -= 1)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_24 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        *(v5) = tmp_24;\n
    }\n
    return v2;\n
}\n
", "4205023:sub_4029df": null, "4205024:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    int tmp_22;  // tmp #22\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    char *v4;  // rcx\n
\n
    v1 = a1;\n
    v0 = a0;\n
    do\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        tmp_22 = *(v3);\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = *(v3);\n
    } while (tmp_22);\n
    return a0;\n
}\n
", "4205101:sub_402a2d": null, "4205104:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4205167:sub_402a6f": null, "4205168:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x15]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v3))\n
            v2 = *(v3) != a1;\n
        if (!(v2 & 1))\n
            break;\n
        v3 += 1;\n
    }\n
    if (*(v3))\n
    {\n
        v1 = v3;\n
        return v1;\n
    }\n
    if (a1)\n
        v0 = 0;\n
    else\n
        v0 = v3;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4205321:sub_402b09": null, "4205328:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    unsigned long v3;  // [bp-0xc0]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    unsigned long v16;  // [bp-0x20]\n
    unsigned long v17;  // [bp-0x18]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v6 = v20;\n
        v7 = v21;\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
    }\n
    v5 = v28;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 8;\n
    return cgc_vprintf(a0, &v14);\n
}\n
", "4205479:sub_402ba7": null, "4205488:cgc_vprintf": "extern unsigned long long cgc_stdout;\n
\n
long long cgc_vprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    return cgc_vfprintf(cgc_stdout, a0, a1);\n
}\n
", "4205530:sub_402bda": null, "4205536:cgc_vfprintf": "long long cgc_vfprintf(unsigned int *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc_vdprintf(*(a0), a1, a2);\n
}\n
", "4205581:sub_402c0d": null, "4205584:cgc_fprintf": "long long cgc_fprintf(unsigned int *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xd8]\n
    unsigned long v2;  // [bp-0xd0]\n
    unsigned long v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    int v5;  // [bp-0xb8]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    unsigned int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned long v15;  // [bp-0x30]\n
    unsigned long v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    char v18;  // al\n
    int v19;  // xmm0\n
    int v20;  // xmm1\n
    int v21;  // xmm2\n
    int v22;  // xmm3\n
    int v23;  // xmm4\n
    int v24;  // xmm5\n
    int v25;  // xmm6\n
    int v26;  // xmm7\n
    unsigned long v27;  // r9\n
\n
    if (v18)\n
    {\n
        v5 = v19;\n
        v6 = v20;\n
        v7 = v21;\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
    }\n
    v4 = v27;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v16 = &v0;\n
    v15 = &v17;\n
    v14 = 48;\n
    v13 = 16;\n
    return cgc_vfprintf(a0, a1, &v13);\n
}\n
", "4205739:sub_402cab": null, "4205744:cgc_vdprintf": "long long cgc_vdprintf(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1030]\n
    unsigned int v1;  // [bp-0x102c]\n
    unsigned int v2;  // [bp-0x1028]\n
\n
    v0 = a0;\n
    v1 = 0;\n
    v2 = 0;\n
    cgc_printf_core(cgc_fd_printer, &v0, a1, a2);\n
    return v2;\n
}\n
", "4205837:sub_402d0d": null, "4205840:cgc_printf_core": "long long cgc_printf_core(struct struct_0 **a0, unsigned long a1, char *a2, struct struct_1 **a3)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    unsigned int v1;  // [bp-0x110]\n
    unsigned int v2;  // [bp-0x10c]\n
    unsigned int v3;  // [bp-0x108]\n
    unsigned int v4;  // [bp-0x104]\n
    unsigned long v5;  // [bp-0x100]\n
    unsigned long v6;  // [bp-0xf8]\n
    unsigned long v7;  // [bp-0xf0]\n
    unsigned int v8;  // [bp-0xe4]\n
    unsigned long v9;  // [bp-0xe0]\n
    unsigned long v10;  // [bp-0xd8]\n
    unsigned int v11;  // [bp-0xcc]\n
    char *v12;  // [bp-0xc8]\n
    unsigned int v13;  // [bp-0xc0]\n
    unsigned int v14;  // [bp-0xbc]\n
    char *v15;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct struct_1 **v16;  // [bp-0xad]\n
    unsigned int v17;  // [bp-0xac]\n
    unsigned int v18;  // [bp-0xa8]\n
    unsigned int v19;  // [bp-0xa4]\n
    unsigned int v20;  // [bp-0xa0]\n
    unsigned int v21;  // [bp-0x9c]\n
    unsigned int v22;  // [bp-0x98]\n
    unsigned int v23;  // [bp-0x94]\n
    char *v24;  // [bp-0x90], Other Possible Types: unsigned long\n
    char v25;  // [bp-0x88]\n
    unsigned int v26;  // [bp-0x60]\n
    unsigned int v27;  // [bp-0x5c]\n
    struct struct_1 **v28;  // [bp-0x58]\n
    unsigned int v29;  // [bp-0x50]\n
    unsigned int v30;  // [bp-0x4c]\n
    unsigned int v31;  // [bp-0x48], Other Possible Types: char\n
    unsigned int v32;  // [bp-0x44]\n
    unsigned int v33;  // [bp-0x40]\n
    char v34;  // [bp-0x39]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30], Other Possible Types: char\n
    unsigned int v38;  // [bp-0x2c]\n
    struct struct_1 **v39;  // [bp-0x28]\n
    char *v40;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v41;  // [bp-0x18]\n
    struct struct_0 **v42;  // [bp-0x10]\n
    char *v44;  // rax\n
    char *v45;  // rax\n
    char *v46;  // rax\n
    unsigned int v47;  // eax\n
    char *v48;  // rax\n
    char *v49;  // rax\n
    unsigned int v50;  // eax\n
    char *v51;  // rcx\n
    char *v53;  // rax\n
    char *v54;  // rax\n
    char *v55;  // rax\n
    unsigned int v56;  // eax\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    char *v60;  // rax\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned long v63;  // rcx\n
    char *v64;  // rcx\n
    char *v65;  // rcx\n
    char *v66;  // rcx\n
    char *v67;  // rcx\n
    char *v68;  // rcx\n
    char *v69;  // rcx\n
    char *v70;  // rcx\n
    char *v71;  // rcx\n
    unsigned long long v73;  // rsi\n
    void* v74;  // rdx\n
    unsigned long v75;  // rdi\n
    unsigned long long v77;  // rsi\n
    void* v78;  // rdx\n
    unsigned long v79;  // rdi\n
    char *v80;  // rcx\n
    char *v81;  // rcx\n
    char *v82;  // rcx\n
    char *v83;  // rcx\n
    char *v84;  // rax\n
\n
    v42 = a0;\n
    v41 = a1;\n
    v40 = a2;\n
    v39 = a3;\n
    v38 = 0;\n
    v36 = 0;\n
    v35 = 0;\n
    v33 = 0;\n
    v28 = v39;\n
    v44 = v40;\n
    v40 = v44 + 1;\n
    v34 = *(v44);\n
    while (v34)\n
    {\n
        v10 = v38;\n
        switch (v10)\n
        {\n
        case 0:\n
            switch (v34)\n
            {\n
            case 37:\n
                v38 = 2;\n
                break;\n
            case 92:\n
                v38 = 1;\n
                break;\n
            default:\n
                v42(v34, v41, 0, 16480 CONCAT v34);\n
            }\n
            goto LABEL_404acd;\n
        case 1:\n
            v9 = v34 - 34;\n
            switch (v9)\n
            {\n
            case 0: case 5: case 58:\n
                v42(v34, v41, 0, 16482 CONCAT v34);\n
                break;\n
            case 64:\n
                v42(8, v41, 0);\n
                break;\n
            case 68:\n
                v42(12, v41, 0);\n
                break;\n
            case 76:\n
                v42(10, v41, 0);\n
                break;\n
            case 80:\n
                v42(13, v41, 0);\n
                break;\n
            case 82:\n
                v42(9, v41, 0);\n
                break;\n
            case 84:\n
                v42(11, v41, 0);\n
                break;\n
            case 86:\n
                v38 = 4;\n
                v36 = 0;\n
                v35 = 0;\n
                break;\n
            default:\n
                if (v34 > 48 && v34 < 56)\n
                {\n
                    v38 = 3;\n
                    v36 = 1;\n
                    v35 = v34 - 48;\n
                    goto LABEL_402f17;\n
                }\n
                v51 = v40;\n
                v42(*(v51), v41, 0, v51);\n
LABEL_402f17:\n
                if (v38 == 1)\n
                    v38 = 0;\n
                goto LABEL_404acd;\n
            }\n
        case 2:\n
            if (v34 != 37)\n
            {\n
                v38 = 15;\n
                v37 = 0;\n
                v40 -= 1;\n
            }\n
            else\n
            {\n
                v42(v34, v41, 0, 16480 CONCAT v34);\n
                v38 = 0;\n
            }\n
            goto LABEL_404acd;\n
        case 3:\n
            if (v34 > 48 && v34 < 56 && v36 < 3)\n
            {\n
                v36 += 1;\n
                v35 = v35 * 8 + v34 - 48;\n
                if (v36 == 3)\n
                {\n
                    v42(v35, v41, 0, v35);\n
                    v38 = 0;\n
                }\n
                goto LABEL_403008;\n
            }\n
            v42(v35, v41, 0, v35);\n
            v38 = 0;\n
            v40 -= 1;\n
LABEL_403008:\n
            goto LABEL_404acd;\n
        case 4:\n
            if (cgc_isxdigit(v34) && v36 < 2)\n
            {\n
                v36 += 1;\n
                v8 = v35 * 16;\n
                v35 = v8 + cgc_hex_value_of(v34);\n
                if (v36 == 2)\n
                {\n
                    v42(v35, v41, 0, v35);\n
                    v38 = 0;\n
                }\n
                goto LABEL_4030a1;\n
            }\n
            v42(v35, v41, 0, v35);\n
            v38 = 0;\n
            v40 -= 1;\n
LABEL_4030a1:\n
            goto LABEL_404acd;\n
        case 5:\n
            v7 = v34 - 32;\n
            switch (v7)\n
            {\n
            case 0:\n
                v37 |= 8;\n
                break;\n
            case 3:\n
                v37 |= 16;\n
                break;\n
            case 7:\n
                v37 |= 1;\n
                break;\n
            case 11:\n
                v37 |= 4;\n
                break;\n
            case 13:\n
                v37 |= 2;\n
                break;\n
            case 16:\n
                v37 |= 32;\n
                break;\n
            default:\n
                v40 -= 1;\n
                if ((v37 & 34) == 34)\n
                    v37 = *(&v37) & -33;\n
                v38 = 6;\n
                break;\n
            }\n
            goto LABEL_404acd;\n
        case 6:\n
            if (v34 == 42)\n
            {\n
                v45 = v40;\n
                v40 = v45 + 1;\n
                v34 = *(v45);\n
                if (!cgc_isdigit(v34))\n
                {\n
                    v50 = v33;\n
                    v33 = v50 + 1;\n
                    v27 = v50;\n
                    v40 -= 1;\n
                }\n
                else\n
                {\n
                    for (v27 = 0; cgc_isdigit(v34); v34 = *(v49))\n
                    {\n
                        v27 = v27 * 10 + v34 - 48;\n
                        v49 = v40;\n
                        v40 = v49 + 1;\n
                    }\n
                    v27 -= 1;\n
                    if ((Not (Not (Load(addr=stack_base-57, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                }\n
                v32 = v28[v27];\n
            }\n
            else if (!cgc_isdigit(v34))\n
            {\n
                v40 -= 1;\n
            }\n
            else\n
            {\n
                for (v32 = 0; cgc_isdigit(v34); v34 = *(v54))\n
                {\n
                    v32 = v32 * 10 + v34 - 48;\n
                    v54 = v40;\n
                    v40 = v54 + 1;\n
                }\n
                v40 -= 1;\n
            }\n
            v38 = 7;\n
            goto LABEL_404acd;\n
        case 7:\n
            if (v34 != 46)\n
            {\n
                v40 -= 1;\n
            }\n
            else\n
            {\n
                v46 = v40;\n
                v40 = v46 + 1;\n
                v34 = *(v46);\n
                if (v34 == 42)\n
                {\n
                    v48 = v40;\n
                    v40 = v48 + 1;\n
                    v34 = *(v48);\n
                    if (!cgc_isdigit(v34))\n
                    {\n
                        v56 = v33;\n
                        v33 = v56 + 1;\n
                        v26 = v56;\n
                        v40 -= 1;\n
                    }\n
                    else\n
                    {\n
                        for (v26 = 0; cgc_isdigit(v34); v34 = *(v55))\n
                        {\n
                            v26 = v26 * 10 + v34 - 48;\n
                            v55 = v40;\n
                            v40 = v55 + 1;\n
                        }\n
                        v26 -= 1;\n
                        if ((Not (Not (Load(addr=stack_base-57, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                    }\n
                    v31 = v28[v26];\n
                }\n
                else if (!cgc_isdigit(v34))\n
                {\n
                    v40 -= 1;\n
                }\n
                else\n
                {\n
                    for (v31 = 0; cgc_isdigit(v34); v34 = *(v60))\n
                    {\n
                        v31 = v31 * 10 + v34 - 48;\n
                        v60 = v40;\n
                        v40 = v60 + 1;\n
                    }\n
                    v40 -= 1;\n
                }\n
            }\n
            v38 = 8;\n
            goto LABEL_404acd;\n
        case 8:\n
            v6 = v34 - 76;\n
            switch (v6)\n
            {\n
            case 0:\n
                v29 = 8;\n
                break;\n
            case 28:\n
                v29 = 1;\n
                if (*(v40) == 104)\n
                {\n
                    v29 += 1;\n
                    v40 += 1;\n
                }\n
                break;\n
            case 30:\n
                v29 = 5;\n
                break;\n
            case 32:\n
                v29 = 3;\n
                if (*(v40) == 108)\n
                    v40 += 1;\n
                break;\n
            case 40:\n
                v29 = 7;\n
                break;\n
            case 46:\n
                v29 = 6;\n
                break;\n
            default:\n
                v40 -= 1;\n
                break;\n
            }\n
            v38 = 9;\n
            goto LABEL_404acd;\n
        case 9:\n
            v23 = 1;\n
            if (v30 == -1)\n
            {\n
                v47 = v33;\n
                v33 = v47 + 1;\n
                v30 = v47;\n
            }\n
            v5 = v34 - 65;\n
            switch (v5)\n
            {\n
            case 0: case 32:\n
                break;\n
            case 2:\n
                break;\n
            case 4: case 36:\n
                break;\n
            case 5: case 37:\n
                break;\n
            case 6: case 38:\n
                break;\n
            case 18:\n
                break;\n
            case 34:\n
                v57 = v30;\n
                *(&v16) = v28[v57];\n
                if (v32 == -1)\n
                    v32 = 1;\n
                if ((v37 & 2))\n
                {\n
                    *(&v57) = v16;\n
                    v42(v16, v41, 0, v57);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > 1; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    *(&v57) = v16;\n
                    v42(v16, v41, 0, v57);\n
                }\n
                break;\n
            case 35: case 40:\n
                v4 = v29;\n
                if (v4 == 1)\n
                {\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                else if (v4 == 2)\n
                {\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-260, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                v20 = (v24 - &v25) + 1;\n
                if (v32 != -1)\n
                {\n
LABEL_4037e7:\n
                    if (v31 != -1)\n
                    {\n
                        if (*(&v31) < v20)\n
                            v31 = v20;\n
                        v37 &= -33;\n
LABEL_403870:\n
                        if ((v37 & 2))\n
                        {\n
                            if (v22)\n
                            {\n
                                v42(45, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            else if ((v37 & 4))\n
                            {\n
                                v42(43, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            for (; v31 > v20; v32 -= 1)\n
                            {\n
                                v42(48, v41, 0);\n
                                v31 -= 1;\n
                            }\n
                            for (; v31; v32 -= 1)\n
                            {\n
                                v82 = v24;\n
                                v24 = v82 + 1;\n
                                v42(*(v82), v41, 0, v82);\n
                                v31 -= 1;\n
                            }\n
                            for (; v32; v32 -= 1)\n
                            {\n
                                v42(32, v41, 0);\n
                            }\n
                        }\n
                        else\n
                        {\n
                            for (; v32 > v31 + 1; v32 -= 1)\n
                            {\n
                                v42(32, v41, 0);\n
                            }\n
                            if (v22)\n
                            {\n
                                v42(45, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            else if ((v37 & 4))\n
                            {\n
                                v42(43, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            if (v32 > v31)\n
                            {\n
                                v42(32, v41, 0);\n
                                v32 -= 1;\n
                            }\n
                            for (; v31 > v20; v31 -= 1)\n
                            {\n
                                v42(48, v41, 0);\n
                            }\n
                            for (; v31; v31 -= 1)\n
                            {\n
                                v83 = v24;\n
                                v24 = v83 + 1;\n
                                v42(*(v83), v41, 0, v83);\n
                            }\n
                        }\n
                        break;\n
                    }\n
                    v31 = v20;\n
                    if (!(v37 & 32))\n
                    {\n
LABEL_40384a:\n
                        goto LABEL_403870;\n
                    }\n
                    if (!(v31 < v32))\n
                        goto LABEL_40384a;\n
                    if (!v22 && !(v37 & 4))\n
                    {\n
                        v31 = v32;\n
LABEL_403845:\n
                        goto LABEL_40384a;\n
                    }\n
                    v31 = v32 - 1;\n
                    goto LABEL_403845;\n
                }\n
                v32 = v20;\n
                if (!v22 && !(v37 & 4))\n
                    goto LABEL_4037e2;\n
                v32 += 1;\n
LABEL_4037e2:\n
                goto LABEL_4037e7;\n
            case 45:\n
                v59 = v30;\n
                v12 = &v28[v59]->field_0;\n
                v11 = v42(0, v41, 1, v59);\n
                v0 = v29;\n
                if (v0 == 1)\n
                {\n
                    *(&v12) = v11;\n
                }\n
                else if (v0 == 2)\n
                {\n
                    *(v12) = v11;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-276, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    *(&v12) = v11;\n
                }\n
                break;\n
            case 46:\n
                v3 = v29;\n
                if (v3 == 1)\n
                {\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                else if (v3 == 2)\n
                {\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-264, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                if ((v37 & 16) && *(v24) != 48)\n
                {\n
                    v24 += 1;\n
                    *(v24) = 48;\n
                }\n
                v19 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v19;\n
                if (v31 != -1)\n
                {\n
                    if (v31 < v19)\n
                        v31 = v19;\n
                    v37 &= -33;\n
                }\n
                else\n
                {\n
                    v31 = v19;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                if (!(v37 & 2))\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31 > v19; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v71 = v24;\n
                        v24 = v71 + 1;\n
                        v42(*(v71), v41, 0, v71);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v31 > v19; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v70 = v24;\n
                        v24 = v70 + 1;\n
                        v42(*(v70), v41, 0, v70);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                break;\n
            case 47:\n
                v37 |= 16;\n
                v58 = v30;\n
                v24 = cgc_r_xtoa(v28[v58], &v25, 0, v58);\n
                v13 = (v24 - &v25) + 1;\n
                if (v31 == -1)\n
                {\n
                    v31 = v13;\n
                }\n
                else\n
                {\n
                    if (v31 < v13)\n
                        v31 = v13;\n
                    v37 &= -33;\n
                }\n
                if (v32 == -1)\n
                    v32 = v31 + 2;\n
                if ((v37 & 2))\n
                {\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v42(120, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v31 > v13; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v68 = v24;\n
                        v24 = v68 + 1;\n
                        v42(*(v68), v41, 0, v68);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31 + 2; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v42(120, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v31 > v13; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v69 = v24;\n
                        v24 = v69 + 1;\n
                        v42(*(v69), v41, 0, v69);\n
                    }\n
                }\n
                break;\n
            case 50:\n
                v15 = &v28[v30]->field_0;\n
                v14 = cgc_strlen(v15);\n
                if (v32 == -1)\n
                    v32 = v14;\n
                if (v31 != -1 && v31 <= v14)\n
                    goto LABEL_404642;\n
                v31 = v14;\n
LABEL_404642:\n
                if ((v37 & 2))\n
                {\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v64 = v15;\n
                        v15 = v64 + 1;\n
                        v42(*(v64), v41, 0, v64);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v65 = v15;\n
                        v15 = v65 + 1;\n
                        v42(*(v65), v41, 0, v65);\n
                    }\n
                }\n
                break;\n
            case 52:\n
                v2 = v29;\n
                if (v2 == 1)\n
                {\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                else if (v2 == 2)\n
                {\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-268, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                v18 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v18;\n
                if (v31 != -1)\n
                {\n
                    if (v31 < v18)\n
                        v31 = v18;\n
                    v37 &= -33;\n
                }\n
                else\n
                {\n
                    v31 = v18;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                if ((v37 & 2))\n
                {\n
                    for (; v31 > v18; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v66 = v24;\n
                        v24 = v66 + 1;\n
                        v42(*(v66), v41, 0, v66);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31 > v18; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v67 = v24;\n
                        v24 = v67 + 1;\n
                        v42(*(v67), v41, 0, v67);\n
                    }\n
                }\n
                break;\n
            case 55:\n
                v23 = 0;\n
            case 23:\n
                v1 = v29;\n
                if (v1 == 1)\n
                {\n
                    v61 = v30;\n
                    v24 = cgc_r_xtoa(v28[v61], &v25, v23, v61);\n
                }\n
                else if (v1 == 2)\n
                {\n
                    v62 = v30;\n
                    v24 = cgc_r_xtoa(v28[v62], &v25, v23, v62);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-272, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v63 = v30;\n
                    v24 = cgc_r_xtoa(v28[v63], &v25, v23, v63);\n
                }\n
                v17 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v17;\n
                if (v31 == -1)\n
                {\n
                    v31 = v17;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                else\n
                {\n
                    if (v31 < v17)\n
                        v31 = v17;\n
                    v37 &= -33;\n
                }\n
                if ((v37 & 2))\n
                {\n
                    if ((v37 & 16))\n
                    {\n
                        if (v17 == 1 && *(v24) == 48)\n
                            goto LABEL_4042b6;\n
                        v42(48, v41, 0);\n
                        if (v32 > 0)\n
                            v32 -= 1;\n
                        v73 = v41;\n
                        v74 = 0;\n
                        v75 = (v23 ? 120 : 88);\n
                        v42();\n
                        if (v32 > 0)\n
                            v32 -= 1;\n
                    }\n
LABEL_4042b6:\n
                    for (; v31 > v17; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v80 = v24;\n
                        v24 = v80 + 1;\n
                        v42(*(v80), v41, 0, v80);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    goto LABEL_4044fa;\n
                }\n
                for (; v32 > v31 + 2; v32 -= 1)\n
                {\n
                    v42(32, v41, 0);\n
                }\n
                if (!(v37 & 16))\n
                {\n
LABEL_40444a:\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
LABEL_40447f:\n
                    for (; v31 > v17; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v81 = v24;\n
                        v24 = v81 + 1;\n
                        v42(*(v81), v41, 0, v81);\n
                    }\n
LABEL_4044fa:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (v17 == 1 && *(v24) == 48)\n
                        goto LABEL_40444a;\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v77 = v41;\n
                    v78 = 0;\n
                    v79 = (v23 ? 120 : 88);\n
                    v42();\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    goto LABEL_40447f;\n
                }\n
            default:\n
                break;\n
            }\n
            v38 = 0;\n
            goto LABEL_404acd;\n
        case 15:\n
            v32 = -1;\n
            v31 = -1;\n
            v37 = 0;\n
            v29 = 0;\n
            v30 = -1;\n
            if (v34 == 48)\n
            {\n
                v40 -= 1;\n
                v38 = 5;\n
                goto LABEL_404acd;\n
            }\n
            else\n
            {\n
                if (!cgc_isdigit(v34))\n
                {\n
                    v40 -= 1;\n
                    v38 = 5;\n
                }\n
                else\n
                {\n
                    for (v32 = 0; cgc_isdigit(v34); v34 = *(v53))\n
                    {\n
                        v32 = v32 * 10 + v34 - 48;\n
                        v53 = v40;\n
                        v40 = v53 + 1;\n
                    }\n
                    if (v34 == 36)\n
                    {\n
                        v30 = v32 - 1;\n
                        v32 = 0;\n
                        v38 = 5;\n
                    }\n
                    else\n
                    {\n
                        v40 -= 1;\n
                        v38 = 7;\n
                    }\n
                }\n
                goto LABEL_404acd;\n
            }\n
        default:\n
LABEL_404acd:\n
            v84 = v40;\n
            v40 = v84 + 1;\n
            v34 = *(v84);\n
            continue;\n
        }\n
    }\n
    return v42(0, v41, 2);\n
}\n
", "4213509:sub_404b05": null, "4213520:cgc_fd_printer": "long long cgc_fd_printer(unsigned long long a0, unsigned int a1[3], unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[3];  // [bp-0x28]\n
    unsigned int v2[3];  // [bp-0x18]\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[3];  // rsi\n
    unsigned long long v7;  // rcx\n
\n
    *(&v2[0]) = a1;\n
    *(&v1[0]) = v2;\n
    if (!a2)\n
    {\n
        v6 = v1;\n
        v7 = v6[2];\n
        v6[2] = v7 + 1;\n
        *(12 + &v1[0] + (v7 & 4095)) = a0;\n
        if (!(v1[2] & 4095) && cgc_transmit_all(v1[0], &v3, 0x1000))\n
            cgc__terminate(a0);\n
    }\n
    else if (a2 == 1)\n
    {\n
        v4 = v1[2];\n
        return v4;\n
    }\n
    else if (a2 == 2)\n
    {\n
        v0 = v1[2] & 4095;\n
        if (v0 && cgc_transmit_all(v1[0], v1 + 1, v0))\n
            cgc__terminate(a0);\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4213806:sub_404c2e": null, "4213808:cgc_fgetc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_fgetc(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    struct_0 *v8;  // rax\n
    struct_0 *v9;  // rax\n
    unsigned long long v10;  // rcx\n
\n
    v0 = a0;\n
    if (v0->field_10 < a0->field_8)\n
    {\n
        v3 = a0->field_10;\n
        a0->field_10 = v3 + 1;\n
        v1 = a0[1].padding_0[v3];\n
        return v1;\n
    }\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    if (cgc_receive(a0, v4, v5, v6))\n
    {\n
        v8 = a0;\n
        v8->field_4 = v8->field_4 | 2;\n
        v1 = -1;\n
        return v1;\n
    }\n
    else if (a0->field_8)\n
    {\n
        v10 = a0->field_10;\n
        a0->field_10 = v10 + 1;\n
        v1 = a0[1].padding_0[v10];\n
        return v1;\n
    }\n
    else\n
    {\n
        v9 = a0;\n
        v9->field_4 = v9->field_4 | 4;\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4214048:cgc_getc": "long long cgc_getc(void* a0)\n
{\n
    return cgc_fgetc(a0);\n
}\n
", "4214075:sub_404d3b": null, "4214080:cgc_getchar": "extern void* cgc_stdin;\n
\n
long long cgc_getchar()\n
{\n
    return cgc_getc(cgc_stdin);\n
}\n
", "4214098:sub_404d52": null, "4214112:cgc_fgets": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_fgets(unsigned long a0, unsigned long a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rcx\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1 - 1)\n
        {\n
LABEL_404e08:\n
            *((a0 + v1)) = 0;\n
            v2 = a0;\n
            return v2;\n
        }\n
        v0 = cgc_fgetc(a2);\n
        if (v0 == -1)\n
        {\n
            if ((a2->field_4 & 4) && !(v1 <= 0))\n
                goto LABEL_404e08;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        v4[a0] = v0;\n
        if (v0 == 10)\n
            goto LABEL_404e08;\n
    }\n
}\n
", "4214310:sub_404e26": null, "4214320:cgc_fread": "long long cgc_fread(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    char *v1;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // rcx\n
\n
    v4 = a3;\n
    v1 = 0;\n
    for (v3 = 0; v3 < a2; v3 += 1)\n
    {\n
        for (v2 = 0; v2 < a1; v2 += 1)\n
        {\n
            v0 = cgc_fgetc(v4);\n
            if (v0 == -1)\n
            {\n
                v5 = v3;\n
                return v5;\n
            }\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v7[a0] = v0;\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4214512:cgc_hex_value_of": "long long cgc_hex_value_of(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_isdigit(a0))\n
    {\n
        v0 = a0 - 48;\n
        return v0;\n
    }\n
    else if (cgc_isalpha(a0))\n
    {\n
        v0 = cgc_toupper(a0) - 65 + 10;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "4214621:sub_404f5d": null, "4214624:cgc_r_utoa": "long long cgc_r_utoa(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    char *v4;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (*(v1) = 48; v2; v2 = (0 CONCAT v2) /m 10)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = ((0 CONCAT v2) /m 10 >> 32) + 48;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4214759:sub_404fe7": null, "4214768:cgc_r_otoa": "long long cgc_r_otoa(unsigned long a0, unsigned long long a1)\n
{\n
    return cgc_r_llotoa(a0, a1);\n
}\n
", "4214803:sub_405013": null, "4214816:cgc_r_xtoa": "long long cgc_r_xtoa(unsigned long a0, unsigned long long a1, unsigned long a2)\n
{\n
    return cgc_r_llxtoa(a0, a1, a2);\n
}\n
", "4214857:sub_405049": null, "4214864:cgc_r_llotoa": "long long cgc_r_llotoa(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    char *v4;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (*(v1) = 48; v2; v2 >>= 3)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = (v2 & 7) + 48;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4214995:sub_4050d3": null, "4215008:cgc_r_llxtoa": "long long cgc_r_llxtoa(unsigned long a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x29]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
    char *v6;  // rax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    for (*(v3) = 48; v4; v4 >>= 4)\n
    {\n
        v2 = v4 & 15;\n
        if (v2 < 10)\n
        {\n
            v2 += 48;\n
        }\n
        else\n
        {\n
            if (a2)\n
                v1 = v2 - -55;\n
            else\n
                v1 = v2 - -87;\n
            v2 = v1;\n
        }\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = v2;\n
    }\n
    if (v3 == a1)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 - 1;\n
    return v0;\n
}\n
", "4215217:sub_4051b1": null, "4215232:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!a2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        a0[v0] = a1;\n
    }\n
    v1 = a2;\n
    return v1;\n
}\n
", "4215337:sub_405229": null, "4215344:cgc_rand": "long long cgc_rand(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v4;  // rdx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; a1 > v1; v1 = v0 + v1)\n
    {\n
        if (cgc_random(a0, a1, v4))\n
            cgc__terminate(a0);\n
    }\n
    return a1;\n
}\n
", "4215459:sub_4052a3": null, "4215472:cgc_recv_until_delim_n": "long long cgc_recv_until_delim_n(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    void* v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x38]\n
    char v2;  // [bp-0x31]\n
    char *v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x24]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v7;  // rcx\n
\n
    v4 = a3;\n
    if (a2 && v4)\n
    {\n
        v3 = 0;\n
        v2 = 0;\n
        v1 = 0;\n
        for (v0 = 0; v0 < v4; v0 += 1)\n
        {\n
            v2 = cgc_recv_char(a0, &v1);\n
            if (v2 == -1)\n
            {\n
                if (v1 == -11)\n
                {\n
                    v5 = -11;\n
                    return v5;\n
                }\n
                if (v1 == -1)\n
                    break;\n
            }\n
            v7 = v3;\n
            v3 = v7 + 1;\n
            a2[v7] = v2;\n
            if (a1 == v2)\n
                break;\n
        }\n
        if (a1 != a2[1 + v3])\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4215785:sub_4053e9": null, "4215792:cgc_recv_char": "extern unsigned long long recv_files[3];\n
\n
long long cgc_recv_char(unsigned long long a0, unsigned int *a1)\n
{\n
    unsigned long long v0[3];  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v7[3];  // rax\n
\n
    v1 = 0;\n
    v0[0] = 0;\n
    if (a0)\n
    {\n
        v2 = -11;\n
        return v2;\n
    }\n
    v0[0] = &recv_files[0];\n
    *(a1) = 0;\n
    if (v0[2] && !(v0[2] - 1 < v0[1]))\n
        goto LABEL_4054fb;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    if (cgc_receive(a0, a1, v4, v5))\n
    {\n
        *(a1) = -11;\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (!v0[2])\n
    {\n
        *(a1) = -1;\n
        v2 = -1;\n
        return v2;\n
    }\n
LABEL_4054fb:\n
    v1 = *(24 + &v0[0] + v0[1]);\n
    v7 = v0;\n
    v7[1] = v7[1] + 1;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4216113:sub_405531": null, "4216128:cgc_send_bytes": "long long cgc_send_bytes(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    if (a1 && a2)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
        for (v0 = a1; v1 < a2; v0 = v2 + v0)\n
        {\n
            if (cgc_transmit(a0, a1, a2, v6))\n
            {\n
                v4 = -9;\n
                return v4;\n
            }\n
            if (!v2)\n
                break;\n
            v1 += v2;\n
        }\n
        v4 = v1;\n
        return v4;\n
    }\n
    v4 = -9;\n
    return v4;\n
}\n
", "4216328:sub_405608": null, "4216336:main": "extern unsigned long long g_406380;\n
extern unsigned long long g_406399;\n
\n
int main(unsigned long a0)\n
{\n
    char v0;  // [bp-0x438]\n
    unsigned int v1;  // [bp-0x41c]\n
    char v2;  // [bp-0x418]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long v7;  // rsi\n
\n
    v5 = 0;\n
    v4 = a0;\n
    v3 = v7;\n
    memset(&v2, 0, 0x400);\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (cgc_send_bytes(1, &g_406380, 24) != 24)\n
            cgc__terminate(1);\n
        cgc_memset(&v2, 0, 0x400);\n
        cgc_memset(&v0, 0, 24);\n
        v1 = cgc_recv_until_delim_n(0, 3, &v2, 1048);\n
        if (0 > v1)\n
            cgc__terminate(0);\n
        if (cgc_process(&v2, 3, &v0))\n
            cgc__terminate(0);\n
        if (cgc_send_bytes(1, &g_406399, 25) != 25)\n
            cgc__terminate(1);\n
        if (cgc_send_bytes(1, &v0, 24) != 24)\n
            cgc__terminate(1);\n
    }\n
}\n
", "4216674:sub_405762": null, "4216688:cgc_compute_char_type": "long long cgc_compute_char_type(char *a0, unsigned long a1, unsigned short a2[11])\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned short v2[11];  // rax\n
    unsigned short v3[11];  // rax\n
    unsigned short v4[11];  // rax\n
    unsigned short v5[11];  // rax\n
    unsigned short v6[11];  // rax\n
\n
    for (v0 = a0; a1 != *(v0); v0 += 1)\n
    {\n
        if (cgc_is_non_printable(*(v0)) == 1)\n
        {\n
            v2 = a2;\n
            v2[7] = v2[7] + 1;\n
        }\n
        else if (cgc_is_printable(*(v0)) == 1)\n
        {\n
            v3 = a2;\n
            v3[6] = v3[6] + 1;\n
            if (cgc_is_digit(*(v0)) == 1)\n
            {\n
                v4 = a2;\n
                v4[9] = v4[9] + 1;\n
            }\n
            else if (cgc_is_letter(*(v0)) == 1)\n
            {\n
                v5 = a2;\n
                v5[8] = v5[8] + 1;\n
            }\n
            else\n
            {\n
                v6 = a2;\n
                v6[10] = v6[10] + 1;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4216984:sub_405898": null, "4216992:cgc_is_word_end_char": "long long cgc_is_word_end_char(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 != 32 && cgc_is_sentence_end_char(a0) != 1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4217071:sub_4058ef": null, "4217072:cgc_is_sentence_end_char": "long long cgc_is_sentence_end_char(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 != 46 && a0 != 33 && a0 != 63)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4217152:cgc_is_paragraph_end_char": "long long cgc_is_paragraph_end_char(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 == 10)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4217198:sub_40596e": null, "4217200:cgc_compute_grammar_components": "long long cgc_compute_grammar_components(char *a0, unsigned long a1, unsigned short a2[6])\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned short v3[6];  // rax\n
    unsigned short v4[6];  // rax\n
    unsigned short v5[6];  // rax\n
    unsigned short v6[6];  // rax\n
    unsigned short v7[6];  // rax\n
\n
    v1 = a0;\n
    for (v0 = 0; a1 != *(v1); v1 += 1)\n
    {\n
        v3 = a2;\n
        v3[2] = v3[2] + 1;\n
        if (cgc_is_word_end_char(*(v1)) == 1 && cgc_is_letter(v0) == 1)\n
        {\n
            v4 = a2;\n
            v4[3] = v4[3] + 1;\n
        }\n
        if (cgc_is_sentence_end_char(v0) == 1)\n
        {\n
            if (*(v1) == 32)\n
            {\n
                v5 = a2;\n
                v5[4] = v5[4] + 1;\n
            }\n
            else if (cgc_is_paragraph_end_char(*(v1)) == 1)\n
            {\n
                v6 = a2;\n
                v6[4] = v6[4] + 1;\n
                v7 = a2;\n
                v7[5] = v7[5] + 1;\n
            }\n
        }\n
        v0 = *(v1);\n
    }\n
    return a1;\n
}\n
", "4217506:sub_405aa2": null, "4217520:cgc_compute_hash": "long long cgc_compute_hash(char *a0, unsigned long a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned short v1;  // [bp-0x3a]\n
    char *v2;  // [bp-0x38]\n
    unsigned short v3;  // [bp-0x2e]\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x2b]\n
    char v6;  // [bp-0x2a]\n
    char v7;  // [bp-0x29]\n
    char *v8;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v10;  // rax\n
    unsigned int v11;  // eax\n
    unsigned long v12;  // rax\n
\n
    v8 = a0;\n
    memset(&v4, 0, 4);\n
    v3 = 0;\n
    v2 = 0x4347c000;\n
    for (v1 = 0; a1 != *(v8); (&v4)[v12] = (&v4)[v12] ^ v0)\n
    {\n
        v10 = v8;\n
        v8 = v10 + 1;\n
        v11 = *(v10);\n
        v0 = v11;\n
        *(&v11) = v3;\n
        v3 = v11 + 1;\n
        v12 = (v11 >> 31 CONCAT v11) /m 4 >> 32;\n
    }\n
    v1 = (*(&a0) >> 31 CONCAT *(&a0)) /m 4086 >> 32;\n
    v4 ^= v2[9 + v1];\n
    v5 ^= v2[7 + v1];\n
    v6 ^= v2[3 + v1];\n
    v7 ^= v2[v1];\n
    *(a2) = *(&v4);\n
    return a2;\n
}\n
", "4217812:sub_405bd4": null, "4217824:cgc_compute_session_id": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
} struct_1;\n
\n
long long cgc_compute_session_id(struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x1a]\n
    char v2;  // [bp-0x19]\n
    char v3[3001];  // [bp-0x18]\n
\n
    *(&v3[0]) = 0x4347c000;\n
    memset(&v1, 0, 2);\n
    v0 = &v1;\n
    v1 = v3[0] ^ v3[1000];\n
    v2 = v3[2000] ^ v3[3000];\n
    a0->field_16 = *(&v0);\n
    return a0;\n
}\n
", "4217940:sub_405c54": null, "4217952:cgc_process": "long long cgc_process(char *a0, unsigned long a1, unsigned short a2[11])\n
{\n
    cgc_compute_char_type(a0, a1, a2);\n
    cgc_compute_grammar_components(a0, a1, a2);\n
    cgc_compute_hash(a0, a1, a2);\n
    cgc_compute_session_id(a2);\n
    return 0;\n
}\n
", "4218048:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:memset": null, "5242904:cgc_transmit": null, "5242912:cgc_random": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}