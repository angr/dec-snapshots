{"4202496:_init": "extern struct_0 *g_407bd8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_407bd8;\n
    if (g_407bd8)\n
        v1 = g_407bd8();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_407bf8;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_407bf8;\n
    goto *(0x407c00);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202560:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202576:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202608:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4226024);\n
}\n
", "4202624:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202661:sub_4020a5": null, "4202662:sub_4020a6": null, "4202672:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_407bd0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202713:sub_4020d9": null, "4202720:register_tm_clones": "extern unsigned long long g_407be0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202777:sub_402119": null, "4202784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_407be8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_407be8)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202837:sub_402155": null, "4202841:sub_402159": null, "4202848:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202857:sub_402169": null, "4202864:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203029:sub_402215": null, "4203040:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 0)\n
        v0 = a0 < 128;\n
    return v0 & 1;\n
}\n
", "4203085:sub_40224d": null, "4203088:cgc_isprint": "extern char _ctypes;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = !((&_ctypes)[a0] & 32);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203164:sub_40229c": null, "4203168:cgc_isalnum": "extern char _ctypes;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 7);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203244:sub_4022ec": null, "4203248:cgc_isalpha": "extern char _ctypes;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 3);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203324:sub_40233c": null, "4203328:cgc_islower": "extern char _ctypes;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 1);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203404:sub_40238c": null, "4203408:cgc_isupper": "extern char _ctypes;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 2);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203484:sub_4023dc": null, "4203488:cgc_isspace": "extern char _ctypes;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 16);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203564:sub_40242c": null, "4203568:cgc_ispunct": "extern char _ctypes;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isascii(a0))\n
    {\n
        v0 = ((&_ctypes)[a0] & 8);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203644:sub_40247c": null, "4203648:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4203705:sub_4024b9": null, "4203712:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 - 32;\n
    return v0;\n
}\n
", "4203769:sub_4024f9": null, "4203776:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4203891:sub_402573": null, "4203904:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4203938:sub_4025a2": null, "4203952:cgc_malloc": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern struct_1 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4204378:sub_40275a": null, "4204384:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4204546:sub_402802": null, "4204560:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204739:sub_4028c3": null, "4204752:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4204930:sub_402982": null, "4204944:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4205039:sub_4029ef": null, "4205040:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4205207:sub_402a97": null, "4205216:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4205402:sub_402b5a": null, "4205408:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax, Other Possible Types: unsigned long long, struct_0 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_402d32;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_402d32:\n
    return v5;\n
}\n
", "4205890:sub_402d42": null, "4205904:cgc_remove_from_blist": "long long cgc_remove_from_blist(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (*((a0 + 40)))\n
        *((*((a0 + 40)) + 32)) = *((v0 + 32));\n
    v2 = a0;\n
    if (*((a0 + 32)))\n
    {\n
        v2 = *((a0 + 32));\n
        *((v2 + 40)) = *((a0 + 40));\n
    }\n
    return v2;\n
}\n
", "4205984:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[a0] == a1)\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206097:sub_402e11": null, "4206112:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a2)\n
        {\n
            if (*(v2) != *(v1))\n
            {\n
                v3 = *(v2) - *(v1);\n
                return v3;\n
            }\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206270:sub_402ebe": null, "4206272:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4206371:sub_402f23": null, "4206384:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4206530:sub_402fc2": null, "4206544:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = a0;\n
    v7 = a2;\n
    v6 = 0;\n
    if (v8 >= a1)\n
    {\n
        v6 = cgc_output_number_printf((0 CONCAT v8) /m a1, a1, v7 - 1, a3);\n
        v8 = (0 CONCAT v8) /m a1 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 -= 1;\n
            if (!v7)\n
                break;\n
            if (!(a3 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a3 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4206945:sub_403161": null, "4206960:cgc_printf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf(char *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1b0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1a8]\n
    unsigned int v2;  // [bp-0x19c]\n
    unsigned int *v3;  // [bp-0x198], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x190]\n
    unsigned int v5;  // [bp-0x184]\n
    unsigned long v6;  // [bp-0x180]\n
    struct struct_0 **v7;  // [bp-0x178]\n
    struct_1 *v8;  // [bp-0x170]\n
    unsigned int v9;  // [bp-0x164]\n
    unsigned int v10;  // [bp-0x160]\n
    unsigned int v11;  // [bp-0x15c]\n
    char v12;  // [bp-0x158]\n
    unsigned long v13;  // [bp-0x150]\n
    unsigned long v14;  // [bp-0x148]\n
    unsigned long v15;  // [bp-0x140]\n
    unsigned long v16;  // [bp-0x138]\n
    unsigned long v17;  // [bp-0x130]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    int v25;  // [bp-0xb8]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    char v31;  // [bp-0x49]\n
    unsigned int v32;  // [bp-0x48]\n
    unsigned int v33;  // [bp-0x44]\n
    unsigned long v34;  // [bp-0x40]\n
    unsigned long v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x30]\n
    unsigned int v37;  // [bp-0x2c]\n
    unsigned int v38;  // [bp-0x28]\n
    unsigned int v39;  // [bp-0x24]\n
    unsigned int v40;  // [bp-0x20]\n
    unsigned int v41;  // [bp-0x1c]\n
    char *v42;  // [bp-0x18]\n
    char *v43;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v44;  // [bp-0x8]\n
    unsigned long v45;  // [bp+0x8]\n
    unsigned long long v46;  // rbp\n
    char v47;  // al\n
    int v48;  // xmm0\n
    int v49;  // xmm1\n
    int v50;  // xmm2\n
    int v51;  // xmm3\n
    int v52;  // xmm4\n
    int v53;  // xmm5\n
    int v54;  // xmm6\n
    int v55;  // xmm7\n
    unsigned long v56;  // r9\n
    char *v57;  // rax\n
    char *v58;  // rax\n
    unsigned long long v59;  // rdx\n
    unsigned int *v60;  // rax\n
    unsigned long long v61;  // rdx\n
    struct struct_0 **v62;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v63;  // rdx\n
    unsigned int *v64;  // rax\n
\n
    v46 = &v44;\n
    if (v47)\n
    {\n
        v18 = v48;\n
        v19 = v49;\n
        v20 = v50;\n
        v21 = v51;\n
        v22 = v52;\n
        v23 = v53;\n
        v24 = v54;\n
        v25 = v55;\n
    }\n
    v17 = v56;\n
    v16 = a4;\n
    v15 = a3;\n
    v14 = a2;\n
    v13 = a1;\n
    v43 = a0;\n
    v39 = 0;\n
    v38 = 0;\n
    v37 = 0;\n
    v35 = &v12;\n
    v34 = &v45;\n
    v33 = 48;\n
    v32 = 8;\n
    while (*(v43))\n
    {\n
        v57 = v43;\n
        v43 = v57 + 1;\n
        v31 = *(v57);\n
        if (v31 != 37)\n
        {\n
            v26 = v31;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_4035db:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v58 = v43;\n
                    a3 = v58 + 1;\n
                    v43 = a3;\n
                    v31 = *(v58);\n
                    v11 = v31;\n
                    if (v11 != 48)\n
                        break;\n
                    v38 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v37 = cgc_strtol(v43 - 1, &v43, 10);\n
            }\n
            v10 = v31;\n
            if (v10 == 37)\n
            {\n
                v30 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_403598;\n
            }\n
            if (v10 == 88)\n
            {\n
                v38 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v32;\n
                    v5 = v32;\n
                    if (v5 <= 40)\n
                    {\n
                        a3 = v4;\n
                        v59 = v5;\n
                        v60 = v59 + a3->field_10;\n
                        a2 = v59 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v3 = v60;\n
                    }\n
                    else\n
                    {\n
                        a3 = v4;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 8;\n
                        v3 = a2;\n
                    }\n
                    v41 = *(v3);\n
                    if (v41 < 0)\n
                    {\n
                        v28 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v41 = -(v41);\n
                    }\n
                    cgc_output_number_printf(v41, 10, v37, v38);\n
                    goto LABEL_403598;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v32;\n
                    v9 = v32;\n
                    if (v9 <= 40)\n
                    {\n
                        a3 = v8;\n
                        v61 = v9;\n
                        v62 = v61 + a3->field_10;\n
                        a2 = v61 + 8;\n
                        *(&a3->field_0) = a2;\n
                    }\n
                    else\n
                    {\n
                        a3 = v8;\n
                        v63 = *((a3 + 8));\n
                        v62 = v63;\n
                        a2 = v63 + 1;\n
                        *((a3 + 8)) = a2;\n
                    }\n
                    v7 = v62;\n
                    v42 = &*(v7)->field_0;\n
                    v40 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v40;\n
                        if (v6 >= cgc_strlen(v42))\n
                            break;\n
                        v29 = v42[v40];\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v40 += 1;\n
                    }\n
                    goto LABEL_403598;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v27 = v31;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_403598:\n
                    v37 = 0;\n
                    v38 = 0;\n
                    goto LABEL_4035db;\n
                }\n
            }\n
            v1 = &v32;\n
            v2 = v32;\n
            if (v2 > 40)\n
            {\n
                a3 = v1;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v0 = a2;\n
            }\n
            else\n
            {\n
                a3 = v1;\n
                a2 = v2;\n
                v64 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v0 = v64;\n
            }\n
            v36 = *(v0);\n
            cgc_output_number_printf(v36, 16, v37, v38);\n
            goto LABEL_403598;\n
        }\n
    }\n
    return v39;\n
}\n
", "4208113:sub_4035f1": null, "4208128:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    char v2;  // [bp-0x61]\n
    char v3;  // [bp-0x51]\n
    char v4;  // [bp-0x41]\n
    char v5;  // [bp-0x31]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct struct_0 **v10;  // rax\n
    unsigned int *v11;  // rax\n
    struct struct_0 **v12;  // rax\n
    unsigned int *v13;  // rax\n
\n
    v7 = a2;\n
    v6 = a4;\n
    if (v7 >= a3)\n
    {\n
        cgc_output_number_sprintf(a0, a1, (0 CONCAT v7) /m a3, a3, v6 - 1, a5);\n
        v7 = (0 CONCAT v7) /m a3 >> 32;\n
    }\n
    if (v7 < a3 && v6 > 0)\n
    {\n
        while (true)\n
        {\n
            v6 -= 1;\n
            if (!v6)\n
                break;\n
            if (!(a5 & 1))\n
            {\n
                v4 = 32;\n
                *(a1)->field_0 = v4;\n
            }\n
            else\n
            {\n
                v5 = 48;\n
                *(a1)->field_0 = v5;\n
            }\n
            v10 = a1;\n
            *(v10) = *(v10) + 1;\n
            v11 = a0;\n
            *(v11) = *(v11) + 1;\n
        }\n
    }\n
    if ((a5 & 2))\n
    {\n
        if (v7 < 10)\n
            v1 = v7 + 48;\n
        else\n
            v1 = v7 + 55;\n
        v3 = v1;\n
        *(a1)->field_0 = v3;\n
    }\n
    else\n
    {\n
        if (v7 < 10)\n
            v0 = v7 + 48;\n
        else\n
            v0 = v7 + 87;\n
        v2 = v0;\n
        *(a1)->field_0 = v2;\n
    }\n
    v12 = a1;\n
    *(v12) = *(v12) + 1;\n
    v13 = a0;\n
    *(v13) = *(v13) + 1;\n
    return a0;\n
}\n
", "4208592:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    struct struct_0 **v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v43;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v44;  // [bp-0x8]\n
    unsigned long v45;  // [bp+0x8]\n
    unsigned long long v46;  // rbp\n
    char v47;  // al\n
    int v48;  // xmm0\n
    int v49;  // xmm1\n
    int v50;  // xmm2\n
    int v51;  // xmm3\n
    int v52;  // xmm4\n
    int v53;  // xmm5\n
    int v54;  // xmm6\n
    int v55;  // xmm7\n
    unsigned long v56;  // r9\n
    char *v57;  // rax\n
    char *v58;  // rax\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    struct struct_0 **v61;  // rax\n
    struct_1 *v62;  // rcx\n
    struct struct_0 **v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    struct struct_0 **v66;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v67;  // rcx\n
    struct_1 *v68;  // rcx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    char *v73;  // rax\n
\n
    v46 = &v44;\n
    if (v47)\n
    {\n
        v17 = v48;\n
        v18 = v49;\n
        v19 = v50;\n
        v20 = v51;\n
        v21 = v52;\n
        v22 = v53;\n
        v23 = v54;\n
        v24 = v55;\n
    }\n
    v16 = v56;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v43 = a0;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v45;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v57 = v42;\n
        v42 = v57 + 1;\n
        v30 = *(v57);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            *(v43) = v25;\n
            v43 += 1;\n
            v38 += 1;\n
LABEL_403c77:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v58 = v42;\n
                    v42 = v58 + 1;\n
                    v30 = *(v58);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                *(v43) = v29;\n
                v43 += 1;\n
                v38 += 1;\n
                goto LABEL_403c30;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        v59 = v4;\n
                        v60 = v5;\n
                        v61 = v60 + v59->field_10;\n
                        *(&v59->field_0) = v60 + 8;\n
                        v3 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v4;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[1];\n
                        v3 = v63;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        *(v43) = v27;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_sprintf(&v38, &v43, v40, 10, v36, v37);\n
                    goto LABEL_403c30;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 <= 40)\n
                    {\n
                        v64 = v8;\n
                        v65 = v9;\n
                        v66 = v65 + v64->field_10;\n
                        *(&v64->field_0) = v65 + 8;\n
                    }\n
                    else\n
                    {\n
                        v67 = v8;\n
                        v66 = v67->field_8;\n
                        v67->field_8 = v66 + 8;\n
                    }\n
                    v7 = v66;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        *(v43) = v28;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_403c30;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    *(v43) = v26;\n
                    v43 += 1;\n
                    v38 += 1;\n
LABEL_403c30:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_403c77;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                v68 = v1;\n
                v69 = v2;\n
                v70 = v69 + v68->field_10;\n
                *(&v68->field_0) = v69 + 8;\n
                v0 = v70;\n
            }\n
            else\n
            {\n
                v71 = v1;\n
                v72 = v71->field_8;\n
                v71->field_8 = &v72[2];\n
                v0 = v72;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_sprintf(&v38, &v43, v35, 16, v36, v37);\n
            goto LABEL_403c30;\n
        }\n
    }\n
    v73 = v43;\n
    v43 = v73 + 1;\n
    *(v73) = 0;\n
    return v38;\n
}\n
", "4209818:sub_403c9a": null, "4209824:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        *(&v1) = cgc_malloc(a1);\n
        if (!*(&v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(*(&v1), a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(*(&v1), a0, a1);\n
        cgc_free(a0);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210049:sub_403d81": null, "4210064:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a1)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210155:sub_403deb": null, "4210160:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v1) - *(v2);\n
}\n
", "4210299:sub_403e7b": null, "4210304:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4210399:sub_403edf": null, "4210400:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4210459:sub_403f1b": null, "4210464:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = &v1[1];\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4210685:sub_403ffd": null, "4210688:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c], Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_40404a:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_40404a;\n
        if (v12 < 0)\n
            goto LABEL_40404a;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_404154:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_404154;\n
                v6 += 1;\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_4041d5;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_4041d5:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404341;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4042fe;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4042fe:\n
                if (v8 >= v12)\n
                    goto LABEL_404341;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_4042f5;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_4042f5:\n
                v8 += 10;\n
                goto LABEL_4042fe;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_40426f;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_40426f:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404341:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4211603:sub_404393": null, "4211616:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4211657:sub_4043c9": null, "4211664:cgc_read_n": "long long cgc_read_n(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v3 = a0;\n
    v1 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v1 - a1;\n
        if (cgc_receive(a0, a1, a2, v5))\n
            break;\n
        if (!*(&v0))\n
            break;\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    return v1 - a1;\n
}\n
", "4211805:sub_40445d": null, "4211808:cgc_readuntil": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_readuntil(unsigned long long a0, struct_0 *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // rax\n
\n
    v3 = a0;\n
    v1 = a1;\n
    for (v2 = 0; v2 < a2; v2 += 1)\n
    {\n
        if (cgc_receive(a0, a1, a2, a3))\n
        {\n
LABEL_4044bf:\n
            break;\n
        }\n
        else\n
        {\n
            if (!*(&v0))\n
                goto LABEL_4044bf;\n
            v5 = v1;\n
            v1 = &v5->field_0;\n
            if (v5->field_-1 == a3)\n
                break;\n
        }\n
    }\n
    *((v1 - 1)) = 0;\n
    return v1 - a1;\n
}\n
", "4211990:sub_404516": null, "4212000:cgc_cleanup_input": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_cleanup_input(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
        return v1;\n
    if (a0->field_8)\n
        cgc_free_pkk(a0->field_8);\n
    if (*(&a0->field_18))\n
        cgc_free(*(&a0->field_18));\n
    v1 = cgc_free(a0);\n
    return v1;\n
}\n
", "4212094:sub_40457e": null, "4212096:cgc_parse_input": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_parse_input()\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x20]\n
    char v3;  // [bp-0x16]\n
    char v4;  // [bp-0x14]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_malloc(32);\n
    if (!v2)\n
    {\n
LABEL_4048d7:\n
        cgc_cleanup_input(v2);\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (cgc_read_n(0, &v4, 4) == 4 && *(&v4) == 3630920913)\n
    {\n
        v1 += 4;\n
        if (!(cgc_read_n(0, &v4, 4) == 4))\n
            goto LABEL_4048d7;\n
        v1 += 4;\n
        v2->field_0 = *(&v4);\n
        if (cgc_read_n(0, &v4, 4) == 4 && *(&v4) == 52793398)\n
        {\n
            v1 += 4;\n
            if (!(cgc_read_n(0, &v4, 4) == 4))\n
                goto LABEL_4048d7;\n
            v1 += 4;\n
            v2->field_4 = *(&v4);\n
            if (v2->field_4 > 0 && v2->field_4 < 0x100000)\n
            {\n
                v0 = cgc_malloc(v2->field_4);\n
                if (!(cgc_read_n(0, v0, v2->field_4) == v2->field_4))\n
                    goto LABEL_4048d7;\n
                v2->field_8 = cgc_parse_pkk(v0, v2->field_4);\n
                if (!v2->field_8)\n
                    goto LABEL_4048d7;\n
                v1 = v2->field_4 + v1;\n
            }\n
            if (cgc_read_n(0, &v4, 4) == 4 && *(&v4) == 3146098460)\n
            {\n
                v1 += 4;\n
                if (!(cgc_read_n(0, &v3, 2) == 2))\n
                    goto LABEL_4048d7;\n
                v1 += 2;\n
                v2->field_10 = *(&v3);\n
                if (cgc_read_n(0, &v4, 4) == 4 && *(&v4) == 3220168169)\n
                {\n
                    v1 += 4;\n
                    if (!(cgc_read_n(0, &v3, 2) == 2))\n
                        goto LABEL_4048d7;\n
                    v1 += 2;\n
                    v2->field_12 = *(&v3);\n
                    if (v2->field_12 > 0)\n
                    {\n
                        if (!(v2->field_12 <= 1000))\n
                            goto LABEL_4048d7;\n
                        v2->field_18 = cgc_malloc(v2->field_12);\n
                        if (!(cgc_read_n(0, v2->field_18, v2->field_12) == v2->field_12))\n
                            goto LABEL_4048d7;\n
                        v1 = v2->field_12 + v1;\n
                    }\n
                    if (cgc_read_n(0, &v4, 4) == 4 && *(&v4) == 2875591408)\n
                    {\n
                        v1 += 4;\n
                        if (v1 == v2->field_0)\n
                        {\n
                            v5 = v2;\n
                            return v5;\n
                        }\n
                        goto LABEL_4048d7;\n
                    }\n
                    goto LABEL_4048d7;\n
                }\n
                goto LABEL_4048d7;\n
            }\n
            goto LABEL_4048d7;\n
        }\n
        goto LABEL_4048d7;\n
    }\n
    goto LABEL_4048d7;\n
}\n
", "4212978:sub_4048f2": null, "4212992:cgc_embed_text": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_embed_text(struct_0 *a0, unsigned int a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    char v1;  // [bp-0x49]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44]\n
    char *v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x38], Other Possible Types: unsigned int *\n
    char *v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    if (a0 && a1 && a0->field_8)\n
    {\n
        v4 = &a0->field_8->field_0;\n
        v7 = a2 + 10;\n
        if (a0->field_4 * a0->field_0 * 3 >> 3 < v7)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v6 = cgc_malloc(v7);\n
        if (!v6)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v5 = v6;\n
        *(&v5) = 3045274566;\n
        v5 += 4;\n
        *(&v5) = a2;\n
        v5 += 2;\n
        cgc_memcpy(v5, a1, a2);\n
        v5 = &v5[a2];\n
        *(v5) = 84385816;\n
        for (v3 = 0; v3 < v7; v3 += 1)\n
        {\n
            v1 = v6[v3];\n
            for (v2 = 1; v2 <= 8; v2 += 1)\n
            {\n
                v0 = *(v4) & 1;\n
                if (v0 != ((v1 >> ((8 - v2) & 31)) & 1))\n
                {\n
                    if (!v0)\n
                        *(v4) = *(v4) | 1;\n
                    else\n
                        *(v4) = *(v4) & 4294967294;\n
                }\n
                v4 += 1;\n
            }\n
        }\n
        v8 = 0;\n
        return v8;\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4213482:sub_404aea": null, "4213488:cgc_recover_byte": "long long cgc_recover_byte(struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
\n
    v1 = 0;\n
    for (v2 = 0; v2 < 8; v2 += 1)\n
    {\n
        v1 *= 2;\n
        v0 = *(a0)->field_0 & 1;\n
        v1 |= v0;\n
        *(a0) = *(a0) + 1;\n
    }\n
    return v1;\n
}\n
", "4213589:sub_404b55": null, "4213600:cgc_extract_text": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_extract_text(struct_0 *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned short v1;  // [bp-0x3e], Other Possible Types: char\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x34]\n
    char *v4;  // [bp-0x30]\n
    char v5;  // [bp-0x21]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    if (a0 && a1 && a0->field_8)\n
    {\n
        v2 = 0;\n
        v4 = a0->field_8;\n
        for (v3 = 0; v3 < 4; v3 += 1)\n
        {\n
            v5 = cgc_recover_byte(&v4);\n
            v2 = v5 << (v3 * 8 & 31) & (255 << (v3 * 8 & 31)) | v2;\n
        }\n
        if (v2 != 3045274566)\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
        for (v3 = 0; v3 < 2; v3 += 1)\n
        {\n
            v5 = cgc_recover_byte(&v4);\n
            v0 = v5 << (v3 * 8 & 31);\n
            v1 = *(&v1) | v0 & (255 << (v3 * 8 & 31));\n
        }\n
        for (v3 = 0; v3 < v1; v3 += 1)\n
        {\n
            v5 = cgc_recover_byte(&v4);\n
            a1[v3] = v5;\n
        }\n
        v2 = 0;\n
        for (v3 = 0; v3 < 4; v3 += 1)\n
        {\n
            v5 = cgc_recover_byte(&v4);\n
            v2 = v5 << (v3 * 8 & 31) & (255 << (v3 * 8 & 31)) | v2;\n
        }\n
        if (v2 == 84385816)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v6 = -1;\n
        return v6;\n
    }\n
    v6 = -1;\n
    return v6;\n
}\n
", "4214061:sub_404d2d": null, "4214064:main": "typedef struct struct_0 {\n
    char padding_0[8];\n
    void* field_8;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
int main(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x424]\n
    struct_0 *v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x418]\n
    char v3;  // [bp-0x40c]\n
    char v4;  // [bp-0x408]\n
    unsigned long v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v9;  // esi\n
\n
    v7 = 0;\n
    v6 = a0;\n
    v5 = a1;\n
    v1 = cgc_parse_input();\n
    if (!v1)\n
    {\n
        cgc_printf(\"[ERROR] Failed to parse input.\\n
\", a1, a2, a3, a4);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v0 = v1->field_10;\n
    if (v0 == 4919)\n
    {\n
        v9 = v1->field_18;\n
        if (cgc_embed_text(v1->field_8, v9, v1->field_12))\n
        {\n
            cgc_printf(\"[ERROR] Failed to embed your message.\\n
\", *(&v9), a2, a3, a4);\n
        }\n
        else\n
        {\n
            *(&v2) = cgc_output_pkk(v1->field_8, &v3);\n
            if (*(&v2))\n
            {\n
                cgc_transmit(a0, *(&v9), a2, a3);\n
                cgc_free(*(&v2));\n
            }\n
        }\n
    }\n
    else if (v0 != 29489)\n
    {\n
        cgc_printf(\"[ERROR] Invalid mode.\\n
\", a1, a2, a3, a4);\n
    }\n
    else if (!cgc_extract_text(v1->field_8, &v4))\n
    {\n
        cgc_printf(\"Secret Text: %s\\n
\", &v4, a2, a3, a4);\n
    }\n
    else\n
    {\n
        cgc_printf(\"[ERROR] Failed to extract the message.\\n
\", a1, a2, a3, a4);\n
    }\n
    cgc_cleanup_input(v1);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4214474:sub_404eca": null, "4214480:cgc_skip_whitespace": "long long cgc_skip_whitespace(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (*(v2) != 10)\n
        {\n
            v0 = 1;\n
            if (*(v2) != 13)\n
            {\n
                v0 = 1;\n
                if (*(v2) != 32)\n
                    v0 = *(v2) == 9;\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (!v1)\n
            break;\n
        v2 += 1;\n
        v1 -= 1;\n
    }\n
    return v2;\n
}\n
", "4214633:sub_404f69": null, "4214640:cgc_parse_pkk": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_parse_pkk(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3[3];  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x20]\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v5 = 0;\n
    v4 = a0;\n
    *(&v3[0]) = 0;\n
    if (a0)\n
    {\n
        v3 = cgc_malloc(16);\n
        if (v3 && !cgc_memcmp(v4, \"PK\\n
\", 3))\n
        {\n
            v4 += 3;\n
            v4 = cgc_skip_whitespace(v4, a1 - 3);\n
            if (&a0[a1] > v4)\n
            {\n
                while (*(v4) == 35)\n
                {\n
                    while (true)\n
                    {\n
                        v0 = 0;\n
                        if (*(v4) != 10)\n
                            v0 = v4 < &a0[a1];\n
                        if (!(v0 & 1))\n
                            break;\n
                        v4 += 1;\n
                    }\n
                }\n
                if (&a0[a1] > v4)\n
                {\n
                    v1 = cgc_strtoul(v4, &v4, 10);\n
                    v2 = cgc_strtoul(v4, &v4, 10);\n
                    v4 = cgc_skip_whitespace(v4, &a0[a1] - v4);\n
                    if (cgc_strtoul(v4, &v4, 10) == 255)\n
                    {\n
                        v4 += 1;\n
                        v3 = cgc_malloc(16);\n
                        *(v3) = v2;\n
                        *((v3 + 4)) = v1;\n
                        if (3 <= (0 CONCAT (0 CONCAT -1) /m v2) /m v1 && &v4[3 * v1 * v2] <= &a0[a1])\n
                        {\n
                            *((v3 + 8)) = cgc_malloc(v1 * v2 * 3);\n
                            if (*((v3 + 8)))\n
                            {\n
                                cgc_memcpy(*((v3 + 8)), v4, v1 * v2 * 3);\n
                                v6 = v3;\n
                                return v6;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc_free_pkk(v3);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4215322:sub_40521a": null, "4215328:cgc_free_pkk": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free_pkk(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
        return v1;\n
    if (*(&a0->field_8))\n
        cgc_free(*(&a0->field_8));\n
    v1 = cgc_free(a0);\n
    return v1;\n
}\n
", "4215394:sub_405262": null, "4215408:cgc_output_pkk": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_output_pkk(struct_0 *a0, unsigned int *a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    char v2[3];  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x2c]\n
    char v4[3];  // [bp-0x28], Other Possible Types: unsigned long\n
    char v5[3];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0->field_4 * a0->field_0 * 3 + 58;\n
    *(&v2) = 0;\n
    *(&v2) = cgc_malloc(v3);\n
    if (v2)\n
    {\n
        cgc_memset(v2, 0, v3);\n
        *(&v4) = v2;\n
        cgc_strcpy(v4, \"PK\\n
\");\n
        *(&v4) = v4 + 1;\n
        v1 = cgc_sprintf(v4, \"%d %d\\n
255\\n
\", a0->field_4, a0->field_0, a4);\n
        if (v1 != -1)\n
        {\n
            *(&v4) = &v4[v1];\n
            for (v0 = 0; v0 < a0->field_4 * a0->field_0; v0 += 1)\n
            {\n
                *(v4) = *((a0->field_8 + v0 * 3));\n
                *((v4 + 1)) = *((a0->field_8 + v0 * 3 + 1));\n
                *((v4 + 2)) = *((a0->field_8 + v0 * 3 + 2));\n
                v4 += 1;\n
            }\n
            *(a1) = (v4 - v2);\n
            *(&v5) = v2;\n
            return v5;\n
        }\n
    }\n
    if (v2)\n
        cgc_free(v2);\n
    *(a1) = 0;\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215848:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_transmit": null, "5242896:cgc_allocate": null, "5242904:cgc_deallocate": null, "5242912:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}