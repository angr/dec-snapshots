{"4202496:_init": "extern struct_0 *g_406230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406230;\n
    if (g_406230)\n
        v1 = g_406230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406250;\n
    goto *(4219480);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4219456);\n
}\n
", "4202656:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202693:sub_4020c5": null, "4202694:sub_4020c6": null, "4202704:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202745:sub_4020f9": null, "4202752:register_tm_clones": "extern unsigned long long g_406238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202809:sub_402139": null, "4202816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202869:sub_402175": null, "4202873:sub_402179": null, "4202880:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202889:sub_402189": null, "4202896:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
    char *v5;  // rax\n
\n
    v1 = a2;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v1)\n
    {\n
        v0 = a0;\n
        while (true)\n
        {\n
            v4 = v1;\n
            v1 = v4 - 1;\n
            if (!v4)\n
                break;\n
            v5 = v0;\n
            v0 = v5 + 1;\n
            *(v5) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4203033:sub_402219": null, "4203040:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v1)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(v1);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v3 = *(v2) - *(v1);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4203215:sub_4022cf": null, "4203216:cgc_strncmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strncmp(struct_0 *a0, struct_0 *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rax\n
    struct_0 *v6;  // rax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // rcx\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v5 = v0;\n
            v0 = v5 - 1;\n
            if (!v5)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v6 = v2;\n
            v2 = &v6->field_0;\n
            v7 = v6->field_-1;\n
            v8 = v1;\n
            v1 = &v8->field_0;\n
            if (v7 != v8->field_-1)\n
            {\n
                v3 = *((v2 - 1)) - *((v1 - 1));\n
                return v3;\n
            }\n
        }\n
    }\n
}\n
", "4203418:sub_40239a": null, "4203424:cgc_strlcpy": "long long cgc_strlcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a2)\n
    {\n
        for (v0 = 0; v0 < a2 - 1; v0 += 1)\n
        {\n
            if (!*((a1 + v0)))\n
                break;\n
            *((a0 + v0)) = *((a1 + v0));\n
        }\n
        *((a0 + v0)) = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4203637:sub_402475": null, "4203648:cgc_strlcat": "long long cgc_strlcat(unsigned long long a0, unsigned int a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = cgc_strlen(a0);\n
        v0 = v1;\n
        v2 = v0 + cgc_strlcpy(a0 + v1, a1, a2 - v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4203810:sub_402522": null, "4203824:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v0 = v1; *(v1); v1 += 1);\n
    v2 = v1 - v0;\n
    return v2;\n
}\n
", "4203915:sub_40258b": null, "4203920:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v0 = a0;\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 < 0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 > 255)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            if (*(v0) != a1)\n
            {\n
                v3 = v0;\n
                v0 = v3 + 1;\n
                if (!*(v3))\n
                {\n
                    v1 = 0;\n
                    return v1;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
    }\n
}\n
", "4204086:sub_402636": null, "4204096:cgc_strspn": "long long cgc_strspn(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = 0;\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
            {\n
                v5 = v2;\n
                v2 = v5 + 1;\n
                v0 = cgc_strchr(a1, *(v5));\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v1 += 1;\n
        }\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4204282:sub_4026fa": null, "4204288:cgc_strcspn": "long long cgc_strcspn(char *a0, char *a1)\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    v0 = 0;\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        else if (!cgc_strchr(a1, *(v1)))\n
        {\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4204464:cgc_strtok": "extern struct_0 *cgc_strtok.p;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    if (v2)\n
        cgc_strtok.p = v2;\n
    if (!cgc_strtok.p)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1)\n
    {\n
        v0 = &cgc_strtok.p->field_0;\n
        v2 = &v0[cgc_strspn(cgc_strtok.p, a1)];\n
        v1 = v2;\n
        cgc_strtok.p = &v1[cgc_strcspn(v2, a1)];\n
        if (cgc_strtok.p == v2)\n
        {\n
            cgc_strtok.p = 0;\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!cgc_strtok.p->field_0)\n
        {\n
            cgc_strtok.p = 0;\n
        }\n
        else\n
        {\n
            cgc_strtok.p->field_0 = 0;\n
            cgc_strtok.p = cgc_strtok.p + 1;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4204751:sub_4028cf": null, "4204752:cgc_strdup": "long long cgc_strdup(char *a0)\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long long\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = cgc_strlen(a0) + 1;\n
    v0 = cgc_malloc(v1);\n
    if (v0)\n
        cgc_memcpy(v0, a0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4204880:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long long v4;  // rax\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    while (true)\n
    {\n
        v4 = v2;\n
        v2 = v4 - 1;\n
        if (!v4)\n
            break;\n
        v5 = v0;\n
        v0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v1;\n
        v1 = v6 + 1;\n
        *(v6) = tmp_19;\n
    }\n
    return a0;\n
}\n
", "4204982:sub_4029b6": null, "4204992:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a1;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a2)\n
        {\n
            v4 = v1;\n
            return v4;\n
        }\n
        v2 = cgc_transmit(a0, a1, a2, v6);\n
        if (v2 > 0)\n
        {\n
            cgc_printf(3, \"tried writing to %d\\n
\", a0);\n
            v4 = -1;\n
            return v4;\n
        }\n
        v1 = v0 + v1;\n
    }\n
}\n
", "4205149:sub_402a5d": null, "4205152:cgc_transmit_str": "long long cgc_transmit_str(unsigned long a0, char *a1)\n
{\n
    return cgc_transmit_all(a0, a1, cgc_strlen(a1));\n
}\n
", "4205211:sub_402a9b": null, "4205216:cgc_receive_all": "long long cgc_receive_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long long v5;  // rcx\n
\n
    v3 = a1;\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v2 = cgc_receive(a0, a1, a2, v5);\n
        if (v2)\n
        {\n
            cgc_printf(2, \"got error reading from %u: %u\\n
\", a0, v2);\n
            cgc_err(4, \"receive failed (got err)\\n
\");\n
        }\n
        if (!*(&v1))\n
        {\n
            cgc_printf(2, \"received nothing from %u: %u\\n
\", a0, v2);\n
            cgc_err(5, \"receive failed\\n
\");\n
        }\n
    }\n
    return v0;\n
}\n
", "4205417:sub_402b69": null, "4205424:cgc_err": "long long cgc_err(unsigned long a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
    unsigned long long v4;  // r8\n
    unsigned long long v5;  // r9\n
\n
    v0 = a0;\n
    cgc_transmit_str(2, a1);\n
    cgc__terminate(2);\n
    return cgc_read_until(2, a1, v2, v3, v4, v5);\n
}\n
", "4205472:cgc_read_until": "long long cgc_read_until(unsigned long long a0, unsigned long a1, unsigned long long a2, char *a3)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1e]\n
    char v3;  // [bp-0x1d]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    v3 = a3;\n
    for (v1 = 0; !cgc_receive(a0, a1, a2, a3); *((a1 + a3)) = v2)\n
    {\n
        if (!*(&v0))\n
            break;\n
        if (v2 == v3)\n
        {\n
            v5 = v1;\n
            return v5;\n
        }\n
        if (v1 >= a2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        a3 = v1;\n
        v1 = a3 + 1;\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4205643:sub_402c4b": null, "4205648:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rax\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    while (true)\n
    {\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        if (!v5)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (*(v1) == *(v0))\n
        {\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = *(v1) - *(v0);\n
            return v3;\n
        }\n
    }\n
}\n
", "4205792:cgc_sleep": "long long cgc_sleep(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
\n
    v0 = a0;\n
    v1 = 0;\n
    return cgc_fdwait(a0, v3, v4, v5, v6);\n
}\n
", "4205844:sub_402d14": null, "4205856:cgc_ffs_u": "long long cgc_ffs_u(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (v0 < 32)\n
    {\n
        if ((a0 & 1 << (v0 & 63)))\n
        {\n
            if (!(!1))\n
                goto LABEL_402d96;\n
            goto LABEL_402d91;\n
        }\n
        else if (false)\n
        {\n
LABEL_402d96:\n
            v0 += 1;\n
        }\n
        else\n
        {\n
LABEL_402d91:\n
            break;\n
        }\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4206004:sub_402db4": null, "4206016:cgc_malloc": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_8;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
    struct struct_1 *field_20;\n
    struct struct_0 *field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
extern unsigned short g_4063d4;\n
extern char g_4063d6;\n
extern char g_4064c6;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    struct_3 *v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x10]\n
    struct_2 *v6;  // rax\n
    struct_2 *v7;  // rax\n
\n
    if (a0 <= 0)\n
    {\n
        cgc_printf(2, \"fail: size > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 160);\n
        cgc__terminate(2);\n
    }\n
    if (!g_4064c6)\n
        cgc_malloc_init();\n
    if (a0 > g_4063d4)\n
    {\n
        v4 = cgc_malloc_large(a0);\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < 10; v3 += 1)\n
    {\n
        if (a0 <= *(&(&g_4063d6)[16 + 24 * v3]))\n
            break;\n
    }\n
    v1 = &(&g_4063d6)[24 * v3];\n
    if (!v1->field_0)\n
    {\n
        v0 = cgc_malloc_request_chunk(1);\n
        v0->field_18 = v1;\n
        v0->field_8 = v1->field_10;\n
        v0->field_12 = v1->field_12;\n
        if (!v0)\n
        {\n
            cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 182);\n
            cgc__terminate(2);\n
        }\n
        v0->field_28 = 0;\n
        v0->field_20 = &v1->field_0->padding_0;\n
        if (v1->field_0)\n
            v1->field_0->field_28 = &v0->padding_0;\n
        v1->field_0 = v0;\n
    }\n
    v0 = v1->field_0;\n
    v3 = cgc_ffs_u(v0->field_14);\n
    v6 = v0;\n
    v6->field_10 = v6->field_10 + 1;\n
    v7 = v0;\n
    v7->field_14 = v7->field_14 | (1 << (v3 & 63));\n
    if (v0->field_10 == v0->field_12)\n
    {\n
        if (!v1->field_0)\n
        {\n
            cgc_printf(2, \"fail: (bucket->avail_list) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 193);\n
            cgc__terminate(2);\n
        }\n
        if (!v0)\n
        {\n
            cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 193);\n
            cgc__terminate(2);\n
        }\n
        if (v0 == v1->field_0)\n
        {\n
            v1->field_0 = &v0->field_20->padding_0;\n
        }\n
        else\n
        {\n
            if (v0->field_28)\n
                v0->field_28->field_20 = v0->field_20;\n
            if (v0->field_20)\n
                v0->field_20->field_28 = v0->field_28;\n
        }\n
        if (!v0)\n
        {\n
            cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 194);\n
            cgc__terminate(2);\n
        }\n
        v0->field_28 = 0;\n
        v0->field_20 = v1->field_8;\n
        if (v1->field_8)\n
            v1->field_8->field_28 = v0;\n
        v1->field_8 = &v0->padding_0;\n
        if (!v1->field_8)\n
        {\n
            cgc_printf(2, \"fail: bucket->full_list != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 195);\n
            cgc__terminate(2);\n
        }\n
    }\n
    v2 = &v0->padding_0[1 + v3 * v1->field_10];\n
    v4 = v2;\n
    return v4;\n
}\n
", "4207057:sub_4031d1": null, "4207072:cgc_malloc_init": "extern unsigned short g_4063d4;\n
extern char g_4063d6;\n
extern char g_4064c6;\n
extern unsigned int state;\n
\n
long long cgc_malloc_init()\n
{\n
    unsigned short v0;  // [bp-0x16]\n
    int tmp_20;  // tmp #20\n
    int tmp_22;  // tmp #22\n
    int tmp_21;  // tmp #21\n
    unsigned short v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x12]\n
    unsigned short v3[10];  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned int v5;  // eax\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
\n
    *(&v3[0]) = 0;\n
    v2 = 128;\n
    state = 0;\n
    cgc_memset(&state, 0, 247);\n
    v1 = 4048;\n
    for (v0 = 0; v0 < 10; v0 += 1)\n
    {\n
        v3 = &(&g_4063d6)[24 * v0];\n
        *((v3 + 16)) = v2;\n
        v5 = v1;\n
        *((v3 + 18)) = (v5 >> 31 CONCAT v5) /m v2;\n
        if (*((v3 + 18)) <= 1)\n
        {\n
            cgc_printf(2, \"fail: bucket->elements_per_page > 1 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 93);\n
            cgc__terminate(2);\n
        }\n
        if (*((v3 + 18)) > 32)\n
        {\n
            cgc_printf(2, \"fail: bucket->elements_per_page <= 32 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 94);\n
            cgc__terminate(2);\n
        }\n
        tmp_20 = DivV(tmp_22, tmp_21);\n
        v2 = tmp_20;\n
    }\n
    if (!v3)\n
    {\n
        cgc_printf(2, \"fail: bucket != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 98);\n
        cgc__terminate(2);\n
    }\n
    if (v0 != 10)\n
    {\n
        cgc_printf(2, \"fail: i == MAX_BUCKETS at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 99);\n
        cgc__terminate(2);\n
    }\n
    g_4063d4 = *((v3 + 16));\n
    v7 = g_4063d4;\n
    if (g_4063d4 <= 0)\n
    {\n
        cgc_printf(2, \"fail: state.largest_bucket > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 101);\n
        v7 = cgc__terminate(2);\n
    }\n
    g_4064c6 = 1;\n
    return v7;\n
}\n
", "4207602:sub_4033f2": null, "4207616:cgc_malloc_large": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_malloc_large(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
\n
    v2 = a0 + 4143 >> 12;\n
    v0 = cgc_malloc_request_chunk(v2);\n
    v0->field_8 = a0;\n
    v1 = v0 + 3;\n
    return v1;\n
}\n
", "4207697:sub_403451": null, "4207712:cgc_malloc_request_chunk": "extern unsigned int state;\n
\n
long long cgc_malloc_request_chunk(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long long *v2;  // [bp-0x18]\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1 = a0 * 0x1000;\n
    if (v1 <= 0)\n
    {\n
        cgc_printf(2, \"fail: size > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 120);\n
        cgc__terminate(2);\n
    }\n
    if ((0 CONCAT v1) /m a0 != 0x1000)\n
    {\n
        cgc_printf(2, \"fail: size / pages == PAGE_SIZE at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 121);\n
        cgc__terminate(2);\n
    }\n
    v0 = cgc_allocate(a0, v4, v5);\n
    if (v0)\n
    {\n
        cgc_printf(2, \"fail: ret == 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 124);\n
        cgc__terminate(2);\n
    }\n
    if (!v2)\n
    {\n
        cgc_printf(2, \"fail: result != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 125);\n
        cgc__terminate(2);\n
    }\n
    *(v2) = a0;\n
    state = state + a0;\n
    return v2;\n
}\n
", "4208044:sub_4035ac": null, "4208048:cgc_free": "typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    unsigned int field_14;\n
    struct struct_2 *field_18;\n
    struct struct_0 *field_20;\n
    struct struct_1 *field_28;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
    unsigned short field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
long long cgc_free(struct_3 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_2 *v1;  // [bp-0x20]\n
    struct_3 *v2;  // [bp-0x18]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    struct_3 *v5;  // rax\n
    struct_3 *v6;  // rax\n
\n
    if (!a0)\n
    {\n
        cgc_printf(2, \"fail: ptr != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 206);\n
        cgc__terminate(2);\n
    }\n
    v2 = a0 & -0x1000;\n
    if (!v2->field_18)\n
    {\n
        v4 = cgc_malloc_release_chunk(v2);\n
        return v4;\n
    }\n
    v1 = v2->field_18;\n
    v0 = (0 CONCAT a0 - v2 - 48) /m v1->field_10;\n
    if ((v2->field_14 & 1 << (v0 & 63)))\n
    {\n
        if (!(!1))\n
            goto LABEL_4036b4;\n
    }\n
    else\n
    {\n
        if (!(!0))\n
            goto LABEL_4036b4;\n
    }\n
    cgc_printf(2, \"fail: BIT_IS_SET(chunk->used_mask, i) at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 216);\n
    cgc__terminate(2);\n
LABEL_4036b4:\n
    v5 = v2;\n
    v5->field_14 = v5->field_14 & (1 << (v0 & 63) ^ -1);\n
    if (v2->field_10 == v2->field_12)\n
    {\n
        if (!v1->field_8)\n
        {\n
            cgc_printf(2, \"fail: (bucket->full_list) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 220);\n
            cgc__terminate(2);\n
        }\n
        if (!v2)\n
        {\n
            cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 220);\n
            cgc__terminate(2);\n
        }\n
        if (v2 == v1->field_8)\n
        {\n
            v1->field_8 = v2->field_20;\n
        }\n
        else\n
        {\n
            if (v2->field_28)\n
                v2->field_28->field_20 = v2->field_20;\n
            if (v2->field_20)\n
                v2->field_20->field_28 = v2->field_28;\n
        }\n
        if (!v2)\n
        {\n
            cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 221);\n
            cgc__terminate(2);\n
        }\n
        v2->field_28 = 0;\n
        v2->field_20 = v1->field_0;\n
        if (v1->field_0)\n
            v1->field_0->field_28 = v2;\n
        v1->field_0 = &v2->padding_0;\n
    }\n
    v6 = v2;\n
    v6->field_10 = v6->field_10 - 1;\n
    v4 = v2->field_10;\n
    if (v4)\n
        return v2->field_10;\n
    if (!v1->field_0)\n
    {\n
        cgc_printf(2, \"fail: (bucket->avail_list) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 227);\n
        cgc__terminate(2);\n
    }\n
    if (!v2)\n
    {\n
        cgc_printf(2, \"fail: (chunk) != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 227);\n
        cgc__terminate(2);\n
    }\n
    if (v2 == v1->field_0)\n
    {\n
        v1->field_0 = v2->field_20;\n
    }\n
    else\n
    {\n
        if (v2->field_28)\n
            v2->field_28->field_20 = v2->field_20;\n
        if (v2->field_20)\n
            v2->field_20->field_28 = v2->field_28;\n
    }\n
    v4 = cgc_malloc_release_chunk(v2);\n
    return v4;\n
}\n
", "4209055:sub_40399f": null, "4209056:cgc_malloc_release_chunk": "extern unsigned int state;\n
\n
long long cgc_malloc_release_chunk(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!a0)\n
    {\n
        cgc_printf(2, \"fail: chunk != NULL at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 107);\n
        cgc__terminate(2);\n
    }\n
    if (*(a0) <= 0)\n
    {\n
        cgc_printf(2, \"fail: chunk->pages > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 108);\n
        cgc__terminate(2);\n
    }\n
    state = state - *(a0);\n
    v3 = cgc_deallocate(a0, v2);\n
    v0 = v3;\n
    if (!v0)\n
        return v3;\n
    cgc_printf(2, \"fail: result == 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 111);\n
    v3 = cgc__terminate(2);\n
    return v3;\n
}\n
", "4209297:sub_403a91": null, "4209312:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
\n
    v2 = a1;\n
    if (a0 <= 0)\n
    {\n
        cgc_printf(2, \"fail: nmemb > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 237);\n
        cgc__terminate(2);\n
    }\n
    if (v2 <= 0)\n
    {\n
        cgc_printf(2, \"fail: size > 0 at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 238);\n
        cgc__terminate(2);\n
    }\n
    v0 = v2;\n
    if (v0 >= (0 CONCAT 4294967295) /m a0)\n
    {\n
        cgc_printf(2, \"fail: size < ( (unsigned int) SIZE_MAX / nmemb) at %s (%u)\\n
\", \"/home/user/src/cb-multios/challenges/Pipelined/cb_1/lib/cgc_malloc.c\", 239);\n
        cgc__terminate(2);\n
    }\n
    v2 *= a0;\n
    v1 = cgc_malloc(v2);\n
    return cgc_memset(v1, 0, v2);\n
}\n
", "4209582:sub_403bae": null, "4209584:cgc_printf": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_printf(unsigned long a0, char a1[2], unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x158]\n
    unsigned int v1;  // [bp-0x14c]\n
    struct_0 *v2;  // [bp-0x148]\n
    unsigned int v3;  // [bp-0x13c]\n
    unsigned long long *v4;  // [bp-0x138]\n
    unsigned int v5;  // [bp-0x12c]\n
    struct_0 *v6;  // [bp-0x128]\n
    unsigned int v7;  // [bp-0x11c]\n
    unsigned int *v8;  // [bp-0x118]\n
    unsigned int v9;  // [bp-0x10c]\n
    struct_0 *v10;  // [bp-0x108]\n
    unsigned int v11;  // [bp-0x100]\n
    unsigned int v12;  // [bp-0xfc]\n
    char v13;  // [bp-0xf8]\n
    unsigned long v14;  // [bp-0xe8]\n
    unsigned long v15;  // [bp-0xe0]\n
    unsigned long v16;  // [bp-0xd8]\n
    unsigned long v17;  // [bp-0xd0]\n
    int v18;  // [bp-0xc8]\n
    int v19;  // [bp-0xb8]\n
    int v20;  // [bp-0xa8]\n
    int v21;  // [bp-0x98]\n
    int v22;  // [bp-0x88]\n
    int v23;  // [bp-0x78]\n
    int v24;  // [bp-0x68]\n
    int v25;  // [bp-0x58]\n
    void* v26;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v27;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x38]\n
    unsigned int v29;  // [bp-0x34]\n
    unsigned long v30;  // [bp-0x30]\n
    unsigned long v31;  // [bp-0x28]\n
    char v32[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v33;  // [bp+0x8]\n
    char v34;  // al\n
    int v35;  // xmm0\n
    int v36;  // xmm1\n
    int v37;  // xmm2\n
    int v38;  // xmm3\n
    int v39;  // xmm4\n
    int v40;  // xmm5\n
    int v41;  // xmm6\n
    int v42;  // xmm7\n
    unsigned long v43;  // r9\n
    char v44[2];  // rax\n
    struct_0 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v49;  // rcx\n
    struct_0 *v50;  // rcx\n
    unsigned long long v51;  // rdx\n
    unsigned long long *v52;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v53;  // rcx\n
    struct_0 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v57;  // rcx\n
\n
    if (v34)\n
    {\n
        v18 = v35;\n
        v19 = v36;\n
        v20 = v37;\n
        v21 = v38;\n
        v22 = v39;\n
        v23 = v40;\n
        v24 = v41;\n
        v25 = v42;\n
    }\n
    v17 = v43;\n
    v16 = a4;\n
    v15 = a3;\n
    v14 = a2;\n
    *(&v32) = a1;\n
    v27 = 0;\n
    v26 = 0;\n
    v31 = &v13;\n
    v30 = &v33;\n
    v29 = 48;\n
    v28 = 16;\n
    for (v27 = 0; v32[0]; v32 += 1)\n
    {\n
        if (v32[0] == 37)\n
        {\n
            v44 = v32;\n
            v32 = &v44[1];\n
            v12 = v44[1];\n
            if (v12 == 99)\n
            {\n
                v9 = a0;\n
                v10 = &v28;\n
                v11 = v28;\n
                if (v11 <= 40)\n
                {\n
                    v46 = v10;\n
                    v47 = v11;\n
                    v48 = v47 + v46->field_10;\n
                    *(&v46->field_0) = v47 + 8;\n
                }\n
                else\n
                {\n
                    v49 = v10;\n
                    v48 = v49->field_8;\n
                    v49->field_8 = v48 + 8;\n
                }\n
                v8 = v48;\n
                v27 = cgc_transmit_char(v9, *(v8)) + v27;\n
            }\n
            else if (v12 == 115)\n
            {\n
                v5 = a0;\n
                v6 = &v28;\n
                v7 = v28;\n
                if (v7 <= 40)\n
                {\n
                    v50 = v6;\n
                    v51 = v7;\n
                    v52 = v51 + v50->field_10;\n
                    *(&v50->field_0) = v51 + 8;\n
                }\n
                else\n
                {\n
                    v53 = v6;\n
                    v52 = v53->field_8;\n
                    v53->field_8 = v52 + 8;\n
                }\n
                v4 = v52;\n
                v27 = cgc_transmit_string(v5, *(v4)) + v27;\n
            }\n
            else if (v12 == 117)\n
            {\n
                v1 = a0;\n
                v2 = &v28;\n
                v3 = v28;\n
                if (v3 <= 40)\n
                {\n
                    v54 = v2;\n
                    v55 = v3;\n
                    v56 = v55 + v54->field_10;\n
                    *(&v54->field_0) = v55 + 8;\n
                }\n
                else\n
                {\n
                    v57 = v2;\n
                    v56 = v57->field_8;\n
                    v57->field_8 = v56 + 8;\n
                }\n
                v0 = v56;\n
                v27 = cgc_transmit_unsigned(v1, *(v0)) + v27;\n
            }\n
            else\n
            {\n
                v27 = cgc_transmit_char(a0, *(v32)) + v27;\n
            }\n
        }\n
        else\n
        {\n
            v27 = cgc_transmit_char(a0, *(v32)) + v27;\n
        }\n
        v26 = v27;\n
    }\n
    return v27;\n
}\n
", "4210357:sub_403eb5": null, "4210368:cgc_transmit_char": "long long cgc_transmit_char(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x15]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v0 = cgc_transmit(a0, a1, v6, v7);\n
    if (v0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = *(&v1);\n
    return v4;\n
}\n
", "4210450:sub_403f12": null, "4210464:cgc_transmit_string": "long long cgc_transmit_string(unsigned long a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_strlen(a1);\n
    v0 = cgc_transmit_all(a0, a1, v1);\n
    if (v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4210552:sub_403f78": null, "4210560:cgc_transmit_unsigned": "long long cgc_transmit_unsigned(unsigned long a0, unsigned long a1)\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v1 = (0 CONCAT a1) /m 10;\n
    v2 = a1 - v1 * 10 + 48;\n
    if (!v1)\n
        v0 = 0;\n
    else\n
        v0 = cgc_transmit_unsigned(a0, v1);\n
    v3 = v0;\n
    cgc_transmit_char(a0, v2);\n
    return v3;\n
}\n
", "4210677:sub_403ff5": null, "4210688:cgc_send_string": "long long cgc_send_string(unsigned long a0, char *a1)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = 0;\n
    if (a1)\n
        v0 = cgc_strlen(a1);\n
    v2 = cgc_transmit_all(a0, &v0, 8);\n
    if (v0 > 0)\n
    {\n
        v2 = cgc_transmit_all(a0, a1, v0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4210785:sub_404061": null, "4210800:cgc_config_service": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern unsigned int services;\n
\n
long long cgc_config_service(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    char v1;  // [bp-0x48]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long v4;  // rcx\n
\n
    v3 = &(&services)[12 * a0];\n
    if (!v3->field_18)\n
        return &(&services)[12 * a0];\n
    cgc_memset(&v1, 0, 50);\n
    v4 = a0 * 48;\n
    cgc_printf(1, \"How do you want to configure '%s'?\\n
\", *((&services + v4)), v4, a4);\n
    v0 = cgc_read_until(0, &v1, 50, 0xa);\n
    if (v0 < 0)\n
        cgc__terminate(0);\n
    v3 = &(&services)[12 * a0];\n
    *((v3 + 8)) = cgc_strdup(&v1);\n
    return &(&services)[12 * a0];\n
}\n
", "4210979:sub_404123": null, "4210992:cgc_send_config": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char services;\n
\n
long long cgc_send_config(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = &(&services)[48 * a0];\n
    if (v1->field_18)\n
    {\n
        cgc_transmit_str(*(&(&services)[16 + 48 * a0]) - 1, *(&(&services)[8 + 48 * a0]));\n
        v1 = cgc_transmit_str(*(&(&services)[16 + 48 * a0]) - 1, \"\\n
\");\n
        return v1;\n
    }\n
    return &(&services)[48 * a0];\n
}\n
", "4211124:sub_4041b4": null, "4211136:cgc_send_service_fd": "extern char services;\n
\n
long long cgc_send_service_fd(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_printf(1, \"Setting %s to read from %u and write to %u (via %u)\\n
\", *(&(&services)[48 * a0]), a1, a2);\n
    v3 = cgc_transmit_all(*(&(&services)[16 + 48 * a0]) - 1, &v0, 4);\n
    if (v3)\n
    {\n
        v3 = cgc_transmit_all(*(&(&services)[16 + 48 * a0]) - 1, &v1, 4);\n
        if ((Not (Not (Conv(64->32, rax<8>) == 0x0<32>)))) { Goto None } else { Goto None }\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4211336:sub_404288": null, "4211344:cgc_get_service_by_position": "extern unsigned long long services;\n
\n
long long cgc_get_service_by_position(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!(&services)[6 * v0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (*((&(&services)[4 + 6 * v0] + 4)) && (&services)[5 + 6 * v0] == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4211486:sub_40431e": null, "4211488:cgc_handle_configs": "long long cgc_handle_configs(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v1 = cgc_get_service_by_position(v2);\n
        cgc_config_service(v1, a1, a2, a3, a4);\n
    }\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v0 = cgc_get_service_by_position(v2);\n
        cgc_send_config(v0);\n
    }\n
    return v2;\n
}\n
", "4211609:sub_404399": null, "4211616:cgc_setup": "extern unsigned long long services;\n
\n
long long cgc_setup()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    for (v0 = 0; (&services)[6 * v0]; v0 += 1)\n
    {\n
        *(&(&services)[2 + 6 * v0]) = v0 * 2 + 4;\n
        *((&(&services)[2 + 6 * v0] + 4)) = (&services)[2 + 6 * v0];\n
    }\n
    return &(&services)[6 * v0];\n
}\n
", "4211743:sub_40441f": null, "4211744:cgc_print_available": "extern unsigned int services;\n
\n
long long cgc_print_available(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    cgc_printf(1, \"available functions include:\\n
\", a2, a3, a4);\n
    for (v0 = 0; *(&(&services)[12 * v0]); v0 += 1)\n
    {\n
        cgc_printf(1, \"%u: %s\\n
\", v0, *(&(&services)[12 * v0]), a4);\n
    }\n
    return v0;\n
}\n
", "4211872:cgc_print_pipeline": "extern char services;\n
\n
long long cgc_print_pipeline(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    cgc_printf(1, \"function pipeline:\", a2, a3, a4);\n
    for (v1 = 0; v1 < a0; v1 += 1)\n
    {\n
        v0 = cgc_get_service_by_position(v1);\n
        a3 = v0 * 48;\n
        cgc_printf(1, \" %s\", *(&(&services)[a3]), a3, a4);\n
    }\n
    return cgc_printf(1, \"\\n
\", a2, a3, a4);\n
}\n
", "4212011:sub_40452b": null, "4212016:cgc_terminate_service": "extern char services;\n
\n
long long cgc_terminate_service(unsigned long a0)\n
{\n
    if (*(&(&services)[24 + 48 * a0]))\n
        cgc_transmit_str(*(&(&services)[16 + 48 * a0]) - 1, \"\\n
\");\n
    return cgc_send_service_fd(a0, 65535, 65535);\n
}\n
", "4212112:cgc_exit": "extern unsigned long long services;\n
\n
long long cgc_exit(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
    unsigned long long v7;  // r9\n
\n
    v1 = a0;\n
    for (v0 = 0; (&services)[6 * v0]; v0 += 1)\n
    {\n
        cgc_terminate_service(v0);\n
    }\n
    cgc__terminate(a0);\n
    return cgc_enable_services(a0, v3, v4, v5, v6, v7);\n
}\n
", "4212192:cgc_enable_services": "extern char services;\n
\n
long long cgc_enable_services(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    char v4;  // [bp-0x48]\n
    unsigned long v6;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a0)\n
            return v1;\n
        cgc_printf(1, \"Which function do you wish to include?  Available: [\", a2, a3, a4);\n
        for (v0 = 0; v0 < a0; v0 += 1)\n
        {\n
            a3 = v0 * 48;\n
            if (!*(&(&services)[36 + a3]))\n
                cgc_printf(1, \"%u\", v0, a3, a4);\n
        }\n
        cgc_printf(1, \"] (Enter an empty line to stop configuration)\\n
\", a2, a3, a4);\n
        cgc_memset(&v4, 0, 50);\n
        v3 = cgc_read_until(0, &v4, 50, 0xa);\n
        if (!v4)\n
            return v1;\n
        if (v4 >= 48 && v4 <= 57)\n
        {\n
            v2 = v4 - 48;\n
            goto LABEL_404707;\n
        }\n
        cgc_printf(1, \"Invalid function! %u\\n
\", v4, 10, a4);\n
        cgc_exit(3);\n
LABEL_404707:\n
        v6 = v2 * 48;\n
        if (*(&(&services)[36 + v6]))\n
        {\n
            cgc_printf(1, \"this function is already included in the pipeline!\\n
\", 50, v6, a4);\n
            cgc_exit(4);\n
        }\n
        *(&(&services)[36 + 48 * v2]) = 1;\n
        a3 = v1;\n
        a2 = v2 * 48;\n
        *(&(&services)[40 + a2]) = a3;\n
        v1 += 1;\n
    }\n
}\n
", "4212616:sub_404788": null, "4212624:cgc_setup_output": "extern char services;\n
\n
long long cgc_setup_output(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    for (v4 = 0; v4 < a0; v4 += 1)\n
    {\n
        v3 = cgc_get_service_by_position(v4);\n
        v2 = cgc_get_service_by_position(v4 + 1);\n
        v1 = 0;\n
        v0 = 1;\n
        if (v3 == -1)\n
            cgc__terminate(a0);\n
        if (v2 >= 0)\n
            v0 = *(&(&services)[16 + 48 * v2]) - 1;\n
        if (v4 > 0)\n
            v1 = *(&(&services)[16 + 48 * v3]);\n
        cgc_send_service_fd(v3, v1, v0);\n
    }\n
    return v4;\n
}\n
", "4212818:sub_404852": null, "4212832:cgc_terminate_unused": "extern char services;\n
\n
long long cgc_terminate_unused(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        if (!*(&(&services)[36 + 48 * v0]))\n
            cgc_terminate_service(v0);\n
    }\n
    return v0;\n
}\n
", "4212923:sub_4048bb": null, "4212928:main": "int main(unsigned long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v4 = 0;\n
    v3 = a0;\n
    *(&v2) = a1;\n
    cgc_setup();\n
    cgc_printf(1, \"Function pipelines made easy!\\n
\", a2, a3, a4);\n
    v1 = cgc_print_available(1, \"Function pipelines made easy!\\n
\", a2, a3, a4);\n
    v0 = cgc_enable_services(v1, \"Function pipelines made easy!\\n
\", a2, a3, a4);\n
    if (!v0)\n
    {\n
        cgc_printf(1, \"no functions configured.\\n
\", a2, a3, a4);\n
        cgc_exit(5);\n
    }\n
    cgc_terminate_unused(v1);\n
    cgc_print_pipeline(v0, a1, a2, a3, a4);\n
    cgc_handle_configs(v0, a1, a2, a3, a4);\n
    cgc_setup_output(v0);\n
    return 1;\n
}\n
", "4213076:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_deallocate": null, "5242928:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}