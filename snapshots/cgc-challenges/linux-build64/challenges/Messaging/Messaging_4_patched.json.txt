{"4202496:_init": "extern struct_0 *g_409528;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409528;\n
    if (g_409528)\n
        v1 = g_409528();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409540;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409540;\n
    goto *(4232520);\n
}\n
", "4202540:sub_40202c": null, "4202544:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4202560:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4202576:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4202640:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202688:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4232464);\n
}\n
", "4202704:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202741:sub_4020f5": null, "4202742:sub_4020f6": null, "4202752:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_409520;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4202793:sub_402129": null, "4202800:register_tm_clones": "extern unsigned long long g_409530;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202857:sub_402169": null, "4202864:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned long long g_409510;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__TMC_END__)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409510)\n
    {\n
        __TMC_END__ = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202917:sub_4021a5": null, "4202921:sub_4021a9": null, "4202928:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202937:sub_4021b9": null, "4202944:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203002:sub_4021fa": null, "4203008:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4203027:sub_402213": null, "4203040:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4203059:sub_402233": null, "4203072:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4203091:sub_402253": null, "4203104:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4203123:sub_402273": null, "4203136:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4203155:sub_402293": null, "4203168:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4203187:sub_4022b3": null, "4203200:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4203219:sub_4022d3": null, "4203232:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4203251:sub_4022f3": null, "4203264:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4203283:sub_402313": null, "4203296:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4203315:sub_402333": null, "4203328:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4222992];\n
    char field_407010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4203373:sub_40236d": null, "4203376:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4222992];\n
    char field_407010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203400:sub_402388": null, "4203408:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4222992];\n
    char field_407010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4203458:sub_4023c2": null, "4203472:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4222992];\n
    char field_407010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203496:sub_4023e8": null, "4203504:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate(v3);\n
    return cgc_exit(v3, v4, v5, v6, v7, v8);\n
}\n
", "4203520:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4203536:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // r8\n
    void* v4;  // r15, Other Possible Types: unsigned long long, unsigned long\n
    char *v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // r13\n
    unsigned long v10;  // rax\n
    char *v11;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r13, Other Possible Types: unsigned long long\n
    void* v14;  // r14, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    if (a0->field_4 == 1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v5 = a0->field_10;\n
        v6 = a0->padding_c;\n
        v13 = v6 - v3;\n
        if (v5 && v13)\n
        {\n
            v8 = v13 & 3;\n
            if (~(v3) + v6 < 3)\n
            {\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v9 = v13 & -4;\n
                v10 = &a0->padding_0[v3 + 35];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v10 + v11 - 3)) = v5[*((v10 + v11 - 3))];\n
                    *((v10 + v11 - 2)) = v5[*((v10 + v11 - 2))];\n
                    *((v10 + v11 - 1)) = v5[*((v10 + v11 - 1))];\n
                    *((v10 + v11)) = v5[*((v10 + v11))];\n
                    v11 += 4;\n
                } while (v9 != v11);\n
            }\n
            if (v8)\n
            {\n
                v12 = &a0->padding_0[v3 + v11 + 32];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v12 + v11)) = v5[*((v12 + v11))];\n
                    v11 += 1;\n
                } while (v8 != v11);\n
            }\n
            v13 = (a0->padding_c - a0->field_8);\n
        }\n
        v0 = a0;\n
        v4 = 0;\n
        v14 = 0;\n
        do\n
        {\n
            if (v13 <= v14)\n
            {\n
LABEL_402545:\n
                a0 = v0;\n
                goto LABEL_40254a;\n
            }\n
            v14 += *(&v1);\n
        } while (!cgc_transmit(a0, v11));\n
        v4 = 4294967295;\n
        goto LABEL_402545;\n
    }\n
LABEL_40254a:\n
    *((a0 + 8)) = 0;\n
    return v4;\n
}\n
", "4203876:sub_402564": null, "4203888:cgc_fbuffered": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fbuffered(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int *v1;  // [bp-0x40]\n
    char v2;  // [bp-0x38]\n
    struct_0 *v4;  // r15\n
    unsigned long long v5;  // r8\n
    unsigned int *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rbx\n
    char *v12;  // rax\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v5 = a0->field_8;\n
    if (v5 == -1)\n
    {\n
        v4->field_8 = -(a1 < 1);\n
        v4->field_c = 0;\n
        return -(a1 < 1);\n
    }\n
    if (a0->field_4 == 1)\n
    {\n
        v6 = &a0->field_c;\n
    }\n
    else\n
    {\n
        v7 = a0->field_10;\n
        v8 = a0->field_c;\n
        v13 = v8 - v5;\n
        v0 = a1;\n
        if (v7 && v13)\n
        {\n
            v10 = v13 & 3;\n
            if (~(v5) + v8 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v11 = v13 & -4;\n
                a0 = &a0->padding_0[v5 + 35];\n
                a1 = 0;\n
                do\n
                {\n
                    *((a0 + a1 - 3)) = v7[*((a0 + a1 - 3))];\n
                    *((a0 + a1 - 2)) = v7[*((a0 + a1 - 2))];\n
                    *((a0 + a1 - 1)) = v7[*((a0 + a1 - 1))];\n
                    *((a0 + a1)) = v7[*((a0 + a1))];\n
                    a1 += 4;\n
                } while (v11 != a1);\n
            }\n
            if (v10)\n
            {\n
                v12 = &v4->padding_0[v5 + a1 + 32];\n
                a1 = 0;\n
                do\n
                {\n
                    v12[a1] = v7[v12[a1]];\n
                    a1 += 1;\n
                } while (v10 != a1);\n
            }\n
            v13 = v4->field_c - v4->field_8;\n
        }\n
        v1 = &v4->field_c;\n
        v14 = 0;\n
        while (v13 > v14)\n
        {\n
            v14 += *(&v2);\n
            if (cgc_transmit(a0, a1))\n
                break;\n
        }\n
        a1 = v0;\n
        v6 = v1;\n
    }\n
    *(v6) = 0;\n
}\n
", "4204238:sub_4026ce": null, "4204240:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(1056);\n
    if (v3)\n
    {\n
        v3->field_0 = a0;\n
        v3->field_4 = 2 - (a1 < 1);\n
        v3->field_8 = 0;\n
        v3->field_10 = 0;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4204309:sub_402715": null, "4204320:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x40], Other Possible Types: char\n
    unsigned long v1;  // [bp-0x38]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // r14\n
    unsigned long long v5;  // r15\n
    unsigned long long v6;  // rax\n
    char *v7;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rax, Other Possible Types: unsigned long long\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v13;  // eax\n
    unsigned long long v15;  // r8\n
    char *v16;  // rax\n
    unsigned long v17;  // rbp\n
\n
    v3 = a2;\n
    v4 = a1;\n
    v5 = a0;\n
    v11 = a2->field_8;\n
    if (v11 == *(&a2->padding_c[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        v6 = cgc_receive(a0, a1, a2, v10);\n
        if (!v6)\n
        {\n
            v7 = *(&v0);\n
            if (v7)\n
            {\n
                *(&a2->padding_c[0]) = v7;\n
                v10 = v7 * 0x100000000;\n
                if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(rax<8>, 0x20<8>), Shl(rax<8>, 0x1f<8>), cc_ndep<8>)))\n
                {\n
                    v10 = a2->field_18;\n
                    if (v10)\n
                    {\n
                        a2 = v7;\n
                        v9 = v7 & 3;\n
                        if (v7 + 1 < 3)\n
                        {\n
                            a1 = 0;\n
                        }\n
                        else\n
                        {\n
                            a2 = &a2[-1 * v9];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                v3[1].padding_0[a1] = *((v10 + v3[1].padding_0[a1]));\n
                                v3[1].padding_0[1 + a1] = *((v10 + v3[1].padding_0[1 + a1]));\n
                                v3[1].padding_0[2 + a1] = *((v10 + v3[1].padding_0[2 + a1]));\n
                                v3[1].padding_0[3 + a1] = *((v10 + v3[1].padding_0[3 + a1]));\n
                                a1 += 4;\n
                            } while (a2 != a1);\n
                        }\n
                        if (v9)\n
                        {\n
                            a2 = &v3->padding_0[a1 + 32];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                a2[a1] = *((v10 + a2[a1]));\n
                                a1 += 1;\n
                            } while (v9 != a1);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        v11 = v3->field_8;\n
    }\n
    if (v11 != -1)\n
    {\n
        v12 = *(&v3->padding_c[0]) - v11;\n
        if (v12 > v4)\n
            v12 = v4;\n
        v0 = v12;\n
        a1 = &v3->padding_0[v11 + 32];\n
        a2 = v12;\n
        cgc_memcpy();\n
        v13 = v3->field_8 + v12;\n
        v3->field_8 = v13;\n
        if (v13 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
        if (!(v12 < v4))\n
            goto LABEL_4029a4;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        if (0 >= v4)\n
        {\n
LABEL_4029a4:\n
            return v12;\n
        }\n
    }\n
    v1 = v5 + 3;\n
    while (true)\n
    {\n
        v10 = cgc_receive(a0, a1, a2, v10);\n
        if (v10)\n
            return -1;\n
        v15 = v0;\n
        if (!v15)\n
            return -1;\n
        v16 = v3->field_18;\n
        if (v16)\n
        {\n
            a2 = v15 & 3;\n
            if (v15 - 1 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v17 = v1 + v12;\n
                a1 = 0;\n
                do\n
                {\n
                    *((v17 + a1 - 3)) = v16[*((v17 + a1 - 3))];\n
                    *((v17 + a1 - 2)) = v16[*((v17 + a1 - 2))];\n
                    *((v17 + a1 - 1)) = v16[*((v17 + a1 - 1))];\n
                    *((v17 + a1)) = v16[*((v17 + a1))];\n
                    a1 += 4;\n
                } while ((v15 & -4) != a1);\n
            }\n
            if (a2)\n
            {\n
                a1 = a1 + v12 + v5;\n
                a0 = 0;\n
                do\n
                {\n
                    a1[a0] = v16[a1[a0]];\n
                    a0 += 1;\n
                } while (a2 != a0);\n
            }\n
        }\n
        v12 += v15;\n
        if (v12 >= v4)\n
            return v12;\n
    }\n
}\n
", "4204802:sub_402902": null, "4204982:sub_4029b6": null, "4204992:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (a1 != 1)\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_402a10;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_402a21;\n
    while (true)\n
    {\n
LABEL_402a10:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_402a21;\n
    }\n
LABEL_402a21:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4205115:sub_402a3b": null, "4205120:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x11]\n
    char v1;  // [bp-0x10]\n
    struct_1 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // rax\n
    unsigned long long v15;  // r8\n
    unsigned long v16;  // rcx\n
    struct struct_0 **v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    char *v20;  // rsi\n
    unsigned long v21;  // rdi\n
    unsigned long long v22;  // rax\n
\n
    v3 = a0;\n
    v4 = a0->field_8;\n
    if (v4 == -1)\n
    {\n
        v13 = cgc_receive(a0, v5, v6, v7);\n
        v14 = 4294967295;\n
        if (v13)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!*(&v1))\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            v16 = a0->field_18;\n
            *(&v14) = v0;\n
            if (!v16)\n
                return v14;\n
            *(&v14) = *(v16 + v14);\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != *(&a0->padding_c[0]))\n
        {\n
            v3->field_8 = v4 + 1;\n
            v22 = v3[1].padding_0[v4];\n
            return v22;\n
        }\n
        *(&a0->field_8) = 0;\n
        if (cgc_receive(a0, v9, v10, v11))\n
            return 4294967295;\n
        v15 = *(&v1);\n
        if (!v15)\n
            return 4294967295;\n
        *(&a0->padding_c[0]) = v15;\n
        if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>)))\n
        {\n
            v17 = a0->field_18;\n
            if (v17)\n
            {\n
                v18 = v15 & 3;\n
                if (v15 - 1 < 3)\n
                {\n
                    v19 = 0;\n
                }\n
                else\n
                {\n
                    v19 = 0;\n
                    do\n
                    {\n
                        v3[1].padding_0[v19] = *(v17 + v3[1].padding_0[v19]);\n
                        v3[1].padding_0[1 + v19] = *(v17 + v3[1].padding_0[1 + v19]);\n
                        v3[1].padding_0[2 + v19] = *(v17 + v3[1].padding_0[2 + v19]);\n
                        v3[1].padding_0[3 + v19] = *(v17 + v3[1].padding_0[3 + v19]);\n
                        v19 += 4;\n
                    } while (v15 - v18 != v19);\n
                }\n
                if (v18)\n
                {\n
                    v20 = &v3->padding_0[v19 + 32];\n
                    v21 = 0;\n
                    do\n
                    {\n
                        v20[v21] = *(v17 + v20[v21]);\n
                        v21 += 1;\n
                    } while (v18 != v21);\n
                }\n
            }\n
        }\n
        if (v15 < 0)\n
            return 4294967295;\n
        v4 = v3->field_8;\n
    }\n
}\n
", "4205466:sub_402b9a": null, "4205472:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4205487:sub_402baf": null, "4205488:cgc_fwrite": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x450]\n
    unsigned long v1;  // [bp-0x448]\n
    char v2;  // [bp-0x440]\n
    unsigned long long v3;  // [bp-0x438]\n
    unsigned long long v4;  // [bp-0x437]\n
    unsigned long long v5;  // [bp-0x436]\n
    unsigned long long v6;  // [bp-0x435]\n
    struct_0 *v8;  // rbx\n
    unsigned long long v9;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v10;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    char *v12;  // r15\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    struct_2 *v15;  // rdi, Other Possible Types: unsigned long\n
    void* v16;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rcx\n
    unsigned long v18;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // rsi\n
    unsigned long long v20;  // rdx\n
    unsigned long v21;  // rcx\n
    char *v22;  // rcx\n
    unsigned long v23;  // rdx\n
    void* v24;  // r14, Other Possible Types: unsigned long\n
    void* v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v26;  // rcx\n
    struct_2 *v27;  // rdi\n
    unsigned long long v28;  // r15\n
\n
    v8 = a2;\n
    v9 = a1;\n
    v10 = a0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v11 = a2->field_c;\n
            if (v11 + a1 >= 0x400)\n
            {\n
                v13 = 0x400 - v11;\n
                cgc_memcpy(&a2->padding_0[v11 + 32], a0, v13);\n
                v8->field_c = v8->field_c + v13;\n
                cgc_fflush(a2);\n
                if (v13 < a1)\n
                    goto LABEL_402da2;\n
            }\n
            else\n
            {\n
                v13 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_402da2:\n
                    v28 = a1 - v13;\n
                    cgc_memcpy(&v8->padding_0[v8->field_c + 32], a0 + v13, v28);\n
                    v8->field_c = v8->field_c + v28;\n
                    return a1;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v12 = a2->field_10;\n
    if (!v12)\n
    {\n
        v16 = 0;\n
        do\n
        {\n
            if (v16 >= a1)\n
                return a1;\n
            v16 += v3;\n
        } while (!cgc_transmit(a2, a1, a2, v17));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v25 = 0;\n
        v14 = 0x400;\n
        v15 = &v3;\n
        v0 = v10;\n
LABEL_402c13:\n
        v18 = v9 - v25;\n
        if (0x400 <= v18)\n
            v18 = 0x400;\n
        v1 = v25;\n
        v19 = v10 + v25;\n
        v20 = v18;\n
        cgc_memcpy();\n
        if (v18)\n
        {\n
            v15 = v18 & 3;\n
            if (v18 - 1 < 3)\n
            {\n
                v21 = 0;\n
            }\n
            else\n
            {\n
                v21 = 0;\n
                do\n
                {\n
                    *(&v3 + v21) = v12[*(&v3 + v21)];\n
                    *(&v4 + v21) = v12[*(&v4 + v21)];\n
                    *(&v5 + v21) = v12[*(&v5 + v21)];\n
                    *(&v6 + v21) = v12[*(&v6 + v21)];\n
                    v21 += 4;\n
                } while ((v18 & 2044) != v21);\n
            }\n
            if (v15)\n
            {\n
                v22 = &v3 + v21;\n
                v23 = 0;\n
                do\n
                {\n
                    v22[v23] = v12[v22[v23]];\n
                    v23 += 1;\n
                } while (v15 != v23);\n
            }\n
        }\n
        v24 = 0;\n
        do\n
        {\n
            if (v18 <= v24)\n
            {\n
                v25 = v1 + v18;\n
                v10 = v0;\n
                v26 = 0x400;\n
                v27 = &v3;\n
                if (v25 >= v9)\n
                    return v9;\n
                goto LABEL_402c13;\n
            }\n
            v24 += *(&v2);\n
        } while (!cgc_transmit(v15, v19));\n
    }\n
    return -1;\n
}\n
", "4205816:sub_402cf8": null, "4206043:sub_402ddb": null, "4206048:cgc_fxlat": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[15];\n
    uint128_t field_10;\n
    char padding_20[80];\n
    uint128_t field_70;\n
    uint128_t field_80;\n
    uint128_t field_90;\n
    uint128_t field_a0;\n
    uint128_t field_b0;\n
    uint128_t field_c0;\n
    uint128_t field_d0;\n
    uint128_t field_e0;\n
    uint128_t field_f0;\n
} struct_1;\n
\n
long long cgc_fxlat(struct_0 *a0, char a1[2])\n
{\n
    struct_0 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    struct_1 *v4;  // rbx\n
    char v7;  // rdx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v10;  // rdi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rdx\n
    char v14;  // al\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        *(&v1->field_10) = 0;\n
        return cgc_free(v2);\n
    }\n
    v3 = a1;\n
    v4 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v4;\n
    *(&v1[1].padding_0[0]) = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    v7 = a1[0];\n
    v9 = 826981510;\n
    if (v3[0])\n
    {\n
        v8 = 1;\n
        do\n
        {\n
            v9 = __ROL__((v9 + v9 * 36) ^ v7, 13);\n
            v7 = v3[v8];\n
            v8 = v8 + 1;\n
        } while (v7);\n
    }\n
    *(&v4->field_0) = 0xf0e0d0c0b0a09080706050403020100;\n
    v4->field_10 = 41362427191743139026751447860679676176;\n
    strncpy(&v4->padding_20, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmno\", 80);\n
    v4->field_70 = 169468730032567031154139535364404179312;\n
    v4->field_80 = 190819780506037679842037549948358263168;\n
    v4->field_90 = 212170830979508328529935564532312347024;\n
    v4->field_a0 = 233521881452978977217833579116266430880;\n
    v4->field_b0 = 254872931926449625905731593700220514736;\n
    v4->field_c0 = 276223982399920274593629608284174598592;\n
    v4->field_d0 = 297575032873390923281527622868128682448;\n
    v4->field_e0 = 318926083346861571969425637452082766304;\n
    v4->field_f0 = 340277133820332220657323652036036850160;\n
    v10 = 255;\n
    while (true)\n
    {\n
        v11 = v9;\n
        v12 = v9 * 3;\n
        v13 = (0 CONCAT v11) /m v10 >> 32;\n
        v9 = v12 / 0x200000 ^ __ROL__(v12, 13);\n
        v14 = (&v4->field_0)[v10];\n
        (&v4->field_0)[v10] = (&v4->field_0)[v13];\n
        (&v4->field_0)[v13] = v14;\n
        v10 -= 1;\n
    }\n
}\n
", "4206497:sub_402fa1": null, "4206512:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4206527:sub_402fbf": null, "4206528:cgc_malloc_alloc": "typedef struct struct_6 {\n
    unsigned long long field_0;\n
    struct struct_6 *field_8;\n
    struct struct_5 *field_10;\n
    struct struct_0 *field_18;\n
} struct_6;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char padding_8[1032];\n
    unsigned long long field_410;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
    char field_8;\n
    char padding_9[7];\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[7];\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_4;\n
\n
long long cgc_malloc_alloc(struct_2 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long long v2;  // r15\n
    struct_6 *v4;  // r15\n
    struct_6 *v5;  // r12\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // r15\n
    struct_1 *v11;  // rbx, Other Possible Types: unsigned long, void*\n
    unsigned long v17;  // rbx\n
\n
    if (a1 > 2147483647)\n
        return 0;\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
        return tiny_alloc(a0, 4);\n
    if (v2 <= 15)\n
        return tiny_alloc(a0, v2);\n
    if (v2 > 131071)\n
    {\n
        if (cgc_allocate(a0, a1, v7))\n
            return 0;\n
        v11 = *(&v0);\n
        *(v11) = a0;\n
        *((v11 + 8)) = v2 + 4111 & -0x1000;\n
        v17 = v11 + 16;\n
        return v17;\n
    }\n
    v4 = v2 + 31;\n
    v5 = v4 & -0x10;\n
    if (!(v4 & -0x10))\n
    {\n
        v9 = 4294967295;\n
    }\n
    else if (v5 < 513)\n
    {\n
        v10 = v4 / 16;\n
        v9 = v10 + 2;\n
        if (v10 > 128)\n
            v11 = 0;\n
    }\n
    else if (v5 <= 0x1200)\n
    {\n
        v9 = (v5 + 17179869168 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v9 = 130;\n
        if (v5 <= 0x20000)\n
            v9 = (v5 + 274877906800 >> 11) + 66;\n
    }\n
    v11 = (&a0->field_0)[v9];\n
    if (!v11)\n
        goto LABEL_0x403242;\n
    else\n
        goto LABEL_0x403260;\n
}\n
", "4207340:sub_4032ec": null, "4207344:tiny_alloc": "long long tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned short v6[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned int v7;  // edx\n
    unsigned short *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v12;  // rbp\n
    unsigned long long v13;  // r13\n
    unsigned short *v14;  // r12\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v9 = *((a0 + v4 * 8));\n
    if (v9)\n
    {\n
        *((a0 + v5 * 8)) = *(&v9);\n
        return v9;\n
    }\n
    v6 = *((a0 + v5 * 8 + 5144));\n
    if (v6)\n
    {\n
        v7 = v6[0];\n
        a1 = v6[1];\n
    }\n
    else\n
    {\n
        v8 = *((a0 + 5168));\n
        if (v8)\n
        {\n
            v9 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v10))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v12 = v0;\n
            v13 = v12 + 1048575;\n
            v14 = v13 & -0x100000;\n
            if (v14 > v12)\n
                cgc_deallocate(a0);\n
            if ((v12 + 0x200000) > (v14 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v13 >> 20) + 1048)) = 1;\n
            v8 = v14;\n
            *((a0 + 5168)) = v14;\n
            v9 = 0;\n
            if (!v14)\n
                return 0;\n
        }\n
        v15 = v8;\n
        v6 = v8 + v9;\n
        *((a0 + v5 * 8 + 5144)) = v6;\n
        *((v15 + v9)) = v3;\n
        *((v15 + v9 + 2)) = v3;\n
        v16 = v9 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v7 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v6 + 2)) = v17;\n
    if (v7 + v17 < 4097)\n
        return a1 + v6;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4207783:sub_4034a7": null, "4207792:malloc_free": "typedef struct struct_3 {\n
    struct struct_1 *field_-10;\n
    unsigned long long field_-8;\n
    unsigned long long field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
    struct struct_2 *field_18;\n
} struct_1;\n
\n
typedef struct struct_5 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_2;\n
\n
long long malloc_free(unsigned long long a0[3], struct_3 *a1)\n
{\n
    unsigned long v1;  // rax\n
    struct_1 *v2;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v3;  // rcx\n
    struct_1 *v4;  // rdx, Other Possible Types: unsigned long\n
    struct_5 *v5;  // r11\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // r8\n
    unsigned long v8;  // rsi\n
    struct_0 *v9;  // r9\n
    unsigned long long v10[3];  // r10\n
    unsigned long long v11;  // r8\n
    unsigned long long v12;  // rsi\n
    unsigned long long v13;  // rdx\n
    unsigned long v14;  // rsi\n
    struct_0 *v15;  // rcx\n
    struct_4 *v16;  // rax\n
    unsigned long v17;  // rdx\n
    unsigned long long v18;  // rcx\n
    unsigned long v19;  // rdx\n
\n
    if (!a1)\n
        return v1;\n
    v1 = a1 / 0x100000;\n
    *(&v1) = *(1048 + &a0[0] + v1);\n
    if (*(&v1) == 2)\n
    {\n
        v2 = &a1->field_0;\n
        v3 = a1->field_0;\n
        v4 = v2 - v3;\n
        if (!v3)\n
            v4 = v3;\n
        v5 = v2 + a1->field_-8;\n
        if (v4)\n
        {\n
            v6 = *((v4 + 8));\n
            if ((v6 & 1))\n
            {\n
                v7 = v6 & -2;\n
                if (v7 <= 15)\n
                {\n
                    v8 = v6 / 4 - 1;\n
                }\n
                else\n
                {\n
                    if (v7 <= 0x200)\n
                    {\n
                        v8 = (v6 >> 4) + 2;\n
                    }\n
                    else\n
                    {\n
                        if (v7 <= 0x1200)\n
                        {\n
                            v8 = (0x7ffffffe00 + v7 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v8 = 130;\n
                            if (v7 <= 0x20000)\n
                                v8 = (0x7ffffffee00 + v7 >> 11) + 66;\n
                        }\n
                    }\n
                }\n
                *((v4 + 8)) = v7;\n
                v9 = *((v4 + 16));\n
                if (v9)\n
                    v9->field_18 = *((v4 + 24));\n
                v10 = *((v4 + 24));\n
                if (v10)\n
                    v10[2] = v9;\n
                if (a0[v8] == v4)\n
                    a0[v8] = v10;\n
                v11 = v7 + v2->field_8;\n
                *((v4 + 8)) = v11;\n
                v5->field_0 = v11;\n
                v2 = v4;\n
            }\n
        }\n
        v12 = v5->field_8;\n
        if ((v12 & 1))\n
        {\n
            v13 = v12 & -2;\n
            if (v13 <= 15)\n
            {\n
                v14 = v12 / 4 - 1;\n
            }\n
            else\n
            {\n
                if (v13 <= 0x200)\n
                {\n
                    v14 = (v12 >> 4) + 2;\n
                }\n
                else\n
                {\n
                    if (v13 <= 0x1200)\n
                    {\n
                        v14 = (0x7ffffffe00 + v13 >> 7) + 34;\n
                    }\n
                    else\n
                    {\n
                        v14 = 130;\n
                        if (v13 <= 0x20000)\n
                            v14 = (0x7ffffffee00 + v13 >> 11) + 66;\n
                    }\n
                }\n
            }\n
            v5->field_8 = v13;\n
            v15 = v5->field_10;\n
            if (v15)\n
                v15->field_18 = v5->field_18;\n
            v16 = v5->field_18;\n
            if (v16)\n
                v16->field_10 = v15;\n
            if (a0[v14] == v5)\n
                a0[v14] = v16;\n
            v17 = v13 + *((v2 + 8));\n
            *((v2 + 8)) = v17;\n
            *((v2 + v17)) = v17;\n
        }\n
        v18 = *((v2 + 8));\n
        if (v18 <= 15)\n
        {\n
            v19 = v18 / 4 - 1;\n
        }\n
        else\n
        {\n
            if (v18 <= 0x200)\n
            {\n
                v19 = (v18 >> 4) + 2;\n
            }\n
            else\n
            {\n
                if (v18 <= 0x1200)\n
                {\n
                    v19 = (0x7ffffffe00 + v18 >> 7) + 34;\n
                }\n
                else\n
                {\n
                    v19 = 130;\n
                    if (v18 <= 0x20000)\n
                        v19 = (0x7ffffffee00 + v18 >> 11) + 66;\n
                }\n
            }\n
        }\n
        *((v2 + 8)) = v18 | 1;\n
        *((v2 + 16)) = 0;\n
        *((v2 + 24)) = a0[v19];\n
        a0[v19] = v2;\n
        v1 = *((v2 + 24));\n
        if (!v1)\n
            return v1;\n
        *((v1 + 16)) = v2;\n
        return v1;\n
    }\n
    else if (*(&v1) == 1)\n
    {\n
        v1 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
        a1->field_-10 = a0[v1];\n
        a0[v1] = a1;\n
        return v1;\n
    }\n
    else if (*(&v1))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        return cgc_deallocate(a0, a1);\n
    }\n
}\n
", "4208531:sub_403793": null, "4208544:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4208588:sub_4037cc": null, "4208592:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long long a0[3], struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r12\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 > 2147483647)\n
    {\n
LABEL_4037e1:\n
        return 0;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        return 0;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v3 = a1 / 0x100000;\n
    if (!(*(1048 + &a0[0] + v3) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_403863;\n
    }\n
    else\n
    {\n
        if (*(1048 + &a0[0] + v3) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_403863;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_403863:\n
                v5 = cgc_malloc_alloc(a0, a2);\n
                if (v5)\n
                {\n
                    cgc_memcpy(v5, a1);\n
                    malloc_free(a0, a1);\n
                    return v5;\n
                }\n
                goto LABEL_4037e1;\n
            }\n
        }\n
    }\n
    return a1;\n
}\n
", "4208852:sub_4038d4": null, "4208864:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4208900:sub_403904": null, "4208912:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4208958:sub_40393e": null, "4208960:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_4039d4:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_403967;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_403967:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_4039d4;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_403967;\n
}\n
", "4209391:sub_403aef": null, "4209392:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_403c45:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_403b29;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_403b29:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_403c45;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_403b29;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_403c53:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_403bd7;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_403bd7:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_403c53;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_403bd7;\n
    }\n
}\n
", "4210319:sub_403e8f": null, "4210320:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_404000;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_404000:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4210702:sub_40400e": null, "4210704:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4210916:sub_4040e4": null, "4210928:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return cgc__vsfprintf();\n
    }\n
    return cgc__vsfprintf();\n
}\n
", "4211006:sub_40413e": null, "4211008:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4211217:sub_404211": null, "4211232:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4211315:sub_404273": null, "4211328:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4211481:sub_404319": null, "4211488:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4211501:sub_40432d": null, "4211504:cgc__vsfprintf": "long long cgc__vsfprintf(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_16;  // tmp #16\n
    int tmp_2;  // tmp #2\n
    unsigned long v0;  // [bp-0x1c8]\n
    int tmp_50;  // tmp #50\n
    int tmp_70;  // tmp #70\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0xa1]\n
    unsigned long v2;  // [bp-0xa0]\n
    unsigned long v3;  // [bp-0x98]\n
    unsigned long v4;  // [bp-0x90]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x87]\n
    char v7;  // [bp-0x76]\n
    char v8;  // [bp-0x75]\n
    char v9;  // [bp-0x74]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned long v11;  // [bp-0x38]\n
    unsigned long v13;  // rbx\n
    unsigned long v14;  // rbp\n
    char v15;  // al, Other Possible Types: unsigned long\n
    unsigned long v16;  // r15\n
    unsigned int v17;  // eax\n
    char v18;  // r13b\n
    unsigned long v19;  // rax\n
    char v20;  // cc_dep1\n
    char v21;  // cc_dep2\n
    unsigned long v22;  // r12\n
    unsigned long v23;  // rcx\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rax\n
    unsigned long v28;  // rsi\n
    unsigned int v29;  // cc_dep1\n
    unsigned long v30;  // rsi\n
    unsigned long v31;  // rdi\n
    unsigned long v32;  // rcx\n
    unsigned long v33;  // rax\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // r13\n
    unsigned long v36;  // rax\n
    unsigned long v37;  // r13\n
    unsigned long v38;  // rbx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // r12\n
    unsigned long v41;  // rbp\n
    unsigned long v42;  // rbp\n
    unsigned long v43;  // rbp\n
    unsigned long v44;  // r14\n
    unsigned long v45;  // rax\n
    unsigned int v46;  // ebp\n
    unsigned long v47;  // r12\n
    unsigned long v48;  // r13\n
    unsigned long v49;  // r8\n
    unsigned long v50;  // r9\n
\n
    v13 = a3;\n
    v4 = a1;\n
    v14 = a0 + 1;\n
    v3 = v14;\n
    v15 = *(a0);\n
    if (!*(a0))\n
    {\n
        v44 = 0;\n
    }\n
    else\n
    {\n
        v16 = a2;\n
        v34 = &v5;\n
        v10 = 20 + -0x1 * &v5;\n
        v44 = 0;\n
        v2 = v13;\n
        while (true)\n
        {\n
            if (v15 != 37)\n
            {\n
                if (v44 < 2147483647)\n
                {\n
                    v1 = v15;\n
                    if (v16)\n
                    {\n
                        a2 = v16;\n
                        cgc_fwrite(&v1, 1, v16);\n
                    }\n
                    if (v13)\n
                        *((v13 + v44)) = v1;\n
                    v14 = v3;\n
                }\n
                else if (v44 == -1)\n
                {\n
                    goto LABEL_40491f;\n
                }\n
                v44 += 1;\n
                v34 = v14 + 1;\n
                v3 = v34;\n
                tmp_16 = *(v14);\n
                v15 = *(v14);\n
                v14 = v34;\n
                if (!(!tmp_16))\n
                    continue;\n
                goto LABEL_4048aa;\n
            }\n
            a0 = v14 + 1;\n
            v3 = a0;\n
            v17 = *(v14);\n
            v18 = 32;\n
            if (v17 == 32)\n
            {\n
LABEL_4043d3:\n
                if (!(*(a0) - 48 <= 9))\n
                    goto LABEL_40444a;\n
                goto LABEL_4043db;\n
            }\n
            else if (v17 != 48)\n
            {\n
                if (!v17)\n
                    goto LABEL_4048aa;\n
                v3 = v14;\n
                a0 = v14;\n
                goto LABEL_4043d3;\n
            }\n
            else\n
            {\n
                v18 = 48;\n
                if (*(a0) - 48 <= 9)\n
                {\n
LABEL_4043db:\n
                    v19 = cgc_strtoul();\n
                    a0 = v3;\n
                    goto LABEL_40444c;\n
                }\n
                else\n
                {\n
LABEL_40444a:\n
                    v19 = 0;\n
LABEL_40444c:\n
                    v34 = a0 + 1;\n
                    v3 = v34;\n
                    a2 = *(a0);\n
                    *(&v13) = 1;\n
                    if (a2 == 104)\n
                    {\n
                        a2 = a0 + 2;\n
                        v20 = *((a0 + 1));\n
                        v21 = 104;\n
                    }\n
                    else if (a2 == 108)\n
                    {\n
                        v20 = *((a0 + 1));\n
                        v21 = 108;\n
                        a2 = a0 + 2;\n
                        *(&v13) = *((a0 + 1)) != 108;\n
                    }\n
                    else\n
                    {\n
                        if (!a2)\n
                            goto LABEL_4048a5;\n
                        goto LABEL_404489;\n
                    }\n
                    if (v20 == v21)\n
                        v34 = a2;\n
                    a0 = v34;\n
LABEL_404489:\n
                    v22 = a0 + 1;\n
                    v3 = v22;\n
                    *(&a2) = *(a0);\n
                    v34 = *(a0);\n
                    a1 = v34 - 88;\n
                    if (a1 > 32)\n
                    {\n
                        v13 = v2;\n
                        if (!v34)\n
                        {\n
                            v47 = v22 - v14;\n
                            if (v44 < 2147483647)\n
                            {\n
                                v48 = 2147483647 - v44;\n
                                if (v48 > v47)\n
                                    v48 = v47;\n
                                if (v16)\n
                                    cgc_fwrite(v14, v48, v16);\n
                                if (v13)\n
                                    cgc_memcpy(v13 + v44, v14, v48);\n
                            }\n
                            tmp_2 = v44;\n
                            v44 += v47;\n
                            if (__CFADD__(tmp_2, v47))\n
                                goto LABEL_40491f;\n
                            goto LABEL_4048aa;\n
                        }\n
                        else\n
                        {\n
                            v40 = v22 - v14;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_40484f;\n
                            v37 = 2147483647 - v44;\n
                            if (v37 > v40)\n
                                v37 = v40;\n
                            if (v16)\n
                                cgc_fwrite(v14, v37, v16);\n
                            if (!v13)\n
                                goto LABEL_40484f;\n
                            a0 = v13 + v44;\n
                            a1 = v14;\n
                            a2 = v37;\n
                            goto LABEL_40484a;\n
                        }\n
                    }\n
                    v0 = 4831842305;\n
                    if (((*(&v0 + ((a1 & 63) >> 3)) >> (a1 & 63 & 7)) & 1))\n
                    {\n
                        v11 = v19;\n
                        if (a2 != 100)\n
                        {\n
                            a1 = v4;\n
                            if (v13)\n
                            {\n
                                v25 = *(a1);\n
                                v13 = v2;\n
                                if (v25 > 40)\n
                                {\n
                                    v31 = *((a1 + 8));\n
                                    *((a1 + 8)) = v31 + 8;\n
                                }\n
                                else\n
                                {\n
                                    v31 = v25 + *((a1 + 16));\n
                                    *(a1) = v25 + 8;\n
                                }\n
                                v32 = *(v31);\n
                                if (a2 != 117)\n
                                    a0 = 16;\n
                                else\n
                                    a0 = 10;\n
                                v42 = (a2 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                if (!v32)\n
                                {\n
                                    v7 = *(v42);\n
                                    a1 = &v7;\n
                                }\n
                                else\n
                                {\n
                                    do\n
                                    {\n
                                        *((a1 - 1)) = *((v42 + ((0 CONCAT v32) /m a0 >> 32)));\n
                                        a1 = &v7;\n
                                        tmp_50 = v32;\n
                                        v32 = (0 CONCAT v32) /m a0;\n
                                    } while (tmp_50 >= a0);\n
                                }\n
                                v41 = &v5;\n
                                cgc_memmove(&v5, a1, v10 + a1);\n
                                goto LABEL_40473c;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            a2 = v4;\n
                            v41 = &v5;\n
                            if (v13)\n
                            {\n
                                v24 = *(a2);\n
                                if (v24 <= 40)\n
                                {\n
                                    v28 = v24 + *((a2 + 16));\n
                                    *(a2) = v24 + 8;\n
                                    v38 = *(v28);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                        goto LABEL_40465f;\n
                                }\n
                                else\n
                                {\n
                                    v30 = *((a2 + 8));\n
                                    *((a2 + 8)) = v30 + 8;\n
                                    v38 = *(v30);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                    {\n
LABEL_40465f:\n
                                        v5 = 45;\n
                                        v38 = -(v38);\n
                                        v9 = 0;\n
                                        a1 = &v9;\n
                                        a0 = &v6;\n
                                        do\n
                                        {\n
                                            v39 = 3435973837 * v38 >> 35;\n
                                            a2 = v39 * 2;\n
                                            *((a1 - 1)) = *((4223521 + v38 + -5 * a2));\n
                                            a1 -= 1;\n
                                            tmp_70 = v38;\n
                                            v38 = v39;\n
                                        } while (tmp_70 > 9);\n
                                        v41 = &v5;\n
LABEL_4046ad:\n
                                        cgc_memmove(a0, a1, a1 - a0 + 20);\n
                                        v13 = v2;\n
LABEL_40473c:\n
                                        v45 = cgc_strlen(v41);\n
                                        v40 = v45;\n
                                        v34 = v11;\n
                                        if (v34 > v45)\n
                                        {\n
                                            v46 = v45 - v34;\n
                                            do\n
                                            {\n
                                                if (v44 < 2147483647)\n
                                                {\n
                                                    v1 = v18;\n
                                                    if (v16)\n
                                                    {\n
                                                        a2 = v16;\n
                                                        cgc_fwrite(&v1, 1, v16);\n
                                                    }\n
                                                    if (v13)\n
                                                        *((v13 + v44)) = v1;\n
                                                }\n
                                                else\n
                                                {\n
                                                    if (!(v44 == -1))\n
                                                        continue;\n
                                                }\n
                                                tmp_2 = v44;\n
                                                v44 += 1;\n
                                                tmp_12 = v46 + 1;\n
                                                v46 += 1;\n
                                            } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                                        }\n
                                        if (!(v44 < 2147483647))\n
                                            goto LABEL_40484f;\n
                                        v43 = 2147483647 - v44;\n
                                        if (v43 > v45)\n
                                            v43 = v45;\n
                                        if (v16)\n
                                        {\n
                                            a1 = v43;\n
                                            a2 = v16;\n
                                            cgc_fwrite(&v5, v43, v16);\n
                                        }\n
                                        if (!v13)\n
                                            goto LABEL_40484f;\n
                                        a0 = v13 + v44;\n
                                        a1 = &v5;\n
LABEL_404847:\n
                                        a2 = v43;\n
LABEL_40484a:\n
                                        cgc_memcpy(a0, a1, a2);\n
LABEL_40484f:\n
                                        tmp_2 = v44;\n
                                        v44 += v40;\n
                                        if (__CFADD__(tmp_2, v40))\n
                                            goto LABEL_40491f;\n
                                        goto LABEL_404858;\n
                                    }\n
                                }\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                a0 = &v5;\n
                                if (!v29)\n
                                {\n
                                    v7 = 48;\n
                                    a0 = &v5;\n
                                    a1 = &v7;\n
                                    goto LABEL_4046ad;\n
                                }\n
                            }\n
                        }\n
LABEL_4048a5:\n
                        v13 = v2;\n
LABEL_4048aa:\n
                        if (v44 < 2147483647)\n
                            break;\n
                        if (v44 == -1)\n
                        {\n
LABEL_40491f:\n
                            cgc__terminate(a0);\n
                            return cgc_realloc(a0, a1, a2, v34, v49, v50);\n
                        }\n
                        return v44;\n
                    }\n
                    else if (a1 == 11)\n
                    {\n
                        a2 = v4;\n
                        v23 = *(a2);\n
                        if (v23 <= 40)\n
                        {\n
                            v27 = v23 + *((a2 + 16));\n
                            v34 = v23 + 8;\n
                            *(a2) = v34;\n
                            v13 = v2;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_404890;\n
                            goto LABEL_404616;\n
                        }\n
                        else\n
                        {\n
                            v27 = *((a2 + 8));\n
                            v34 = v27 + 8;\n
                            *((a2 + 8)) = v34;\n
                            v13 = v2;\n
                            if (v44 < 2147483647)\n
                            {\n
LABEL_404616:\n
                                v1 = *(v27);\n
                                if (v16)\n
                                {\n
                                    a2 = v16;\n
                                    cgc_fwrite(&v1, 1, v16);\n
                                }\n
                                if (v13)\n
                                {\n
                                    *((v13 + v44)) = v1;\n
                                    goto LABEL_40489a;\n
                                }\n
                            }\n
                            else\n
                            {\n
LABEL_404890:\n
                                if (v44 == -1)\n
                                    goto LABEL_40491f;\n
LABEL_40489a:\n
                                v44 += 1;\n
LABEL_404858:\n
                                v15 = v3;\n
                                v14 = v15 + 1;\n
                                v3 = v14;\n
                                *(&v15) = *(v15);\n
                                if (!*(&v15))\n
                                    goto LABEL_4048aa;\n
                            }\n
                        }\n
                    }\n
                    else if (a1 == 27)\n
                    {\n
                        a2 = v4;\n
                        v26 = *(a2);\n
                        if (v26 <= 40)\n
                        {\n
                            v33 = v26 + *((a2 + 16));\n
                            v34 = v26 + 8;\n
                            *(a2) = v34;\n
                        }\n
                        else\n
                        {\n
                            v33 = *((a2 + 8));\n
                            v34 = v33 + 8;\n
                            *((a2 + 8)) = v34;\n
                        }\n
                        v13 = v2;\n
                        v35 = *(v33);\n
                        v36 = cgc_strlen(v35);\n
                        v40 = v36;\n
                        if (!(v44 < 2147483647))\n
                            goto LABEL_40484f;\n
                        v43 = 2147483647 - v44;\n
                        if (v43 > v36)\n
                            v43 = v36;\n
                        if (v16)\n
                            cgc_fwrite(v35, v43, v16);\n
                        if (!v13)\n
                            goto LABEL_40484f;\n
                        a0 = v13 + v44;\n
                        a1 = v35;\n
                        goto LABEL_404847;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v13)\n
        *((v13 + v44)) = 0;\n
    return v44;\n
}\n
", "4211576:sub_404378": null, "4211697:sub_4043f1": null, "4212570:sub_40475a": null, "4212647:sub_4047a7": null, "4213040:cgc_realloc": "extern unsigned long long g_heap[3];\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap[0], a0, a1);\n
}\n
", "4213058:sub_404942": null, "4213072:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4213169:sub_4049b1": null, "4213184:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4213280:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4213337:sub_404a59": null, "4213344:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4213397:sub_404a95": null, "4213408:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4213461:sub_404ad5": null, "4213472:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4213533:sub_404b1d": null, "4213536:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4213570:sub_404b42": null, "4213584:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    char v6[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v6 = a0;\n
    v4 = &a0[a2];\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v3))\n
        {\n
            v5 = cgc_tolower(v2);\n
            if (v5 != cgc_tolower(*(v3)))\n
                break;\n
            if (v6 >= v4)\n
                break;\n
            v3 += 1;\n
            v2 = *((v6 + 1));\n
            v6 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    v7 = (v6 == v4 ? *(v6) - *(v3) : 0);\n
    return v7;\n
}\n
", "4213695:sub_404bbf": null, "4213696:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_404c24:\n
        v17 = v3;\n
        goto LABEL_404d56;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_404c24;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_404d56:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4214138:sub_404d7a": null, "4214144:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4214215:sub_404dc7": null, "4214224:cgc_strsep": "long long cgc_strsep(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    unsigned long v3;  // r15\n
    unsigned long v4;  // rbx\n
    unsigned long v5;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rbx\n
    unsigned long v9;  // rbx\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v5 = cgc_strchr(a1, v2);\n
            if (v5)\n
            {\n
                v7 = v3 + v4;\n
                if (!*((v3 + v4)))\n
                    goto LABEL_404e15;\n
                v8 = v4 + 1;\n
                v9 = v8 + v3;\n
                goto LABEL_404e17;\n
            }\n
            v4 = v4 + 1;\n
            v2 = *((v3 + v4));\n
        } while (v2);\n
        v6 = v4;\n
    }\n
    v7 = v6 + v3;\n
LABEL_404e15:\n
    v9 = 0;\n
LABEL_404e17:\n
    *(a0) = v9;\n
    *(v7) = 0;\n
    return *(a0);\n
}\n
", "4214337:sub_404e41": null, "4214352:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4214431:sub_404e9f": null, "4214432:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    unsigned int v25;  // ebp\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // edx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405078;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_404f61;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_404f61:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_404fa0:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_4050a9;\n
LABEL_404fb6:\n
                *(&v18) = *(v16);\n
LABEL_404fb8:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_404fc5:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 > 2147483647)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405078;\n
                }\n
LABEL_4050a9:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405078;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405078;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_404fc5;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_404fa0;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_404f96:\n
            v19 = 16;\n
            goto LABEL_404fb6;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_404fb6;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_404fb8;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_404f96;\n
LABEL_405078:\n
    v31 = (!v25 ? -0x80000000 : -(v26));\n
    v32 = (!v25 ? 2147483647 : v26);\n
    if (v30 < 0)\n
        v32 = v31;\n
    return v32;\n
}\n
", "4214777:sub_404ff9": null, "4214975:sub_4050bf": null, "4214976:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    void* v25;  // rbp, Other Possible Types: unsigned long, unsigned int, unsigned long long\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned long v32;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405298;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_405181;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_405181:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_4051c0:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_4052d4;\n
LABEL_4051d6:\n
                *(&v18) = *(v16);\n
LABEL_4051d8:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_4051e5:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 >> 32)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405298;\n
                }\n
LABEL_4052d4:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405298;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405298;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_4051e5;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_4051c0;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_4051b6:\n
            v19 = 16;\n
            goto LABEL_4051d6;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_4051d6;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_4051d8;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_4051b6;\n
LABEL_405298:\n
    if (v30 < 0)\n
    {\n
        v31 = (v26 == -0x80000000 ? 1 : v25);\n
        if (v26 <= 2147483647)\n
            v31 = v25;\n
        v26 = -(v26);\n
        v25 = v31;\n
    }\n
    v32 = (!v25 ? 4294967295 : v26);\n
    return v32;\n
}\n
", "4215321:sub_405219": null, "4215530:sub_4052ea": null, "4215536:_Z9runPacketv": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_stderr;\n
extern unsigned long long g_407248;\n
extern char g_407271;\n
\n
int runPacket()\n
{\n
}\n
", "4215598:sub_40532e": null, "4215824:sub_405410": "typedef struct struct_0 {\n
    char field_0;\n
    unsigned int field_1;\n
    unsigned short field_5;\n
    char field_7;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
int sub_405410()\n
{\n
    char v1;  // [bp+0x33]\n
    char v2;  // [bp+0x34]\n
    char v3;  // [bp+0x5c]\n
    char v4;  // [bp+0x160]\n
    char v5;  // [bp+0x161]\n
    char v6;  // [bp+0x165]\n
    char v7;  // [bp+0x167]\n
    unsigned long v8;  // [bp+0x168]\n
    char v9;  // [bp+0x170]\n
    char v10;  // [bp+0x100009]\n
    void* v11;  // r12\n
    struct_0 *v12;  // rbx\n
\n
    cgc_fread(&v2, 4, v11);\n
    cgc_fread(&v3, 4, v11);\n
    v4 = 4;\n
    v8 = *(&v3) * 0x100000000 | *(&v2);\n
    *(&v12->field_c) = *(&v9);\n
    v12->field_0 = v4;\n
    *(&(&v12->field_0)[1]) = *(&v5);\n
    *((&v12->field_1 + 1)) = *(&v6);\n
    *(&v12->field_1 + 3) = v7;\n
    *(&v12->field_5) = v8;\n
    v12->field_8 = *((&v8 + 4));\n
    if (&v10 < v1)\n
        goto LABEL_0x4054c1;\n
    else\n
        goto LABEL_0x4055a0;\n
}\n
", "4216038:sub_4054e6": "long long sub_4054e6()\n
{\n
    char v1;  // [bp+0x160]\n
    unsigned int v2;  // [bp+0x168]\n
\n
    v1 = 0;\n
    v2 = 0;\n
}\n
", "4217179:sub_40595b": null, "4217184:main": "int main()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    runPacket();\n
    return 0;\n
}\n
", "4217194:sub_40596a": null, "4217200:_Z8MsgSend1RK6objecti": "long long MsgSend1(unsigned int a0[2], unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned long long v3;  // rsi\n
    unsigned long v5;  // rax\n
\n
    v3 = a0[1];\n
    v0 = 0;\n
    _MsgSend(a0[0], v3, a1, 0, 0, 0);\n
    return v5;\n
}\n
", "4217234:sub_405992": null, "4217248:_ZL8_MsgSendiiiiiiiz": "long long _MsgSend(unsigned int a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0xfc]\n
    unsigned int v1;  // [bp-0xf8]\n
    unsigned int v2;  // [bp-0xf4]\n
    unsigned int v3;  // [bp-0xf0]\n
    unsigned int v4;  // [bp-0xec]\n
    unsigned long long v5;  // [bp-0xe8], Other Possible Types: unsigned int, unsigned long\n
    unsigned long long *v6;  // [bp-0xe0], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0xd8]\n
    char v8;  // [bp-0xc8]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    char v18;  // [bp+0x10]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned int v28;  // r9d\n
    void* v29;  // rbx\n
    unsigned long long v30;  // rcx\n
    unsigned long long *v31;  // rax, Other Possible Types: unsigned long\n
\n
    if (v19)\n
    {\n
        v9 = v20;\n
        v10 = v21;\n
        v11 = v22;\n
        v12 = v23;\n
        v13 = v24;\n
        v14 = v25;\n
        v15 = v26;\n
        v16 = v27;\n
    }\n
    v4 = a1;\n
    v3 = a2;\n
    v2 = a3;\n
    v1 = a4;\n
    v0 = v28;\n
    v29 = cgc_fopen(a0, 1);\n
    cgc_fwrite(&v4, 4, v29);\n
    cgc_fwrite(&v3, 4, v29);\n
    cgc_fwrite(&v17, 1, v29);\n
    cgc_fwrite(&v2, 4, v29);\n
    cgc_fwrite(&v1, 4, v29);\n
    cgc_fwrite(&v0, 4, v29);\n
    v5 = 206158430256;\n
    v6 = &v18;\n
    v7 = &v8;\n
    if (v17 <= 0)\n
        return cgc_fflush(v29);\n
    do\n
    {\n
        v30 = v5;\n
        if (v30 > 40)\n
        {\n
            v31 = v6;\n
            v6 = v31 + 1;\n
        }\n
        else\n
        {\n
            v31 = v30 + v7;\n
            v5 = v30 + 8;\n
        }\n
        proxy_argument::send(*(v31), v29);\n
    } while (1 < v17);\n
    return cgc_fflush(v29);\n
}\n
", "4217602:sub_405b02": null, "4217616:_Z7MsgSendRK6objectiS1_i": "long long MsgSend(unsigned int a0[2], unsigned int a1, unsigned int a2[2], unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = 0;\n
    _MsgSend(a0[0], a0[1], a1, a2[0], a2[1]);\n
    return v2;\n
}\n
", "4217655:sub_405b37": null, "4217664:_Z8MsgSend1RK6objecti14proxy_argument": "long long MsgSend1(unsigned int a0[2], unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v2;  // [bp+0x8]\n
    unsigned long v4;  // rsi\n
    unsigned int v5;  // edi\n
    unsigned long v6;  // rax\n
\n
    v4 = a0[1];\n
    v5 = a0[0];\n
    v1 = &v2;\n
    v0 = 1;\n
    _MsgSend(v5, v4, a1, 0, 0);\n
    return v6;\n
}\n
", "4217704:sub_405b68": null, "4217712:_Z7MsgSendRK6objectiS1_i14proxy_argument": "long long MsgSend(unsigned int a0[2], unsigned long a1, unsigned int a2[2], unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v2;  // [bp+0x8]\n
    unsigned long v4;  // rsi\n
    unsigned int v5;  // edi\n
    unsigned long v6;  // rax\n
\n
    v4 = a0[1];\n
    v5 = a0[0];\n
    v1 = &v2;\n
    v0 = 1;\n
    _MsgSend(v5, v4, a1, a2[0], a2[1]);\n
    return v6;\n
}\n
", "4217757:sub_405b9d": null, "4217760:_Z8MsgSend1RK6objecti14proxy_argumentS2_": "long long MsgSend1(unsigned int a0[2], unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp+0x8]\n
    char v4;  // [bp+0x20]\n
    unsigned long v6;  // rsi\n
    unsigned int v7;  // edi\n
    unsigned long v8;  // rax\n
\n
    v6 = a0[1];\n
    v7 = a0[0];\n
    v2 = &v4;\n
    v1 = &v3;\n
    v0 = 2;\n
    _MsgSend(v7, v6, a1, 0, 0);\n
    return v8;\n
}\n
", "4217811:sub_405bd3": null, "4217824:_Z7MsgSendRK6objectiS1_i14proxy_argumentS2_": "long long MsgSend(unsigned int a0[2], unsigned long a1, unsigned int a2[2], unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp+0x8]\n
    char v4;  // [bp+0x20]\n
    unsigned long v6;  // rsi\n
    unsigned int v7;  // edi\n
\n
    v6 = a0[1];\n
    v7 = a0[0];\n
    v2 = &v4;\n
    v1 = &v3;\n
    v0 = 2;\n
    return _MsgSend(v7, v6, a1, a2[0], a2[1]);\n
}\n
", "4217879:sub_405c17": null, "4217888:_ZN14proxy_argument4sendEP4FILE": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long proxy_argument::send(struct_0 *a0, void* a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v3;  // rax\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    v4 = cgc_fwrite(a0, 1, a1);\n
    *(&v4) = a0->field_0 - 1;\n
    switch (a0->field_0)\n
    {\n
    case 1: case 3:\n
        return cgc_fwrite(&a0->field_8, 4, a1);\n
    case 2:\n
        v1 = a0->field_10;\n
        cgc_fwrite(&v1, 4, a1);\n
        v4 = cgc_fwrite(a0->field_8, v1, a1);\n
        return v4;\n
    case 4:\n
        cgc_fwrite(&a0->field_8, 4, a1);\n
        return cgc_fwrite(&a0->field_8 + 4, 4, a1);\n
    default:\n
        return v4;\n
    }\n
}\n
", "4218037:sub_405cb5": null, "4218048:cgc_rs_decode": "typedef struct struct_1 {\n
    char padding_0[4223904];\n
    char field_4073a0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4223648];\n
    struct struct_2 *field_4072a0;\n
    char padding_4072a8[248];\n
    char field_4073a0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4223648];\n
    char field_4072a0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    char padding_8[4223641];\n
    char field_4072a1;\n
    char padding_4072a2[254];\n
    char field_4073a0;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char field_0;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    char padding_0[4223904];\n
    struct struct_7 *field_4073a0;\n
} struct_7;\n
\n
typedef struct struct_5 {\n
    char padding_0[4223648];\n
    struct struct_5 *field_4072a0;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[254];\n
    char field_fe;\n
} struct_4;\n
\n
extern char g_4072a1;\n
extern char gf_exp;\n
extern char gf_log;\n
\n
long long cgc_rs_decode(unsigned int a0, struct_1 *a1, unsigned long a2, unsigned long long a3, struct_1 *a4)\n
{\n
    unsigned short s_440;  // [bp-0x440]\n
    struct struct_3 **v0;  // [bp-0xa90], Other Possible Types: unsigned int\n
    int tmp_23;  // tmp #23\n
    int tmp_21;  // tmp #21\n
    int tmp_3;  // tmp #3\n
    int tmp_206;  // tmp #206\n
    int tmp_208;  // tmp #208\n
    int tmp_207;  // tmp #207\n
    int tmp_278;  // tmp #278\n
    int tmp_280;  // tmp #280\n
    int tmp_279;  // tmp #279\n
    int tmp_76;  // tmp #76\n
    int tmp_77;  // tmp #77\n
    int tmp_7;  // tmp #7\n
    int tmp_4;  // tmp #4\n
    int tmp_197;  // tmp #197\n
    int tmp_201;  // tmp #201\n
    int tmp_9;  // tmp #9\n
    int tmp_35;  // tmp #35\n
    struct struct_1 **v1;  // [bp-0xa88]\n
    struct_1 *v2;  // [bp-0xa80]\n
    void* v3;  // [bp-0xa78], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xa6c]\n
    unsigned int v5;  // [bp-0xa68]\n
    struct_1 *v6;  // [bp-0xa60]\n
    unsigned short v7;  // [bp-0xa58]\n
    struct_2 *v8;  // [bp-0xa56]\n
    char v9;  // [bp-0xa55]\n
    char v10;  // [bp-0xa46]\n
    char v11;  // [bp-0x9e6]\n
    unsigned short v12;  // [bp-0x850]\n
    struct_2 *v13;  // [bp-0x84e]\n
    struct_2 *v14;  // [bp-0x84d]\n
    struct_2 *v15;  // [bp-0x83e]\n
    unsigned short v16;  // [bp-0x648], Other Possible Types: unsigned long long\n
    struct_2 *v17;  // [bp-0x646]\n
    char v18;  // [bp-0x645]\n
    struct_1 *v20;  // [bp-0x548]\n
    char v21;  // [bp-0x44e]\n
    char v22;  // [bp-0x446]\n
    char v23;  // [bp-0x43f]\n
    char v24;  // [bp-0x43e]\n
    unsigned short v25;  // [bp-0x238]\n
    struct_2 *v26;  // [bp-0x236]\n
    char v27;  // [bp-0x226]\n
    char v28;  // [bp-0x1c6]\n
    struct_1 *v30;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v31;  // r11, Other Possible Types: unsigned long\n
    struct_1 *v32;  // rdi\n
    unsigned long long v34;  // rbx\n
    struct_0 *v35;  // r9, Other Possible Types: unsigned long\n
    struct struct_1 **v36;  // r13, Other Possible Types: unsigned long\n
    struct_1 *v37;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v38;  // rdx\n
    struct_1 *v39;  // rdi\n
    struct_2 *v40;  // bl\n
    unsigned long long v42;  // rsi\n
    unsigned long long v43;  // rdi\n
    struct_1 *v44;  // r10\n
    struct_2 *v46;  // rax\n
    void* v51;  // rax\n
    unsigned long long v52;  // rax\n
    struct_0 *v53;  // rcx\n
    struct_0 *v54;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v55;  // rcx\n
    unsigned long v56;  // rdx\n
    struct_1 *v57;  // rax\n
    unsigned long long v59;  // rdi\n
    unsigned long long v60;  // rax\n
    struct_3 *v61;  // rcx\n
    struct_3 *v62;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v63;  // rdx\n
    struct_3 *v64;  // rdx\n
    unsigned long v65;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v66;  // rax\n
    unsigned long long *v67;  // r8\n
    unsigned long long *v68;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v69;  // rax\n
    unsigned long long v70;  // rdi\n
    unsigned long long v71;  // r9\n
    unsigned long v72;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v73;  // rbx\n
    unsigned long v74;  // rax\n
    struct_2 *v75;  // xmm1\n
    struct_2 *v76;  // xmm1\n
    struct_2 *v77;  // xmm1\n
    struct_2 *v78;  // xmm1\n
    unsigned long long v79;  // rsi\n
    struct struct_2 **v80;  // rax\n
    unsigned long v82;  // rdi\n
    struct_2 *v83;  // xmm1\n
    unsigned long long v84;  // rax\n
    unsigned long long v85;  // rdi\n
    void* v88;  // r13, Other Possible Types: unsigned long\n
    struct_1 *v89;  // rax, Other Possible Types: unsigned long\n
    unsigned long v90;  // r12, Other Possible Types: unsigned long long\n
    unsigned long long v91;  // rax\n
    struct_1 *v93;  // rax\n
    char v94;  // rax\n
    unsigned long v95;  // rsi\n
    void* v96;  // r12, Other Possible Types: unsigned long\n
    struct_1 *v97;  // rdi\n
    unsigned long long v98;  // rcx\n
    unsigned long long v99;  // rdx\n
    void* v100;  // r9\n
    unsigned long v101;  // rbp\n
    struct_1 *v102;  // rdi\n
    unsigned long long v103;  // rsi\n
    unsigned long long v104;  // rcx\n
    struct_1 *v107;  // r10, Other Possible Types: unsigned long\n
    struct_3 *v108;  // rax, Other Possible Types: unsigned long\n
    unsigned long v109;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v110;  // rdx\n
    unsigned long v113;  // rcx\n
    unsigned long v114;  // rdx, Other Possible Types: unsigned long long\n
    struct_6 *v116;  // rcx, Other Possible Types: unsigned long\n
    char *v117;  // rax, Other Possible Types: unsigned long\n
    unsigned long v118;  // rax\n
    unsigned short v119;  // bx\n
    struct_1 *v120;  // rdi\n
    unsigned long v121;  // rbx\n
    struct_1 *v122;  // rdx\n
    unsigned long long v124;  // rdx\n
    unsigned long long v125;  // rbp\n
    void* v126;  // r13, Other Possible Types: unsigned long\n
    unsigned long v127;  // rax\n
    struct_3 *v128;  // rax, Other Possible Types: unsigned long\n
    unsigned long v129;  // rdx\n
    unsigned long long v130;  // rax\n
    unsigned long v131;  // rsi\n
    unsigned long v134;  // rcx\n
    unsigned long v136;  // rdx\n
    unsigned long v138;  // r10\n
    unsigned long v139;  // r15\n
    struct_1 *v140;  // r12\n
    unsigned int v141;  // edx\n
    unsigned long long v142;  // rdx\n
    struct_7 *v143;  // rax\n
    char v144;  // al\n
    char v145;  // dl\n
    struct_1 *v146;  // rbx\n
    unsigned long v147;  // rax\n
    unsigned long long v148;  // rdx\n
    unsigned long long v149;  // rdi\n
    unsigned long long v150;  // rdx\n
    unsigned long v151;  // rax\n
    unsigned long long v152;  // rdi\n
    unsigned long long v153;  // rbp\n
    unsigned long long v154;  // rdi\n
    struct_2 *v155;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v156;  // rdi\n
    unsigned long long v157;  // rdi\n
    unsigned long long v158;  // rax\n
    unsigned int v159;  // edx\n
    unsigned int v160;  // eax\n
    unsigned int v161;  // edx\n
    unsigned long long v162;  // rax\n
    struct_5 *v163;  // rax, Other Possible Types: char, unsigned long\n
    unsigned long v165;  // r10, Other Possible Types: unsigned short, unsigned long long\n
    struct_0 *v166;  // r9, Other Possible Types: unsigned long\n
    struct_1 *v167;  // rdi\n
    unsigned long v168;  // rbp\n
    unsigned long long v170;  // rax\n
    unsigned long long v171;  // rbx\n
    unsigned long v172;  // rcx\n
\n
    v30 = a1;\n
    v5 = a0;\n
    cgc_memcpy(&v17, a0, 0xff);\n
    v16 = 255;\n
    s_440 = a1;\n
    v31 = a1;\n
    if (a1 > 0)\n
    {\n
        *(&a4) = v20;\n
        v35 = 0;\n
        do\n
        {\n
            v32 = (&gf_exp)[v35];\n
            a4 = 255;\n
            a4 = a4;\n
            while (true)\n
            {\n
                if (a4)\n
                {\n
                    v89 = *((v32 + &gf_log)) + (&gf_log)[a4];\n
                    v34 = v89 * 32897 >> 23;\n
                    a4 = *((&v89->padding_0[v34 + -0x100 * v34] + &gf_exp));\n
                    *(&a4) = a4 ^ *(&v16 + a4);\n
                    a4 -= 1;\n
                    if (a4 == 1)\n
                        break;\n
                }\n
                else\n
                {\n
                    a4 = 0;\n
                    *(&a4) = 0 ^ *(&v16 + a4);\n
                    a4 -= 1;\n
                    if (a4 == 1)\n
                        break;\n
                }\n
            }\n
            *((&v24 + &a1->padding_0[~(v35)])) = a4;\n
            v35 = &v35->padding_0[1];\n
        } while (v35 != a1);\n
        v30 = s_440;\n
    }\n
    v6 = a1;\n
    v4 = a1;\n
    v3 = 0;\n
    memset(&v13, 0, 0x200);\n
    *(&v13) = 1;\n
    *(&v8) = 1;\n
    v36 = v30;\n
    v2 = v30;\n
    if (v36)\n
    {\n
        v0 = &v36[536870911] + 7;\n
        v1 = v36;\n
        v90 = &v24 + v36;\n
        *(&v30) = 1;\n
        v37 = &gf_exp;\n
        v88 = 0;\n
        *(&v89) = 1;\n
        while (true)\n
        {\n
            v12 = v89 + 1;\n
            cgc_memmove(&v14, &v13, v89);\n
            *(&v13) = 0;\n
            *(&a3) = *((&v24 + ~(v88) + v1));\n
            a4 = v30;\n
            if (!([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>)))\n
            {\n
                v38 = 0;\n
                do\n
                {\n
                    v39 = (&v9)[v38];\n
                    a1 = 0;\n
                    if (v39)\n
                    {\n
                        v40 = *((v90 + v38));\n
                        if (v40)\n
                        {\n
                            v42 = *((v40 + &gf_log)) + *((v39 + &gf_log));\n
                            v43 = v42 * 32897 >> 23;\n
                            a1 = *(&(&gf_exp)[v42 + v43 + -0x100 * v43]);\n
                        }\n
                    }\n
                    *(&a3) = a3 ^ a1;\n
                    v38 += 1;\n
                } while (v30 - 1 != v38);\n
            }\n
            if (a3)\n
                break;\n
LABEL_406240:\n
            if (v88 == v0)\n
                goto LABEL_40625f;\n
            v30 = a4;\n
            v88 += 1;\n
            v89 = v12;\n
            v90 -= 1;\n
        }\n
        v44 = v12;\n
        if (v44)\n
        {\n
            a1 = &v44->padding_0[1];\n
            v46 = 0;\n
            v51 = 0;\n
            *(&v26) = 0;\n
        }\n
        v52 = v3;\n
        if (v88 >= v52)\n
        {\n
            *(&v52) = (&gf_log)[a3];\n
            tmp_23 = a3;\n
            v53 = -(*(&v52));\n
            v54 = ~(v52);\n
            if ((tmp_23 & 255) < 2)\n
                v54 = v53;\n
            v12 = v30;\n
            if (v30)\n
            {\n
                v55 = (&gf_exp)[v54];\n
                v56 = v30;\n
                a1 = 0;\n
                while (true)\n
                {\n
                    v57 = *(&v8 + a1);\n
                    if (!v57)\n
                    {\n
                        *(&v13 + a1) = 0;\n
                        a1 += 1;\n
                        if (v56 == a1)\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v59 = *((v55 + &gf_log)) + *((v57 + &gf_log));\n
                        v60 = v59 * 32897 >> 23;\n
                        a4 = v60 * 0x100;\n
                        *(&v13 + a1) = (&gf_exp)[v59 + v60 + -1 * a4];\n
                        a1 += 1;\n
                        if (v56 == a1)\n
                            break;\n
                    }\n
                }\n
            }\n
            v3 = v88;\n
        }\n
        if (!v44)\n
            goto LABEL_406240;\n
        v61 = v30;\n
        v62 = &v44->padding_0[1];\n
        if (v61 <= v62)\n
            v62 = v61;\n
        if (v62 < 16)\n
        {\n
            v63 = 0;\n
        }\n
        else\n
        {\n
            v64 = v62 + 1;\n
            v65 = v64 & 15;\n
            if (!v65)\n
                v65 = 16;\n
            v63 = v64 - v65;\n
            v66 = 0;\n
            do\n
            {\n
                *((&v8 + v66)) = *((&v8 + v66)) ^ *((&v26 + v66));\n
                v66 += 16;\n
            } while (v63 != v66);\n
        }\n
        while (v61 != v63)\n
        {\n
            *(&v8 + v63) = *(&v8 + v63) ^ *(&v26 + v63);\n
            v63 += 1;\n
            if (v44 == v63)\n
                break;\n
        }\n
        if (!([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r8w<2>), Conv(16->64, r10w<2>), cc_ndep<8>)))\n
            goto LABEL_406240;\n
        v67 = v44 - v61;\n
        if (v67 < 8)\n
        {\n
            a1 = v61;\n
            goto LABEL_406220;\n
        }\n
        if (v67 < 32)\n
        {\n
            v68 = 0;\n
        }\n
        else\n
        {\n
            v68 = v67 & -0x20;\n
            v69 = v68 - 32;\n
            v70 = (v69 >> 5) + 1;\n
            v71 = v70 & 3;\n
            if (v69 < 96)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v72 = v70 & -4;\n
                v73 = &v11 + v61;\n
                v74 = &v28 + v61;\n
                a1 = 0;\n
                do\n
                {\n
                    v75 = *((v74 + a1 - 96));\n
                    *((v73 + a1 - 112)) = *((v74 + a1 - 112));\n
                    *((v73 + a1 - 96)) = v75;\n
                    v76 = *((v74 + a1 - 64));\n
                    *((v73 + a1 - 80)) = *((v74 + a1 - 80));\n
                    *((v73 + a1 - 64)) = v76;\n
                    v77 = *((v74 + a1 - 32));\n
                    *((v73 + a1 - 48)) = *((v74 + a1 - 48));\n
                    *((v73 + a1 - 32)) = v77;\n
                    v78 = *((v74 + a1));\n
                    *((v73 + a1 - 16)) = *((v74 + a1 - 16));\n
                    *((v73 + a1)) = v78;\n
                    a1 -= -128;\n
                    tmp_21 = v72;\n
                    v72 -= 4;\n
                } while (tmp_21 != 4);\n
            }\n
            if (v71)\n
            {\n
                v79 = a1 + v61;\n
                v80 = &(&v10)[v79];\n
                a1 = &(&v27)[v79];\n
                v82 = 0;\n
                do\n
                {\n
                    v83 = *((a1 + v82));\n
                    *((-16 + v80 + v82)) = *((a1 + v82 - 16));\n
                    *((v80 + v82)) = v83;\n
                    v82 += 32;\n
                } while (v71 * 32 != v82);\n
            }\n
            if (v67 == v68)\n
                goto LABEL_406235;\n
            if (!(v67 & 24))\n
            {\n
                a1 = v68 + v61;\n
                do\n
                {\n
LABEL_406220:\n
                    *(&v8 + a1) = *(&v26 + a1);\n
                    a1 += 1;\n
                } while (v44 != a1);\n
LABEL_406235:\n
                a4 = v44;\n
                goto LABEL_406240;\n
            }\n
        }\n
        v84 = v44 - v61;\n
        v85 = v84 & -8;\n
        a1 = v85 + v61;\n
        do\n
        {\n
            a4 = *((v61 + &v26 + v68));\n
            *((v61 + &v8 + v68)) = a4;\n
            v68 += 8;\n
        } while (v85 != v68);\n
        if (v84 == v85)\n
            goto LABEL_406235;\n
LABEL_40625f:\n
        v30 = v2;\n
        v36 = v1;\n
        if (!a4)\n
            goto LABEL_4068ec;\n
        if (!*(-1 + &v8 + a4))\n
            goto LABEL_4064b1;\n
    }\n
    else\n
    {\n
        *(&a4) = 1;\n
        if (!v8)\n
        {\n
LABEL_4064b1:\n
            a4 = a4 - 1;\n
            v91 = a4;\n
            while (true)\n
            {\n
                tmp_3 = v91;\n
                *(&v91) = v91 - 1;\n
                if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                    break;\n
                a4 = v91;\n
                if (*(-1 + &v8 + a4))\n
                {\n
                    v93 = v91 + 1;\n
                    a4 = v93;\n
                    v7 = a4;\n
                    if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                    {\n
LABEL_4064f2:\n
                        *(&a4) = 1;\n
                        v96 = 0;\n
                        v0 = 0;\n
                        if (!(!v30))\n
                            goto LABEL_40690c;\n
                        goto LABEL_4063f4;\n
                    }\n
                    v37 = a4;\n
                    v94 = a4 - 1;\n
                    v95 = 0;\n
                    while (true)\n
                    {\n
                        v97 = (&v9)[v95];\n
                        if (v97)\n
                        {\n
                            v98 = *(&(&gf_log)[(&g_4072a1)[v95]]) + *((v97 + &gf_log));\n
                            v99 = v98 * 32897 >> 23;\n
                            *(&v14 + v95) = *(&(&gf_exp)[v98 + v99 + -0x100 * v99]);\n
                            v95 += 1;\n
                            if (v94 == v95)\n
                                break;\n
                        }\n
                        else\n
                        {\n
                            *(&v14 + v95) = 0;\n
                            v95 += 1;\n
                            if (v94 == v95)\n
                                break;\n
                        }\n
                    }\n
                    v96 = 0;\n
                    a4 = 0;\n
                    v100 = 0;\n
                    while (true)\n
                    {\n
                        *(&v30) = 1;\n
                        v101 = 0;\n
                        do\n
                        {\n
                            v102 = *(&v14 + v101);\n
                            if (!v102)\n
                            {\n
                                a1 = 0;\n
                            }\n
                            else\n
                            {\n
                                v103 = *(&(&gf_log)[(&g_4072a1)[v101]]) + *((v102 + &gf_log));\n
                                v104 = v103 * 32897 >> 23;\n
                                a1 = (&gf_exp)[v103 + v104 + -0x100 * v104];\n
                            }\n
                            *(&v30) = v30 ^ v102;\n
                            *(&v14 + v101) = a1;\n
                            v101 += 1;\n
                        } while (v94 != v101);\n
                        if (!v30)\n
                        {\n
                            v96 = a4 + 1;\n
                            *((&v26 + a4)) = v100;\n
                            a4 = v96;\n
                            if (v100 + 1 == 255)\n
                                break;\n
                        }\n
                        else if (v100 + 1 == 255)\n
                        {\n
                            break;\n
                        }\n
                    }\n
                    v25 = v96;\n
                    v94 = 1;\n
                    v0 = v94;\n
                    a4 = v37;\n
                    v30 = v2;\n
                    if (!(!v30))\n
                        goto LABEL_40690c;\n
                    goto LABEL_4063f4;\n
                }\n
            }\n
            v7 = 0;\n
LABEL_4068ec:\n
            v25 = 0;\n
            v96 = 0;\n
            v0 = 0;\n
            a4 = 0;\n
            if (v30)\n
            {\n
LABEL_40690c:\n
                if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                {\n
                    v108 = 0;\n
                }\n
                else\n
                {\n
                    if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                    {\n
                        v108 = 0;\n
                    }\n
                    else\n
                    {\n
                        v108 = v36 & -32;\n
                        v109 = &(&v21)[v36];\n
                        v110 = 0;\n
                        do\n
                        {\n
                            tmp_206 = QNarrowBinV(tmp_208, tmp_207);\n
                            tmp_278 = QNarrowBinV(tmp_280, tmp_279);\n
                            *((&v13 + v110)) = tmp_206;\n
                            *((&v15 + v110)) = tmp_278;\n
                            v110 += 32;\n
                            v109 -= 32;\n
                        } while (v108 != v110);\n
                        if (v108 == v36)\n
                            goto LABEL_406a74;\n
                        if (!(v36 & 24))\n
                            goto LABEL_406a46;\n
                    }\n
                    v113 = v108;\n
                    v108 = v36 & -8;\n
                    v114 = &(&v22)[v36 + -1 * v113];\n
                    do\n
                    {\n
                        tmp_76 = QNarrowBinV(tmp_77, tmp_77);\n
                        *((&v13 + v113)) = tmp_76;\n
                        v113 += 8;\n
                        v114 -= 8;\n
                    } while (v108 != v113);\n
                    if (v108 == v36)\n
                        goto LABEL_406a74;\n
                }\n
LABEL_406a46:\n
                v116 = v36 - v108;\n
                v117 = &v13 + v108;\n
                do\n
                {\n
                    *(v117) = *(&s_440 + v116);\n
                    v117 += 1;\n
                    tmp_7 = v116;\n
                    v116 -= 1;\n
                } while (tmp_7 != 1);\n
LABEL_406a74:\n
                v16 = (v30 + a4) - 1;\n
                v37 = 0;\n
                cgc_memset(&v17, 0, v16);\n
                v107 = a4;\n
                v118 = ([D] amd64g_calculate_condition(0x3<64>, 0x6<64>, Conv(16->64, r10w<2>), 0x2<64>, cc_ndep<8>) ? 1 : a4);\n
                a1 = &v17;\n
                v119 = a4;\n
                do\n
                {\n
                    if (!v119)\n
                    {\n
                        v119 = 0;\n
                    }\n
                    else\n
                    {\n
                        v120 = *(&v13 + v37);\n
                        v119 = v107;\n
                        if (v120)\n
                        {\n
                            v121 = 0;\n
                            while (true)\n
                            {\n
                                v122 = *(&v8 + v121);\n
                                if (v122)\n
                                {\n
                                    v124 = *((v122 + &gf_log)) + *((v120 + &gf_log));\n
                                    v125 = v124 * 32897 >> 23;\n
                                    *((a1 + v121)) = *((a1 + v121)) ^ *(&(&gf_exp)[v124 + v125 + -0x100 * v125]);\n
                                    v121 += 1;\n
                                    if (v118 == v121)\n
                                        break;\n
                                }\n
                                else\n
                                {\n
                                    *((a1 + v121)) = *((a1 + v121)) ^ 0;\n
                                    v121 += 1;\n
                                    if (v118 == v121)\n
                                        break;\n
                                }\n
                            }\n
                            v119 = v107;\n
                        }\n
                    }\n
                    v37 += 1;\n
                    a1 = &v18;\n
                } while (v37 != v36);\n
            }\n
LABEL_4063f4:\n
            *(&v16) = a4 - 1;\n
            cgc_memset(&v17, 0, v16);\n
            v107 = a4;\n
            goto LABEL_406414;\n
        }\n
    }\n
    v7 = a4;\n
    if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r8w<2>), 0x2<64>, cc_ndep<8>))\n
        goto LABEL_4064f2;\n
LABEL_406414:\n
    v126 = v16;\n
    if (v126 > v16)\n
    {\n
        *(&v16) = v2;\n
        v126 = v16;\n
    }\n
    if (!v126)\n
    {\n
LABEL_406461:\n
        v126 = 0;\n
    }\n
    else\n
    {\n
        while (!*(-1 + &v17 + v126))\n
        {\n
            tmp_4 = v126;\n
            *(&v126) = v126 - 1;\n
            *(&v16) = v126;\n
            if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                goto LABEL_406461;\n
        }\n
    }\n
    if (v0)\n
    {\n
        v127 = (3 <= v16 ? 2 : v107 - 1);\n
        v128 = v127 - 1;\n
        if (v128 < 16)\n
        {\n
            v129 = 0;\n
        }\n
        else\n
        {\n
            v130 = (v128 >> 1) + 1;\n
            a1 = (a1 ? 8 : v130 & 7);\n
            v128 = v130 - a1;\n
            v129 = v128 * 2;\n
            v131 = 0;\n
            do\n
            {\n
                *((&v8 + 2 * v131)) = *(&(&v9)[2 * v131]) & 1324055902416102970674609367438786815;\n
                v131 += 8;\n
            } while (v128 != v131);\n
        }\n
        do\n
        {\n
            *(&v8 + v129) = (&v9)[v129];\n
            (&v9)[v129] = 0;\n
            v129 += 2;\n
        } while (v129 < v127);\n
    }\n
    v7 = v107 - 1;\n
    if (v96)\n
    {\n
        v134 = v126;\n
        *(&v31) = *(&v16 + v134);\n
        v136 = v7;\n
        *(&v37) = *(&v7 + v136);\n
        v138 = v96;\n
        v1 = v134 - 2 + 1;\n
        v0 = v136 - 2 + 1;\n
        v139 = 0;\n
        do\n
        {\n
            v140 = *(&v26 + v139);\n
            v141 = (((254 - v140) * -32639 >> 16) + 254 - v140 >> 7) + (((254 - v140) * -32639 >> 16) + 254 - v140 >> 15);\n
            v142 = v141 - (v141 * 0x100 | v140) + 254;\n
            v143 = *(&(&gf_exp)[v142]);\n
            *(&v143) = *((v143 + &gf_log));\n
            tmp_197 = ~(v143);\n
            tmp_201 = v142;\n
            v144 = -(*(&v143));\n
            v145 = tmp_197;\n
            if (!tmp_201)\n
                v145 = v144;\n
            v146 = *(&(&gf_exp)[v145]);\n
            v31 = v31;\n
            if (!([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>)))\n
            {\n
                v147 = v1;\n
                v31 = v31;\n
                while (true)\n
                {\n
                    if (!v31)\n
                    {\n
                        v31 = 0;\n
                        *(&v31) = 0 ^ *(&v16 + v147);\n
                        tmp_9 = v147;\n
                        v147 -= 1;\n
                        if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v148 = (&gf_log)[v31];\n
                        v149 = *((v146 + &gf_log)) + v148;\n
                        v150 = v149 * 32897 >> 23;\n
                        v31 = (&gf_exp)[v149 + v150 + -0x100 * v150];\n
                        *(&v31) = v31 ^ *(&v16 + v147);\n
                        tmp_35 = v147;\n
                        v147 -= 1;\n
                        if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                            break;\n
                    }\n
                }\n
            }\n
            v37 = v37;\n
            if (!([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>)))\n
            {\n
                v151 = v0;\n
                v37 = v37;\n
                while (true)\n
                {\n
                    if (!v37)\n
                    {\n
                        v37 = 0;\n
                        *(&v37) = 0 ^ *(&v7 + v151);\n
                        tmp_9 = v151;\n
                        v151 -= 1;\n
                        if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v152 = (&gf_log)[v37];\n
                        v153 = *((v146 + &gf_log)) + v152;\n
                        v154 = v153 * 32897 >> 23;\n
                        v37 = (&gf_exp)[v153 + v154 + -0x100 * v154];\n
                        *(&v37) = v37 ^ *(&v7 + v151);\n
                        tmp_35 = v151;\n
                        v151 -= 1;\n
                        if ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, Conv(16->64, r9w<2>), 0x2<64>, cc_ndep<8>))\n
                            break;\n
                    }\n
                }\n
            }\n
            if (!v37)\n
            {\n
                v155 = 0;\n
                if (!v31)\n
                    goto LABEL_40678e;\n
                goto LABEL_4065ea;\n
            }\n
            else\n
            {\n
                v156 = (&gf_log)[v37];\n
                v157 = v156 + *((v146 + &gf_log));\n
                v158 = v157 * 32897 >> 23;\n
                v155 = v158 - v158 * 0x100 + v157;\n
                *(&v155) = (&gf_exp)[v155];\n
                if (!v31)\n
                {\n
LABEL_40678e:\n
                    v163 = 0;\n
                }\n
                else\n
                {\n
LABEL_4065ea:\n
                    v159 = (&gf_log)[v31];\n
                    v160 = (&gf_log)[v155];\n
                    v161 = v141 - v160;\n
                    v162 = (v161 + 255) * 32897 >> 23;\n
                    v163 = (v162 - v162 * 0x100) + v161 + 255;\n
                    *(&v163) = *((v163 + &gf_exp));\n
                    continue;\n
                }\n
            }\n
            *(254 + *(&v5) - &v140->padding_0[0]) = *(254 + *(&v5) - &v140->padding_0[0]) ^ v163;\n
            v139 += 1;\n
        } while (v139 != v138);\n
    }\n
    cgc_memcpy(&v17, *(&v5), 0xff);\n
    v16 = 255;\n
    v165 = v4;\n
    v165 = v165;\n
    if (v165 > 0)\n
    {\n
        *(&a4) = v20;\n
        v166 = 0;\n
        do\n
        {\n
            v167 = (&gf_exp)[v166];\n
            v168 = 255;\n
            a4 = a4;\n
            while (true)\n
            {\n
                if (!a4)\n
                {\n
                    a4 = 0;\n
                    *(&a4) = 0 ^ *(&v16 + v168);\n
                    v168 -= 1;\n
                    if (v168 == 1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v170 = *((v167 + &gf_log)) + (&gf_log)[a4];\n
                    v171 = v170 * 32897 >> 23;\n
                    a4 = *(&(&gf_exp)[v170 + v171 + -0x100 * v171]);\n
                    *(&a4) = a4 ^ *(&v16 + v168);\n
                    v168 -= 1;\n
                    if (v168 == 1)\n
                        break;\n
                }\n
            }\n
            (&v24)[v165 + ~(v166)] = a4;\n
            v166 = &v166->padding_0[1];\n
        } while (v166 != v6);\n
        v165 = s_440;\n
    }\n
    if (v165)\n
    {\n
        v172 = v165;\n
        if ((&v23)[v172])\n
            return 0;\n
        while (v172 != 1)\n
        {\n
            v172 -= 1;\n
            if ((&v24)[-1 + v172])\n
                return !v172;\n
        }\n
    }\n
    return 1;\n
}\n
", "4218153:sub_405d29": null, "4218201:sub_405d59": null, "4218515:sub_405e93": null, "4218604:sub_405eec": null, "4218710:sub_405f56": null, "4218751:sub_405f7f": null, "4218819:sub_405fc3": null, "4219577:sub_4062b9": null, "4219685:sub_406325": null, "4219723:sub_40634b": null, "4219809:sub_4063a1": null, "4220380:sub_4065dc": null, "4220589:sub_4066ad": null, "4220682:sub_40670a": null, "4220915:sub_4067f3": null, "4220969:sub_406829": null, "4221093:sub_4068a5": null, "4221636:sub_406ac4": null, "4221693:sub_406afd": null, "4221788:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:memset": null, "5242904:cgc_receive": null, "5242912:cgc_allocate": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:cgc_deallocate": null, "5242952:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}