{"4210688:_init": "extern struct_0 *g_414a78;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_414a78;\n
    if (g_414a78)\n
        v1 = g_414a78();\n
    return v1;\n
}\n
", "4210720:sub_404020": "extern unsigned long long g_414a90;\n
\n
long long sub_404020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_414a90;\n
    goto *(4278936);\n
}\n
", "4210732:sub_40402c": null, "4210736:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210752:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4210768:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4210784:__cxa_atexit": "// attributes: PLT stub\n
int __cxa_atexit()\n
{\n
    ::libc.so.0::__cxa_atexit();\n
    return;\n
}\n
", "4210800:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4210816:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210832:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210848:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4210864:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4210880:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4210896:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4278880);\n
}\n
", "4210912:_GLOBAL__sub_I_parser.cc": "extern void* _ZL9emptyNode;\n
extern unsigned int g_415784;\n
extern uint128_t g_415788;\n
\n
long long _GLOBAL__sub_I_parser.cc()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
\n
    _ZL9emptyNode = 0;\n
    g_415784 = 0;\n
    g_415788 = 0;\n
    return __cxa_atexit(v1, v2, v3);\n
}\n
", "4210969:sub_404119": null, "4210976:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4211013:sub_404145": null, "4211014:sub_404146": null, "4211024:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_414a70;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4211065:sub_404179": null, "4211072:register_tm_clones": "extern unsigned long long g_414a80;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4211129:sub_4041b9": null, "4211136:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned long long g_414a60;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__TMC_END__)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_414a60)\n
    {\n
        __TMC_END__ = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4211189:sub_4041f5": null, "4211193:sub_4041f9": null, "4211200:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211209:sub_404209": null, "4211212:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4211270:sub_404246": null, "4211272:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4211291:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4211310:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4211329:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4211348:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4211367:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4211386:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4211405:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4211424:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4211443:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4211462:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4259856];\n
    char field_410010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4211507:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4259856];\n
    char field_410010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4211531:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4259856];\n
    char field_410010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4211581:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4259856];\n
    char field_410010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4211605:sub_404395": null, "4211608:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate(v3);\n
    return cgc_exit(v3, v4, v5, v6, v7, v8);\n
}\n
", "4211620:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4211628:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v4;  // rbx\n
    char *v5;  // rdi\n
    unsigned long long v6;  // rdx\n
    unsigned long v7;  // r12, Other Possible Types: unsigned long long\n
    void* v8;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v9;  // rsi\n
    void* v10;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v0 = v2;\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    v4 = a0;\n
    if (a0->field_4 != 1)\n
    {\n
        v5 = a0->field_10;\n
        v6 = v4->padding_c;\n
        v7 = v6 - v3;\n
        if (v5 && v7)\n
        {\n
            do\n
            {\n
                *(&v4->padding_0[v3 + 32]) = v5[*(&v4->padding_0[v3 + 32])];\n
                v3 += 1;\n
            } while (v6 != v3);\n
            v7 = (v4->padding_c - v4->field_8);\n
        }\n
        v8 = 0;\n
        while (v7 > v8)\n
        {\n
            v8 += v0;\n
            if (cgc_transmit(v5, v9))\n
            {\n
                v10 = 4294967295;\n
                goto LABEL_40443e;\n
            }\n
        }\n
    }\n
    v10 = 0;\n
LABEL_40443e:\n
    *(&v4->field_8) = 0;\n
    return v10;\n
}\n
", "4211797:cgc_fbuffered": "long long cgc_fbuffered(unsigned int a0[4], unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0[2] != -1)\n
        cgc_fflush(a0);\n
    a0[2] = -(a1 < 1);\n
    a0[3] = 0;\n
    return -(a1 < 1);\n
}\n
", "4211841:sub_404481": null, "4211844:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(1056);\n
    if (v3)\n
    {\n
        v3->field_0 = a0;\n
        v3->field_4 = 2 - (a1 < 1);\n
        v3->field_8 = 0;\n
        v3->field_10 = 0;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4211908:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, struct_0 *a1, struct_0 *a2)\n
{\n
    struct_0 *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // r12\n
    struct_0 *v4;  // r14\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v7;  // r13, Other Possible Types: unsigned long\n
    unsigned int v8;  // eax\n
    char *v9;  // rbp\n
    struct_0 *v13;  // rcx\n
    char *v14;  // rax\n
\n
    v0 = v2;\n
    v3 = a2;\n
    v4 = a1;\n
    v6 = a2->field_8;\n
    if (v6 == *(&a2->padding_c[0]))\n
    {\n
        cgc__refill(a2);\n
        v6 = a2->field_8;\n
    }\n
    if (v6 == -1)\n
    {\n
        v7 = 0;\n
    }\n
    else\n
    {\n
        v7 = *(&a2->padding_c[0]) - v6;\n
        if (v7 > a1)\n
            v7 = a1;\n
        v0 = v7;\n
        a1 = &a2->padding_0[v6 + 32];\n
        a2 = v7;\n
        cgc_memcpy();\n
        v8 = v3->field_8 + v7;\n
        v3->field_8 = v8;\n
        if (v8 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
    }\n
    if (v7 >= v4)\n
        return v7;\n
    while (true)\n
    {\n
        v9 = a0 + v7;\n
        if (cgc_receive(a0, a1, a2, rcx<8>))\n
            return -1;\n
        v13 = v0;\n
        if (!v13)\n
            return -1;\n
        v14 = v3->field_18;\n
        if (v14)\n
        {\n
            a2 = 0;\n
            do\n
            {\n
                v9[a2] = v14[v9[a2]];\n
                a2 += 1;\n
            } while (v13 != a2);\n
        }\n
        v7 = &v13->padding_0[v7];\n
        if (v7 >= v4)\n
            return v7;\n
    }\n
}\n
", "4212143:cgc__refill": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc__refill(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned int v6;  // ecx\n
    unsigned long long v7;  // r8\n
    char *v8;  // rax\n
    void* v9;  // rsi, Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == *(&a0->padding_c[0]))\n
        *(&a0->field_8) = 0;\n
    v6 = cgc_receive(a0, v2, v3, v4);\n
    if (v6)\n
        return 4294967295;\n
    v7 = *(&v0);\n
    if (!v7)\n
        return 4294967295;\n
    *(&a0->padding_c[0]) = v7;\n
    if ([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>))\n
        return v7;\n
    v8 = a0->field_18;\n
    if (v8)\n
    {\n
        v9 = 0;\n
        do\n
        {\n
            a0[1].padding_0[v9] = v8[a0[1].padding_0[v9]];\n
            v9 += 1;\n
        } while (v7 != v9);\n
    }\n
}\n
", "4212276:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (!([D] amd64g_calculate_condition(0x4<64>, 0x1c<64>, Sub(rsi<8>, 0x1<64>), 0x0<64>, 0x0<64>)))\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_404676;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_404687;\n
    while (true)\n
    {\n
LABEL_404676:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_404687;\n
    }\n
LABEL_404687:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4212385:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x11]\n
    char v1;  // [bp-0x10]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned int v8;  // ecx\n
    unsigned long v9;  // rcx\n
    struct struct_0 **v10;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
    {\n
        v8 = cgc_receive(a0, v4, v5, v6);\n
        v10 = 4294967295;\n
        if (v8)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!*(&v1))\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            v9 = a0->field_18;\n
            *(&v10) = v0;\n
            if (!v9)\n
                return v10;\n
            *(&v10) = *(v9 + v10);\n
        }\n
    }\n
    else\n
    {\n
        if (v3 == a0->field_c)\n
        {\n
            if (cgc__refill(a0) >= 0)\n
                v3 = a0->field_8;\n
            else\n
                return 4294967295;\n
        }\n
        a0->field_8 = v3 + 1;\n
        v10 = a0[1].padding_0[v3];\n
        return v10;\n
    }\n
}\n
", "4212512:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4212527:sub_40472f": null, "4212528:cgc_fwrite": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x450]\n
    unsigned long v1;  // [bp-0x448]\n
    char v2;  // [bp-0x440]\n
    char v3;  // [bp-0x438], Other Possible Types: unsigned long long\n
    struct_0 *v5;  // rbp\n
    unsigned long long v6;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v7;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rax\n
    char *v9;  // r15\n
    unsigned long long v10;  // rcx\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v13;  // rcx\n
    unsigned long v14;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v15;  // rsi\n
    unsigned long long v16;  // rdx\n
    unsigned long v17;  // rax\n
    void* v18;  // r14, Other Possible Types: unsigned long\n
    void* v19;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rcx\n
    struct_2 *v21;  // rdi\n
    void* v22;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v23;  // r15\n
\n
    v5 = a2;\n
    v6 = a1;\n
    v7 = a0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v8 = a2->field_c;\n
            if (v8 + a1 < 0x400)\n
            {\n
                v22 = 0;\n
            }\n
            else\n
            {\n
                v22 = 0x400 - v8;\n
                cgc_memcpy(&a2->padding_0[v8 + 32], a0, v22);\n
                v5->field_c = v5->field_c + v22;\n
                cgc_fflush(a2);\n
            }\n
            if (v22 >= a1)\n
                return v22;\n
            v23 = a1 - v22;\n
            cgc_memcpy(&v5->padding_0[v5->field_c + 32], a0 + v22, v23);\n
            v5->field_c = v5->field_c + v23;\n
            return a1;\n
        }\n
    }\n
    v9 = a2->field_10;\n
    if (!v9)\n
    {\n
        v12 = 0;\n
        do\n
        {\n
            if (v12 >= a1)\n
                return a1;\n
            v12 += *(&v3);\n
        } while (!cgc_transmit(a2, a1, a2, v13));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v19 = 0;\n
        v10 = 0x400;\n
        v0 = v7;\n
LABEL_404794:\n
        v14 = v6 - v19;\n
        if (0x400 <= v14)\n
            v14 = 0x400;\n
        v1 = v19;\n
        v15 = v7 + v19;\n
        v16 = v14;\n
        cgc_memcpy();\n
        if (v14)\n
        {\n
            v17 = 0;\n
            do\n
            {\n
                *(&v3 + v17) = v9[*(&v3 + v17)];\n
                v17 += 1;\n
            } while (v14 != v17);\n
        }\n
        v18 = 0;\n
        do\n
        {\n
            if (v14 <= v18)\n
            {\n
                v19 = v1 + v14;\n
                v7 = v0;\n
                v20 = 0x400;\n
                v21 = &v3;\n
                if (v19 >= v6)\n
                    return v6;\n
                goto LABEL_404794;\n
            }\n
            v18 += *(&v2);\n
        } while (!cgc_transmit(&v3, v15));\n
    }\n
    return -1;\n
}\n
", "4212942:sub_4048ce": null, "4212944:cgc_fxlat": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_fxlat(struct_0 *a0, char a1[2])\n
{\n
    int tmp_104;  // tmp #104\n
    struct_0 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    char v4[256];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // rbx\n
    char *v6;  // r8\n
    unsigned long v8;  // rsi, Other Possible Types: unsigned long long\n
    unsigned int v9;  // edx, Other Possible Types: char\n
    unsigned long v10;  // rax\n
    int v11;  // xmm0\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // rdi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // esi\n
    unsigned long v16;  // rax\n
    unsigned long v17;  // rdx\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        v4 = cgc_free(v2);\n
        *(&v1->field_10) = 0;\n
        return v4;\n
    }\n
    v3 = a1;\n
    v5 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v5;\n
    v6 = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    *(&v1[1].padding_0[0]) = v6;\n
    v9 = a1[0];\n
    v8 = 826981510;\n
    if (v3[0])\n
    {\n
        v10 = 1;\n
        do\n
        {\n
            v8 = __ROL__((v8 + v8 * 36) ^ v9, 13);\n
            v9 = v10;\n
            *(&v9) = v3[v10];\n
            v10 = v10 + 1;\n
        } while (v3[1]);\n
    }\n
    v11 = 0xf0e0d0c0b0a09080706050403020100;\n
    v12 = 0;\n
    do\n
    {\n
        *((v5 + v12)) = v11;\n
        v12 += 16;\n
        v11 += 21351050473470648687898014583954083856;\n
    } while (v12 != 0x100);\n
    v13 = 255;\n
    do\n
    {\n
        v14 = v8;\n
        v15 = v8 * 3;\n
        v16 = (0 CONCAT v14) /m v13;\n
        v17 = v16 / 0x100000000;\n
        v8 = v15 / 0x200000 ^ __ROL__(v15, 13);\n
        tmp_104 = *((v5 + v13));\n
        *((v5 + v13)) = *((v5 + v17));\n
        *((v5 + v17)) = tmp_104;\n
        v13 -= 1;\n
    } while (!([D] amd64g_calculate_condition(0x4<64>, 0x1c<64>, 0xfe<64>, 0x0<64>, 0x0<64>)));\n
    v4 = 0;\n
    do\n
    {\n
        v6[*((v5 + v4))] = v4;\n
        v4 += 1;\n
    } while (v4 != 0x100);\n
    return v4;\n
}\n
", "4213173:sub_4049b5": null, "4213176:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4213191:sub_4049c7": null, "4213192:cgc_malloc_alloc": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char padding_8[1032];\n
    struct struct_0 *field_410;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
long long cgc_malloc_alloc(struct_2 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    struct_2 *v2;  // r14\n
    unsigned long long v3;  // r12\n
    struct_0 *v5;  // r12\n
    struct_0 *v6;  // r13\n
    unsigned long long v8;  // rdx\n
    unsigned long v10;  // r15\n
    unsigned long v11;  // r12\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v14;  // rbx\n
\n
    if (a1 > 2147483647)\n
        return 0;\n
    v2 = a0;\n
    v3 = a1 + 3 & -4;\n
    if (!v3)\n
        return cgc_tiny_alloc(a0, 4);\n
    if (v3 <= 15)\n
        return cgc_tiny_alloc(a0, v3);\n
    if (v3 <= 131071)\n
    {\n
        v5 = v3 + 31;\n
        v6 = v5 & -0x10;\n
        if (!(v5 & -0x10))\n
        {\n
            v10 = 4294967295;\n
        }\n
        else if (v6 < 513)\n
        {\n
            v11 = v5 / 16;\n
            v10 = v11 + 2;\n
            if (v11 > 128)\n
                v12 = 0;\n
        }\n
        else if (v6 <= 0x1200)\n
        {\n
            v10 = (v6 + 34359738336 >> 7) + 34;\n
        }\n
        else\n
        {\n
            v10 = 130;\n
            if (v6 <= 0x20000)\n
                v10 = (v6 + 549755813600 >> 11) + 66;\n
        }\n
    }\n
    else\n
    {\n
        if (cgc_allocate(a0, a1, v8))\n
            return 0;\n
        v12 = *(&v0);\n
        *(v12) = a0;\n
        *((v12 + 8)) = v3 + 4111 & -0x1000;\n
        v14 = v12 + 16;\n
        return v14;\n
    }\n
}\n
", "4213795:cgc_tiny_alloc": "long long cgc_tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long long v1;  // rbx\n
    struct struct_0 *v2[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v3;  // r15\n
    unsigned int v4;  // edx\n
    unsigned short *v5;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v6;  // rax, Other Possible Types: unsigned long\n
    unsigned long v7;  // rdx\n
    unsigned short v8[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v9;  // rax\n
    unsigned long long v10;  // rbx\n
\n
    v1 = a1;\n
    if (a1 <= 15)\n
    {\n
        v2 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v2 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v2 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v2 = 130;\n
        if (a1 <= 0x20000)\n
            v2 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v3 = v2;\n
    v6 = *((a0 + v2 * 8));\n
    if (v6)\n
    {\n
        *((a0 + v3 * 8)) = *(&v6);\n
        return v6;\n
    }\n
    v8 = *((a0 + v3 * 8 + 5144));\n
    if (v8)\n
    {\n
        v4 = v8[0];\n
        a1 = v8[1];\n
    }\n
    else\n
    {\n
        v5 = *((a0 + 5168));\n
        if (v5)\n
        {\n
            v6 = *((a0 + 5176));\n
        }\n
        else\n
        {\n
            v5 = cgc_run_alloc(a0, 1);\n
            *((a0 + 5168)) = v5;\n
            v6 = 0;\n
            if (!v5)\n
                return 0;\n
        }\n
        v7 = v5;\n
        v8 = v5 + v6;\n
        *((a0 + v3 * 8 + 5144)) = v8;\n
        *((v7 + v6)) = v1;\n
        *((v7 + v6 + 2)) = v1;\n
        v9 = v6 + 0x1000;\n
        *((a0 + 5176)) = v9;\n
        if (v9 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v4 = a1;\n
    }\n
    v10 = v1 + a1;\n
    *((v8 + 2)) = v10;\n
    if (v4 + v10 < 4097)\n
        return a1 + v8;\n
    *((a0 + v3 * 8 + 5144)) = 0;\n
}\n
", "4214114:malloc_free": "long long malloc_free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // r14\n
    unsigned long v5;  // rdx\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // r15\n
    unsigned long v8;  // rbx\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rsi\n
    unsigned long v12;  // rdi\n
    unsigned long v13;  // rsi\n
    unsigned long v14;  // rax\n
    unsigned long v15;  // rsi\n
    unsigned long v16;  // rax\n
    unsigned long v17;  // rax\n
    unsigned long v18;  // rax\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v2;\n
    v3 = a1;\n
    v2 = a1 / 0x100000;\n
    *(&v2) = *((a0 + v2 + 1048));\n
    if (*(&v2) != 2)\n
    {\n
        if (*(&v2) == 1)\n
        {\n
            v2 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            *(a1) = *((a0 + v2 * 8));\n
            *((a0 + v2 * 8)) = a1;\n
            return v2;\n
        }\n
        if (*(&v2))\n
            return v2;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v9 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4050c8;\n
        }\n
        else\n
        {\n
            if (*((a1 - 16)) != a0)\n
            {\n
                v3 = a0;\n
                v10 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v10 = *((a1 - 8));\n
                if (v10 - 0x20000 <= 2147356671 && !(v10 & 4095))\n
                    return cgc_deallocate(a0, a1);\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v3, v10);\n
        }\n
    }\n
    else if (!(v3 & 7))\n
    {\n
        v4 = a1 - 16;\n
        v5 = *((v4 + 8));\n
        if ((v5 & 1))\n
        {\n
            v9 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_4050c8;\n
        }\n
        else if (v5 - 131073 <= -131058)\n
        {\n
            v9 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4050c8;\n
        }\n
        else\n
        {\n
            v6 = *(v4);\n
            v7 = v5 + v4;\n
            v8 = v4 - v6;\n
            if (!v6)\n
                v8 = v6;\n
            if (!v8)\n
            {\n
                if (*(v7) == v5)\n
                    goto LABEL_404f73;\n
LABEL_404ea9:\n
                v12 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
                v13 = v7;\n
                goto LABEL_4050da;\n
            }\n
            else\n
            {\n
                v11 = *((v8 + 8));\n
                if ((v11 & -2) == v6)\n
                {\n
                    if (*(v7) == v5)\n
                    {\n
                        if ((v11 & 1))\n
                        {\n
                            if (v6 > 15 && v6 > 0x200 && v6 > 0x1200 && !(v6 <= 0x20000))\n
                                goto LABEL_404f56;\n
LABEL_404f56:\n
                            cgc_small_unlink_free(a0);\n
                            v14 = *((v8 + 8)) + *((v4 + 8));\n
                            *((v8 + 8)) = v14;\n
                            *(v7) = v14;\n
                            v4 = v8;\n
                        }\n
LABEL_404f73:\n
                        v15 = *((v7 + 8));\n
                        if ((v15 & 1))\n
                        {\n
                            v16 = v15 & -2;\n
                            if (v16 > 15 && v16 > 0x200 && v16 > 0x1200 && !(v16 <= 0x20000))\n
                                goto LABEL_404fe8;\n
LABEL_404fe8:\n
                            cgc_small_unlink_free(a0);\n
                            v17 = *((v4 + 8)) + *((v7 + 8));\n
                            *((v4 + 8)) = v17;\n
                            *((v4 + v17)) = v17;\n
                        }\n
                        v18 = *((v4 + 8));\n
                        if (!(v18 > 15 && v18 > 0x200 && v18 > 0x1200 && v18 > 0x20000))\n
                            return cgc_small_insert_free(a0);\n
                        return cgc_small_insert_free(a0);\n
                    }\n
                    goto LABEL_404ea9;\n
                }\n
            }\n
        }\n
    }\n
    v9 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4050c8:\n
    cgc_heap_error(v9, v3);\n
    v12 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    v13 = v8;\n
LABEL_4050da:\n
    cgc_heap_error(v12, v13, v3);\n
}\n
", "4215011:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4215055:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 <= 2147483647)\n
    {\n
        if (!a2)\n
        {\n
            malloc_free(a0, a1);\n
        }\n
        else if (!a1)\n
        {\n
            return cgc_malloc_alloc(a0, a2);\n
        }\n
        else\n
        {\n
            v4 = (!(*((a0 + a1 / 0x100000 + 1048)) & 253) ? (*((a0 + a1 / 0x100000 + 1048)) == 1 ? 0 : *((a1 & -0x1000))) : a1[1].field_-8 - 16);\n
            if (v4 >= a2)\n
                return a1;\n
            v5 = cgc_malloc_alloc(a0, a2);\n
            if (v5)\n
            {\n
                cgc_memcpy(v5, a1);\n
                malloc_free(a0, a1);\n
                return v5;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4215289:cgc_run_alloc": "long long cgc_run_alloc(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long v2;  // rbp\n
    unsigned long long v3;  // rdx\n
    unsigned long long v5;  // rbx\n
    unsigned long long v6;  // r12\n
\n
    if (cgc_allocate(a0, a1, v3))\n
        return 0;\n
    v5 = *(&v0);\n
    v6 = v5 + 1048575;\n
    v2 = v6 & -0x100000;\n
    if (v2 > v5)\n
        cgc_deallocate(a0);\n
    if ((v5 + 0x200000) > (v2 + 0x100000))\n
        cgc_deallocate(a0);\n
    *((a0 + (v6 >> 20) + 1048)) = a1;\n
    return v6 & -0x100000;\n
}\n
", "4215420:cgc_small_unlink_free": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_3 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_3;\n
\n
long long cgc_small_unlink_free(unsigned long long *a0, unsigned long a1, struct_2 *a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
    struct_0 *v4;  // rax\n
    struct_1 *v5;  // rcx\n
\n
    v0 = v2;\n
    v3 = a2->field_8;\n
    if (!(v3 & 1))\n
        cgc_heap_error(\"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\", a2);\n
    a2->field_8 = v3 & -2;\n
    v4 = a2->field_10;\n
    if (v4)\n
        *(&v4->field_18) = a2[1].padding_0;\n
    v5 = a2[1].padding_0;\n
    if (v5)\n
        v5->field_10 = v4;\n
    if (a0[a1] != a2)\n
    {\n
        *(&a2->field_10) = 0;\n
        return v0;\n
    }\n
    a0[a1] = v5;\n
}\n
", "4215505:cgc_small_insert_free": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_small_insert_free(unsigned long long *a0, unsigned long a1, struct_1 *a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
    struct_0 *v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a2->field_8;\n
    if ((v3 & 1))\n
        cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\", a2);\n
    a2->field_8 = v3 | 1;\n
    a2->field_10 = 0;\n
    a2->field_18 = a0[a1];\n
    a0[a1] = a2;\n
    v4 = a2->field_18;\n
    if (!v4)\n
        return v0;\n
    v4->field_10 = a2;\n
}\n
", "4215576:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4215732:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // ecx\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            v2 = *(v1);\n
            if (v2 == a1)\n
                return v1;\n
            v1 += 1;\n
            a2 -= 1;\n
        } while (!([D] amd64g_calculate_condition(0x4<64>, 0x1c<64>, rdx<8>, 0x0<64>, Conv(1->64, (ecx<4> < esi<4>)))));\n
    }\n
    return 0;\n
}\n
", "4215758:sub_4053ce": null, "4215760:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4215796:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rax\n
    unsigned long v2;  // rdi\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    v2 = 0;\n
    do\n
    {\n
        v1[v2] = *((a1 + v2));\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4215821:sub_40540d": null, "4215824:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_3;  // tmp #3\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long long v2;  // cc_op\n
    unsigned long long v3;  // cc_dep1\n
    unsigned long v4;  // cc_ndep\n
    unsigned long long v5;  // cc_op\n
    unsigned long long v6;  // cc_dep1\n
    unsigned long v7;  // rdi\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        v2 = 20;\n
        v3 = a2;\n
        if (!a2)\n
            return a0;\n
        do\n
        {\n
            a0[1 + a2] = *((a1 + a2 - 1));\n
            tmp_3 = a2 - 1;\n
            tmp_20 = [D] amd64g_calculate_rflags_c(cc_op<8>, cc_dep1<8>, 0x0<64>, cc_ndep<8>);\n
            v4 = [D] amd64g_calculate_rflags_c(cc_op<8>, cc_dep1<8>, 0x0<64>, cc_ndep<8>);\n
            v5 = 28;\n
            v6 = a2 - 1;\n
            a2 -= 1;\n
        } while (!([D] amd64g_calculate_condition(0x4<64>, 0x1c<64>, t3, 0x0<64>, t20)));\n
    }\n
    else if (!a2)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            v1[v7] = *((a1 + v7));\n
            v7 += 1;\n
        } while (a2 != v7);\n
        return v1;\n
    }\n
}\n
", "4215874:sub_405442": null, "4215876:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_24;  // tmp #24\n
    int tmp_26;  // tmp #26\n
    int tmp_25;  // tmp #25\n
    int tmp_27;  // tmp #27\n
    int tmp_29;  // tmp #29\n
    int tmp_28;  // tmp #28\n
    int tmp_31;  // tmp #31\n
    int tmp_33;  // tmp #33\n
    int tmp_32;  // tmp #32\n
    int tmp_34;  // tmp #34\n
    int tmp_36;  // tmp #36\n
    int tmp_35;  // tmp #35\n
    int tmp_39;  // tmp #39\n
    int tmp_41;  // tmp #41\n
    int tmp_40;  // tmp #40\n
    int tmp_51;  // tmp #51\n
    int tmp_53;  // tmp #53\n
    int tmp_52;  // tmp #52\n
    int v2;  // xmm11\n
    int v3;  // xmm2\n
    int v4;  // xmm7\n
    int v6;  // xmm5\n
    int v8;  // xmm6\n
    int v10;  // xmm7\n
    int v12;  // xmm7\n
    int v13;  // xmm5\n
    int v14;  // xmm5\n
    int v16;  // xmm5\n
    char *v17;  // rdx, Other Possible Types: unsigned long\n
    int v18;  // xmm4\n
    int v19;  // xmm3\n
\n
    if (!a2)\n
        return a0;\n
    v2 = 129127208515966861318;\n
    v3 = 92233720368547758084;\n
    v19 = 55340232221128654850;\n
    v18 = 0x10000000000000000;\n
    v17 = 0;\n
    do\n
    {\n
        tmp_24 = CmpGTV(tmp_26, tmp_25);\n
        v4 = tmp_24;\n
        tmp_27 = CmpEQV(tmp_29, tmp_28);\n
        v6 = ((v4 / 0x1000000000000000000000000) CONCAT (v4 / 0x1000000000000000000000000) CONCAT (v4 >> 32) CONCAT (v4 >> 32)) | ((tmp_27 / 0x1000000000000000000000000) CONCAT (tmp_27 / 0x1000000000000000000000000) CONCAT (tmp_27 >> 32) CONCAT (tmp_27 >> 32)) & v4;\n
        if ((~(v6) & 1))\n
            *((a0 + v17)) = a1;\n
        if ((((((v6 ^ 340282366920938463463374607431768211455) >> 64) >> 48 CONCAT (v6 ^ 340282366920938463463374607431768211455) >> 48 | ((v6 ^ 340282366920938463463374607431768211455) >> 64) * 0x10000) >> 16) & 1))\n
            *((a0 + v17 + 1)) = a1;\n
        tmp_31 = CmpGTV(tmp_33, tmp_32);\n
        v8 = tmp_31;\n
        tmp_34 = CmpEQV(tmp_36, tmp_35);\n
        v10 = ((tmp_34 / 0x1000000000000000000000000) CONCAT (tmp_34 / 0x1000000000000000000000000) CONCAT (tmp_34 >> 32) CONCAT (tmp_34 >> 32)) & v8;\n
        if ((((((v8 / 0x1000000000000000000000000) CONCAT (v8 / 0x1000000000000000000000000) CONCAT (v8 >> 32) CONCAT (v8 >> 32)) | v10) ^ 340282366920938463463374607431768211455) & 1))\n
            *((a0 + v17 + 2)) = a1;\n
        if ((((((((v8 >> 64) >> 32) CONCAT ((v8 >> 64) >> 32) CONCAT (v8 >> 32) CONCAT (v8 >> 32)) | v10) ^ 340282366920938463463374607431768211455) >> 64) & 1))\n
            *((a0 + v17 + 3)) = a1;\n
        tmp_39 = CmpGTV(tmp_41, tmp_40);\n
        v12 = tmp_39;\n
        tmp_51 = CmpEQV(tmp_53, tmp_52);\n
        v13 = tmp_51;\n
        if (((((((v12 >> 32) CONCAT (v12 >> 32) CONCAT (v12 >> 32) CONCAT (v12 >> 32)) | ((v13 >> 32) CONCAT (v13 >> 32) CONCAT (v13 >> 32) CONCAT (v13 >> 32)) & ((v12 >> 32) CONCAT v12 CONCAT (v12 >> 32) CONCAT v12)) ^ 340282366920938463463374607431768211455) >> 64) & 1))\n
            *((a0 + v17 + 4)) = a1;\n
        if ((((((((v12 >> 64) >> 32) CONCAT ((v12 >> 64) >> 32) CONCAT (v12 >> 32) CONCAT (v12 >> 32)) | (((v13 >> 64) >> 32) CONCAT ((v13 >> 64) >> 32) CONCAT (v13 >> 32) CONCAT (v13 >> 32)) & v12) ^ 340282366920938463463374607431768211455) >> 64) & 1))\n
            *((a0 + v17 + 5)) = a1;\n
        tmp_31 = CmpGTV(tmp_33, tmp_32);\n
        v14 = tmp_31;\n
        tmp_34 = CmpEQV(tmp_36, tmp_35);\n
        v16 = (((v14 / 0x1000000000000000000000000) CONCAT (v14 / 0x1000000000000000000000000) CONCAT (v14 >> 32) CONCAT (v14 >> 32)) | ((tmp_34 / 0x1000000000000000000000000) CONCAT (tmp_34 / 0x1000000000000000000000000) CONCAT (tmp_34 >> 32) CONCAT (tmp_34 >> 32)) & v14) ^ 340282366920938463463374607431768211455;\n
        if ((v16 & 1))\n
            *((a0 + v17 + 6)) = a1;\n
        if (((v16 >> 64) & 1))\n
            *((a0 + v17 + 7)) = a1;\n
        v17 += 8;\n
        v18 += 147573952589676412936;\n
        v19 += 147573952589676412936;\n
        v3 += 147573952589676412936;\n
        v2 += 147573952589676412936;\n
    } while ((a2 + 7 & -8) != v17);\n
    return a0;\n
}\n
", "4216346:sub_40561a": null, "4216348:cgc_printf": "extern unsigned long long cgc_stdout;\n
\n
long long cgc_printf(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    return cgc_vfprintf(cgc_stdout, a0, &v0);\n
}\n
", "4216500:cgc_vprintf": "extern unsigned long long cgc_stdout;\n
\n
long long cgc_vprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    return cgc_vfprintf(cgc_stdout, a0, a1);\n
}\n
", "4216521:cgc_fprintf": "long long cgc_fprintf(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc_vfprintf();\n
}\n
", "4216653:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4216736:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4216882:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4216895:cgc__vsfprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char field_1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
long long cgc__vsfprintf(struct_0 *a0, struct_2 *a1, unsigned long a2, char *a3)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned long long v0;  // [bp-0x1b8]\n
    int tmp_16;  // tmp #16\n
    struct_0 *v1;  // [bp-0x91]\n
    struct_0 *v2;  // [bp-0x90], Other Possible Types: unsigned long\n
    struct_2 *v3;  // [bp-0x88]\n
    unsigned long v4;  // [bp-0x80]\n
    char v5;  // [bp-0x78]\n
    char v6;  // [bp-0x77]\n
    char *v8;  // r14\n
    struct_0 *v9;  // rbp, Other Possible Types: unsigned long\n
    void* v10;  // r15\n
    unsigned int v11;  // eax\n
    struct_0 *v12;  // r13b, Other Possible Types: char\n
    void* v13;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v14;  // rsi, Other Possible Types: unsigned long\n
    unsigned int v15;  // edx\n
    char v16;  // cl\n
    struct_0 *v17;  // rdx, Other Possible Types: unsigned long\n
    char v18;  // cc_dep1\n
    char v19;  // cc_dep2\n
    struct_0 *v20;  // r8b\n
    unsigned long long v21;  // rdx\n
    unsigned long long v22;  // rsi\n
    struct_2 *v23;  // rdx\n
    struct_0 *v24;  // rbp, Other Possible Types: unsigned long\n
    struct_2 *v25;  // rsi\n
    struct_2 *v26;  // rdx\n
    unsigned long long v27;  // rcx\n
    unsigned long long v28;  // rcx\n
    unsigned long long v29;  // rdx\n
    struct_2 *v30;  // rdx\n
    unsigned long long v31;  // rcx\n
    struct struct_0 **v32;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v33;  // rsi, Other Possible Types: unsigned long\n
    unsigned int *v34;  // rcx, Other Possible Types: unsigned long\n
    struct struct_0 **v35;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v36;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v37;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v38;  // r13\n
    unsigned long long v39;  // rax\n
    unsigned long v40;  // r13, Other Possible Types: unsigned long long\n
    void* v41;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v42;  // rax\n
    unsigned long long v43;  // rcx\n
    struct_0 *v44;  // rsi, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v45;  // rdx\n
    unsigned int v46;  // ebp\n
    unsigned long long v47;  // cc_op\n
    char *v48;  // cc_dep1\n
    unsigned long long v49;  // cc_dep2\n
    unsigned long long v50;  // cc_op\n
    char *v51;  // cc_dep1\n
    void* v52;  // cc_dep2\n
    char *v53;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v55;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long v56;  // r12, Other Possible Types: unsigned long long\n
    struct_0 *v57;  // rax, Other Possible Types: unsigned long, char\n
    unsigned long v58;  // r13\n
\n
    v8 = a3;\n
    v3 = a1;\n
    v9 = &a0->field_0 + 1;\n
    v2 = v9;\n
    v57 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v53 = 0;\n
    }\n
    else\n
    {\n
        v10 = a2;\n
        v53 = 0;\n
        while (true)\n
        {\n
            if (v57 != 37)\n
            {\n
                if (v53 < 2147483647)\n
                {\n
                    *(&v1) = v57;\n
                    if (v10)\n
                        cgc_fwrite(&v1, 1, v10);\n
                    if (v8)\n
                        v8[v53] = v1;\n
                    v9 = v2;\n
                }\n
                else if (v53 == -1)\n
                {\n
                    goto LABEL_405cb4;\n
                }\n
                v53 += 1;\n
                v2 = v9 + 1;\n
                v57 = *(v9);\n
                v9 = v2;\n
                goto LABEL_405c00;\n
            }\n
            a0 = v9 + 1;\n
            v2 = a0;\n
            v11 = *(v9);\n
            v12 = 32;\n
            if (v11 != 32)\n
            {\n
                if (v11 == 48)\n
                {\n
                    v12 = 48;\n
                }\n
                else\n
                {\n
                    if (!v11)\n
                        goto LABEL_405ca5;\n
                    v2 = v9;\n
                    a0 = v9;\n
                }\n
            }\n
            if (*(a0) - 48 > 9)\n
            {\n
                v13 = 0;\n
            }\n
            else\n
            {\n
                v13 = cgc_strtoul();\n
                a0 = v2;\n
            }\n
            v14 = a0 + 1;\n
            v2 = v14;\n
            v15 = *(a0);\n
            v16 = 1;\n
            if (v15 == 104)\n
            {\n
                v17 = a0 + 2;\n
                v18 = *((a0 + 1));\n
                v19 = 104;\n
            }\n
            else if (v15 == 108)\n
            {\n
                v18 = *((a0 + 1));\n
                v19 = 108;\n
                v17 = a0 + 2;\n
                v16 = *((a0 + 1)) != 108;\n
            }\n
            else\n
            {\n
                if (!v15)\n
                    goto LABEL_405ca5;\n
                goto LABEL_405955;\n
            }\n
            if (v18 == v19)\n
                v14 = v17;\n
            a0 = v14;\n
LABEL_405955:\n
            v2 = a0 + 1;\n
            v20 = *(a0);\n
            v21 = *(a0);\n
            v22 = v21 - 88;\n
            if (v22 > 32)\n
            {\n
LABEL_405a1c:\n
                v56 = v2 - v9;\n
                if (!v21)\n
                {\n
                    if (v53 < 2147483647)\n
                    {\n
                        v58 = 2147483647 - v53;\n
                        if (v58 > v56)\n
                            v58 = v56;\n
                        if (v10)\n
                            cgc_fwrite(v9, v58, v10);\n
                        if (v8)\n
                            cgc_memcpy(&v8[v53], v9, v58);\n
                    }\n
                    tmp_2 = v53;\n
                    v53 += v56;\n
                    if (__CFADD__(tmp_2, v56))\n
                        goto LABEL_405cb4;\n
LABEL_405ca5:\n
                    if (v53 < 2147483647)\n
                        break;\n
                    if (v53 != -1)\n
                        return v53;\n
LABEL_405cb4:\n
                    cgc__terminate(a0);\n
                    break;\n
                }\n
                if (!(v53 < 2147483647))\n
                    goto LABEL_405be7;\n
                v40 = 2147483647 - v53;\n
                if (v40 > v56)\n
                    v40 = v56;\n
                if (v10)\n
                    cgc_fwrite(v9, v40, v10);\n
                if (!v8)\n
                    goto LABEL_405be7;\n
                a0 = &v8[v53];\n
                v44 = v9;\n
                v45 = v40;\n
                goto LABEL_405be2;\n
            }\n
            else\n
            {\n
                v0 = 4831842305;\n
                if (((*(&v0 + ((v22 & 63) >> 3)) >> (v22 & 63 & 7)) & 1))\n
                {\n
                    v4 = v13;\n
                    if (v20 == 100)\n
                    {\n
                        v23 = v3;\n
                        v24 = &v5;\n
                        if (!v16)\n
                            goto LABEL_405ca5;\n
                        v28 = v23->field_0;\n
                        if (v28 > 40)\n
                        {\n
                            v33 = v23->field_8;\n
                            v23->field_8 = v33 + 8;\n
                        }\n
                        else\n
                        {\n
                            v33 = v28 + v23->field_10;\n
                            v23->field_0 = v28 + 8;\n
                        }\n
                        v36 = *(v33);\n
                        if (v36 >= 0)\n
                        {\n
                            a0 = &v5;\n
                        }\n
                        else\n
                        {\n
                            v5 = 45;\n
                            v36 = -(v36);\n
                            a0 = &v6;\n
                        }\n
                        v37 = 10;\n
                        v41 = 0;\n
                    }\n
                    else\n
                    {\n
                        v25 = v3;\n
                        v24 = &v5;\n
                        if (!v16)\n
                            goto LABEL_405ca5;\n
                        v29 = v25->field_0;\n
                        if (v29 > 40)\n
                        {\n
                            v34 = v25->field_8;\n
                            v25->field_8 = v34 + 8;\n
                        }\n
                        else\n
                        {\n
                            v34 = v29 + v25->field_10;\n
                            v25->field_0 = v29 + 8;\n
                        }\n
                        v37 = (v20 == 117 ? 16 : 10);\n
                        v36 = *(v34);\n
                        v41 = 0;\n
                        *(&v41) = v20 == 88;\n
                        a0 = &v5;\n
                    }\n
                    cgc__convert_unsigned(a0, v36, v37, v41);\n
                    v42 = cgc_strlen(v24);\n
                    v56 = v42;\n
                    v43 = v4;\n
                    if (v43 > v42)\n
                    {\n
                        v46 = v42 - v43;\n
                        do\n
                        {\n
                            if (v53 < 2147483647)\n
                            {\n
                                *(&v1) = v12;\n
                                if (v10)\n
                                    cgc_fwrite(&v1, 1, v10);\n
                                v50 = 20;\n
                                v51 = v8;\n
                                v52 = 0;\n
                                if (v8)\n
                                    v8[v53] = v1;\n
                            }\n
                            else\n
                            {\n
                                v47 = 8;\n
                                v48 = v53;\n
                                v49 = -1;\n
                                if (!(v53 == -1))\n
                                    continue;\n
                            }\n
                            v53 += 1;\n
                            tmp_16 = v46 + 1;\n
                            v46 += 1;\n
                        } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t16, 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>))));\n
                    }\n
                    if (!(v53 < 2147483647))\n
                        goto LABEL_405be7;\n
                    v55 = 2147483647 - v53;\n
                    if (v55 > v42)\n
                        v55 = v42;\n
                    if (v10)\n
                        cgc_fwrite(&v5, v55, v10);\n
                    if (!v8)\n
                        goto LABEL_405be7;\n
                    a0 = &v8[v53];\n
                    v44 = &v5;\n
                    goto LABEL_405bdf;\n
                }\n
                if (v22 == 11)\n
                {\n
                    v26 = v3;\n
                    v27 = v26->field_0;\n
                    if (v27 > 40)\n
                    {\n
                        v32 = v26->field_8;\n
                        v26->field_8 = v32 + 8;\n
                    }\n
                    else\n
                    {\n
                        v32 = v27 + v26->field_10;\n
                        v26->field_0 = v27 + 8;\n
                    }\n
                    if (v53 < 2147483647)\n
                    {\n
                        *(&v1) = *(v32);\n
                        if (v10)\n
                            cgc_fwrite(&v1, 1, v10);\n
                        if (v8)\n
                            v8[v53] = v1;\n
                    }\n
                    else if (v53 == -1)\n
                    {\n
                        goto LABEL_405cb4;\n
                    }\n
                    v53 += 1;\n
                    goto LABEL_405bf0;\n
                }\n
                if (!(v22 == 27))\n
                    goto LABEL_405a1c;\n
                v30 = v3;\n
                v31 = v30->field_0;\n
                if (v31 <= 40)\n
                {\n
                    v35 = v31 + v30->field_10;\n
                    v30->field_0 = v31 + 8;\n
                }\n
                else\n
                {\n
                    v35 = v30->field_8;\n
                    v30->field_8 = v35 + 8;\n
                }\n
                v38 = *(v35);\n
                v39 = cgc_strlen(v38);\n
                v56 = v39;\n
                if (!(v53 < 2147483647))\n
                    goto LABEL_405be7;\n
                v55 = 2147483647 - v53;\n
                if (v55 > v39)\n
                    v55 = v39;\n
                if (v10)\n
                    cgc_fwrite(v38, v55, v10);\n
                if (!v8)\n
                    goto LABEL_405be7;\n
                a0 = &v8[v53];\n
                v44 = v38;\n
LABEL_405bdf:\n
                v45 = v55;\n
LABEL_405be2:\n
                cgc_memcpy(a0, v44, v45);\n
LABEL_405be7:\n
                tmp_2 = v53;\n
                v53 += v56;\n
                if (__CFADD__(tmp_2, v56))\n
                    goto LABEL_405cb4;\n
LABEL_405bf0:\n
                v57 = v2;\n
                v9 = v57 + 1;\n
                v2 = v9;\n
                *(&v57) = *(v57);\n
LABEL_405c00:\n
                if (!v57)\n
                    goto LABEL_405ca5;\n
            }\n
        }\n
    }\n
    if (v8)\n
        v8[v53] = 0;\n
    return v53;\n
}\n
", "4218073:cgc__convert_unsigned": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
long long cgc__convert_unsigned(char a0[20], unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_51;  // tmp #51\n
    char *v1;  // rcx\n
    unsigned long v2;  // r9, Other Possible Types: unsigned long long\n
    struct_0 *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = (!a3 ? \"0123456789ABCDEF\" : \"0123456789abcdef\");\n
    a0[19] = 0;\n
    if (!a1)\n
    {\n
        v3 = &a0[18];\n
        a0[18] = *(v1);\n
        return cgc_memmove(a0, v3, 20 + v3 - a0);\n
    }\n
    v2 = a1;\n
    v3 = &a0[19];\n
    do\n
    {\n
        *((v3 - 1)) = v1[(0 CONCAT v2) /m a2 >> 32];\n
        v3 -= 1;\n
        tmp_51 = v2;\n
        v2 = (0 CONCAT v2) /m a2;\n
    } while (tmp_51 >= a2);\n
    return cgc_memmove(a0, v3, 20 + v3 - a0);\n
}\n
", "4218162:sub_405d32": null, "4218164:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4218182:sub_405d46": null, "4218184:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (!*(a0))\n
        return 0 - *(v1);\n
    v3 = a0 + 1;\n
    do\n
    {\n
        if (!*(v1))\n
            return v2 - *(v1);\n
        v4 = cgc_tolower(v2);\n
        v2 = cgc_tolower(*(v1));\n
        if (v4 != v2)\n
        {\n
            *(&v2) = *((v3 - 1));\n
            return v2 - *(v1);\n
        }\n
        v1 += 1;\n
        tmp_13 = *(v3);\n
        *(&v2) = *(v3);\n
        v3 += 1;\n
    } while (tmp_13);\n
}\n
", "4218265:sub_405d99": null, "4218268:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4218355:sub_405df3": null, "4218356:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char v1;  // cl\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (*(&v1) == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (a0[v2]);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4218403:sub_405e23": null, "4218404:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    int tmp_13;  // tmp #13\n
    void* v1;  // al, Other Possible Types: char, unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            if (!*(a1))\n
                return v1 - *(a1);\n
            if (v1 != *(a1))\n
                return v1 - *(a1);\n
            a1 += 1;\n
            tmp_13 = *(v2);\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (tmp_13);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4218446:sub_405e4e": null, "4218448:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    int tmp_15;  // tmp #15\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            tmp_15 = *(v3);\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (tmp_15);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4218484:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4218545:sub_405eb1": null, "4218548:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4218573:sub_405ecd": null, "4218576:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v5 = a0;\n
    v4 = &a0[a2];\n
    for (v2 = a0[0]; v2; v5 += 1)\n
    {\n
        if (!*(v3))\n
            break;\n
        v2 = cgc_tolower(v2);\n
        if (v2 != cgc_tolower(*(v3)))\n
            break;\n
        if (v5 >= v4)\n
            break;\n
        v3 += 1;\n
        *(&v2) = *((v5 + 1));\n
    }\n
    v6 = (v5 == v4 ? *(v5) - *(v3) : 0);\n
    return v6;\n
}\n
", "4218675:sub_405f33": null, "4218676:cgc_strncpy": "long long cgc_strncpy(char *a0, char a1[2], unsigned long a2)\n
{\n
    char *v1;  // rax\n
    char v2;  // r8b\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = a1[0];\n
    v3 = 0;\n
    if (a1[0] && a2)\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            a0[v3] = v2;\n
            v2 = a1[1 + v3];\n
            v3 += 1;\n
            if (!a1[1])\n
                break;\n
            if (v3 >= a2)\n
                break;\n
        }\n
        a0 = &a0[v3];\n
    }\n
    if (v3 >= a2)\n
        return v1;\n
    v4 = a0 - v1;\n
    do\n
    {\n
        *(a0) = 0;\n
        a0 += 1;\n
        v4 += 1;\n
    } while (v4 < a2);\n
    return v1;\n
}\n
", "4218750:sub_405f7e": null, "4218752:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218823:sub_405fc7": null, "4218824:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r15\n
    unsigned long v4;  // rbx\n
    char *v5;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    char *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rbx\n
    void* v8;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v2 = cgc_strchr(a1, v2);\n
            if (v2)\n
            {\n
                v5 = &v3[v4];\n
                if (!v3[v4])\n
                    goto LABEL_40600a;\n
                v7 = v4 + 1;\n
                v8 = v7 + v3;\n
                goto LABEL_40600c;\n
            }\n
            v4 = v4 + 1;\n
            *(&v2) = v3[v4];\n
        } while (v3[v4]);\n
        v6 = v4;\n
    }\n
    v5 = &v3[v6];\n
LABEL_40600a:\n
    v8 = 0;\n
LABEL_40600c:\n
    *(a0) = v8;\n
    *(v5) = 0;\n
    return *(a0);\n
}\n
", "4218933:sub_406035": null, "4218936:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4219008:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_11;  // tmp #11\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long v20;  // rdi\n
    unsigned long v21;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v22;  // rdi\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // ebp\n
    void* v25;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v26;  // r14d\n
    unsigned long long *v27;  // r15, Other Possible Types: unsigned long\n
    char v28[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v27 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v24 = 0;\n
                v23 = 1;\n
                v26 = 1;\n
                v25 = 0;\n
                goto LABEL_40620d;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) == 45)\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
    }\n
    if (a2)\n
    {\n
        if (!(a2 == 16))\n
            goto LABEL_40617c;\n
        *(&v18) = *(v16);\n
        v19 = 16;\n
        if (!(*(v16) == 48))\n
            goto LABEL_40617e;\n
        v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
        goto LABEL_40615c;\n
    }\n
    else\n
    {\n
        *(&v18) = *(v16);\n
        if (*(v16) != 48)\n
        {\n
LABEL_406166:\n
            v18 = cgc_isdigit(v18);\n
            v19 = 10;\n
            if (!v18)\n
                goto LABEL_4061fe;\n
LABEL_40617c:\n
            *(&v18) = *(v16);\n
LABEL_40617e:\n
            if (v18)\n
            {\n
                v1 = a1;\n
LABEL_406187:\n
                v25 = 0;\n
                v24 = 0;\n
                v26 = 1;\n
                do\n
                {\n
                    v18 = cgc_isdigit(v18);\n
                    v20 = *(v16);\n
                    if (v18)\n
                    {\n
                        v21 = v20 - 48;\n
                    }\n
                    else\n
                    {\n
                        v18 = cgc_islower(v20);\n
                        v22 = *(v16);\n
                        if (v18)\n
                        {\n
                            v21 = v22 - 87;\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_isupper(v22))\n
                                break;\n
                            v21 = *(v16) - 55;\n
                        }\n
                    }\n
                    if (v21 >= v19)\n
                        break;\n
                    continue;\n
                    v25 = v21 + v19 * v25;\n
                    if (v25 > 2147483647)\n
                        v24 = 1;\n
                    tmp_11 = *((v16 + 1));\n
                    *(&v18) = *((v16 + 1));\n
                    v16 += 1;\n
                    v26 = 0;\n
                } while (tmp_11);\n
                v27 = v1;\n
                goto LABEL_406209;\n
            }\n
LABEL_4061fe:\n
            v24 = 0;\n
            v26 = 1;\n
            v25 = 0;\n
        }\n
        else\n
        {\n
            *(&v18) = *((v16 + 1));\n
            if ((v18 & 248) == 48)\n
            {\n
                v1 = a1;\n
                v16 += 1;\n
                v19 = 8;\n
                goto LABEL_406187;\n
            }\n
            v18 = cgc_tolower(v18);\n
            if (v18 != 120)\n
            {\n
                *(&v18) = *(v16);\n
                goto LABEL_406166;\n
            }\n
            else\n
            {\n
                v16 += 2;\n
            }\n
LABEL_40615c:\n
            v19 = 16;\n
            goto LABEL_40617c;\n
        }\n
    }\n
LABEL_406209:\n
    v23 = v0;\n
LABEL_40620d:\n
    if (v27)\n
    {\n
        v28 = v2;\n
        if (!v26)\n
            v28 = v16;\n
        *(v27) = v28;\n
    }\n
    v29 = (!v24 ? -0x80000000 : -(v25));\n
    v30 = (!v24 ? 2147483647 : v25);\n
    if (v23 < 0)\n
        v30 = v29;\n
    return v30;\n
}\n
", "4219474:sub_406252": null, "4219476:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_11;  // tmp #11\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long v20;  // rdi\n
    unsigned long v21;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v22;  // rdi\n
    unsigned int v23;  // ecx\n
    void* v24;  // rbp, Other Possible Types: unsigned long, unsigned int, unsigned long long\n
    void* v25;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v26;  // r14d\n
    unsigned long long *v27;  // r15, Other Possible Types: unsigned long\n
    char v28[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v29;  // eax\n
    unsigned long v30;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v27 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v24 = 0;\n
                v23 = 1;\n
                v26 = 1;\n
                v25 = 0;\n
                goto LABEL_4063e1;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) == 45)\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
    }\n
    if (a2)\n
    {\n
        if (!(a2 == 16))\n
            goto LABEL_406350;\n
        *(&v18) = *(v16);\n
        v19 = 16;\n
        if (!(*(v16) == 48))\n
            goto LABEL_406352;\n
        v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
        goto LABEL_406330;\n
    }\n
    else\n
    {\n
        *(&v18) = *(v16);\n
        if (*(v16) != 48)\n
        {\n
LABEL_40633a:\n
            v18 = cgc_isdigit(v18);\n
            v19 = 10;\n
            if (!v18)\n
                goto LABEL_4063d2;\n
LABEL_406350:\n
            *(&v18) = *(v16);\n
LABEL_406352:\n
            if (v18)\n
            {\n
                v1 = a1;\n
LABEL_40635b:\n
                v25 = 0;\n
                v24 = 0;\n
                v26 = 1;\n
                do\n
                {\n
                    v18 = cgc_isdigit(v18);\n
                    v20 = *(v16);\n
                    if (v18)\n
                    {\n
                        v21 = v20 - 48;\n
                    }\n
                    else\n
                    {\n
                        v18 = cgc_islower(v20);\n
                        v22 = *(v16);\n
                        if (v18)\n
                        {\n
                            v21 = v22 - 87;\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_isupper(v22))\n
                                break;\n
                            v21 = *(v16) - 55;\n
                        }\n
                    }\n
                    if (v21 >= v19)\n
                        break;\n
                    continue;\n
                    v25 = v21 + v19 * v25;\n
                    if (v25 >> 32)\n
                        v24 = 1;\n
                    tmp_11 = *((v16 + 1));\n
                    *(&v18) = *((v16 + 1));\n
                    v16 += 1;\n
                    v26 = 0;\n
                } while (tmp_11);\n
                v27 = v1;\n
                goto LABEL_4063dd;\n
            }\n
LABEL_4063d2:\n
            v24 = 0;\n
            v26 = 1;\n
            v25 = 0;\n
        }\n
        else\n
        {\n
            *(&v18) = *((v16 + 1));\n
            if ((v18 & 248) == 48)\n
            {\n
                v1 = a1;\n
                v16 += 1;\n
                v19 = 8;\n
                goto LABEL_40635b;\n
            }\n
            v18 = cgc_tolower(v18);\n
            if (v18 != 120)\n
            {\n
                *(&v18) = *(v16);\n
                goto LABEL_40633a;\n
            }\n
            else\n
            {\n
                v16 += 2;\n
            }\n
LABEL_406330:\n
            v19 = 16;\n
            goto LABEL_406350;\n
        }\n
    }\n
LABEL_4063dd:\n
    v23 = v0;\n
LABEL_4063e1:\n
    if (v27)\n
    {\n
        v28 = v2;\n
        if (!v26)\n
            v28 = v16;\n
        *(v27) = v28;\n
    }\n
    if (v23 < 0)\n
    {\n
        v29 = (v25 == -0x80000000 ? 1 : v24);\n
        if (v25 <= 2147483647)\n
            v29 = v24;\n
        v25 = -(v25);\n
        v24 = v29;\n
    }\n
    v30 = (!v24 ? 4294967295 : v25);\n
    return v30;\n
}\n
", "4219953:sub_406431": null, "4219956:_ZN8ArrayVarC1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    uint128_t field_10;\n
} struct_0;\n
\n
extern char g_414768;\n
\n
long long ArrayVar::__ctor__(struct_0 *a0)\n
{\n
    uint128_t *v1;  // rax\n
\n
    Var::__ctor__();\n
    a0->field_0 = &g_414768;\n
    a0->field_10 = 0;\n
    v1 = operator new(16);\n
    *(v1) = 0;\n
    return shared_ptr::reset(&a0->field_10, v1);\n
}\n
", "4220019:sub_406473": null, "4220020:_ZN8ArrayVarD1Ev": "extern char g_414768;\n
\n
long long ArrayVar::__dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_414768;\n
    shared_ptr::reset(a0 + 2, 0);\n
    return Var::__dtor__(a0);\n
}\n
", "4220054:_ZN8ArrayVarD0Ev": "extern char g_414768;\n
\n
long long ArrayVar::__deleting_dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_414768;\n
    shared_ptr::reset(a0 + 2, 0);\n
    Var::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4220096:_ZN8ArrayVar4copyEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    struct struct_1 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
extern char g_414768;\n
\n
long long ArrayVar::copy(struct_2 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_1 *v2;  // rcx\n
\n
    v1 = operator new(32);\n
    v1->field_8 = a0->field_8;\n
    v1->field_0 = &g_414768;\n
    v1->field_10 = a0->field_10;\n
    v2 = a0->field_18;\n
    v1->field_18 = v2;\n
    if (v2)\n
    {\n
        v2->field_8 = v2->field_8 + 1;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4220153:sub_4064f9": null, "4220154:_ZN5Array3setEiP3Var": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long Array::set(struct_3 *a0, struct struct_2 **a1, unsigned long a2)\n
{\n
    struct struct_2 **v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // eax, Other Possible Types: unsigned int\n
    unsigned long v3;  // rax\n
    struct struct_1 **v4;  // rdi\n
\n
    v1 = a1;\n
    if (a1 >= 0)\n
    {\n
        v2 = a0->field_0;\n
    }\n
    else\n
    {\n
        v2 = a0->field_0;\n
        if (v2 < -(a1))\n
            goto LABEL_406529;\n
        v1 = a1 + v2;\n
    }\n
    if (v1 < v2)\n
    {\n
LABEL_40653b:\n
        if (v2 <= v1)\n
            cgc_exit();\n
        v3 = a0->field_8;\n
        v4 = *((v3 + v1 * 8));\n
        *((v3 + v1 * 8)) = a2;\n
        *(&v1) = 1;\n
        if (!v4)\n
            return v1;\n
        *(v4)->field_8(v4);\n
    }\n
    else if (v1 <= 999)\n
    {\n
        vector::resize(a0, v1 + 1);\n
        v2 = a0->field_0;\n
        goto LABEL_40653b;\n
    }\n
LABEL_406529:\n
    return 0;\n
}\n
", "4220268:_ZN5Array3getEiPP3Var": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long Array::get(struct_0 *a0, unsigned long long *a1, unsigned long long *a2)\n
{\n
    unsigned long v1;  // eax, Other Possible Types: unsigned int\n
    char v2;  // rax\n
\n
    if (a1 >= 0)\n
    {\n
        v1 = a0->field_0;\n
    }\n
    else\n
    {\n
        v1 = a0->field_0;\n
        if (v1 < !(a1))\n
            return 0;\n
        a1 = a1 + v1;\n
    }\n
    v2 = (a1 < v1 ? 0 : *((a0->field_8 + a1 * 8)));\n
    *(a2) = v2;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4220315:sub_40659b": null, "4220316:_ZN8ArrayVar17registerExternalsER9Evaluator": "long long ArrayVar::registerExternals(unsigned long long a0)\n
{\n
    Evaluator::addExternal();\n
    Evaluator::addExternal(a0, \"aget\", func_aget, 0);\n
    return Evaluator::addExternal(a0, \"aset\", func_aset, 0);\n
}\n
", "4220390:_ZL10func_ArrayPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "long long func_Array(unsigned long a0, unsigned long a1, unsigned int *a2, struct struct_2 **a3)\n
{\n
    unsigned int v1;  // ebp\n
    void* v2;  // r14\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    struct struct_1 **v4;  // rdi\n
\n
    v1 = *(a2);\n
    if (!v1)\n
    {\n
        v2 = operator new(32);\n
        v3 = ArrayVar::__ctor__(v2);\n
        v4 = *(a3);\n
        *(a3) = v2;\n
        if (v4)\n
            v3 = *(v4)->field_8(v4);\n
    }\n
    *(&v3) = !v1;\n
    return v3;\n
}\n
", "4220451:_ZL9func_agetPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_9 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_7 *field_8;\n
} struct_9;\n
\n
typedef struct struct_7 {\n
    struct struct_4 *field_0;\n
    struct struct_8 *field_8;\n
} struct_7;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_8 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_8;\n
\n
long long func_aget(unsigned long a0, unsigned long a1, struct_9 *a2, struct struct_3 **a3)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct struct_3 **v3;  // rbx\n
    struct_7 *v4;  // rcx\n
    struct_4 *v5;  // rax\n
    unsigned int v6[4];  // rcx\n
    struct_0 *v7;  // rax\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
    struct struct_6 **v9;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v10;  // rdx, Other Possible Types: unsigned int\n
    struct struct_5 **v11;  // rdi\n
    struct struct_2 **v12;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v13;  // r14\n
\n
    v0 = v2;\n
    if (a2->field_0 != 2)\n
        return 0;\n
    v3 = a3;\n
    v4 = a2->field_8;\n
    v5 = v4->field_0;\n
    if (v5->field_8 == 4)\n
    {\n
        v6 = v4->field_8;\n
        if (v6[2] == 3)\n
        {\n
            v7 = v5->field_10;\n
            v9 = v6[3];\n
            if (v9 >= 0)\n
            {\n
                v10 = v7->field_0;\n
                goto LABEL_40666b;\n
            }\n
            else\n
            {\n
                v10 = v7->field_0;\n
                if (v10 >= !(v9))\n
                {\n
                    v9 = v9 + v10;\n
LABEL_40666b:\n
                    if (v9 < v10)\n
                    {\n
                        v11 = *((v7->field_8 + v9 * 8));\n
                        if (v11)\n
                        {\n
                            v8 = *(v11)->field_10(v11);\n
                            v12 = *(v3);\n
                            *(v3) = v8;\n
                            goto LABEL_4066a9;\n
                        }\n
                    }\n
                    v13 = operator new(16);\n
                    v8 = Var::__ctor__(v13, 0);\n
                    v12 = *(v3);\n
                    *(v3) = v13;\n
LABEL_4066a9:\n
                    if (v12)\n
                        v8 = *((*(v12) + 8))();\n
                    *(&v8) = 1;\n
                    return v8;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4220600:_ZL9func_asetPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_8 {\n
    struct struct_9 *field_0;\n
    struct struct_5 *field_8;\n
} struct_8;\n
\n
typedef struct struct_5 {\n
    struct struct_3 *field_0;\n
    struct struct_6 *field_8;\n
    struct struct_7 *field_10;\n
} struct_5;\n
\n
typedef struct struct_9 {\n
    struct struct_2 *field_0;\n
} struct_9;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    struct struct_4 *field_0;\n
} struct_7;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long func_aset(unsigned long a0, unsigned long a1, struct_8 *a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_5 *v3;  // rax\n
    struct struct_4 **v4;  // rdi\n
    struct_5 *v5;  // rax, Other Possible Types: unsigned long\n
    void* v6;  // r12, Other Possible Types: unsigned long\n
    void* v7;  // r15, Other Possible Types: unsigned long\n
    unsigned long v8;  // rbx\n
    struct struct_1 **v9;  // rdi\n
\n
    v0 = v2;\n
    if (a2->field_0 != 3)\n
        return 0;\n
    v3 = a2->field_8;\n
    if (v3->field_0->field_8 == 4 && v3->field_8->field_8 == 3)\n
    {\n
        v4 = v3->field_10;\n
        if (!v4)\n
        {\n
            v5 = a2->field_8;\n
            v6 = v5->field_0->field_10;\n
            v7 = 0;\n
        }\n
        else\n
        {\n
            v7 = *(v4)->field_10(v4);\n
            a3 = a2->field_0;\n
            if (!a3)\n
            {\n
                cgc_exit();\n
                a3 = a2->field_0;\n
            }\n
            v5 = a2->field_8;\n
            v6 = *((*(v5) + 16));\n
            if (a3 <= 1)\n
            {\n
                cgc_exit();\n
                v5 = a2->field_8;\n
            }\n
        }\n
        if (Array::set(v6, *((*((v5 + 8)) + 12)), v7))\n
        {\n
            v8 = operator new(16);\n
            Var::__ctor__(v8, 0);\n
            v9 = *(a3);\n
            *(a3) = v8;\n
            *(&v8) = 1;\n
            if (v9)\n
            {\n
                *(v9)->field_8(v9);\n
                return v8;\n
            }\n
            return v8;\n
        }\n
    }\n
}\n
", "4220818:_ZN10shared_ptrI5ArrayE5resetEPS0_": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long shared_ptr::reset(struct_1 *a0, unsigned long a1)\n
{\n
    int tmp_2;  // tmp #2\n
    struct_0 *v1;  // rbx\n
    unsigned long long v3[2];  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_8;\n
    if (v1)\n
    {\n
        tmp_2 = v1->field_8 - 1;\n
        v1->field_8 = v1->field_8 - 1;\n
        if ([D] amd64g_calculate_condition(0x4<64>, 0x1c<64>, t2, 0x0<64>, DirtyExpression (<class 'ailment.expression.VEXCCallExpression'>)))\n
        {\n
            shared_ptr::cb::__base_dtor__(v1);\n
            v3 = operator delete(v1);\n
        }\n
    }\n
    a0->field_0 = a1;\n
    if (a1)\n
    {\n
        v3 = operator new(16);\n
        *(v3) = a0->field_0;\n
        a0->field_8 = v3;\n
        *((v3 + 8)) = 1;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4220902:_ZN6vectorI10unique_ptrI3VarEE6resizeEj": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long vector::resize(struct_3 *a0, struct struct_2 **a1)\n
{\n
    struct_3 *v1;  // rbx\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v3;  // rcx\n
    struct struct_1 **v4;  // rdi\n
    struct struct_2 **v5;  // rbp, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    vector::enlarge();\n
    v2 = a0->field_0;\n
    if (v2 > a1)\n
    {\n
        v5 = a1;\n
        do\n
        {\n
            v3 = v1->field_8;\n
            v4 = *((v3 + v5 * 8));\n
            *((v3 + v5 * 8)) = 0;\n
            if (v4)\n
            {\n
                *(v4)->field_8(v4);\n
                v2 = v1->field_0;\n
            }\n
            v5 += 1;\n
        } while (v5 < v2);\n
    }\n
    v1->field_0 = a1;\n
    return v2;\n
}\n
", "4220974:_ZN10shared_ptrI5ArrayE2cbD2Ev": "long long shared_ptr::cb::__base_dtor__(unsigned int *a0)\n
{\n
    unsigned long long v1;  // rbx\n
    unsigned long v2;  // rax\n
\n
    v1 = *(&a0);\n
    if (v1)\n
    {\n
        vector::__base_dtor__(v1);\n
        return operator delete(*(&a0));\n
    }\n
    return v2;\n
}\n
", "4221002:_ZN6vectorI10unique_ptrI3VarEED2Ev": "typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long vector::__base_dtor__(struct_3 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    struct_3 *v4;  // r14\n
    struct struct_1 **v5;  // rdi\n
    struct struct_2 **v6;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a0->field_4;\n
    if (!v3)\n
        return a0->field_4;\n
    v4 = a0;\n
    v6 = 0;\n
    do\n
    {\n
        v5 = v4->field_8[v6].field_0;\n
        if (v5)\n
        {\n
            *(v5)->field_8(v5);\n
            v3 = v4->field_4;\n
        }\n
        v6 += 1;\n
    } while (v6 < v3);\n
    if (v3)\n
    {\n
        v3 = cgc_free(v4->field_8);\n
        v4->field_8 = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4221080:_ZN6vectorI10unique_ptrI3VarEE7enlargeEj": "typedef struct struct_4 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_3;\n
\n
long long vector::enlarge(struct_4 *a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v3;  // r14d\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r12\n
    char *v7;  // rbx\n
    struct struct_2 **v8;  // rax\n
    unsigned long v9;  // r13, Other Possible Types: unsigned long long\n
    struct struct_1 **v10;  // rdi\n
\n
    v0 = v2;\n
    if (a0->field_4 >= a1)\n
        return v2;\n
    v3 = a1;\n
    v2 = cgc_realloc(a0->field_8, a1 * 8);\n
    a0->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_exit();\n
        v2 = a0->field_8;\n
    }\n
    v5 = a0->field_4;\n
    if (v5 < v3)\n
    {\n
        v6 = v2 + a1 * 8;\n
        v9 = v2 + v5 * 8;\n
        do\n
        {\n
            v7 = v9;\n
            v8 = operator new(8);\n
            *(v8) = 0;\n
            v9 += 8;\n
            cgc_memcpy(v7, v8, 8);\n
            v10 = *(v8);\n
            if (v10)\n
                *(v10)->field_8(v10);\n
            v2 = operator delete(v8);\n
        } while (v9 < v6);\n
    }\n
    a0->field_4 = v3;\n
    return v2;\n
}\n
", "4221255:sub_406947": null, "4221256:_ZNK7CString4hashEv": "long long CString::hash const(struct struct_0 **a0)\n
{\n
    unsigned long long v1;  // rax\n
    unsigned long v3;  // rdx\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // edi\n
    unsigned long v6;  // rsi, Other Possible Types: unsigned int\n
\n
    v1 = cgc_strlen(*(a0));\n
    if (!v1)\n
        return 0x4347c000;\n
    v6 = 0x4347c000;\n
    v3 = 0;\n
    do\n
    {\n
        v4 = v6;\n
        v5 = v6 * 16;\n
        v6 = (*(a0))[v3].field_0 + v5 + v6 ^ v4;\n
        v3 = v3 + 1;\n
    } while (v1 > v3);\n
    return v6;\n
}\n
", "4221318:sub_406986": null, "4221320:_ZN3VarC1E7VarType": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_414790;\n
\n
long long Var::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = &g_414790;\n
    a0->field_8 = a1;\n
    return &g_414790;\n
}\n
", "4221334:_ZN3VarD1Ev": "long long Var::__dtor__()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4221335:sub_406997": null, "4221336:_ZN3VarD0Ev": "long long Var::__deleting_dtor__(unsigned int a0)\n
{\n
    return operator delete(a0);\n
}\n
", "4221341:sub_40699d": null, "4221342:_ZN5ScopeC2EPS_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    uint128_t field_10;\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
    unsigned short field_38;\n
} struct_0;\n
\n
long long Scope::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rbx\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v3->field_10 = 0;\n
    v3->field_20 = 0;\n
    v3->field_30 = 0;\n
    v3->field_38 = 0;\n
    v3->field_0 = a1;\n
    return map::_enlarge(&a0->field_10, 8);\n
}\n
", "4221402:_ZN5ScopeD2Ev": "typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_3 *field_30;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long Scope::__base_dtor__(struct_2 *a0)\n
{\n
    struct struct_1 **v2;  // rdi\n
\n
    v2 = a0->field_30;\n
    if (v2)\n
        *(v2)->field_8(v2);\n
    return map::__base_dtor__(&a0->padding_0[16]);\n
}\n
", "4221434:_ZN5Scope8findNameERK7CString": "long long Scope::findName(struct struct_0 **a0, unsigned long long a1)\n
{\n
    struct struct_0 **v1;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    while (true)\n
    {\n
        if (map::_find const(v1 + 16, a1))\n
            return map::operator[](v1 + 16, a1);\n
        v1 = *(v1);\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4221497:sub_406a39": null, "4221498:_ZN9EvaluatorC1EP4Node": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    uint128_t field_8;\n
    uint128_t field_18;\n
    uint128_t field_28;\n
    uint128_t field_38;\n
} struct_0;\n
\n
long long Evaluator::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v1;  // rbx\n
\n
    v1 = a0;\n
    a0->field_0 = a1;\n
    *(&(&v1->field_0)[1]) = 0;\n
    *((&v1->field_8 + 8)) = 0;\n
    map::_enlarge(&(&a0->field_0)[1], 8);\n
    *((&v1->field_18 + 8)) = 0;\n
    *((&v1->field_28 + 8)) = 0;\n
    map::_enlarge(&v1->field_18 + 8, 8);\n
    StringVar::registerOps(v1);\n
    return NumberVar::registerOps(v1);\n
}\n
", "4221572:_ZN9StringVar11registerOpsER9Evaluator": "long long StringVar::registerOps(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned long long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rdi\n
\n
    v0 = \"+\";\n
    v1 = 0;\n
    v2 = 8589934594;\n
    v3 = _ZZN9StringVar11registerOpsER9EvaluatorEN4$_188__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    v5 = vector::push_back(map::operator[](a0 + 40, &v0), &v2);\n
    v6 = v1;\n
    if (v6)\n
    {\n
        v5 = operator delete[](v6);\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4221676:_ZN9NumberVar11registerOpsER9Evaluator": "long long NumberVar::registerOps(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    void* v1;  // [bp-0x40]\n
    unsigned long long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long long v5;  // r14\n
    unsigned long v6;  // rdi\n
    unsigned long v7;  // rdi\n
    unsigned long v8;  // rdi\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // rdi\n
    unsigned long v12;  // rdi\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // rdi\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rdi\n
    unsigned long v19;  // rdi\n
    unsigned long v20;  // rdi\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi\n
    unsigned long v23;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
\n
    v0 = \">>\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_08__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    v5 = a0 + 40;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v6 = v1;\n
    if (v6)\n
        operator delete[](v6);\n
    v0 = \"<<\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_18__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v7 = v1;\n
    if (v7)\n
        operator delete[](v7);\n
    v0 = \"*\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_28__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v8 = v1;\n
    if (v8)\n
        operator delete[](v8);\n
    v0 = \"/\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_38__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v9 = v1;\n
    if (v9)\n
        operator delete[](v9);\n
    v0 = \"+\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_48__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v10 = v1;\n
    if (v10)\n
        operator delete[](v10);\n
    v0 = \"-\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_58__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v11 = v1;\n
    if (v11)\n
        operator delete[](v11);\n
    v0 = \"|\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_68__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v12 = v1;\n
    if (v12)\n
        operator delete[](v12);\n
    v0 = \"&\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_78__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v13 = v1;\n
    if (v13)\n
        operator delete[](v13);\n
    v0 = \"<\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_88__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v14 = v1;\n
    if (v14)\n
        operator delete[](v14);\n
    v0 = \">\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_98__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v15 = v1;\n
    if (v15)\n
        operator delete[](v15);\n
    v0 = \"<=\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_108__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v16 = v1;\n
    if (v16)\n
        operator delete[](v16);\n
    v0 = \">=\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_118__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v17 = v1;\n
    if (v17)\n
        operator delete[](v17);\n
    v0 = \"!=\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_128__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v18 = v1;\n
    if (v18)\n
        operator delete[](v18);\n
    v0 = \"==\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_138__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v19 = v1;\n
    if (v19)\n
        operator delete[](v19);\n
    v0 = \"||\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_148__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v20 = v1;\n
    if (v20)\n
        operator delete[](v20);\n
    v0 = \"&&\";\n
    v1 = 0;\n
    v2 = 12884901891;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_158__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v21 = v1;\n
    if (v21)\n
        operator delete[](v21);\n
    v0 = \"-\";\n
    v1 = 0;\n
    v2 = 3;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_168__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    vector::push_back(map::operator[](v5, &v0), &v2);\n
    v22 = v1;\n
    if (v22)\n
        operator delete[](v22);\n
    v0 = \"~\";\n
    v1 = 0;\n
    v2 = 3;\n
    v3 = _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_178__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E;\n
    v23 = vector::push_back(map::operator[](v5, &v0), &v2);\n
    v24 = v1;\n
    if (v24)\n
    {\n
        v23 = operator delete[](v24);\n
        return v23;\n
    }\n
    return v23;\n
}\n
", "4223089:sub_407071": null, "4223090:_ZN9EvaluatorD2Ev": "long long Evaluator::__base_dtor__(unsigned long long *a0)\n
{\n
    Node::deleteTree(*(a0));\n
    map::__base_dtor__(a0 + 5);\n
    return map::__base_dtor__(a0 + 1);\n
}\n
", "4223124:_ZN9Evaluator11addExternalEPKcPFbPvRS_RK6vectorI10unique_ptrI3VarEERS7_ES2_": "long long Evaluator::addExternal(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20]\n
    unsigned long long v4[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // rdi\n
\n
    v0 = a1;\n
    v1 = 0;\n
    v4[0] = map::operator[](a0 + 8, &v0);\n
    v4[0] = a2;\n
    v4[1] = a3;\n
    v5 = v1;\n
    if (v5)\n
    {\n
        v4 = operator delete[](v5);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4223196:_ZN9Evaluator5addOpERK7CString7VarTypeS3_PFbS2_P3VarS5_R10unique_ptrIS4_EE": "long long Evaluator::addOp(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v0 = a2;\n
    v1 = a3;\n
    v2 = a4;\n
    return vector::push_back(map::operator[](a0 + 40), &v0);\n
}\n
", "4223239:sub_407107": null, "4223240:_ZN9Evaluator3runEv": "typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long Evaluator::run(unsigned long long *a0)\n
{\n
    void* v0;  // [bp-0x58]\n
    struct_2 *v1;  // [bp-0x50]\n
    int v2;  // [bp-0x48]\n
    int v3;  // [bp-0x38]\n
    struct struct_1 **v4;  // [bp-0x28]\n
    unsigned short v5;  // [bp-0x20]\n
    struct struct_1 **v8;  // rdi\n
\n
    *(&v2) = 0;\n
    *(&v3) = 0;\n
    map::_enlarge(&v2, 8);\n
    v4 = 0;\n
    v5 = 0;\n
    v0 = 0;\n
    v1 = &v0;\n
    v8 = v4;\n
    if (v8)\n
        *(v8)->field_8(v8);\n
    map::__base_dtor__(&v2);\n
    return Evaluator::eval_block(a0, &v0, *(a0), 0);\n
}\n
", "4223355:sub_40717b": null, "4223356:_ZN9Evaluator10eval_blockER5ScopeP4Nodej": "typedef struct struct_12 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_9 *field_10;\n
    struct struct_11 *field_18;\n
} struct_12;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_9 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    struct struct_8 *field_18;\n
} struct_9;\n
\n
typedef struct struct_8 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_6 *field_10;\n
} struct_8;\n
\n
typedef struct struct_11 {\n
    char padding_0[16];\n
    struct struct_10 *field_10;\n
    struct struct_11 *field_18;\n
} struct_11;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    struct struct_3 *field_0;\n
    char padding_8[8];\n
    struct struct_7 *field_10;\n
    unsigned long long field_18;\n
} struct_6;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[56];\n
    char field_38;\n
    char field_39;\n
} struct_4;\n
\n
typedef struct struct_10 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_10;\n
\n
typedef struct struct_7 {\n
    struct struct_3 *field_0;\n
} struct_7;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_stderr;\n
\n
long long Evaluator::eval_block(unsigned long a0, struct_3 *a1, struct_12 *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0xb4]\n
    struct_3 *v1;  // [bp-0xb0]\n
    unsigned int v2;  // [bp-0xa4]\n
    unsigned int v3;  // [bp-0xa0]\n
    unsigned long long v4;  // [bp-0x98]\n
    struct_3 *v5;  // [bp-0x90]\n
    char v6[58];  // [bp-0x88]\n
    int v7;  // [bp-0x80]\n
    int v8;  // [bp-0x70]\n
    struct struct_1 **v9;  // [bp-0x60]\n
    unsigned short v10;  // [bp-0x58]\n
    unsigned long long v11;  // [bp-0x50]\n
    struct_2 *v12;  // [bp-0x48]\n
    struct_11 *v13;  // [bp-0x40]\n
    unsigned long long v14;  // [bp-0x38]\n
    struct_11 *v16;  // r14, Other Possible Types: unsigned long, void*, struct_12 *\n
    struct_3 *v17;  // r8, Other Possible Types: unsigned long\n
    char v18[58];  // rsi\n
    struct_9 *v19;  // rax\n
    struct_8 *v20;  // r13\n
    unsigned long long v21;  // rax\n
    unsigned long long v22;  // rbp\n
    char v23;  // r15b\n
    unsigned long long v24;  // rax\n
    unsigned long long v25;  // rax\n
    struct_6 *v26;  // rbp\n
    struct_6 *v29;  // r12\n
    struct struct_3 **v30;  // rbx\n
    struct_6 *v33;  // r12\n
    struct struct_1 **v35;  // rdi\n
    char v36[58];  // rdi\n
    char v37[58];  // rdi\n
    char v38[58];  // rdi\n
    unsigned long long v40;  // r12\n
    struct_3 *v41;  // rdi\n
    struct_11 *v42;  // rbx, Other Possible Types: unsigned long\n
    char v43[58];  // rax\n
    struct struct_1 **v44;  // rdi\n
    char v45;  // rax\n
    char v47[58];  // rdi\n
    char v48[58];  // rdi\n
    char v49[58];  // rdi\n
    struct struct_5 **v50;  // rax\n
    struct struct_5 **v51;  // rax\n
    unsigned long long v52;  // rbp\n
    struct struct_1 **v53;  // rdi\n
    struct struct_1 **v54;  // rdi\n
    unsigned long long v55;  // rbx\n
    char v56[58];  // rdi\n
    char v57[58];  // rdi\n
    struct struct_5 **v58;  // rax\n
    unsigned int v59;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v60;  // r12, Other Possible Types: unsigned long long, char\n
    unsigned long long v61;  // rax\n
    struct struct_1 **v62;  // rdi\n
    struct_2 *v63;  // rdi, Other Possible Types: unsigned long\n
    char v64[58];  // rdi\n
    struct_3 *v65;  // rdi\n
    unsigned long v66;  // rsi\n
\n
    v16 = a2;\n
    v17 = a1;\n
    v11 = a0;\n
    *(&v3) = cgc_stderr;\n
    v4 = a1 + 1;\n
    v14 = a1 + 3;\n
    v60 = 1;\n
    v2 = 0;\n
    v23 = 0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        if (!v16)\n
        {\n
LABEL_4078ea:\n
            *(&v60) = v60 & 1;\n
            return v60;\n
        }\n
        v18 = *((v17 + 8));\n
        if (!(!v18[56]))\n
            goto LABEL_4078ea;\n
        if (!(!v18[57]))\n
            goto LABEL_4078ea;\n
        if (*((v16 + 12)) != 16)\n
        {\n
            v66 = \"wrong type in eval_block\\n
\";\n
            goto LABEL_40790e;\n
        }\n
        v19 = *((v16 + 16));\n
        if (v19->field_c != 5)\n
        {\n
            v66 = \"wrong indent type in eval_block\\n
\";\n
            goto LABEL_40790e;\n
        }\n
        else\n
        {\n
            if (!(v19->field_8 == a3))\n
                goto LABEL_4078ea;\n
            v20 = v19->field_18;\n
            v21 = v20->field_c;\n
            if (v21 == 22)\n
            {\n
                if ((v23 & 1))\n
                {\n
                    v42 = *((v16 + 24));\n
                    v22 = v42->field_10->field_8;\n
                    if (v22 <= a3)\n
                    {\n
                        v66 = \"Error: block indent incorrect\\n
\";\n
LABEL_40790e:\n
                        cgc_fprintf(*(&v3), v66);\n
                        return 0;\n
                    }\n
                    if ((v2 & 1))\n
                    {\n
LABEL_4072d4:\n
                        v16 = v42;\n
                        do\n
                        {\n
                            if (*((*((v16 + 16)) + 8)) < v22)\n
                            {\n
                                v23 = 0;\n
                                goto LABEL_40789b;\n
                            }\n
                            v16 = *((v16 + 24));\n
                        } while (v16);\n
LABEL_4072e9:\n
                        v23 = 0;\n
                        goto LABEL_4072ec;\n
                    }\n
                    else\n
                    {\n
                        *(&v7) = 0;\n
                        *(&v8) = 0;\n
                        map::_enlarge(&v7, 8);\n
                        v9 = 0;\n
                        v10 = 0;\n
                        v5 = v17;\n
                        *(&v6[0]) = *((v17 + 8));\n
                        v24 = Evaluator::eval_block(v11, &v5, v42, v22);\n
                        v35 = v9;\n
                        if (v35)\n
                            *(v35)->field_8(v35);\n
                        map::__base_dtor__(&v7);\n
                        if (v24)\n
                        {\n
                            v42 = *((v16 + 24));\n
                            v17 = v1;\n
                            if (!v42)\n
                                goto LABEL_4072e9;\n
                            goto LABEL_4072d4;\n
                        }\n
                    }\n
                }\n
LABEL_4078f0:\n
                return 0;\n
            }\n
            else if (v21 != 21)\n
            {\n
                v23 = 0;\n
            }\n
        }\n
        switch (v21)\n
        {\n
        case 13:\n
            v26 = v20->field_10;\n
            v5 = v26->field_0;\n
            *(&v6[0]) = 0;\n
            v36 = v6;\n
            if (v36)\n
                operator delete[](v36);\n
            if (map::_find const(v4, &v5))\n
            {\n
                cgc_fprintf(*(&v3), \"Warning: redefining name\\n
\");\n
                v5 = v26->field_0;\n
                *(&v6[0]) = 0;\n
                map::remove(v4, &v5);\n
                v47 = v6;\n
                if (v47)\n
                    operator delete[](v47);\n
            }\n
            v5 = v26->field_0;\n
            *(&v6[0]) = 0;\n
            v50 = map::operator[](v4, &v5);\n
            v53 = *(v50);\n
            *(v50) = 0;\n
            if (v53)\n
                *(v53)->field_8(v53);\n
            v56 = v6;\n
            if (v56)\n
                operator delete[](v56);\n
            v16 = *((v16 + 24));\n
            a3 = a3;\n
            v17 = v1;\n
            break;\n
        case 14:\n
            v0 = v60;\n
            v29 = v20->field_10;\n
            v30 = v29->field_10;\n
            v5 = *(v30);\n
            *(&v6[0]) = 0;\n
            v37 = v6;\n
            if (v37)\n
                operator delete[](v37);\n
            if (map::_find const(v4, &v5))\n
            {\n
                cgc_fprintf(*(&v3), \"Warning: redefining name\\n
\");\n
                v5 = *(v30);\n
                *(&v6[0]) = 0;\n
                map::remove(v4, &v5);\n
                v48 = v6;\n
                if (v48)\n
                    operator delete[](v48);\n
            }\n
            v5 = *(v30);\n
            *(&v6[0]) = 0;\n
            v51 = map::operator[](v4, &v5);\n
            v54 = *(v51);\n
            *(v51) = 0;\n
            if (v54)\n
                *(v54)->field_8(v54);\n
            v57 = v6;\n
            if (v57)\n
                operator delete[](v57);\n
            v5 = 0;\n
            v61 = Evaluator::eval_expr(v11, v1, v29, &v5);\n
            v59 = 1;\n
            if (v61)\n
            {\n
                v16 = *((v16 + 24));\n
                v59 = 4;\n
            }\n
            v60 = v0;\n
            v65 = v5;\n
            if (v65)\n
            {\n
                v65->field_0->field_8(v65);\n
                a3 = a3;\n
            }\n
            v17 = v1;\n
            if (!v24)\n
                goto LABEL_40789d;\n
            break;\n
        case 17: case 23:\n
            v5 = 0;\n
            v25 = Evaluator::eval_expr(v11, v17, v20, &v5);\n
            if (!v25)\n
                v60 = 0;\n
            else\n
                v16 = *((v16 + 24));\n
            v41 = v5;\n
            if (v41)\n
                v41->field_0->field_8(v41);\n
            a3 = a3;\n
            v17 = v1;\n
            if (!v24)\n
                goto LABEL_4078ea;\n
            break;\n
        case 19: case 20: case 21:\n
            v12 = 0;\n
            if (v21 == 20)\n
            {\n
                v23 = 1;\n
                v2 = 0;\n
            }\n
            else if (v21 == 21)\n
            {\n
                v59 = 1;\n
                if (!(v23 & 1))\n
                    goto LABEL_40787e;\n
            }\n
            v0 = v60;\n
            v13 = *((v16 + 24));\n
            v40 = v13->field_10->field_8;\n
            if (v40 <= a3)\n
            {\n
                cgc_fprintf(*(&v3), \"Error: block indent incorrect\\n
\");\n
                a3 = a3;\n
                v59 = 1;\n
                v60 = v0;\n
                goto LABEL_40787e;\n
            }\n
            if (!(v21 == 21))\n
                continue;\n
            if ((v2 & 1))\n
            {\n
LABEL_4073ba:\n
                v16 = *((v16 + 24));\n
                v59 = 4;\n
                while (true)\n
                {\n
                    if (!v16)\n
                    {\n
                        v16 = 0;\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        if (*((*((v16 + 16)) + 8)) < v40)\n
                            break;\n
                        v16 = *((v16 + 24));\n
                    }\n
                }\n
                goto LABEL_407876;\n
            }\n
            if (!Evaluator::eval_expr(v11, v17))\n
            {\n
                v59 = 1;\n
LABEL_407876:\n
                v60 = v0;\n
                a3 = a3;\n
LABEL_40787e:\n
                v63 = v12;\n
                goto LABEL_407891;\n
            }\n
            v63 = v12;\n
            if (v63->field_8 == 3)\n
            {\n
                if (!v63->field_c)\n
                {\n
LABEL_4078b0:\n
                    if (v20->field_c == 19)\n
                    {\n
                        v1->field_8->field_38 = 0;\n
                        goto LABEL_4073ba;\n
                    }\n
                }\n
                else\n
                {\n
                    *(&v7) = 0;\n
                    *(&v8) = 0;\n
                    map::_enlarge(&v7, 8);\n
                    v9 = 0;\n
                    v10 = 0;\n
                    v5 = v1;\n
                    *(&v6[0]) = v5->field_8;\n
                    v59 = 1;\n
                    if (Evaluator::eval_block(v11, &v5, v13, v40))\n
                    {\n
                        v43 = v1->field_8;\n
                        v59 = 8;\n
                        if (!v43[56])\n
                            v59 = v43[57] * 8;\n
                    }\n
                    v44 = v9;\n
                    if (v44)\n
                        *(v44)->field_8(v44);\n
                    *(&v45) = map::__base_dtor__(&v7);\n
                    v45 = 1;\n
                    if (!v59)\n
                    {\n
                        v2 = *(&v45);\n
                        v17 = v1;\n
                        if (!(v20->field_c == 19))\n
                            goto LABEL_4073ba;\n
                    }\n
                    else\n
                    {\n
                        v2 = *(&v45);\n
                        if (v59 == 8)\n
                            goto LABEL_4078b0;\n
                        goto LABEL_407876;\n
                    }\n
                    continue;\n
                }\n
            }\n
            v59 = 1;\n
            v60 = v0;\n
            *((*(v63) + 8))(v63);\n
LABEL_407891:\n
            v17 = v1;\n
            if (!(v59 == 4))\n
                goto LABEL_40789d;\n
LABEL_40789b:\n
            v59 = 0;\n
LABEL_40789d:\n
            if (v59 && v59 != 5)\n
            {\n
                if (!(v59 == 3))\n
                    goto LABEL_4078f0;\n
                goto LABEL_4078ea;\n
            }\n
        case 24:\n
            v0 = v60;\n
            v33 = v20->field_10;\n
            v5 = v33->field_0;\n
            *(&v6[0]) = 0;\n
            v38 = v6;\n
            if (v38)\n
                operator delete[](v38);\n
            if (map::_find const(v4, &v5))\n
            {\n
                cgc_fprintf(*(&v3), \"Warning: redefining name\\n
\");\n
                v5 = v33->field_0;\n
                *(&v6[0]) = 0;\n
                map::remove(v4, &v5);\n
                v49 = v6;\n
                if (v49)\n
                    operator delete[](v49);\n
            }\n
            v16 = *((v16 + 24));\n
            v52 = v16->field_10->field_8;\n
            if (v52 <= a3)\n
            {\n
                v60 = 0;\n
                cgc_fprintf(*(&v3), \"Error: procedure indent incorrect\\n
\");\n
                goto LABEL_4078ea;\n
            }\n
            else\n
            {\n
                v55 = operator new(56);\n
                Procedure::__ctor__(v55, v1, v33->field_18, v16, v52);\n
                v5 = v33->field_0;\n
                *(&v6[0]) = 0;\n
                v58 = map::operator[](v4, CString::ensure(&v5));\n
                v62 = *(v58);\n
                *(v58) = v55;\n
                if (v62)\n
                    *(v62)->field_8(v62);\n
                v64 = v6;\n
                v60 = v0;\n
                if (v64)\n
                    operator delete[](v64);\n
                a3 = a3;\n
                v17 = v1;\n
                if (*((*((v16 + 16)) + 8)) < v52)\n
                    break;\n
                v16 = *((v16 + 24));\n
                if (!(!v16))\n
                    continue;\n
LABEL_4072ec:\n
                v16 = 0;\n
                break;\n
            }\n
        case 25:\n
            v18[56] = 1;\n
            break;\n
        case 26:\n
            if (Evaluator::eval_expr(v11, v17, v20->field_10, v14))\n
            {\n
                *((*((v17 + 8)) + 57)) = 1;\n
                a3 = a3;\n
                break;\n
            }\n
            else\n
            {\n
                v60 = 0;\n
                goto LABEL_4078ea;\n
            }\n
        default:\n
            v60 = 0;\n
            cgc_fprintf(*(&v3), \"Unknown statement type.\\n
\");\n
            Node::dump(v16, 0);\n
            goto LABEL_4078ea;\n
        }\n
    }\n
}\n
", "4225399:sub_407977": null, "4225400:_ZN9Evaluator9eval_exprER5ScopeP4NodeR10unique_ptrI3VarE": "extern char cgc_stderr;\n
extern char g_4147e0;\n
\n
long long Evaluator::eval_expr(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0xa0]\n
    unsigned long v1;  // [bp-0x98]\n
    unsigned long v2;  // [bp-0x90]\n
    char v3;  // [bp-0x88]\n
    unsigned long v4;  // [bp-0x80]\n
    unsigned long v5;  // [bp-0x78]\n
    int v6;  // [bp-0x70], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x68]\n
    int v8;  // [bp-0x60]\n
    int v9;  // [bp-0x50]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned short v11;  // [bp-0x38]\n
    unsigned long v13;  // rbp\n
    unsigned long v15;  // r15\n
    unsigned long v16;  // rax\n
    unsigned long v17;  // r14\n
    unsigned long v18;  // r12\n
    unsigned long v19;  // rax\n
    unsigned int v20;  // r12d\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi\n
    unsigned long v23;  // rdi\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rax\n
    unsigned long v26;  // rdi\n
    unsigned long v27;  // rdi\n
    unsigned long v28;  // rsi\n
    unsigned long v29;  // rax\n
    unsigned long v31;  // rdi\n
    unsigned long v32;  // rdi\n
    unsigned long v33;  // rdi\n
    unsigned long v34;  // rdi\n
    unsigned long v35;  // r12\n
    unsigned long v36;  // rbp\n
    unsigned long v37;  // rax\n
    char v38;  // r14b\n
    unsigned long v39;  // rax\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rdi\n
    unsigned long v42;  // rdi\n
    unsigned long v43;  // rdi\n
    unsigned long v44;  // rdi\n
    unsigned long v45;  // rax\n
    unsigned long v46;  // rcx\n
    unsigned long v47;  // rbx\n
    unsigned long v48;  // rax\n
    unsigned long v49;  // rax\n
    unsigned long v50;  // rsi\n
    unsigned long v51;  // rdi\n
    unsigned long v52;  // rbp\n
    char v53;  // r12b\n
    unsigned long v54;  // rax\n
    unsigned long v55;  // rdx\n
    unsigned long v56;  // rdi\n
    unsigned long v57;  // rdi\n
    unsigned long v58;  // rdi\n
\n
    v13 = a2;\n
    v15 = a0;\n
    while (true)\n
    {\n
        v16 = *((v13 + 12));\n
        if (v16 != 17)\n
            break;\n
        v13 = *((v13 + 16));\n
    }\n
    switch (v16)\n
    {\n
    case 6:\n
        v6 = *(v13);\n
        v7 = 0;\n
        v47 = Scope::findName(a1, &v6);\n
        v21 = v7;\n
        if (v21)\n
            operator delete[](v21);\n
        if (v47)\n
        {\n
            v24 = *(a3);\n
            *(a3) = *((*(*(v47)) + 16))(*(v47));\n
            goto LABEL_407b8c;\n
        }\n
    case 7:\n
        v47 = operator new(16);\n
        *((v47 + 8)) = 3;\n
        *(v47) = &g_4147e0;\n
        *((v47 + 12)) = cgc_strtoul(*(v13), NULL, 0);\n
        v24 = *(a3);\n
        *(a3) = v47;\n
        goto LABEL_407b8c;\n
    case 8: case 9: case 10: case 13: case 14:\n
        cgc_fprintf(cgc_stderr, \"Unknown expression.\\n
\");\n
        Node::dump(v13, 0);\n
        return 0;\n
    case 11:\n
        v17 = *((v13 + 16));\n
        v6 = *(v17);\n
        v7 = 0;\n
        v47 = Scope::findName(a1, &v6);\n
        v22 = v7;\n
        if (v22)\n
            operator delete[](v22);\n
        if (v47)\n
        {\n
            if (!Evaluator::eval_expr(v15, a1, *((v17 + 24)), v47))\n
                goto LABEL_408013;\n
            v24 = *(a3);\n
            *(a3) = *((*(*(v47)) + 16))(*(v47));\n
LABEL_407b8c:\n
            if (v24)\n
            {\n
                *((*(v24) + 8))();\n
                break;\n
            }\n
        }\n
    case 12:\n
        v47 = 0;\n
        v2 = 0;\n
        v7 = 0;\n
        v6 = *(v13);\n
        if (Evaluator::eval_expr(a0, a1, *((v13 + 24)), &v2))\n
        {\n
            v47 = Evaluator::eval_op(a0, &v6, v2, 0, a3) * 3;\n
            v26 = v7;\n
            if (v26)\n
                operator delete[](v26);\n
        }\n
        v31 = v2;\n
        if (v31)\n
            *((*(v31) + 8))(v31);\n
        if (!v47)\n
            goto LABEL_408013;\n
        break;\n
    case 15:\n
        v18 = *((v13 + 16));\n
        v6 = *(v18);\n
        v7 = 0;\n
        v19 = Scope::findName(a1, &v6);\n
        v23 = v7;\n
        if (v23)\n
            operator delete[](v23);\n
        if (v19)\n
        {\n
            v29 = *(v19);\n
            if (*((v29 + 8)) != 1)\n
            {\n
                v27 = cgc_stderr;\n
                v28 = \"Procedure has wrong type.\\n
\";\n
                goto LABEL_407ea5;\n
            }\n
            else\n
            {\n
                v5 = a3;\n
                v47 = *((v18 + 24));\n
                v1 = *((v29 + 16));\n
                *(&v8) = 0;\n
                *(&v9) = 0;\n
                map::_enlarge(&v8, 8);\n
                v10 = 0;\n
                v11 = 0;\n
                v6 = v1;\n
                v7 = &v6;\n
                v4 = v29;\n
                vector::__base_ctor__(&v2, v29 + 40);\n
                if (v2)\n
                {\n
                    v1 = cgc_stderr;\n
                    v35 = 0;\n
                    v36 = 0;\n
                    do\n
                    {\n
                        v0 = 0;\n
                        if (v47 && Evaluator::eval_expr(v15, a1, v47, &v0))\n
                        {\n
                            if (v36 >= v2)\n
                                cgc_exit();\n
                            v39 = map::operator[](&v8, *(&v3) + v35);\n
                            v40 = v0;\n
                            v0 = 0;\n
                            v41 = *(v39);\n
                            *(v39) = v40;\n
                            if (v41)\n
                                *((*(v41) + 8))(v41);\n
                            v47 = *((v47 + 24));\n
                            v38 = 1;\n
                            goto LABEL_407d6e;\n
                        }\n
                        v38 = 0;\n
                        cgc_fprintf(v1, \"Bad expression in call\\n
\");\n
LABEL_407d6e:\n
                        v42 = v0;\n
                        if (v42)\n
                            *((*(v42) + 8))(v42);\n
                        if (!v38)\n
                            goto LABEL_407eb3;\n
                        else\n
                            goto LABEL_407d87;\n
LABEL_407d87:\n
                        v36 += 1;\n
                        v35 += 16;\n
                    } while (v36 < v2);\n
                    goto LABEL_407eb3;\n
                }\n
                v45 = v4;\n
                v46 = v5;\n
                if (Evaluator::eval_block(v15, &v6, *((v45 + 24)), *((v45 + 32))))\n
                {\n
                    v48 = v10;\n
                    if (v48)\n
                    {\n
                        v10 = 0;\n
                        v51 = *(v46);\n
                        *(v46) = v48;\n
                    }\n
                    else\n
                    {\n
                        v51 = *(v46);\n
                        *(v46) = 0;\n
                    }\n
                    if (v51)\n
                        *((*(v51) + 8))();\n
                    *(&v47) = 1;\n
                    goto LABEL_407fe7;\n
                }\n
LABEL_407eb3:\n
                v47 = 0;\n
LABEL_407fe7:\n
                vector::__base_dtor__(&v2);\n
                v58 = v10;\n
                if (v58)\n
                    *((*(v58) + 8))(v58);\n
                map::__base_dtor__(&v8);\n
                if (!v47)\n
                    goto LABEL_408013;\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            v6 = *(v18);\n
            v7 = 0;\n
            v1 = v15 + 8;\n
            v32 = v7;\n
            if (v32)\n
                operator delete[](v32);\n
            if (!map::_find const(v1, &v6))\n
            {\n
                cgc_fprintf(cgc_stderr, \"Undefined procedure: %s\\n
\");\n
                return 0;\n
            }\n
            v6 = *(v18);\n
            v7 = 0;\n
            v37 = map::operator[](v1, &v6);\n
            v4 = *((v37 + 8));\n
            v43 = v7;\n
            if (v43)\n
                operator delete[](v43);\n
            v47 = *((v18 + 24));\n
            v5 = *(v37);\n
            if (!v47)\n
            {\n
                v50 = 0;\n
            }\n
            else\n
            {\n
                v49 = v47;\n
                do\n
                {\n
                    v50 = 1;\n
                    v49 = *((v49 + 24));\n
                } while (v49);\n
            }\n
            *(&v6) = 0;\n
            vector::resize(&v6, v50);\n
            if (v47)\n
            {\n
                v1 = cgc_stderr;\n
                v52 = 0;\n
                do\n
                {\n
                    v2 = 0;\n
                    v53 = Evaluator::eval_expr(v15, a1, v47, &v2);\n
                    if (!v53)\n
                    {\n
                        cgc_fprintf(v1, \"Bad expression in extern call\\n
\");\n
                    }\n
                    else\n
                    {\n
                        if (v6 <= v52)\n
                            cgc_exit();\n
                        v54 = (&v6)[8];\n
                        v55 = v2;\n
                        v2 = 0;\n
                        v56 = *((v54 + v52 * 8));\n
                        *((v54 + v52 * 8)) = v55;\n
                        if (v56)\n
                            *((*(v56) + 8))(v56);\n
                    }\n
                    v57 = v2;\n
                    if (v57)\n
                        *((*(v57) + 8))(v57);\n
                    if (!v53)\n
                        goto LABEL_407fc4;\n
                    v47 = *((v47 + 24));\n
                    v52 = v52 + 1;\n
                } while (v47);\n
            }\n
            if (v5(v4, v15, &v6, a3))\n
            {\n
                vector::__base_dtor__(&v6);\n
                *(&v47) = 1;\n
                return v47;\n
            }\n
LABEL_407fc4:\n
            vector::__base_dtor__(&v6);\n
LABEL_408013:\n
            return 0;\n
        }\n
    default:\n
        if (v16 == 23)\n
        {\n
            v20 = 0;\n
            v2 = 0;\n
            v0 = 0;\n
            v47 = *((v13 + 16));\n
            if (Evaluator::eval_expr(a0, a1, v47, &v2))\n
            {\n
                v25 = *((v47 + 24));\n
                v7 = 0;\n
                v6 = *(v25);\n
                if (Evaluator::eval_expr(a0, a1, *((v25 + 24)), &v0))\n
                {\n
                    v47 = &v6;\n
                    v20 = Evaluator::eval_op(a0, &v6, v2, v0, a3) * 3;\n
                    v33 = v7;\n
                    if (v33)\n
                        operator delete[](v33);\n
                }\n
            }\n
            v34 = v0;\n
            if (v34)\n
                *((*(v34) + 8))(v34);\n
            v44 = v2;\n
            if (v44)\n
                *((*(v44) + 8))(v44);\n
            if (!v20)\n
                goto LABEL_408013;\n
            break;\n
        }\n
    }\n
    v27 = cgc_stderr;\n
    v28 = \"undefined identifier\\n
\";\n
LABEL_407ea5:\n
    cgc_fprintf(v27, v28);\n
    return 0;\n
}\n
", "4227110:_ZN9Evaluator7eval_opERK7CStringP3VarS4_R10unique_ptrIS3_E": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_stderr;\n
\n
long long Evaluator::eval_op(unsigned long a0, unsigned long long a1, struct_0 *a2, struct_0 *a3, unsigned long long a4)\n
{\n
    char v0;  // [bp-0x38]\n
    char v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    struct_0 *v4;  // r13\n
    struct_0 *v5;  // r15\n
    unsigned long long v6;  // r12\n
    unsigned long long v7;  // rbx\n
    unsigned long long v8;  // rcx\n
    unsigned int *v9;  // rax\n
    unsigned int v10;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    unsigned long v14;  // rbx\n
    void* v15;  // rbx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v16;  // rdi, Other Possible Types: unsigned long long\n
    struct_0 *v17;  // rsi, Other Possible Types: unsigned long\n
    struct_0 *v18;  // rdx, Other Possible Types: unsigned long\n
\n
    v4 = a3;\n
    v5 = a2;\n
    v6 = a1;\n
    v7 = a0 + 40;\n
    if (!map::_find const(v7))\n
    {\n
        cgc_fprintf(*(&cgc_stderr), \"missing operator\\n
\");\n
        return 0;\n
    }\n
    vector::__base_ctor__(&v0, map::operator[](v7, a1));\n
    v8 = *(&v0);\n
    if (v8)\n
    {\n
        v9 = *(&v2);\n
        v10 = a2->field_8;\n
        v14 = 0;\n
        do\n
        {\n
            v12 = *((v9 + v14));\n
            v13 = *((4 + v9 + v14));\n
            if (v4)\n
            {\n
                if (!(v12 == v10))\n
                    continue;\n
                if (!(v13 == v4->field_8))\n
                    continue;\n
                v16 = v6;\n
                v17 = v5;\n
                v18 = v4;\n
                goto LABEL_4080f6;\n
            }\n
            else\n
            {\n
                if (!(v12 == v10))\n
                    continue;\n
                if (!v13)\n
                {\n
                    v16 = v6;\n
                    v17 = v5;\n
                    v18 = 0;\n
LABEL_4080f6:\n
                    v15 = *((8 + v9 + v14))(v16, v17, v18, a4);\n
                    goto LABEL_4080ff;\n
                }\n
            }\n
            v14 += 16;\n
        } while (v8 * 16 != v14);\n
        goto LABEL_4080ff;\n
    }\n
    v15 = 0;\n
    cgc_fprintf(*(&cgc_stderr), \"missing compatible operator\\n
\");\n
LABEL_4080ff:\n
    if (!*(&v1))\n
        return v15;\n
    cgc_free(*(&v2));\n
}\n
", "4227360:_ZN9ProcedureC1ER5ScopeP4NodeS3_j": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    uint128_t field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
extern char g_4147b8;\n
\n
long long Procedure::__ctor__(struct_0 *a0, unsigned long a1, struct_1 *a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // rax, Other Possible Types: unsigned long\n
    unsigned long v6;  // rdi\n
    struct_1 *v7;  // rbx, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    a0->field_8 = 1;\n
    v4 = &g_4147b8;\n
    a0->field_0 = &g_4147b8;\n
    a0->field_10 = a1;\n
    *(&(&a0->padding_24)[1]) = 0;\n
    if (a2)\n
    {\n
        v7 = a2;\n
        do\n
        {\n
            v0 = *(v7);\n
            v1 = 0;\n
            v4 = vector::push_back(&(&a0->padding_24)[1], &v0);\n
            v6 = v1;\n
            if (v6)\n
                v4 = operator delete[](v6);\n
            v7 = *((v7 + 24));\n
        } while (v7);\n
    }\n
    v3->field_18 = a3;\n
    v3->field_20 = a4;\n
    return v4;\n
}\n
", "4227506:_ZN9ProcedureD1Ev": "extern char g_4147b8;\n
\n
long long Procedure::__dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_4147b8;\n
    return vector::__base_dtor__(a0 + 5);\n
}\n
", "4227525:sub_4081c5": null, "4227526:_ZN9ProcedureD0Ev": "extern char g_4147b8;\n
\n
long long Procedure::__deleting_dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_4147b8;\n
    vector::__base_dtor__(a0 + 5);\n
    return operator delete(a0);\n
}\n
", "4227558:_ZN9Procedure4copyEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    uint128_t field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_1;\n
\n
extern char g_4147b8;\n
\n
long long Procedure::copy(struct_1 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    v0 = v2;\n
    v3 = operator new(56);\n
    v3->field_8 = a0->field_8;\n
    v3->field_0 = &g_4147b8;\n
    v3->field_10 = a0->field_10;\n
    *(&(&v3->padding_24)[1]) = 0;\n
    v3->field_18 = a0->field_18;\n
    v3->field_20 = a0->field_20;\n
    vector::operator=(&(&v3->padding_24)[1], &a0[1].padding_0[4]);\n
    return v3;\n
}\n
", "4227652:_ZN9NumberVarC1Ej": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long NumberVar::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_8 = 3;\n
    a0->field_0 = &g_4147e0;\n
    a0->field_c = a1;\n
    return &g_4147e0;\n
}\n
", "4227673:sub_408259": null, "4227674:_ZN9NumberVarD0Ev": "long long NumberVar::__deleting_dtor__(unsigned int a0)\n
{\n
    return operator delete(a0);\n
}\n
", "4227679:sub_40825f": null, "4227680:_ZN9NumberVar4copyEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long NumberVar::copy(unsigned int a0[4])\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = operator new(16);\n
    v1->field_8 = a0[2];\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = a0[3];\n
    return v1;\n
}\n
", "4227718:_ZN9StringVarC2Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    uint128_t field_10;\n
} struct_0;\n
\n
extern char g_414808;\n
\n
long long StringVar::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_8 = 2;\n
    a0->field_0 = &g_414808;\n
    a0->field_10 = 0;\n
    return &g_414808;\n
}\n
", "4227743:sub_40829f": null, "4227744:_ZN9StringVarD2Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[12];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern char g_414808;\n
\n
long long StringVar::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_0 = &g_414808;\n
    if (a0->field_14)\n
    {\n
        v1 = cgc_free(a0->field_18);\n
        a0->field_18 = 0;\n
        return v1;\n
    }\n
    return &g_414808;\n
}\n
", "4227783:sub_4082c7": null, "4227784:_ZN9StringVarD0Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[12];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern char g_414808;\n
\n
long long StringVar::__deleting_dtor__(struct_0 *a0)\n
{\n
    a0->field_0 = &g_414808;\n
    if (!a0->field_14)\n
        return operator delete(a0);\n
    cgc_free(a0->field_18);\n
    a0->field_18 = 0;\n
    return operator delete(a0);\n
}\n
", "4227830:_ZN9StringVar4copyEv": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    uint128_t field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_414808;\n
\n
long long StringVar::copy(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rax\n
\n
    v0 = v2;\n
    v3 = operator new(32);\n
    v3->field_8 = a0->field_8;\n
    v3->field_0 = &g_414808;\n
    v3->field_10 = 0;\n
    vector::operator=(&v3->field_10, &a0[1].padding_0[4]);\n
    return v3;\n
}\n
", "4227901:sub_40833d": null, "4227902:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_08__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_5;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_08__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, struct_5 *a2, struct struct_3 **a3)\n
{\n
    struct_4 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_2 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a1->field_c >> (a2->field_c & 31);\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4227981:sub_40838d": null, "4227982:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_18__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_5 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_2;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_18__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_3 *a1, struct_2 *a2, struct struct_4 **a3)\n
{\n
    struct_5 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a1->field_c << (a2->field_c & 31);\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228061:sub_4083dd": null, "4228062:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_28__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_28__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, struct_0 *a2, unsigned long a3)\n
{\n
    struct_1 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx\n
    struct struct_3 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a1->field_c * a2->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228140:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_38__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_38__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_3 *a1, struct_3 *a2, struct struct_2 **a3)\n
{\n
    struct struct_2 **v1;  // rbx\n
    struct_4 *v2;  // rcx\n
    unsigned long v3;  // rax, Other Possible Types: char\n
    struct struct_1 **v4;  // rdi\n
\n
    v1 = a3;\n
    v2 = operator new(16);\n
    v3 = (0 CONCAT a1->field_c) /m a2->field_c;\n
    v2->field_8 = 3;\n
    v2->field_0 = &g_4147e0;\n
    v2->field_c = v3;\n
    v4 = *(v1);\n
    *(v1) = &v2->field_0;\n
    if (v4)\n
        v3 = *(v4)->field_8(v4);\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4228222:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_48__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_48__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, struct_0 *a2, unsigned long a3)\n
{\n
    struct_1 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx\n
    struct struct_3 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a2->field_c + a1->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228299:sub_4084cb": null, "4228300:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_58__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_2;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_58__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_2 *a1, struct_2 *a2, unsigned long a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a1->field_c - a2->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228377:sub_408519": null, "4228378:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_68__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_68__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, struct_0 *a2, unsigned long a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx\n
    struct struct_2 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a2->field_c | a1->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228455:sub_408567": null, "4228456:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_78__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_78__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_3 *a1, struct_3 *a2, unsigned long a3)\n
{\n
    struct_2 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = a2->field_c & a1->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228533:sub_4085b5": null, "4228534:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_88__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_4;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_88__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_4 *a1, unsigned long a2, struct struct_2 **a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = a1->field_c < *((*(&v2) + 12));\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228616:_ZZN9NumberVar11registerOpsER9EvaluatorEN3$_98__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN3$_98__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_3 *a1, unsigned long a2, struct struct_4 **a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_2 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = *((*(&v2) + 12)) < a1->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228698:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_108__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_108__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_3 *a1, unsigned long a2, struct struct_4 **a3)\n
{\n
    struct_2 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = a1->field_c <= *((*(&v2) + 12));\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228780:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_118__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_118__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, unsigned long a2, struct struct_3 **a3)\n
{\n
    struct_4 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_2 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = *((*(&v2) + 12)) <= a1->field_c;\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228862:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_128__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_4;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_128__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_4 *a1, unsigned long a2, struct struct_2 **a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = a1->field_c != *((*(&v2) + 12));\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4228944:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_138__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_4;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_138__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_4 *a1, unsigned long a2, struct struct_2 **a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // edx\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 0;\n
    *(&v2) = a1->field_c == *((*(&v2) + 12));\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    v1->field_c = v2;\n
    v3 = *(a3);\n
    *(a3) = &v1->field_0;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4229026:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_148__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_148__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_1 *a1, struct_1 *a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx, Other Possible Types: unsigned int\n
    struct struct_3 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    v2 = 1;\n
    if (!a1->field_c)\n
    {\n
        v2 = 0;\n
        *(&v2) = a2->field_c;\n
    }\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4229116:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_158__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_2;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_158__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_2 *a1, struct_2 *a2, unsigned long a3)\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v2;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v3;  // rdi\n
\n
    v1 = operator new(16);\n
    if (!a1->field_c)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        *(&v2) = a2->field_c;\n
    }\n
    v1->field_8 = 3;\n
    v1->field_0 = &g_4147e0;\n
    *(&v1->field_c) = v2;\n
    v3 = *(v2);\n
    *(v2) = v1;\n
    if (v3)\n
        v1 = *(v3)->field_8(v3);\n
    *(&v1) = 1;\n
    return v1;\n
}\n
", "4229205:sub_408855": null, "4229206:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_168__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_168__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_3 *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned int v4;  // ecx\n
    struct struct_2 **v5;  // rdi\n
\n
    v0 = v2;\n
    v3 = operator new(16);\n
    v4 = -(a1->field_c);\n
    v3->field_8 = 3;\n
    v3->field_0 = &g_4147e0;\n
    v3->field_c = v4;\n
    v5 = *(*(&v4));\n
    *(*(&v4)) = v3;\n
    if (v5)\n
        v3 = *(v5)->field_8(v5);\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229279:sub_40889f": null, "4229280:_ZZN9NumberVar11registerOpsER9EvaluatorEN4$_178__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_3 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char g_4147e0;\n
\n
long long _ZZN9NumberVar11registerOpsER9EvaluatorEN4$_178__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_3 *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v4;  // ecx\n
    struct struct_2 **v5;  // rdi\n
\n
    v0 = v2;\n
    v3 = operator new(16);\n
    v4 = ~(a1->field_c);\n
    v3->field_8 = 3;\n
    v3->field_0 = &g_4147e0;\n
    *(&v3->field_c) = v4;\n
    v5 = *(v4);\n
    *(v4) = v3;\n
    if (v5)\n
        v3 = *(v5)->field_8(v5);\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4229353:sub_4088e9": null, "4229354:_ZZN9StringVar11registerOpsER9EvaluatorEN4$_188__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_3 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char g_414808;\n
\n
long long _ZZN9StringVar11registerOpsER9EvaluatorEN4$_188__invokeERK7CStringP3VarS7_R10unique_ptrIS6_E(unsigned long a0, struct_0 *a1, struct_2 *a2, struct struct_7 **a3)\n
{\n
    struct_4 *v0;  // [bp-0x40]\n
    struct_2 *v2;  // rbx\n
    struct_0 *v3;  // r14\n
    struct_4 *v4;  // rax\n
    unsigned int *v5;  // r13\n
    char v7;  // r15b\n
    char *v8;  // rbp, Other Possible Types: unsigned long\n
    char *v9;  // rdx\n
    struct struct_0 **v10;  // rbp, Other Possible Types: unsigned long\n
    char *v11;  // r15\n
    struct struct_7 **v12;  // rax, Other Possible Types: unsigned long\n
    struct struct_6 **v13;  // rdi\n
\n
    v2 = a2;\n
    v3 = a1;\n
    v4 = operator new(32);\n
    v4->field_8 = 2;\n
    v4->field_0 = &g_414808;\n
    *(&v4->field_10) = 0;\n
    v0 = v4;\n
    v5 = &v0->field_10;\n
    vector::resize(v5, a2->field_10 + a1->field_10);\n
    if (!v3->field_10)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        do\n
        {\n
            v7 = v3->field_18[v8].field_0;\n
            if (v8 >= *(v5))\n
                cgc_exit();\n
            *((v0[1].field_0 + v8)) = v7;\n
            v8 += 1;\n
        } while (v8 < v3->field_10);\n
    }\n
    if (a2->field_10)\n
    {\n
        v9 = v8;\n
        v10 = 0;\n
        do\n
        {\n
            *(&v3) = *(&v2->field_18->field_0 + v10);\n
            v11 = &v9[v10];\n
            if (*(v5) <= v11)\n
                cgc_exit();\n
            v11[v0[1].field_0] = v3;\n
            v10 += 1;\n
        } while (v10 < v2->field_10);\n
    }\n
    v12 = a3;\n
    v13 = *(a3);\n
    *(a3) = &v0->field_0;\n
    if (v13)\n
        v12 = *(v13)->field_8(v13);\n
    *(&v12) = 1;\n
    return v12;\n
}\n
", "4229630:_ZN3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EED2Ev": "typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    struct struct_2 *field_18;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
    struct struct_3 *field_28;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long map::__base_dtor__(struct_4 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v4;  // rdi\n
    struct_2 *v5;  // r14\n
    struct struct_1 **v6;  // rdi\n
    unsigned long v7;  // rdi\n
    struct_2 *v8;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = a0->field_10;\n
    if (v4)\n
        v2 = operator delete[](v4);\n
    v8 = a0->field_18;\n
    if (!v8)\n
        return v2;\n
    do\n
    {\n
        v5 = *((v8 + 8));\n
        v6 = *((v8 + 40));\n
        if (v6)\n
            *(v6)->field_8(v6);\n
        v7 = *((v8 + 32));\n
        if (v7)\n
            operator delete[](v7);\n
        v2 = operator delete(v8);\n
        v8 = v5;\n
    } while (v5);\n
    return v2;\n
}\n
", "4229717:sub_408a55": null, "4229718:_ZN3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EEixERKS0_": "long long map::operator[](unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = map::_find const();\n
    if (!v3)\n
    {\n
        v3 = map::_insert(a0, a1);\n
        return v3 + 40;\n
    }\n
    return v3 + 40;\n
}\n
", "4229761:sub_408a81": null, "4229762:_ZN3mapI7CString6vectorIN9Evaluator3_OpEE4hashIS0_E8equal_toIS0_EED2Ev": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
    char padding_28[4];\n
    unsigned int field_2c;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long map::__base_dtor__(struct_1 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v4;  // rdi\n
    struct_0 *v5;  // r14\n
    unsigned long v6;  // rdi\n
    struct_0 *v7;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = a0->field_10;\n
    if (v4)\n
        v2 = operator delete[](v4);\n
    v7 = a0->field_18;\n
    if (!v7)\n
        return v2;\n
    do\n
    {\n
        v5 = *((v7 + 8));\n
        if (*((v7 + 44)))\n
        {\n
            cgc_free(*((v7 + 48)));\n
            *((v7 + 48)) = 0;\n
        }\n
        v6 = *((v7 + 32));\n
        if (v6)\n
            operator delete[](v6);\n
        v2 = operator delete(v7);\n
        v7 = v5;\n
    } while (v5);\n
    return v2;\n
}\n
", "4229857:sub_408ae1": null, "4229858:_ZN3mapI7CString4pairIPFbPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS8_ES2_E4hashIS0_E8equal_toIS0_EED2Ev": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long map::__base_dtor__(struct_1 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v4;  // rdi\n
    struct_0 *v5;  // r14\n
    unsigned long v6;  // rdi\n
    struct_0 *v7;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = a0->field_10;\n
    if (v4)\n
        v2 = operator delete[](v4);\n
    v7 = a0->field_18;\n
    if (!v7)\n
        return v2;\n
    do\n
    {\n
        v5 = *((v7 + 8));\n
        v6 = *((v7 + 32));\n
        if (v6)\n
            operator delete[](v6);\n
        v2 = operator delete(v7);\n
        v7 = v5;\n
    } while (v5);\n
    return v2;\n
}\n
", "4229930:_ZN3mapI7CString4pairIPFbPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS8_ES2_E4hashIS0_E8equal_toIS0_EEixERKS0_": "long long map::operator[](unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = map::_find const();\n
    if (!v3)\n
    {\n
        v3 = map::_insert(a0, a1);\n
        return v3 + 40;\n
    }\n
    return v3 + 40;\n
}\n
", "4229973:sub_408b55": null, "4229974:_ZN3mapI7CString6vectorIN9Evaluator3_OpEE4hashIS0_E8equal_toIS0_EEixERKS0_": "long long map::operator[](unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = map::_find const();\n
    if (!v3)\n
    {\n
        v3 = map::_insert(a0, a1);\n
        return v3 + 40;\n
    }\n
    return v3 + 40;\n
}\n
", "4230017:sub_408b81": null, "4230018:_ZN6vectorIN9Evaluator3_OpEE9push_backERKS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    uint128_t field_0;\n
} struct_1;\n
\n
double vector::push_back(long long a0, long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    uint128_t *v4;  // rax, Other Possible Types: unsigned long\n
    uint128_t *v5;  // rcx\n
    unsigned long v6;  // rsi\n
    uint128_t *v7;  // rcx\n
    unsigned long v8;  // rax\n
    int v9;  // xmm0\n
\n
    v0 = v2;\n
    v4 = a0->field_0;\n
    if (v4 == a0->field_4)\n
    {\n
        v5 = v4 * 2;\n
        v6 = (v4 ? 8 : v5);\n
        vector::enlarge();\n
        v4 = a0->field_0;\n
    }\n
    v7 = a0->field_8;\n
    a0->field_0 = v4 + 1;\n
    v8 = v4 * 16;\n
    v9 = *(a1);\n
    *((v7 + v8)) = v9;\n
    return v9;\n
}\n
", "4230089:sub_408bc9": null, "4230090:_ZN6vectorI7CStringEC2ERKS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
long long vector::__base_ctor__(struct_0 *a0, struct_1 *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // r15\n
    unsigned long long v4;  // rdi\n
    unsigned long v5;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v4 = a1->field_0;\n
    v3->field_0 = v4;\n
    v7 = a1->field_0;\n
    v3->field_4 = v7;\n
    if (!v4)\n
        return a1->field_0;\n
    v7 = cgc_malloc(v4 * 16);\n
    v3->field_8 = v7;\n
    if (!v3->field_0)\n
        return v7;\n
    v7 = CString::operator=(v7, a1->field_8);\n
    if (v3->field_0 < 2)\n
        return v7;\n
    v6 = 1;\n
    v5 = 16;\n
    do\n
    {\n
        CString::operator=(v3->field_8 + v5, a1->field_8 + v5);\n
        v6 += 1;\n
        v7 = v3->field_0;\n
        v5 += 16;\n
    } while (v6 < v7);\n
    return v3->field_0;\n
}\n
", "4230214:_ZN6vectorI7CStringED2Ev": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::__base_dtor__(struct_1 *a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v2;  // r14\n
    unsigned long v3;  // rdi\n
    void* v4;  // rbx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long *v5;  // r15, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_4;\n
    if (!v1)\n
        return a0->field_4;\n
    v2 = a0;\n
    v5 = 8;\n
    v4 = 0;\n
    do\n
    {\n
        v3 = *(&v2->field_8->padding_0[v5]);\n
        if (v3)\n
        {\n
            operator delete[](v3);\n
            v1 = v2->field_4;\n
        }\n
        v4 += 1;\n
        v5 += 16;\n
    } while (v4 < v1);\n
    if (v1)\n
    {\n
        v1 = cgc_free(v2->field_8);\n
        v2->field_8 = 0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4230300:_ZN3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EE6removeERKS0_": "typedef struct struct_6 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_7 *field_10;\n
    unsigned long long field_18;\n
} struct_6;\n
\n
typedef struct struct_8 {\n
    struct struct_8 *field_0;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_10;\n
    char *field_18;\n
    unsigned long long field_20;\n
    struct struct_5 *field_28;\n
} struct_8;\n
\n
typedef struct struct_4 {\n
    struct struct_4 *field_0;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    struct struct_5 *field_28;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_7 {\n
    struct struct_4 *field_0;\n
} struct_7;\n
\n
typedef struct struct_5 {\n
    struct struct_1 *field_0;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long map::remove(struct_6 *a0, struct struct_0 **a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rdx\n
    struct_4 *v5;  // r12\n
    struct_4 *v6;  // rbx, Other Possible Types: unsigned long\n
    struct_8 *v7;  // rcx, Other Possible Types: unsigned long\n
    struct_3 *v8;  // rax\n
    struct_2 *v9;  // rcx\n
    struct struct_1 **v10;  // rdi\n
    unsigned long v11;  // rdi\n
    struct struct_4 **v12;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = (0 CONCAT CString::hash const(a1)) /m a0->field_8 >> 64;\n
    v12 = a0->field_10;\n
    v7 = v12[v4];\n
    if (!v7)\n
        return a0->field_10;\n
    v6 = &v12[v4];\n
    while (true)\n
    {\n
        a1 = *(a1);\n
        v12 = cgc_strcmp(*((v7 + 24)), a1);\n
        v5 = *(v6);\n
        v7 = v5->field_0;\n
        if (!v12)\n
            break;\n
        v6 = v5;\n
        if (!v7)\n
            return v12;\n
    }\n
    *(v6) = v7;\n
    v8 = v5->field_10;\n
    if (v8)\n
        v8->field_8 = v5->field_8;\n
    v9 = v5->field_8;\n
    if (v9)\n
        v9->field_10 = v8;\n
    if (v5 == a0->field_18)\n
        a0->field_18 = v9;\n
    v10 = v5->field_28;\n
    if (v10)\n
        *(v10)->field_8(v10);\n
    v11 = v5->field_20;\n
    if (v11)\n
        operator delete[](v11);\n
    v12 = operator delete(v5);\n
    a0->field_0 = a0->field_0 - 1;\n
    return v12;\n
}\n
", "4230478:_ZN7CString6ensureEv": "typedef struct struct_1 {\n
    char *field_0;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
long long CString::ensure(struct_1 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rbx\n
    unsigned long v4;  // r14\n
    struct_2 *v5;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (a0->field_8)\n
        return a0;\n
    v4 = cgc_strlen(a0->field_0) + 1;\n
    v5 = operator new[](v4);\n
    a0 = a0->field_8;\n
    v3->field_8 = &v5->field_0;\n
    if (a0)\n
    {\n
        operator delete[](a0);\n
        v5 = v3->field_8;\n
    }\n
    cgc_memcpy(v5, *(&v3->field_0), v4);\n
    *(&v3->field_0) = v3->field_8;\n
    return a0;\n
}\n
", "4230568:_ZN6vectorIN9Evaluator3_OpEEC2ERKS2_": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    uint128_t field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    uint128_t field_0;\n
    uint128_t field_10;\n
} struct_3;\n
\n
long long vector::__base_ctor__(struct_1 *a0, struct_2 *a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rbx\n
    uint128_t *v4;  // rdi\n
    uint128_t *v5;  // rcx, Other Possible Types: unsigned long\n
    uint128_t *v6;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v4 = a1->field_0;\n
    v3->field_0 = v4;\n
    v6 = a1->field_0;\n
    v3->field_4 = v6;\n
    if (!v4)\n
        return a1->field_0;\n
    v6 = cgc_malloc(v4 * 16);\n
    v3->field_8 = v6;\n
    if (!v3->field_0)\n
        return v6;\n
    *(v6) = a1->field_8->field_0;\n
    if (v3->field_0 < 2)\n
        return v6;\n
    v6 = 1;\n
    v5 = 16;\n
    do\n
    {\n
        *(&v3->field_8->padding_0[v5]) = *((&a1->field_8->field_0 + v5));\n
        v6 += 1;\n
        v5 += 16;\n
    } while (v6 < v3->field_0);\n
    return v6;\n
}\n
", "4230673:sub_408e11": null, "4230674:_ZN6vectorI7CStringE9push_backERKS0_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::push_back(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rcx\n
    unsigned long v6;  // rsi\n
    unsigned long long v7;  // rdi\n
\n
    v0 = v2;\n
    v4 = a0->field_0;\n
    if (v4 == a0->field_4)\n
    {\n
        v5 = v4 * 2;\n
        v6 = (v4 ? 8 : v5);\n
        vector::enlarge();\n
        v4 = a0->field_0;\n
    }\n
    a0->field_0 = v4 + 1;\n
    v7 = v4 * 16 + a0->field_8;\n
    return CString::operator=(v7, a1);\n
}\n
", "4230744:_ZN3Var4copyEv": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_414790;\n
\n
long long Var::copy(struct_0 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    unsigned int v2;  // ecx\n
\n
    v1 = operator new(16);\n
    v2 = a0->field_8;\n
    v1->field_0 = &g_414790;\n
    v1->field_8 = v2;\n
    return v1;\n
}\n
", "4230776:_ZN6vectorI7CStringEaSERKS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
long long vector::operator=(struct_0 *a0, struct_1 *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // r15\n
    unsigned long long v4;  // rdi\n
    unsigned long long v5;  // rax\n
    unsigned long v6;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rbx, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v4 = a1->field_0;\n
    v3->field_0 = v4;\n
    v3->field_4 = a1->field_0;\n
    if (!v4)\n
        return v3;\n
    v5 = cgc_malloc(v4 * 16);\n
    v3->field_8 = v5;\n
    if (!v3->field_0)\n
        return v3;\n
    CString::operator=(v5, a1->field_8);\n
    if (v3->field_0 < 2)\n
        return v3;\n
    v6 = 1;\n
    v7 = 16;\n
    do\n
    {\n
        CString::operator=(v3->field_8 + v7, a1->field_8 + v7);\n
        v6 += 1;\n
        v7 += 16;\n
    } while (v6 < v3->field_0);\n
    return v3;\n
}\n
", "4230903:sub_408ef7": null, "4230904:_ZN7CStringaSERKS_": "long long CString::operator=(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3[2];  // rbx\n
    unsigned long v4;  // rdi\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (a1[1])\n
    {\n
        a0[0] = a1[0];\n
        CString::ensure(a0);\n
        return a0;\n
    }\n
    v4 = a0[1];\n
    v3[1] = 0;\n
    if (v4)\n
        operator delete[](v4);\n
    v3[0] = a1[0];\n
    return v3;\n
}\n
", "4230976:_ZN6vectorIcEaSERKS0_": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char field_1;\n
} struct_1;\n
\n
long long vector::operator=(struct_3 *a0, struct_0 *a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_3 *v3;  // rbx\n
    unsigned long long v4;  // rdi\n
    char *v5;  // rax\n
    char *v6;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v4 = a1->field_0;\n
    v3->field_0 = v4;\n
    v3->field_4 = a1->field_0;\n
    if (!v4)\n
        return v3;\n
    v5 = cgc_malloc(v4);\n
    v3->field_8 = &v5;\n
    if (!v3->field_0)\n
        return v3;\n
    *(v5) = a1->field_8->field_0;\n
    if (v3->field_0 < 2)\n
        return v3;\n
    v6 = 1;\n
    do\n
    {\n
        (&v3->field_8->padding_0)[v6] = (&a1->field_8->field_0)[v6];\n
        v6 += 1;\n
    } while (v6 < v3->field_0);\n
    return v3;\n
}\n
", "4231067:sub_408f9b": null, "4231068:_ZN6vectorIcE6resizeEj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::resize(struct_0 *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    char *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = vector::enlarge();\n
    if (a0->field_0 > a1)\n
    {\n
        v3 = a1;\n
        do\n
        {\n
            *((a0->field_8 + v3)) = 0;\n
            v3 += 1;\n
        } while (v3 < a0->field_0);\n
    }\n
    a0->field_0 = a1;\n
    return v3;\n
}\n
", "4231114:_ZN6vectorIcE7enlargeEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_0;\n
\n
long long vector::enlarge(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v3;  // r14d\n
    unsigned long long v4;  // rbx\n
    unsigned long long v5;  // r12\n
    char *v6;  // rax\n
    unsigned long long v7;  // r13\n
    char *v8;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0->field_4 >= a1)\n
        return v2;\n
    v3 = a1;\n
    v2 = cgc_realloc(a0->field_8, a1);\n
    a0->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_exit();\n
        v2 = a0->field_8;\n
    }\n
    v4 = a0->field_4;\n
    if (v4 < v3)\n
    {\n
        v5 = a1 + v2;\n
        v8 = v4 + v2;\n
        do\n
        {\n
            v6 = operator new(1);\n
            *(v6) = 0;\n
            v7 = v8 + 1;\n
            cgc_memcpy(v8, v6, 1);\n
            v2 = operator delete(v6);\n
            v8 = v7;\n
        } while (v7 < v5);\n
    }\n
    a0->field_4 = v3;\n
    return v2;\n
}\n
", "4231260:_ZN3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EE8_enlargeEm": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long map::_enlarge(struct_1 *a0, unsigned long a1)\n
{\n
    struct_3 *v1;  // r15\n
    unsigned long long *v2;  // rdi\n
    unsigned long v4;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    struct_0 *v9;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v10;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a0->field_8)\n
    {\n
        a0->field_8 = a1;\n
        v4 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
        v1->field_10 = v4;\n
        return cgc_memset(v4, 0, *(&v1->field_8) * 8);\n
    }\n
    v2 = a0->field_10;\n
    if (v2)\n
        operator delete[](v2);\n
    *(&v1->field_8) = a1;\n
    v6 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
    v1->field_10 = v6;\n
    v10 = cgc_memset(v6, 0, *(&v1->field_8) * 8);\n
    for (v9 = v1->field_18; v9; v9 = *((v9 + 8)))\n
    {\n
        v7 = (0 CONCAT CString::hash const(v9 + 24)) /m *(&v1->field_8) >> 64;\n
        v10 = v1->field_10;\n
        v8 = *((v10 + v7 * 8));\n
        *((v10 + v7 * 8)) = v9;\n
        *(v9) = v8;\n
    }\n
    return v10;\n
}\n
", "4231454:_ZNK3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EE5_findERKS0_": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[16];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[16];\n
    char *field_18;\n
} struct_1;\n
\n
long long map::_find const(unsigned long long a0[3], char **a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_1 *v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = *((a0[2] + ((0 CONCAT CString::hash const(a1)) /m a0[1] >> 64) * 8));\n
    if (!v4)\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(*(a1), *((v4 + 24))))\n
            return v4;\n
        v4 = *(v4);\n
        if (!v4)\n
            return 0;\n
    }\n
}\n
", "4231546:_ZN3mapI7CString10unique_ptrI3VarE4hashIS0_E8equal_toIS0_EE7_insertERKS0_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    uint128_t field_18;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long map::_insert(struct_0 *a0, unsigned long long a1[2])\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned long long v3[2];  // r15\n
    struct_0 *v4;  // r14\n
    unsigned long v5;  // rsi\n
    struct_2 *v6;  // rax\n
    struct_2 *v7;  // rbx\n
    char **v8;  // r15\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rdx\n
    unsigned long long *v11;  // rax\n
    unsigned long long v12;  // rcx\n
\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = a0->field_8 * 2;\n
    if (a0->field_0 * 3 >= v5)\n
        map::_enlarge(a0, v5);\n
    v6 = operator new(48);\n
    v7 = v6;\n
    v1 = 0;\n
    v0 = v3[0];\n
    if (v3[1])\n
        CString::ensure(&v0);\n
    v8 = &(&v6->field_10)[1];\n
    *(&(&v6->field_10)[1]) = 0;\n
    *((&v6->field_18 + 8)) = 0;\n
    CString::operator=(v8, &v0);\n
    v9 = v1;\n
    if (v9)\n
        operator delete[](v9);\n
    v6->field_10 = 0;\n
    v6->field_8 = v4->field_18;\n
    v4->field_18 = v6;\n
    v10 = (0 CONCAT CString::hash const(v8)) /m v4->field_8 >> 64;\n
    v11 = v4->field_10;\n
    v12 = v11[v10];\n
    v11[v10] = v7;\n
    v7->field_0 = v12;\n
    v4->field_0 = v4->field_0 + 1;\n
    return v7;\n
}\n
", "4231757:sub_40924d": null, "4231758:_ZN3mapI7CString4pairIPFbPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS8_ES2_E4hashIS0_E8equal_toIS0_EE8_enlargeEm": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long map::_enlarge(struct_1 *a0, unsigned long a1)\n
{\n
    struct_3 *v1;  // r15\n
    unsigned long long *v2;  // rdi\n
    unsigned long v4;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    struct_0 *v9;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v10;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a0->field_8)\n
    {\n
        a0->field_8 = a1;\n
        v4 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
        v1->field_10 = v4;\n
        return cgc_memset(v4, 0, *(&v1->field_8) * 8);\n
    }\n
    v2 = a0->field_10;\n
    if (v2)\n
        operator delete[](v2);\n
    *(&v1->field_8) = a1;\n
    v6 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
    v1->field_10 = v6;\n
    v10 = cgc_memset(v6, 0, *(&v1->field_8) * 8);\n
    for (v9 = v1->field_18; v9; v9 = *((v9 + 8)))\n
    {\n
        v7 = (0 CONCAT CString::hash const(v9 + 24)) /m *(&v1->field_8) >> 64;\n
        v10 = v1->field_10;\n
        v8 = *((v10 + v7 * 8));\n
        *((v10 + v7 * 8)) = v9;\n
        *(v9) = v8;\n
    }\n
    return v10;\n
}\n
", "4231952:_ZN3mapI7CString6vectorIN9Evaluator3_OpEE4hashIS0_E8equal_toIS0_EE8_enlargeEm": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long map::_enlarge(struct_3 *a0, unsigned long a1)\n
{\n
    struct_1 *v1;  // r15\n
    unsigned long long *v2;  // rdi\n
    unsigned long v4;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    struct_0 *v9;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v10;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a0->field_8)\n
    {\n
        a0->field_8 = a1;\n
        v4 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
        v1->field_10 = v4;\n
        return cgc_memset(v4, 0, *(&v1->field_8) * 8);\n
    }\n
    v2 = a0->field_10;\n
    if (v2)\n
        operator delete[](v2);\n
    *(&v1->field_8) = a1;\n
    v6 = operator new[](([D] amd64g_calculate_condition(0x1<64>, 0x30<64>, rsi<8>, 0x8<64>, cc_ndep<8>) ? -1 : a1 * 8));\n
    v1->field_10 = v6;\n
    v10 = cgc_memset(v6, 0, *(&v1->field_8) * 8);\n
    for (v9 = v1->field_18; v9; v9 = *((v9 + 8)))\n
    {\n
        v7 = (0 CONCAT CString::hash const(v9 + 24)) /m *(&v1->field_8) >> 64;\n
        v10 = v1->field_10;\n
        v8 = *((v10 + v7 * 8));\n
        *((v10 + v7 * 8)) = v9;\n
        *(v9) = v8;\n
    }\n
    return v10;\n
}\n
", "4232146:_ZNK3mapI7CString4pairIPFbPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS8_ES2_E4hashIS0_E8equal_toIS0_EE5_findERKS0_": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[16];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[16];\n
    char *field_18;\n
} struct_0;\n
\n
long long map::_find const(unsigned long long a0[3], char **a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = *((a0[2] + ((0 CONCAT CString::hash const(a1)) /m a0[1] >> 64) * 8));\n
    if (!v4)\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(*(a1), *((v4 + 24))))\n
            return v4;\n
        v4 = *(v4);\n
        if (!v4)\n
            return 0;\n
    }\n
}\n
", "4232238:_ZN3mapI7CString4pairIPFbPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS8_ES2_E4hashIS0_E8equal_toIS0_EE7_insertERKS0_": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_2 *field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    uint128_t field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long map::_insert(struct_1 *a0, unsigned long long a1[2])\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned long long v3[2];  // r15\n
    struct_1 *v4;  // r14\n
    unsigned long v5;  // rsi\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rbx\n
    unsigned long long v8[2];  // r15\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rdx\n
    unsigned long long *v11;  // rax\n
    unsigned long long v12;  // rcx\n
\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = a0->field_8 * 2;\n
    if (a0->field_0 * 3 >= v5)\n
        map::_enlarge(a0, v5);\n
    v6 = operator new(56);\n
    v7 = v6;\n
    v1 = 0;\n
    v0 = v3[0];\n
    if (v3[1])\n
        CString::ensure(&v0);\n
    v8 = &(&v6->field_10)[1];\n
    *(&(&v6->field_10)[1]) = 0;\n
    CString::operator=(v8, &v0);\n
    v9 = v1;\n
    if (v9)\n
        operator delete[](v9);\n
    v6->field_10 = 0;\n
    v6->field_8 = v4->field_18;\n
    v4->field_18 = v6;\n
    v10 = (0 CONCAT CString::hash const(v8)) /m v4->field_8 >> 64;\n
    v11 = v4->field_10;\n
    v12 = v11[v10];\n
    v11[v10] = v7;\n
    v7->field_0 = v12;\n
    v4->field_0 = v4->field_0 + 1;\n
    return v7;\n
}\n
", "4232441:sub_4094f9": null, "4232442:_ZNK3mapI7CString6vectorIN9Evaluator3_OpEE4hashIS0_E8equal_toIS0_EE5_findERKS0_": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[16];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[16];\n
    char *field_18;\n
} struct_0;\n
\n
long long map::_find const(unsigned long long a0[3], char **a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v4 = *((a0[2] + ((0 CONCAT CString::hash const(a1)) /m a0[1] >> 64) * 8));\n
    if (!v4)\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(*(a1), *((v4 + 24))))\n
            return v4;\n
        v4 = *(v4);\n
        if (!v4)\n
            return 0;\n
    }\n
}\n
", "4232534:_ZN3mapI7CString6vectorIN9Evaluator3_OpEE4hashIS0_E8equal_toIS0_EE7_insertERKS0_": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_2 *field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long map::_insert(struct_1 *a0, unsigned long long a1[2])\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned long long v3[2];  // r15\n
    struct_1 *v4;  // r14\n
    unsigned long v5;  // rsi\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rbx\n
    unsigned long long v8[2];  // r15\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rdx\n
    unsigned long long *v11;  // rax\n
    unsigned long long v12;  // rcx\n
\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = a0->field_8 * 2;\n
    if (a0->field_0 * 3 >= v5)\n
        map::_enlarge(a0, v5);\n
    v6 = operator new(56);\n
    v7 = v6;\n
    v1 = 0;\n
    v0 = v3[0];\n
    if (v3[1])\n
        CString::ensure(&v0);\n
    v8 = &(&v6->field_10)[1];\n
    *(&(&v6->field_10)[1]) = 0;\n
    *((&v6->field_18 + 8)) = 0;\n
    CString::operator=(v8, &v0);\n
    v9 = v1;\n
    if (v9)\n
        operator delete[](v9);\n
    v6->field_10 = 0;\n
    v6->field_8 = v4->field_18;\n
    v4->field_18 = v6;\n
    v10 = (0 CONCAT CString::hash const(v8)) /m v4->field_8 >> 64;\n
    v11 = v4->field_10;\n
    v12 = v11[v10];\n
    v11[v10] = v7;\n
    v7->field_0 = v12;\n
    v4->field_0 = v4->field_0 + 1;\n
    return v7;\n
}\n
", "4232741:sub_409625": null, "4232742:_ZN6vectorIN9Evaluator3_OpEE7enlargeEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::enlarge(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v3;  // r14d\n
    struct_0 *v4;  // r15\n
    unsigned long long v6;  // r12\n
    unsigned long long v7;  // rbx\n
    unsigned long long v8;  // r12\n
    char *v9;  // rbx, Other Possible Types: unsigned long\n
    uint128_t *v10;  // rax\n
    unsigned long long v11;  // r13\n
\n
    v0 = v2;\n
    if (a0->field_4 >= a1)\n
        return v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v6 = a1 * 16;\n
    v2 = cgc_realloc(a0->field_8, v6);\n
    v4->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_exit();\n
        v2 = v4->field_8;\n
    }\n
    v7 = v4->field_4;\n
    if (v7 < v3)\n
    {\n
        v8 = v6 + v2;\n
        v9 = v7 * 16 + v2;\n
        do\n
        {\n
            v10 = operator new(16);\n
            *(v10) = 0;\n
            v11 = v9 + 16;\n
            cgc_memcpy(v9, v10, 16);\n
            v2 = operator delete(v10);\n
            v9 = v11;\n
        } while (v11 < v8);\n
    }\n
    v4->field_4 = v3;\n
    return v2;\n
}\n
", "4232899:sub_4096c3": null, "4232900:_ZN6vectorI7CStringE7enlargeEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::enlarge(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v3;  // r14d\n
    struct_0 *v4;  // r15\n
    unsigned long long v6;  // r12\n
    unsigned long long v7;  // r13\n
    unsigned long long v8;  // r12\n
    unsigned long v9;  // r13, Other Possible Types: unsigned long long\n
    char *v10;  // rbp\n
    uint128_t *v11;  // rax\n
    unsigned long v12;  // rdi\n
\n
    v0 = v2;\n
    if (a0->field_4 >= a1)\n
        return v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v6 = a1 * 16;\n
    v2 = cgc_realloc(a0->field_8, v6);\n
    v4->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_exit();\n
        v2 = v4->field_8;\n
    }\n
    v7 = v4->field_4;\n
    if (v7 < v3)\n
    {\n
        v8 = v6 + v2;\n
        v9 = v7 * 16 + v2;\n
        do\n
        {\n
            v10 = v9;\n
            v11 = operator new(16);\n
            *(v11) = 0;\n
            v9 += 16;\n
            cgc_memcpy(v10, v11, 16);\n
            v12 = *((v11 + 8));\n
            if (v12)\n
                operator delete[](v12);\n
            v2 = operator delete(v11);\n
        } while (v9 < v8);\n
    }\n
    v4->field_4 = v3;\n
    return v2;\n
}\n
", "4233075:sub_409773": null, "4233076:_ZN6ParserC1EPKc": "long long Parser::__ctor__(unsigned long long a0[4], char *a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0[0] = a1;\n
    a0[3] = 0;\n
    v1 = cgc_strlen(a1);\n
    a0[1] = v1;\n
    return v1;\n
}\n
", "4233105:sub_409791": null, "4233106:_ZN6ParserD1Ev": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long Parser::__dtor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    if (!(!a0->field_18))\n
        goto LABEL_0x4097a0;\n
    return v1;\n
}\n
", "4233120:_ZN4Node10deleteTreeEPS_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long Node::deleteTree(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdi\n
    unsigned long v5;  // rdi\n
    struct_0 *v6;  // r14\n
    unsigned long long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a0;\n
    do\n
    {\n
        v4 = *((v3 + 16));\n
        if (v4)\n
            Node::deleteTree(v4);\n
        v5 = *(v3);\n
        v6 = *((v3 + 24));\n
        if (v5)\n
            operator delete[](v5);\n
        v7 = operator delete(v3);\n
        v3 = v6;\n
    } while (v6);\n
    return v7;\n
}\n
", "4233182:_ZN6Parser5parseEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_stderr;\n
\n
long long Parser::parse(unsigned long long a0[3])\n
{\n
    unsigned int v0;  // [bp-0x3678], Other Possible Types: char\n
    void* v1;  // [bp-0x3670], Other Possible Types: char\n
    int v2;  // [bp-0x3668]\n
    int v3;  // [bp-0x3658], Other Possible Types: void*, struct_0 *\n
    unsigned long v4;  // [bp-0x3650]\n
    void* v5;  // [bp-0x3648], Other Possible Types: unsigned long long\n
    char v6;  // [bp-0x3640], Other Possible Types: unsigned int\n
    int v7;  // [bp-0x3638], Other Possible Types: char\n
    struct_0 *v8;  // [bp-0x3628]\n
    int v9;  // [bp-0x3620]\n
    void* v10;  // [bp-0x3610]\n
    char v11;  // [bp-0x3608]\n
    char v12;  // [bp-0x3600]\n
    char v13;  // [bp-0x35f0]\n
    char v14;  // [bp-0x35e0]\n
    char v15;  // [bp-0x35d0]\n
    char v16;  // [bp-0x35c8]\n
    char v17;  // [bp-0x35b8]\n
    char v18;  // [bp-0x35a8]\n
    unsigned int v19;  // [bp-0x3598]\n
    void* v20;  // [bp-0x3590]\n
    int v21;  // [bp-0x3588]\n
    void* v22;  // [bp-0x3578]\n
    unsigned long v23;  // [bp-0x3570]\n
    unsigned long long v24;  // [bp-0x3568]\n
    char v25;  // [bp-0x3560]\n
    char v26;  // [bp-0x3558]\n
    char v27;  // [bp-0x3548]\n
    char v28;  // [bp-0x3538]\n
    unsigned int v29;  // [bp-0x3528], Other Possible Types: char\n
    void* v30;  // [bp-0x3520], Other Possible Types: char\n
    int v31;  // [bp-0x3518]\n
    void* v32;  // [bp-0x3508]\n
    unsigned long v33;  // [bp-0x3500]\n
    unsigned long long v34;  // [bp-0x34f8]\n
    char v35;  // [bp-0x34f0]\n
    char v36;  // [bp-0x34e8]\n
    char v37;  // [bp-0x34d8]\n
    char v38;  // [bp-0x34c8]\n
    char v39;  // [bp-0x34b8], Other Possible Types: unsigned int\n
    void* v40;  // [bp-0x34b0], Other Possible Types: char\n
    int v41;  // [bp-0x34a8]\n
    int v42;  // [bp-0x3498]\n
    void* v43;  // [bp-0x3488]\n
    char v44;  // [bp-0x3480]\n
    char v45;  // [bp-0x3478]\n
    char v46;  // [bp-0x3468]\n
    char v47;  // [bp-0x3458]\n
    char v48;  // [bp-0x3448], Other Possible Types: unsigned int\n
    void* v49;  // [bp-0x3440], Other Possible Types: char\n
    int v50;  // [bp-0x3438]\n
    int v51;  // [bp-0x3428]\n
    void* v52;  // [bp-0x3418]\n
    char v53;  // [bp-0x3410]\n
    char v54;  // [bp-0x3408]\n
    unsigned int v55;  // [bp-0x33d8], Other Possible Types: char\n
    void* v56;  // [bp-0x33d0], Other Possible Types: char\n
    int v57;  // [bp-0x33c8]\n
    int v58;  // [bp-0x33b8]\n
    void* v59;  // [bp-0x33a8]\n
    char v60;  // [bp-0x33a0]\n
    char v61;  // [bp-0x3398]\n
    char v62;  // [bp-0x3368]\n
    char v63;  // [bp-0x3360]\n
    char v64;  // [bp-0x3350]\n
    char v65;  // [bp-0x3340]\n
    char v66;  // [bp-0x3330]\n
    char v67;  // [bp-0x3328]\n
    char v68;  // [bp-0x32f0]\n
    char v69;  // [bp-0x32e8]\n
    char v70;  // [bp-0x32d8]\n
    char v71;  // [bp-0x32c8]\n
    unsigned int v72;  // [bp-0x32b8], Other Possible Types: char\n
    void* v73;  // [bp-0x32b0], Other Possible Types: char\n
    int v74;  // [bp-0x32a8]\n
    void* v75;  // [bp-0x3298]\n
    unsigned long v76;  // [bp-0x3290]\n
    unsigned long long v77;  // [bp-0x3288]\n
    char v78;  // [bp-0x3280]\n
    char v79;  // [bp-0x3278]\n
    char v80;  // [bp-0x3248]\n
    char v81;  // [bp-0x3240]\n
    char v82;  // [bp-0x3210]\n
    char v83;  // [bp-0x3208]\n
    char v84;  // [bp-0x31f8]\n
    char v85;  // [bp-0x31e8]\n
    char v86;  // [bp-0x31d8]\n
    char v87;  // [bp-0x31d0]\n
    char v88;  // [bp-0x31c0]\n
    char v89;  // [bp-0x31b0]\n
    char v90;  // [bp-0x31a0]\n
    char v91;  // [bp-0x3198]\n
    char v92;  // [bp-0x3188]\n
    char v93;  // [bp-0x3178]\n
    unsigned int v94;  // [bp-0x3168]\n
    void* v95;  // [bp-0x3160]\n
    int v96;  // [bp-0x3158]\n
    void* v97;  // [bp-0x3148]\n
    unsigned long v98;  // [bp-0x3140]\n
    unsigned long long v99;  // [bp-0x3138]\n
    char v100;  // [bp-0x3130]\n
    char v101;  // [bp-0x3128]\n
    unsigned int v102;  // [bp-0x30f8]\n
    void* v103;  // [bp-0x30f0]\n
    int v104;  // [bp-0x30e8]\n
    void* v105;  // [bp-0x30d8]\n
    unsigned long v106;  // [bp-0x30d0]\n
    unsigned long long v107;  // [bp-0x30c8]\n
    char v108;  // [bp-0x30c0]\n
    char v109;  // [bp-0x30b8]\n
    char v110;  // [bp-0x3088]\n
    char v111;  // [bp-0x3080]\n
    char v112;  // [bp-0x3050]\n
    char v113;  // [bp-0x3048]\n
    char v114;  // [bp-0x3018]\n
    char v115;  // [bp-0x3010]\n
    char v116;  // [bp-0x2fe0]\n
    char v117;  // [bp-0x2fd8]\n
    char v118;  // [bp-0x2fa8]\n
    char v119;  // [bp-0x2fa0]\n
    unsigned int v120;  // [bp-0x2f70]\n
    void* v121;  // [bp-0x2f68]\n
    int v122;  // [bp-0x2f60]\n
    void* v123;  // [bp-0x2f50]\n
    unsigned long v124;  // [bp-0x2f48]\n
    unsigned long long v125;  // [bp-0x2f40]\n
    unsigned int v126;  // [bp-0x2f38]\n
    char v127;  // [bp-0x2f30]\n
    int v128;  // [bp-0x2f20]\n
    int v129;  // [bp-0x2f10]\n
    unsigned int v130;  // [bp-0x2f00]\n
    char v131;  // [bp-0x2ef8]\n
    int v132;  // [bp-0x2ee8]\n
    int v133;  // [bp-0x2ed8]\n
    unsigned int v134;  // [bp-0x2ec8]\n
    char v135;  // [bp-0x2ec0]\n
    int v136;  // [bp-0x2eb0]\n
    int v137;  // [bp-0x2ea0]\n
    unsigned int v138;  // [bp-0x2e90]\n
    void* v139;  // [bp-0x2e88]\n
    int v140;  // [bp-0x2e80]\n
    void* v141;  // [bp-0x2e70]\n
    unsigned long v142;  // [bp-0x2e68]\n
    unsigned long v143;  // [bp-0x2e60]\n
    unsigned int v144;  // [bp-0x2e58]\n
    void* v145;  // [bp-0x2e50]\n
    int v146;  // [bp-0x2e48]\n
    void* v147;  // [bp-0x2e38]\n
    unsigned long v148;  // [bp-0x2e30]\n
    unsigned long v149;  // [bp-0x2e28]\n
    unsigned int v150;  // [bp-0x2e20]\n
    char v151;  // [bp-0x2e18]\n
    int v152;  // [bp-0x2e08]\n
    int v153;  // [bp-0x2df8]\n
    unsigned int v154;  // [bp-0x2de8]\n
    char v155;  // [bp-0x2de0]\n
    int v156;  // [bp-0x2dd0]\n
    int v157;  // [bp-0x2dc0]\n
    unsigned int v158;  // [bp-0x2db0]\n
    char v159;  // [bp-0x2da8]\n
    int v160;  // [bp-0x2d98]\n
    int v161;  // [bp-0x2d88]\n
    unsigned int v162;  // [bp-0x2d78]\n
    void* v163;  // [bp-0x2d70]\n
    int v164;  // [bp-0x2d68]\n
    void* v165;  // [bp-0x2d58]\n
    unsigned long v166;  // [bp-0x2d50]\n
    unsigned long long v167;  // [bp-0x2d48]\n
    unsigned int v168;  // [bp-0x2d40]\n
    void* v169;  // [bp-0x2d38]\n
    int v170;  // [bp-0x2d30]\n
    void* v171;  // [bp-0x2d20]\n
    unsigned long v172;  // [bp-0x2d18]\n
    unsigned long long v173;  // [bp-0x2d10]\n
    unsigned int v174;  // [bp-0x2d08]\n
    void* v175;  // [bp-0x2d00]\n
    int v176;  // [bp-0x2cf8]\n
    void* v177;  // [bp-0x2ce8]\n
    unsigned long v178;  // [bp-0x2ce0]\n
    unsigned long v179;  // [bp-0x2cd8]\n
    unsigned int v180;  // [bp-0x2cd0]\n
    char v181;  // [bp-0x2cc8]\n
    int v182;  // [bp-0x2cb8]\n
    int v183;  // [bp-0x2ca8]\n
    unsigned int v184;  // [bp-0x2c98]\n
    int v185;  // [bp-0x2c90]\n
    struct_0 *v186;  // [bp-0x2c80]\n
    int v187;  // [bp-0x2c78]\n
    void* v188;  // [bp-0x2c68]\n
    unsigned int v189;  // [bp-0x2c60]\n
    char v190;  // [bp-0x2c58]\n
    int v191;  // [bp-0x2c48]\n
    int v192;  // [bp-0x2c38]\n
    unsigned int v193;  // [bp-0x2c28]\n
    void* v194;  // [bp-0x2c20]\n
    int v195;  // [bp-0x2c18]\n
    void* v196;  // [bp-0x2c08]\n
    unsigned long v197;  // [bp-0x2c00]\n
    unsigned long long v198;  // [bp-0x2bf8]\n
    unsigned int v199;  // [bp-0x2bf0]\n
    void* v200;  // [bp-0x2be8]\n
    int v201;  // [bp-0x2be0]\n
    void* v202;  // [bp-0x2bd0]\n
    unsigned long v203;  // [bp-0x2bc8]\n
    unsigned long v204;  // [bp-0x2bc0]\n
    unsigned int v205;  // [bp-0x2bb8]\n
    char v206;  // [bp-0x2bb0]\n
    int v207;  // [bp-0x2ba0]\n
    int v208;  // [bp-0x2b90]\n
    unsigned int v209;  // [bp-0x2b80]\n
    int v210;  // [bp-0x2b78]\n
    struct_0 *v211;  // [bp-0x2b68]\n
    int v212;  // [bp-0x2b60]\n
    void* v213;  // [bp-0x2b50]\n
    unsigned int v214;  // [bp-0x2b48]\n
    char v215;  // [bp-0x2b40]\n
    int v216;  // [bp-0x2b30]\n
    int v217;  // [bp-0x2b20]\n
    unsigned int v218;  // [bp-0x2b10]\n
    void* v219;  // [bp-0x2b08]\n
    int v220;  // [bp-0x2b00]\n
    void* v221;  // [bp-0x2af0]\n
    unsigned long v222;  // [bp-0x2ae8]\n
    unsigned long long v223;  // [bp-0x2ae0]\n
    unsigned int v224;  // [bp-0x2ad8]\n
    void* v225;  // [bp-0x2ad0]\n
    int v226;  // [bp-0x2ac8]\n
    void* v227;  // [bp-0x2ab8]\n
    unsigned long v228;  // [bp-0x2ab0]\n
    unsigned long v229;  // [bp-0x2aa8]\n
    unsigned int v230;  // [bp-0x2aa0]\n
    char v231;  // [bp-0x2a98]\n
    int v232;  // [bp-0x2a88]\n
    int v233;  // [bp-0x2a78]\n
    unsigned int v234;  // [bp-0x2a68]\n
    int v235;  // [bp-0x2a60]\n
    struct_0 *v236;  // [bp-0x2a50]\n
    int v237;  // [bp-0x2a48]\n
    void* v238;  // [bp-0x2a38]\n
    unsigned int v239;  // [bp-0x2a30]\n
    char v240;  // [bp-0x2a28]\n
    int v241;  // [bp-0x2a18]\n
    int v242;  // [bp-0x2a08]\n
    unsigned int v243;  // [bp-0x29f8]\n
    void* v244;  // [bp-0x29f0]\n
    int v245;  // [bp-0x29e8]\n
    void* v246;  // [bp-0x29d8]\n
    unsigned long v247;  // [bp-0x29d0]\n
    unsigned long long v248;  // [bp-0x29c8]\n
    unsigned int v249;  // [bp-0x29c0]\n
    void* v250;  // [bp-0x29b8]\n
    int v251;  // [bp-0x29b0]\n
    void* v252;  // [bp-0x29a0]\n
    unsigned long v253;  // [bp-0x2998]\n
    unsigned long long v254;  // [bp-0x2990]\n
    unsigned int v255;  // [bp-0x2988]\n
    char v256;  // [bp-0x2980]\n
    int v257;  // [bp-0x2970]\n
    int v258;  // [bp-0x2960]\n
    unsigned int v259;  // [bp-0x2950]\n
    char v260;  // [bp-0x2948]\n
    int v261;  // [bp-0x2938]\n
    int v262;  // [bp-0x2928]\n
    unsigned int v263;  // [bp-0x2918]\n
    void* v264;  // [bp-0x2910]\n
    int v265;  // [bp-0x2908]\n
    void* v266;  // [bp-0x28f8]\n
    unsigned long v267;  // [bp-0x28f0]\n
    unsigned long long v268;  // [bp-0x28e8]\n
    unsigned int v269;  // [bp-0x28e0]\n
    int v270;  // [bp-0x28d8]\n
    struct_0 *v271;  // [bp-0x28c8]\n
    int v272;  // [bp-0x28c0]\n
    void* v273;  // [bp-0x28b0]\n
    unsigned int v274;  // [bp-0x28a8]\n
    char v275;  // [bp-0x28a0]\n
    int v276;  // [bp-0x2890]\n
    int v277;  // [bp-0x2880]\n
    unsigned int v278;  // [bp-0x2870]\n
    void* v279;  // [bp-0x2868]\n
    int v280;  // [bp-0x2860]\n
    void* v281;  // [bp-0x2850]\n
    unsigned long v282;  // [bp-0x2848]\n
    unsigned long long v283;  // [bp-0x2840]\n
    unsigned int v284;  // [bp-0x2838]\n
    char v285;  // [bp-0x2830]\n
    int v286;  // [bp-0x2820]\n
    int v287;  // [bp-0x2810]\n
    unsigned int v288;  // [bp-0x2800]\n
    char v289;  // [bp-0x27f8]\n
    int v290;  // [bp-0x27e8]\n
    int v291;  // [bp-0x27d8]\n
    unsigned int v292;  // [bp-0x27c8]\n
    char v293;  // [bp-0x27c0]\n
    int v294;  // [bp-0x27b0]\n
    int v295;  // [bp-0x27a0]\n
    unsigned int v296;  // [bp-0x2790]\n
    void* v297;  // [bp-0x2788]\n
    int v298;  // [bp-0x2780]\n
    void* v299;  // [bp-0x2770]\n
    unsigned long v300;  // [bp-0x2768]\n
    unsigned long v301;  // [bp-0x2760]\n
    unsigned int v302;  // [bp-0x2758]\n
    char v303;  // [bp-0x2750]\n
    int v304;  // [bp-0x2740]\n
    int v305;  // [bp-0x2730]\n
    unsigned int v306;  // [bp-0x2720]\n
    char v307;  // [bp-0x2718]\n
    int v308;  // [bp-0x2708]\n
    int v309;  // [bp-0x26f8]\n
    unsigned int v310;  // [bp-0x26e8]\n
    int v311;  // [bp-0x26e0]\n
    struct_0 *v312;  // [bp-0x26d0]\n
    int v313;  // [bp-0x26c8]\n
    void* v314;  // [bp-0x26b8]\n
    unsigned int v315;  // [bp-0x26b0]\n
    char v316;  // [bp-0x26a8]\n
    int v317;  // [bp-0x2698]\n
    int v318;  // [bp-0x2688]\n
    unsigned int v319;  // [bp-0x2678]\n
    void* v320;  // [bp-0x2670]\n
    int v321;  // [bp-0x2668]\n
    void* v322;  // [bp-0x2658]\n
    unsigned long v323;  // [bp-0x2650]\n
    unsigned long long v324;  // [bp-0x2648]\n
    unsigned int v325;  // [bp-0x2640]\n
    int v326;  // [bp-0x2638]\n
    struct_0 *v327;  // [bp-0x2628]\n
    int v328;  // [bp-0x2620]\n
    void* v329;  // [bp-0x2610]\n
    unsigned int v330;  // [bp-0x2608]\n
    char v331;  // [bp-0x2600]\n
    int v332;  // [bp-0x25f0]\n
    int v333;  // [bp-0x25e0]\n
    unsigned int v334;  // [bp-0x25d0]\n
    char v335;  // [bp-0x25c8]\n
    int v336;  // [bp-0x25b8]\n
    int v337;  // [bp-0x25a8]\n
    unsigned int v338;  // [bp-0x2598]\n
    int v339;  // [bp-0x2590]\n
    struct_0 *v340;  // [bp-0x2580]\n
    int v341;  // [bp-0x2578]\n
    void* v342;  // [bp-0x2568]\n
    unsigned int v343;  // [bp-0x2560]\n
    char v344;  // [bp-0x2558]\n
    int v345;  // [bp-0x2548]\n
    int v346;  // [bp-0x2538]\n
    unsigned int v347;  // [bp-0x2528]\n
    int v348;  // [bp-0x2520]\n
    struct_0 *v349;  // [bp-0x2510]\n
    int v350;  // [bp-0x2508]\n
    void* v351;  // [bp-0x24f8]\n
    unsigned int v352;  // [bp-0x24f0]\n
    void* v353;  // [bp-0x24e8]\n
    int v354;  // [bp-0x24e0]\n
    void* v355;  // [bp-0x24d0]\n
    unsigned long v356;  // [bp-0x24c8]\n
    unsigned long long v357;  // [bp-0x24c0]\n
    unsigned int v358;  // [bp-0x24b8]\n
    char v359;  // [bp-0x24b0]\n
    int v360;  // [bp-0x24a0]\n
    int v361;  // [bp-0x2490]\n
    unsigned int v362;  // [bp-0x2480]\n
    int v363;  // [bp-0x2478]\n
    struct_0 *v364;  // [bp-0x2468]\n
    int v365;  // [bp-0x2460]\n
    void* v366;  // [bp-0x2450]\n
    unsigned int v367;  // [bp-0x2448]\n
    char v368;  // [bp-0x2440]\n
    int v369;  // [bp-0x2430]\n
    int v370;  // [bp-0x2420]\n
    unsigned int v371;  // [bp-0x2410]\n
    void* v372;  // [bp-0x2408]\n
    int v373;  // [bp-0x2400]\n
    void* v374;  // [bp-0x23f0]\n
    unsigned long v375;  // [bp-0x23e8]\n
    unsigned long long v376;  // [bp-0x23e0]\n
    unsigned int v377;  // [bp-0x23d8]\n
    void* v378;  // [bp-0x23d0]\n
    int v379;  // [bp-0x23c8]\n
    void* v380;  // [bp-0x23b8]\n
    unsigned long v381;  // [bp-0x23b0]\n
    unsigned long long v382;  // [bp-0x23a8]\n
    unsigned int v383;  // [bp-0x23a0]\n
    char v384;  // [bp-0x2398]\n
    int v385;  // [bp-0x2388]\n
    int v386;  // [bp-0x2378]\n
    unsigned int v387;  // [bp-0x2368]\n
    char v388;  // [bp-0x2360]\n
    int v389;  // [bp-0x2350]\n
    int v390;  // [bp-0x2340]\n
    unsigned int v391;  // [bp-0x2330]\n
    char v392;  // [bp-0x2328]\n
    int v393;  // [bp-0x2318]\n
    int v394;  // [bp-0x2308]\n
    unsigned int v395;  // [bp-0x22f8]\n
    char v396;  // [bp-0x22f0]\n
    int v397;  // [bp-0x22e0]\n
    int v398;  // [bp-0x22d0]\n
    unsigned int v399;  // [bp-0x22c0]\n
    void* v400;  // [bp-0x22b8]\n
    int v401;  // [bp-0x22b0]\n
    void* v402;  // [bp-0x22a0]\n
    unsigned long v403;  // [bp-0x2298]\n
    unsigned long long v404;  // [bp-0x2290]\n
    unsigned int v405;  // [bp-0x2288]\n
    void* v406;  // [bp-0x2280]\n
    int v407;  // [bp-0x2278]\n
    void* v408;  // [bp-0x2268]\n
    unsigned long v409;  // [bp-0x2260]\n
    unsigned long long v410;  // [bp-0x2258]\n
    unsigned int v411;  // [bp-0x2250]\n
    void* v412;  // [bp-0x2248]\n
    int v413;  // [bp-0x2240]\n
    void* v414;  // [bp-0x2230]\n
    unsigned long v415;  // [bp-0x2228]\n
    unsigned long long v416;  // [bp-0x2220]\n
    unsigned int v417;  // [bp-0x2218]\n
    void* v418;  // [bp-0x2210]\n
    int v419;  // [bp-0x2208]\n
    void* v420;  // [bp-0x21f8]\n
    unsigned long v421;  // [bp-0x21f0]\n
    unsigned long long v422;  // [bp-0x21e8]\n
    unsigned int v423;  // [bp-0x21e0]\n
    void* v424;  // [bp-0x21d8]\n
    int v425;  // [bp-0x21d0]\n
    void* v426;  // [bp-0x21c0]\n
    unsigned long v427;  // [bp-0x21b8]\n
    unsigned long long v428;  // [bp-0x21b0]\n
    unsigned int v429;  // [bp-0x21a8]\n
    void* v430;  // [bp-0x21a0]\n
    int v431;  // [bp-0x2198]\n
    void* v432;  // [bp-0x2188]\n
    unsigned long v433;  // [bp-0x2180]\n
    unsigned long long v434;  // [bp-0x2178]\n
    unsigned int v435;  // [bp-0x2170]\n
    void* v436;  // [bp-0x2168]\n
    int v437;  // [bp-0x2160]\n
    void* v438;  // [bp-0x2150]\n
    unsigned long v439;  // [bp-0x2148]\n
    unsigned long long v440;  // [bp-0x2140]\n
    unsigned int v441;  // [bp-0x2138]\n
    void* v442;  // [bp-0x2130]\n
    int v443;  // [bp-0x2128]\n
    void* v444;  // [bp-0x2118]\n
    unsigned long v445;  // [bp-0x2110]\n
    unsigned long long v446;  // [bp-0x2108]\n
    unsigned int v447;  // [bp-0x2100]\n
    void* v448;  // [bp-0x20f8]\n
    int v449;  // [bp-0x20f0]\n
    void* v450;  // [bp-0x20e0]\n
    unsigned long v451;  // [bp-0x20d8]\n
    unsigned long long v452;  // [bp-0x20d0]\n
    unsigned int v453;  // [bp-0x20c8]\n
    void* v454;  // [bp-0x20c0]\n
    int v455;  // [bp-0x20b8]\n
    void* v456;  // [bp-0x20a8]\n
    unsigned long v457;  // [bp-0x20a0]\n
    unsigned long long v458;  // [bp-0x2098]\n
    unsigned int v459;  // [bp-0x2090]\n
    void* v460;  // [bp-0x2088]\n
    int v461;  // [bp-0x2080]\n
    void* v462;  // [bp-0x2070]\n
    unsigned long v463;  // [bp-0x2068]\n
    unsigned long long v464;  // [bp-0x2060]\n
    unsigned int v465;  // [bp-0x2058]\n
    void* v466;  // [bp-0x2050]\n
    int v467;  // [bp-0x2048]\n
    void* v468;  // [bp-0x2038]\n
    unsigned long v469;  // [bp-0x2030]\n
    unsigned long long v470;  // [bp-0x2028]\n
    unsigned int v471;  // [bp-0x2020]\n
    void* v472;  // [bp-0x2018]\n
    int v473;  // [bp-0x2010]\n
    void* v474;  // [bp-0x2000]\n
    unsigned long v475;  // [bp-0x1ff8]\n
    unsigned long long v476;  // [bp-0x1ff0]\n
    unsigned int v477;  // [bp-0x1fe8]\n
    void* v478;  // [bp-0x1fe0]\n
    int v479;  // [bp-0x1fd8]\n
    void* v480;  // [bp-0x1fc8]\n
    unsigned long v481;  // [bp-0x1fc0]\n
    unsigned long long v482;  // [bp-0x1fb8]\n
    unsigned int v483;  // [bp-0x1fb0]\n
    void* v484;  // [bp-0x1fa8]\n
    int v485;  // [bp-0x1fa0]\n
    void* v486;  // [bp-0x1f90]\n
    unsigned long v487;  // [bp-0x1f88]\n
    unsigned long long v488;  // [bp-0x1f80]\n
    unsigned int v489;  // [bp-0x1f78]\n
    void* v490;  // [bp-0x1f70]\n
    int v491;  // [bp-0x1f68]\n
    void* v492;  // [bp-0x1f58]\n
    unsigned long v493;  // [bp-0x1f50]\n
    unsigned long long v494;  // [bp-0x1f48]\n
    unsigned int v495;  // [bp-0x1f40]\n
    void* v496;  // [bp-0x1f38]\n
    int v497;  // [bp-0x1f30]\n
    void* v498;  // [bp-0x1f20]\n
    unsigned long v499;  // [bp-0x1f18]\n
    unsigned long long v500;  // [bp-0x1f10]\n
    unsigned int v501;  // [bp-0x1f08]\n
    void* v502;  // [bp-0x1f00]\n
    int v503;  // [bp-0x1ef8]\n
    void* v504;  // [bp-0x1ee8]\n
    unsigned long v505;  // [bp-0x1ee0]\n
    unsigned long long v506;  // [bp-0x1ed8]\n
    unsigned int v507;  // [bp-0x1ed0]\n
    void* v508;  // [bp-0x1ec8]\n
    int v509;  // [bp-0x1ec0]\n
    void* v510;  // [bp-0x1eb0]\n
    unsigned long v511;  // [bp-0x1ea8]\n
    unsigned long long v512;  // [bp-0x1ea0]\n
    unsigned int v513;  // [bp-0x1e98]\n
    void* v514;  // [bp-0x1e90]\n
    int v515;  // [bp-0x1e88]\n
    void* v516;  // [bp-0x1e78]\n
    unsigned long v517;  // [bp-0x1e70]\n
    unsigned long long v518;  // [bp-0x1e68]\n
    unsigned int v519;  // [bp-0x1e60]\n
    void* v520;  // [bp-0x1e58]\n
    int v521;  // [bp-0x1e50]\n
    void* v522;  // [bp-0x1e40]\n
    unsigned long v523;  // [bp-0x1e38]\n
    unsigned long long v524;  // [bp-0x1e30]\n
    unsigned int v525;  // [bp-0x1e28]\n
    void* v526;  // [bp-0x1e20]\n
    int v527;  // [bp-0x1e18]\n
    void* v528;  // [bp-0x1e08]\n
    unsigned long v529;  // [bp-0x1e00]\n
    unsigned long long v530;  // [bp-0x1df8]\n
    unsigned int v531;  // [bp-0x1df0]\n
    void* v532;  // [bp-0x1de8]\n
    int v533;  // [bp-0x1de0]\n
    void* v534;  // [bp-0x1dd0]\n
    unsigned long v535;  // [bp-0x1dc8]\n
    unsigned long long v536;  // [bp-0x1dc0]\n
    unsigned int v537;  // [bp-0x1db8]\n
    void* v538;  // [bp-0x1db0]\n
    int v539;  // [bp-0x1da8]\n
    void* v540;  // [bp-0x1d98]\n
    unsigned long v541;  // [bp-0x1d90]\n
    unsigned long long v542;  // [bp-0x1d88]\n
    unsigned int v543;  // [bp-0x1d80]\n
    void* v544;  // [bp-0x1d78]\n
    int v545;  // [bp-0x1d70]\n
    void* v546;  // [bp-0x1d60]\n
    unsigned long v547;  // [bp-0x1d58]\n
    unsigned long long v548;  // [bp-0x1d50]\n
    unsigned int v549;  // [bp-0x1d48]\n
    void* v550;  // [bp-0x1d40]\n
    int v551;  // [bp-0x1d38]\n
    void* v552;  // [bp-0x1d28]\n
    unsigned long v553;  // [bp-0x1d20]\n
    unsigned long long v554;  // [bp-0x1d18]\n
    unsigned int v555;  // [bp-0x1d10]\n
    void* v556;  // [bp-0x1d08]\n
    int v557;  // [bp-0x1d00]\n
    void* v558;  // [bp-0x1cf0]\n
    unsigned long v559;  // [bp-0x1ce8]\n
    unsigned long long v560;  // [bp-0x1ce0]\n
    unsigned int v561;  // [bp-0x1cd8]\n
    void* v562;  // [bp-0x1cd0]\n
    int v563;  // [bp-0x1cc8]\n
    void* v564;  // [bp-0x1cb8]\n
    unsigned long v565;  // [bp-0x1cb0]\n
    unsigned long long v566;  // [bp-0x1ca8]\n
    unsigned int v567;  // [bp-0x1ca0]\n
    void* v568;  // [bp-0x1c98]\n
    int v569;  // [bp-0x1c90]\n
    void* v570;  // [bp-0x1c80]\n
    unsigned long v571;  // [bp-0x1c78]\n
    unsigned long long v572;  // [bp-0x1c70]\n
    unsigned int v573;  // [bp-0x1c68]\n
    void* v574;  // [bp-0x1c60]\n
    int v575;  // [bp-0x1c58]\n
    void* v576;  // [bp-0x1c48]\n
    unsigned long v577;  // [bp-0x1c40]\n
    unsigned long long v578;  // [bp-0x1c38]\n
    unsigned int v579;  // [bp-0x1c30]\n
    void* v580;  // [bp-0x1c28]\n
    int v581;  // [bp-0x1c20]\n
    void* v582;  // [bp-0x1c10]\n
    unsigned long v583;  // [bp-0x1c08]\n
    unsigned long long v584;  // [bp-0x1c00]\n
    unsigned int v585;  // [bp-0x1bf8]\n
    void* v586;  // [bp-0x1bf0]\n
    int v587;  // [bp-0x1be8]\n
    void* v588;  // [bp-0x1bd8]\n
    unsigned long v589;  // [bp-0x1bd0]\n
    unsigned long long v590;  // [bp-0x1bc8]\n
    unsigned int v591;  // [bp-0x1bc0]\n
    void* v592;  // [bp-0x1bb8]\n
    int v593;  // [bp-0x1bb0]\n
    void* v594;  // [bp-0x1ba0]\n
    unsigned long v595;  // [bp-0x1b98]\n
    unsigned long long v596;  // [bp-0x1b90]\n
    unsigned int v597;  // [bp-0x1b88]\n
    void* v598;  // [bp-0x1b80]\n
    int v599;  // [bp-0x1b78]\n
    void* v600;  // [bp-0x1b68]\n
    unsigned long v601;  // [bp-0x1b60]\n
    unsigned long long v602;  // [bp-0x1b58]\n
    unsigned int v603;  // [bp-0x1b50]\n
    void* v604;  // [bp-0x1b48]\n
    int v605;  // [bp-0x1b40]\n
    void* v606;  // [bp-0x1b30]\n
    unsigned long v607;  // [bp-0x1b28]\n
    unsigned long long v608;  // [bp-0x1b20]\n
    unsigned int v609;  // [bp-0x1b18]\n
    void* v610;  // [bp-0x1b10]\n
    int v611;  // [bp-0x1b08]\n
    void* v612;  // [bp-0x1af8]\n
    unsigned long v613;  // [bp-0x1af0]\n
    unsigned long long v614;  // [bp-0x1ae8]\n
    unsigned int v615;  // [bp-0x1ae0]\n
    void* v616;  // [bp-0x1ad8]\n
    int v617;  // [bp-0x1ad0]\n
    void* v618;  // [bp-0x1ac0]\n
    unsigned long v619;  // [bp-0x1ab8]\n
    unsigned long long v620;  // [bp-0x1ab0]\n
    unsigned int v621;  // [bp-0x1aa8]\n
    void* v622;  // [bp-0x1aa0]\n
    int v623;  // [bp-0x1a98]\n
    void* v624;  // [bp-0x1a88]\n
    unsigned long v625;  // [bp-0x1a80]\n
    unsigned long long v626;  // [bp-0x1a78]\n
    unsigned int v627;  // [bp-0x1a70]\n
    void* v628;  // [bp-0x1a68]\n
    int v629;  // [bp-0x1a60]\n
    void* v630;  // [bp-0x1a50]\n
    unsigned long v631;  // [bp-0x1a48]\n
    unsigned long long v632;  // [bp-0x1a40]\n
    unsigned int v633;  // [bp-0x1a38]\n
    void* v634;  // [bp-0x1a30]\n
    int v635;  // [bp-0x1a28]\n
    void* v636;  // [bp-0x1a18]\n
    unsigned long v637;  // [bp-0x1a10]\n
    unsigned long long v638;  // [bp-0x1a08]\n
    unsigned int v639;  // [bp-0x1a00]\n
    void* v640;  // [bp-0x19f8]\n
    int v641;  // [bp-0x19f0]\n
    void* v642;  // [bp-0x19e0]\n
    unsigned long v643;  // [bp-0x19d8]\n
    unsigned long long v644;  // [bp-0x19d0]\n
    unsigned int v645;  // [bp-0x19c8]\n
    void* v646;  // [bp-0x19c0]\n
    int v647;  // [bp-0x19b8]\n
    void* v648;  // [bp-0x19a8]\n
    unsigned long v649;  // [bp-0x19a0]\n
    unsigned long long v650;  // [bp-0x1998]\n
    unsigned int v651;  // [bp-0x1990]\n
    void* v652;  // [bp-0x1988]\n
    int v653;  // [bp-0x1980]\n
    void* v654;  // [bp-0x1970]\n
    unsigned long v655;  // [bp-0x1968]\n
    unsigned long long v656;  // [bp-0x1960]\n
    unsigned int v657;  // [bp-0x1958]\n
    void* v658;  // [bp-0x1950]\n
    int v659;  // [bp-0x1948]\n
    void* v660;  // [bp-0x1938]\n
    unsigned long v661;  // [bp-0x1930]\n
    unsigned long long v662;  // [bp-0x1928]\n
    unsigned int v663;  // [bp-0x1920]\n
    void* v664;  // [bp-0x1918]\n
    int v665;  // [bp-0x1910]\n
    void* v666;  // [bp-0x1900]\n
    unsigned long v667;  // [bp-0x18f8]\n
    unsigned long long v668;  // [bp-0x18f0]\n
    unsigned int v669;  // [bp-0x18e8]\n
    void* v670;  // [bp-0x18e0]\n
    int v671;  // [bp-0x18d8]\n
    void* v672;  // [bp-0x18c8]\n
    unsigned long v673;  // [bp-0x18c0]\n
    unsigned long long v674;  // [bp-0x18b8]\n
    unsigned int v675;  // [bp-0x18b0]\n
    void* v676;  // [bp-0x18a8]\n
    int v677;  // [bp-0x18a0]\n
    void* v678;  // [bp-0x1890]\n
    unsigned long v679;  // [bp-0x1888]\n
    unsigned long long v680;  // [bp-0x1880]\n
    unsigned int v681;  // [bp-0x1878]\n
    void* v682;  // [bp-0x1870]\n
    int v683;  // [bp-0x1868]\n
    void* v684;  // [bp-0x1858]\n
    unsigned long v685;  // [bp-0x1850]\n
    unsigned long long v686;  // [bp-0x1848]\n
    unsigned int v687;  // [bp-0x1840]\n
    void* v688;  // [bp-0x1838]\n
    int v689;  // [bp-0x1830]\n
    void* v690;  // [bp-0x1820]\n
    unsigned long v691;  // [bp-0x1818]\n
    unsigned long long v692;  // [bp-0x1810]\n
    unsigned int v693;  // [bp-0x1808]\n
    void* v694;  // [bp-0x1800]\n
    int v695;  // [bp-0x17f8]\n
    void* v696;  // [bp-0x17e8]\n
    unsigned long v697;  // [bp-0x17e0]\n
    unsigned long long v698;  // [bp-0x17d8]\n
    unsigned int v699;  // [bp-0x17d0]\n
    void* v700;  // [bp-0x17c8]\n
    int v701;  // [bp-0x17c0]\n
    void* v702;  // [bp-0x17b0]\n
    unsigned long v703;  // [bp-0x17a8]\n
    unsigned long long v704;  // [bp-0x17a0]\n
    unsigned int v705;  // [bp-0x1798]\n
    void* v706;  // [bp-0x1790]\n
    int v707;  // [bp-0x1788]\n
    void* v708;  // [bp-0x1778]\n
    unsigned long v709;  // [bp-0x1770]\n
    unsigned long long v710;  // [bp-0x1768]\n
    unsigned int v711;  // [bp-0x1760]\n
    void* v712;  // [bp-0x1758]\n
    int v713;  // [bp-0x1750]\n
    void* v714;  // [bp-0x1740]\n
    unsigned long v715;  // [bp-0x1738]\n
    unsigned long long v716;  // [bp-0x1730]\n
    unsigned int v717;  // [bp-0x1728]\n
    void* v718;  // [bp-0x1720]\n
    int v719;  // [bp-0x1718]\n
    void* v720;  // [bp-0x1708]\n
    unsigned long v721;  // [bp-0x1700]\n
    unsigned long long v722;  // [bp-0x16f8]\n
    unsigned int v723;  // [bp-0x16f0]\n
    void* v724;  // [bp-0x16e8]\n
    int v725;  // [bp-0x16e0]\n
    void* v726;  // [bp-0x16d0]\n
    unsigned long v727;  // [bp-0x16c8]\n
    unsigned long long v728;  // [bp-0x16c0]\n
    unsigned int v729;  // [bp-0x16b8]\n
    void* v730;  // [bp-0x16b0]\n
    int v731;  // [bp-0x16a8]\n
    void* v732;  // [bp-0x1698]\n
    unsigned long v733;  // [bp-0x1690]\n
    unsigned long long v734;  // [bp-0x1688]\n
    unsigned int v735;  // [bp-0x1680]\n
    void* v736;  // [bp-0x1678]\n
    int v737;  // [bp-0x1670]\n
    void* v738;  // [bp-0x1660]\n
    unsigned long v739;  // [bp-0x1658]\n
    unsigned long long v740;  // [bp-0x1650]\n
    unsigned int v741;  // [bp-0x1648]\n
    void* v742;  // [bp-0x1640]\n
    int v743;  // [bp-0x1638]\n
    void* v744;  // [bp-0x1628]\n
    unsigned long v745;  // [bp-0x1620]\n
    unsigned long long v746;  // [bp-0x1618]\n
    unsigned int v747;  // [bp-0x1610]\n
    void* v748;  // [bp-0x1608]\n
    int v749;  // [bp-0x1600]\n
    void* v750;  // [bp-0x15f0]\n
    unsigned long v751;  // [bp-0x15e8]\n
    unsigned long long v752;  // [bp-0x15e0]\n
    unsigned int v753;  // [bp-0x15d8]\n
    void* v754;  // [bp-0x15d0]\n
    int v755;  // [bp-0x15c8]\n
    void* v756;  // [bp-0x15b8]\n
    unsigned long v757;  // [bp-0x15b0]\n
    unsigned long long v758;  // [bp-0x15a8]\n
    unsigned int v759;  // [bp-0x15a0]\n
    void* v760;  // [bp-0x1598]\n
    int v761;  // [bp-0x1590]\n
    void* v762;  // [bp-0x1580]\n
    unsigned long v763;  // [bp-0x1578]\n
    unsigned long long v764;  // [bp-0x1570]\n
    unsigned int v765;  // [bp-0x1568]\n
    void* v766;  // [bp-0x1560]\n
    int v767;  // [bp-0x1558]\n
    void* v768;  // [bp-0x1548]\n
    unsigned long v769;  // [bp-0x1540]\n
    unsigned long long v770;  // [bp-0x1538]\n
    unsigned int v771;  // [bp-0x1530]\n
    void* v772;  // [bp-0x1528]\n
    int v773;  // [bp-0x1520]\n
    void* v774;  // [bp-0x1510]\n
    unsigned long v775;  // [bp-0x1508]\n
    unsigned long long v776;  // [bp-0x1500]\n
    unsigned int v777;  // [bp-0x14f8]\n
    void* v778;  // [bp-0x14f0]\n
    int v779;  // [bp-0x14e8]\n
    void* v780;  // [bp-0x14d8]\n
    unsigned long v781;  // [bp-0x14d0]\n
    unsigned long long v782;  // [bp-0x14c8]\n
    unsigned int v783;  // [bp-0x14c0]\n
    void* v784;  // [bp-0x14b8]\n
    int v785;  // [bp-0x14b0]\n
    void* v786;  // [bp-0x14a0]\n
    unsigned long v787;  // [bp-0x1498]\n
    unsigned long long v788;  // [bp-0x1490]\n
    unsigned int v789;  // [bp-0x1488]\n
    void* v790;  // [bp-0x1480]\n
    int v791;  // [bp-0x1478]\n
    void* v792;  // [bp-0x1468]\n
    unsigned long v793;  // [bp-0x1460]\n
    unsigned long long v794;  // [bp-0x1458]\n
    char v795;  // [bp-0x1450]\n
    char v796;  // [bp-0x1448]\n
    unsigned int v797;  // [bp-0x1418]\n
    void* v798;  // [bp-0x1410]\n
    int v799;  // [bp-0x1408]\n
    void* v800;  // [bp-0x13f8]\n
    unsigned long v801;  // [bp-0x13f0]\n
    unsigned long long v802;  // [bp-0x13e8]\n
    char v803;  // [bp-0x13e0]\n
    char v804;  // [bp-0x13d8]\n
    unsigned int v805;  // [bp-0x13a8]\n
    void* v806;  // [bp-0x13a0]\n
    int v807;  // [bp-0x1398]\n
    void* v808;  // [bp-0x1388]\n
    unsigned long v809;  // [bp-0x1380]\n
    unsigned long long v810;  // [bp-0x1378]\n
    unsigned int v811;  // [bp-0x1370]\n
    int v812;  // [bp-0x1368]\n
    struct_0 *v813;  // [bp-0x1358]\n
    int v814;  // [bp-0x1350]\n
    void* v815;  // [bp-0x1340]\n
    unsigned int v816;  // [bp-0x1338]\n
    int v817;  // [bp-0x1330]\n
    struct_0 *v818;  // [bp-0x1320]\n
    int v819;  // [bp-0x1318]\n
    void* v820;  // [bp-0x1308]\n
    char v821;  // [bp-0x1300]\n
    char v822;  // [bp-0x12f8]\n
    unsigned int v823;  // [bp-0x12c8]\n
    void* v824;  // [bp-0x12c0]\n
    int v825;  // [bp-0x12b8]\n
    void* v826;  // [bp-0x12a8]\n
    unsigned long v827;  // [bp-0x12a0]\n
    unsigned long long v828;  // [bp-0x1298]\n
    char v829;  // [bp-0x1290]\n
    char v830;  // [bp-0x1288]\n
    char v831;  // [bp-0x1258]\n
    char v832;  // [bp-0x1250]\n
    char v833;  // [bp-0x1220]\n
    char v834;  // [bp-0x1218]\n
    char v835;  // [bp-0x11e8]\n
    char v836;  // [bp-0x11e0]\n
    char v837;  // [bp-0x11b0]\n
    char v838;  // [bp-0x11a8]\n
    char v839;  // [bp-0x1178]\n
    char v840;  // [bp-0x1170]\n
    char v841;  // [bp-0x1140]\n
    char v842;  // [bp-0x1138]\n
    char v843;  // [bp-0x1108]\n
    char v844;  // [bp-0x1100]\n
    char v845;  // [bp-0x10d0]\n
    char v846;  // [bp-0x10c8]\n
    char v847;  // [bp-0x1098]\n
    char v848;  // [bp-0x1090]\n
    char v849;  // [bp-0x1060]\n
    char v850;  // [bp-0x1058]\n
    char v851;  // [bp-0x1028]\n
    char v852;  // [bp-0x1020]\n
    char v853;  // [bp-0xff0]\n
    char v854;  // [bp-0xfe8]\n
    char v855;  // [bp-0xfb8]\n
    char v856;  // [bp-0xfb0]\n
    char v857;  // [bp-0xf80]\n
    char v858;  // [bp-0xf78]\n
    char v859;  // [bp-0xf48]\n
    char v860;  // [bp-0xf40]\n
    char v861;  // [bp-0xf10]\n
    char v862;  // [bp-0xf08]\n
    char v863;  // [bp-0xed8]\n
    char v864;  // [bp-0xed0]\n
    char v865;  // [bp-0xea0]\n
    char v866;  // [bp-0xe98]\n
    char v867;  // [bp-0xe68]\n
    char v868;  // [bp-0xe60]\n
    char v869;  // [bp-0xe30]\n
    char v870;  // [bp-0xe28]\n
    char v871;  // [bp-0xdf8]\n
    char v872;  // [bp-0xdf0]\n
    char v873;  // [bp-0xdc0]\n
    char v874;  // [bp-0xdb8]\n
    char v875;  // [bp-0xd88]\n
    char v876;  // [bp-0xd80]\n
    char v877;  // [bp-0xd50]\n
    char v878;  // [bp-0xd48]\n
    char v879;  // [bp-0xd18]\n
    char v880;  // [bp-0xd10]\n
    char v881;  // [bp-0xce0]\n
    char v882;  // [bp-0xcd8]\n
    char v883;  // [bp-0xca8]\n
    char v884;  // [bp-0xca0]\n
    unsigned int v885;  // [bp-0xc70]\n
    void* v886;  // [bp-0xc68]\n
    int v887;  // [bp-0xc60]\n
    void* v888;  // [bp-0xc50]\n
    unsigned long v889;  // [bp-0xc48]\n
    unsigned long v890;  // [bp-0xc40]\n
    unsigned int v891;  // [bp-0xc38]\n
    char v892;  // [bp-0xc30]\n
    int v893;  // [bp-0xc20]\n
    int v894;  // [bp-0xc10]\n
    unsigned int v895;  // [bp-0xc00]\n
    char v896;  // [bp-0xbf8]\n
    int v897;  // [bp-0xbe8]\n
    int v898;  // [bp-0xbd8]\n
    unsigned int v899;  // [bp-0xbc8]\n
    void* v900;  // [bp-0xbc0]\n
    int v901;  // [bp-0xbb8]\n
    void* v902;  // [bp-0xba8]\n
    unsigned long v903;  // [bp-0xba0]\n
    unsigned long v904;  // [bp-0xb98]\n
    unsigned int v905;  // [bp-0xb90]\n
    char v906;  // [bp-0xb88]\n
    int v907;  // [bp-0xb78]\n
    int v908;  // [bp-0xb68]\n
    unsigned int v909;  // [bp-0xb58]\n
    char v910;  // [bp-0xb50]\n
    int v911;  // [bp-0xb40]\n
    int v912;  // [bp-0xb30]\n
    unsigned int v913;  // [bp-0xb20]\n
    char v914;  // [bp-0xb18]\n
    int v915;  // [bp-0xb08]\n
    int v916;  // [bp-0xaf8]\n
    unsigned int v917;  // [bp-0xae8]\n
    void* v918;  // [bp-0xae0]\n
    int v919;  // [bp-0xad8]\n
    void* v920;  // [bp-0xac8]\n
    unsigned long v921;  // [bp-0xac0]\n
    unsigned long v922;  // [bp-0xab8]\n
    unsigned int v923;  // [bp-0xab0]\n
    void* v924;  // [bp-0xaa8]\n
    int v925;  // [bp-0xaa0]\n
    void* v926;  // [bp-0xa90]\n
    unsigned long v927;  // [bp-0xa88]\n
    unsigned long v928;  // [bp-0xa80]\n
    unsigned int v929;  // [bp-0xa78]\n
    char v930;  // [bp-0xa70]\n
    int v931;  // [bp-0xa60]\n
    int v932;  // [bp-0xa50]\n
    unsigned int v933;  // [bp-0xa40]\n
    char v934;  // [bp-0xa38]\n
    int v935;  // [bp-0xa28]\n
    int v936;  // [bp-0xa18]\n
    unsigned int v937;  // [bp-0xa08]\n
    char v938;  // [bp-0xa00]\n
    int v939;  // [bp-0x9f0]\n
    int v940;  // [bp-0x9e0]\n
    unsigned int v941;  // [bp-0x9d0]\n
    int v942;  // [bp-0x9c8]\n
    struct_0 *v943;  // [bp-0x9b8]\n
    int v944;  // [bp-0x9b0]\n
    void* v945;  // [bp-0x9a0]\n
    unsigned int v946;  // [bp-0x998]\n
    char v947;  // [bp-0x990]\n
    int v948;  // [bp-0x980]\n
    int v949;  // [bp-0x970]\n
    unsigned int v950;  // [bp-0x960]\n
    void* v951;  // [bp-0x958]\n
    int v952;  // [bp-0x950]\n
    void* v953;  // [bp-0x940]\n
    unsigned long v954;  // [bp-0x938]\n
    unsigned long v955;  // [bp-0x930]\n
    unsigned int v956;  // [bp-0x928]\n
    int v957;  // [bp-0x920]\n
    struct_0 *v958;  // [bp-0x910]\n
    int v959;  // [bp-0x908]\n
    void* v960;  // [bp-0x8f8]\n
    unsigned int v961;  // [bp-0x8f0]\n
    char v962;  // [bp-0x8e8]\n
    int v963;  // [bp-0x8d8]\n
    int v964;  // [bp-0x8c8]\n
    unsigned int v965;  // [bp-0x8b8]\n
    void* v966;  // [bp-0x8b0]\n
    int v967;  // [bp-0x8a8]\n
    void* v968;  // [bp-0x898]\n
    unsigned long v969;  // [bp-0x890]\n
    unsigned long long v970;  // [bp-0x888]\n
    unsigned int v971;  // [bp-0x880]\n
    int v972;  // [bp-0x878]\n
    struct_0 *v973;  // [bp-0x868]\n
    int v974;  // [bp-0x860]\n
    void* v975;  // [bp-0x850]\n
    unsigned int v976;  // [bp-0x848]\n
    char v977;  // [bp-0x840]\n
    int v978;  // [bp-0x830]\n
    int v979;  // [bp-0x820]\n
    unsigned int v980;  // [bp-0x810]\n
    void* v981;  // [bp-0x808]\n
    int v982;  // [bp-0x800]\n
    void* v983;  // [bp-0x7f0]\n
    unsigned long v984;  // [bp-0x7e8]\n
    unsigned long long v985;  // [bp-0x7e0]\n
    char v986;  // [bp-0x7d8]\n
    char v987;  // [bp-0x7d0]\n
    char v988;  // [bp-0x7a0]\n
    char v989;  // [bp-0x798]\n
    unsigned int v990;  // [bp-0x768]\n
    char v991;  // [bp-0x760]\n
    int v992;  // [bp-0x750]\n
    int v993;  // [bp-0x740]\n
    unsigned int v994;  // [bp-0x730]\n
    char v995;  // [bp-0x728]\n
    int v996;  // [bp-0x718]\n
    int v997;  // [bp-0x708]\n
    unsigned int v998;  // [bp-0x6f8]\n
    char v999;  // [bp-0x6f0]\n
    int v1000;  // [bp-0x6e0]\n
    int v1001;  // [bp-0x6d0]\n
    unsigned int v1002;  // [bp-0x6c0]\n
    int v1003;  // [bp-0x6b8]\n
    struct_0 *v1004;  // [bp-0x6a8]\n
    int v1005;  // [bp-0x6a0]\n
    void* v1006;  // [bp-0x690]\n
    char v1007;  // [bp-0x688]\n
    char v1008;  // [bp-0x680]\n
    unsigned int v1009;  // [bp-0x650]\n
    void* v1010;  // [bp-0x648]\n
    int v1011;  // [bp-0x640]\n
    void* v1012;  // [bp-0x630]\n
    unsigned long v1013;  // [bp-0x628]\n
    unsigned long long v1014;  // [bp-0x620]\n
    unsigned int v1015;  // [bp-0x618]\n
    char v1016;  // [bp-0x610]\n
    int v1017;  // [bp-0x600]\n
    int v1018;  // [bp-0x5f0]\n
    unsigned int v1019;  // [bp-0x5e0]\n
    void* v1020;  // [bp-0x5d8]\n
    int v1021;  // [bp-0x5d0]\n
    void* v1022;  // [bp-0x5c0]\n
    unsigned long v1023;  // [bp-0x5b8]\n
    unsigned long long v1024;  // [bp-0x5b0]\n
    char v1025;  // [bp-0x5a8]\n
    char v1026;  // [bp-0x5a0]\n
    unsigned int v1027;  // [bp-0x570]\n
    void* v1028;  // [bp-0x568]\n
    int v1029;  // [bp-0x560]\n
    void* v1030;  // [bp-0x550]\n
    unsigned long v1031;  // [bp-0x548]\n
    unsigned long v1032;  // [bp-0x540]\n
    char v1033;  // [bp-0x538]\n
    char v1034;  // [bp-0x530]\n
    unsigned int v1035;  // [bp-0x500]\n
    void* v1036;  // [bp-0x4f8]\n
    int v1037;  // [bp-0x4f0]\n
    void* v1038;  // [bp-0x4e0]\n
    unsigned long v1039;  // [bp-0x4d8]\n
    unsigned long long v1040;  // [bp-0x4d0]\n
    unsigned int v1041;  // [bp-0x4c8]\n
    void* v1042;  // [bp-0x4c0]\n
    int v1043;  // [bp-0x4b8]\n
    void* v1044;  // [bp-0x4a8]\n
    unsigned long v1045;  // [bp-0x4a0]\n
    unsigned long long v1046;  // [bp-0x498]\n
    unsigned int v1047;  // [bp-0x490]\n
    void* v1048;  // [bp-0x488]\n
    int v1049;  // [bp-0x480]\n
    void* v1050;  // [bp-0x470]\n
    unsigned long v1051;  // [bp-0x468]\n
    unsigned long long v1052;  // [bp-0x460]\n
    unsigned int v1053;  // [bp-0x458]\n
    void* v1054;  // [bp-0x450]\n
    int v1055;  // [bp-0x448]\n
    void* v1056;  // [bp-0x438]\n
    unsigned long v1057;  // [bp-0x430]\n
    unsigned long long v1058;  // [bp-0x428]\n
    unsigned int v1059;  // [bp-0x420]\n
    void* v1060;  // [bp-0x418]\n
    int v1061;  // [bp-0x410]\n
    void* v1062;  // [bp-0x400]\n
    unsigned long v1063;  // [bp-0x3f8]\n
    unsigned long long v1064;  // [bp-0x3f0]\n
    unsigned int v1065;  // [bp-0x3e8]\n
    void* v1066;  // [bp-0x3e0]\n
    int v1067;  // [bp-0x3d8]\n
    void* v1068;  // [bp-0x3c8]\n
    unsigned long v1069;  // [bp-0x3c0]\n
    unsigned long long v1070;  // [bp-0x3b8]\n
    unsigned int v1071;  // [bp-0x3b0]\n
    void* v1072;  // [bp-0x3a8]\n
    int v1073;  // [bp-0x3a0]\n
    void* v1074;  // [bp-0x390]\n
    unsigned long v1075;  // [bp-0x388]\n
    unsigned long long v1076;  // [bp-0x380]\n
    unsigned int v1077;  // [bp-0x378]\n
    void* v1078;  // [bp-0x370]\n
    int v1079;  // [bp-0x368]\n
    void* v1080;  // [bp-0x358]\n
    unsigned long v1081;  // [bp-0x350]\n
    unsigned long long v1082;  // [bp-0x348]\n
    char v1083;  // [bp-0x340]\n
    char v1084;  // [bp-0x338]\n
    char v1085;  // [bp-0x308]\n
    char v1086;  // [bp-0x300]\n
    unsigned int v1087;  // [bp-0x2d0]\n
    void* v1088;  // [bp-0x2c8]\n
    int v1089;  // [bp-0x2c0]\n
    void* v1090;  // [bp-0x2b0]\n
    unsigned long v1091;  // [bp-0x2a8]\n
    unsigned long long v1092;  // [bp-0x2a0]\n
    unsigned int v1093;  // [bp-0x298]\n
    void* v1094;  // [bp-0x290]\n
    int v1095;  // [bp-0x288]\n
    void* v1096;  // [bp-0x278]\n
    unsigned long v1097;  // [bp-0x270]\n
    unsigned long long v1098;  // [bp-0x268]\n
    unsigned int v1099;  // [bp-0x260]\n
    void* v1100;  // [bp-0x258]\n
    int v1101;  // [bp-0x250]\n
    void* v1102;  // [bp-0x240]\n
    unsigned long v1103;  // [bp-0x238]\n
    unsigned long long v1104;  // [bp-0x230]\n
    unsigned int v1105;  // [bp-0x228]\n
    void* v1106;  // [bp-0x220]\n
    int v1107;  // [bp-0x218]\n
    void* v1108;  // [bp-0x208]\n
    unsigned long v1109;  // [bp-0x200]\n
    unsigned long long v1110;  // [bp-0x1f8]\n
    unsigned int v1111;  // [bp-0x1f0]\n
    void* v1112;  // [bp-0x1e8]\n
    int v1113;  // [bp-0x1e0]\n
    void* v1114;  // [bp-0x1d0]\n
    unsigned long v1115;  // [bp-0x1c8]\n
    unsigned long long v1116;  // [bp-0x1c0]\n
    unsigned int v1117;  // [bp-0x1b8]\n
    void* v1118;  // [bp-0x1b0]\n
    int v1119;  // [bp-0x1a8]\n
    void* v1120;  // [bp-0x198]\n
    unsigned long v1121;  // [bp-0x190]\n
    unsigned long long v1122;  // [bp-0x188]\n
    unsigned int v1123;  // [bp-0x180]\n
    void* v1124;  // [bp-0x178]\n
    int v1125;  // [bp-0x170]\n
    void* v1126;  // [bp-0x160]\n
    unsigned long v1127;  // [bp-0x158]\n
    unsigned long long v1128;  // [bp-0x150]\n
    unsigned int v1129;  // [bp-0x148]\n
    void* v1130;  // [bp-0x140]\n
    int v1131;  // [bp-0x138]\n
    void* v1132;  // [bp-0x128]\n
    unsigned long v1133;  // [bp-0x120]\n
    unsigned long long v1134;  // [bp-0x118]\n
    unsigned int v1135;  // [bp-0x110]\n
    void* v1136;  // [bp-0x108]\n
    int v1137;  // [bp-0x100]\n
    void* v1138;  // [bp-0xf0]\n
    unsigned long v1139;  // [bp-0xe8]\n
    unsigned long long v1140;  // [bp-0xe0]\n
    unsigned int v1141;  // [bp-0xd8]\n
    void* v1142;  // [bp-0xd0]\n
    int v1143;  // [bp-0xc8]\n
    void* v1144;  // [bp-0xb8]\n
    unsigned long v1145;  // [bp-0xb0]\n
    unsigned long long v1146;  // [bp-0xa8]\n
    unsigned int v1147;  // [bp-0xa0]\n
    void* v1148;  // [bp-0x98]\n
    int v1149;  // [bp-0x90]\n
    void* v1150;  // [bp-0x80]\n
    unsigned long v1151;  // [bp-0x78]\n
    unsigned long long v1152;  // [bp-0x70]\n
    unsigned int v1153;  // [bp-0x68]\n
    void* v1154;  // [bp-0x60]\n
    int v1155;  // [bp-0x58]\n
    void* v1156;  // [bp-0x48]\n
    unsigned long v1157;  // [bp-0x40]\n
    unsigned long long v1158;  // [bp-0x38]\n
    struct_0 *v1160;  // r13, Other Possible Types: unsigned long\n
    struct_0 *v1161;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v1162;  // r12, Other Possible Types: unsigned long\n
    struct_0 *v1163;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v1164;  // rsi\n
    struct_0 *v1165;  // r14, Other Possible Types: unsigned long\n
    struct_0 *v1166;  // r15, Other Possible Types: unsigned long\n
\n
    v95 = 0;\n
    *(&v96) = 0;\n
    v97 = 0;\n
    v94 = 0;\n
    v98 = \" \";\n
    v99 = 1;\n
    Token::__ctor__(&v15, &v94, 2);\n
    Token::__ctor__(&v86, &v15, 1);\n
    Token::__ctor__(&v795, &v86, 5);\n
    vector::__base_dtor__(&v87);\n
    vector::__base_dtor__(&v16);\n
    vector::__base_dtor__(&v95);\n
    v95 = 0;\n
    *(&v96) = 0;\n
    v97 = 0;\n
    v94 = 0;\n
    v98 = \" \";\n
    v99 = 1;\n
    v1154 = 0;\n
    *(&v1155) = 0;\n
    v1156 = 0;\n
    v1153 = 0;\n
    v1157 = \"\\t\";\n
    v1158 = 1;\n
    Token::operator|(&v15, &v94, &v1153);\n
    Token::__ctor__(&v86, &v15, 2);\n
    vector::__base_dtor__(&v16);\n
    vector::__base_dtor__(&v1154);\n
    vector::__base_dtor__(&v95);\n
    Token::__ctor__(&v15, &v86, 1);\n
    v20 = 0;\n
    *(&v21) = 0;\n
    v22 = 0;\n
    v19 = 0;\n
    v23 = \"+\";\n
    v24 = 1;\n
    v790 = 0;\n
    *(&v791) = 0;\n
    v792 = 0;\n
    v789 = 0;\n
    v793 = \"-\";\n
    v794 = 1;\n
    Token::operator|(&v6, &v19, &v789, &v790);\n
    v784 = 0;\n
    *(&v785) = 0;\n
    v786 = 0;\n
    v783 = 0;\n
    v787 = \"*\";\n
    v788 = 1;\n
    Token::operator|(&v11, &v6, &v783, &v784);\n
    v778 = 0;\n
    *(&v779) = 0;\n
    v780 = 0;\n
    v777 = 0;\n
    v781 = \"/\";\n
    v782 = 1;\n
    Token::operator|(&v25, &v11, &v777, &v778);\n
    v772 = 0;\n
    *(&v773) = 0;\n
    v774 = 0;\n
    v771 = 0;\n
    v775 = \"<\";\n
    v776 = 1;\n
    Token::operator|(&v35, &v25, &v771, &v772);\n
    v766 = 0;\n
    *(&v767) = 0;\n
    v768 = 0;\n
    v765 = 0;\n
    v769 = \">\";\n
    v770 = 1;\n
    Token::operator|(&v60, &v35, &v765, &v766);\n
    v760 = 0;\n
    *(&v761) = 0;\n
    v762 = 0;\n
    v759 = 0;\n
    v763 = \"=\";\n
    v764 = 1;\n
    Token::operator|(&v0, &v60, &v759, &v760);\n
    v754 = 0;\n
    *(&v755) = 0;\n
    v756 = 0;\n
    v753 = 0;\n
    v757 = \"@\";\n
    v758 = 1;\n
    Token::operator|(&v48, &v0, &v753, &v754);\n
    v748 = 0;\n
    *(&v749) = 0;\n
    v750 = 0;\n
    v747 = 0;\n
    v751 = \"$\";\n
    v752 = 1;\n
    Token::operator|(&v39, &v48, &v747, &v748);\n
    v742 = 0;\n
    *(&v743) = 0;\n
    v744 = 0;\n
    v741 = 0;\n
    v745 = \"~\";\n
    v746 = 1;\n
    Token::operator|(&v62, &v39, &v741, &v742);\n
    v736 = 0;\n
    *(&v737) = 0;\n
    v738 = 0;\n
    v735 = 0;\n
    v739 = \"&\";\n
    v740 = 1;\n
    Token::operator|(&v29, &v62, &v735, &v736);\n
    v730 = 0;\n
    *(&v731) = 0;\n
    v732 = 0;\n
    v729 = 0;\n
    v733 = \"%\";\n
    v734 = 1;\n
    Token::operator|(&v68, &v29, &v729, &v730);\n
    v1148 = 0;\n
    *(&v1149) = 0;\n
    v1150 = 0;\n
    v1147 = 0;\n
    v1151 = \"!\";\n
    v1152 = 1;\n
    Token::operator|(&v78, &v68, &v1147);\n
    v1142 = 0;\n
    *(&v1143) = 0;\n
    v1144 = 0;\n
    v1141 = 0;\n
    v1145 = \"^\";\n
    v1146 = 1;\n
    Token::operator|(&v82, &v78, &v1141);\n
    v1136 = 0;\n
    *(&v1137) = 0;\n
    v1138 = 0;\n
    v1135 = 0;\n
    v1139 = \"|\";\n
    v1140 = 1;\n
    Token::operator|(&v116, &v82, &v1135);\n
    Token::__ctor__(&v90, &v116, 2);\n
    Token::__ctor__(&v94, &v90, 12);\n
    vector::__base_dtor__(&v91);\n
    vector::__base_dtor__(&v117);\n
    vector::__base_dtor__(&v1136);\n
    vector::__base_dtor__(&v83);\n
    vector::__base_dtor__(&v1142);\n
    vector::__base_dtor__(&v79);\n
    vector::__base_dtor__(&v1148);\n
    vector::__base_dtor__(&v69);\n
    vector::__base_dtor__(&v730);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(&v736);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v742);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v748);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v754);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v760);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v766);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v772);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v778);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v784);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v790);\n
    vector::__base_dtor__(&v20);\n
    v1 = 0;\n
    *(&v2) = 0;\n
    v3 = 0;\n
    v0 = 0;\n
    v4 = \"0\";\n
    v5 = 1;\n
    v724 = 0;\n
    *(&v725) = 0;\n
    v726 = 0;\n
    v723 = 0;\n
    v727 = \"1\";\n
    v728 = 1;\n
    Token::operator|(&v48, &v0, &v723, 1);\n
    v718 = 0;\n
    *(&v719) = 0;\n
    v720 = 0;\n
    v717 = 0;\n
    v721 = \"2\";\n
    v722 = 1;\n
    Token::operator|(&v39, &v48, &v717, &v718);\n
    v712 = 0;\n
    *(&v713) = 0;\n
    v714 = 0;\n
    v711 = 0;\n
    v715 = \"3\";\n
    v716 = 1;\n
    Token::operator|(&v62, &v39, &v711, &v712);\n
    v706 = 0;\n
    *(&v707) = 0;\n
    v708 = 0;\n
    v705 = 0;\n
    v709 = \"4\";\n
    v710 = 1;\n
    Token::operator|(&v29, &v62, &v705, &v706);\n
    v700 = 0;\n
    *(&v701) = 0;\n
    v702 = 0;\n
    v699 = 0;\n
    v703 = \"5\";\n
    v704 = 1;\n
    Token::operator|(&v68, &v29, &v699, &v700);\n
    v1130 = 0;\n
    *(&v1131) = 0;\n
    v1132 = 0;\n
    v1129 = 0;\n
    v1133 = \"6\";\n
    v1134 = 1;\n
    Token::operator|(&v78, &v68, &v1129);\n
    v1124 = 0;\n
    *(&v1125) = 0;\n
    v1126 = 0;\n
    v1123 = 0;\n
    v1127 = \"7\";\n
    v1128 = 1;\n
    Token::operator|(&v82, &v78, &v1123);\n
    v1118 = 0;\n
    *(&v1119) = 0;\n
    v1120 = 0;\n
    v1117 = 0;\n
    v1121 = \"8\";\n
    v1122 = 1;\n
    Token::operator|(&v116, &v82, &v1117);\n
    v1112 = 0;\n
    *(&v1113) = 0;\n
    v1114 = 0;\n
    v1111 = 0;\n
    v1115 = \"9\";\n
    v1116 = 1;\n
    Token::operator|(&v90, &v116, &v1111);\n
    vector::__base_dtor__(&v1112);\n
    vector::__base_dtor__(&v117);\n
    vector::__base_dtor__(&v1118);\n
    vector::__base_dtor__(&v83);\n
    vector::__base_dtor__(&v1124);\n
    vector::__base_dtor__(&v79);\n
    vector::__base_dtor__(&v1130);\n
    vector::__base_dtor__(&v69);\n
    vector::__base_dtor__(&v700);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(&v706);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v712);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v718);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v724);\n
    vector::__base_dtor__(&v1);\n
    v694 = 0;\n
    *(&v695) = 0;\n
    v696 = 0;\n
    v693 = 0;\n
    v697 = \"a\";\n
    v698 = 1;\n
    Token::operator|(&v25, &v90, &v693, &v694);\n
    v688 = 0;\n
    *(&v689) = 0;\n
    v690 = 0;\n
    v687 = 0;\n
    v691 = \"b\";\n
    v692 = 1;\n
    Token::operator|(&v35, &v25, &v687, &v688);\n
    v682 = 0;\n
    *(&v683) = 0;\n
    v684 = 0;\n
    v681 = 0;\n
    v685 = \"c\";\n
    v686 = 1;\n
    Token::operator|(&v60, &v35, &v681, &v682);\n
    v676 = 0;\n
    *(&v677) = 0;\n
    v678 = 0;\n
    v675 = 0;\n
    v679 = \"d\";\n
    v680 = 1;\n
    Token::operator|(&v0, &v60, &v675, &v676);\n
    v670 = 0;\n
    *(&v671) = 0;\n
    v672 = 0;\n
    v669 = 0;\n
    v673 = \"e\";\n
    v674 = 1;\n
    Token::operator|(&v48, &v0, &v669, &v670);\n
    v664 = 0;\n
    *(&v665) = 0;\n
    v666 = 0;\n
    v663 = 0;\n
    v667 = \"f\";\n
    v668 = 1;\n
    Token::operator|(&v39, &v48, &v663, &v664);\n
    v658 = 0;\n
    *(&v659) = 0;\n
    v660 = 0;\n
    v657 = 0;\n
    v661 = \"A\";\n
    v662 = 1;\n
    Token::operator|(&v62, &v39, &v657, &v658);\n
    v652 = 0;\n
    *(&v653) = 0;\n
    v654 = 0;\n
    v651 = 0;\n
    v655 = \"B\";\n
    v656 = 1;\n
    Token::operator|(&v29, &v62, &v651, &v652);\n
    v1106 = 0;\n
    *(&v1107) = 0;\n
    v1108 = 0;\n
    v1105 = 0;\n
    v1109 = \"C\";\n
    v1110 = 1;\n
    Token::operator|(&v68, &v29, &v1105);\n
    v1100 = 0;\n
    *(&v1101) = 0;\n
    v1102 = 0;\n
    v1099 = 0;\n
    v1103 = \"D\";\n
    v1104 = 1;\n
    Token::operator|(&v78, &v68, &v1099);\n
    v1094 = 0;\n
    *(&v1095) = 0;\n
    v1096 = 0;\n
    v1093 = 0;\n
    v1097 = \"E\";\n
    v1098 = 1;\n
    Token::operator|(&v82, &v78, &v1093);\n
    v1088 = 0;\n
    *(&v1089) = 0;\n
    v1090 = 0;\n
    v1087 = 0;\n
    v1091 = \"F\";\n
    v1092 = 1;\n
    Token::operator|(&v116, &v82, &v1087);\n
    vector::__base_dtor__(&v1088);\n
    vector::__base_dtor__(&v83);\n
    vector::__base_dtor__(&v1094);\n
    vector::__base_dtor__(&v79);\n
    vector::__base_dtor__(&v1100);\n
    vector::__base_dtor__(&v69);\n
    vector::__base_dtor__(&v1106);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(&v652);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v658);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v664);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v670);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v676);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v682);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v688);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v694);\n
    v30 = 0;\n
    *(&v31) = 0;\n
    v32 = 0;\n
    v29 = 0;\n
    v33 = \"0x\";\n
    v34 = 2;\n
    Token::__ctor__(&v1085, &v116, 2);\n
    Token::operator+(&v68, &v29, &v1085);\n
    Token::__ctor__(&v1083, &v90, 2);\n
    Token::operator|(&v78, &v68, &v1083);\n
    Token::__ctor__(&v82, &v78, 7);\n
    vector::__base_dtor__(&v79);\n
    vector::__base_dtor__(&v1084);\n
    vector::__base_dtor__(&v69);\n
    vector::__base_dtor__(&v1086);\n
    vector::__base_dtor__(&v30);\n
    v103 = 0;\n
    *(&v104) = 0;\n
    v105 = 0;\n
    v102 = 0;\n
    v106 = \"a\";\n
    v107 = 1;\n
    v646 = 0;\n
    *(&v647) = 0;\n
    v648 = 0;\n
    v645 = 0;\n
    v649 = \"b\";\n
    v650 = 1;\n
    Token::operator|(&v108, &v102, &v645, &v646);\n
    v640 = 0;\n
    *(&v641) = 0;\n
    v642 = 0;\n
    v639 = 0;\n
    v643 = \"c\";\n
    v644 = 1;\n
    Token::operator|(&v118, &v108, &v639, \"c\");\n
    v634 = 0;\n
    *(&v635) = 0;\n
    v636 = 0;\n
    v633 = 0;\n
    v637 = \"d\";\n
    v638 = 1;\n
    Token::operator|(&v110, &v118, &v633, \"d\");\n
    v628 = 0;\n
    *(&v629) = 0;\n
    v630 = 0;\n
    v627 = 0;\n
    v631 = \"e\";\n
    v632 = 1;\n
    Token::operator|(&v112, &v110, &v627, \"e\");\n
    v622 = 0;\n
    *(&v623) = 0;\n
    v624 = 0;\n
    v621 = 0;\n
    v625 = \"f\";\n
    v626 = 1;\n
    Token::operator|(&v114, &v112, &v621, \"f\");\n
    v616 = 0;\n
    *(&v617) = 0;\n
    v618 = 0;\n
    v615 = 0;\n
    v619 = \"g\";\n
    v620 = 1;\n
    Token::operator|(&v100, &v114, &v615, &v616);\n
    v610 = 0;\n
    *(&v611) = 0;\n
    v612 = 0;\n
    v609 = 0;\n
    v613 = \"h\";\n
    v614 = 1;\n
    Token::operator|(&v80, &v100, &v609, &v610);\n
    v604 = 0;\n
    *(&v605) = 0;\n
    v606 = 0;\n
    v603 = 0;\n
    v607 = \"i\";\n
    v608 = 1;\n
    Token::operator|(&v72, &v80, &v603, &v604);\n
    v598 = 0;\n
    *(&v599) = 0;\n
    v600 = 0;\n
    v597 = 0;\n
    v601 = \"j\";\n
    v602 = 1;\n
    Token::operator|(&v66, &v72, &v597, &v598);\n
    v592 = 0;\n
    *(&v593) = 0;\n
    v594 = 0;\n
    v591 = 0;\n
    v595 = \"k\";\n
    v596 = 1;\n
    Token::operator|(&v53, &v66, &v591, &v592);\n
    v586 = 0;\n
    *(&v587) = 0;\n
    v588 = 0;\n
    v585 = 0;\n
    v589 = \"l\";\n
    v590 = 1;\n
    Token::operator|(&v44, &v53, &v585, &v586);\n
    v580 = 0;\n
    *(&v581) = 0;\n
    v582 = 0;\n
    v579 = 0;\n
    v583 = \"m\";\n
    v584 = 1;\n
    Token::operator|(&v55, &v44, &v579, &v580);\n
    v574 = 0;\n
    *(&v575) = 0;\n
    v576 = 0;\n
    v573 = 0;\n
    v577 = \"n\";\n
    v578 = 1;\n
    Token::operator|(&v19, &v55, &v573, &v574);\n
    v568 = 0;\n
    *(&v569) = 0;\n
    v570 = 0;\n
    v567 = 0;\n
    v571 = \"o\";\n
    v572 = 1;\n
    Token::operator|(&v6, &v19, &v567, &v568);\n
    v562 = 0;\n
    *(&v563) = 0;\n
    v564 = 0;\n
    v561 = 0;\n
    v565 = \"p\";\n
    v566 = 1;\n
    Token::operator|(&v11, &v6, &v561, &v562);\n
    v556 = 0;\n
    *(&v557) = 0;\n
    v558 = 0;\n
    v555 = 0;\n
    v559 = \"q\";\n
    v560 = 1;\n
    Token::operator|(&v25, &v11, &v555, &v556);\n
    v550 = 0;\n
    *(&v551) = 0;\n
    v552 = 0;\n
    v549 = 0;\n
    v553 = \"r\";\n
    v554 = 1;\n
    Token::operator|(&v35, &v25, &v549, &v550);\n
    v544 = 0;\n
    *(&v545) = 0;\n
    v546 = 0;\n
    v543 = 0;\n
    v547 = \"s\";\n
    v548 = 1;\n
    Token::operator|(&v60, &v35, &v543, &v544);\n
    v538 = 0;\n
    *(&v539) = 0;\n
    v540 = 0;\n
    v537 = 0;\n
    v541 = \"t\";\n
    v542 = 1;\n
    Token::operator|(&v0, &v60, &v537, &v538);\n
    v532 = 0;\n
    *(&v533) = 0;\n
    v534 = 0;\n
    v531 = 0;\n
    v535 = \"u\";\n
    v536 = 1;\n
    Token::operator|(&v48, &v0, &v531, &v532);\n
    v526 = 0;\n
    *(&v527) = 0;\n
    v528 = 0;\n
    v525 = 0;\n
    v529 = \"v\";\n
    v530 = 1;\n
    Token::operator|(&v39, &v48, &v525, &v526);\n
    v1078 = 0;\n
    *(&v1079) = 0;\n
    v1080 = 0;\n
    v1077 = 0;\n
    v1081 = \"w\";\n
    v1082 = 1;\n
    Token::operator|(&v62, &v39, &v1077);\n
    v1072 = 0;\n
    *(&v1073) = 0;\n
    v1074 = 0;\n
    v1071 = 0;\n
    v1075 = \"x\";\n
    v1076 = 1;\n
    Token::operator|(&v29, &v62, &v1071);\n
    v1066 = 0;\n
    *(&v1067) = 0;\n
    v1068 = 0;\n
    v1065 = 0;\n
    v1069 = \"y\";\n
    v1070 = 1;\n
    Token::operator|(&v68, &v29, &v1065);\n
    v1060 = 0;\n
    *(&v1061) = 0;\n
    v1062 = 0;\n
    v1059 = 0;\n
    v1063 = \"z\";\n
    v1064 = 1;\n
    Token::operator|(&v78, &v68, &v1059);\n
    vector::__base_dtor__(&v1060);\n
    vector::__base_dtor__(&v69);\n
    vector::__base_dtor__(&v1066);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(&v1072);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v1078);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v526);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v532);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v538);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v544);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v550);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v556);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v562);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v568);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v574);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v580);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v586);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v592);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v598);\n
    vector::__base_dtor__(&v73);\n
    vector::__base_dtor__(&v604);\n
    vector::__base_dtor__(&v81);\n
    vector::__base_dtor__(&v610);\n
    vector::__base_dtor__(&v101);\n
    vector::__base_dtor__(&v616);\n
    vector::__base_dtor__(&v115);\n
    vector::__base_dtor__(&v622);\n
    vector::__base_dtor__(&v113);\n
    vector::__base_dtor__(&v628);\n
    vector::__base_dtor__(&v111);\n
    vector::__base_dtor__(&v634);\n
    vector::__base_dtor__(&v119);\n
    vector::__base_dtor__(&v640);\n
    vector::__base_dtor__(&v109);\n
    vector::__base_dtor__(&v646);\n
    vector::__base_dtor__(&v103);\n
    v121 = 0;\n
    *(&v122) = 0;\n
    v123 = 0;\n
    v120 = 0;\n
    v124 = \"A\";\n
    v125 = 1;\n
    v520 = 0;\n
    *(&v521) = 0;\n
    v522 = 0;\n
    v519 = 0;\n
    v523 = \"B\";\n
    v524 = 1;\n
    Token::operator|(&v102, &v120, &v519, \"B\");\n
    v514 = 0;\n
    *(&v515) = 0;\n
    v516 = 0;\n
    v513 = 0;\n
    v517 = \"C\";\n
    v518 = 1;\n
    Token::operator|(&v108, &v102, &v513, &v514);\n
    v508 = 0;\n
    *(&v509) = 0;\n
    v510 = 0;\n
    v507 = 0;\n
    v511 = \"D\";\n
    v512 = 1;\n
    Token::operator|(&v118, &v108, &v507, &v508);\n
    v502 = 0;\n
    *(&v503) = 0;\n
    v504 = 0;\n
    v501 = 0;\n
    v505 = \"E\";\n
    v506 = 1;\n
    Token::operator|(&v110, &v118, &v501, &v502);\n
    v496 = 0;\n
    *(&v497) = 0;\n
    v498 = 0;\n
    v495 = 0;\n
    v499 = \"F\";\n
    v500 = 1;\n
    Token::operator|(&v112, &v110, &v495, &v496);\n
    v490 = 0;\n
    *(&v491) = 0;\n
    v492 = 0;\n
    v489 = 0;\n
    v493 = \"G\";\n
    v494 = 1;\n
    Token::operator|(&v114, &v112, &v489, &v490);\n
    v484 = 0;\n
    *(&v485) = 0;\n
    v486 = 0;\n
    v483 = 0;\n
    v487 = \"H\";\n
    v488 = 1;\n
    Token::operator|(&v100, &v114, &v483, &v484);\n
    v478 = 0;\n
    *(&v479) = 0;\n
    v480 = 0;\n
    v477 = 0;\n
    v481 = \"I\";\n
    v482 = 1;\n
    Token::operator|(&v80, &v100, &v477, &v478);\n
    v472 = 0;\n
    *(&v473) = 0;\n
    v474 = 0;\n
    v471 = 0;\n
    v475 = \"J\";\n
    v476 = 1;\n
    Token::operator|(&v72, &v80, &v471, &v472);\n
    v466 = 0;\n
    *(&v467) = 0;\n
    v468 = 0;\n
    v465 = 0;\n
    v469 = \"K\";\n
    v470 = 1;\n
    Token::operator|(&v66, &v72, &v465, &v466);\n
    v460 = 0;\n
    *(&v461) = 0;\n
    v462 = 0;\n
    v459 = 0;\n
    v463 = \"L\";\n
    v464 = 1;\n
    Token::operator|(&v53, &v66, &v459, &v460);\n
    v454 = 0;\n
    *(&v455) = 0;\n
    v456 = 0;\n
    v453 = 0;\n
    v457 = \"M\";\n
    v458 = 1;\n
    Token::operator|(&v44, &v53, &v453, &v454);\n
    v448 = 0;\n
    *(&v449) = 0;\n
    v450 = 0;\n
    v447 = 0;\n
    v451 = \"N\";\n
    v452 = 1;\n
    Token::operator|(&v55, &v44, &v447, &v448);\n
    v442 = 0;\n
    *(&v443) = 0;\n
    v444 = 0;\n
    v441 = 0;\n
    v445 = \"O\";\n
    v446 = 1;\n
    Token::operator|(&v19, &v55, &v441, &v442);\n
    v436 = 0;\n
    *(&v437) = 0;\n
    v438 = 0;\n
    v435 = 0;\n
    v439 = \"P\";\n
    v440 = 1;\n
    Token::operator|(&v6, &v19, &v435, &v436);\n
    v430 = 0;\n
    *(&v431) = 0;\n
    v432 = 0;\n
    v429 = 0;\n
    v433 = \"Q\";\n
    v434 = 1;\n
    Token::operator|(&v11, &v6, &v429, &v430);\n
    v424 = 0;\n
    *(&v425) = 0;\n
    v426 = 0;\n
    v423 = 0;\n
    v427 = \"R\";\n
    v428 = 1;\n
    Token::operator|(&v25, &v11, &v423, &v424);\n
    v418 = 0;\n
    *(&v419) = 0;\n
    v420 = 0;\n
    v417 = 0;\n
    v421 = \"S\";\n
    v422 = 1;\n
    Token::operator|(&v35, &v25, &v417, &v418);\n
    v412 = 0;\n
    *(&v413) = 0;\n
    v414 = 0;\n
    v411 = 0;\n
    v415 = \"T\";\n
    v416 = 1;\n
    Token::operator|(&v60, &v35, &v411, &v412);\n
    v406 = 0;\n
    *(&v407) = 0;\n
    v408 = 0;\n
    v405 = 0;\n
    v409 = \"U\";\n
    v410 = 1;\n
    Token::operator|(&v0, &v60, &v405, &v406);\n
    v400 = 0;\n
    *(&v401) = 0;\n
    v402 = 0;\n
    v399 = 0;\n
    v403 = \"V\";\n
    v404 = 1;\n
    Token::operator|(&v48, &v0, &v399, &v400);\n
    v1054 = 0;\n
    *(&v1055) = 0;\n
    v1056 = 0;\n
    v1053 = 0;\n
    v1057 = \"W\";\n
    v1058 = 1;\n
    Token::operator|(&v39, &v48, &v1053);\n
    v1048 = 0;\n
    *(&v1049) = 0;\n
    v1050 = 0;\n
    v1047 = 0;\n
    v1051 = \"X\";\n
    v1052 = 1;\n
    Token::operator|(&v62, &v39, &v1047);\n
    v1042 = 0;\n
    *(&v1043) = 0;\n
    v1044 = 0;\n
    v1041 = 0;\n
    v1045 = \"Y\";\n
    v1046 = 1;\n
    Token::operator|(&v29, &v62, &v1041);\n
    v1036 = 0;\n
    *(&v1037) = 0;\n
    v1038 = 0;\n
    v1035 = 0;\n
    v1039 = \"Z\";\n
    v1040 = 1;\n
    Token::operator|(&v68, &v29, &v1035);\n
    vector::__base_dtor__(&v1036);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(&v1042);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v1048);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v1054);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v400);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v406);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v412);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v418);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v424);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v430);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v436);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v442);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v448);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v454);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v460);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v466);\n
    vector::__base_dtor__(&v73);\n
    vector::__base_dtor__(&v472);\n
    vector::__base_dtor__(&v81);\n
    vector::__base_dtor__(&v478);\n
    vector::__base_dtor__(&v101);\n
    vector::__base_dtor__(&v484);\n
    vector::__base_dtor__(&v115);\n
    vector::__base_dtor__(&v490);\n
    vector::__base_dtor__(&v113);\n
    vector::__base_dtor__(&v496);\n
    vector::__base_dtor__(&v111);\n
    vector::__base_dtor__(&v502);\n
    vector::__base_dtor__(&v119);\n
    vector::__base_dtor__(&v508);\n
    vector::__base_dtor__(&v109);\n
    vector::__base_dtor__(&v514);\n
    vector::__base_dtor__(&v103);\n
    vector::__base_dtor__(&v520);\n
    vector::__base_dtor__(&v121);\n
    v395 = *(&v68);\n
    vector::__base_ctor__(&v396, &v69);\n
    *(&v398) = *(&v71);\n
    *(&v397) = *(&v70);\n
    Token::operator|(&v39, &v78, &v395);\n
    v391 = *(&v68);\n
    vector::__base_ctor__(&v392, &v69);\n
    *(&v394) = *(&v71);\n
    *(&v393) = *(&v70);\n
    Token::operator|(&v35, &v78, &v391);\n
    v387 = *(&v90);\n
    vector::__base_ctor__(&v388, &v91);\n
    *(&v390) = *(&v93);\n
    *(&v389) = *(&v92);\n
    Token::operator|(&v60, &v35, &v387);\n
    v1027 = 0;\n
    v1028 = 0;\n
    *(&v1029) = 0;\n
    v1030 = 0;\n
    v1031 = \"_\";\n
    v1032 = cgc_strlen(\"_\");\n
    Token::operator|(&v0, &v60, &v1027);\n
    Token::__ctor__(&v48, &v0, 2);\n
    Token::__ctor__(&v1033, &v48, 1);\n
    Token::operator+(&v62, &v39, &v1033);\n
    Token::__ctor__(&v29, &v62, 6);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v1034);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v1028);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v388);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v392);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v396);\n
    v1 = 0;\n
    *(&v2) = 0;\n
    v3 = 0;\n
    v0 = 0;\n
    v4 = \"\\\"\";\n
    v5 = 1;\n
    v383 = *(&v68);\n
    vector::__base_ctor__(&v384, &v69);\n
    *(&v386) = *(&v71);\n
    *(&v385) = *(&v70);\n
    Token::operator|(&v6, &v78, &v383);\n
    v378 = 0;\n
    *(&v379) = 0;\n
    v380 = 0;\n
    v377 = 0;\n
    v381 = \"_\";\n
    v382 = 1;\n
    Token::operator|(&v11, &v6, &v377, \"_\");\n
    v372 = 0;\n
    *(&v373) = 0;\n
    v374 = 0;\n
    v371 = 0;\n
    v375 = \",\";\n
    v376 = 1;\n
    Token::operator|(&v25, &v11, &v371, &v372);\n
    v1020 = 0;\n
    *(&v1021) = 0;\n
    v1022 = 0;\n
    v1019 = 0;\n
    v1023 = \".\";\n
    v1024 = 1;\n
    Token::operator|(&v35, &v25, &v1019);\n
    v1015 = *(&v86);\n
    vector::__base_ctor__(&v1016, &v87);\n
    *(&v1018) = *(&v89);\n
    *(&v1017) = *(&v88);\n
    Token::operator|(&v60, &v35, &v1015);\n
    Token::__ctor__(&v1025, &v60, 1);\n
    Token::operator+(&v48, &v0, &v1025);\n
    v1010 = 0;\n
    *(&v1011) = 0;\n
    v1012 = 0;\n
    v1009 = 0;\n
    v1013 = \"\\\"\";\n
    v1014 = 1;\n
    Token::operator+(&v39, &v48, &v1009);\n
    Token::__ctor__(&v62, &v39, 8);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v1010);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v1026);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v1016);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v1020);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v372);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v378);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v384);\n
    vector::__base_dtor__(&v1);\n
    v40 = 0;\n
    *(&v41) = 0;\n
    *(&v42) = 0;\n
    v43 = 0;\n
    v39 = 11;\n
    v49 = 0;\n
    *(&v50) = 0;\n
    *(&v51) = 0;\n
    v52 = 0;\n
    v48 = 15;\n
    v1 = 0;\n
    *(&v2) = 0;\n
    *(&v3) = 0;\n
    v5 = 0;\n
    v0 = 17;\n
    v73 = 0;\n
    *(&v74) = 0;\n
    v75 = 0;\n
    v72 = 0;\n
    v76 = \"(\";\n
    v77 = 1;\n
    v367 = *(&v15);\n
    vector::__base_ctor__(&v368, &v16);\n
    *(&v370) = *(&v18);\n
    *(&v369) = *(&v17);\n
    Token::operator+(&v66, &v72, &v367);\n
    v362 = 0;\n
    *(&v363) = 0;\n
    *(&v365) = 0;\n
    v366 = 0;\n
    v364 = &v0;\n
    Token::operator+(&v53, &v66, &v362);\n
    v358 = *(&v15);\n
    vector::__base_ctor__(&v359, &v16);\n
    *(&v361) = *(&v18);\n
    *(&v360) = *(&v17);\n
    Token::operator+(&v44, &v53, &v358);\n
    v353 = 0;\n
    *(&v354) = 0;\n
    v355 = 0;\n
    v352 = 0;\n
    v356 = \")\";\n
    v357 = 1;\n
    Token::operator+(&v55, &v44, &v352, &v353);\n
    v347 = 0;\n
    *(&v348) = 0;\n
    *(&v350) = 0;\n
    v351 = 0;\n
    v349 = &v39;\n
    Token::operator|(&v19, &v55, &v347, &v348);\n
    v343 = *(&v15);\n
    vector::__base_ctor__(&v344, &v16);\n
    *(&v346) = *(&v18);\n
    *(&v345) = *(&v17);\n
    Token::operator+(&v80, &v94, &v343);\n
    v338 = 0;\n
    *(&v339) = 0;\n
    *(&v341) = 0;\n
    v342 = 0;\n
    v340 = &v0;\n
    Token::operator+(&v1007, &v80, &v338, &v0);\n
    Token::operator|(&v6, &v19, &v1007);\n
    v1002 = 0;\n
    *(&v1003) = 0;\n
    *(&v1005) = 0;\n
    v1006 = 0;\n
    v1004 = &v48;\n
    Token::operator|(&v11, &v6, &v1002);\n
    v998 = *(&v82);\n
    vector::__base_ctor__(&v999, &v83);\n
    *(&v1001) = *(&v85);\n
    *(&v1000) = *(&v84);\n
    Token::operator|(&v25, &v11, &v998);\n
    v994 = *(&v62);\n
    vector::__base_ctor__(&v995, &v63);\n
    *(&v997) = *(&v65);\n
    *(&v996) = *(&v64);\n
    Token::operator|(&v35, &v25, &v994);\n
    v990 = v29;\n
    vector::__base_ctor__(&v991, &v30);\n
    *(&v993) = *(&v33);\n
    *(&v992) = (&v31)[8];\n
    Token::operator|(&v60, &v35, &v990);\n
    Token::set(&v0, &v60);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v991);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v995);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v999);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v1003);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v1008);\n
    vector::__base_dtor__(&v339);\n
    vector::__base_dtor__(&v81);\n
    vector::__base_dtor__(&v344);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v348);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v353);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v359);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v363);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v368);\n
    vector::__base_dtor__(&v73);\n
    v334 = v94;\n
    vector::__base_ctor__(&v335, &v95);\n
    *(&v337) = *(&v98);\n
    *(&v336) = (&v96)[8];\n
    Token::operator+(&v19, &v15, &v334);\n
    v330 = *(&v15);\n
    vector::__base_ctor__(&v331, &v16);\n
    *(&v333) = *(&v18);\n
    *(&v332) = *(&v17);\n
    Token::operator+(&v6, &v19, &v330);\n
    v325 = 0;\n
    *(&v326) = 0;\n
    *(&v328) = 0;\n
    v329 = 0;\n
    v327 = &v0;\n
    Token::operator+(&v11, &v6, &v325, &v326);\n
    v320 = 0;\n
    *(&v321) = 0;\n
    v322 = 0;\n
    v319 = 0;\n
    v323 = \"or\";\n
    v324 = 2;\n
    Token::operator+(&v44, &v86, &v319, &v320);\n
    v315 = *(&v86);\n
    vector::__base_ctor__(&v316, &v87);\n
    *(&v318) = *(&v89);\n
    *(&v317) = *(&v88);\n
    Token::operator+(&v55, &v44, &v315);\n
    v310 = 0;\n
    *(&v311) = 0;\n
    *(&v313) = 0;\n
    v314 = 0;\n
    v312 = &v0;\n
    Token::operator+(&v988, &v55, &v310, 0);\n
    Token::operator|(&v25, &v11, &v988);\n
    v981 = 0;\n
    *(&v982) = 0;\n
    v983 = 0;\n
    v980 = 0;\n
    v984 = \"and\";\n
    v985 = 3;\n
    Token::operator+(&v66, &v86, &v980);\n
    v976 = *(&v86);\n
    vector::__base_ctor__(&v977, &v87);\n
    *(&v979) = *(&v89);\n
    *(&v978) = *(&v88);\n
    Token::operator+(&v53, &v66, &v976);\n
    v971 = 0;\n
    *(&v972) = 0;\n
    *(&v974) = 0;\n
    v975 = 0;\n
    v973 = &v0;\n
    Token::operator+(&v986, &v53, &v971);\n
    Token::operator|(&v35, &v25, &v986);\n
    Token::__ctor__(&v60, &v35, 23);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v987);\n
    vector::__base_dtor__(&v972);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v977);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v981);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v989);\n
    vector::__base_dtor__(&v311);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v316);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v320);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v326);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v331);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v335);\n
    v3 = &v60;\n
    v306 = *(&v86);\n
    vector::__base_ctor__(&v307, &v87);\n
    *(&v309) = *(&v89);\n
    *(&v308) = *(&v88);\n
    Token::operator+(&v6, &v29, &v306);\n
    v966 = 0;\n
    *(&v967) = 0;\n
    v968 = 0;\n
    v965 = 0;\n
    v969 = \"=\";\n
    v970 = 1;\n
    Token::operator+(&v11, &v6, &v965);\n
    v961 = *(&v86);\n
    vector::__base_ctor__(&v962, &v87);\n
    *(&v964) = *(&v89);\n
    *(&v963) = *(&v88);\n
    Token::operator+(&v25, &v11, &v961);\n
    v956 = 0;\n
    *(&v957) = 0;\n
    *(&v959) = 0;\n
    v960 = 0;\n
    v958 = &v0;\n
    Token::operator+(&v35, &v25, &v956);\n
    Token::set(&v39, &v35);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v957);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v962);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v966);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v307);\n
    v950 = 0;\n
    v951 = 0;\n
    *(&v952) = 0;\n
    v953 = 0;\n
    v954 = \",\";\n
    v955 = cgc_strlen(\",\");\n
    Token::operator+(&v19, &v15, &v950);\n
    v946 = *(&v15);\n
    vector::__base_ctor__(&v947, &v16);\n
    *(&v949) = *(&v18);\n
    *(&v948) = *(&v17);\n
    Token::operator+(&v6, &v19, &v946);\n
    v941 = 0;\n
    *(&v942) = 0;\n
    *(&v944) = 0;\n
    v945 = 0;\n
    v943 = &v0;\n
    Token::operator+(&v11, &v6, &v941);\n
    Token::__ctor__(&v25, &v11, 2);\n
    Token::__ctor__(&v35, &v25, 1);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v942);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v947);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v951);\n
    v6 = 0;\n
    *(&v7) = 0;\n
    *(&v9) = 0;\n
    v10 = 0;\n
    v8 = &v0;\n
    v937 = *(&v35);\n
    vector::__base_ctor__(&v938, &v36);\n
    *(&v940) = *(&v38);\n
    *(&v939) = *(&v37);\n
    Token::operator+(&v11, &v6, &v937);\n
    Token::__ctor__(&v25, &v11, 1);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v938);\n
    vector::__base_dtor__(&v7);\n
    v302 = *(&v15);\n
    vector::__base_ctor__(&v303, &v16);\n
    *(&v305) = *(&v18);\n
    *(&v304) = *(&v17);\n
    Token::operator+(&v53, &v29, &v302);\n
    v296 = 0;\n
    v297 = 0;\n
    *(&v298) = 0;\n
    v299 = 0;\n
    v300 = \"(\";\n
    v301 = cgc_strlen(\"(\");\n
    Token::operator+(&v44, &v53, &v296);\n
    v292 = *(&v15);\n
    vector::__base_ctor__(&v293, &v16);\n
    *(&v295) = *(&v18);\n
    *(&v294) = *(&v17);\n
    Token::operator+(&v55, &v44, &v292);\n
    v933 = *(&v25);\n
    vector::__base_ctor__(&v934, &v26);\n
    *(&v936) = *(&v28);\n
    *(&v935) = *(&v27);\n
    Token::operator+(&v19, &v55, &v933);\n
    v929 = *(&v15);\n
    vector::__base_ctor__(&v930, &v16);\n
    *(&v932) = *(&v18);\n
    *(&v931) = *(&v17);\n
    Token::operator+(&v6, &v19, &v929);\n
    v923 = 0;\n
    v924 = 0;\n
    *(&v925) = 0;\n
    v926 = 0;\n
    v927 = \")\";\n
    v928 = cgc_strlen(\")\");\n
    Token::operator+(&v11, &v6, &v923);\n
    Token::set(&v48, &v11);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v924);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v930);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v934);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v293);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v297);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v303);\n
    v917 = 0;\n
    v918 = 0;\n
    *(&v919) = 0;\n
    v920 = 0;\n
    v921 = \",\";\n
    v922 = cgc_strlen(\",\");\n
    Token::operator+(&v44, &v15, &v917);\n
    v913 = *(&v15);\n
    vector::__base_ctor__(&v914, &v16);\n
    *(&v916) = *(&v18);\n
    *(&v915) = *(&v17);\n
    Token::operator+(&v55, &v44, &v913);\n
    v909 = v29;\n
    vector::__base_ctor__(&v910, &v30);\n
    *(&v912) = *(&v33);\n
    *(&v911) = (&v31)[8];\n
    Token::operator+(&v19, &v55, &v909);\n
    Token::__ctor__(&v6, &v19, 2);\n
    Token::__ctor__(&v11, &v6, 1);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v910);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v914);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v918);\n
    v905 = *(&v11);\n
    vector::__base_ctor__(&v906, &v12);\n
    *(&v908) = *(&v14);\n
    *(&v907) = *(&v13);\n
    Token::operator+(&v19, &v29, &v905);\n
    Token::__ctor__(&v6, &v19, 1);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v906);\n
    v288 = *(&v15);\n
    vector::__base_ctor__(&v289, &v16);\n
    *(&v291) = *(&v18);\n
    *(&v290) = *(&v17);\n
    Token::operator+(&v72, &v29, &v288);\n
    v899 = 0;\n
    v900 = 0;\n
    *(&v901) = 0;\n
    v902 = 0;\n
    v903 = \"(\";\n
    v904 = cgc_strlen(\"(\");\n
    Token::operator+(&v66, &v72, &v899);\n
    v284 = *(&v15);\n
    vector::__base_ctor__(&v285, &v16);\n
    *(&v287) = *(&v18);\n
    *(&v286) = *(&v17);\n
    Token::operator+(&v53, &v66, &v284);\n
    v895 = v6;\n
    vector::__base_ctor__(&v896, &v7);\n
    *(&v898) = (&v9)[8];\n
    *(&v897) = *(&v8);\n
    Token::operator+(&v44, &v53, &v895);\n
    v891 = *(&v15);\n
    vector::__base_ctor__(&v892, &v16);\n
    *(&v894) = *(&v18);\n
    *(&v893) = *(&v17);\n
    Token::operator+(&v55, &v44, &v891);\n
    v885 = 0;\n
    v886 = 0;\n
    *(&v887) = 0;\n
    v888 = 0;\n
    v889 = \")\";\n
    v890 = cgc_strlen(\")\");\n
    Token::operator+(&v19, &v55, &v885);\n
    vector::__base_dtor__(&v886);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v892);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v896);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v285);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v900);\n
    vector::__base_dtor__(&v73);\n
    vector::__base_dtor__(&v289);\n
    v56 = 0;\n
    *(&v57) = 0;\n
    *(&v58) = 0;\n
    v59 = 0;\n
    v55 = 2;\n
    v279 = 0;\n
    *(&v280) = 0;\n
    v281 = 0;\n
    v278 = 0;\n
    v282 = \"var\";\n
    v283 = 3;\n
    v274 = *(&v86);\n
    vector::__base_ctor__(&v275, &v87);\n
    *(&v277) = *(&v89);\n
    *(&v276) = *(&v88);\n
    Token::operator+(&v120, &v278, &v274);\n
    v269 = 0;\n
    *(&v270) = 0;\n
    *(&v272) = 0;\n
    v273 = 0;\n
    v271 = &v39;\n
    Token::operator+(&v102, &v120, &v269, &v270);\n
    Token::__ctor__(&v108, &v102, 14);\n
    v264 = 0;\n
    *(&v265) = 0;\n
    v266 = 0;\n
    v263 = 0;\n
    v267 = \"var\";\n
    v268 = 3;\n
    v259 = *(&v86);\n
    vector::__base_ctor__(&v260, &v87);\n
    *(&v262) = *(&v89);\n
    *(&v261) = *(&v88);\n
    Token::operator+(&v879, &v263, &v259);\n
    v255 = v29;\n
    vector::__base_ctor__(&v256, &v30);\n
    *(&v258) = *(&v33);\n
    *(&v257) = (&v31)[8];\n
    Token::operator+(&v881, &v879, &v255);\n
    Token::__ctor__(&v883, &v881, 13);\n
    Token::operator|(&v118, &v108, &v883);\n
    v250 = 0;\n
    *(&v251) = 0;\n
    v252 = 0;\n
    v249 = 0;\n
    v253 = \"block:\";\n
    v254 = 6;\n
    Token::__ctor__(&v877, &v249, 18, &v250);\n
    Token::operator|(&v110, &v118, &v877);\n
    v244 = 0;\n
    *(&v245) = 0;\n
    v246 = 0;\n
    v243 = 0;\n
    v247 = \"while\";\n
    v248 = 5;\n
    v239 = *(&v86);\n
    vector::__base_ctor__(&v240, &v87);\n
    *(&v242) = *(&v89);\n
    *(&v241) = *(&v88);\n
    Token::operator+(&v867, &v243, &v239);\n
    v234 = 0;\n
    *(&v235) = 0;\n
    *(&v237) = 0;\n
    v238 = 0;\n
    v236 = &v0;\n
    Token::operator+(&v869, &v867, &v234);\n
    v230 = *(&v15);\n
    vector::__base_ctor__(&v231, &v16);\n
    *(&v233) = *(&v18);\n
    *(&v232) = *(&v17);\n
    Token::operator+(&v871, &v869, &v230);\n
    v224 = 0;\n
    v225 = 0;\n
    *(&v226) = 0;\n
    v227 = 0;\n
    v228 = \":\";\n
    v229 = cgc_strlen(\":\");\n
    Token::operator+(&v873, &v871, &v224);\n
    Token::__ctor__(&v875, &v873, 19);\n
    Token::operator|(&v112, &v110, &v875);\n
    v219 = 0;\n
    *(&v220) = 0;\n
    v221 = 0;\n
    v218 = 0;\n
    v222 = \"if\";\n
    v223 = 2;\n
    v214 = *(&v86);\n
    vector::__base_ctor__(&v215, &v87);\n
    *(&v217) = *(&v89);\n
    *(&v216) = *(&v88);\n
    Token::operator+(&v857, &v218, &v214);\n
    v209 = 0;\n
    *(&v210) = 0;\n
    *(&v212) = 0;\n
    v213 = 0;\n
    v211 = &v0;\n
    Token::operator+(&v859, &v857, &v209);\n
    v205 = *(&v15);\n
    vector::__base_ctor__(&v206, &v16);\n
    *(&v208) = *(&v18);\n
    *(&v207) = *(&v17);\n
    Token::operator+(&v861, &v859, &v205);\n
    v199 = 0;\n
    v200 = 0;\n
    *(&v201) = 0;\n
    v202 = 0;\n
    v203 = \":\";\n
    v204 = cgc_strlen(\":\");\n
    Token::operator+(&v863, &v861, &v199);\n
    Token::__ctor__(&v865, &v863, 20);\n
    Token::operator|(&v114, &v112, &v865);\n
    v194 = 0;\n
    *(&v195) = 0;\n
    v196 = 0;\n
    v193 = 0;\n
    v197 = \"elif\";\n
    v198 = 4;\n
    v189 = *(&v86);\n
    vector::__base_ctor__(&v190, &v87);\n
    *(&v192) = *(&v89);\n
    *(&v191) = *(&v88);\n
    Token::operator+(&v847, &v193, &v189);\n
    v184 = 0;\n
    *(&v185) = 0;\n
    *(&v187) = 0;\n
    v188 = 0;\n
    v186 = &v0;\n
    Token::operator+(&v849, &v847, &v184, &v0);\n
    v180 = *(&v15);\n
    vector::__base_ctor__(&v181, &v16);\n
    *(&v183) = *(&v18);\n
    *(&v182) = *(&v17);\n
    Token::operator+(&v851, &v849, &v180);\n
    v174 = 0;\n
    v175 = 0;\n
    *(&v176) = 0;\n
    v177 = 0;\n
    v178 = \":\";\n
    v179 = cgc_strlen(\":\");\n
    Token::operator+(&v853, &v851, &v174);\n
    Token::__ctor__(&v855, &v853, 21);\n
    Token::operator|(&v100, &v114, &v855);\n
    v169 = 0;\n
    *(&v170) = 0;\n
    v171 = 0;\n
    v168 = 0;\n
    v172 = \"else:\";\n
    v173 = 5;\n
    Token::__ctor__(&v845, &v168, 22, &v169);\n
    Token::operator|(&v80, &v100, &v845);\n
    v163 = 0;\n
    *(&v164) = 0;\n
    v165 = 0;\n
    v162 = 0;\n
    v166 = \"proc\";\n
    v167 = 4;\n
    v158 = *(&v86);\n
    vector::__base_ctor__(&v159, &v87);\n
    *(&v161) = *(&v89);\n
    *(&v160) = *(&v88);\n
    Token::operator+(&v835, &v162, &v158);\n
    v154 = v19;\n
    vector::__base_ctor__(&v155, &v20);\n
    *(&v157) = *(&v23);\n
    *(&v156) = (&v21)[8];\n
    Token::operator+(&v837, &v835, &v154);\n
    v150 = *(&v15);\n
    vector::__base_ctor__(&v151, &v16);\n
    *(&v153) = *(&v18);\n
    *(&v152) = *(&v17);\n
    Token::operator+(&v839, &v837, &v150);\n
    v144 = 0;\n
    v145 = 0;\n
    *(&v146) = 0;\n
    v147 = 0;\n
    v148 = \":\";\n
    v149 = cgc_strlen(\":\");\n
    Token::operator+(&v841, &v839, &v144);\n
    Token::__ctor__(&v843, &v841, 24);\n
    Token::operator|(&v72, &v80, &v843);\n
    v139 = 0;\n
    *(&v140) = 0;\n
    v141 = 0;\n
    v138 = 25;\n
    v142 = \"break\";\n
    v143 = cgc_strlen(\"break\");\n
    Token::operator|(&v66, &v72, &v138);\n
    v824 = 0;\n
    *(&v825) = 0;\n
    v826 = 0;\n
    v823 = 0;\n
    v827 = \"return\";\n
    v828 = 6;\n
    v134 = *(&v15);\n
    vector::__base_ctor__(&v135, &v16);\n
    *(&v137) = *(&v18);\n
    *(&v136) = *(&v17);\n
    Token::operator+(&v829, &v823, &v134);\n
    v816 = 0;\n
    *(&v817) = 0;\n
    *(&v819) = 0;\n
    v820 = 0;\n
    v818 = &v0;\n
    Token::__ctor__(&v821, &v816, 1);\n
    Token::operator+(&v831, &v829, &v821);\n
    Token::__ctor__(&v833, &v831, 26);\n
    Token::operator|(&v53, &v66, &v833);\n
    v811 = 0;\n
    *(&v812) = 0;\n
    *(&v814) = 0;\n
    v815 = 0;\n
    v813 = &v0;\n
    Token::operator|(&v44, &v53, &v811);\n
    vector::__base_dtor__(&v812);\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v834);\n
    vector::__base_dtor__(&v832);\n
    vector::__base_dtor__(&v822);\n
    vector::__base_dtor__(&v817);\n
    vector::__base_dtor__(&v830);\n
    vector::__base_dtor__(&v135);\n
    vector::__base_dtor__(&v824);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v139);\n
    vector::__base_dtor__(&v73);\n
    vector::__base_dtor__(&v844);\n
    vector::__base_dtor__(&v842);\n
    vector::__base_dtor__(&v145);\n
    vector::__base_dtor__(&v840);\n
    vector::__base_dtor__(&v151);\n
    vector::__base_dtor__(&v838);\n
    vector::__base_dtor__(&v155);\n
    vector::__base_dtor__(&v836);\n
    vector::__base_dtor__(&v159);\n
    vector::__base_dtor__(&v163);\n
    vector::__base_dtor__(&v81);\n
    vector::__base_dtor__(&v846);\n
    vector::__base_dtor__(&v169);\n
    vector::__base_dtor__(&v101);\n
    vector::__base_dtor__(&v856);\n
    vector::__base_dtor__(&v854);\n
    vector::__base_dtor__(&v175);\n
    vector::__base_dtor__(&v852);\n
    vector::__base_dtor__(&v181);\n
    vector::__base_dtor__(&v850);\n
    vector::__base_dtor__(&v185);\n
    vector::__base_dtor__(&v848);\n
    vector::__base_dtor__(&v190);\n
    vector::__base_dtor__(&v194);\n
    vector::__base_dtor__(&v115);\n
    vector::__base_dtor__(&v866);\n
    vector::__base_dtor__(&v864);\n
    vector::__base_dtor__(&v200);\n
    vector::__base_dtor__(&v862);\n
    vector::__base_dtor__(&v206);\n
    vector::__base_dtor__(&v860);\n
    vector::__base_dtor__(&v210);\n
    vector::__base_dtor__(&v858);\n
    vector::__base_dtor__(&v215);\n
    vector::__base_dtor__(&v219);\n
    vector::__base_dtor__(&v113);\n
    vector::__base_dtor__(&v876);\n
    vector::__base_dtor__(&v874);\n
    vector::__base_dtor__(&v225);\n
    vector::__base_dtor__(&v872);\n
    vector::__base_dtor__(&v231);\n
    vector::__base_dtor__(&v870);\n
    vector::__base_dtor__(&v235);\n
    vector::__base_dtor__(&v868);\n
    vector::__base_dtor__(&v240);\n
    vector::__base_dtor__(&v244);\n
    vector::__base_dtor__(&v111);\n
    vector::__base_dtor__(&v878);\n
    vector::__base_dtor__(&v250);\n
    vector::__base_dtor__(&v119);\n
    vector::__base_dtor__(&v884);\n
    vector::__base_dtor__(&v882);\n
    vector::__base_dtor__(&v256);\n
    vector::__base_dtor__(&v880);\n
    vector::__base_dtor__(&v260);\n
    vector::__base_dtor__(&v264);\n
    vector::__base_dtor__(&v109);\n
    vector::__base_dtor__(&v103);\n
    vector::__base_dtor__(&v270);\n
    vector::__base_dtor__(&v121);\n
    vector::__base_dtor__(&v275);\n
    vector::__base_dtor__(&v279);\n
    v130 = *(&v44);\n
    vector::__base_ctor__(&v131, &v45);\n
    *(&v133) = *(&v47);\n
    *(&v132) = *(&v46);\n
    Token::operator+(&v100, &v795, &v130);\n
    Token::__ctor__(&v80, &v100, 16);\n
    v126 = *(&v15);\n
    vector::__base_ctor__(&v127, &v16);\n
    *(&v129) = *(&v18);\n
    *(&v128) = *(&v17);\n
    Token::operator+(&v72, &v80, &v126);\n
    v806 = 0;\n
    *(&v807) = 0;\n
    v808 = 0;\n
    v805 = 0;\n
    v809 = \"\\n
\";\n
    v810 = 1;\n
    Token::operator+(&v66, &v72, &v805);\n
    v798 = 0;\n
    *(&v799) = 0;\n
    v800 = 0;\n
    v797 = 0;\n
    v801 = \"\\n
\";\n
    v802 = 1;\n
    Token::operator+(&v803, &v15, &v797);\n
    v1160 = &v53;\n
    Token::operator|(&v53, &v66, &v803);\n
    vector::__base_dtor__(&v804);\n
    vector::__base_dtor__(&v798);\n
    vector::__base_dtor__(&v67);\n
    vector::__base_dtor__(&v806);\n
    vector::__base_dtor__(&v73);\n
    vector::__base_dtor__(&v127);\n
    vector::__base_dtor__(&v81);\n
    vector::__base_dtor__(&v101);\n
    vector::__base_dtor__(&v131);\n
    Token::set(&v55, &v53);\n
    *(&a0[2]) = 0;\n
    if (!Token::parse const(&v55, a0[0], a0[1], a0 + 1, &a0[2]))\n
    {\n
        v1164 = \"unable to parse file\\n
\";\n
        v1161 = &v69;\n
        v1165 = &v91;\n
        v1166 = &v87;\n
        v1162 = &v16;\n
        v1163 = &v83;\n
    }\n
    else\n
    {\n
        *(&v1160) = 1;\n
        v1161 = &v69;\n
        v1165 = &v91;\n
        v1166 = &v87;\n
        v1162 = &v16;\n
        v1163 = &v83;\n
        if (a0[2] == a0[1])\n
            goto LABEL_40e3e0;\n
        v1164 = \"unable to parse entire file\\n
\";\n
    }\n
    v1160 = 0;\n
    cgc_fprintf(*(&cgc_stderr), v1164);\n
LABEL_40e3e0:\n
    vector::__base_dtor__(&v54);\n
    vector::__base_dtor__(&v45);\n
    vector::__base_dtor__(&v56);\n
    vector::__base_dtor__(&v20);\n
    vector::__base_dtor__(&v7);\n
    vector::__base_dtor__(&v12);\n
    vector::__base_dtor__(&v26);\n
    vector::__base_dtor__(&v36);\n
    vector::__base_dtor__(&v61);\n
    vector::__base_dtor__(&v1);\n
    vector::__base_dtor__(&v49);\n
    vector::__base_dtor__(&v40);\n
    vector::__base_dtor__(&v63);\n
    vector::__base_dtor__(&v30);\n
    vector::__base_dtor__(v1161);\n
    vector::__base_dtor__(&v79);\n
    vector::__base_dtor__(v1163);\n
    vector::__base_dtor__(&v117);\n
    vector::__base_dtor__(v1165);\n
    vector::__base_dtor__(&v95);\n
    vector::__base_dtor__(v1162);\n
    vector::__base_dtor__(v1166);\n
    vector::__base_dtor__(&v796);\n
    return v1160;\n
}\n
", "4252926:_Zli2_TPKcm": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long _Zli2_TPKcm(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_0 = 0;\n
    a0->field_28 = a1;\n
    a0->field_30 = a2;\n
    return a0;\n
}\n
", "4252961:sub_40e521": null, "4252962:_ZN5TokenppEi": "long long Token::operator++(unsigned long a0)\n
{\n
    Token::__ctor__();\n
    return a0;\n
}\n
", "4252981:sub_40e535": null, "4252982:_ZN5TokenorES_": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
    unsigned int field_38;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_-8;\n
} struct_2;\n
\n
double Token::operator|(long long a0, long long a1, long long a2)\n
{\n
    unsigned int *v0;  // [bp-0x48]\n
    struct_3 *v1;  // [bp-0x40]\n
    struct_1 *v2;  // [bp-0x38]\n
    struct_3 *v4;  // r15, Other Possible Types: unsigned long\n
    struct_1 *v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned int *v6;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v8;  // rbx\n
    unsigned long v9;  // r12\n
    int v10;  // xmm0\n
    void* v11;  // r15, Other Possible Types: unsigned long\n
    void* v12;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v13;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v14;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    struct_0 *v15;  // rbp\n
    int v16;  // xmm0\n
    struct_0 *v17;  // rbx\n
    struct_0 *v18;  // r14\n
    unsigned long long v19;  // rbx\n
    struct_2 *v20;  // rdi\n
    uint128_t v21[2];  // rbx, Other Possible Types: unsigned long\n
    int v22;  // xmm0\n
\n
    v4 = a2;\n
    v5 = a1;\n
    v6 = &a0->field_8;\n
    v12 = 0;\n
    *(&a0->field_8) = 0;\n
    *(&a0->field_10) = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    a0->field_0 = 3;\n
    if (a1->field_0 == 3)\n
    {\n
        vector::resize(v6, a1->field_8 + 1);\n
        if (v5->field_8)\n
        {\n
            v0 = v6;\n
            v1 = a2;\n
            v13 = 8;\n
            v14 = 0;\n
            v11 = 0;\n
            v2 = v5;\n
            do\n
            {\n
                v8 = *((v5 + 16));\n
                if (v11 >= *(v0))\n
                    cgc_exit();\n
                v9 = a0->field_10;\n
                *((v9 + v14)) = *((v8 + v14));\n
                vector::operator=(v9 + v13, v8 + v13);\n
                v10 = *((v8 + v14 + 24));\n
                *((v9 + v14 + 40)) = *((v8 + v14 + 40));\n
                *((v9 + v14 + 24)) = v10;\n
                v11 += 1;\n
                v5 = v2;\n
                v12 = *((v5 + 8));\n
                v13 += 56;\n
                v14 += 56;\n
            } while (v11 < v12);\n
            v4 = v1;\n
            v6 = v0;\n
        }\n
        if (*(v6) <= v12)\n
            cgc_exit();\n
        v18 = a0->field_10;\n
        v19 = v12 * 56;\n
        v20 = &v18->padding_4[4 + v19];\n
        v20[2].field_-8 = *(v4);\n
        vector::operator=(v20, v4 + 8);\n
        v21 = &(&v18->padding_4)[1 + v19];\n
    }\n
    else\n
    {\n
        vector::resize(v6, 2);\n
        if (!*(v6))\n
            cgc_exit();\n
        v15 = a0->field_10;\n
        v15->field_0 = a1->field_0;\n
        vector::operator=(&v15->padding_4[4], &a1->field_8);\n
        v16 = *(&(&a1->field_10)[1]);\n
        *((&v15->field_18 + 8)) = *((&a1->field_18 + 8));\n
        *(&(&v15->padding_4)[1]) = v16;\n
        if (a0->field_8 <= 1)\n
            cgc_exit();\n
        v17 = a0->field_10;\n
        *((&v17->field_28 + 8)) = a2->field_0;\n
        vector::operator=(&v17->field_38, &a2->padding_4[4]);\n
        v21 = &v17[1].padding_4[8];\n
    }\n
    v22 = *((v4 + 24));\n
    *((v21 + 16)) = *((v4 + 40));\n
    *(v21) = v22;\n
    return v22;\n
}\n
", "4253418:_ZN5TokenplES_": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
    unsigned int field_38;\n
    char padding_3c[20];\n
    uint128_t field_50;\n
    uint128_t field_60;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_2;\n
\n
double Token::operator+(long long a0, long long a1, long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rbx\n
    struct_0 *v5;  // r12\n
    int v6;  // xmm0\n
    struct_0 *v7;  // r15\n
    int v8;  // xmm0\n
    int v9;  // xmm1\n
\n
    v0 = v2;\n
    v3 = a0;\n
    *(&v3->field_8) = 0;\n
    *(&v3->field_10) = 0;\n
    v3->field_20 = 0;\n
    v3->field_30 = 0;\n
    v3->field_0 = 4;\n
    vector::resize(&a0->field_8, 2);\n
    if (!v3->field_8)\n
        cgc_exit();\n
    v5 = v3->field_10;\n
    v5->field_0 = a1->field_0;\n
    vector::operator=(&v5->padding_4[4], &a1->padding_4[4]);\n
    v6 = *(&(&a1->padding_4)[1]);\n
    *((&v5->field_18 + 8)) = *((&a1->field_18 + 8));\n
    *(&(&v5->padding_4)[1]) = v6;\n
    if (v3->field_8 <= 1)\n
        cgc_exit();\n
    v7 = v3->field_10;\n
    *((&v7->field_28 + 8)) = a2->field_0;\n
    vector::operator=(&v7->field_38, &a2->padding_4[4]);\n
    v8 = *(&(&a2->padding_4)[1]);\n
    v9 = *((&a2->field_18 + 8));\n
    *(&v7->padding_3c[12]) = v8;\n
    *(&v7->field_50) = v9;\n
    return v8;\n
}\n
", "4253614:_ZN5Token3setERKS_": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_0;\n
\n
double Token::set(long long a0, long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rbx\n
    int v4;  // xmm0\n
    int v5;  // xmm1\n
\n
    v0 = v2;\n
    vector::resize(&a0->field_8, 1);\n
    if (!a0->field_8)\n
        cgc_exit();\n
    v3 = a0->field_10;\n
    v3->field_0 = a1->field_0;\n
    vector::operator=(&v3->padding_4[4], &a1->padding_4[4]);\n
    v4 = *(&(&a1->padding_4)[1]);\n
    v5 = *((&a1->field_18 + 8));\n
    *(&(&v3->padding_4)[1]) = v4;\n
    *((&v3->field_18 + 8)) = v5;\n
    return v4;\n
}\n
", "4253702:_ZN5TokenadEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    uint128_t field_8;\n
    unsigned long long field_18;\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::operator&(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = 0;\n
    *(&(&a0->padding_4)[1]) = 0;\n
    *(&a0->field_18) = 0;\n
    *(&a0->field_20) = 0;\n
    *((&a0->field_8 + 8)) = a1;\n
    return a0;\n
}\n
", "4253735:sub_40e827": null, "4253736:_ZN5Token8setAfterERS_": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long Token::setAfter(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_20 = a1;\n
    return v1;\n
}\n
", "4253741:sub_40e82d": null, "4253742:_ZNK5Token5parseEPKcmPP4NodePm": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_0 *g_18;\n
\n
long long Token::parse const(unsigned int *a0, unsigned long long a1, unsigned long long a2, unsigned long long *a3, unsigned long long *a4)\n
{\n
    char v0;  // [bp-0x49]\n
    void* v1;  // [bp-0x48], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x40]\n
    unsigned long long *v3;  // [bp-0x38]\n
    unsigned long v5;  // r12, Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // r14\n
    struct_0 *v10;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v11;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rax\n
    struct_0 *v13;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v14;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v15;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v16;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long v17;  // rax\n
\n
    v5 = a2;\n
    v6 = a1;\n
    v7 = *(a0);\n
    if (v7 == 1)\n
    {\n
        v1 = 0;\n
        if (!Token::parse_ const(a0, a1, a2, &v2, &v1))\n
        {\n
            *(a3) = 0;\n
LABEL_40e97d:\n
            v15 = v6;\n
            v16 = v5;\n
LABEL_40e989:\n
            v17 = Token::after_ const(a0, v15, v16, a3, a4);\n
            *(&v17) = 1;\n
            return v17;\n
        }\n
        *(a3) = *(&v2);\n
        v14 = v1;\n
        *(a4) = *(a4) + v14;\n
        v6 = a1 + v14;\n
        goto LABEL_40e964;\n
    }\n
    else\n
    {\n
        if (v7 == 2)\n
        {\n
            v1 = 0;\n
            v8 = Token::parse_ const(a0, a1, a2, &v2, &v1);\n
            if (!v8)\n
            {\n
                *(a3) = 0;\n
            }\n
            else\n
            {\n
                v0 = v8;\n
                v3 = a3;\n
                v13 = 0;\n
                v11 = 0;\n
                do\n
                {\n
                    v10 = *(&v2);\n
                    if (!v10)\n
                    {\n
                        v10 = v13;\n
                    }\n
                    else if (!v11)\n
                    {\n
                        v11 = v10;\n
                    }\n
                    else\n
                    {\n
                        *((v13 + &g_18)) = v10;\n
                    }\n
                    v12 = v1;\n
                    v6 += v12;\n
                    v5 -= v12;\n
                    *(a4) = *(a4) + v12;\n
                    v1 = 0;\n
                    v13 = v10;\n
                } while (Token::parse_ const(a0, v6, v5, &v2, &v1));\n
                a3 = v3;\n
                *(a3) = v11;\n
                if (v0)\n
                {\n
                    v15 = v6;\n
                    v16 = v5;\n
                    goto LABEL_40e989;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v9 = *(a4);\n
            if (Token::parse_ const(a0, a1, a2, a3, a4))\n
            {\n
                v14 = *(a4);\n
                v6 = a1 + v14 - v9;\n
                v5 = a2 + v9;\n
LABEL_40e964:\n
                v5 -= v14;\n
                goto LABEL_40e97d;\n
            }\n
        }\n
        return 0;\n
    }\n
}\n
", "4254114:_ZN5TokenC2Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    return 0;\n
}\n
", "4254142:_ZN5TokenC1E9TokenType": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    a0->field_0 = a1;\n
    return 0;\n
}\n
", "4254166:_ZN5TokenC1EPKc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::__ctor__(struct_0 *a0, char *a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    a0->field_28 = a1;\n
    v1 = cgc_strlen(a1);\n
    a0->field_30 = v1;\n
    return v1;\n
}\n
", "4254215:sub_40ea07": null, "4254216:_ZN5TokenC2EPKc9TokenType": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::__base_ctor__(struct_0 *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_30 = 0;\n
    a0->field_0 = a2;\n
    a0->field_28 = a1;\n
    v1 = cgc_strlen(a1);\n
    a0->field_30 = v1;\n
    return v1;\n
}\n
", "4254261:sub_40ea35": null, "4254262:_ZN5TokenC1EPKcm9TokenType": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long Token::__ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    a0->field_0 = a3;\n
    a0->field_28 = a1;\n
    a0->field_30 = a2;\n
    return 0;\n
}\n
", "4254290:_ZN5TokenC1ERKS_9TokenType": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    char padding_18[8];\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    uint128_t field_18;\n
    uint128_t field_28;\n
} struct_0;\n
\n
double Token::__ctor__(long long a0, long long a1, long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rbx\n
    struct_0 *v5;  // rbx\n
    int v6;  // xmm0\n
    int v7;  // xmm1\n
\n
    v0 = v2;\n
    v3 = a0;\n
    *(&v3->field_8) = 0;\n
    *(&v3->field_10) = 0;\n
    v3->field_20 = 0;\n
    v3->field_30 = 0;\n
    v3->field_0 = a2;\n
    vector::resize(&a0->field_8, 1);\n
    if (!v3->field_8)\n
        cgc_exit();\n
    v5 = v3->field_10;\n
    v5->field_0 = a1->field_0;\n
    vector::operator=(&v5->padding_4[4], &a1->padding_4[4]);\n
    v6 = *(&(&a1->padding_4)[1]);\n
    v7 = *((&a1->field_18 + 8));\n
    *(&(&v5->padding_4)[1]) = v6;\n
    *((&v5->field_18 + 8)) = v7;\n
    return v6;\n
}\n
", "4254401:sub_40eac1": null, "4254402:_ZNK5Token6after_EPKcmPP4NodePm": "typedef struct struct_1 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_stderr;\n
\n
long long Token::after_ const(struct_1 *a0, unsigned long long a1, unsigned long long a2, struct struct_3 **a3, unsigned long long *a4)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned int *v3;  // rdi\n
    struct struct_3 **v4;  // r14\n
    struct_3 *v5;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v6;  // rdi\n
    struct_0 *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rax\n
    unsigned long v10;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = a0->field_20;\n
    if (!v3)\n
        return v10;\n
    v4 = a3;\n
    v0 = 0;\n
    v10 = Token::parse const(v3, a1, a2, &v1, &v0);\n
    if (!v10)\n
        return v10;\n
    v5 = *(a3);\n
    if (v5->field_18)\n
    {\n
        cgc_fprintf(*(&cgc_stderr), \"in after_, pNode already has next\\n
\");\n
        v5 = *(a3);\n
    }\n
    v6 = v1;\n
    v7 = v6->field_10;\n
    *((v5 + 24)) = v7;\n
    v6->field_10 = &*(v4)->padding_0[0];\n
    v8 = v0;\n
    *(a4) = *(a4) + v8;\n
    *(v4) = &v6;\n
    v9 = v6->field_10->field_8;\n
    v10 = Node::setLiteral(v6, a1 - v9, v8 + v9, v7);\n
    return v10;\n
}\n
", "4254551:sub_40eb57": null, "4254552:_ZN4Node10setLiteralEPKcm": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long Node::setLiteral(struct_0 *a0, unsigned int a1, char *a2)\n
{\n
    struct_0 *v1;  // rbx\n
    char *v2;  // rdi\n
    char *v3;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = a0;\n
    v2 = a0->field_0;\n
    if (v2)\n
        operator delete[](v2);\n
    v3 = operator new[](a2 + 1);\n
    v1->field_0 = v3;\n
    cgc_memcpy(v3, a1, a2);\n
    v4 = v1->field_0;\n
    a2[v4] = 0;\n
    v1->field_8 = a2;\n
    return v4;\n
}\n
", "4254623:sub_40eb9f": null, "4254624:_ZNK5Token6parse_EPKcmPP4NodePm": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    char padding_20[8];\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int *field_10;\n
    unsigned long long field_18;\n
    char padding_20[8];\n
    unsigned long long field_28;\n
    char *field_30;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    uint128_t field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_2 *field_18;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_3;\n
\n
extern unsigned int cgc_stderr;\n
\n
long long Token::parse_ const(struct_1 *a0, unsigned long a1, unsigned long long a2, struct struct_2 **a3, unsigned long long *a4)\n
{\n
    unsigned long long v0;  // [bp-0x50]\n
    unsigned long long *v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x40]\n
    unsigned long long v3;  // [bp-0x38]\n
    unsigned long long *v5;  // r14\n
    struct struct_2 **v6;  // r12\n
    unsigned long v7;  // r13, Other Possible Types: unsigned long long\n
    unsigned long v8;  // r15\n
    struct_4 *v9;  // rbx\n
    unsigned long v10;  // rsi\n
    unsigned long v11;  // rdx\n
    unsigned int v12;  // eax\n
    unsigned long long v13;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rbp\n
    struct_0 *v15;  // rax\n
    unsigned long v16;  // r14, Other Possible Types: unsigned long long\n
    void* v17;  // r15, Other Possible Types: unsigned long\n
    unsigned int v18;  // ecx\n
    unsigned long v19;  // rbp, Other Possible Types: char\n
    struct_2 *v20;  // rax, Other Possible Types: unsigned long\n
    struct_3 *v21;  // rax\n
    unsigned long long v22;  // r12\n
    unsigned int v23;  // ecx\n
    char *v24;  // rbx\n
    struct_2 *v25;  // rbp\n
    unsigned long long v27;  // rax\n
    unsigned long long v30;  // rax\n
\n
    v5 = a4;\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v13 = a0->field_18;\n
    if (v13)\n
    {\n
LABEL_40ebc6:\n
        return Token::parse const(v13, v8, v7, a3, a4);\n
    }\n
    v10 = v9->field_28;\n
    if (v10)\n
    {\n
        v11 = v9->field_30;\n
        if (v11 <= v7 && !cgc_memcmp(v8, v10, v11))\n
        {\n
            if (v9->field_0 < 3)\n
            {\n
                *(a3) = 0;\n
            }\n
            else\n
            {\n
                v15 = operator new(32);\n
                v18 = v9->field_0;\n
                v15->field_0 = 0;\n
                v15->field_c = v18;\n
                v15->field_10 = 0;\n
                *(v6) = &v15->field_0;\n
                Node::setLiteral(v15, v8, v9->field_30);\n
            }\n
            *(v5) = &v9->field_30[*(v5)];\n
            v19 = 1;\n
            return v19;\n
        }\n
    }\n
    else\n
    {\n
        if (!v9->field_8)\n
        {\n
            cgc_fprintf(*(&cgc_stderr), \"missing child or literal\\n
\");\n
            return 0;\n
        }\n
        v12 = v9->field_0;\n
        if (v12 < 3)\n
        {\n
            v13 = v9->field_10;\n
            goto LABEL_40ebc6;\n
        }\n
        if (v12 != 4)\n
        {\n
            if (v12 != 3)\n
            {\n
                v2 = 0;\n
                v19 = Token::parse const(v9->field_10, v8, a2, &v3, &v2);\n
                if (v19)\n
                {\n
                    v21 = operator new(32);\n
                    v23 = v9->field_0;\n
                    v21->field_0 = 0;\n
                    v21->field_c = v23;\n
                    v21->field_18 = 0;\n
                    *(v6) = &v21->field_0;\n
                    v21->field_10 = v3;\n
                    v24 = v2;\n
                    Node::setLiteral(v21, v8, v24);\n
                    *(v5) = &v24[*(v5)];\n
                    return v19;\n
                }\n
                return v19;\n
            }\n
            else\n
            {\n
                v0 = v8;\n
                v1 = a4;\n
                v16 = 1;\n
                v17 = 0;\n
                while (true)\n
                {\n
                    v19 = Token::parse const(v9->field_10 + v17, v0, a2, a3, v1);\n
                    if (v19)\n
                        return v19;\n
                    v17 += 56;\n
                    v16 += 1;\n
                    if (1 >= v9->field_8)\n
                        return v19;\n
                }\n
            }\n
        }\n
        v14 = *(a4);\n
        if (Token::parse const(v9->field_10, v8, a2, a3, a4))\n
        {\n
            v20 = *(a3);\n
            if (!v20)\n
            {\n
                if (v9->field_8 <= 1)\n
                    cgc_exit();\n
                v13 = v9->field_10 + 14;\n
                v27 = *(a4);\n
                v8 = v8 + v27 - v14;\n
                v7 = a2 + v14 - v27;\n
                goto LABEL_40ebc6;\n
            }\n
            else\n
            {\n
                v22 = v14;\n
                do\n
                {\n
                    v25 = v20;\n
                    v20 = *((v20 + 24));\n
                } while (v20);\n
                if (v9->field_8 <= 1)\n
                    cgc_exit();\n
                v30 = *(a4);\n
                return Token::parse const(v9->field_10 + 14, v8 + v30 - v22, a2 + v22 - v30, &v25->field_18, a4);\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4255232:_ZN4NodeC1E9TokenType": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long Node::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_0 = 0;\n
    a0->field_c = a1;\n
    a0->field_10 = 0;\n
    return v1;\n
}\n
", "4255250:_ZN4NodeD1Ev": "long long Node::__dtor__(unsigned long long *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    if (!(!*(a0)))\n
        goto LABEL_0x4040b0;\n
    return v1;\n
}\n
", "4255263:sub_40ee1f": null, "4255264:_ZN4Node4dumpEj": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern unsigned int cgc_stderr;\n
\n
long long Node::dump(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_9;  // tmp #9\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v4;  // ebp\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rdi\n
\n
    v0 = v2;\n
    v3 = a0;\n
    do\n
    {\n
        v4 = a1 * 2;\n
        if (v4)\n
        {\n
            do\n
            {\n
                cgc_fprintf(*(&cgc_stderr), \" \");\n
                tmp_9 = v4 - 1;\n
                v4 -= 1;\n
            } while (tmp_9);\n
        }\n
        v5 = cgc_fprintf(*(&cgc_stderr), \"%s - (%d) %s\\n
\");\n
        v6 = *((v3 + 16));\n
        if (v6)\n
            v5 = Node::dump(v6, a1 + 1);\n
        v3 = *((v3 + 24));\n
    } while (v3);\n
    return v5;\n
}\n
", "4255426:_ZN6vectorI5TokenE6resizeEj": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_-8;\n
    char padding_-4[20];\n
    uint128_t field_10;\n
    uint128_t field_20;\n
} struct_0;\n
\n
long long vector::resize(struct_1 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    void* v1;  // [bp-0x60]\n
    int v2;  // [bp-0x58]\n
    int v3;  // [bp-0x48]\n
    void* v4;  // [bp-0x38]\n
    unsigned long v6;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long v7;  // r14, Other Possible Types: unsigned long long\n
    struct_0 *v8;  // rbp\n
\n
    vector::enlarge();\n
    if (a0->field_0 <= a1)\n
    {\n
        a0->field_0 = a1;\n
        return a1;\n
    }\n
    v6 = a1;\n
    v7 = v6 * 56;\n
    do\n
    {\n
        v0 = 0;\n
        v1 = 0;\n
        *(&v2) = 0;\n
        *(&v3) = 0;\n
        v4 = 0;\n
        v8 = a0->field_8 + v7 + 8;\n
        *(&v8->padding_-4[4]) = 0;\n
        vector::operator=(v8, &v1);\n
        *(&v8->padding_-4[12]) = (&v2)[8];\n
        v8->field_10 = (&v3)[8];\n
        vector::__base_dtor__(&v1);\n
        v6 += 1;\n
        v7 += 56;\n
    } while (v6 < a0->field_0);\n
}\n
", "4255595:sub_40ef6b": null, "4255596:_ZN6vectorI5TokenED2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long vector::__base_dtor__(struct_0 *a0)\n
{\n
    struct_0 *v1;  // r14\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    void* v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!a0->field_4)\n
        return v4;\n
    v1 = a0;\n
    v2 = 8;\n
    v3 = 0;\n
    do\n
    {\n
        a0 = *((a0 + 8)) + v2;\n
        vector::__base_dtor__(a0);\n
        v3 += 1;\n
        v4 = v1->field_4;\n
        v2 += 56;\n
    } while (v3 < v4);\n
    if (v4)\n
    {\n
        v4 = cgc_free(v1->field_8);\n
        v1->field_8 = 0;\n
        return v4;\n
    }\n
    return v1->field_4;\n
}\n
", "4255673:sub_40efb9": null, "4255674:_ZN6vectorI5TokenEC2ERKS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long vector::__base_ctor__(struct_2 *a0, struct_0 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct_0 *v2;  // rax\n
    unsigned int *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long v4;  // r14\n
    int v5;  // xmm0\n
    unsigned int *v6;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v8;  // rbp\n
    unsigned long v9;  // r13, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    v3 = a1->field_0;\n
    a0->field_0 = v3;\n
    v0 = a1;\n
    a0->field_4 = a1->field_0;\n
    if (!v3)\n
        return a1->field_0;\n
    v3 = cgc_malloc(v3 * 56);\n
    a0->field_8 = v3;\n
    if (!a0->field_0)\n
        return v3;\n
    v6 = v3;\n
    v7 = 8;\n
    v9 = 1;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v4 = v0->field_8;\n
        *((v6 + v8)) = *((v4 + v8));\n
        vector::operator=(v6 + v7, v4 + v7);\n
        v5 = *((v4 + v8 + 24));\n
        *((v6 + v8 + 40)) = *((v4 + v8 + 40));\n
        *((v6 + v8 + 24)) = v5;\n
        v3 = a0->field_0;\n
        if (v9 >= v3)\n
            break;\n
        v6 = a0->field_8;\n
        v7 += 56;\n
        v8 += 56;\n
        v9 += 1;\n
    }\n
    return a0->field_0;\n
}\n
", "4255832:_ZN6vectorI5TokenEaSERKS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long vector::operator=(struct_2 *a0, struct_0 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct_0 *v2;  // rax\n
    unsigned long long v3;  // rax\n
    unsigned int *v4;  // rax\n
    unsigned long v5;  // r14\n
    int v6;  // xmm0\n
    unsigned long v7;  // r12, Other Possible Types: unsigned long long\n
    unsigned long v8;  // rbp\n
    unsigned long v9;  // r13, Other Possible Types: unsigned long long\n
    unsigned int *v10;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a1->field_0;\n
    a0->field_0 = v3;\n
    v0 = a1;\n
    a0->field_4 = a1->field_0;\n
    if (!v3)\n
        return a0;\n
    v4 = cgc_malloc(v3 * 56);\n
    a0->field_8 = v4;\n
    if (!a0->field_0)\n
        return a0;\n
    v10 = v4;\n
    v7 = 8;\n
    v9 = 1;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v5 = v0->field_8;\n
        *((v10 + v8)) = *((v5 + v8));\n
        vector::operator=(v10 + v7, v5 + v7);\n
        v6 = *((v5 + v8 + 24));\n
        *((v10 + v8 + 40)) = *((v5 + v8 + 40));\n
        *((v10 + v8 + 24)) = v6;\n
        if (v9 >= a0->field_0)\n
            break;\n
        v10 = a0->field_8;\n
        v7 += 56;\n
        v8 += 56;\n
        v9 += 1;\n
    }\n
    return a0;\n
}\n
", "4255993:sub_40f0f9": null, "4255994:_ZN6vectorI5TokenE7enlargeEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    uint128_t field_20;\n
    unsigned long long field_30;\n
} struct_1;\n
\n
long long vector::enlarge(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // rbp\n
    unsigned long long v6;  // r12\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r12\n
    struct_1 *v10;  // rax\n
    unsigned long long v11;  // r15\n
    char *v12;  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0->field_4 >= a1)\n
        return v0;\n
    v3 = a1;\n
    v4 = a0;\n
    v6 = a1 * 56;\n
    v7 = cgc_realloc(a0->field_8, v6);\n
    v4->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_exit();\n
        v7 = v4->field_8;\n
    }\n
    v1 = v4;\n
    v8 = v4->field_4;\n
    v0 = v3;\n
    if (v8 < v3)\n
    {\n
        v9 = v6 + v7;\n
        v12 = v8 * 56 + v7;\n
        do\n
        {\n
            v10 = operator new(56);\n
            v10->field_0 = 0;\n
            v10->field_8 = 0;\n
            v10->field_10 = 0;\n
            v10->field_20 = 0;\n
            v10->field_30 = 0;\n
            v11 = v12 + 56;\n
            cgc_memcpy(v12, v10, 56);\n
            vector::__base_dtor__(&v10->field_8);\n
            operator delete(v10);\n
            v12 = v11;\n
        } while (v11 < v9);\n
    }\n
    v1->field_4 = v0;\n
    return v0;\n
}\n
", "4256205:sub_40f1cd": null, "4256208:main": "extern unsigned int cgc_stderr;\n
extern char *program;\n
\n
int main()\n
{\n
    unsigned long long v0[4];  // [bp-0x70]\n
    void* v1;  // [bp-0x58], Other Possible Types: char\n
    char v2;  // [bp-0x50]\n
    unsigned long long v4;  // rsi\n
\n
    Parser::__ctor__(v0, program);\n
    if (!Parser::parse(v0))\n
    {\n
        cgc_fprintf(*(&cgc_stderr), \"Program error\\n
\");\n
    }\n
    else\n
    {\n
        v4 = *(&v1);\n
        v1 = 0;\n
        Evaluator::__ctor__(&v2, v4);\n
        ArrayVar::registerExternals(&v2);\n
        Evaluator::addExternal(&v2, \"chr\", builtin_chr, 0);\n
        Evaluator::addExternal(&v2, \"echo\", builtin_echo, 0);\n
        Evaluator::addExternal(&v2, \"ord\", builtin_ord, 0);\n
        Evaluator::addExternal(&v2, \"flag\", builtin_flag, 0x4347c000);\n
        Evaluator::addExternal(&v2, \"rand\", builtin_rand, 0x4347c000);\n
        Evaluator::addExternal(&v2, \"read\", builtin_read, 0);\n
        if (!Evaluator::run(&v2))\n
            cgc_fprintf(*(&cgc_stderr), \"Eval error\\n
\");\n
        Evaluator::__base_dtor__(&v2);\n
    }\n
    Parser::__dtor__(v0);\n
    return 0;\n
}\n
", "4256524:_ZL11builtin_chrPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_5 *field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char field_c;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    struct struct_3 *field_0;\n
} struct_5;\n
\n
long long builtin_chr(unsigned long a0, unsigned long a1, struct_4 *a2, struct struct_2 **a3)\n
{\n
    struct_4 *v1;  // rbx, Other Possible Types: unsigned long\n
    struct_3 *v2;  // rax\n
    struct struct_2 **v3;  // r15\n
    struct_6 *v4;  // rax\n
    struct struct_1 **v6;  // rdi\n
\n
    if (a2->field_0 != 1)\n
        return 0;\n
    v1 = a2;\n
    v2 = a2->field_8->field_0;\n
    if (v2 && v2->field_8 == 3)\n
    {\n
        v3 = a3;\n
        v4 = operator new(32);\n
        StringVar::__base_ctor__(v4);\n
        vector::resize(&v4->field_10, 0x1);\n
        if (!a2->field_0)\n
            cgc_exit();\n
        *((!v4->field_10 ? v4->field_18 : 0)) = a2->field_8->field_0->field_c;\n
        v6 = *(v3);\n
        *(v3) = &v4->padding_0[0];\n
        *(&v1) = 1;\n
        if (v6)\n
        {\n
            *(v6)->field_8(v6);\n
            return v1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4256669:_ZL12builtin_echoPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern unsigned int cgc_stderr;\n
extern void* cgc_stdout;\n
\n
long long builtin_echo(unsigned long a0, unsigned long a1, struct_1 *a2, struct struct_5 **a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct struct_0 **v3;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax\n
    unsigned long v5;  // rdi, Other Possible Types: unsigned long long\n
    struct struct_4 **v6;  // rdi\n
\n
    v0 = v2;\n
    if (a2->field_0)\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            v4 = a2->field_8[v3].field_0;\n
            if (!v4)\n
            {\n
LABEL_40f40c:\n
                cgc_fprintf(*(&cgc_stderr), \"Error: bad type in echo\\n
\");\n
                return 0;\n
            }\n
            else if (!(v4->field_8 == 2))\n
            {\n
                goto LABEL_40f40c;\n
            }\n
            v5 = v4->field_10;\n
            if (v5)\n
                v5 = v4->field_18;\n
            cgc_fwrite(v5, v5, cgc_stdout);\n
            v3 += 1;\n
        } while (v3 < a2->field_0);\n
    }\n
    v6 = *(a3);\n
    *(a3) = 0;\n
    *(&v3) = 1;\n
    if (v6)\n
    {\n
        *(v6)->field_8(v6);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4256820:_ZL11builtin_ordPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_6 *field_8;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    struct struct_0 *field_0;\n
} struct_6;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long builtin_ord(unsigned long a0, unsigned long a1, struct_5 *a2, struct struct_4 **a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct struct_0 **v3;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    struct_0 *v4;  // rbp\n
    unsigned int v5;  // r15d\n
    void* v6;  // r14\n
    struct struct_3 **v7;  // rdi\n
\n
    v0 = v2;\n
    if (a2->field_0 != 1)\n
        return 0;\n
    v3 = a2->field_8;\n
    v4 = *(v3);\n
    if (v4 && v4->field_8 == 2)\n
    {\n
        v5 = v4->field_10;\n
        if (v5)\n
        {\n
            v6 = operator new(16);\n
            v3 = NumberVar::__ctor__(v6, v4->field_18->field_0);\n
            v7 = *(a3);\n
            *(a3) = v6;\n
            if (v7)\n
                v3 = *(v7)->field_8(v7);\n
        }\n
        *(&v3) = v5;\n
        return v3;\n
    }\n
}\n
", "4256928:_ZL12builtin_flagPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long builtin_flag(unsigned int *a0, unsigned long a1, struct_1 *a2, struct struct_5 **a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_1 *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v4[4];  // rax\n
    void* v5;  // rax\n
    struct struct_4 **v6;  // rdi\n
\n
    v0 = v2;\n
    if (a2->field_0 != 1)\n
        return 0;\n
    v3 = a2;\n
    v4 = a2->field_8->field_0;\n
    if (v4 && v4[2] == 3)\n
    {\n
        v5 = operator new(16);\n
        if (!a2->field_0)\n
            cgc_exit();\n
        NumberVar::__ctor__(v5, a0[a2->field_8->field_0->field_c & 1023]);\n
        v6 = *(a3);\n
        *(a3) = v5;\n
        *(&v3) = 1;\n
        if (v6)\n
        {\n
            *(v6)->field_8(v6);\n
            return v3;\n
        }\n
        return v3;\n
    }\n
}\n
", "4257060:_ZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "extern unsigned int _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E3idx;\n
extern unsigned int _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E5state;\n
\n
long long builtin_rand(unsigned short *a0, unsigned long a1, unsigned long a2, struct struct_2 **a3)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned int v3;  // edx\n
    void* v4;  // rbx\n
    unsigned long v5;  // rax, Other Possible Types: char\n
    struct struct_1 **v6;  // rdi\n
\n
    v0 = v2;\n
    v3 = a0[2 + _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E3idx] ^ a0[_ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E3idx] ^ _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E5state;\n
    _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E3idx = _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E3idx + 4 & 1023;\n
    _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E5state = v3 * 1234567;\n
    v4 = operator new(16);\n
    v5 = NumberVar::__ctor__(v4, _ZZL12builtin_randPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_E5state);\n
    v6 = *(a3);\n
    *(a3) = v4;\n
    if (v6)\n
        v5 = *(v6)->field_8(v6);\n
    *(&v5) = 1;\n
    return v5;\n
}\n
", "4257172:_ZL12builtin_readPvR9EvaluatorRK6vectorI10unique_ptrI3VarEERS5_": "typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_5 *field_8;\n
} struct_4;\n
\n
typedef struct struct_6 {\n
    struct struct_1 *field_0;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    struct struct_3 *field_0;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern void* cgc_stdin;\n
\n
long long builtin_read(unsigned long a0, unsigned long a1, struct_4 *a2, struct struct_2 **a3)\n
{\n
    unsigned int v1[4];  // rax\n
    struct struct_2 **v2;  // rbx, Other Possible Types: unsigned long\n
    void* v3;  // r15\n
    struct_6 *v4;  // rax\n
    struct struct_1 **v6;  // rdi\n
\n
    if (a2->field_0 != 1)\n
        return 0;\n
    v1 = a2->field_8->field_0;\n
    if (v1 && v1[2] == 3)\n
    {\n
        v2 = a3;\n
        v3 = v1[3];\n
        v4 = operator new(32);\n
        StringVar::__base_ctor__(v4);\n
        vector::resize(&v4->field_10, v3);\n
        if (cgc_fread((!v4->field_10 ? v4->field_18 : 0), v3, cgc_stdin) != v3)\n
        {\n
            v4->field_0->field_8(v4);\n
        }\n
        else\n
        {\n
            v6 = *(a3);\n
            *(a3) = &v4->field_0;\n
            *(&v2) = 1;\n
            if (v6)\n
            {\n
                *(v6)->field_8(v6);\n
                return v2;\n
            }\n
            return v2;\n
        }\n
    }\n
}\n
", "4257320:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:__cxa_atexit": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:cgc_deallocate": null, "5242952:_ZdaPv": null, "5242960:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}