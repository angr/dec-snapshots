{"4202496:_init": "extern struct_0 *g_409848;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409848;\n
    if (g_409848)\n
        v1 = g_409848();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409868;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409868;\n
    goto *(4233328);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202704:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4233304);\n
}\n
", "4202720:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202757:sub_402105": null, "4202758:sub_402106": null, "4202768:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_409840;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202809:sub_402139": null, "4202816:register_tm_clones": "extern unsigned long long g_409850;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202873:sub_402179": null, "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_409858;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409858)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202933:sub_4021b5": null, "4202937:sub_4021b9": null, "4202944:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:sub_4021c9": null, "4202960:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203108:sub_402264": null, "4203120:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203244:sub_4022ec": null, "4203248:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203376:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203438:sub_4023ae": null, "4203440:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v8 = v4;\n
        v4 = (v8 >> 31 CONCAT v8) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v10 = v0;\n
        v0 = v10 - 1;\n
        if (v10 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203665:sub_402491": null, "4203680:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v7;  // rax\n
    unsigned int v8;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v4 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        v3->field_0 = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203887:sub_40256f": null, "4203888:cgc_float_to_str": "long long cgc_float_to_str(char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x42]\n
    char v1;  // [bp-0x41]\n
    unsigned long long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_40286c;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < 5;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_40286c:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204668:sub_40287c": null, "4204672:cgc_vprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_vprintf(char *a0, struct_2 *a1)\n
{\n
    struct struct_1 **v0;  // [bp-0x120], Other Possible Types: unsigned long\n
    struct_2 *v1;  // [bp-0x118]\n
    unsigned int v2;  // [bp-0x10c]\n
    unsigned long long *v3;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_2 *v4;  // [bp-0x100]\n
    unsigned int *v5;  // [bp-0xf8]\n
    unsigned int v6;  // [bp-0xec]\n
    unsigned int *v7;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_2 *v8;  // [bp-0xe0]\n
    unsigned int v9;  // [bp-0xd4]\n
    unsigned int *v10;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_2 *v11;  // [bp-0xc8]\n
    unsigned int v12;  // [bp-0xbc]\n
    unsigned int *v13;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_2 *v14;  // [bp-0xb0]\n
    unsigned int v15;  // [bp-0xa8]\n
    unsigned int v16;  // [bp-0xa4]\n
    char *v17;  // [bp-0xa0], Other Possible Types: unsigned long\n
    struct_0 *v18;  // [bp-0x98], Other Possible Types: unsigned long\n
    unsigned long v19;  // [bp-0x90]\n
    struct_0 *v20;  // [bp-0x88], Other Possible Types: unsigned long\n
    unsigned int v21;  // [bp-0x7c]\n
    struct_0 *v22;  // [bp-0x78], Other Possible Types: unsigned long\n
    unsigned int v23;  // [bp-0x70]\n
    char v24;  // [bp-0x69]\n
    char v25;  // [bp-0x68]\n
    unsigned int v26;  // [bp-0x24]\n
    char *v27;  // [bp-0x18]\n
    unsigned int v28;  // [bp-0xc]\n
    struct_2 *v30;  // rcx\n
    unsigned long long v31;  // rdx\n
    unsigned int *v32;  // rax\n
    struct_2 *v33;  // rcx\n
    unsigned int *v34;  // rdx\n
    struct_2 *v35;  // rcx\n
    unsigned long long v36;  // rdx\n
    unsigned int *v37;  // rax\n
    struct_2 *v38;  // rcx\n
    unsigned int *v39;  // rdx\n
    unsigned long long v40;  // rdx\n
    unsigned long long *v41;  // rax\n
    struct_2 *v42;  // rcx\n
    unsigned long long *v43;  // rdx\n
    struct_2 *v44;  // rcx\n
    unsigned long long v45;  // rdx\n
    struct struct_1 **v46;  // rax\n
    struct_2 *v47;  // rcx\n
    struct struct_1 **v48;  // rdx\n
    struct_2 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned int *v51;  // rax\n
    struct_2 *v52;  // rcx\n
    unsigned int *v53;  // rdx\n
\n
    v27 = a0;\n
    v26 = 0;\n
    if (!v27)\n
    {\n
        v28 = -1;\n
        return v28;\n
    }\n
    while (true)\n
    {\n
        if (!*(v27))\n
        {\n
            v28 = v26;\n
            return v28;\n
        }\n
        else if (*(v27) != 64)\n
        {\n
            cgc_putc(*(v27));\n
            v27 += 1;\n
            v26 += 1;\n
        }\n
        else\n
        {\n
            v27 += 1;\n
            v16 = *(v27);\n
            if (!v16)\n
            {\n
                v28 = -1;\n
                return v28;\n
            }\n
            if (v16 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v16 == 99)\n
            {\n
                v14 = a1;\n
                v15 = v14->field_0;\n
                if (v15 > 40)\n
                {\n
                    v33 = v14;\n
                    v34 = v33->field_8;\n
                    v33->field_8 = &v34[2];\n
                    v13 = v34;\n
                }\n
                else\n
                {\n
                    v30 = v14;\n
                    v31 = v15;\n
                    v32 = v31 + v30->field_10;\n
                    v30->field_0 = v31 + 8;\n
                    v13 = v32;\n
                }\n
                v24 = *(v13);\n
                cgc_putc(v24);\n
                v26 += 1;\n
            }\n
            else if (v16 == 100)\n
            {\n
                v11 = a1;\n
                v12 = v11->field_0;\n
                if (v12 <= 40)\n
                {\n
                    v35 = v11;\n
                    v36 = v12;\n
                    v37 = v36 + v35->field_10;\n
                    v35->field_0 = v36 + 8;\n
                    v10 = v37;\n
                }\n
                else\n
                {\n
                    v38 = v11;\n
                    v39 = v38->field_8;\n
                    v38->field_8 = &v39[2];\n
                    v10 = v39;\n
                }\n
                v23 = *(v10);\n
                cgc_int_to_str(v23, &v25);\n
                for (v22 = &v25; *(v22); v22 += 1)\n
                {\n
                    cgc_putc(*(v22));\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 102)\n
            {\n
                v4 = a1;\n
                v5 = &v4->field_4;\n
                v6 = v4->field_4;\n
                if (v6 <= 160)\n
                {\n
                    v40 = v6;\n
                    v41 = v40 + v4->field_10;\n
                    *(v5) = v40 + 16;\n
                    v3 = v41;\n
                }\n
                else\n
                {\n
                    v42 = v4;\n
                    v43 = v42->field_8;\n
                    v42->field_8 = &v43[1];\n
                    v3 = v43;\n
                }\n
                v19 = *(v3);\n
                cgc_float_to_str(&v25);\n
                for (v18 = &v25; v18->field_0; v18 += 1)\n
                {\n
                    cgc_putc(v18->field_0);\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 115)\n
            {\n
                v1 = a1;\n
                v2 = v1->field_0;\n
                if (v2 > 40)\n
                {\n
                    v47 = v1;\n
                    v48 = v47->field_8;\n
                    v47->field_8 = &v48[1];\n
                    v0 = v48;\n
                }\n
                else\n
                {\n
                    v44 = v1;\n
                    v45 = v2;\n
                    v46 = v45 + v44->field_10;\n
                    v44->field_0 = v45 + 8;\n
                    v0 = v46;\n
                }\n
                for (v17 = *(v0); *(v17); v17 += 1)\n
                {\n
                    cgc_putc(*(v17));\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 120)\n
            {\n
                v8 = a1;\n
                v9 = v8->field_0;\n
                if (v9 > 40)\n
                {\n
                    v52 = v8;\n
                    v53 = v52->field_8;\n
                    v52->field_8 = &v53[2];\n
                    v7 = v53;\n
                }\n
                else\n
                {\n
                    v49 = v8;\n
                    v50 = v9;\n
                    v51 = v50 + v49->field_10;\n
                    v49->field_0 = v50 + 8;\n
                    v7 = v51;\n
                }\n
                v21 = *(v7);\n
                cgc_int_to_hex(v21, &v25);\n
                for (v20 = &v25; v20->field_0; v20 += 1)\n
                {\n
                    cgc_putc(v20->field_0);\n
                    v26 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v28 = -1;\n
                return v28;\n
            }\n
            v27 += 1;\n
        }\n
    }\n
}\n
", "4205930:sub_402d6a": null, "4205936:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4206096:cgc_sprng": "extern unsigned int position;\n
extern unsigned long long state;\n
\n
long long cgc_sprng(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = a0;\n
    v1 = a0;\n
    for (v0 = 0; v0 < 16; v0 = v3)\n
    {\n
        v1 = v1 >> 12 ^ v1;\n
        v1 = v1 * 0x2000000 ^ v1;\n
        v1 = v1 >> 27 ^ v1;\n
        (&state)[v0] = v1 * 1803442709493370165;\n
        v3 = v0 + 1;\n
    }\n
    position = 0;\n
    return v3;\n
}\n
", "4206233:sub_402e99": null, "4206240:cgc_prng": "extern unsigned int position;\n
extern unsigned long long state;\n
\n
long long cgc_prng()\n
{\n
    unsigned long v0;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long long v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = (&state)[position];\n
    position = (position + 1 >> 31 CONCAT position + 1) /m 16 >> 32;\n
    v0 = (&state)[position];\n
    v0 = v0 * 0x8000000 ^ v0;\n
    v0 = v0 >> 13 ^ v0;\n
    v1 = v1 >> 46 ^ v1;\n
    (&state)[position] = v1 ^ v0;\n
    return (&state)[position] * 1865811235122147685;\n
}\n
", "4206416:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (a1 <= a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = a1 - a0 + 1;\n
    v1 = (0 CONCAT -1) /m v2;\n
    do\n
    {\n
        v0 = cgc_prng();\n
    } while (v0 >= v2 * v1);\n
    v3 = (0 CONCAT v0) /m v1 + a0;\n
    return v3;\n
}\n
", "4206528:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return v0;\n
}\n
", "4206611:sub_403013": null, "4206624:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206675:sub_403053": null, "4206688:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206739:sub_403093": null, "4206752:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4206795:sub_4030cb": null, "4206800:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4206846:sub_4030fe": null, "4206848:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206908:sub_40313c": null, "4206912:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207003:sub_40319b": null, "4207008:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4207036:sub_4031bc": null, "4207040:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4207092:sub_4031f4": null, "4207104:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_4033e9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_4033e9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_4033e9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_403359:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_4033e9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_403359;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_4033e9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4207661:sub_40342d": null, "4207664:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 10)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4208056:sub_4035b8": null, "4208064:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4208167:sub_403627": null, "4208176:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = *((a1 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1[a0] = v1[a1];\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        v1[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4208349:sub_4036dd": null, "4208352:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4208470:sub_403756": null, "4208480:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    while (true)\n
    {\n
        v0 += 1;\n
        if (!v0)\n
            break;\n
        *((a0 + v0)) = a1;\n
    }\n
    *((a0 + v0)) = a1;\n
    return a0;\n
}\n
", "4208568:sub_4037b8": null, "4208576:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4208694:sub_403836": null, "4208704:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4208913:sub_403911": null, "4208928:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; v0[a0]; v0 += 1);\n
    return v0;\n
}\n
", "4209011:sub_403973": null, "4209024:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        *((a0 + v2)) = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        *((a0 + v2)) = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4209201:sub_403a31": null, "4209216:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); v1[a1]; v1 += 1)\n
        {\n
            a0[v0] = v1[a1];\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4209378:sub_403ae2": null, "4209392:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209624:sub_403bd8": null, "4209632:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    v0 = a0;\n
    cgc_strlen(a0);\n
    cgc_transmit(a0, v2, v3, v4);\n
    return cgc_transmit(a0, v2, v3, v4);\n
}\n
", "4209714:sub_403c32": null, "4209728:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (*(v0) != a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209844:sub_403cb4": null, "4209856:cgc_strtok": "extern struct_0 *cgc_prev_str;\n
extern unsigned int cgc_prev_str_len;\n
extern struct_0 *cgc_prev_str_ptr;\n
extern struct_0 *cgc_token;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char *v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
\n
    v7 = a0;\n
    if (!a1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v7)\n
    {\n
        if (cgc_prev_str)\n
        {\n
            cgc_deallocate(a0, a1);\n
            cgc_prev_str = 0;\n
            cgc_prev_str_len = 0;\n
            cgc_prev_str_ptr = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_prev_str)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (cgc_prev_str_ptr >= &cgc_prev_str[cgc_prev_str_len])\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!cgc_prev_str)\n
    {\n
        if (cgc_strlen(v7) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_prev_str_len = cgc_strlen(v7);\n
        if (cgc_allocate(a0, a1, v10))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_strcpy(cgc_prev_str, v7);\n
        cgc_prev_str_ptr = cgc_prev_str;\n
    }\n
    v7 = &cgc_prev_str_ptr->field_0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_strchr(a1, *(v7)))\n
            v2 = v7 < &cgc_prev_str[cgc_prev_str_len];\n
        if (!(v2 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (v7 >= &cgc_prev_str[cgc_prev_str_len])\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v6 = v7;\n
    v1 = v7;\n
    v5 = &v1[cgc_strlen(v7)];\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v4 = cgc_strchr(v6, a1[v3]);\n
        if (v4 && v4 && v4 < v5)\n
            v5 = v4;\n
        v3 += 1;\n
    }\n
    cgc_token = v6;\n
    *(v5) = 0;\n
    cgc_prev_str_ptr = v5 + 1;\n
    v8 = cgc_token;\n
    return v8;\n
}\n
", "4210566:sub_403f86": null, "4210576:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v1 = a0;\n
    cgc_transmit(a0, a1, v4, v5);\n
    if (a1 != *(&v0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v0);\n
    return v2;\n
}\n
", "4210659:sub_403fe3": null, "4210672:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_strlen(a0);\n
    if (cgc_allocate(a0, v4, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    cgc_bzero(v0, cgc_strlen(a0) + 1);\n
    cgc_strcpy(*(&v1), a0);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4210821:sub_404085": null, "4210832:cgc_get_user_answer": "long long cgc_get_user_answer(unsigned int *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x27]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    cgc_bzero(&v3, 15);\n
    v2 = cgc_receive(a0, 15, a2, a3);\n
    if (v2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = cgc_strlen(&v3);\n
    if ((&v3)[1 + v1] == 10)\n
        v1 -= 1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < v1)\n
        {\n
            if (!cgc_isdigit((&v3)[v0]) && (&v3)[v0] != 45)\n
            {\n
                cgc_printf(\"incorrect item entered\\n
\", 15, a2, a3, a4);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            *(a0) = cgc_atoi(&v3);\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4211084:sub_40418c": null, "4211088:cgc_get_user_equation": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_get_user_equation(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x140]\n
    struct_0 *v1;  // [bp-0x138]\n
    unsigned int v2;  // [bp-0x130]\n
    struct_0 *v3;  // [bp-0x128]\n
    unsigned int v4;  // [bp-0x11c]\n
    char v5;  // [bp-0x118]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    cgc_bzero(&v5, 0x100);\n
    v4 = cgc_receive(a0, 0x100, v8, v9);\n
    if (v4)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (*(&v4 + cgc_strlen(&v5)) == 10)\n
    {\n
        *(&v2) = a0;\n
        v3 = &v5;\n
        cgc_strncpy(*(&v2), v3, cgc_strlen(&v5) - 1);\n
    }\n
    else\n
    {\n
        *(&v0) = a0;\n
        v1 = &v5;\n
        cgc_strncpy(*(&v0), v1, cgc_strlen(&v5));\n
    }\n
    v6 = 1;\n
    return v6;\n
}\n
", "4211353:sub_404299": null, "4211360:cgc_isValidChar": "extern char acceptable_char;\n
\n
long long cgc_isValidChar(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 17)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((4233456 + v0)) == a0)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4211461:sub_404305": null, "4211472:cgc_parse_input": "long long cgc_parse_input(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = cgc_get_str_end(a0);\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v1)\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (!cgc_isValidChar(a0[v0]))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4211588:sub_404384": null, "4211600:cgc_generate_one_equation": "extern char operator_list;\n
\n
long long cgc_generate_one_equation(unsigned long a0)\n
{\n
    char v0;  // [bp-0x6d]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    char v3;  // [bp-0x61]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v5;  // [bp-0x5c]\n
    unsigned int v6;  // [bp-0x58]\n
    char v7;  // [bp-0x53]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    char v18;  // [bp-0x19]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    char v21;  // [bp-0x8]\n
    unsigned long long v23;  // rbp\n
    unsigned int v24;  // eax\n
    char *v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v28;  // rcx\n
    unsigned int v29;  // eax\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
\n
    v23 = &v21;\n
    do\n
    {\n
        v18 = 0;\n
        v17 = 1;\n
        v16 = 0;\n
        v15 = cgc_random_in_range(4, 15);\n
        v14 = v15 + 1;\n
        v13 = cgc_random_in_range(0, v15);\n
        v12 = 0;\n
        v11 = 0;\n
        v10 = 0;\n
        v9 = 0;\n
        v9 = 0;\n
        while (v9 < v14)\n
        {\n
            if (v10)\n
            {\n
                v4 = cgc_random_in_range(0, 3);\n
                v3 = *((4233440 + v4));\n
                v18 = v3;\n
                v26 = v16;\n
                v16 = v26 + 1;\n
                v26[a0] = v3;\n
                v10 = 0;\n
            }\n
            else\n
            {\n
                v2 = v9;\n
                v24 = v14;\n
                if (v2 < (v24 >> 31 CONCAT v24) /m 2 && v12 < v13)\n
                {\n
                    v27 = v16;\n
                    v16 = v27 + 1;\n
                    *((a0 + v27)) = 40;\n
                    v12 += 1;\n
                }\n
                v8 = cgc_random_in_range(1, 0x100);\n
                if (v18 == 47)\n
                    v8 = cgc_random_in_range(1, v17);\n
                v17 = v8;\n
                cgc_itos(v8, &v7);\n
                v6 = cgc_get_str_end(&v7);\n
                for (v5 = 0; v5 < v6; v5 += 1)\n
                {\n
                    v28 = v16;\n
                    v16 = v28 + 1;\n
                    *((a0 + v28)) = (&v7)[v5];\n
                }\n
                v1 = v9 + 1;\n
                v29 = v14;\n
                if (v1 > (v29 >> 31 CONCAT v29) /m 2 && v11 < v12)\n
                {\n
                    v31 = v16;\n
                    v16 = v31 + 1;\n
                    *((a0 + v31)) = 41;\n
                    v11 += 1;\n
                }\n
                v10 = 1;\n
                v9 += 1;\n
            }\n
        }\n
        for (; v11 < v12; v11 += 1)\n
        {\n
            v32 = v16;\n
            v16 = v32 + 1;\n
            *((a0 + v32)) = 41;\n
        }\n
        *((a0 + v16)) = 0;\n
        v19 = 0;\n
        v20 = cgc_solve_equation(a0, &v19);\n
        if ((Not (Not (Load(addr=stack_base-20, size=4, endness=Iend_LE) == 0x1<32>)))) { Goto None } else { Goto None }\n
        v0 = 1;\n
        if (v20 == 1)\n
            v0 = !v19;\n
    } while ((v0 & 1));\n
    return v19;\n
}\n
", "4212308:sub_404654": null, "4212320:cgc_generate_equation": "long long cgc_generate_equation(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x120]\n
    unsigned int v1;  // [bp-0x11c]\n
    char v2;  // [bp-0x118]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = cgc_generate_one_equation(&v2);\n
    v0 = 0;\n
    cgc_printf(\"Equation: @s\\n
\", &v2, a2, a3, a4);\n
    cgc_printf(\"gimme answer: \", a1, a2, a3, a4);\n
    if (cgc_get_user_answer(&v0, a1, a2, a3, a4) != 1)\n
    {\n
        cgc_printf(\"Bad input\\n
\", a1, a2, a3, a4);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v0 != v1)\n
    {\n
        cgc_printf(\"Incorrect answer\\n
\", a1, a2, a3, a4);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_printf(\"success!!\\n
\", a1, a2, a3, a4);\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4212518:sub_404726": null, "4212528:cgc_seed_prng": "long long cgc_seed_prng(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x134]\n
    unsigned long v1;  // [bp-0x130], Other Possible Types: unsigned long long\n
    char v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x11c]\n
    char v4;  // [bp-0x118]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    cgc_bzero(&v4, 0x100);\n
    cgc_printf(\"Enter some data\\n
\", 0x100, a2, a3, a4);\n
    v3 = cgc_receive(\"Enter some data\\n
\", 0x100, a2, a3);\n
    if (v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = -1;\n
    for (v0 = 0; v0 < *(&v2); v0 += 1)\n
    {\n
        v1 = (v1 * 16 | v1 >> 60) ^ (&v4)[v0];\n
    }\n
    cgc_sprng(v1);\n
    v5 = 1;\n
    return v5;\n
}\n
", "4212770:sub_404822": null, "4212784:cgc_prompt_for_equation": "extern char operator_list;\n
\n
long long cgc_prompt_for_equation(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x180]\n
    unsigned int v1;  // [bp-0x174]\n
    unsigned int v2;  // [bp-0x170]\n
    unsigned int v3;  // [bp-0x16c]\n
    unsigned int v4;  // [bp-0x168]\n
    unsigned int v5;  // [bp-0x164]\n
    unsigned int v6;  // [bp-0x160]\n
    unsigned int v7;  // [bp-0x15c]\n
    char v8;  // [bp-0x158]\n
    unsigned int v9;  // [bp-0x144]\n
    unsigned int v10;  // [bp-0x140]\n
    unsigned int v11;  // [bp-0x13c]\n
    char v12;  // [bp-0x138]\n
    char v13;  // [bp-0x134]\n
    char v14;  // [bp-0x130]\n
    char v15;  // [bp-0x12c]\n
    char v16;  // [bp-0x125]\n
    unsigned int v17;  // [bp-0x124]\n
    unsigned int v18;  // [bp-0x120]\n
    unsigned int v19;  // [bp-0x11c]\n
    char v20;  // [bp-0x118]\n
    unsigned int v21;  // [bp-0xc]\n
    char *v23;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v24;  // rcx\n
    unsigned int v25;  // rsi\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rax\n
\n
    v19 = 0;\n
    cgc_bzero(&v20, 0x100);\n
    v18 = cgc_random_in_range(0, 5);\n
    v17 = cgc_random_in_range(0, 0x8000);\n
    v23 = cgc_random_in_range(0, 3);\n
    v16 = *((\"+-*/\" + v23));\n
    for (v11 = 0; v11 < 4; v11 += 1)\n
    {\n
        v23 = cgc_random_in_range(1, 0x100);\n
        *(&(&v12)[4 * v11]) = v23;\n
    }\n
    cgc_printf(\"Enter an equation that has @d sets of parenthesis\\n
\", v18, a2, v23, a4);\n
    cgc_printf(\"It must evaluate to @d and contain the @c operator\\n
\", v17, v16, v23, a4);\n
    cgc_printf(\"and must use the numbers: @d @d @d and @d\\n
\", *(&v12), *(&v13), *(&v14), *(&v15));\n
    v10 = 0;\n
    v9 = 0;\n
    memset(&v8, 0, 16);\n
    if (cgc_get_user_equation(&v20) != 1)\n
    {\n
        v21 = 0;\n
        return v21;\n
    }\n
    v19 = cgc_parse_input(&v20);\n
    v24 = v19;\n
    v25 = (v24 == 1 ? \"incorrect\" : \"correct\");\n
    cgc_printf(\"string is formatted @s\\n
\", v25, 16, v24, a4);\n
    v7 = 0;\n
    while (true)\n
    {\n
        v0 = v7;\n
        v26 = cgc_strlen(&v20);\n
        if (v0 >= v26)\n
            break;\n
        if ((&v20)[v7] == 40)\n
            v10 += 1;\n
        if ((&v20)[v7] == v16)\n
            v9 += 1;\n
        if ((&v20)[v7] <= 57 && (&v20)[v7] >= 48)\n
        {\n
            v5 = 0;\n
            v6 = cgc_stoi(&(&v20)[v7], &v5);\n
            for (v4 = 0; v4 < 4; v4 += 1)\n
            {\n
                if (v6 == *(&(&v12)[4 * v4]))\n
                {\n
                    v27 = v4;\n
                    *(&(&v8)[4 * v27]) = *(&(&v8)[4 * v27]) + 1;\n
                }\n
            }\n
            v7 = v5 - 1 + v7;\n
        }\n
        v7 += 1;\n
    }\n
    if (v10 != v18)\n
    {\n
        cgc_printf(\"Incorrect number of parenthesis\\n
\", v25, 16, v26, a4);\n
        v21 = 0;\n
        return v21;\n
    }\n
    else if (!v9)\n
    {\n
        cgc_printf(\"Did not use @c operator\\n
\", v16, 16, v26, a4);\n
        v21 = 0;\n
        return v21;\n
    }\n
    else\n
    {\n
        for (v3 = 0; v3 < 4; v3 += 1)\n
        {\n
            if (!*(&(&v8)[4 * v3]))\n
            {\n
                cgc_printf(\"Did not use number @d\\n
\", *(&(&v12)[4 * v3]), 16, v26, a4);\n
                v21 = 0;\n
                return v21;\n
            }\n
        }\n
        v2 = 0;\n
        v1 = cgc_solve_equation(&v20, &v2);\n
        if (v1 != 1)\n
        {\n
            cgc_printf(\"Invalid equation format\\n
\", v25, 16, v26, a4);\n
            v21 = 0;\n
            return v21;\n
        }\n
        else if (v2 != v17)\n
        {\n
            cgc_printf(\"incorrect answer: @d\\n
\", v2, 16, v26, a4);\n
            v21 = 0;\n
            return v21;\n
        }\n
        else\n
        {\n
            cgc_printf(\"@s does resolve to @d, good!\\n
\", &v20, v2, v26, a4);\n
            v21 = 1;\n
            return v21;\n
        }\n
    }\n
}\n
", "4213926:sub_404ca6": null, "4213936:cgc_print_menu": "long long cgc_print_menu(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    cgc_printf(\"1. Solve Equation\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"2. Create Equation\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"3. Solve Area\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"4. Solve Perimeter\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"5. Solve Volume\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"6. View Statistics\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"7. Exit\\n
\", a1, a2, a3, a4);\n
    cgc_get_user_answer(&v0, a1, a2, a3, a4);\n
    return v0;\n
}\n
", "4214060:sub_404d2c": null, "4214064:cgc_print_statistics": "extern unsigned int g_409a6c;\n
extern unsigned int g_409a70;\n
extern unsigned int g_409a74;\n
extern unsigned int g_409a80;\n
extern unsigned int g_409a84;\n
extern unsigned int g_409a88;\n
extern unsigned int g_409a8c;\n
extern unsigned int g_409a90;\n
extern unsigned int g_409a94;\n
extern unsigned int g_409a98;\n
extern unsigned int g_409a9c;\n
extern unsigned int game_stats;\n
\n
long long cgc_print_statistics(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned long long v2;  // rax, Other Possible Types: unsigned long\n
\n
    cgc_printf(\"Total won: @d\\n
\", game_stats, a2, a3, a4);\n
    cgc_printf(\"Total lost: @d\\n
\", g_409a6c, a2, a3, a4);\n
    cgc_printf(\"Equations solved correctly: @d\\n
\", g_409a70, a2, a3, a4);\n
    cgc_printf(\"Equations solved incorrectly: @d\\n
\", g_409a74, a2, a3, a4);\n
    cgc_printf(\"Equations created correctly: @d\\n
\", g_409a80, a2, a3, a4);\n
    cgc_printf(\"Equations created incorrectly: @d\\n
\", g_409a84, a2, a3, a4);\n
    cgc_printf(\"Solved perimeter problems @d\\n
\", g_409a88, a2, a3, a4);\n
    cgc_printf(\"Unsolved perimeter problems @d\\n
\", g_409a8c, a2, a3, a4);\n
    cgc_printf(\"Solved volume problems @d\\n
\", g_409a90, a2, a3, a4);\n
    cgc_printf(\"Unsolved volume problems @d\\n
\", g_409a94, a2, a3, a4);\n
    cgc_printf(\"Solved area problems @d\\n
\", g_409a98, a2, a3, a4);\n
    v2 = cgc_printf(\"Unsolved area problems @d\\n
\", g_409a9c, a2, a3, a4);\n
    if (g_409a80 == 20)\n
    {\n
        cgc_printf(\"Wow, you created 20 equations! What's your name?:\", g_409a9c, a2, a3, a4);\n
        a1 = 32;\n
        cgc_bzero(&v0, 32);\n
        cgc_receive(\"Wow, you created 20 equations! What's your name?:\", 32, a2, a3);\n
        v2 = cgc_printf(\"Good job, @s!\\n
\", &v0, a2, a3, a4);\n
    }\n
    if (g_409a70 == 20)\n
    {\n
        cgc_printf(\"Wow, you solved 20 equations! What's your name?:\", 32, a2, a3, a4);\n
        a1 = 32;\n
        cgc_bzero(&v0, 32);\n
        cgc_receive(\"Wow, you solved 20 equations! What's your name?:\", 32, a2, a3);\n
        v2 = cgc_printf(\"Good job, @s!\\n
\", &v0, a2, a3, a4);\n
    }\n
    if (g_409a98 == 20)\n
    {\n
        cgc_printf(\"Wow, you solved 20 area problems! What's your name?:\", a1, a2, a3, a4);\n
        cgc_bzero(&v0, 32);\n
        cgc_receive(\"Wow, you solved 20 area problems! What's your name?:\", 32, a2, a3);\n
        v2 = cgc_printf(\"Good job, @s!\\n
\", &v0, a2, a3, a4);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4214555:sub_404f1b": null, "4214560:main": "extern unsigned int g_407220;\n
extern unsigned long long g_409a60;\n
extern unsigned int g_409a70;\n
extern unsigned int g_409a74;\n
extern unsigned int g_409a80;\n
extern unsigned int g_409a84;\n
extern unsigned int g_409a88;\n
extern unsigned int g_409a8c;\n
extern unsigned int g_409a90;\n
extern unsigned int g_409a94;\n
extern unsigned int g_409a98;\n
extern unsigned int g_409a9c;\n
extern unsigned long long game_info;\n
extern char game_stats;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60]\n
    char v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = 0;\n
    v7 = a0;\n
    v6 = a1;\n
    memset(&v4, 0, 56);\n
    memcpy(&game_stats, &v4, 56);\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = 0;\n
    game_info = *(&v1);\n
    g_409a60 = v3;\n
    if (cgc_seed_prng(&game_stats, 0, 56, a3, a4) != 1)\n
    {\n
        v8 = 1;\n
        return v8;\n
    }\n
    while (true)\n
    {\n
        v5 = cgc_print_menu(&game_stats, 0, 56, 4223520, a4);\n
        *(&v0) = v5 - 1;\n
        switch (*(&v0))\n
        {\n
        case 0:\n
            if (cgc_generate_equation(&game_stats, 0, 56, 4223520, a4) != 1)\n
                g_409a74 = g_409a74 + 1;\n
            else\n
                g_409a70 = g_409a70 + 1;\n
            break;\n
        case 1:\n
            if (cgc_prompt_for_equation(&game_stats, 0, 56, &g_407220, a4) != 1)\n
                g_409a84 = g_409a84 + 1;\n
            else\n
                g_409a80 = g_409a80 + 1;\n
            break;\n
        case 2:\n
            if (cgc_random_in_range(0, 1))\n
            {\n
                if (cgc_request_2d_area_dim() != 1)\n
                    g_409a9c = g_409a9c + 1;\n
                else\n
                    g_409a98 = g_409a98 + 1;\n
            }\n
            else\n
            {\n
                if (cgc_request_area() == 1)\n
                    g_409a98 = g_409a98 + 1;\n
                else\n
                    g_409a9c = g_409a9c + 1;\n
            }\n
            break;\n
        case 3:\n
            if (cgc_random_in_range(676, 677) != 676)\n
            {\n
                if (cgc_request_2d_peri_dim() != 1)\n
                    g_409a8c = g_409a8c + 1;\n
                else\n
                    g_409a88 = g_409a88 + 1;\n
            }\n
            else\n
            {\n
                if (cgc_request_perimeter() == 1)\n
                    g_409a88 = g_409a88 + 1;\n
                else\n
                    g_409a8c = g_409a8c + 1;\n
            }\n
            break;\n
        case 4:\n
            if (cgc_random_in_range(44, 45) == 45)\n
            {\n
                if (cgc_request_volume() != 1)\n
                    g_409a94 = g_409a94 + 1;\n
                else\n
                    g_409a90 = g_409a90 + 1;\n
            }\n
            else\n
            {\n
                if (cgc_request_3d_dim_vol() != 1)\n
                    g_409a94 = g_409a94 + 1;\n
                else\n
                    g_409a90 = g_409a90 + 1;\n
            }\n
            break;\n
        case 5:\n
            cgc_print_statistics(&game_stats, 0, 56, &g_407220, a4);\n
            break;\n
        case 6:\n
            v8 = 0;\n
            return v8;\n
        default:\n
            cgc_printf(\"improper input. exiting\\n
\", 0, 56, *(&v0), a4);\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
}\n
", "4215351:sub_405237": null, "4215360:cgc_request_perimeter": "long long cgc_request_perimeter(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x30]\n
    unsigned int v8;  // [bp-0x2c]\n
    unsigned int v9;  // [bp-0x28]\n
    unsigned int v10;  // [bp-0x24]\n
    unsigned int v11;  // [bp-0x20]\n
    unsigned int v12;  // [bp-0x1c]\n
    unsigned int v13;  // [bp-0x18]\n
    unsigned int v14;  // [bp-0x14]\n
    unsigned int v15;  // [bp-0x10]\n
    unsigned int v16;  // [bp-0xc]\n
    unsigned long v18;  // rcx\n
\n
    v15 = cgc_random_in_range(0, 2);\n
    v0 = v15;\n
    if (!v0)\n
    {\n
        v14 = cgc_random_in_range(0, 34567);\n
        v13 = v14 * 6;\n
        cgc_printf(\"find perimeter of circle with radius @d\\n
\", v14, a2, a3, a4);\n
        v12 = 0;\n
        v11 = cgc_get_user_answer(&v12, a1, a2, a3, a4);\n
        if (v11 != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        if (v12 != v13)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v16 = 0;\n
            return v16;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v16 = 1;\n
        return v16;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v10 = cgc_random_in_range(0, 34567);\n
        v9 = cgc_random_in_range(0, 34567);\n
        v18 = v9 * 2;\n
        v8 = v10 * 2 + v18;\n
        cgc_printf(\"find perimeter of rectangle with a base of @d and sides of @d\\n
\", v9, v10, v18, a4);\n
        v7 = 0;\n
        v6 = cgc_get_user_answer(&v7, a1, a2, v18, a4);\n
        if (v6 != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        if (v7 != v8)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, v18, a4);\n
            v16 = 0;\n
            return v16;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, v18, a4);\n
        v16 = 1;\n
        return v16;\n
    }\n
    else if (v0 == 2)\n
    {\n
        v5 = cgc_random_in_range(0, 1234);\n
        v4 = cgc_random_in_range(0, 34567);\n
        v3 = v4 * v5;\n
        cgc_printf(\"find perimeter of object with @d sides of length @d\\n
\", v5, v4, a3, a4);\n
        v2 = 0;\n
        v1 = cgc_get_user_answer(&v2, a1, a2, a3, a4);\n
        if (v1 != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        else if (v2 != v3)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v16 = 0;\n
            return v16;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v16 = 1;\n
            return v16;\n
        }\n
    }\n
    else\n
    {\n
        v16 = 1;\n
        return v16;\n
    }\n
}\n
", "4215933:sub_40547d": null, "4215936:cgc_request_2d_peri_dim": "long long cgc_request_2d_peri_dim(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    unsigned int v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned int v8;  // [bp-0x40]\n
    unsigned int v9;  // [bp-0x3c]\n
    unsigned int v10;  // [bp-0x38]\n
    unsigned int v11;  // [bp-0x34]\n
    unsigned int v12;  // [bp-0x30]\n
    unsigned int v13;  // [bp-0x2c]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    unsigned int v16;  // [bp-0x20]\n
    unsigned int v17;  // [bp-0x1c]\n
    unsigned int v18;  // [bp-0x18]\n
    unsigned int v19;  // [bp-0x14]\n
    unsigned int v20;  // [bp-0x10]\n
    unsigned int v21;  // [bp-0xc]\n
\n
    v20 = cgc_random_in_range(0, 2);\n
    v0 = v20;\n
    if (!v0)\n
    {\n
        v19 = cgc_random_in_range(0, 34567);\n
        v18 = v19 * 6;\n
        v17 = 0;\n
        v16 = cgc_random_in_range(0, 1);\n
        if (!v16)\n
        {\n
            cgc_printf(\"find perimeter of circle with radius @d\\n
\", v19, a2, a3, a4);\n
            v17 = v18;\n
        }\n
        else\n
        {\n
            if (v16 == 1)\n
            {\n
                cgc_printf(\"find radius of circle with perimeter @d\\n
\", v18, a2, a3, a4);\n
                v17 = v19;\n
            }\n
        }\n
        v15 = 0;\n
        v14 = cgc_get_user_answer(&v15, a1, a2, a3, a4);\n
        if (v14 != 1)\n
        {\n
            v21 = 0;\n
            return v21;\n
        }\n
        if (v15 != v17)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v21 = 0;\n
            return v21;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v21 = 1;\n
        return v21;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v13 = cgc_random_in_range(0, 34567);\n
        v12 = cgc_random_in_range(0, 34567);\n
        v11 = v13 * 2 + v12 * 2;\n
        v10 = 0;\n
        v9 = cgc_random_in_range(0, 2);\n
        if (!v9)\n
        {\n
            cgc_printf(\"find perimeter of rectangle with a base of @d and sides of @d\\n
\", v12, v13, a3, a4);\n
            v10 = v11;\n
        }\n
        else\n
        {\n
            if (v9 == 1)\n
            {\n
                cgc_printf(\"find side of rectangle with a base of @d and perimeter of @d\\n
\", v12, v11, a3, a4);\n
                v10 = v13;\n
            }\n
            else\n
            {\n
                if (v9 == 2)\n
                {\n
                    cgc_printf(\"find base of rectangle with a side of @d and perimeter of @d\\n
\", v13, v11, a3, a4);\n
                    v10 = v12;\n
                }\n
            }\n
        }\n
        v8 = 0;\n
        v7 = cgc_get_user_answer(&v8, a1, a2, a3, a4);\n
        if (v7 != 1)\n
        {\n
            v21 = 0;\n
            return v21;\n
        }\n
        if (v8 != v10)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v21 = 0;\n
            return v21;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v21 = 1;\n
        return v21;\n
    }\n
    else if (v0 == 2)\n
    {\n
        v6 = cgc_random_in_range(0, 1234);\n
        v5 = cgc_random_in_range(0, 34567);\n
        v4 = v5 * v6;\n
        v3 = 0;\n
        v2 = cgc_random_in_range(0, 2);\n
        if (!v2)\n
        {\n
            cgc_printf(\"find perimeter of object with @d sides of length @d\\n
\", v6, v5, a3, a4);\n
            v3 = v4;\n
        }\n
        else if (v2 == 1)\n
        {\n
            cgc_printf(\"find the number of sides of object with @d perimeter and the sides are of length @d\\n
\", v4, v5, a3, a4);\n
            v3 = v6;\n
        }\n
        else if (v2 == 2)\n
        {\n
            cgc_printf(\"find length of the sides of object with @d perimeter with @d sides\\n
\", v4, v6, a3, a4);\n
            v3 = v5;\n
        }\n
        v1 = 0;\n
        if (cgc_get_user_answer(&v1, a1, a2, a3, a4) != 1)\n
        {\n
            v21 = 0;\n
            return v21;\n
        }\n
        else if (v1 != v3)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v21 = 0;\n
            return v21;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v21 = 1;\n
            return v21;\n
        }\n
    }\n
    else\n
    {\n
        v21 = 1;\n
        return v21;\n
    }\n
}\n
", "4216846:sub_40580e": null, "4216848:cgc_request_area": "long long cgc_request_area(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
\n
    v11 = cgc_random_in_range(0, 2);\n
    v0 = v11;\n
    if (!v0)\n
    {\n
        v10 = cgc_random_in_range(0, 15000);\n
        v9 = v10 * v10 * 3;\n
        cgc_printf(\"find area of circle with radius @d\\n
\", v10, a2, a3, a4);\n
        v8 = 0;\n
        if (cgc_get_user_answer(&v8, a1, a2, a3, a4) != 1)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        if (v8 != v9)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v12 = 0;\n
            return v12;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v12 = 1;\n
        return v12;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v7 = cgc_random_in_range(0, 34567);\n
        v6 = cgc_random_in_range(0, 34567);\n
        v5 = v6 * v7;\n
        cgc_printf(\"find area of rectangle with a base of @d and sides of @d\\n
\", v6, v7, a3, a4);\n
        v4 = 0;\n
        if (cgc_get_user_answer(&v4, a1, a2, a3, a4) != 1)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        if (v4 != v5)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v12 = 0;\n
            return v12;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v12 = 1;\n
        return v12;\n
    }\n
    else if (v0 == 2)\n
    {\n
        v3 = cgc_random_in_range(0, 34567);\n
        v2 = v3 * v3;\n
        cgc_printf(\"find area of square with sides of @d\\n
\", v3, a2, a3, a4);\n
        v1 = 0;\n
        if (cgc_get_user_answer(&v1, a1, a2, a3, a4) != 1)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        else if (v1 != v2)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v12 = 0;\n
            return v12;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v12 = 1;\n
            return v12;\n
        }\n
    }\n
    else\n
    {\n
        v12 = 1;\n
        return v12;\n
    }\n
}\n
", "4217388:sub_405a2c": null, "4217392:cgc_request_2d_area_dim": "long long cgc_request_2d_area_dim(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
\n
    v12 = cgc_random_in_range(0, 1);\n
    v0 = v12;\n
    if (!v0)\n
    {\n
        v11 = cgc_random_in_range(0, 15000);\n
        v10 = v11 * v11 * 3;\n
        v9 = 0;\n
        v8 = cgc_random_in_range(0, 1);\n
        if (!v8)\n
        {\n
            cgc_printf(\"find area of circle with radius @d\\n
\", v11, a2, a3, a4);\n
            v9 = v10;\n
        }\n
        else\n
        {\n
            if (v8 == 1)\n
            {\n
                cgc_printf(\"find radius of circle with area @d\\n
\", v10, a2, a3, a4);\n
                v9 = v11;\n
            }\n
        }\n
        v7 = 0;\n
        if (cgc_get_user_answer(&v7, a1, a2, a3, a4) != 1)\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        if (v7 != v9)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v13 = 0;\n
            return v13;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v13 = 1;\n
        return v13;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v6 = cgc_random_in_range(0, 34567);\n
        v5 = cgc_random_in_range(0, 34567);\n
        v4 = v5 * v6;\n
        v3 = 0;\n
        v2 = cgc_random_in_range(0, 2);\n
        if (!v2)\n
        {\n
            cgc_printf(\"find area of rectangle with a base of @d and sides of @d\\n
\", v5, v6, a3, a4);\n
            v3 = v4;\n
        }\n
        else if (v2 == 1)\n
        {\n
            cgc_printf(\"find side of rectangle with a base of @d and area of @d\\n
\", v5, v4, a3, a4);\n
            v3 = v6;\n
        }\n
        else if (v2 == 2)\n
        {\n
            cgc_printf(\"find base of rectangle with a side of @d and area of @d\\n
\", v6, v4, a3, a4);\n
            v3 = v5;\n
        }\n
        v1 = 0;\n
        if (cgc_get_user_answer(&v1, a1, a2, a3, a4) != 1)\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        else if (v1 != v3)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v13 = 0;\n
            return v13;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v13 = 1;\n
            return v13;\n
        }\n
    }\n
    else\n
    {\n
        v13 = 1;\n
        return v13;\n
    }\n
}\n
", "4217983:sub_405c7f": null, "4217984:cgc_request_volume": "long long cgc_request_volume(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v15;  // eax\n
    unsigned long v16;  // rax\n
    unsigned int v17;  // rdx\n
    unsigned long v18;  // rsi\n
\n
    v12 = cgc_random_in_range(0, 2);\n
    v0 = v12;\n
    if (!v0)\n
    {\n
        v11 = cgc_random_in_range(0, 430);\n
        v15 = v11 * v11 * v11;\n
        v16 = (v15 >> 31 CONCAT v15) /m 3;\n
        v17 = v16 / 0x100000000;\n
        v10 = v16 * 12;\n
        v18 = v11;\n
        cgc_printf(\"find volume of sphere with radius @d\\n
\", v11, v17, 3, a4);\n
        v9 = 0;\n
        if (cgc_get_user_answer(&v9, v18, v17, 3, a4) != 1)\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        if (v9 != v10)\n
        {\n
            cgc_printf(\"incorrect\\n
\", v18, v17, 3, a4);\n
            v13 = 0;\n
            return v13;\n
        }\n
        cgc_printf(\"you got it\\n
\", v18, v17, 3, a4);\n
        v13 = 1;\n
        return v13;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v8 = cgc_random_in_range(0, 1288);\n
        v7 = cgc_random_in_range(0, 1288);\n
        v6 = cgc_random_in_range(0, 1288);\n
        v5 = v6 * v7 * v8;\n
        cgc_printf(\"find volume of rectangular prism with a base of @d, side of @d, and height of @d\\n
\", v7, v8, v6, a4);\n
        v4 = 0;\n
        if (cgc_get_user_answer(&v4, a1, a2, a3, a4) != 1)\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        if (v4 != v5)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v13 = 0;\n
            return v13;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v13 = 1;\n
        return v13;\n
    }\n
    else if (v0 == 2)\n
    {\n
        v3 = cgc_random_in_range(0, 1288);\n
        v2 = v3 * v3 * v3;\n
        cgc_printf(\"find volume of cube with sides of @d\\n
\", v3, a2, a3, a4);\n
        v1 = 0;\n
        if (cgc_get_user_answer(&v1, a1, a2, a3, a4) != 1)\n
        {\n
            v13 = 0;\n
            return v13;\n
        }\n
        else if (v1 != v2)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v13 = 0;\n
            return v13;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v13 = 1;\n
            return v13;\n
        }\n
    }\n
    else\n
    {\n
        v13 = 1;\n
        return v13;\n
    }\n
}\n
", "4218564:sub_405ec4": null, "4218576:cgc_request_3d_dim_vol": "long long cgc_request_3d_dim_vol(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v21;  // eax\n
\n
    v18 = cgc_random_in_range(0, 2);\n
    v0 = v18;\n
    if (!v0)\n
    {\n
        v17 = cgc_random_in_range(0, 430);\n
        v21 = v17 * v17 * v17;\n
        v16 = (v21 >> 31 CONCAT v21) /m 3 * 12;\n
        v15 = 0;\n
        v14 = cgc_random_in_range(0, 1);\n
        if (!v14)\n
        {\n
            cgc_printf(\"find volume of sphere with radius @d\\n
\", v17, a2, a3, a4);\n
            v15 = v16;\n
        }\n
        else\n
        {\n
            if (v14 == 1)\n
            {\n
                cgc_printf(\"find radius of sphere with volume @d\\n
\", v16, a2, a3, a4);\n
                v15 = v17;\n
            }\n
        }\n
        v13 = 0;\n
        if (cgc_get_user_answer(&v13, 1, a2, a3, a4) != 1)\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
        if (v13 != v15)\n
        {\n
            cgc_printf(\"incorrect\\n
\", 1, a2, a3, a4);\n
            v19 = 0;\n
            return v19;\n
        }\n
        cgc_printf(\"you got it\\n
\", 1, a2, a3, a4);\n
        v19 = 1;\n
        return v19;\n
    }\n
    else if (v0 == 1)\n
    {\n
        v12 = cgc_random_in_range(0, 1288);\n
        v11 = cgc_random_in_range(0, 1288);\n
        v10 = cgc_random_in_range(0, 1288);\n
        v9 = v10 * v11 * v12;\n
        v8 = 0;\n
        v7 = cgc_random_in_range(0, 3);\n
        if (!v7)\n
        {\n
            cgc_printf(\"find volume of rectangular prism with a base of @d, side of @d, and height of @d\\n
\", v11, v12, v10, a4);\n
            v8 = v9;\n
        }\n
        else\n
        {\n
            if (v7 == 1)\n
            {\n
                cgc_printf(\"find side of rectangular prism with a base of @d, volume of @d, and height of @d\\n
\", v11, v9, v10, a4);\n
                v8 = v12;\n
            }\n
            else\n
            {\n
                if (v7 == 2)\n
                {\n
                    cgc_printf(\"find base of rectangular prism with a volume of @d, side of @d, and height of @d\\n
\", v9, v12, v10, a4);\n
                    v8 = v11;\n
                }\n
                else\n
                {\n
                    if (v7 == 3)\n
                    {\n
                        cgc_printf(\"find height of rectangular prism with a volume of @d, side of @d, and base of @d\\n
\", v9, v12, v11, a4);\n
                        v8 = v10;\n
                    }\n
                }\n
            }\n
        }\n
        v6 = 0;\n
        if (cgc_get_user_answer(&v6, a1, a2, a3, a4) != 1)\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
        if (v6 != v8)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v19 = 0;\n
            return v19;\n
        }\n
        cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
        v19 = 1;\n
        return v19;\n
    }\n
    else if (v0 == 2)\n
    {\n
        v5 = cgc_random_in_range(0, 1288);\n
        v4 = v5 * v5 * v5;\n
        v3 = 0;\n
        v2 = cgc_random_in_range(0, 1);\n
        if (!v2)\n
        {\n
            cgc_printf(\"find volume of cube with a side of @d\\n
\", v5, a2, a3, a4);\n
            v3 = v4;\n
        }\n
        else if (v2 == 1)\n
        {\n
            cgc_printf(\"find side of cube with a volume of @d\\n
\", v4, a2, a3, a4);\n
            v3 = v5;\n
        }\n
        v1 = 0;\n
        if (cgc_get_user_answer(&v1, a1, a2, a3, a4) != 1)\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
        else if (v1 != v3)\n
        {\n
            cgc_printf(\"incorrect\\n
\", a1, a2, a3, a4);\n
            v19 = 0;\n
            return v19;\n
        }\n
        else\n
        {\n
            cgc_printf(\"you got it\\n
\", a1, a2, a3, a4);\n
            v19 = 1;\n
            return v19;\n
        }\n
    }\n
    else\n
    {\n
        v19 = 1;\n
        return v19;\n
    }\n
}\n
", "4219503:sub_40626f": null, "4219504:cgc_run_tests": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int answers;\n
extern void tests;\n
\n
long long cgc_run_tests(unsigned long a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int v1;  // [bp-0x16c]\n
    char v2;  // [bp-0x168]\n
    unsigned int v3;  // [bp-0x64]\n
    struct_0 *v4;  // [bp-0x60]\n
    char v5;  // [bp-0x58]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_0 *v8;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rcx\n
    unsigned long v11;  // rdx\n
\n
    v6 = 0;\n
    v8 = &v5;\n
    v4 = &v5;\n
    for (v3 = 0; v3 < 1000; v3 = v8)\n
    {\n
        v1 = cgc_generate_one_equation(&v2);\n
        cgc_printf(\"r: @d @s = @d\\n
\", v3, &v2, v1, a4);\n
        v8 = v3 + 1;\n
    }\n
    for (v0 = 0; v0 < 12; v0 = v8)\n
    {\n
        cgc_solve_equation(*(&(&tests)[8 * v0]), &v6);\n
        v9 = v0;\n
        cgc_printf(\"equation: @s = @d \\n
\", *(&(&tests)[8 * v9]), v6, v9, a4);\n
        v10 = v6;\n
        v11 = (&answers)[v0];\n
        cgc_printf((v10 == v11 ? \"wrong\\n
\" : \"correct\\n
\"), a1, v11, v10, a4);\n
        cgc_printf(\"-----------------\\n
\", a1, v11, v10, a4);\n
        v8 = v0 + 1;\n
    }\n
    return v8;\n
}\n
", "4219787:sub_40638b": null, "4219792:cgc_solve_equation": "extern unsigned int cgc_curr_num_stack;\n
extern unsigned int cgc_curr_op_stack;\n
\n
long long cgc_solve_equation(char *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x64]\n
    char v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    char v4;  // [bp-0x54]\n
    char v5;  // [bp-0x50]\n
    char v6;  // [bp-0x49]\n
    unsigned int v7;  // [bp-0x48]\n
    char v8;  // [bp-0x44]\n
    char v9;  // [bp-0x40]\n
    char v10;  // [bp-0x3a]\n
    char v11;  // [bp-0x39]\n
    unsigned int v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    char v15;  // [bp-0x2a]\n
    char v16;  // [bp-0x29]\n
    unsigned int v17;  // [bp-0x28]\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned int v19;  // [bp-0xc]\n
\n
    v18 = 0;\n
    cgc_curr_num_stack = -1;\n
    cgc_curr_op_stack = -1;\n
    while (true)\n
    {\n
        if (!a0[v18])\n
        {\n
            cgc_pop_num(&v2);\n
            while (true)\n
            {\n
                if (cgc_curr_op_stack != -1)\n
                {\n
                    if (cgc_pop_num(&v1) != 1)\n
                    {\n
                        v19 = 0;\n
                        return v19;\n
                    }\n
                    if (cgc_pop_op(&v16) != 1)\n
                    {\n
                        v19 = 0;\n
                        return v19;\n
                    }\n
                    else if (cgc_evaluate(*(&v1), v16, v2, &v0) == 1)\n
                    {\n
                        v2 = *(&v0);\n
                    }\n
                    else\n
                    {\n
                        v19 = 0;\n
                        return v19;\n
                    }\n
                }\n
                else\n
                {\n
                    *(a1) = v2;\n
                    v19 = 1;\n
                    return v19;\n
                }\n
            }\n
        }\n
        v16 = a0[v18];\n
        if (v16 <= 57 && v16 >= 48)\n
        {\n
            v14 = 0;\n
            v17 = cgc_peek_op(&v15);\n
            if (v17 == 1 && v15 == 45)\n
            {\n
                if (cgc_pop_op(&v15) == 1)\n
                {\n
                    cgc_push_op(43);\n
                    v14 = 1;\n
                }\n
                else\n
                {\n
                    v19 = 0;\n
                    return v19;\n
                }\n
            }\n
            v12 = 0;\n
            v13 = cgc_stoi(&a0[v18], &v12);\n
            if (v14)\n
                v13 *= -1;\n
            v14 = 0;\n
            cgc_push_num(v13);\n
            v18 = v12 + v18;\n
            continue;\n
        }\n
        if (v16 == 40)\n
        {\n
            cgc_push_op(a0[v18]);\n
            v18 += 1;\n
            continue;\n
        }\n
        if (v16 == 41)\n
        {\n
            if (cgc_satisfy_paren() != 1)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            v18 += 1;\n
            continue;\n
        }\n
        if (v16 != 43 && v16 != 45)\n
        {\n
            if (v16 != 42 && v16 != 47)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            v17 = cgc_peek_op(&v6);\n
            if (v17 == 1)\n
            {\n
                if (v6 != 42 && !(v6 == 47))\n
                    goto LABEL_4066f7;\n
                v3 = 0;\n
                if (cgc_pop_num(&v4) != 1)\n
                {\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (cgc_pop_num(&v5) != 1)\n
                {\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (cgc_pop_op(&v6) != 1)\n
                {\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (cgc_evaluate(*(&v5), v6, *(&v4), &v3) != 1)\n
                {\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                cgc_push_num(v3);\n
            }\n
LABEL_4066f7:\n
            cgc_push_op(a0[v18]);\n
            v18 += 1;\n
            continue;\n
        }\n
        v17 = cgc_peek_op(&v11);\n
        if (v17 == 1)\n
        {\n
            if (v11 != 43 && v11 != 45 && v11 != 42 && !(v11 == 47))\n
                goto LABEL_4065fb;\n
            v7 = 0;\n
            if (cgc_pop_num(&v8) != 1)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            if (cgc_pop_num(&v9) != 1)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            if (cgc_pop_op(&v10) != 1)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            if (cgc_evaluate(*(&v9), v10, *(&v8), &v7) != 1)\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            cgc_push_num(v7);\n
        }\n
LABEL_4065fb:\n
        cgc_push_op(a0[v18]);\n
        v18 += 1;\n
    }\n
}\n
", "4220869:sub_4067c5": null, "4220880:cgc_get_pow": "long long cgc_get_pow(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v0 = 1; v0 <= a1; v0 += 1)\n
    {\n
        v1 = a0 * a0 + v1;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4220976:cgc_evaluate": "long long cgc_evaluate(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int *a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a1 == 43)\n
    {\n
        if (a0 > 0 && !(a2 <= 2147483647 - a0))\n
            goto LABEL_406890;\n
        if (a0 >= 0)\n
        {\n
LABEL_40689c:\n
            *(a3) = a0 + a2;\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (!(a2 < 2147483649 - a0))\n
            goto LABEL_40689c;\n
LABEL_406890:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 == 45)\n
    {\n
        if (a0 > 0 && a2 < a0 - 2147483647)\n
            goto LABEL_4068fd;\n
        if (a0 >= 0)\n
        {\n
LABEL_406913:\n
            *(a3) = a0 - a2;\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (a2 <= a0 + 2147483647)\n
            goto LABEL_406913;\n
LABEL_4068fd:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 == 42)\n
    {\n
        v0 = a2 * a0;\n
        if (v0 <= 2147483647 && v0 >= -2147483647)\n
        {\n
            *(a3) = a2 * a0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 != 47)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a2)\n
    {\n
        *(a3) = (a0 >> 31 CONCAT a0) /m a2;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4221410:sub_4069e2": null, "4221424:cgc_satisfy_paren": "long long cgc_satisfy_paren()\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0xd]\n
    unsigned int v6;  // [bp-0xc]\n
    char v7;  // [bp-0x8]\n
    unsigned long long v9;  // rbp\n
\n
    v9 = &v7;\n
    while (true)\n
    {\n
        v1 = cgc_peek_op(&v5);\n
        v0 = 0;\n
        if (v5 != 40)\n
            v0 = v1 == 1;\n
        if (!(v0 & 1))\n
            break;\n
        if (cgc_pop_num(&v3) != 1)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (cgc_pop_num(&v4) != 1)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (cgc_pop_op(&v5) != 1)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        else if (cgc_evaluate(*(&v4), v5, *(&v3), &v2) == 1)\n
        {\n
            cgc_push_num(v2);\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    if (v5 == 40)\n
        cgc_pop_op(&v5);\n
    v6 = v1;\n
    return v6;\n
}\n
", "4221692:sub_406afc": null, "4221696:cgc_push_num": "extern unsigned int cgc_curr_num_stack;\n
extern unsigned int num_stack;\n
\n
long long cgc_push_num(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_curr_num_stack >= 64)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_curr_num_stack = cgc_curr_num_stack + 1;\n
    (&num_stack)[cgc_curr_num_stack] = a0;\n
    v0 = 1;\n
    return v0;\n
}\n
", "4221776:cgc_pop_num": "extern unsigned int cgc_curr_num_stack;\n
extern char num_stack;\n
\n
long long cgc_pop_num(unsigned int *a0)\n
{\n
    unsigned int *v1;  // rax\n
\n
    if (cgc_curr_num_stack <= -1)\n
        cgc__terminate(a0);\n
    v1 = cgc_curr_num_stack;\n
    cgc_curr_num_stack = cgc_curr_num_stack - 1;\n
    *(a0) = *((&num_stack + 0x4 * v1));\n
    return 1;\n
}\n
", "4221870:sub_406bae": null, "4221872:cgc_peek_op": "extern unsigned int cgc_curr_op_stack;\n
extern char op_stack;\n
\n
long long cgc_peek_op(char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_curr_op_stack <= -1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    *(a0) = (&op_stack)[cgc_curr_op_stack];\n
    v0 = 1;\n
    return v0;\n
}\n
", "4221940:sub_406bf4": null, "4221952:cgc_push_op": "extern unsigned int cgc_curr_op_stack;\n
extern char op_stack;\n
\n
long long cgc_push_op(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_curr_op_stack >= 64)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_curr_op_stack = cgc_curr_op_stack + 1;\n
    (&op_stack)[cgc_curr_op_stack] = a0;\n
    v0 = 1;\n
    return v0;\n
}\n
", "4222035:sub_406c53": null, "4222048:cgc_pop_op": "extern unsigned int cgc_curr_op_stack;\n
extern char op_stack;\n
\n
long long cgc_pop_op(char *a0)\n
{\n
    char *v1;  // rax\n
\n
    if (cgc_curr_op_stack <= -1)\n
        cgc__terminate(a0);\n
    v1 = cgc_curr_op_stack;\n
    cgc_curr_op_stack = cgc_curr_op_stack - 1;\n
    *(a0) = *((&op_stack + v1));\n
    return 1;\n
}\n
", "4222142:sub_406cbe": null, "4222144:cgc_get_str_end": "long long cgc_get_str_end(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!a0[v0])\n
            return v0;\n
        if (a0[v0] == 10)\n
        {\n
            a0[v0] = 0;\n
            return v0;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4222237:sub_406d1d": null, "4222240:cgc_reverse": "long long cgc_reverse(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
\n
    v2 = 0;\n
    for (v1 = a1 - 1; v2 < v1; v1 -= 1)\n
    {\n
        v0 = a0[v1];\n
        a0[v1] = a0[v2];\n
        a0[v2] = v0;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4222354:sub_406d92": null, "4222368:cgc_itos": "long long cgc_itos(unsigned long a0, char a1[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
    unsigned long v9;  // rcx\n
    unsigned int v10;  // eax\n
    unsigned long v12;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0;\n
    if (!v4)\n
    {\n
        a1[0] = 48;\n
        a1[1] = 0;\n
    }\n
    else\n
    {\n
        if (v4 < 0)\n
        {\n
            v3 = 1;\n
            v4 *= -1;\n
        }\n
        for (v2 = 0; v4; v4 = (v10 >> 31 CONCAT v10) /m 10)\n
        {\n
            v7 = v4;\n
            v1 = (v7 >> 31 CONCAT v7) /m 10 / 0x100000000;\n
            if (v1 > 9)\n
                v0 = v1 - 10;\n
            else\n
                v0 = v1 + 48;\n
            v9 = v2;\n
            v2 = v9 + 1;\n
            a1[v9] = v0;\n
            v10 = v4;\n
        }\n
        if (v3)\n
        {\n
            v12 = v2;\n
            v2 = v12 + 1;\n
            a1[v12] = 45;\n
        }\n
        cgc_reverse(a1, v2);\n
        a1[v2] = 0;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4222632:sub_406ea8": null, "4222640:cgc_stoi": "long long cgc_stoi(char *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x25]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a0[v1] <= 57)\n
            v0 = 48 <= a0[v1];\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    *(a1) = v1;\n
    for (v2 = 0; v2 < v1; v2 += 1)\n
    {\n
        v3 = v3 * 10 + a0[v2] - 48;\n
    }\n
    return v3;\n
}\n
", "4222824:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:memset": null, "5242912:cgc_transmit": null, "5242920:cgc_allocate": null, "5242928:memcpy": null, "5242936:cgc_rint": null, "5242944:cgc_deallocate": null, "5242952:cgc_log10": null, "5242960:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}