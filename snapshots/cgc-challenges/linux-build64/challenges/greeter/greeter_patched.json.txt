{"4202496:_init": "extern struct_0 *g_406e20;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406e20;\n
    if (g_406e20)\n
        v1 = g_406e20();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406e40;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406e40;\n
    goto *(4222536);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:strncpy": "// attributes: PLT stub\n
char * strncpy(char *to, char *from, unsigned int size)\n
{\n
    return ::libc.so.0::strncpy(to, from, size);\n
}\n
", "4202592:strchr": "// attributes: PLT stub\n
char * strchr(char *string, unsigned int c)\n
{\n
    return ::libc.so.0::strchr(string, c);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202672:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202704:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4222512);\n
}\n
", "4202720:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202757:sub_402105": null, "4202758:sub_402106": null, "4202768:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406e18;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202809:sub_402139": null, "4202816:register_tm_clones": "extern unsigned long long g_406e28;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202873:sub_402179": null, "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406e30;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406e30)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202933:sub_4021b5": null, "4202937:sub_4021b9": null, "4202944:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:sub_4021c9": null, "4202960:cgc_adler32ish": "long long cgc_adler32ish(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned short v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x1a]\n
\n
    v2 = 1;\n
    v1 = 0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2 += *((a0 + v0));\n
        v1 += v2;\n
    }\n
    return v1 * 0x10000 | v2;\n
}\n
", "4203074:sub_402242": null, "4203088:cgc_read_all": "long long cgc_read_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned long v5;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v1;\n
            return v5;\n
        }\n
        else if (!cgc_receive(a0, a1, a2, v7))\n
        {\n
            v2 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203222:sub_4022d6": null, "4203232:cgc_write_all": "long long cgc_write_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned long v5;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v1;\n
            return v5;\n
        }\n
        else if (!cgc_transmit(a0, a1, a2, v7))\n
        {\n
            v2 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203366:sub_402366": null, "4203376:cgc_read_line": "extern char cgc_read_line.scratch_page;\n
\n
long long cgc_read_line(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x39]\n
    char v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char v3;  // [bp-0x21]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
    char v10;  // dl\n
    unsigned long v11;  // rcx\n
    unsigned long v12;  // rax\n
\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v0 = 0;\n
        if (v7 != 10)\n
            v0 = v2 < 4095;\n
        if (!(v0 & 1))\n
            break;\n
        if (cgc_receive(a0, a1, rdx<8>, v7))\n
        {\n
LABEL_402401:\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!(*(&v1) == 1))\n
            goto LABEL_402401;\n
        v10 = v3;\n
        v11 = v2;\n
        v2 = v11 + 1;\n
        *(&cgc_read_line.scratch_page + v11) = v3;\n
    }\n
    v12 = cgc_calloc(v2 + 1);\n
    *(a1) = v12;\n
    if (!v12)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    cgc_memcpy(*(a1), &cgc_read_line.scratch_page, v2);\n
    v5 = v2;\n
    return v5;\n
}\n
", "4203651:sub_402483": null, "4203664:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long long v4;  // rax\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    while (true)\n
    {\n
        v4 = v2;\n
        v2 = v4 - 1;\n
        if (!v4)\n
            break;\n
        v5 = v0;\n
        v0 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = v1;\n
        v1 = v6 + 1;\n
        *(v6) = tmp_19;\n
    }\n
    return a0;\n
}\n
", "4203766:sub_4024f6": null, "4203776:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long long v3;  // rax\n
    char *v4;  // rax\n
\n
    v1 = a2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a1;\n
    }\n
    return a0;\n
}\n
", "4203857:sub_402551": null, "4203872:cgc_memmove": "long long cgc_memmove(char *a0, char *a1, char *a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_19;  // tmp #19\n
    unsigned long v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    char *v6;  // rax\n
    char *v7;  // rax\n
    char *v8;  // rax\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    if (v1 == v0)\n
    {\n
        v3 = v1;\n
        return v3;\n
    }\n
    if (v0 < v1)\n
    {\n
        while (true)\n
        {\n
            v5 = v2;\n
            v2 = v5 + 1;\n
            if (!v5)\n
                break;\n
            *((v1 + v2)) = *((v0 + v2));\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 + 1;\n
            if (!v6)\n
                break;\n
            v7 = v0;\n
            v0 = v7 + 1;\n
            tmp_19 = *(v7);\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            *(v8) = tmp_19;\n
        }\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4204100:sub_402644": null, "4204112:cgc_memcmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_memcmp(struct_0 *a0, struct_0 *a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rax\n
    struct_0 *v6;  // rax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // rcx\n
\n
    v2 = a2;\n
    v1 = a0;\n
    v0 = a1;\n
    while (true)\n
    {\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        if (!v5)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v6 = v1;\n
        v1 = &v6->field_0;\n
        v7 = v6->field_-1;\n
        v8 = v0;\n
        v0 = &v8->field_0;\n
        if (v7 != v8->field_-1)\n
        {\n
            v3 = *((v1 - 1)) - *((v0 - 1));\n
            return v3;\n
        }\n
    }\n
}\n
", "4204256:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4204319:sub_40271f": null, "4204320:cgc_strnlen": "long long cgc_strnlen(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x21]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x10]\n
    unsigned long long v5;  // rcx\n
    char *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        v0 = 0;\n
        if (v5)\n
        {\n
            v6 = v3;\n
            v3 = v6 + 1;\n
            v0 = *(v6);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4204436:sub_402794": null, "4204448:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4204571:sub_40281b": null, "4204576:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    while (true)\n
    {\n
        v1 -= 1;\n
        v0 = 0;\n
        if (v1)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
                v0 = *(v3) == *(v2);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return *(v3) - *(v2);\n
}\n
", "4204730:sub_4028ba": null, "4204736:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4204831:sub_40291f": null, "4204832:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = *((a1 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1[a0] = v1[a1];\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        v1[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4205005:sub_4029cd": null, "4205008:cgc_strcat": "long long cgc_strcat(unsigned long a0, unsigned int a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v0 = v1;\n
    *(&v1) = &v1[cgc_strlen(v1)];\n
    cgc_strcpy(*(&v1), a1);\n
    return v0;\n
}\n
", "4205072:cgc_strncat": "long long cgc_strncat(char *a0, unsigned int a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = v1;\n
    v1 = &v1[cgc_strlen(v1)];\n
    cgc_strncpy(v1, a1, a2);\n
    v1[a2] = 0;\n
    return v0;\n
}\n
", "4205156:sub_402a64": null, "4205168:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4205263:sub_402acf": null, "4205264:cgc_strrchr": "long long cgc_strrchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    for (v0 = v1; *(v1); v1 += 1);\n
    while (true)\n
    {\n
        if (v1 < v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*(v1) != a1)\n
        {\n
            v1 -= 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4205408:cgc_strtok": "extern struct_0 *cgc_strtok.prev;\n
\n
long long cgc_strtok(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0)\n
    {\n
LABEL_402bae:\n
        if (cgc_strtok.prev && !(!cgc_strlen(cgc_strtok.prev)))\n
            goto LABEL_402bdd;\n
        cgc_strtok.prev = a0;\n
LABEL_402bdd:\n
        for (; cgc_strtok.prev->field_0 == a1; cgc_strtok.prev = cgc_strtok.prev + 1);\n
        if (!cgc_strlen(cgc_strtok.prev))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = &cgc_strtok.prev->field_0;\n
        v1 = cgc_strchr(cgc_strtok.prev, a1);\n
        if (!v1)\n
        {\n
            cgc_strtok.prev = 0;\n
        }\n
        else\n
        {\n
            *(v1) = 0;\n
            cgc_strtok.prev = &v1[1];\n
        }\n
        v2 = v0;\n
        return v2;\n
    }\n
    else\n
    {\n
        if (cgc_strtok.prev && !(!cgc_strlen(cgc_strtok.prev)))\n
            goto LABEL_402bae;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4205715:sub_402c93": null, "4205728:cgc_to_hex": "long long cgc_to_hex(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 < 10)\n
    {\n
        v0 = a0 + 48;\n
        return v0;\n
    }\n
    else if (a0 < 16)\n
    {\n
        v0 = a0 + 87;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4205807:sub_402cef": null, "4205808:cgc_to_bin": "long long cgc_to_bin(unsigned long a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = a0 - 48;\n
        return v0;\n
    }\n
    if (a0 >= 97 && a0 <= 102)\n
    {\n
        v0 = a0 + -87;\n
        return v0;\n
    }\n
    if (a0 >= 65 && a0 <= 70)\n
    {\n
        v0 = a0 + -55;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205957:sub_402d85": null, "4205968:cgc_bin_to_hex": "long long cgc_bin_to_hex(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    int tmp_14;  // tmp #14\n
    int tmp_11;  // tmp #11\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    char *v4;  // rax\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        tmp_14 = cgc_to_hex(*((a1 + v0)) >> 4);\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = tmp_14;\n
        tmp_11 = cgc_to_hex(*((a1 + v0)) & 15);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = tmp_11;\n
    }\n
    return v1;\n
}\n
", "4206129:sub_402e31": null, "4206144:cgc_hex_to_uint": "long long cgc_hex_to_uint(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20], Other Possible Types: unsigned long long\n
    unsigned int v2;  // [bp-0x14]\n
\n
    v2 = 0;\n
    for (v1 = 4; v1 > 0; v1 -= 1)\n
    {\n
        v0 = v2 * 0x100;\n
        v2 = v0 | cgc_to_bin(a0[2 + 2 * v1]) * 16;\n
        v2 = cgc_to_bin(a0[1 + 2 * v1]) | v2;\n
    }\n
    return v2;\n
}\n
", "4206293:sub_402ed5": null, "4206304:cgc_itoa": "long long cgc_itoa(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x21]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v7;  // rax\n
    char *v9;  // rax\n
    unsigned int v10;  // eax\n
    char *v12;  // rax\n
    char *v13;  // rax\n
    char *v14;  // rax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = v3;\n
    v0 = v3;\n
    if (!v4)\n
    {\n
        v5 = cgc_strcpy(v3, \"0\");\n
        return v5;\n
    }\n
    if (v4 < 0)\n
    {\n
        v3 += 1;\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        *(v7) = 45;\n
        v4 = -(v4);\n
    }\n
    for (; v4; v4 = (v10 >> 31 CONCAT v10) /m 10)\n
    {\n
        v9 = v1;\n
        v1 = v9 + 1;\n
        *(v9) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v10 = v4;\n
    }\n
    v12 = v1;\n
    v1 = v12 + 1;\n
    for (*(v12) = 0; &v1[-1 * v3] > 0; *(v14) = v2)\n
    {\n
        v2 = *(v3);\n
        v13 = v3;\n
        v3 = v13 + 1;\n
        *(v13) = *(v1);\n
        v14 = v1;\n
        v1 = v14 + 1;\n
    }\n
    v5 = v0;\n
    return v5;\n
}\n
", "4206603:sub_40300b": null, "4206608:cgc_malloc": "extern char freelists;\n
extern unsigned long long size_class_sizes;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x60], Other Possible Types: unsigned long\n
    unsigned long long v1;  // [bp-0x58]\n
    unsigned long long *v2;  // [bp-0x50], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x45]\n
    unsigned int v4;  // [bp-0x44]\n
    unsigned long long *v5;  // [bp-0x40]\n
    unsigned long long *v6;  // [bp-0x38]\n
    unsigned long v7;  // [bp-0x30]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned long long *v9;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v10;  // [bp-0x18], Other Possible Types: unsigned long long\n
    void* v11;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v13;  // rax\n
\n
    v10 = a0;\n
    v9 = 0;\n
    if ((v10 + 7 & -8) + 16 < v10)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v10 = (v10 + 7 & -8) + 16;\n
    if (v10 < size_class_sizes)\n
        v10 = size_class_sizes;\n
    if (v10 > 4095)\n
    {\n
        v11 = cgc_allocate_large_chunk(v10);\n
        return v11;\n
    }\n
    v4 = cgc_log_base_two(v10);\n
    v8 = v4 - cgc_log_base_two(size_class_sizes);\n
    if (v8 >= 8)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (!v9)\n
            v3 = v8 < 8;\n
        if (!(v3 & 1))\n
            break;\n
        v13 = v8;\n
        v8 = v13 + 1;\n
        v7 = cgc_list_find(&(&freelists)[16 * v13], cgc_find_fit, v10, v8);\n
        if (v7)\n
            v2 = -9 + v7;\n
        else\n
            v2 = 0;\n
        v6 = v2;\n
        v9 = v6;\n
    }\n
    if (!v9)\n
    {\n
        v9 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v5 = v9;\n
        v1 = &(&freelists)[16 + 16 * v8];\n
        if (!v5)\n
            v0 = 0;\n
        else\n
            v0 = v5 + 1;\n
        cgc_list_remove(v1, v0);\n
    }\n
    cgc_mark_allocated(v9);\n
    if ((*(v9) & -2) > v10)\n
        v9 = cgc_split_chunk(v9, v10);\n
    v11 = cgc_chunk_to_ptr(v9);\n
    return v11;\n
}\n
", "4207159:sub_403237": null, "4207168:cgc_allocate_large_chunk": "long long cgc_allocate_large_chunk(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    if (cgc_allocate(a0, v3, v4))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    *(v0) = a0;\n
    cgc_mark_allocated(v0);\n
    v1 = cgc_chunk_to_ptr(v0);\n
    return v1;\n
}\n
", "4207260:sub_40329c": null, "4207264:cgc_log_base_two": "long long cgc_log_base_two(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4207320:sub_4032d8": null, "4207328:cgc_list_find": "long long cgc_list_find(struct struct_0 **a0, struct struct_0 **a1, unsigned long long a2)\n
{\n
    struct struct_0 **v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct struct_0 **v1;  // [bp-0x20]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v0 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1(v0, a2))\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        v0 = *(v0);\n
    }\n
}\n
", "4207445:sub_403355": null, "4207456:cgc_find_fit": "long long cgc_find_fit(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long *v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned long long *v1;  // [bp-0x38]\n
    unsigned long long *v2;  // [bp-0x28]\n
\n
    if (!a0)\n
        v0 = 0;\n
    else\n
        v0 = -9 + a0;\n
    v1 = v0;\n
    v2 = v1;\n
    return a1 <= (*(v2) & -2);\n
}\n
", "4207572:sub_4033d4": null, "4207584:cgc_grow_heap": "long long cgc_grow_heap()\n
{\n
    unsigned long long *v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    *(v0) = 0x1000;\n
    cgc_mark_free(v0);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4207668:sub_403434": null, "4207680:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long cgc_list_remove(unsigned long long a0[2], struct_0 *a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    if (!a1)\n
        return v1;\n
    if (!a1->field_8)\n
        a0[0] = a1->field_0;\n
    else\n
        a1->field_8->field_0 = a1->field_0;\n
    if (a1->field_0)\n
    {\n
        v1 = a1->field_0;\n
        *((v1 + 8)) = a1->field_8;\n
        return a1->field_0;\n
    }\n
    a0[1] = a1->field_8;\n
    return a0;\n
}\n
", "4207816:sub_4034c8": null, "4207824:cgc_mark_allocated": "long long cgc_mark_allocated(unsigned long long *a0)\n
{\n
    unsigned long long *v0;  // [bp-0x10]\n
    unsigned long long *v2;  // rax\n
\n
    v0 = a0;\n
    v2 = a0;\n
    *(v2) = *(v2) | 1;\n
    *((-8 + v0 + (*(v0) & -2))) = *(a0);\n
    return a0;\n
}\n
", "4207875:sub_403503": null, "4207888:cgc_split_chunk": "extern unsigned long long size_class_sizes;\n
\n
long long cgc_split_chunk(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    unsigned long long *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0 + a1;\n
    v0 = *(a0) & -2;\n
    if ((*(a0) & -2) <= a1 + size_class_sizes)\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
    *(a0) = a1;\n
    cgc_mark_allocated(a0);\n
    *(v1) = v0 - a1;\n
    cgc_mark_allocated(v1);\n
    cgc_free(cgc_chunk_to_ptr(v1));\n
    v2 = a0;\n
    return v2;\n
}\n
", "4208054:sub_4035b6": null, "4208064:cgc_chunk_to_ptr": "long long cgc_chunk_to_ptr(unsigned long a0)\n
{\n
    return a0 + 8;\n
}\n
", "4208087:sub_4035d7": null, "4208096:cgc_free": "extern char freelists;\n
extern unsigned int size_class_sizes;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long long *v2;  // [bp-0x18], Other Possible Types: unsigned int *\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = cgc_ptr_to_chunk(a0);\n
    v2 = v4;\n
    if (!a0)\n
        return v4;\n
    cgc_mark_free(v2);\n
    v2 = cgc_coalesce(v2);\n
    v0 = cgc_log_base_two(*(&v2) & -2);\n
    v1 = v0 - cgc_log_base_two(*(&size_class_sizes));\n
    if (v1 >= 8)\n
        v1 = 7;\n
    v4 = cgc_list_insert_in_order(&(&freelists)[16 * v1], v2 + 2, cgc_size_cmp);\n
    return v4;\n
}\n
", "4208267:sub_40368b": null, "4208272:cgc_ptr_to_chunk": "long long cgc_ptr_to_chunk(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x20]\n
\n
    if (!a0)\n
        v0 = 0;\n
    else\n
        v0 = -9 + a0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4208349:sub_4036dd": null, "4208352:cgc_mark_free": "long long cgc_mark_free(unsigned long long *a0)\n
{\n
    unsigned long long *v0;  // [bp-0x10]\n
    unsigned long long *v2;  // rax\n
\n
    v0 = a0;\n
    v2 = a0;\n
    *(v2) = *(v2) & -2;\n
    *((-8 + v0 + (*(a0) & -2))) = *(v0);\n
    return a0;\n
}\n
", "4208403:sub_403713": null, "4208416:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
    unsigned long long field_0;\n
} struct_0;\n
\n
extern char freelists;\n
extern unsigned int size_class_sizes;\n
\n
long long cgc_coalesce(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x68], Other Possible Types: unsigned long\n
    unsigned long long v1[2];  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x54]\n
    void* v3;  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned long long v4[2];  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x3c]\n
    unsigned long long *v6;  // [bp-0x38]\n
    unsigned long long *v7;  // [bp-0x30]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int *v9;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int *v10;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long long *v11;  // [bp-0x10], Other Possible Types: unsigned long, struct_0 *\n
\n
    v11 = a0;\n
    v10 = 0;\n
    v9 = 0;\n
    if ((v11 & 4095))\n
        v9 = v11 + -(v11->field_0 & -2);\n
    if (((v11 + (v11->field_-8 & -2)) & 4095))\n
        v10 = v11 + (v11->field_-8 & -2);\n
    if (v9 && !(*(v9) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v9) & -2);\n
        v8 = v5 - cgc_log_base_two(*(&size_class_sizes));\n
        if (v8 < 8)\n
        {\n
            v7 = v9;\n
            v4[0] = &(&freelists)[16 * v8];\n
            if (!v7)\n
                v3 = 0;\n
            else\n
                v3 = v7 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v9) = (v11->field_-8 & -2) + (*(v9) & -2);\n
            cgc_mark_free(v9);\n
            v11 = v9;\n
        }\n
    }\n
    if (!v10)\n
    {\n
        return v11;\n
    }\n
    else if ((*(v10) & 1))\n
    {\n
        return v11;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v10) & -2);\n
        v8 = v2 - cgc_log_base_two(*(&size_class_sizes));\n
        if (v8 >= 8)\n
            return v11;\n
        v6 = v10;\n
        v1[0] = &(&freelists)[16 * v8];\n
        if (!v6)\n
            v0 = 0;\n
        else\n
            v0 = v6 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v11) = (*(v11) & -2) + (*(v10) & -2);\n
        cgc_mark_free(v11);\n
    }\n
}\n
", "4209004:sub_40396c": null, "4209008:cgc_list_insert_in_order": "long long cgc_list_insert_in_order(struct struct_0 **a0, unsigned long long a1, struct struct_0 **a2)\n
{\n
    struct struct_0 **v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = a2;\n
    v0 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v3 = cgc_list_push_back(a0, a1);\n
            return v3;\n
        }\n
        if (v1(a1, v0) >= 0)\n
        {\n
            v3 = cgc_list_insert_before(a0, v0, a1);\n
            return v3;\n
        }\n
        v0 = *(v0);\n
    }\n
}\n
", "4209135:sub_4039ef": null, "4209136:cgc_size_cmp": "long long cgc_size_cmp(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long *v0;  // [bp-0x58], Other Possible Types: unsigned long\n
    unsigned long long *v1;  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned long long *v2;  // [bp-0x48]\n
    unsigned long long *v3;  // [bp-0x38]\n
    unsigned long long *v4;  // [bp-0x30]\n
    unsigned long long *v5;  // [bp-0x20]\n
\n
    if (!a0)\n
        v1 = 0;\n
    else\n
        v1 = -9 + a0;\n
    v4 = v1;\n
    v5 = v4;\n
    if (!a1)\n
        v0 = 0;\n
    else\n
        v0 = -9 + a1;\n
    v2 = v0;\n
    v3 = v2;\n
    return (*(v3) & -2) - (*(v5) & -2);\n
}\n
", "4209317:sub_403aa5": null, "4209328:cgc_calloc": "long long cgc_calloc(unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
\n
    v0 = cgc_malloc(a0);\n
    if (v0)\n
    {\n
        cgc_memset(v0, 0, a0);\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4209389:sub_403aed": null, "4209392:cgc_realloc": "long long cgc_realloc(unsigned long a0, unsigned int a1)\n
{\n
    unsigned long v0;  // [bp-0x48], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
\n
    if (!a0)\n
    {\n
        v5 = cgc_malloc(a1);\n
        return v5;\n
    }\n
    v4 = (*(cgc_ptr_to_chunk(a0)) & -2) - 16;\n
    if (a1 == v4)\n
    {\n
        v5 = a0;\n
        return v5;\n
    }\n
    v3 = cgc_malloc(a1);\n
    v1 = v3;\n
    v2 = a0;\n
    if (a1 >= v4)\n
        v0 = v4;\n
    else\n
        v0 = a1;\n
    cgc_memcpy(v1, v2, v0);\n
    cgc_free(a0);\n
    v5 = v3;\n
    return v5;\n
}\n
", "4209596:sub_403bbc": null, "4209600:cgc_list_insert_before": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_list_insert_before(struct_3 *a0, struct_0 *a1, unsigned long long a2[2])\n
{\n
    struct_3 *v1;  // rax, Other Possible Types: unsigned long, struct_0 *\n
\n
    if (!a2)\n
        return v1;\n
    a2[1] = 0;\n
    a2[0] = 0;\n
    if (!a0->field_0 && !a0->field_8)\n
    {\n
        a0->field_8 = &a2[0];\n
        a0->field_0 = &a2[0];\n
        return a0;\n
    }\n
    if (!a1)\n
    {\n
        a2[1] = a0->field_8;\n
        a0->field_8->field_0 = a2;\n
        a2[0] = 0;\n
        v1 = a0;\n
        a0->field_8 = &a2[0];\n
    }\n
    else if (a1 == a0->field_0)\n
    {\n
        a2[0] = a0->field_0;\n
        a0->field_0->field_8 = a2;\n
        a2[1] = 0;\n
        v1 = a0;\n
        a0->field_0 = &a2[0];\n
    }\n
    else\n
    {\n
        a2[1] = a1->field_8;\n
        a2[0] = a1;\n
        a1->field_8->field_0 = a2;\n
        v1 = a1;\n
        a1->field_8 = &a2[0];\n
    }\n
    return v1;\n
}\n
", "4209918:sub_403cfe": null, "4209920:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_list_push_back(struct_0 *a0, unsigned long long a1)\n
{\n
    return cgc_list_insert_after(a0, a0->field_8, a1);\n
}\n
", "4209963:sub_403d2b": null, "4209968:cgc_list_insert_after": "long long cgc_list_insert_after(void* *a0, void* *a1, unsigned long long a2[2])\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (a1)\n
    {\n
        v1 = cgc_list_insert_before(a0, *(a1), a2);\n
        return v1;\n
    }\n
    v1 = cgc_list_insert_before(a0, *(a0), a2);\n
    return v1;\n
}\n
", "4210050:sub_403d82": null, "4210064:cgc_md5": "long long cgc_md5(unsigned long long a0, unsigned long long a1, unsigned int a2[4])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
\n
    v0 = 1732584193;\n
    v1 = 4023233417;\n
    v2 = 2562383102;\n
    v3 = 271733878;\n
    cgc_md5_update(a0, a1, a1, &v0);\n
    a2[0] = v0;\n
    a2[1] = v1;\n
    a2[2] = v2;\n
    a2[3] = v3;\n
    return cgc_memset(&v0, 0, 16);\n
}\n
", "4210196:sub_403e14": null, "4210208:cgc_md5_update": "long long cgc_md5_update(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    char v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    v4 = a0;\n
    v3 = a1;\n
    for (v2 = a2; v3 > 64; v3 -= 64)\n
    {\n
        cgc_md5_pad(&v1, v4, v3, v2, 0);\n
        cgc_md5_chunk(&v1, a3);\n
        v4 += 64;\n
    }\n
    v0 = cgc_md5_pad(&v1, v4, v3, v2, 0);\n
    cgc_md5_chunk(&v1, a3);\n
    if (v0)\n
    {\n
        cgc_md5_pad(&v1, 0, 0, v2, v3 != 64);\n
        cgc_md5_chunk(&v1, a3);\n
    }\n
    v0 = 0;\n
    v2 = 0;\n
    return cgc_memset(&v1, 0, 64);\n
}\n
", "4210444:sub_403f0c": null, "4210448:cgc_md5_hmac": "long long cgc_md5_hmac(char *a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4[4])\n
{\n
    unsigned long v0;  // [bp-0x120]\n
    char v1;  // [bp-0x118]\n
    char v2;  // [bp-0xd8]\n
    char v3;  // [bp-0x98]\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned int v8;  // [bp-0x40]\n
    unsigned int v9;  // [bp-0x3c]\n
    unsigned int v10;  // [bp-0x38]\n
    unsigned int v11;  // [bp-0x34]\n
\n
    cgc_memset(&v3, 0, 64);\n
    if (a1 > 64)\n
        cgc_md5(a0, a1, &v3);\n
    if (a1 < 64)\n
        cgc_memcpy(&v3, a0, a1);\n
    for (v0 = 0; v0 < 64; v0 += 1)\n
    {\n
        (&v2)[v0] = (&v3)[v0] ^ 92;\n
        (&v1)[v0] = (&v3)[v0] ^ 54;\n
    }\n
    v4 = 1732584193;\n
    v8 = 1732584193;\n
    v5 = 4023233417;\n
    v9 = 4023233417;\n
    v6 = 2562383102;\n
    v10 = 2562383102;\n
    v7 = 271733878;\n
    v11 = 271733878;\n
    cgc_md5_chunk(&v1, &v4);\n
    cgc_md5_update(a2, a3, a3 + 64, &v4);\n
    cgc_md5_chunk(&v2, &v8);\n
    cgc_md5_update(&v4, 16, 80, &v8);\n
    a4[0] = v8;\n
    a4[1] = v9;\n
    a4[2] = v10;\n
    a4[3] = v11;\n
    cgc_memset(&v8, 0, 16);\n
    cgc_memset(&v4, 0, 16);\n
    cgc_memset(&v3, 0, 64);\n
    cgc_memset(&v2, 0, 64);\n
    return cgc_memset(&v1, 0, 64);\n
}\n
", "4210951:sub_404107": null, "4210960:cgc_md5_chunk": "extern unsigned long long g_406ba0;\n
extern unsigned long long g_406ba8;\n
extern unsigned long long g_406bb0;\n
extern unsigned long long g_406bb8;\n
\n
long long cgc_md5_chunk(unsigned int *a0, unsigned int a1[4])\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x64]\n
    void* v4;  // [bp-0x60], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp-0x58]\n
    unsigned long v6;  // [bp-0x50]\n
    unsigned long v7;  // [bp-0x48]\n
    unsigned long v8;  // [bp-0x40]\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    unsigned int v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0x24]\n
    unsigned int v16[4];  // rax\n
    unsigned int v17[4];  // rax\n
    unsigned int v18[4];  // rax\n
    unsigned int v19[4];  // rax\n
\n
    v14 = a1[0];\n
    v13 = a1[1];\n
    v12 = a1[2];\n
    v11 = a1[3];\n
    v5 = g_406ba0;\n
    v6 = g_406ba8;\n
    v7 = g_406bb0;\n
    v8 = g_406bb8;\n
    for (v4 = 0; v4 < 64; v4 += 1)\n
    {\n
        v10 = (&v5)[v4 >> 4](v13, v12, v11);\n
        v9 = v11;\n
        v11 = v12;\n
        v12 = v13;\n
        v3 = v13;\n
        v0 = v14 + v10;\n
        v1 = v0 + a0[cgc_k(v4)];\n
        v2 = v1 + cgc_T(v4);\n
        v13 = v3 + cgc_rotateleft(v2, s(v4));\n
        v14 = v9;\n
    }\n
    v16 = a1;\n
    v16[0] = v14 + v16[0];\n
    v17 = a1;\n
    v17[1] = v13 + v17[1];\n
    v18 = a1;\n
    v18[2] = v12 + v18[2];\n
    v19 = a1;\n
    v19[3] = v11 + v19[3];\n
    return a1;\n
}\n
", "4211313:sub_404271": null, "4211328:cgc_md5_pad": "long long cgc_md5_pad(char *a0, char *a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x50], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x48]\n
    unsigned long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rax\n
\n
    v3 = a0;\n
    if (a2 >= 64)\n
    {\n
        cgc_memcpy(v3, a1, 64);\n
        v4 = a2 == 64;\n
        return v4;\n
    }\n
    v2 = 64 - a2;\n
    cgc_memcpy(v3, a1, a2);\n
    v3 = &v3[a2];\n
    if (!a4)\n
    {\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = 128;\n
        v2 -= 1;\n
    }\n
    v1 = v3;\n
    if (v2 < 8)\n
        v0 = v2;\n
    else\n
        *(&v0) = v2 - 8;\n
    cgc_memset(v1, 0, v0);\n
    if (v2 < 8)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v3 = v2 - 8 + v3;\n
    *(&v3) = a3 * 8;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4211617:sub_4043a1": null, "4211632:cgc_F": "long long cgc_F(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 & a1 | (a0 ^ -1) & a2;\n
}\n
", "4211664:cgc_G": "long long cgc_G(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 & a2 | a1 & (a2 ^ -1);\n
}\n
", "4211698:sub_4043f2": null, "4211712:cgc_H": "long long cgc_H(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 ^ a1 ^ a2;\n
}\n
", "4211736:sub_404418": null, "4211744:cgc_I": "long long cgc_I(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a1 ^ (a0 | a2 ^ -1);\n
}\n
", "4211775:sub_40443f": null, "4211776:cgc_rotateleft": "long long cgc_rotateleft(unsigned long a0, unsigned long a1)\n
{\n
    return a0 << (a1 & 31) | (a0 >> ((32 - a1) & 31));\n
}\n
", "4211813:sub_404465": null, "4211824:cgc_k": "int cgc_k()\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
    unsigned long long v6;  // rbp\n
    unsigned int v7;  // edi\n
    unsigned long long v8;  // rax\n
\n
    v6 = &v2;\n
    v0 = v7 >> 4;\n
    if (v0 > 3)\n
    {\n
        v1 = 0;\n
        return;\n
    }\n
    v8 = v0;\n
    goto *((4214800 + rax<8> * 4)) + 4214800;\n
}\n
", "4211946:sub_4044ea": null, "4211952:cgc_T": "double cgc_T(long long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc_sin();\n
    cgc_fabs(a0, v2, v3, v4, v5, v6);\n
    v0 = a0 + 1;\n
    cgc_pow(a0, v2, v3, v4, v5, v6);\n
    return (0 CONCAT v0) * (0 CONCAT 0x4000000000000000);\n
}\n
", "4212033:sub_404541": null, "4212048:s": "extern void g_405020;\n
\n
long long s(unsigned long a0)\n
{\n
    char v0;  // [bp-0x58]\n
\n
    memcpy(&v0, &g_405020, 64);\n
    return *(&(&v0)[16 * (a0 >> 4) + 4 * (a0 & 3)]);\n
}\n
", "4212118:sub_404596": null, "4212128:main": "extern void g_406bc0;\n
\n
int main(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x98]\n
    struct struct_0 **v1;  // [bp-0x90]\n
    unsigned long long v2;  // [bp-0x88]\n
    struct struct_0 **v3;  // [bp-0x80]\n
    char v4;  // [bp-0x78]\n
    char v5;  // [bp-0x70]\n
    unsigned long v6;  // [bp-0x40]\n
    char v7;  // [bp-0x35]\n
    char v8;  // [bp-0x2d]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    char v11;  // [bp-0x20]\n
    unsigned long v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
\n
    v14 = 0;\n
    v13 = a0;\n
    v12 = a1;\n
    memcpy(&v4, &g_406bc0, 48);\n
    while (true)\n
    {\n
        *(&v10) = cgc_read_line(0, &v11);\n
        if (*(&v10) < 0)\n
        {\n
            v14 = -1;\n
            return v14;\n
        }\n
        if (*((*(&v11) + *(&v10) - 1)) == 10)\n
            *((*(&v11) + *(&v10) - 1)) = 0;\n
        v9 = -1;\n
        for (v6 = 0; v6 < 3; v6 += 1)\n
        {\n
            v2 = *(&v11);\n
            v3 = *(&(&v4)[16 * v6]);\n
            if (!cgc_strncmp(v2, v3, cgc_strlen(*(&(&v4)[16 * v6]))))\n
            {\n
                v1 = *(&(&v5)[16 * v6]);\n
                v0 = *(&v11);\n
                v9 = v1(v0 + cgc_strlen(*(&(&v4)[16 * v6])));\n
                break;\n
            }\n
        }\n
        cgc_memset(*(&v11), 0, *(&v10));\n
        cgc_free(*(&v11));\n
        cgc_bin_to_hex(&v7, &v9, 4);\n
        v8 = 10;\n
        if (cgc_write_all(1, &v7, 9) != 9)\n
        {\n
            v14 = -1;\n
            return v14;\n
        }\n
    }\n
}\n
", "4212572:sub_40475c": null, "4212576:cgc_login": "extern unsigned int cgc_login.cur;\n
extern unsigned long long g_406bf0;\n
\n
long long cgc_login(char *a0)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
    char v4;  // [bp-0x8]\n
\n
    v1 = g_406bf0;\n
    if (cgc_strlen(a0) <= 16 && !strchr(a0, 124))\n
    {\n
        v0 = 1;\n
        v2 = *(&(&v4)[32 + 8 * cgc_login.cur])(a0);\n
        cgc_login.cur = cgc_login.cur + 1;\n
        if (cgc_login.cur == v0)\n
            cgc_login.cur = 0;\n
        v3 = v2;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4212735:sub_4047ff": null, "4212736:cgc_greet": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_4050ac;\n
extern unsigned int g_4050be;\n
extern unsigned long long g_406bf8;\n
\n
long long cgc_greet(char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x1d0]\n
    unsigned int v1;  // [bp-0x1c4]\n
    struct_0 *v2;  // [bp-0x1c0]\n
    unsigned long v3;  // [bp-0x1b8]\n
    struct struct_1 **v4;  // [bp-0x1a8]\n
    unsigned long v5;  // [bp-0x1a0]\n
    unsigned int v6;  // [bp-0x194]\n
    unsigned long v7;  // [bp-0x190]\n
    unsigned int v8;  // [bp-0x188]\n
    unsigned int *v9;  // [bp-0x180], Other Possible Types: unsigned long\n
    char v10;  // [bp-0x178]\n
    char v11;  // [bp-0x158]\n
    char v12;  // [bp-0x88]\n
    char v13;  // [bp-0x48]\n
    char *v14;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0xc]\n
    char *v18;  // rax\n
    unsigned int *v19;  // rax\n
\n
    v9 = 0;\n
    v6 = 0;\n
    v5 = g_406bf8;\n
    v15 = cgc_strrchr(a0, 124);\n
    if (!v15)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    v18 = v15;\n
    v15 = v18 + 1;\n
    *(v18) = 0;\n
    for (v7 = 0; v7 < 1; v7 += 1)\n
    {\n
        v4 = (&v5)[v7];\n
        *(&v8) = v4(a0, cgc_strlen(a0), &v13);\n
        cgc_bin_to_hex(&v12, &v13, *(&v8));\n
        if (!cgc_strncmp(v15, &v12, *(&v8) << 1))\n
        {\n
            v6 = 1;\n
            break;\n
        }\n
    }\n
    if (!v6)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    cgc_memset(&v10, 0, 17);\n
    for (v14 = cgc_strtok(a0, 124); v14; v14 = cgc_strtok(NULL, 124))\n
    {\n
        if (!cgc_strncmp(v14, \"name=\", 5))\n
        {\n
            strncpy(&v10, v14 + 5, 16);\n
        }\n
        else if (!cgc_strncmp(v14, \"counter=\", 8) && cgc_strlen(v14 + 8) == 8)\n
        {\n
            v9 = cgc_hex_to_uint(v14 + 8);\n
        }\n
    }\n
    if (cgc_strlen(&v10) && v9)\n
    {\n
        cgc_memset(&v11, 0, 200);\n
        v19 = v9;\n
        *(v19) = *(v19) + 1;\n
        cgc_strcpy(&v11, \"Hello \");\n
        cgc_strcat(&v11, &v10);\n
        cgc_strcat(&v11, 4214956);\n
        v1 = *(v9);\n
        v0 = &v11;\n
        cgc_itoa(v1, &v0[cgc_strlen(&v11)]);\n
        cgc_strcat(&v11, 4214974);\n
        v2 = &v11;\n
        v3 = cgc_write_all(1, v2, cgc_strlen(&v11));\n
        if (v3 != cgc_strlen(&v11))\n
        {\n
            v16 = -1;\n
            return v16;\n
        }\n
        v16 = 0;\n
        return v16;\n
    }\n
    v16 = -1;\n
    return v16;\n
}\n
", "4213619:sub_404b73": null, "4213632:cgc_quit": "long long cgc_quit(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp+0x8]\n
    unsigned long long v1;  // [bp+0x10]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc__terminate(a0);\n
    return md5_hmac_login(a0, v2, v3, v4, v5, v6, v0, v1);\n
}\n
", "4213664:md5_hmac_login": "long long md5_hmac_login(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned long v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x28]\n
    char *v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v2 = cgc_make_token(a0);\n
    if (!v2)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v5 = cgc_strlen(v2);\n
    v3 = v5 + 34;\n
    v1 = cgc_realloc(v2, v3);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
        v6 = -1;\n
        return v6;\n
    }\n
    *(&v4) = md5_hmac_sig(v1, v5, &v0);\n
    if (!*(&v4))\n
    {\n
        cgc_free(v1);\n
        v6 = -1;\n
        return v6;\n
    }\n
    v5[v1] = 124;\n
    cgc_bin_to_hex(&v5[v1 + 1], &v0, *(&v4));\n
    *((v1 + v3 - 1)) = 10;\n
    if (cgc_write_all(1, v1, v3) != v3)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    cgc_memset(&v0, 0, *(&v4));\n
    cgc_memset(v1, 0, v3);\n
    cgc_free(v1);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4213988:sub_404ce4": null, "4214000:cgc_make_token": "extern unsigned int g_40509e;\n
\n
long long cgc_make_token(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned long long v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20], Other Possible Types: unsigned long long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = 1;\n
    v3 = cgc_calloc(4);\n
    if (!v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = cgc_strlen(\"counter=\") + 17 + v4;\n
    v1 = cgc_strlen(\"name=\");\n
    v4 = v1 + cgc_strlen(a0) + v4;\n
    v2 = cgc_calloc(v4);\n
    if (!v2)\n
    {\n
        cgc_free(v3);\n
        v5 = 0;\n
        return v5;\n
    }\n
    cgc_strcpy(v2, \"counter=\");\n
    v0 = v2;\n
    cgc_bin_to_hex(v0 + cgc_strlen(v2), &v3, 8);\n
    cgc_strcat(v2, 4214942);\n
    cgc_strcat(v2, a0);\n
    v5 = v2;\n
    return v5;\n
}\n
", "4214274:sub_404e02": null, "4214288:md5_hmac_sig": "long long md5_hmac_sig(unsigned long a0, unsigned long a1, unsigned int a2[4])\n
{\n
    cgc_md5_hmac(\"s00pEr5eCretsAUc3\", 17, a0, a1, a2);\n
    return 16;\n
}\n
", "4214348:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fabs": null, "5242896:cgc_pow": null, "5242904:strncpy": null, "5242912:strchr": null, "5242920:cgc__terminate": null, "5242928:cgc_transmit": null, "5242936:cgc_allocate": null, "5242944:memcpy": null, "5242952:cgc_sin": null, "5242960:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}