{"4202496:_init": "extern struct_0 *g_40d548;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d548;\n
    if (g_40d548)\n
        v1 = g_40d548();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40d568;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d568;\n
    goto *(4248944);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202608:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4248920);\n
}\n
", "4202656:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202693:sub_4020c5": null, "4202694:sub_4020c6": null, "4202704:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40d540;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202745:sub_4020f9": null, "4202752:register_tm_clones": "extern unsigned long long g_40d550;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202809:sub_402139": null, "4202816:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_40d558;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d558)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202869:sub_402175": null, "4202873:sub_402179": null, "4202880:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202889:sub_402189": null, "4202896:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (a0 >= 48 && *(&v1) <= 57)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4202958:sub_4021ce": null, "4202960:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (a0 >= 65 && *(&v1) <= 90)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203022:sub_40220e": null, "4203024:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (a0 >= 97 && *(&v1) <= 122)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203086:sub_40224e": null, "4203088:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (!cgc_isupper(a0) && !cgc_islower(*(&v1)))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203164:sub_40229c": null, "4203168:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(*(&v1)))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203244:sub_4022ec": null, "4203248:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (a0 >= 32 && *(&v1) != 127)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203310:sub_40232e": null, "4203312:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (!cgc_islower(a0))\n
    {\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    v2 = *(&v1) + -32;\n
    return v2;\n
}\n
", "4203375:sub_40236f": null, "4203376:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (!cgc_isupper(a0))\n
    {\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    v2 = *(&v1) + 32;\n
    return v2;\n
}\n
", "4203439:sub_4023af": null, "4203440:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned long v4;  // rax\n
\n
    v0 = v4;\n
    if (a0 != 32 && *(&v1) != 9 && *(&v1) != 10 && *(&v1) != 11 && *(&v1) != 12 && *(&v1) != 13)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203542:sub_402416": null, "4203552:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_6;  // tmp #6\n
    int tmp_8;  // tmp #8\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8], Other Possible Types: unsigned long long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_6 = SubV(tmp_8, tmp_7);\n
        v5 = cgc_rint();\n
        *(&v2) = tmp_6;\n
        return v5;\n
    }\n
    else if ((((CmpF(*(&v1), 0) & 69) | ((CmpF(*(&v1), 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_-8 =L ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base+0, size=8, endness=Iend_LE)))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v2 = *(&v1);\n
        return v5;\n
    }\n
}\n
", "4203685:sub_4024a5": null, "4203696:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_6;  // tmp #6\n
    int tmp_8;  // tmp #8\n
    int tmp_7;  // tmp #7\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    char v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8], Other Possible Types: unsigned long long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_6 = SubV(tmp_8, tmp_7);\n
        v5 = cgc_rint();\n
        v7 = tmp_6 + (0 CONCAT 0x3ff0000000000000);\n
        v2 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(*(&v1), 0) & 69) | ((CmpF(*(&v1), 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v2) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v2 = *(&v1);\n
        return v5;\n
    }\n
}\n
", "4203853:sub_40254d": null, "4203856:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp+0xc], Other Possible Types: unsigned long\n
    char v5;  // [bp+0x10]\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (*((&v3 + 4)) > 32)\n
        v4 = 32;\n
    for (v3 = 0; v3 < v4; v3 += 1)\n
    {\n
        (&state)[v3] = *((*(&v5) + v3 * 4));\n
    }\n
    v6 = v4;\n
    while (true)\n
    {\n
        v3 = v6;\n
        if (v3 >= 32)\n
            break;\n
        v2 = (&state)[v3 - 1 & 31];\n
        (&state)[v3] = (v2 ^ (v2 >> 30) + v3) * 524287;\n
        v6 = v3 + 1;\n
    }\n
    return v6;\n
}\n
", "4204096:cgc_seed_prng": "long long cgc_seed_prng(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&a0, 1);\n
}\n
", "4204129:sub_402661": null, "4204144:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4204488:sub_4027c8": null, "4204496:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp+0x0]\n
    unsigned int v1;  // [bp+0x4]\n
    unsigned int v2;  // [bp+0x8]\n
    unsigned int v3;  // [bp+0xc]\n
    char v4;  // [bp+0x10]\n
    char v5;  // [bp+0x14]\n
    unsigned int v6;  // [bp+0x18]\n
\n
    if (a0 > a1)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (*(&v5) != *(&v4))\n
    {\n
        v2 = *(&v4) - *(&v5) + 1;\n
        if (!v2)\n
        {\n
            v6 = cgc_prng();\n
            return v6;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = *(&v5);\n
        v6 = v0 + (0 CONCAT v3) /m v1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = *(&v5);\n
        return v6;\n
    }\n
}\n
", "4204692:sub_402894": null, "4204704:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp+0x8]\n
    unsigned int v4;  // [bp+0x24]\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    if (cgc_transmit(a0, a1, a2, v5))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = v3 + 1;\n
    return v4;\n
}\n
", "4204797:sub_4028fd": null, "4204800:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4204856:sub_402938": null, "4204864:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned short field_100;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[256];\n
    struct struct_2 *field_100;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp+0x0]\n
    unsigned long v3;  // [bp+0x8], Other Possible Types: unsigned long long\n
    char v4;  // [bp+0x10]\n
    char v5;  // [bp+0x18]\n
    char v6;  // [bp+0x24]\n
    unsigned int v7;  // [bp+0x34]\n
    struct_0 *v10;  // rax\n
    char *v11;  // rcx\n
    struct_1 *v12;  // rsi\n
\n
    v1 = a1;\n
    v0 = a2;\n
    if (a0->field_100 >= 0x100)\n
    {\n
        for (v3 = *(&v4); *((*(&v4) + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            if (cgc_transmit(a0, a1, a2, rcx<8>))\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            else if (*(&v2))\n
            {\n
                v10 = *(&v4);\n
                v11 = v10->field_100 - *(&v2);\n
                v10->field_100 = v11;\n
            }\n
            else\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
        }\n
    }\n
    v12 = *(&v4);\n
    *(&v11) = v12->field_100;\n
    *(&v12->field_100) = v11 + 1;\n
    v11[*(&v4)] = *(&v6);\n
    v7 = *(&v5) + 1;\n
    return v7;\n
}\n
", "4205147:sub_402a5b": null, "4205152:cgc_cromu_putchar": "long long cgc_cromu_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned int v2;  // [bp+0xc]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v0 = a0;\n
    if (cgc_transmit(a0, v3, v4, v5))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4205230:sub_402aae": null, "4205232:cgc_cromu_puts": "long long cgc_cromu_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8]\n
    char v3;  // [bp+0x10]\n
    unsigned int v4;  // [bp+0x24]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v2 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v1 == v2)\n
        {\n
            cgc_cromu_putchar(10);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (*(&v3))\n
        {\n
            v1 = *(&v3) + v1;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4205412:sub_402b64": null, "4205424:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x140]\n
    unsigned long long v1;  // [bp-0x138]\n
    char v2;  // [bp-0x12a]\n
    unsigned short v3;  // [bp-0x2a]\n
    unsigned long long v4;  // [bp-0x28]\n
    char v5;  // [bp+0x0]\n
    unsigned long v6;  // [bp+0x8]\n
    unsigned int v7;  // [bp+0x14]\n
    char v8;  // [bp+0x2e]\n
    unsigned short v9;  // [bp+0x12e]\n
    unsigned int v10;  // [bp+0x14c]\n
\n
    v4 = cgc_WRAPPER_BUFFER_PUTC;\n
    v3 = 0;\n
    v1 = &v2;\n
    v0 = 0;\n
    v7 = cgc_wrapper_output(v1, v4, v0, a0, a1);\n
    v6 = &v8;\n
    while (true)\n
    {\n
        if (v9 <= 0)\n
        {\n
            v10 = v7;\n
            return v10;\n
        }\n
        if (cgc_transmit(v1, v4, v0, a0))\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
        else if (*(&v5))\n
        {\n
            v9 -= *(&v5);\n
            v6 = *(&v5) + v6;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
    }\n
}\n
", "4205714:sub_402c92": null, "4205728:cgc_wrapper_output": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_4 *field_8;\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_4 *field_8;\n
    unsigned long long field_10;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    unsigned long long field_0;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long cgc_wrapper_output(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned long v4;  // [bp-0x30]\n
    unsigned long v5;  // [bp-0x28]\n
    unsigned long v6;  // [bp-0x20]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned long v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp+0x0]\n
    unsigned int v10;  // [bp+0x8]\n
    unsigned int *v11;  // [bp+0x10], Other Possible Types: unsigned long\n
    struct_6 *v12;  // [bp+0x18]\n
    unsigned int v13;  // [bp+0x24]\n
    struct struct_0 **v14;  // [bp+0x28], Other Possible Types: unsigned long\n
    struct_1 *v15;  // [bp+0x30]\n
    unsigned int v16;  // [bp+0x3c]\n
    unsigned long long *v17;  // [bp+0x40], Other Possible Types: unsigned long\n
    struct_5 *v18;  // [bp+0x48]\n
    unsigned int *v19;  // [bp+0x50]\n
    unsigned int v20;  // [bp+0x5c]\n
    unsigned long long *v21;  // [bp+0x60], Other Possible Types: unsigned long\n
    struct_5 *v22;  // [bp+0x68]\n
    unsigned int *v23;  // [bp+0x70]\n
    unsigned int v24;  // [bp+0x7c]\n
    unsigned int *v25;  // [bp+0x80], Other Possible Types: unsigned long\n
    struct_6 *v26;  // [bp+0x88]\n
    unsigned int v27;  // [bp+0x94]\n
    unsigned int *v28;  // [bp+0x98], Other Possible Types: unsigned long\n
    struct_6 *v29;  // [bp+0xa0]\n
    unsigned int v30;  // [bp+0xac]\n
    unsigned int *v31;  // [bp+0xb0], Other Possible Types: unsigned long\n
    struct_6 *v32;  // [bp+0xb8]\n
    unsigned int v33;  // [bp+0xc4]\n
    unsigned long long *v34;  // [bp+0xc8], Other Possible Types: unsigned long\n
    struct_3 *v35;  // [bp+0xd0]\n
    unsigned int v36;  // [bp+0xdc]\n
    unsigned long v37;  // [bp+0xe0]\n
    char v38;  // [bp+0xed]\n
    char v39;  // [bp+0xee]\n
    char v40;  // [bp+0xef]\n
    unsigned int *v41;  // [bp+0xf0]\n
    unsigned long v42;  // [bp+0xf8]\n
    unsigned long v43;  // [bp+0x100]\n
    unsigned int v44;  // [bp+0x10c]\n
    unsigned int v45;  // [bp+0x110]\n
    unsigned int v46;  // [bp+0x114]\n
    unsigned long long v47;  // [bp+0x118]\n
    char *v48;  // [bp+0x120]\n
    char *v49;  // [bp+0x128]\n
    char v50;  // [bp+0x137]\n
    unsigned int v51;  // [bp+0x138]\n
    unsigned int v52;  // [bp+0x13c]\n
    unsigned int v53;  // [bp+0x140]\n
    unsigned int v54;  // [bp+0x144]\n
    char v55;  // [bp+0x148]\n
    char *v56;  // [bp+0x150], Other Possible Types: unsigned long\n
    unsigned long long v57;  // [bp+0x158], Other Possible Types: unsigned long, char\n
    char v58;  // [bp+0x160]\n
    char v59;  // [bp+0x168]\n
    struct_3 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    unsigned long long *v62;  // rax\n
    struct_3 *v63;  // rcx\n
    unsigned long long *v64;  // rdx\n
    struct_6 *v65;  // rcx\n
    unsigned long long v66;  // rdx\n
    unsigned int *v67;  // rax\n
    struct_6 *v68;  // rcx\n
    unsigned int *v69;  // rdx\n
    struct_6 *v70;  // rcx\n
    unsigned long long v71;  // rdx\n
    unsigned int *v72;  // rax\n
    struct_6 *v73;  // rcx\n
    unsigned int *v74;  // rdx\n
    struct_6 *v75;  // rcx\n
    unsigned long long v76;  // rdx\n
    unsigned int *v77;  // rax\n
    struct_6 *v78;  // rcx\n
    unsigned int *v79;  // rdx\n
    unsigned long long v80;  // rdx\n
    unsigned long long *v81;  // rax\n
    struct_5 *v82;  // rcx\n
    unsigned long long *v83;  // rdx\n
    unsigned long long v84;  // rdx\n
    unsigned long long *v85;  // rax\n
    struct_5 *v86;  // rcx\n
    unsigned long long *v87;  // rdx\n
    struct_1 *v88;  // rcx\n
    unsigned long long v89;  // rdx\n
    struct struct_0 **v90;  // rax\n
    struct_1 *v91;  // rcx\n
    struct struct_0 **v92;  // rdx\n
    struct_6 *v93;  // rcx\n
    unsigned long long v94;  // rdx\n
    unsigned int *v95;  // rax\n
    struct_6 *v96;  // rcx\n
    unsigned int *v97;  // rdx\n
\n
    v8 = a0;\n
    v7 = a1;\n
    v6 = a2;\n
    v5 = a3;\n
    v4 = a4;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(v56))\n
            return v57;\n
        v50 = *(v56);\n
        v56 += 1;\n
        if (v50 != 36)\n
        {\n
            v57 = *(&v58)(*(&v59), v50, *(&v57));\n
        }\n
        else\n
        {\n
            v51 = 0;\n
            v52 = 0;\n
            v53 = 0;\n
            v54 = 0;\n
            if (!*(v56))\n
                return v57;\n
            if (*(v56) != 36)\n
            {\n
                if (*(v56) == 45)\n
                {\n
                    v54 |= 1;\n
                    v56 += 1;\n
                    if (!*(v56))\n
                        return v57;\n
                }\n
                if (cgc_isdigit(*(v56)))\n
                {\n
                    if (*(v56) == 48)\n
                        v54 |= 4;\n
                    for (v49 = v56; cgc_isdigit(*(v56)); v56 += 1);\n
                    v53 = cgc_cromu_atoi(v49);\n
                    if (!*(v56))\n
                        return v57;\n
                }\n
                if (*(v56) == 46)\n
                {\n
                    v56 += 1;\n
                    if (!*(v56))\n
                        return v57;\n
                    for (v48 = v56; cgc_isdigit(*(v56)); v56 += 1);\n
                    v51 = cgc_cromu_atoi(v48);\n
                    if (!*(v56))\n
                        return v57;\n
                }\n
                v37 = *(v56) - 88;\n
                switch (v37)\n
                {\n
                case 0:\n
                    v54 |= 8;\n
                    v26 = *(&v55);\n
                    v27 = v26->field_0;\n
                    if (v27 <= 40)\n
                    {\n
                        v75 = v26;\n
                        v76 = v27;\n
                        v77 = v76 + v75->field_10;\n
                        v75->field_0 = v76 + 8;\n
                        v25 = v77;\n
                    }\n
                    else\n
                    {\n
                        v78 = v26;\n
                        v79 = v78->field_8;\n
                        v78->field_8 = &v79[2];\n
                        v25 = v79;\n
                    }\n
                    v44 = *(v25);\n
                    v9 = v51;\n
                    v10 = v54;\n
                    v57 = cgc_printf_helper_int(*(&v59), *(&v58), v57, v44, 16, v53, v51);\n
                    break;\n
                case 11:\n
                    v12 = *(&v55);\n
                    v13 = v12->field_0;\n
                    if (v13 > 40)\n
                    {\n
                        v96 = v12;\n
                        v97 = v96->field_8;\n
                        v96->field_8 = &v97[2];\n
                        v11 = v97;\n
                    }\n
                    else\n
                    {\n
                        v93 = v12;\n
                        v94 = v13;\n
                        v95 = v94 + v93->field_10;\n
                        v93->field_0 = v94 + 8;\n
                        v11 = v95;\n
                    }\n
                    v40 = *(v11);\n
                    v38 = v40;\n
                    v39 = 0;\n
                    v9 = v54;\n
                    v57 = cgc_printf_helper_string(*(&v59), *(&v58), v57, &v38, v53, 0);\n
                    break;\n
                case 12:\n
                    v32 = *(&v55);\n
                    v33 = v32->field_0;\n
                    if (v33 > 40)\n
                    {\n
                        v68 = v32;\n
                        v69 = v68->field_8;\n
                        v68->field_8 = &v69[2];\n
                        v31 = v69;\n
                    }\n
                    else\n
                    {\n
                        v65 = v32;\n
                        v66 = v33;\n
                        v67 = v66 + v65->field_10;\n
                        v65->field_0 = v66 + 8;\n
                        v31 = v67;\n
                    }\n
                    v46 = *(v31);\n
                    v9 = v51;\n
                    v10 = v54;\n
                    v57 = cgc_printf_helper_int(*(&v59), *(&v58), v57, v46, 10, v53, v51);\n
                    break;\n
                case 13:\n
                    v54 |= 16;\n
                    v18 = *(&v55);\n
                    v19 = &v18->field_4;\n
                    v20 = v18->field_4;\n
                    if (v20 > 160)\n
                    {\n
                        v86 = v18;\n
                        v87 = v86->field_8;\n
                        v86->field_8 = &v87[1];\n
                        v17 = v87;\n
                    }\n
                    else\n
                    {\n
                        v84 = v20;\n
                        v85 = v84 + v18->field_10;\n
                        *(v19) = v84 + 16;\n
                        v17 = v85;\n
                    }\n
                    v42 = *(v17);\n
                    v57 = cgc_printf_helper_float(*(&v59), *(&v58), v57, v53, v51, v54);\n
                    break;\n
                case 14:\n
                    v22 = *(&v55);\n
                    v23 = &v22->field_4;\n
                    v24 = v22->field_4;\n
                    if (v24 <= 160)\n
                    {\n
                        v80 = v24;\n
                        v81 = v80 + v22->field_10;\n
                        *(v23) = v80 + 16;\n
                        v21 = v81;\n
                    }\n
                    else\n
                    {\n
                        v82 = v22;\n
                        v83 = v82->field_8;\n
                        v82->field_8 = &v83[1];\n
                        v21 = v83;\n
                    }\n
                    v43 = *(v21);\n
                    v57 = cgc_printf_helper_float(*(&v59), *(&v58), v57, v53, v51, v54);\n
                    break;\n
                case 22:\n
                    v15 = *(&v55);\n
                    v16 = v15->field_0;\n
                    if (v16 > 40)\n
                    {\n
                        v91 = v15;\n
                        v92 = v91->field_8;\n
                        v91->field_8 = &v92[1];\n
                        v14 = v92;\n
                    }\n
                    else\n
                    {\n
                        v88 = v15;\n
                        v89 = v16;\n
                        v90 = v89 + v88->field_10;\n
                        v88->field_0 = v89 + 8;\n
                        v14 = v90;\n
                    }\n
                    v41 = *(v14);\n
                    *(v41) = v57;\n
                    break;\n
                case 27:\n
                    v35 = *(&v55);\n
                    v36 = v35->field_0;\n
                    if (v36 > 40)\n
                    {\n
                        v63 = v35;\n
                        v64 = v63->field_8;\n
                        v63->field_8 = &v64[1];\n
                        v34 = v64;\n
                    }\n
                    else\n
                    {\n
                        v60 = v35;\n
                        v61 = v36;\n
                        v62 = v61 + v60->field_10;\n
                        v60->field_0 = v61 + 8;\n
                        v34 = v62;\n
                    }\n
                    v47 = *(v34);\n
                    v9 = v54;\n
                    v57 = cgc_printf_helper_string(*(&v59), *(&v58), v57, v47, v53, v51);\n
                    break;\n
                case 32:\n
                    v29 = *(&v55);\n
                    v30 = v29->field_0;\n
                    if (v30 <= 40)\n
                    {\n
                        v70 = v29;\n
                        v71 = v30;\n
                        v72 = v71 + v70->field_10;\n
                        v70->field_0 = v71 + 8;\n
                        v28 = v72;\n
                    }\n
                    else\n
                    {\n
                        v73 = v29;\n
                        v74 = v73->field_8;\n
                        v73->field_8 = &v74[2];\n
                        v28 = v74;\n
                    }\n
                    v45 = *(v28);\n
                    v9 = v51;\n
                    v10 = v54;\n
                    v57 = cgc_printf_helper_int(*(&v59), *(&v58), v57, v45, 16, v53, v51);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v56 += 1;\n
            }\n
            else\n
            {\n
                v57 = *(&v58)(*(&v59), 36, v57);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4208197:sub_403645": null, "4208208:cgc_cromu_printf": "long long cgc_cromu_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4208398:sub_40370e": null, "4208400:cgc_cromu_vprintf": "long long cgc_cromu_vprintf(unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
\n
    *(&v2) = cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, *(&v2), v0, a0, a1);\n
}\n
", "4208485:sub_403765": null, "4208496:cgc_cromu_sprintf": "long long cgc_cromu_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_cromu_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4208697:sub_403839": null, "4208704:cgc_cromu_vsprintf": "long long cgc_cromu_vsprintf(unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp+0x4]\n
    char v4;  // [bp+0x10]\n
    char v5;  // [bp+0x18]\n
\n
    *(&v1) = cgc_WRAPPER_OUTC;\n
    v0 = 0;\n
    v2 = cgc_wrapper_output(a0, *(&v1), v0, a1, a2);\n
    *(&v5)(*(&v4), 0, v2);\n
    return v2;\n
}\n
", "4208824:sub_4038b8": null, "4208832:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp+0x4]\n
    char *v5;  // [bp+0x8], Other Possible Types: unsigned long\n
    char v6;  // [bp+0x14]\n
    char *v7;  // [bp+0x18]\n
    char v8;  // [bp+0x20]\n
    unsigned int v9;  // [bp+0x24]\n
    char *v10;  // [bp+0x28], Other Possible Types: unsigned long\n
    char *v11;  // rcx\n
    char *v12;  // rcx\n
    char *v13;  // rcx\n
    char *v14;  // rcx\n
\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = a3;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        *(v7) = 48;\n
        v10 = 1;\n
        return v10;\n
    }\n
    while (v9 > 0)\n
    {\n
        v4 = (0 CONCAT v9) /m *(&v8) >> 32;\n
        v9 = (0 CONCAT v9) /m *(&v8);\n
        if (*(&v8) != 16)\n
        {\n
            v11 = v5;\n
            v5 = v11 + 1;\n
            *((v7 + v11)) = v4 + 48;\n
        }\n
        else if (v4 < 10)\n
        {\n
            v12 = v5;\n
            v5 = v12 + 1;\n
            *((v7 + v12)) = v4 + 48;\n
        }\n
        else if (!(*(&v6) & 8))\n
        {\n
            v14 = v5;\n
            v5 = v14 + 1;\n
            *((v7 + v14)) = v4 + 87;\n
        }\n
        else\n
        {\n
            v13 = v5;\n
            v5 = v13 + 1;\n
            *((v7 + v13)) = v4 + 55;\n
        }\n
    }\n
    v10 = v5;\n
    return v10;\n
}\n
", "4209172:sub_403a14": null, "4209184:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v12, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x94]\n
    struct_0 *v1;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x78]\n
    struct_0 *v3;  // [bp-0x58]\n
    char v4;  // [bp-0x49]\n
    void* v5;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v6;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned long v10;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v11;  // [bp-0x18]\n
    unsigned long long v13;  // rax\n
    unsigned long v14;  // rcx\n
    unsigned long long v15;  // rax\n
\n
    v0 = a3;\n
    v11 = a1;\n
    v10 = a2;\n
    v9 = v0;\n
    v8 = v12;\n
    v7 = a6;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a4 == 10 && v9 < 0)\n
    {\n
        v4 = 1;\n
        v9 = -(v9);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(v9, a4, &v2, v7);\n
    v6 = &v3[v6];\n
    if (a5 > 0 && v6 < a5)\n
        v5 = a5 - v6;\n
    if (v8 > 0)\n
    {\n
        v7 |= 4;\n
        if (v3 < v8)\n
            v5 = v8 - v3;\n
    }\n
    if (!(v7 & 1))\n
    {\n
        if (v4 && v5 > 0 && (v7 & 4))\n
        {\n
            v10 = v11(a0, 45, v10);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v13 = v5;\n
            v5 = v13 - 1;\n
            if (v13 <= 0)\n
                break;\n
            if (!(v7 & 4))\n
                v10 = v11(a0, 32, v10);\n
            else\n
                v10 = v11(a0, 48, v10);\n
        }\n
    }\n
    if (v4)\n
    {\n
        v10 = v11(a0, 45, v10);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 += 1)\n
    {\n
        v14 = v1 + 1;\n
        v10 = v11(a0, (&v2)[v14], v10, v14);\n
    }\n
    if (!(v7 & 1))\n
        return v10;\n
    while (true)\n
    {\n
        v15 = v5;\n
        v5 = v15 - 1;\n
        if (v15 <= 0)\n
            break;\n
        v10 = v11(a0, 32, v10);\n
    }\n
    return v10;\n
}\n
", "4209991:sub_403d47": null, "4210000:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38]\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28]\n
    char v3;  // [bp-0x19]\n
    unsigned long v4;  // [bp-0x18]\n
    char v5;  // [bp+0x3]\n
    char v6;  // [bp+0x4]\n
    char v7;  // [bp+0x5]\n
    unsigned short v8;  // [bp+0x6]\n
    char v10;  // [bp+0x9]\n
    unsigned short v11;  // [bp+0xa]\n
    char v12;  // [bp+0xd]\n
    char v13;  // [bp+0xe]\n
    char v14;  // [bp+0xf]\n
    unsigned long long v15;  // [bp+0x10]\n
    unsigned short v16;  // [bp+0x1e]\n
    char v17;  // [bp+0x21]\n
    unsigned short v18;  // [bp+0x22]\n
    unsigned short v19;  // [bp+0x24]\n
    unsigned short v20;  // [bp+0x26]\n
    unsigned long v21;  // [bp+0x28]\n
    unsigned short v22;  // [bp+0x34]\n
    char v23;  // [bp+0x37]\n
    unsigned long v24;  // [bp+0x38], Other Possible Types: unsigned long long\n
    char *v25;  // [bp+0x48], Other Possible Types: unsigned long, char\n
    char v26;  // [bp+0x54], Other Possible Types: unsigned int\n
    char v27;  // [bp+0x58]\n
    char v28;  // [bp+0x67]\n
    unsigned long v29;  // [bp+0x68], Other Possible Types: char\n
    char *v30;  // [bp+0x70], Other Possible Types: unsigned long\n
    unsigned long v31;  // xmm0lq\n
    unsigned long long v32;  // xmm0lq\n
    char *v33;  // rcx\n
    char *v34;  // rcx\n
    char *v36;  // rcx\n
    char *v37;  // rcx\n
    char *v38;  // rcx\n
    char *v39;  // rcx\n
    int v40;  // xmm0\n
    char *v41;  // rcx\n
    char *v42;  // rcx\n
    char *v43;  // rcx\n
    char *v44;  // rcx\n
    char *v45;  // rcx\n
    char *v46;  // rcx\n
    char *v47;  // rcx\n
    char *v48;  // rcx\n
    char *v50;  // rcx\n
    char *v51;  // rcx\n
    char *v52;  // rcx\n
    char *v53;  // rax, Other Possible Types: unsigned long\n
    unsigned long v54;  // rcx\n
    unsigned long v55;  // rcx\n
    char *v57;  // rcx\n
    char *v58;  // rcx\n
    char *v59;  // rcx\n
    char *v60;  // rcx\n
    char *v61;  // rcx\n
    char *v63;  // rcx\n
    char *v64;  // rcx\n
    char *v65;  // rcx\n
    char *v66;  // rcx\n
    char *v67;  // rcx\n
    char *v68;  // rcx\n
    char *v69;  // rcx\n
    unsigned int v70;  // eax\n
    char *v71;  // rcx\n
\n
    v4 = v31;\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    v0 = 0;\n
    cgc_pow();\n
    v24 = 0x4024000000000000;\n
    v32 = *(&v29);\n
    if ((((CmpF(v32, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v33 = *(&v25);\n
        v25 = v33 + 1;\n
        v33[*(&v27)] = 48;\n
        v34 = v25;\n
        v25 = v34 + 1;\n
        v34[*(&v27)] = 46;\n
        for (v23 = 0; v23 < v28; v23 += 1)\n
        {\n
            v36 = v25;\n
            v25 = v36 + 1;\n
            v36[*(&v27)] = 48;\n
        }\n
        if ((*(&v26) & 16))\n
        {\n
            v41 = v25;\n
            v25 = v41 + 1;\n
            v41[*(&v27)] = 101;\n
            v42 = v25;\n
            v25 = v42 + 1;\n
            v42[*(&v27)] = 43;\n
            v43 = v25;\n
            v25 = v43 + 1;\n
            v43[*(&v27)] = 48;\n
            v44 = v25;\n
            v25 = v44 + 1;\n
            v44[*(&v27)] = 48;\n
            v45 = v25;\n
            v25 = v45 + 1;\n
            v45[*(&v27)] = 48;\n
        }\n
        v30 = v25;\n
        return v30;\n
    }\n
    if ((((CmpF(*(&v29), *(&v29)) & 69) >> 2) & 1))\n
    {\n
        v37 = v25;\n
        v25 = v37 + 1;\n
        v37[*(&v27)] = 78;\n
        v38 = v25;\n
        v25 = v38 + 1;\n
        v38[*(&v27)] = 97;\n
        v39 = v25;\n
        v25 = v39 + 1;\n
        v39[*(&v27)] = 78;\n
        v30 = v25;\n
        return v30;\n
    }\n
    v40 = (0 CONCAT *(&v29)) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v40, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v46 = v25;\n
        v25 = v46 + 1;\n
        v46[*(&v27)] = 73;\n
        v47 = v25;\n
        v25 = v47 + 1;\n
        v47[*(&v27)] = 78;\n
        v48 = v25;\n
        v25 = v48 + 1;\n
        v48[*(&v27)] = 70;\n
        v30 = v25;\n
        return v30;\n
    }\n
    if (!(CmpF(*(&v29), 0x4202a05f20000000) & 1))\n
        v26 = *(&v26) | 16;\n
    if ((((CmpF(0, v29) & 69) | ((CmpF(0, v29) & 69) >> 6)) & 1) == 1)\n
        v29 = (0 CONCAT v24) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT *(&v29));\n
    else\n
        v29 = (0 CONCAT v24 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT *(&v29));\n
    cgc_log10();\n
    v22 = v29;\n
    if ((*(&v26) & 16))\n
    {\n
        v20 = v22 - v28;\n
        if ((((CmpF(0x3ff0000000000000, v29) & 69) | ((CmpF(0x3ff0000000000000, v29) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v21 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v21 = 0x4024000000000000;\n
        }\n
        v24 = v21;\n
    }\n
    if ((((CmpF(0, v29) & 69) | ((CmpF(0, v29) & 69) >> 6)) & 1) != 1)\n
    {\n
        v29 ^= 0x8000000000000000;\n
        v25[*(&v27)] = 45;\n
        v25 = *(&v25) + 1;\n
    }\n
    v19 = 0;\n
    v18 = 0;\n
    v17 = 0;\n
    *(&v40) = v24;\n
    if ((((CmpF(v40, v29) & 69) | ((CmpF(v40, v29) & 69) >> 6)) & 1) != 1)\n
    {\n
        v50 = v25;\n
        v25 = v50 + 1;\n
        v50[*(&v27)] = 48;\n
        v51 = v25;\n
        v25 = v51 + 1;\n
        v51[*(&v27)] = 46;\n
        v17 = 1;\n
    }\n
    else if (v22 < 0)\n
    {\n
        *(&v40) = v29;\n
        if ((((CmpF(v40, v24) & 69) | ((CmpF(v40, v24) & 69) >> 6)) & 1) != 1 && !(*(&v26) & 16))\n
        {\n
            v52 = v25;\n
            v25 = v52 + 1;\n
            v52[*(&v27)] = 48;\n
            v53 = *(&v27);\n
            v54 = v25;\n
            v25 = v54 + 1;\n
            v53[v54] = 46;\n
            v16 = v22;\n
            while (true)\n
            {\n
                *(&v53) = v16 + 1;\n
                v16 = v53;\n
                if (v53 >= 0)\n
                    break;\n
                v53 = *(&v27);\n
                v55 = v25;\n
                v25 = v55 + 1;\n
                *((v53 + v55)) = 48;\n
                v18 += 1;\n
            }\n
            v17 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v6 = 1;\n
        if (v22 < 0)\n
        {\n
            *(&v40) = v29;\n
            v6 = !((CmpF(v40, v24) & 69 | (CmpF(v40, v24) & 69) >> 6) & 1);\n
        }\n
        if (!(v6 & 1))\n
            break;\n
        cgc_pow();\n
        v15 = 0x4024000000000000;\n
        *(&v40) = v15;\n
        if ((((CmpF(v40, 0) & 69) | ((CmpF(v40, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_404491:\n
            if ((((CmpF(v22, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v40) = v29;\n
                if ((((CmpF(v40, 0) & 69) | ((CmpF(v40, 0) & 69) >> 6)) & 1) != 1 && !(*(&v26) & 16))\n
                {\n
                    v63 = v25;\n
                    v25 = v63 + 1;\n
                    v63[*(&v27)] = 46;\n
                    v17 = 1;\n
                }\n
            }\n
            if (v18 >= v28)\n
                break;\n
            v22 -= 1;\n
        }\n
        else\n
        {\n
            v40 = (0 CONCAT v15) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v40, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_404491;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v40 = tmp_10;\n
            cgc_floor();\n
            v14 = v40;\n
            v29 = (0 CONCAT v14 ^ 0x8000000000000000) * (0 CONCAT v15) + (0 CONCAT *(&v29));\n
            if ((*(&v26) & 16) && !v17)\n
            {\n
                if (!v19)\n
                    v19 = v22;\n
                if (!v14)\n
                {\n
                    v19 -= 1;\n
                }\n
                else\n
                {\n
                    v59 = v25;\n
                    v25 = v59 + 1;\n
                    v59[*(&v27)] = v14 + 48;\n
                    v60 = v25;\n
                    v25 = v60 + 1;\n
                    v60[*(&v27)] = 46;\n
                    v17 = 1;\n
                }\n
                goto LABEL_404487;\n
            }\n
            if ((((CmpF(0, v22) & 69) | ((CmpF(0, v22) & 69) >> 6)) & 1) != 1 && !v17)\n
            {\n
                v57 = v25;\n
                v25 = v57 + 1;\n
                v57[*(&v27)] = 48;\n
                v58 = v25;\n
                v25 = v58 + 1;\n
                v58[*(&v27)] = 46;\n
                v17 = 1;\n
            }\n
            v61 = v25;\n
            v25 = v61 + 1;\n
            v61[*(&v27)] = v14 + 48;\n
            if (v17)\n
                v18 += 1;\n
LABEL_404487:\n
            goto LABEL_404491;\n
        }\n
    }\n
    while (true)\n
    {\n
        v5 = 0;\n
        if (v17)\n
            v5 = v18 < v28;\n
        if (!(v5 & 1))\n
            break;\n
        v64 = v25;\n
        v25 = v64 + 1;\n
        v64[*(&v27)] = 48;\n
        v18 += 1;\n
    }\n
    if ((*(&v26) & 16))\n
    {\n
        v65 = v25;\n
        v25 = v65 + 1;\n
        v65[*(&v27)] = 101;\n
        if (v19 >= 0)\n
        {\n
            v67 = v25;\n
            v25 = v67 + 1;\n
            v67[*(&v27)] = 43;\n
        }\n
        else\n
        {\n
            v19 = -(v19);\n
            v66 = v25;\n
            v25 = v66 + 1;\n
            v66[*(&v27)] = 45;\n
        }\n
        if (v19)\n
        {\n
            v12 = 0;\n
            cgc_log10();\n
            v11 = v19;\n
            for (v10 = v11; v10 < 2; v10 += 1)\n
            {\n
                v69 = v25;\n
                v25 = v69 + 1;\n
                v69[*(&v27)] = 48;\n
                v12 += 1;\n
            }\n
            while (true)\n
            {\n
                v12 += 1;\n
                if (v12 >= 3)\n
                    break;\n
                cgc_pow();\n
                v8 = 0;\n
                v70 = v19;\n
                v7 = (v70 >> 31 CONCAT v70) /m v8;\n
                v71 = v25;\n
                v25 = v71 + 1;\n
                v71[*(&v27)] = v7 + 48;\n
                v19 -= (v8 * v7);\n
                v11 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v13 = 0; v13 < 3; v13 += 1)\n
            {\n
                v68 = v25;\n
                v25 = v68 + 1;\n
                v68[*(&v27)] = 48;\n
            }\n
        }\n
    }\n
    v30 = v25;\n
    return v30;\n
}\n
", "4212594:sub_404772": null, "4212608:cgc_printf_helper_float": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4213335:sub_404a57": null, "4213344:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x18]\n
    void* v6;  // [bp+0x0], Other Possible Types: unsigned long\n
    char v8;  // [bp+0x14]\n
    char v9;  // [bp+0x18]\n
    char v10;  // [bp+0x1c]\n
    char *v11;  // [bp+0x20], Other Possible Types: unsigned long, char\n
    unsigned long v12;  // [bp+0x28], Other Possible Types: unsigned long long, char\n
    char v13;  // [bp+0x30]\n
    char v14;  // [bp+0x38]\n
    unsigned long v15;  // [bp+0x40]\n
    char *v16;  // rcx\n
    unsigned long long v17;  // rax\n
    unsigned long long v18;  // rax\n
    char *v19;  // rcx\n
    unsigned long long v20;  // rax\n
\n
    v5 = a0;\n
    v4 = a1;\n
    v3 = a2;\n
    v2 = a3;\n
    v1 = a4;\n
    if (!a5 && !*(&v10))\n
    {\n
        for (v0 = v7; *(*(&v11)); v11 = *(&v11) + 1)\n
        {\n
            v16 = *(&v11);\n
            v12 = *(&v13)(*(&v14), *(v16), *(&v12), v16);\n
        }\n
        v15 = v12;\n
        return v15;\n
    }\n
    v7 = cgc_strlen(v11);\n
    v6 = 0;\n
    if (*(&v9) > 0 && v7 > *(&v9))\n
        v7 = *(&v9);\n
    if (*(&v10) > 0 && v7 < *(&v10))\n
        v6 = *(&v10) - v7;\n
    if (!(*(&v8) & 1))\n
    {\n
        while (true)\n
        {\n
            v17 = v6;\n
            v6 = v17 - 1;\n
            if (v17 <= 0)\n
                break;\n
            if ((*(&v8) & 4))\n
                v12 = *(&v13)(*(&v14), 48, v12);\n
            else\n
                v12 = *(&v13)(*(&v14), 32, v12);\n
        }\n
    }\n
    while (true)\n
    {\n
        v18 = v7;\n
        v7 = v18 - 1;\n
        if (v18 <= 0)\n
            break;\n
        v19 = v11;\n
        v11 = v19 + 1;\n
        v12 = *(&v13)(*(&v14), *(v19), v12, v19);\n
    }\n
    if ((*(&v8) & 1))\n
    {\n
        while (true)\n
        {\n
            v20 = v6;\n
            v6 = v20 - 1;\n
            if (v20 <= 0)\n
                break;\n
            v12 = *(&v13)(*(&v14), 32, v12);\n
        }\n
    }\n
    v15 = v12;\n
    return v15;\n
}\n
", "4213941:sub_404cb5": null, "4213952:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4213970:sub_404cd2": null, "4213984:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4214012:sub_404cfc": null, "4214016:cgc_cromu_atoi": "long long cgc_cromu_atoi(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp+0x0]\n
    unsigned int v4;  // [bp+0x4]\n
    char *v5;  // [bp+0x8], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp+0x14]\n
    char *v7;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v5)); v5 += 1);\n
    if (!*(v5))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    for (; cgc_isdigit(*(v5)); v4 = v4 * 10 + *(v7) - 48)\n
    {\n
        v7 = v5;\n
        v5 = v7 + 1;\n
    }\n
    if (v3)\n
    {\n
        v6 = -(v4);\n
        return v6;\n
    }\n
    v6 = v4;\n
    return v6;\n
}\n
", "4214265:sub_404df9": null, "4214272:cgc_cromu_atof": "double cgc_cromu_atof(long long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    unsigned long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x20]\n
    char v3;  // [bp+0x7]\n
    char *v4;  // [bp+0x8], Other Possible Types: unsigned long\n
    char v5;  // [bp+0x10]\n
    unsigned long v6;  // [bp+0x18]\n
    unsigned long v7;  // [bp+0x20]\n
\n
    v2 = 0;\n
    v1 = a0;\n
    for (v0 = a0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 46)\n
        {\n
            *(v4) = 0;\n
            v4 += 1;\n
            break;\n
        }\n
    }\n
    v7 = cgc_cromu_atoi(*(&v5));\n
    if (!*(v4))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+32, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+24, size=8, endness=Iend_LE))));\n
    v6 = cgc_cromu_atoi(v4);\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (v4)\n
            v3 = cgc_isdigit(*(v4));\n
        if (!(v3 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v6) = tmp_12;\n
        v4 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+32, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+24, size=8, endness=Iend_LE))));\n
}\n
", "4214578:sub_404f32": null, "4214592:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    unsigned long v1;  // [bp-0x18]\n
    char v2;  // [bp+0x0]\n
    unsigned long v3;  // [bp+0x8]\n
    char *v4;  // [bp+0x10], Other Possible Types: char\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v1 = a1;\n
    for (v0 = a0; *(v3); *(v6) = tmp_19)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        tmp_19 = *(v5);\n
        v6 = *(&v4);\n
        v4 = v6 + 1;\n
    }\n
    *(v4) = 0;\n
    return *(&v2);\n
}\n
", "4214700:sub_404fac": null, "4214704:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    char *v4;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp+0x8]\n
    char v6;  // [bp+0x10]\n
    char v7;  // [bp+0x18]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = 0; v4 < v5; v4 += 1)\n
    {\n
        if (!v4[*(&v6)])\n
            break;\n
        v4[*(&v7)] = v4[*(&v6)];\n
    }\n
    for (; v4 < v5; v4 += 1)\n
    {\n
        v4[*(&v7)] = 0;\n
    }\n
    return *(&v7);\n
}\n
", "4214882:sub_405062": null, "4214896:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    char v3;  // [bp+0x0]\n
    unsigned long v4;  // [bp+0x8]\n
    char *v5;  // [bp+0x10], Other Possible Types: unsigned long\n
    char *v6;  // [bp+0x18], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = a0; v4 >= 4; v4 -= 4)\n
    {\n
        *(&v6) = *(&v5);\n
        v6 += 4;\n
        v5 += 4;\n
    }\n
    for (; v4 > 0; v4 -= 1)\n
    {\n
        *(v6) = *(v5);\n
        v6 += 1;\n
        v5 += 1;\n
    }\n
    return *(&v3);\n
}\n
", "4215092:sub_405134": null, "4215104:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    char v2;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp+0x8]\n
    char *v4;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        if (!*(v4))\n
            break;\n
        v2 = *(&v2) + 1;\n
    }\n
    return v2;\n
}\n
", "4215184:cgc_bzero": "long long cgc_bzero(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    char *v2;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v3;  // [bp+0x8]\n
    char *v4;  // rcx\n
\n
    v1 = a0;\n
    for (v0 = a1; *(&v2); v4[1 + v3] = 0)\n
    {\n
        v4 = *(&v2);\n
        v2 = v4 + 1;\n
    }\n
    v2[v3] = 0;\n
    return v3;\n
}\n
", "4215264:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char v3;  // [bp+0x0]\n
    char v4;  // [bp+0x7]\n
    unsigned long v5;  // [bp+0x8]\n
    unsigned long v6;  // [bp+0x10]\n
    char *v7;  // [bp+0x20], Other Possible Types: unsigned long\n
    char *v8;  // rax\n
    char *v9;  // rax\n
\n
    v2 = a2;\n
    v1 = a0;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v6 >= 4; v6 -= 4)\n
    {\n
        v8 = v7;\n
        v7 = v8 + 1;\n
        *(&v8) = *(&v3);\n
    }\n
    for (; v6 > 0; v6 -= 1)\n
    {\n
        v9 = v7;\n
        v7 = v9 + 1;\n
        *(v9) = v4;\n
    }\n
    return v5;\n
}\n
", "4215468:sub_4052ac": null, "4215472:cgc_read_until": "long long cgc_read_until(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x19]\n
    char v3;  // [bp+0x0]\n
    unsigned long v4;  // [bp+0x8]\n
    char *v5;  // [bp+0x10], Other Possible Types: unsigned long\n
    char v6;  // [bp+0x18]\n
    char v7;  // [bp+0x27]\n
    char v8;  // [bp+0x28]\n
    unsigned int v9;  // [bp+0x34]\n
    char *v12;  // rcx\n
\n
    v2 = a1;\n
    v1 = a2;\n
    if (!a0)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    for (v0 = 0; v5 < *(&v6) - 1; v12[*(&v8)] = *(&v4 + 7))\n
    {\n
        if (cgc_receive(a0, a1, a2, rcx<8>))\n
        {\n
            v9 = -1;\n
            return v9;\n
        }\n
        if (!*(&v3))\n
        {\n
            v9 = -1;\n
            return v9;\n
        }\n
        if (*(&v4 + 7) == v7)\n
            break;\n
        v12 = v5;\n
        v5 = v12 + 1;\n
    }\n
    *((*(&v8) + v5)) = 0;\n
    v9 = v5;\n
    return v9;\n
}\n
", "4215718:sub_4053a6": null, "4215728:cgc_PrintAspMenu": "extern char cgc_Asp;\n
extern char cgc_NumAsp;\n
extern char g_40a0d8;\n
\n
long long cgc_PrintAspMenu(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int *v0;  // [bp+0x0]\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long v2;  // [bp+0x10]\n
    char v3;  // [bp+0x1f]\n
    unsigned int v4;  // [bp+0x20]\n
    char v5;  // [bp+0x27]\n
    unsigned long long v6;  // xmm0lq, Other Possible Types: unsigned long\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            cgc_cromu_puts(\"1. Change aeration rate\");\n
            cgc_cromu_puts(\"2. Change glycerin rate\");\n
            cgc_cromu_puts(\"3. Change alum rate\");\n
            cgc_cromu_puts(\"4. Return to previous menu\");\n
            cgc_cromu_printf(\"Selection: \", a1, a2, a3, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v4 = cgc_read_until(&v5, 10, 3);\n
            if (v4 == -1)\n
                cgc__terminate(\"Selection: \");\n
        } while (v4 != 1);\n
        v0 = v5 - 49;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_cromu_printf(\"Which ASP 0-$d: \", cgc_NumAsp - 1, 3, &g_40a0d8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v4 = cgc_read_until(&v5, 10, 3);\n
            if (v4 == -1)\n
                cgc__terminate(\"Which ASP 0-$d: \");\n
            if (!(v4 == 1))\n
                continue;\n
            v3 = cgc_cromu_atoi(&v5);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v3 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New aeration percent: \", 10, 3, a3, a4);\n
            a1 = 10;\n
            a2 = 8;\n
            v4 = cgc_read_until(&v5, 10, 8);\n
            if (v4 == -1)\n
                cgc__terminate(\"New aeration percent: \");\n
            cgc_cromu_atof(&v5);\n
            v2 = v6;\n
            if ((((CmpF(0, v2) & 69) | ((CmpF(0, v2) & 69) >> 6)) & 1) == 1)\n
            {\n
                v6 = v2;\n
                if ((((CmpF(v6, 0x4059000000000000) & 69) | ((CmpF(v6, 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
                {\n
                    cgc_ChangeAerationPercent(&(&cgc_Asp)[280 * v3]);\n
                    goto LABEL_4057bf;\n
                }\n
            }\n
            continue;\n
        case 1:\n
            cgc_cromu_printf(\"Which ASP 0-$d: \", cgc_NumAsp - 1, 3, &g_40a0d8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v4 = cgc_read_until(&v5, 10, 3);\n
            if (v4 == -1)\n
                cgc__terminate(\"Which ASP 0-$d: \");\n
            if (!(v4 == 1))\n
                continue;\n
            v3 = cgc_cromu_atoi(&v5);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v3 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New glycerin rate (0-100 gallons/hr): \", 10, 3, a3, a4);\n
            a1 = 10;\n
            a2 = 8;\n
            v4 = cgc_read_until(&v5, 10, 8);\n
            if (v4 == -1)\n
                cgc__terminate(\"New glycerin rate (0-100 gallons/hr): \");\n
            cgc_cromu_atof(&v5);\n
            v1 = v6;\n
            if ((((CmpF(0, v1) & 69) | ((CmpF(0, v1) & 69) >> 6)) & 1) == 1)\n
            {\n
                v6 = v1;\n
                if ((((CmpF(v6, 0x4059000000000000) & 69) | ((CmpF(v6, 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
                {\n
                    cgc_ChangeGlycerinRate(&(&cgc_Asp)[280 * v3]);\n
                    goto LABEL_4057bf;\n
                }\n
            }\n
            continue;\n
        case 2:\n
            cgc_cromu_printf(\"Which ASP 0-$d: \", cgc_NumAsp - 1, 3, &g_40a0d8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v4 = cgc_read_until(&v5, 10, 3);\n
            if (v4 == -1)\n
                cgc__terminate(\"Which ASP 0-$d: \");\n
            if (!(v4 == 1))\n
                continue;\n
            v3 = cgc_cromu_atoi(&v5);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v3 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New alum rate (0-100 gallons/hr): \", 10, 3, a3, a4);\n
            a1 = 10;\n
            a2 = 8;\n
            v4 = cgc_read_until(&v5, 10, 8);\n
            if (v4 == -1)\n
                cgc__terminate(\"New alum rate (0-100 gallons/hr): \");\n
            cgc_cromu_atof(&v5);\n
            v1 = v6;\n
            if ((((CmpF(0, v1) & 69) | ((CmpF(0, v1) & 69) >> 6)) & 1) == 1)\n
            {\n
                v6 = v1;\n
                if ((((CmpF(v6, 0x4059000000000000) & 69) | ((CmpF(v6, 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
                {\n
                    cgc_ChangeAlumRate(&(&cgc_Asp)[280 * v3]);\n
                    goto LABEL_4057bf;\n
                }\n
            }\n
            continue;\n
        case 3:\n
            return &(&g_40a0d8)[*((&g_40a0d8 + 0x4 * v0))];\n
        default:\n
LABEL_4057bf:\n
            break;\n
        }\n
    }\n
}\n
", "4216772:sub_4057c4": null, "4216784:cgc_PrintFilterMenu": "extern char cgc_Filter;\n
extern char cgc_NumAsp;\n
extern char cgc_NumFilters;\n
\n
long long cgc_PrintFilterMenu(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp+0x0]\n
    int tmp_8;  // tmp #8\n
    char v1;  // [bp+0x6]\n
    char v2;  // [bp+0x7]\n
    unsigned int v3;  // [bp+0x8], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            while (true)\n
            {\n
                do\n
                {\n
                    cgc_cromu_puts(\"1. Change active filter count\");\n
                    cgc_cromu_puts(\"2. Return to previous menu\");\n
                    cgc_cromu_printf(\"Selection: \", a1, a2, a3, a4);\n
                    a1 = 10;\n
                    a2 = 3;\n
                    v3 = cgc_read_until(&v3, 10, 3);\n
                    if (v3 == -1)\n
                        cgc__terminate(\"Selection: \");\n
                } while (v3 != 1);\n
                v0 = *(&v3 + 4);\n
                if (v0 == 49)\n
                {\n
                    cgc_cromu_printf(\"Which Filter 0-$d: \", cgc_NumFilters - 1, 3, a3, a4);\n
                    a1 = 10;\n
                    a2 = 3;\n
                    v3 = cgc_read_until(&v3, 10, 3);\n
                    if (v3 == -1)\n
                        cgc__terminate(\"Which Filter 0-$d: \");\n
                    if (v3 == 1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v4 = v0;\n
                    tmp_8 = v4;\n
                    if (tmp_8 == 50)\n
                        return v4 - 50;\n
LABEL_4059b0:\n
                }\n
            }\n
            v2 = cgc_cromu_atoi(&v3);\n
        } while (v2 > cgc_NumAsp - 1);\n
        a3 = v2 * 280;\n
        cgc_cromu_printf(\"How many filters (0-$d): \", (&cgc_Filter)[89 + a3], 3, a3, a4);\n
        a1 = 10;\n
        a2 = 7;\n
        v3 = cgc_read_until(&v3, 10, 7);\n
        if (v3 == -1)\n
            cgc__terminate(\"How many filters (0-$d): \");\n
        v1 = cgc_cromu_atoi(&v3);\n
        if (v1 < 0)\n
        {\n
LABEL_405981:\n
        }\n
        else\n
        {\n
            a2 = v2 * 280;\n
            a3 = (&cgc_Filter)[89 + a2];\n
            if (!(v1 <= a3))\n
                goto LABEL_405981;\n
            cgc_ChangeNumActiveFilters(&(&cgc_Filter)[280 * v2], v1);\n
            goto LABEL_4059b0;\n
        }\n
    }\n
}\n
", "4217269:sub_4059b5": null, "4217280:cgc_PrintDisinfectionMenu": "extern char cgc_Disinfection;\n
extern char cgc_NumDisinfection;\n
\n
long long cgc_PrintDisinfectionMenu(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp+0x4]\n
    int tmp_10;  // tmp #10\n
    unsigned long v1;  // [bp+0x8]\n
    char v2;  // [bp+0x17]\n
    unsigned int v3;  // [bp+0x18]\n
    char v4;  // [bp+0x1f]\n
    unsigned long long v5;  // rax\n
    unsigned long v7;  // xmm0lq, Other Possible Types: unsigned long long\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            while (true)\n
            {\n
                do\n
                {\n
                    cgc_cromu_puts(\"1. Change chlorine rate\");\n
                    cgc_cromu_puts(\"2. Return to previous menu\");\n
                    cgc_cromu_printf(\"Selection: \", a1, a2, a3, a4);\n
                    a1 = 10;\n
                    a2 = 3;\n
                    v3 = cgc_read_until(&v4, 10, 3);\n
                    if (v3 == -1)\n
                        cgc__terminate(\"Selection: \");\n
                } while (v3 != 1);\n
                v0 = v4;\n
                if (v0 == 49)\n
                {\n
                    cgc_cromu_printf(\"Which Disinfection system 0-$d: \", cgc_NumDisinfection - 1, 3, a3, a4);\n
                    a1 = 10;\n
                    a2 = 3;\n
                    v3 = cgc_read_until(&v4, 10, 3);\n
                    if (v3 == -1)\n
                        cgc__terminate(\"Which Disinfection system 0-$d: \");\n
                    if (v3 == 1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v5 = v0;\n
                    tmp_10 = v5;\n
                    if (tmp_10 == 50)\n
                        return v5 - 50;\n
LABEL_405b79:\n
                }\n
            }\n
            v2 = cgc_cromu_atoi(&v4);\n
            a3 = cgc_NumDisinfection - 1;\n
        } while (v2 > a3);\n
        cgc_cromu_printf(\"New chlorine rate (0-100): \", 10, 3, a3, a4);\n
        a1 = 10;\n
        a2 = 8;\n
        v3 = cgc_read_until(&v4, 10, 8);\n
        if (v3 == -1)\n
            cgc__terminate(\"New chlorine rate (0-100): \");\n
        cgc_cromu_atof(&v4);\n
        v1 = v7;\n
        if ((((CmpF(0, v1) & 69) | ((CmpF(0, v1) & 69) >> 6)) & 1) != 1)\n
        {\n
LABEL_405b49:\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            if (!(((CmpF(v7, 0x4059000000000000) & 69 | (CmpF(v7, 0x4059000000000000) & 69) >> 6) & 1) == 1))\n
                goto LABEL_405b49;\n
            cgc_ChangeChlorineRate(&(&cgc_Disinfection)[280 * v2]);\n
            goto LABEL_405b79;\n
        }\n
    }\n
}\n
", "4217726:sub_405b7e": null, "4217728:cgc_PrintRenameMenu": "extern char cgc_Asp;\n
extern char cgc_Disinfection;\n
extern char cgc_Filter;\n
extern char cgc_NumAsp;\n
extern char cgc_NumFilters;\n
extern char g_40a0e8;\n
extern unsigned int g_40d771;\n
extern unsigned int g_40f891;\n
extern unsigned int g_40ff29;\n
extern unsigned int g_410041;\n
extern unsigned int g_4106d9;\n
extern unsigned int g_410d69;\n
extern unsigned int g_410e81;\n
\n
long long cgc_PrintRenameMenu(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int *v0;  // [bp-0x118]\n
    char v1;  // [bp-0x10b]\n
    char v2;  // [bp-0x109]\n
    char v3;  // [bp-0x108]\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            cgc_cromu_puts(\"1. Influent\");\n
            cgc_cromu_puts(\"2. Headworks\");\n
            cgc_cromu_puts(\"3. ASPs\");\n
            cgc_cromu_puts(\"4. Filters\");\n
            cgc_cromu_puts(\"5. Disinfections\");\n
            cgc_cromu_puts(\"6. Effluent\");\n
            cgc_cromu_puts(\"7. Valves\");\n
            cgc_cromu_puts(\"8. Return to previous menu\");\n
            cgc_cromu_printf(\"Selection: \", a1, a2, a3, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == -1)\n
                cgc__terminate(\"Selection: \");\n
        } while (v2 != 1);\n
        v0 = v3 - 49;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_cromu_printf(\"New Influent name: \", 10, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New Influent name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&g_410d69, &v3, a2);\n
            goto LABEL_4062f7;\n
        case 1:\n
            cgc_cromu_printf(\"New Headworks name: \", 10, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New Headworks name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&g_4106d9, &v3, a2);\n
            goto LABEL_4062f7;\n
        case 2:\n
            cgc_cromu_printf(\"Which ASP 0-$d: \", cgc_NumAsp - 1, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == -1)\n
                cgc__terminate(\"Which ASP 0-$d: \");\n
            if (!(v2 == 1))\n
                continue;\n
            v1 = cgc_cromu_atoi(&v3);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v1 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New ASP$d name: \", v1, 3, a3, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New ASP$d name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&(&cgc_Asp)[280 * v1 + 1], &v3, a2);\n
            goto LABEL_4062f7;\n
        case 3:\n
            cgc_cromu_printf(\"Which Filter 0-$d: \", cgc_NumFilters - 1, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == -1)\n
                cgc__terminate(\"Which Filter 0-$d: \");\n
            if (!(v2 == 1))\n
                continue;\n
            v1 = cgc_cromu_atoi(&v3);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v1 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New Filter$d name: \", v1, 3, a3, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New Filter$d name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&(&cgc_Filter)[280 * v1 + 1], &v3, a2);\n
            goto LABEL_4062f7;\n
        case 4:\n
            cgc_cromu_printf(\"Which Disinfection system 0-$d: \", cgc_NumAsp - 1, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == -1)\n
                cgc__terminate(\"Which Disinfection system 0-$d: \");\n
            if (!(v2 == 1))\n
                continue;\n
            v1 = cgc_cromu_atoi(&v3);\n
            a3 = cgc_NumAsp - 1;\n
            if (!(v1 <= a3))\n
                continue;\n
            cgc_cromu_printf(\"New Disinfection$d name: \", v1, 3, a3, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New Disinfection$d name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&(&cgc_Disinfection)[280 * v1 + 1], &v3, a2);\n
            goto LABEL_4062f7;\n
        case 5:\n
            cgc_cromu_printf(\"New Effluent name: \", 10, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            v2 = cgc_read_until(&v3, 10, 31);\n
            if (v2 == -1)\n
                cgc__terminate(\"New Effluent name: \");\n
            a2 = v2 + 1;\n
            cgc_strncpy(&g_40d771, &v3, a2);\n
            goto LABEL_4062f7;\n
        case 6:\n
            cgc_cromu_puts(\"1. V1\");\n
            cgc_cromu_puts(\"2. V2\");\n
            cgc_cromu_puts(\"3. V3\");\n
            cgc_cromu_puts(\"4. V4\");\n
            cgc_cromu_printf(\"Which valve: \", 10, 3, &g_40a0e8, a4);\n
            a1 = 10;\n
            a2 = 3;\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == -1)\n
                cgc__terminate(\"Which valve: \");\n
            if (!(v2 == 1))\n
                continue;\n
            v1 = cgc_cromu_atoi(&v3);\n
            if (v1 == 1)\n
            {\n
                cgc_cromu_printf(\"New V1 name: \", 10, 3, &g_40a0e8, a4);\n
                a1 = 10;\n
                v2 = cgc_read_until(&v3, 10, 31);\n
                if (v2 == -1)\n
                    cgc__terminate(\"New V1 name: \");\n
                a2 = v2 + 1;\n
                cgc_strncpy(&g_410041, &v3, a2);\n
                break;\n
            }\n
            if (v1 == 2)\n
            {\n
                cgc_cromu_printf(\"New V2 name: \", 10, 3, &g_40a0e8, a4);\n
                a1 = 10;\n
                v2 = cgc_read_until(&v3, 10, 31);\n
                if (v2 == -1)\n
                    cgc__terminate(\"New V2 name: \");\n
                a2 = v2 + 1;\n
                cgc_strncpy(&g_40ff29, &v3, a2);\n
                goto LABEL_4062d4;\n
            }\n
            if (v1 == 3)\n
            {\n
                cgc_cromu_printf(\"New V3 name: \", 10, 3, &g_40a0e8, a4);\n
                a1 = 10;\n
                v2 = cgc_read_until(&v3, 10, 31);\n
                if (v2 == -1)\n
                    cgc__terminate(\"New V3 name: \");\n
                a2 = v2 + 1;\n
                cgc_strncpy(&g_40f891, &v3, a2);\n
                goto LABEL_4062d4;\n
            }\n
            if (v1 == 4)\n
            {\n
                cgc_cromu_printf(\"New V4 name: \", 10, 3, &g_40a0e8, a4);\n
                a1 = 10;\n
                a2 = 255;\n
                if (cgc_read_until(&v3, 10, 255) == -1)\n
                    cgc__terminate(\"New V4 name: \");\n
                v2 = cgc_strlen(&v3);\n
                if (v2 < 31)\n
                    cgc_strcpy(&g_410e81, &v3);\n
LABEL_4062d4:\n
                break;\n
            }\n
        case 7:\n
            return &(&g_40a0e8)[*((&g_40a0e8 + 0x4 * v0))];\n
        default:\n
LABEL_4062f7:\n
            continue;\n
        }\n
    }\n
}\n
", "4219644:sub_4062fc": null, "4219648:cgc_PrintValveMenu": "extern unsigned long long cgc_AspOutputValve;\n
extern unsigned long long cgc_DisinfectionOutputValve;\n
extern unsigned long long cgc_FilterOutputValve;\n
extern unsigned long long cgc_HeadworksOutputValve;\n
extern unsigned int g_40a108;\n
\n
long long cgc_PrintValveMenu(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp+0x0]\n
    char v2;  // [bp+0xf]\n
    unsigned long v3;  // [bp+0x10]\n
    char v4;  // [bp+0x1f]\n
    unsigned int v5;  // [bp+0x20]\n
    char v6;  // [bp+0x26]\n
    unsigned long v7;  // xmm0lq\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    cgc_cromu_puts(\"1. Change valve V1 output percentage\");\n
                    cgc_cromu_puts(\"2. Change valve V2 output percentage\");\n
                    cgc_cromu_puts(\"3. Change valve V3 output percentage\");\n
                    cgc_cromu_puts(\"4. Change valve V4 output percentage\");\n
                    cgc_cromu_puts(\"5. Return to previous menu\");\n
                    cgc_cromu_printf(\"Selection: \", a1, a2, &g_40a108, a4);\n
                    a1 = 10;\n
                    a2 = 3;\n
                    v5 = cgc_read_until(&v6, 10, 3);\n
                    if (v5 == -1)\n
                        cgc__terminate(\"Selection: \");\n
                } while (v5 != 1);\n
                v2 = v6;\n
                if (v2 == 53)\n
                    return v2;\n
                cgc_cromu_printf(\"Valve Output: \", 10, 3, &g_40a108, a4);\n
                a1 = 10;\n
                a2 = 3;\n
                v5 = cgc_read_until(&v6, 10, 3);\n
                if (v5 == -1)\n
                    cgc__terminate(\"Valve Output: \");\n
            } while (v5 != 1);\n
            v4 = v6 - 48;\n
            cgc_cromu_printf(\"Percent Open (0.00-100.00): \", 10, 3, &g_40a108, a4);\n
            a1 = 10;\n
            a2 = 8;\n
            v5 = cgc_read_until(&v6, 10, 8);\n
            if (v5 == -1)\n
                cgc__terminate(\"Percent Open (0.00-100.00): \");\n
        } while (v5 > 6);\n
        cgc_cromu_atof(&v6);\n
        v3 = v7;\n
        v0 = v2 - 49;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_SetValveOutput(&cgc_HeadworksOutputValve, v4);\n
            break;\n
        case 1:\n
            cgc_SetValveOutput(&cgc_AspOutputValve, v4);\n
            break;\n
        case 2:\n
            cgc_SetValveOutput(&cgc_FilterOutputValve, v4);\n
            break;\n
        case 3:\n
            cgc_SetValveOutput(&cgc_DisinfectionOutputValve, v4);\n
        }\n
    }\n
}\n
", "4220157:sub_4064fd": null, "4220160:cgc_PrintSystemBanner": "extern unsigned long long g_40b417;\n
\n
long long cgc_PrintSystemBanner()\n
{\n
    cgc_cromu_puts(\"Welcome to the Wastewater Treatement Plant Simulator\");\n
    cgc_cromu_puts(\"###################################################\");\n
    cgc_cromu_puts(\"Your job is to take the plant described in the schematic above and make potable water.\");\n
    cgc_cromu_puts(\"The simulation starts with a random plant status.\");\n
    return cgc_cromu_puts(&g_40b417);\n
}\n
", "4220226:sub_406542": null, "4220240:cgc_PrintMenu": "extern char cgc_SimStepCount;\n
extern char g_40a118;\n
\n
long long cgc_PrintMenu(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0xc]\n
    char v3;  // [bp+0x13]\n
    char v4;  // [bp+0x17]\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            cgc_cromu_puts(\"Wastewater Treatment Plant Simulation\");\n
            cgc_cromu_printf(\"Simulation Hour $d\\n
\", cgc_SimStepCount, 4, &g_40a118, a4);\n
            cgc_cromu_puts(\"1. Print plant schematic\");\n
            cgc_cromu_puts(\"2. Print plant status\");\n
            cgc_cromu_puts(\"3. Control Activated Sludge Process (ASP)\");\n
            cgc_cromu_puts(\"4. Control Filters\");\n
            cgc_cromu_puts(\"5. Control Disinfection\");\n
            cgc_cromu_puts(\"6. Control Valves\");\n
            cgc_cromu_puts(\"7. Rename System\");\n
            cgc_cromu_puts(\"8. Run Simulation Step\");\n
            cgc_cromu_puts(\"9. Exit\");\n
            cgc_cromu_printf(\"Selection: \", cgc_SimStepCount, 4, &g_40a118, a4);\n
            v2 = cgc_read_until(&v3, 10, 4);\n
            if (v2 == -1)\n
                cgc__terminate(\"Selection: \");\n
        } while (v2 != 1);\n
        v0 = v3 - 49;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_PrintPlantSchematic();\n
            goto LABEL_4066bf;\n
        case 1:\n
            cgc_PrintPlantStatus();\n
            goto LABEL_4066bf;\n
        case 2:\n
            cgc_PrintAspMenu(\"Selection: \", 10, 4, &g_40a118, a4);\n
            goto LABEL_4066bf;\n
        case 3:\n
            cgc_PrintFilterMenu(\"Selection: \", 10, 4, 4235544, a4);\n
            goto LABEL_4066bf;\n
        case 4:\n
            cgc_PrintDisinfectionMenu(\"Selection: \", 10, 4, &g_40a118, a4);\n
            goto LABEL_4066bf;\n
        case 5:\n
            cgc_PrintValveMenu(\"Selection: \", 10, 4, &g_40a118, a4);\n
            goto LABEL_4066bf;\n
        case 6:\n
            cgc_PrintRenameMenu(\"Selection: \", 10, 4, &g_40a118, a4);\n
            goto LABEL_4066bf;\n
        case 7:\n
            v4 = 1;\n
            return v4;\n
        case 8:\n
            v4 = 0;\n
            return v4;\n
        default:\n
LABEL_4066bf:\n
            break;\n
        }\n
    }\n
}\n
", "4220622:sub_4066ce": null, "4220624:cgc_RandomInfluent": "extern char g_410e08;\n
extern unsigned long long g_410e10;\n
extern unsigned long long g_410e18;\n
extern unsigned long long g_410e20;\n
extern unsigned long long g_410e28;\n
\n
long long cgc_RandomInfluent()\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_15;  // tmp #15\n
    int tmp_14;  // tmp #14\n
\n
    cgc_random_in_range(9, 30);\n
    tmp_13 = DivV(tmp_15, tmp_14);\n
    *(&g_410e08) = tmp_13;\n
    g_410e10 = cgc_random_in_range(1900, 4000);\n
    g_410e18 = cgc_random_in_range(2000, 5000);\n
    g_410e20 = cgc_random_in_range(490, 750);\n
    g_410e28 = cgc_random_in_range(75, 150);\n
    return g_410e28;\n
}\n
", "4220792:sub_406778": null, "4220800:cgc_InitInfluent": "extern char cgc_Headworks;\n
extern char cgc_Influent;\n
extern unsigned int g_410d69;\n
extern unsigned long long g_410de0;\n
extern unsigned long long g_410e08;\n
extern unsigned long long g_410e10;\n
extern unsigned long long g_410e18;\n
extern unsigned long long g_410e20;\n
extern unsigned long long g_410e28;\n
\n
long long cgc_InitInfluent()\n
{\n
    cgc_bzero(&cgc_Influent, 280);\n
    cgc_Influent = 0;\n
    cgc_strncpy(&g_410d69, \"Influent\", 31);\n
    g_410e08 = 4609884578576439706;\n
    g_410e10 = 0x40a4f00000000000;\n
    g_410e18 = 0x40a9c80000000000;\n
    g_410e20 = 0x4080e00000000000;\n
    g_410e28 = 0x4057800000000000;\n
    g_410de0 = &cgc_Headworks;\n
    return &cgc_Headworks;\n
}\n
", "4220952:sub_406818": null, "4220960:cgc_GetValvePctFlow": "long long cgc_GetValvePctFlow(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_22;  // tmp #22\n
    int tmp_23;  // tmp #23\n
    int tmp_20;  // tmp #20\n
    void* v1;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp+0x8]\n
    char v3;  // [bp+0xe]\n
    char v4;  // [bp+0x10]\n
    void* v5;  // [bp+0x18], Other Possible Types: unsigned long\n
    unsigned long v6;  // al, Other Possible Types: unsigned long long, char\n
    unsigned long long v7;  // xmm0lq\n
\n
    v6 = a1;\n
    v0 = a1;\n
    if (a0)\n
    {\n
        v6 = *(&v2 + 7);\n
        if (v6 <= 5)\n
        {\n
            v6 = *(*(&v4));\n
            if (v6 == 5)\n
            {\n
                v6 = *(&v4);\n
                if (*((v6 + (*(&v2 + 7) << 3) + 120)))\n
                {\n
                    v1 = 0;\n
                    v3 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v3;\n
                        if (v6 >= 5)\n
                            break;\n
                        if (*((*(&v4) + (v3 << 3) + 120)))\n
                            s_0 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=((Load(addr=stack_base+16, size=8, endness=Iend_LE) + (Conv(8->64, Load(addr=stack_base+14, size=1, endness=Iend_LE)) * 0x8<64>)) + 0xf0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+0, size=8, endness=Iend_LE))))<8>\n
                        v3 += 1;\n
                    }\n
                    v7 = v1;\n
                    if ((((CmpF(v7, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                    {\n
                        v5 = 0;\n
                        return v3;\n
                    }\n
                    v6 = *(&v4);\n
                    tmp_22 = DivV(tmp_23, tmp_20);\n
                    *(&v5) = tmp_22;\n
                    return v6;\n
                }\n
            }\n
            v5 = 0;\n
            return v6;\n
        }\n
    }\n
    v5 = 0;\n
    return v6;\n
}\n
", "4221254:sub_406946": null, "4221264:cgc_SetValveOutput": "long long cgc_SetValveOutput(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    char v1;  // [bp-0x11]\n
    char v2;  // [bp+0x0]\n
    unsigned long v3;  // [bp+0x8]\n
    char v4;  // [bp+0x10]\n
    unsigned long long v5;  // al, Other Possible Types: unsigned long, char\n
    unsigned long v6;  // xmm0lq\n
\n
    v5 = a1;\n
    v1 = a1;\n
    v0 = v6;\n
    if (a0)\n
    {\n
        v5 = *(&v3 + 7);\n
        if (v5 <= 5 && (((CmpF(*(&v2), 0x4059000000000000) & 69) | ((CmpF(*(&v2), 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
        {\n
            v5 = *(*(&v4));\n
            if (v5 != 5)\n
                return v5;\n
            v5 = *(&v4);\n
            if (*((v5 + (*(&v3 + 7) << 3) + 120)))\n
            {\n
                v5 = *(&v4);\n
                *((v5 + *(&v3 + 7) * 8 + 240)) = *(&v2);\n
                return v5;\n
            }\n
        }\n
    }\n
    return v5;\n
}\n
", "4221420:sub_4069ec": null, "4221424:cgc_SetSystemName": "long long cgc_SetSystemName(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    char v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8]\n
\n
    v0 = a1;\n
    return cgc_strncpy(v2 + 1, *(&v1), 31);\n
}\n
", "4221490:sub_406a32": null, "4221504:cgc_ChangeAerationPercent": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
extern char cgc_Asp;\n
\n
long long cgc_ChangeAerationPercent(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v3;  // [bp+0x8]\n
    unsigned long v4;  // xmm0lq\n
    unsigned long v5;  // rax\n
\n
    v1 = a0;\n
    v0 = v4;\n
    if (cgc_Asp == 2 && (((CmpF(0, *(&v2)) & 69) | ((CmpF(0, *(&v2)) & 69) >> 6)) & 1) == 1 && (((CmpF(*(&v2), 0x4059000000000000) & 69) | ((CmpF(*(&v2), 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
    {\n
        v5 = v3;\n
        *((v5 + 48)) = *(&v2);\n
        return v5;\n
    }\n
    return cgc_Asp;\n
}\n
", "4221604:sub_406aa4": null, "4221616:cgc_ChangeGlycerinRate": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned long long field_40;\n
} struct_0;\n
\n
extern char cgc_Asp;\n
\n
long long cgc_ChangeGlycerinRate(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v3;  // [bp+0x8]\n
    unsigned long v4;  // xmm0lq\n
    unsigned long v5;  // rax\n
\n
    v1 = a0;\n
    v0 = v4;\n
    if (cgc_Asp == 2 && (((CmpF(0, *(&v2)) & 69) | ((CmpF(0, *(&v2)) & 69) >> 6)) & 1) == 1 && (((CmpF(*(&v2), 0x4059000000000000) & 69) | ((CmpF(*(&v2), 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
    {\n
        v5 = v3;\n
        *((v5 + 64)) = *(&v2);\n
        return v5;\n
    }\n
    return cgc_Asp;\n
}\n
", "4221716:sub_406b14": null, "4221728:cgc_ChangeAlumRate": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned long long field_48;\n
} struct_0;\n
\n
extern char cgc_Asp;\n
\n
long long cgc_ChangeAlumRate(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    char v2;  // [bp+0x0]\n
    struct_0 *v3;  // [bp+0x8]\n
    unsigned long v4;  // xmm0lq\n
    unsigned long v5;  // rax\n
\n
    v1 = a0;\n
    v0 = v4;\n
    if (cgc_Asp == 2 && (((CmpF(0, *(&v2)) & 69) | ((CmpF(0, *(&v2)) & 69) >> 6)) & 1) == 1 && (((CmpF(*(&v2), 0x4059000000000000) & 69) | ((CmpF(*(&v2), 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
    {\n
        v5 = v3;\n
        *((v5 + 72)) = *(&v2);\n
        return v5;\n
    }\n
    return cgc_Asp;\n
}\n
", "4221828:sub_406b84": null, "4221840:cgc_ChangeChlorineRate": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[95];\n
    unsigned long long field_60;\n
} struct_0;\n
\n
long long cgc_ChangeChlorineRate(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    char v1;  // [bp+0x0]\n
    struct_0 *v2;  // [bp+0x8]\n
    unsigned long v3;  // xmm0lq\n
    struct_0 *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v3;\n
    if (a0)\n
    {\n
        v4 = v2->field_0;\n
        if (v4 == 4 && (((CmpF(0, *(&v1)) & 69) | ((CmpF(0, *(&v1)) & 69) >> 6)) & 1) == 1 && (((CmpF(*(&v1), 0x4059000000000000) & 69) | ((CmpF(*(&v1), 0x4059000000000000) & 69) >> 6)) & 1) == 1)\n
        {\n
            v4 = v2;\n
            *((v4 + 96)) = *(&v1);\n
            return v4;\n
        }\n
    }\n
    return v4;\n
}\n
", "4221953:sub_406c01": null, "4221968:cgc_ChangeNumActiveFilters": "long long cgc_ChangeNumActiveFilters(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x11]\n
    char v1;  // [bp+0x7]\n
    char v2[90];  // [bp+0x8]\n
    unsigned long long v3;  // al, Other Possible Types: unsigned long, char\n
\n
    v3 = a1;\n
    v0 = a1;\n
    if (a0)\n
    {\n
        v3 = v2[0];\n
        if (v3 == 3)\n
        {\n
            v3 = v1;\n
            if (v3 >= 0)\n
            {\n
                v3 = v1;\n
                if (v3 <= v2[89])\n
                {\n
                    v3 = v2;\n
                    *((v3 + 88)) = v1;\n
                    return v3;\n
                }\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4222079:sub_406c7f": null, "4222080:cgc_InitHeadworks": "extern char cgc_Headworks;\n
extern char cgc_HeadworksOutputValve;\n
extern char cgc_Influent;\n
extern unsigned int g_4106d9;\n
extern unsigned long long g_410700;\n
extern unsigned long long g_410750;\n
extern unsigned long long g_4107a0;\n
\n
long long cgc_InitHeadworks()\n
{\n
    cgc_bzero(&cgc_Headworks, 280);\n
    cgc_Headworks = 1;\n
    cgc_strncpy(&g_4106d9, \"Headworks\", 31);\n
    g_4107a0 = &cgc_Influent;\n
    g_410750 = &cgc_HeadworksOutputValve;\n
    g_410700 = 0x403e000000000000;\n
    return &cgc_HeadworksOutputValve;\n
}\n
", "4222182:sub_406ce6": null, "4222192:cgc_InitHeadworksOutputValve": "extern char cgc_Asp;\n
extern char cgc_Headworks;\n
extern char cgc_HeadworksOutputValve;\n
extern char cgc_NumAsp;\n
extern unsigned int g_410041;\n
extern unsigned long long g_410108;\n
\n
long long cgc_InitHeadworksOutputValve()\n
{\n
    char v0;  // [bp-0x9]\n
    int tmp_48;  // tmp #48\n
    int tmp_50;  // tmp #50\n
    int tmp_49;  // tmp #49\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_HeadworksOutputValve, 280);\n
    cgc_HeadworksOutputValve = 5;\n
    cgc_strncpy(&g_410041, \"V1\", 31);\n
    g_410108 = &cgc_Headworks;\n
    for (v0 = 0; v0 < cgc_NumAsp; v0 += 1)\n
    {\n
        *(&(&cgc_HeadworksOutputValve)[120 + 8 * v0]) = &(&cgc_Asp)[280 * v0];\n
        tmp_48 = DivV(tmp_50, tmp_49);\n
        *(&(&cgc_HeadworksOutputValve)[240 + 8 * v0]) = tmp_48;\n
    }\n
    return v0;\n
}\n
", "4222392:sub_406db8": null, "4222400:cgc_InitAsp": "extern char cgc_Asp;\n
extern char cgc_AspOutputValve;\n
extern char cgc_HeadworksOutputValve;\n
extern char cgc_NumAsp;\n
\n
long long cgc_InitAsp(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x9]\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
    unsigned long v4;  // rcx\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_Asp, 1400);\n
    for (v0 = 0; v0 < cgc_NumAsp; v0 += 1)\n
    {\n
        v4 = v0 * 280;\n
        (&cgc_Asp)[v4] = 2;\n
        cgc_cromu_sprintf(&(&cgc_Asp)[280 * v0 + 1], \"Asp$d\", v0, v4, a4);\n
        *(&(&cgc_Asp)[200 + 280 * v0]) = &cgc_HeadworksOutputValve;\n
        *(&(&cgc_Asp)[120 + 280 * v0]) = &cgc_AspOutputValve;\n
        *(&(&cgc_Asp)[48 + 280 * v0]) = 0x4049000000000000;\n
        *(&(&cgc_Asp)[56 + 280 * v0]) = 0x40b2c00000000000;\n
        *(&(&cgc_Asp)[64 + 280 * v0]) = 0x4010000000000000;\n
        *(&(&cgc_Asp)[72 + 280 * v0]) = 0x4034000000000000;\n
    }\n
    return v0;\n
}\n
", "4222751:sub_406f1f": null, "4222752:cgc_InitAspOutputValve": "extern char cgc_Asp;\n
extern char cgc_AspOutputValve;\n
extern char cgc_Filter;\n
extern char cgc_NumAsp;\n
extern char cgc_NumFilters;\n
extern unsigned int g_40ff29;\n
\n
long long cgc_InitAspOutputValve()\n
{\n
    char v0;  // [bp-0x9]\n
    int tmp_48;  // tmp #48\n
    int tmp_50;  // tmp #50\n
    int tmp_49;  // tmp #49\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_AspOutputValve, 280);\n
    cgc_AspOutputValve = 5;\n
    cgc_strncpy(&g_40ff29, \"V2\", 31);\n
    for (v0 = 0; v0 < cgc_NumAsp; v0 += 1)\n
    {\n
        *(&(&cgc_AspOutputValve)[200 + 8 * v0]) = &(&cgc_Asp)[280 * v0];\n
    }\n
    for (v0 = 0; v0 < cgc_NumFilters; v0 += 1)\n
    {\n
        *(&(&cgc_AspOutputValve)[120 + 8 * v0]) = &(&cgc_Filter)[280 * v0];\n
        tmp_48 = DivV(tmp_50, tmp_49);\n
        *(&(&cgc_AspOutputValve)[240 + 8 * v0]) = tmp_48;\n
    }\n
    return v0;\n
}\n
", "4223016:sub_407028": null, "4223024:cgc_InitFilters": "extern char cgc_AspOutputValve;\n
extern char cgc_Filter;\n
extern char cgc_FilterOutputValve;\n
extern char cgc_NumFilters;\n
extern char g_40fa08;\n
extern char g_40fa09;\n
extern char g_40fb20;\n
extern char g_40fb21;\n
extern char g_40fc38;\n
extern char g_40fc39;\n
\n
long long cgc_InitFilters(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    char v1;  // [bp+0xf]\n
    unsigned long v2;  // rcx\n
\n
    cgc_bzero(&cgc_Filter, 1400);\n
    for (v1 = 0; v1 < cgc_NumFilters; v1 += 1)\n
    {\n
        v2 = v1 * 280;\n
        (&cgc_Filter)[v2] = 3;\n
        cgc_cromu_sprintf(&(&cgc_Filter)[280 * v1 + 1], \"Filter$d\", v1, v2, a4);\n
        *(&(&cgc_Filter)[200 + 280 * v1]) = &cgc_AspOutputValve;\n
        *(&(&cgc_Filter)[120 + 280 * v1]) = &cgc_FilterOutputValve;\n
    }\n
    g_40fa09 = 2;\n
    g_40fa08 = 1;\n
    g_40fb21 = 4;\n
    g_40fb20 = 2;\n
    g_40fc39 = 4;\n
    g_40fc38 = 2;\n
    return v1;\n
}\n
", "4223285:sub_407135": null, "4223296:cgc_InitFilterOutputValve": "extern char cgc_Disinfection;\n
extern char cgc_Filter;\n
extern char cgc_FilterOutputValve;\n
extern char cgc_NumDisinfection;\n
extern char cgc_NumFilters;\n
extern unsigned int g_40f891;\n
\n
long long cgc_InitFilterOutputValve()\n
{\n
    char v0;  // [bp-0x9]\n
    int tmp_48;  // tmp #48\n
    int tmp_50;  // tmp #50\n
    int tmp_49;  // tmp #49\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_FilterOutputValve, 280);\n
    cgc_FilterOutputValve = 5;\n
    cgc_strncpy(&g_40f891, \"V3\", 31);\n
    for (v0 = 0; v0 < cgc_NumFilters; v0 += 1)\n
    {\n
        *(&(&cgc_FilterOutputValve)[200 + 8 * v0]) = &(&cgc_Filter)[280 * v0];\n
    }\n
    for (v0 = 0; v0 < cgc_NumDisinfection; v0 += 1)\n
    {\n
        *(&(&cgc_FilterOutputValve)[120 + 8 * v0]) = &(&cgc_Disinfection)[280 * v0];\n
        tmp_48 = DivV(tmp_50, tmp_49);\n
        *(&(&cgc_FilterOutputValve)[240 + 8 * v0]) = tmp_48;\n
    }\n
    return v0;\n
}\n
", "4223560:sub_407248": null, "4223568:cgc_InitDisinfection": "extern char cgc_Disinfection;\n
extern char cgc_DisinfectionOutputValve;\n
extern char cgc_FilterOutputValve;\n
extern char cgc_NumDisinfection;\n
\n
long long cgc_InitDisinfection(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x9]\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
    unsigned long v4;  // rcx\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_Disinfection, 1400);\n
    for (v0 = 0; v0 < cgc_NumDisinfection; v0 += 1)\n
    {\n
        v4 = v0 * 280;\n
        (&cgc_Disinfection)[v4] = 4;\n
        cgc_cromu_sprintf(&(&cgc_Disinfection)[280 * v0 + 1], \"Disinfection$d\", v0, v4, a4);\n
        *(&(&cgc_Disinfection)[200 + 280 * v0]) = &cgc_FilterOutputValve;\n
        *(&(&cgc_Disinfection)[120 + 280 * v0]) = &cgc_DisinfectionOutputValve;\n
        *(&(&cgc_Disinfection)[96 + 280 * v0]) = 0x3ff0000000000000;\n
    }\n
    return v0;\n
}\n
", "4223811:sub_407343": null, "4223824:cgc_InitDisinfectionOutputValve": "extern char cgc_Disinfection;\n
extern char cgc_DisinfectionOutputValve;\n
extern char cgc_Effluent;\n
extern char cgc_NumDisinfection;\n
extern unsigned int g_410e81;\n
extern unsigned long long g_410ef8;\n
extern unsigned long long g_410f70;\n
\n
long long cgc_InitDisinfectionOutputValve()\n
{\n
    char v0;  // [bp-0x9]\n
    char v1;  // [bp-0x8]\n
    unsigned long long v3;  // rbp\n
\n
    v3 = &v1;\n
    cgc_bzero(&cgc_DisinfectionOutputValve, 280);\n
    cgc_DisinfectionOutputValve = 5;\n
    cgc_strncpy(&g_410e81, \"V4\", 31);\n
    for (v0 = 0; v0 < cgc_NumDisinfection; v0 += 1)\n
    {\n
        *(&(&cgc_DisinfectionOutputValve)[200 + 8 * v0]) = &(&cgc_Disinfection)[280 * v0];\n
    }\n
    g_410ef8 = &cgc_Effluent;\n
    g_410f70 = 0x4059000000000000;\n
    return &cgc_Effluent;\n
}\n
", "4223998:sub_4073fe": null, "4224000:cgc_InitEffluent": "extern char cgc_DisinfectionOutputValve;\n
extern char cgc_Effluent;\n
extern unsigned int g_40d771;\n
extern unsigned long long g_40d838;\n
\n
long long cgc_InitEffluent()\n
{\n
    cgc_bzero(&cgc_Effluent, 280);\n
    cgc_Effluent = 6;\n
    cgc_strncpy(&g_40d771, \"Effluent\", 31);\n
    g_40d838 = &cgc_DisinfectionOutputValve;\n
    return &cgc_DisinfectionOutputValve;\n
}\n
", "4224072:sub_407448": null, "4224080:cgc_CheckEffluentQuality": "extern char g_40d7ca;\n
extern char g_40d7e0;\n
\n
long long cgc_CheckEffluentQuality()\n
{\n
    int tmp_41;  // tmp #41\n
    int tmp_43;  // tmp #43\n
    int tmp_42;  // tmp #42\n
    int tmp_53;  // tmp #53\n
    int tmp_55;  // tmp #55\n
    int tmp_54;  // tmp #54\n
    int tmp_65;  // tmp #65\n
    int tmp_67;  // tmp #67\n
    int tmp_66;  // tmp #66\n
    int tmp_77;  // tmp #77\n
    int tmp_79;  // tmp #79\n
    int tmp_78;  // tmp #78\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    char v4;  // [bp+0x0]\n
    unsigned long v5;  // [bp+0x8]\n
    char v6;  // [bp+0x10]\n
    unsigned long long v10;  // xmm0\n
    unsigned long long v11;  // rax\n
\n
    tmp_41 = DivV(tmp_43, tmp_42);\n
    *(&v3) = tmp_41;\n
    tmp_53 = DivV(tmp_55, tmp_54);\n
    *(&v2) = tmp_53;\n
    tmp_65 = DivV(tmp_67, tmp_66);\n
    *(&v1) = tmp_65;\n
    tmp_77 = DivV(tmp_79, tmp_78);\n
    v10 = tmp_77;\n
    v0 = v10;\n
    v10 = v3;\n
    if ((((CmpF(v10, 0x4014000000000000) & 69) | ((CmpF(v10, 0x4014000000000000) & 69) >> 6)) & 1) == 1)\n
    {\n
        v10 = *(&v6);\n
        if ((((CmpF(v10, 0x4014000000000000) & 69) | ((CmpF(v10, 0x4014000000000000) & 69) >> 6)) & 1) == 1)\n
        {\n
            v10 = v5;\n
            if ((((CmpF(v10, 0x4008000000000000) & 69) | ((CmpF(v10, 0x4008000000000000) & 69) >> 6)) & 1) == 1)\n
            {\n
                v10 = *(&v4);\n
                if ((((CmpF(v10, 0x3ff0000000000000) & 69) | ((CmpF(v10, 0x3ff0000000000000) & 69) >> 6)) & 1) == 1)\n
                {\n
                    v11 = g_40d7ca;\n
                    if (g_40d7ca)\n
                        return g_40d7ca;\n
                }\n
            }\n
        }\n
    }\n
    *(&v11) = g_40d7e0 + 1;\n
    g_40d7e0 = g_40d7e0 + 1;\n
    return v11;\n
}\n
", "4224357:sub_407565": null, "4224368:cgc_PrintPlantSchematic": "long long cgc_PrintPlantSchematic()\n
{\n
    cgc_cromu_puts(\"Plant Schematic\");\n
    cgc_cromu_puts(\"#####################################################################################################################################\");\n
    cgc_cromu_puts(\"                                         --------                -----------               -----------------                         \");\n
    cgc_cromu_puts(\"                                -------> | ASP1 | ------  -----> | Filter1 | -----  -----> | Disinfection1 | -----                   \");\n
    cgc_cromu_puts(\"                                |        --------      |  |      -----------     |  |      -----------------     |                   \");\n
    cgc_cromu_puts(\"                                |                      |  |                      |  |                            |                   \");\n
    cgc_cromu_puts(\"                                |                      |  |                      |  |                            |                   \");\n
    cgc_cromu_puts(\"                                0                      v  0                      v  0                            v                   \");\n
    cgc_cromu_puts(\"            -------------     ------     --------     ------     -----------    ------     -----------------    ------               \");\n
    cgc_cromu_puts(\"Influent -> | Headworks | --> | V1 | 1-> | ASP2 | --> | V2 | 1-> | Filter2 | -> | V3 | 1-> | Disinfection2 | -> | V4 | 0-> Effluent  \");\n
    cgc_cromu_puts(\"            -------------     ------     --------     ------     -----------    ------     -----------------    ------               \");\n
    cgc_cromu_puts(\"                                2                      ^  2                      ^  2                            ^                   \");\n
    cgc_cromu_puts(\"                                |                      |  |                      |  |                            |                   \");\n
    cgc_cromu_puts(\"                                |                      |  |                      |  |                            |                   \");\n
    cgc_cromu_puts(\"                                |        --------      |  |      -----------     |  |      -----------------     |                   \");\n
    cgc_cromu_puts(\"                                -------> | ASP3 | ------  -----> | Filter3 | -----  -----> | Disinfection3 | -----                   \");\n
    cgc_cromu_puts(\"                                         --------                -----------               -----------------                         \");\n
    return cgc_cromu_puts(\"#####################################################################################################################################\");\n
}\n
", "4224590:sub_40764e": null, "4224592:cgc_PrintPlantStatus": "long long cgc_PrintPlantStatus()\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v1;  // [bp+0x0]\n
    unsigned long v3;  // rax\n
\n
    v0 = v3;\n
    v1 = cgc_PrintPlantStatusBuf();\n
    return cgc_cromu_puts(v1);\n
}\n
", "4224624:cgc_PrintPlantStatusBuf": "extern char StatusBuf;\n
extern unsigned int g_40d771;\n
extern char g_40d7e0;\n
extern unsigned int g_40f891;\n
extern unsigned int g_40f9b1;\n
extern char g_40fa08;\n
extern unsigned int g_40fac9;\n
extern char g_40fb20;\n
extern unsigned int g_40fbe1;\n
extern char g_40fc38;\n
extern unsigned int g_40ff29;\n
extern unsigned int g_410041;\n
extern unsigned int g_410161;\n
extern unsigned int g_410279;\n
extern unsigned int g_410391;\n
extern unsigned int g_4106d9;\n
extern unsigned int g_4107f1;\n
extern unsigned int g_410909;\n
extern unsigned int g_410a21;\n
extern unsigned int g_410d69;\n
extern unsigned int g_410e81;\n
\n
long long cgc_PrintPlantStatusBuf(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
\n
    v0 = 0;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v0], \"Plant Status\\n
\", a2, a3, a4) + *(&v1);\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"#####################################################################################################################################\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Units\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Flow - MGD\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"CBOD, TSS, TN, TP - lbs/day\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Aeration, Glycerin_Rate, Alum_rate, OutputPct - percent\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Influent       |      Flow       CBOD        TSS         TN         TP\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|------------------------------------------------------\\n
\", a2, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f\\n
\", &g_410d69, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_410d69, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Headworks      |      Flow       CBOD        TSS         TN         TP\\n
\", &g_410d69, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|------------------------------------------------------\\n
\", &g_410d69, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f\\n
\", &g_4106d9, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_4106d9, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"ASPs           |      Flow       CBOD        TSS         TN         TP     Aeration     Glycerin_Rate    Alum_Rate\\n
\", &g_4106d9, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|--------------------------------------------------------------------------------------------------\\n
\", &g_4106d9, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f     $8.2f          $8.2f     $8.2f\\n
\", &g_410161, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f     $8.2f          $8.2f     $8.2f\\n
\", &g_410279, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f     $8.2f          $8.2f     $8.2f\\n
\", &g_410391, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_410391, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Filters        |      Flow       CBOD        TSS         TN         TP     Num_Active_Filters\\n
\", &g_410391, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|-----------------------------------------------------------------------------\\n
\", &g_410391, a3, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f               $8d\\n
\", &g_40f9b1, g_40fa08, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f               $8d\\n
\", &g_40fac9, g_40fb20, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f               $8d\\n
\", &g_40fbe1, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_40fbe1, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Disinfection   |      Flow       CBOD        TSS         TN         TP     Chlorine_Rate\\n
\", &g_40fbe1, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|------------------------------------------------------------------------\\n
\", &g_40fbe1, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f          $8.2f\\n
\", &g_4107f1, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f          $8.2f\\n
\", &g_410909, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f          $8.2f\\n
\", &g_410a21, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_410a21, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Effluent       |      Flow       CBOD        TSS         TN         TP          Quality_Failures\\n
\", &g_410a21, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|--------------------------------------------------------------------------------\\n
\", &g_410a21, g_40fc38, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |  $8.2f   $8.2f   $8.2f   $8.2f   $8.2f                        $2d\\n
\", &g_40d771, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_40d771, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"Valves         |    OutputPct[0]    OutputPct[1]    OutputPct[2]    OutputPct[3]    OutputPct[4]\\n
\", &g_40d771, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"---------------|--------------------------------------------------------------------------------\\n
\", &g_40d771, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |        $8.2f        $8.2f        $8.2f        $8.2f        $8.2f\\n
\", &g_410041, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |        $8.2f        $8.2f        $8.2f        $8.2f        $8.2f\\n
\", &g_40ff29, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |        $8.2f        $8.2f        $8.2f        $8.2f        $8.2f\\n
\", &g_40f891, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"$-14s |        $8.2f        $8.2f        $8.2f        $8.2f        $8.2f\\n
\", &g_410e81, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"#####################################################################################################################################\\n
\", &g_410e81, g_40d7e0, a4) + v1;\n
    v1 = cgc_cromu_sprintf(&(&StatusBuf)[v1], \"\\n
\", &g_410e81, g_40d7e0, a4) + v1;\n
    return &StatusBuf;\n
}\n
", "4227098:sub_40801a": null, "4227104:cgc_InitPlant": "long long cgc_InitPlant(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    cgc_InitInfluent();\n
    cgc_InitHeadworks();\n
    cgc_InitHeadworksOutputValve();\n
    cgc_InitAsp(a0, a1, a2, a3, a4);\n
    cgc_InitAspOutputValve();\n
    cgc_InitFilters(a0, a1, a2, a3, a4);\n
    cgc_InitFilterOutputValve();\n
    cgc_InitDisinfection(a0, a1, a2, a3, a4);\n
    cgc_InitDisinfectionOutputValve();\n
    return cgc_InitEffluent();\n
}\n
", "4227160:sub_408058": null, "4227168:main": "extern char cgc_SimStepCount;\n
extern char g_40d7e0;\n
extern struct_0 *rand_page;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // r9\n
\n
    v2 = 0;\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_seed_prng(rand_page->field_0);\n
    cgc_InitPlant(a0, a1, a2, a3, a4);\n
    cgc_RunSimStep(a0, a1, a2, a3, a4, v4);\n
    cgc_PrintPlantSchematic();\n
    cgc_PrintPlantStatus();\n
    cgc_PrintSystemBanner();\n
    while (cgc_SimStepCount < 254)\n
    {\n
        if (!cgc_PrintMenu(a0, a1, a2, a3, a4))\n
            break;\n
        if (!cgc_RunSimStep())\n
        {\n
            cgc_cromu_puts(\"A valve's output percentages don't total to at least 100%.  Can't run the simulation.\");\n
        }\n
        else\n
        {\n
            cgc_SimStepCount = cgc_SimStepCount + 1;\n
            cgc_CheckEffluentQuality();\n
            cgc_RandomInfluent();\n
        }\n
    }\n
    if (cgc_SimStepCount < 24)\n
    {\n
        cgc_cromu_puts(\"Ending simulation at less than 24 hours.\");\n
        return 0;\n
    }\n
    if (g_40d7e0 <= 5)\n
    {\n
        cgc_SimulateEffluent();\n
        cgc_cromu_puts(\"Congratulations!  You've successfully operated the plant for 24 hours.  You Win!\");\n
    }\n
    else\n
    {\n
        cgc_cromu_printf(\"There were $d hours with sub-standard water quality levels. You Failed!\\n
\", g_40d7e0, a2, a3, a4);\n
    }\n
    return 0;\n
}\n
", "4227438:sub_40816e": null, "4227440:cgc_FindValveOutput": "long long cgc_FindValveOutput(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    char v1;  // [bp+0x7]\n
    unsigned long v2;  // [bp+0x8]\n
    char v3;  // [bp+0x10]\n
    char v4;  // [bp+0x1f]\n
\n
    v0 = a1;\n
    if (a0 && *(*(&v3)) == 5 && v2)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= 5)\n
            {\n
                v4 = 255;\n
                return v4;\n
            }\n
            else if (*((*(&v3) + (v1 << 3) + 120)) != v2)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v4 = v1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = 255;\n
    return v4;\n
}\n
", "4227607:sub_408217": null, "4227616:cgc_SimulateValve": "typedef struct struct_3 {\n
    char padding_0[90];\n
    char field_5a;\n
    char padding_5b[13];\n
    unsigned long long field_68;\n
    char padding_70[48];\n
    unsigned long long field_a0;\n
    unsigned long long field_a8;\n
    unsigned long long field_b0;\n
    unsigned long long field_b8;\n
    unsigned long long field_c0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[160];\n
    unsigned long long field_a0;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[168];\n
    unsigned long long field_a8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[176];\n
    unsigned long long field_b0;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[184];\n
    unsigned long long field_b8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[192];\n
    unsigned long long field_c0;\n
} struct_1;\n
\n
typedef struct struct_6 {\n
    char padding_0[104];\n
    unsigned long long field_68;\n
} struct_6;\n
\n
long long cgc_SimulateValve(struct_3 *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    char v1;  // [bp+0x7]\n
    struct_3 *v3;  // [bp+0x10]\n
    char v4;  // [bp+0x18]\n
    struct_5 *v5;  // rax\n
    struct_2 *v6;  // rax\n
    struct_4 *v7;  // rax\n
    struct_0 *v8;  // rax\n
    struct_1 *v9;  // rax\n
    struct_6 *v10;  // rax\n
\n
    a0->field_a0 = 0;\n
    a0->field_a8 = 0;\n
    a0->field_b0 = 0;\n
    a0->field_b8 = 0;\n
    a0->field_c0 = 0;\n
    a0->field_68 = 0;\n
    a0->field_5a = 1;\n
    for (v0 = 0; v1 < 5; v1 += 1)\n
    {\n
        v3 = *((*(&v4) + v1 * 8 + 200));\n
        if (v3)\n
        {\n
            v5 = *(&v4);\n
            STORE(addr=(rax<8> + 0xa0<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0xa0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0xa0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            v6 = *(&v4);\n
            STORE(addr=(rax<8> + 0xa8<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0xa8<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0xa8<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            v7 = *(&v4);\n
            STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0xb0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            v8 = *(&v4);\n
            STORE(addr=(rax<8> + 0xb8<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0xb8<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0xb8<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            v9 = *(&v4);\n
            STORE(addr=(rax<8> + 0xc0<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0xc0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0xc0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            v10 = *(&v4);\n
            STORE(addr=(rax<8> + 0x68<64>), data=Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+16, size=8, endness=Iend_LE) + 0x68<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(rax<8> + 0x68<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            if (!v3->field_5a)\n
                *((*(&v4) + 90)) = 0;\n
        }\n
    }\n
    return v1;\n
}\n
", "4228041:sub_4083c9": null, "4228048:cgc_CheckValveOutputs": "extern char cgc_AspOutputValve;\n
extern char cgc_DisinfectionOutputValve;\n
extern char cgc_FilterOutputValve;\n
extern char cgc_HeadworksOutputValve;\n
\n
long long cgc_CheckValveOutputs()\n
{\n
    char v0;  // [bp-0x19]\n
    void* v1;  // [bp-0x18]\n
    char v2;  // [bp+0x7]\n
    void* v3;  // [bp+0x8], Other Possible Types: unsigned long\n
    char v4;  // [bp+0x17]\n
\n
    v1 = 0;\n
    for (v0 = 0; v2 < 5; v2 += 1)\n
    {\n
        if (*(&(&cgc_HeadworksOutputValve)[120 + 8 * v2]))\n
            s_-8 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=((0x410040<64> + (Conv(8->64, Load(addr=stack_base+7, size=1, endness=Iend_LE)) * 0x8<64>)) + 0xf0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+8, size=8, endness=Iend_LE))))<8>\n
    }\n
    if ((((CmpF(0x4059000000000000, v3) & 69) | ((CmpF(0x4059000000000000, v3) & 69) >> 6)) & 1) != 1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        if (*(&(&cgc_AspOutputValve)[120 + 8 * v2]))\n
            s_-8 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=((0x40ff28<64> + (Conv(8->64, Load(addr=stack_base+7, size=1, endness=Iend_LE)) * 0x8<64>)) + 0xf0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+8, size=8, endness=Iend_LE))))<8>\n
    }\n
    if ((((CmpF(0x4059000000000000, v3) & 69) | ((CmpF(0x4059000000000000, v3) & 69) >> 6)) & 1) != 1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        if (*(&(&cgc_FilterOutputValve)[120 + 8 * v2]))\n
            s_-8 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=((0x40f890<64> + (Conv(8->64, Load(addr=stack_base+7, size=1, endness=Iend_LE)) * 0x8<64>)) + 0xf0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+8, size=8, endness=Iend_LE))))<8>\n
    }\n
    if ((((CmpF(0x4059000000000000, v3) & 69) | ((CmpF(0x4059000000000000, v3) & 69) >> 6)) & 1) != 1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        if (*(&(&cgc_DisinfectionOutputValve)[120 + 8 * v2]))\n
            s_-8 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=((0x410e80<64> + (Conv(8->64, Load(addr=stack_base+7, size=1, endness=Iend_LE)) * 0x8<64>)) + 0xf0<64>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+8, size=8, endness=Iend_LE))))<8>\n
    }\n
    if ((((CmpF(0x4059000000000000, v3) & 69) | ((CmpF(0x4059000000000000, v3) & 69) >> 6)) & 1) != 1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = 1;\n
    return v4;\n
}\n
", "4228631:sub_408617": null, "4228640:cgc_SimulateAsp": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[159];\n
    unsigned long long field_a0;\n
    unsigned long long field_a8;\n
    unsigned long long field_b0;\n
    unsigned long long field_b8;\n
    unsigned long long field_c0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[176];\n
    unsigned long long field_b0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[168];\n
    unsigned long long field_a8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[184];\n
    unsigned long long field_b8;\n
} struct_0;\n
\n
extern char cgc_Asp;\n
extern char cgc_NumAsp;\n
\n
long long cgc_SimulateAsp()\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_109;  // tmp #109\n
    int tmp_111;  // tmp #111\n
    int tmp_110;  // tmp #110\n
    int tmp_149;  // tmp #149\n
    int tmp_151;  // tmp #151\n
    int tmp_150;  // tmp #150\n
    int tmp_21;  // tmp #21\n
    int tmp_23;  // tmp #23\n
    int tmp_22;  // tmp #22\n
    int tmp_31;  // tmp #31\n
    int tmp_33;  // tmp #33\n
    int tmp_32;  // tmp #32\n
    int tmp_18;  // tmp #18\n
    int tmp_20;  // tmp #20\n
    int tmp_19;  // tmp #19\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    int tmp_36;  // tmp #36\n
    int tmp_38;  // tmp #38\n
    int tmp_37;  // tmp #37\n
    int tmp_58;  // tmp #58\n
    int tmp_60;  // tmp #60\n
    int tmp_59;  // tmp #59\n
    int tmp_24;  // tmp #24\n
    int tmp_26;  // tmp #26\n
    int tmp_25;  // tmp #25\n
    int tmp_44;  // tmp #44\n
    int tmp_42;  // tmp #42\n
    unsigned long v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8]\n
    unsigned long v3;  // [bp+0x10]\n
    unsigned long v4;  // [bp+0x18]\n
    unsigned long v5;  // [bp+0x20]\n
    unsigned long v6;  // [bp+0x28]\n
    unsigned long v7;  // [bp+0x30]\n
    unsigned long v8;  // [bp+0x38]\n
    unsigned long v9;  // [bp+0x40]\n
    unsigned long v10;  // [bp+0x48]\n
    unsigned long v11;  // [bp+0x50]\n
    unsigned long v12;  // [bp+0x58]\n
    unsigned long v13;  // [bp+0x60]\n
    char v14;  // [bp+0x6f]\n
    struct_1 *v15;  // [bp+0x70]\n
    struct_1 *v16;  // rax, Other Possible Types: unsigned long\n
    int v17;  // xmm0\n
    int v18;  // xmm0\n
    int v19;  // xmm0\n
    int v20;  // xmm0\n
    int v21;  // xmm0\n
    int v22;  // xmm0\n
    int v23;  // xmm0\n
    int v24;  // xmm0\n
    int v25;  // xmm0\n
    int v26;  // xmm0\n
    struct_3 *v27;  // rax\n
    int v33;  // xmm0\n
    int v35;  // xmm0\n
    struct_2 *v39;  // rax\n
    int v40;  // xmm0\n
    struct_0 *v42;  // rax\n
    int v43;  // xmm0\n
    struct_2 *v46;  // rax\n
    int v47;  // xmm0\n
    int v49;  // xmm0\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        v16 = v14;\n
        if (v16 >= cgc_NumAsp)\n
            return v14;\n
        v16 = *(&(&cgc_Asp)[200 + 280 * v14]);\n
        v15 = v16;\n
        if (!v15)\n
            return *(&(&cgc_Asp)[200 + 280 * v14]);\n
        v16 = v15->field_0;\n
        if (v16 != 5)\n
            return v15->field_0;\n
        v17 = 0;\n
        *(&v17) = v15->field_a0;\n
        v1 = v17;\n
        cgc_GetValvePctFlow(v15, v14);\n
        v18 = (0 CONCAT v1) * v17;\n
        *(&(&cgc_Asp)[160 + 280 * v14]) = v18;\n
        v19 = 0;\n
        *(&v19) = v15->field_a8;\n
        v2 = v19;\n
        cgc_GetValvePctFlow(v15, v14);\n
        v20 = (0 CONCAT v2) * v19;\n
        *(&(&cgc_Asp)[168 + 280 * v14]) = v20;\n
        v21 = 0;\n
        *(&v21) = v15->field_b0;\n
        v3 = v21;\n
        cgc_GetValvePctFlow(v15, v14);\n
        v22 = (0 CONCAT v3) * v21;\n
        *(&(&cgc_Asp)[176 + 280 * v14]) = v22;\n
        v23 = 0;\n
        *(&v23) = v15->field_b8;\n
        v4 = v23;\n
        cgc_GetValvePctFlow(v15, v14);\n
        v24 = (0 CONCAT v4) * v23;\n
        *(&(&cgc_Asp)[184 + 280 * v14]) = v24;\n
        v25 = 0;\n
        *(&v25) = v15->field_c0;\n
        v5 = v25;\n
        cgc_GetValvePctFlow(v15, v14);\n
        v26 = (0 CONCAT v5) * v25;\n
        *(&(&cgc_Asp)[192 + 280 * v14]) = v26;\n
        v27 = &(&cgc_Asp)[280 * v14];\n
        STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fb999999999999a<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
        tmp_109 = DivV(tmp_111, tmp_110);\n
        s_-60 =L Conv(128->64, ((0x0<64> CONCAT 0x3fb5a858793dd980<64>) * (t109 * Conv(64->128, Load(addr=((0x410160<64> + (Conv(8->64, Load(addr=stack_base+111, size=1, endness=Iend_LE)) * 0x118<64>)) + 0x38<64>), size=8, endness=Iend_LE)))))<8>\n
        tmp_149 = DivV(tmp_151, tmp_150);\n
        *(&v12) = tmp_149;\n
        if ((CmpF(v13, v12) & 1))\n
        {\n
            tmp_21 = SubV(tmp_23, tmp_22);\n
            *(&v12) = tmp_21;\n
            tmp_31 = DivV(tmp_33, tmp_32);\n
            v33 = tmp_31 * (0 CONCAT 0x4038000000000000);\n
            *(&(&cgc_Asp)[168 + 280 * v14]) = v33;\n
        }\n
        else\n
        {\n
            tmp_18 = SubV(tmp_20, tmp_19);\n
            *(&v13) = tmp_18;\n
            *(&(&cgc_Asp)[168 + 280 * v14]) = 0;\n
            tmp_31 = DivV(tmp_33, tmp_32);\n
            v35 = tmp_31 * (0 CONCAT 4616865157998863974);\n
            v11 = v35;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            *(&v10) = tmp_45;\n
            if (!(CmpF(v13, v11) & 1))\n
            {\n
                *(&(&cgc_Asp)[184 + 280 * v14]) = 0;\n
            }\n
            else\n
            {\n
                tmp_36 = SubV(tmp_38, tmp_37);\n
                *(&(&cgc_Asp)[184 + 280 * v14]) = tmp_36;\n
            }\n
            s_-38 =L Conv(128->64, ((0x0<64> CONCAT 0x40238f5c28f5c28f<64>) * Conv(64->128, Load(addr=((0x410160<64> + (Conv(8->64, Load(addr=stack_base+111, size=1, endness=Iend_LE)) * 0x118<64>)) + 0x40<64>), size=8, endness=Iend_LE))))<8>\n
            s_-40 =L Conv(128->64, ((0x0<64> CONCAT 0x401a000000000000<64>) * Conv(64->128, Load(addr=stack_base+72, size=8, endness=Iend_LE))))<8>\n
            if (!(CmpF(v8, v9) & 1))\n
            {\n
                tmp_21 = SubV(tmp_22, tmp_19);\n
                v39 = &(&cgc_Asp)[280 * v14];\n
                v40 = tmp_21 * (0 CONCAT 0x4038000000000000) + (0 CONCAT v39->field_a8);\n
                v39->field_a8 = v40;\n
            }\n
            else\n
            {\n
                tmp_21 = SubV(tmp_22, tmp_19);\n
                v42 = &(&cgc_Asp)[280 * v14];\n
                xmm0<16> = (t21 + Conv(64->128, Load(addr=(rax<8> + 0xb8<64>), size=8, endness=Iend_LE)))\n
                v42->field_b8 = v43;\n
            }\n
            s_-28 =L Conv(128->64, ((0x0<64> CONCAT 0x3fdf5c28f5c28f5c<64>) * Conv(64->128, Load(addr=((0x410160<64> + (Conv(8->64, Load(addr=stack_base+111, size=1, endness=Iend_LE)) * 0x118<64>)) + 0x48<64>), size=8, endness=Iend_LE))))<8>\n
            tmp_58 = DivV(tmp_60, tmp_59);\n
            v7 = (0 CONCAT 4606281698874543309) * tmp_58;\n
            if ((CmpF(v6, v7) & 1))\n
            {\n
                tmp_24 = DivV(tmp_26, tmp_25);\n
                v49 = tmp_24 * (0 CONCAT 0x4038000000000000);\n
                *(&(&cgc_Asp)[192 + 280 * v14]) = v49;\n
            }\n
            else\n
            {\n
                *(&(&cgc_Asp)[192 + 280 * v14]) = 0;\n
                tmp_44 = SubV(tmp_45, tmp_42);\n
                v46 = &(&cgc_Asp)[280 * v14];\n
                v47 = tmp_44 * (0 CONCAT 0x4038000000000000) + (0 CONCAT v46->field_a8);\n
                v46->field_a8 = v47;\n
            }\n
        }\n
        v14 += 1;\n
    }\n
}\n
", "4230255:sub_408c6f": null, "4230256:cgc_SimulateFilter": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[159];\n
    unsigned long long field_a0;\n
    unsigned long long field_a8;\n
    unsigned long long field_b0;\n
    unsigned long long field_b8;\n
    unsigned long long field_c0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[176];\n
    unsigned long long field_b0;\n
} struct_0;\n
\n
extern char cgc_Filter;\n
extern char cgc_NumFilters;\n
\n
long long cgc_SimulateFilter()\n
{\n
    char v0;  // [bp-0x11]\n
    int tmp_77;  // tmp #77\n
    int tmp_79;  // tmp #79\n
    int tmp_78;  // tmp #78\n
    int tmp_113;  // tmp #113\n
    int tmp_114;  // tmp #114\n
    int tmp_111;  // tmp #111\n
    unsigned long v1;  // [bp+0x0]\n
    unsigned long v2;  // [bp+0x8]\n
    unsigned long v3;  // [bp+0x10]\n
    unsigned long v4;  // [bp+0x18]\n
    unsigned long v5;  // [bp+0x20]\n
    unsigned long v6;  // [bp+0x28]\n
    unsigned long v7;  // [bp+0x30]\n
    unsigned long v8;  // [bp+0x38]\n
    char v9;  // [bp+0x47]\n
    struct_1 *v10;  // [bp+0x48]\n
    struct_1 *v11;  // rax, Other Possible Types: unsigned long\n
    int v12;  // xmm0\n
    int v13;  // xmm0\n
    int v14;  // xmm0\n
    int v15;  // xmm0\n
    int v16;  // xmm0\n
    int v17;  // xmm0\n
    int v18;  // xmm0\n
    int v19;  // xmm0\n
    int v20;  // xmm0\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v24;  // xmm0\n
    struct_0 *v25;  // rax\n
    struct_0 *v26;  // rax\n
    struct_0 *v27;  // rax\n
    struct_0 *v28;  // rax\n
    struct_0 *v29;  // rax\n
    struct_0 *v30;  // rax\n
    struct_0 *v31;  // rax\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        v11 = v9;\n
        if (v11 >= cgc_NumFilters)\n
            return v9;\n
        v11 = *(&(&cgc_Filter)[200 + 280 * v9]);\n
        v10 = v11;\n
        if (!v10)\n
            return *(&(&cgc_Filter)[200 + 280 * v9]);\n
        v11 = v10->field_0;\n
        if (v11 != 5)\n
            return v10->field_0;\n
        v12 = 0;\n
        *(&v12) = v10->field_a0;\n
        v1 = v12;\n
        cgc_GetValvePctFlow(v10, v9);\n
        v13 = (0 CONCAT v1) * v12;\n
        *(&(&cgc_Filter)[160 + 280 * v9]) = v13;\n
        v14 = 0;\n
        *(&v14) = v10->field_a8;\n
        v2 = v14;\n
        cgc_GetValvePctFlow(v10, v9);\n
        v15 = (0 CONCAT v2) * v14;\n
        *(&(&cgc_Filter)[168 + 280 * v9]) = v15;\n
        v16 = 0;\n
        *(&v16) = v10->field_b0;\n
        v3 = v16;\n
        cgc_GetValvePctFlow(v10, v9);\n
        v17 = (0 CONCAT v3) * v16;\n
        *(&(&cgc_Filter)[176 + 280 * v9]) = v17;\n
        v18 = 0;\n
        *(&v18) = v10->field_b8;\n
        v4 = v18;\n
        cgc_GetValvePctFlow(v10, v9);\n
        v19 = (0 CONCAT v4) * v18;\n
        *(&(&cgc_Filter)[184 + 280 * v9]) = v19;\n
        v20 = 0;\n
        *(&v20) = v10->field_c0;\n
        v5 = v20;\n
        cgc_GetValvePctFlow(v10, v9);\n
        v21 = (0 CONCAT v5) * v20;\n
        *(&(&cgc_Filter)[192 + 280 * v9]) = v21;\n
        v22 = 0;\n
        tmp_77 = DivV(tmp_79, tmp_78);\n
        *(&v8) = tmp_77;\n
        *(&v22) = (&cgc_Filter)[88 + 280 * v9];\n
        v7 = ((0 CONCAT 0x4049000000000000) * v22);\n
        tmp_113 = DivV(tmp_114, tmp_111);\n
        v24 = tmp_113;\n
        v6 = v24;\n
        *(&v24) = v6;\n
        if ((((CmpF(v24, 0x4028000000000000) & 69) | ((CmpF(v24, 0x4028000000000000) & 69) >> 6)) & 1) == 1)\n
        {\n
            if (!(CmpF(v6, 0x4024000000000000) & 1))\n
            {\n
                v25 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fd999999999999a<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x4022000000000000) & 1))\n
            {\n
                v26 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fd0000000000000<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x4020000000000000) & 1))\n
            {\n
                v27 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fc999999999999a<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x401c000000000000) & 1))\n
            {\n
                v28 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fc3333333333333<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x4018000000000000) & 1))\n
            {\n
                v29 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fb999999999999a<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x4008000000000000) & 1))\n
            {\n
                v30 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3fa999999999999a<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else if (!(CmpF(v6, 0x3ff0000000000000) & 1))\n
            {\n
                v31 = &(&cgc_Filter)[280 * v9];\n
                STORE(addr=(rax<8> + 0xb0<64>), data=Conv(128->64, ((0x0<64> CONCAT 0x3f847ae147ae147b<64>) * Conv(64->128, Load(addr=(rax<8> + 0xb0<64>), size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
            }\n
            else\n
            {\n
                *(&(&cgc_Filter)[176 + 280 * v9]) = 0;\n
            }\n
        }\n
        v9 += 1;\n
    }\n
}\n
", "4231553:sub_409181": null, "4231568:cgc_SimulateDisinfection": null, "4233033:sub_409749": null, "4233040:cgc_SimulateEffluent": "typedef struct struct_0 {\n
    char padding_0[90];\n
    char field_5a;\n
    char padding_5b[13];\n
    unsigned long long field_68;\n
    char padding_70[48];\n
    unsigned long long field_a0;\n
    unsigned long long field_a8;\n
    unsigned long long field_b0;\n
    unsigned long long field_b8;\n
    unsigned long long field_c0;\n
} struct_0;\n
\n
extern unsigned int cgc_DisinfectionOutputValve;\n
extern char g_410eda;\n
extern unsigned long long g_410ee8;\n
extern struct_0 *g_410ef8;\n
extern unsigned long long g_410f20;\n
extern unsigned long long g_410f28;\n
extern unsigned long long g_410f30;\n
extern unsigned long long g_410f38;\n
extern unsigned long long g_410f40;\n
\n
long long cgc_SimulateEffluent()\n
{\n
    unsigned long v0;  // [bp-0x440]\n
    unsigned long v1;  // [bp-0x438]\n
    unsigned long v2;  // [bp-0x430]\n
    unsigned long v3;  // [bp-0x428]\n
    unsigned long v4;  // [bp-0x420]\n
    unsigned long v5;  // [bp-0x418]\n
    struct_0 *v6;  // [bp-0x410]\n
\n
    v6 = g_410ef8;\n
    if (v6)\n
    {\n
        v0 = g_410f20;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_a0 = (0 CONCAT v0) * (0 CONCAT g_410f20);\n
        v1 = g_410f28;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_a8 = (0 CONCAT v1) * (0 CONCAT g_410f28);\n
        v2 = g_410f30;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_b0 = (0 CONCAT v2) * (0 CONCAT g_410f30);\n
        v3 = g_410f38;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_b8 = (0 CONCAT v3) * (0 CONCAT g_410f38);\n
        v4 = g_410f40;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_c0 = (0 CONCAT v4) * (0 CONCAT g_410f40);\n
        v5 = g_410ee8;\n
        cgc_GetValvePctFlow(&cgc_DisinfectionOutputValve, 0);\n
        v6->field_68 = (0 CONCAT v5) * (0 CONCAT g_410ee8);\n
        v6->field_5a = g_410eda;\n
        return v6;\n
    }\n
    return g_410ef8;\n
}\n
", "4233471:sub_4098ff": null, "4233472:cgc_SimulateHeadworks": "extern char cgc_Headworks;\n
extern unsigned long long g_410778;\n
extern unsigned long long g_410780;\n
extern char g_410788;\n
extern unsigned long long g_410790;\n
extern unsigned long long g_410798;\n
extern unsigned long long g_4107a0;\n
\n
long long cgc_SimulateHeadworks()\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v1[25];  // [bp+0x8]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = g_4107a0;\n
    v0 = g_4107a0;\n
    if (v0)\n
    {\n
        g_410778 = v1[20];\n
        g_410780 = v1[21];\n
        g_410788 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe6666666666666<64>) * Conv(64->128, Load(addr=(Load(addr=stack_base+8, size=8, endness=Iend_LE) + 0xb0<64>), size=8, endness=Iend_LE))))<8>\n
        g_410790 = v1[23];\n
        v2 = &cgc_Headworks;\n
        g_410798 = v1[24];\n
    }\n
    return v2;\n
}\n
", "4233673:sub_4099c9": null, "4233680:cgc_RunSimStep": "extern void cgc_AspOutputValve;\n
extern void cgc_DisinfectionOutputValve;\n
extern void cgc_FilterOutputValve;\n
extern void cgc_HeadworksOutputValve;\n
\n
long long cgc_RunSimStep()\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!cgc_CheckValveOutputs())\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_SimulateHeadworks();\n
    cgc_SimulateValve(&cgc_HeadworksOutputValve);\n
    cgc_SimulateAsp();\n
    cgc_SimulateValve(&cgc_AspOutputValve);\n
    cgc_SimulateFilter();\n
    cgc_SimulateValve(&cgc_FilterOutputValve);\n
    cgc_SimulateDisinfection();\n
    cgc_SimulateValve(&cgc_DisinfectionOutputValve);\n
    cgc_SimulateEffluent();\n
    v0 = 1;\n
    return v0;\n
}\n
", "4233800:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_rint": null, "5242920:cgc_log10": null, "5242928:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}