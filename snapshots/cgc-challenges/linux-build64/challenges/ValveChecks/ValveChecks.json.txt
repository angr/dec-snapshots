{"4202496:_init": "extern struct_0 *g_405250;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_405250;\n
    if (g_405250)\n
        v1 = g_405250();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_405270;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_405270;\n
    goto *(4215416);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202656:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202672:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202688:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4215392);\n
}\n
", "4202736:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202773:sub_402115": null, "4202774:sub_402116": null, "4202784:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_405248;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202825:sub_402149": null, "4202832:register_tm_clones": "extern unsigned long long g_405258;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202889:sub_402189": null, "4202896:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_405260;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_405260)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202949:sub_4021c5": null, "4202953:sub_4021c9": null, "4202960:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:sub_4021d9": null, "4202976:cgc_promptc": "long long cgc_promptc(unsigned long long a0, unsigned long a1, unsigned long long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (cgc_sendall(1, a2, cgc_strlen(a2)) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc_recvline(0, a0, a1);\n
    if (v1 >= 0)\n
        return v1;\n
    if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc__terminate(1);\n
    return v1;\n
}\n
", "4203137:sub_402281": null, "4203152:cgc_sendall": "long long cgc_sendall(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
        else if (!cgc_transmit(a0, a1, a2, v7))\n
        {\n
            v3 = v1 + v3;\n
            v0 = v1 + v0;\n
            v2 -= v1;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203350:sub_402356": null, "4203360:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4203419:sub_40239b": null, "4203424:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
long long cgc_recvline(unsigned long long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v3)\n
    {\n
        while (v2)\n
        {\n
            v3 += 1;\n
            if (cgc_receive(a0, a1, a2, v7))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v0 += 1;\n
            v2 -= 1;\n
            if (*((v3 - 1)) == 10)\n
                break;\n
        }\n
        if (*((v3 - 1)) != 10)\n
        {\n
            v5 = -2;\n
            return v5;\n
        }\n
        *((v3 - 1)) = 0;\n
        v5 = v0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4203678:sub_40249e": null, "4203680:cgc_sendline": "long long cgc_sendline(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
\n
    v0 = cgc_sendall(a0, a1, a2);\n
    if (v0 < 0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!cgc_transmit(a0, a1, a2, v3))\n
    {\n
        v0 += 1;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4203805:sub_40251d": null, "4203808:cgc_recv": "long long cgc_recv(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v3 += 1;\n
            if (cgc_receive(a0, a1, a2, v7))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v0 += 1;\n
            v2 -= 1;\n
        }\n
        else\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4204003:sub_4025e3": null, "4204016:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a1;\n
    for (v0 = a0; *(v1); v1 += 1)\n
    {\n
        *(v0) = *(v1);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - a0 - 1;\n
}\n
", "4204125:sub_40265d": null, "4204128:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    v2 = a1;\n
    v1 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - a0 < a2)\n
            v0 = *(v2);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(v2);\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    v4 = v1;\n
    v1 = v4 + 1;\n
    *(v4) = 0;\n
    return v1 - a0 - 1;\n
}\n
", "4204286:sub_4026fe": null, "4204288:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    cgc_strcpy(v0, a1);\n
    return a0;\n
}\n
", "4204365:sub_40274d": null, "4204368:cgc_streq": "long long cgc_streq(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x22]\n
    char v1;  // [bp-0x21]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(v2);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(v2);\n
    v4 = v0 & 1;\n
    return v4;\n
}\n
", "4204549:sub_402805": null, "4204560:cgc_startswith": "long long cgc_startswith(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
        {\n
            v3 = !*(v1);\n
            return v3;\n
        }\n
        if (*(v2) != *(v1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
}\n
", "4204714:sub_4028aa": null, "4204720:cgc_uint2str": "long long cgc_uint2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned long v7;  // rcx\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v1 = (0 CONCAT v1) /m 10;\n
    } while (v1 > 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v6 = v2;\n
    v2 = v6 - 1;\n
    v6[a0] = 0;\n
    do\n
    {\n
        v0 = (0 CONCAT v3) /m 10 >> 32;\n
        v7 = v2;\n
        v2 = v7 - 1;\n
        *((a0 + v7)) = v0 + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
    } while (v3 > 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4204930:sub_402982": null, "4204944:cgc_int2str": "long long cgc_int2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned int v7;  // eax\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rcx\n
    unsigned int v11;  // eax\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (v3 >= 0)\n
    {\n
        v3 *= -1;\n
    }\n
    else if (a1 >= 3)\n
    {\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v6[a0] = 45;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v7 = v1;\n
        v1 = (v7 >> 31 CONCAT v7) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v9 = v2;\n
    v2 = v9 - 1;\n
    *((a0 + v9)) = 0;\n
    do\n
    {\n
        v0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) * -1;\n
        v10 = v2;\n
        v2 = v10 - 1;\n
        *((a0 + v10)) = v0 + 48;\n
        v11 = v3;\n
        v3 = (v11 >> 31 CONCAT v11) /m 10;\n
    } while (v3 < 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205223:sub_402aa7": null, "4205232:cgc_str2uint": "long long cgc_str2uint(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    if (!a0)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (a0[v0] != 48 && a0[v0] != 49 && a0[v0] != 50 && a0[v0] != 51 && a0[v0] != 52 && a0[v0] != 53 && a0[v0] != 54 && a0[v0] != 55 && a0[v0] != 56 && a0[v0] != 57)\n
            break;\n
        v3 *= 10;\n
        v2 = a0[v0] - 48;\n
        v3 = v2 + v3;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4205591:sub_402c17": null, "4205600:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = a1;\n
    }\n
    return a0;\n
}\n
", "4205677:sub_402c6d": null, "4205680:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return a0;\n
}\n
", "4205763:sub_402cc3": null, "4205776:cgc_b2hex": "long long cgc_b2hex(unsigned long a0, char a1[3])\n
{\n
    if ((a0 >> 4) < 10)\n
        a1[0] = (a0 >> 4) + 48;\n
    else\n
        a1[0] = (a0 >> 4) - -55;\n
    if ((a0 & 15) < 10)\n
        a1[1] = (a0 & 15) + 48;\n
    else\n
        a1[1] = (a0 & 15) - -55;\n
    a1[2] = 0;\n
    return a1;\n
}\n
", "4205926:sub_402d66": null, "4205936:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206034:sub_402dd2": null, "4206048:cgc___umoddi3": "long long cgc___umoddi3(unsigned long a0, unsigned long a1)\n
{\n
    return a0 - a1 * (a0 >> 31 CONCAT a0) /m a1;\n
}\n
", "4206084:sub_402e04": null, "4206096:cgc_sleep": "long long cgc_sleep(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
\n
    v0 = a0;\n
    v1 = 0;\n
    return cgc_fdwait(a0, v3, v4, v5, v6);\n
}\n
", "4206148:sub_402e44": null, "4206160:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[a0] != v0[a1])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206276:sub_402ec4": null, "4206288:cgc_additive": "long long cgc_additive(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v0 = 62678480407560174;\n
    if ((a1 & 7))\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < a1; v1 += 8)\n
    {\n
        v0 = *((a0 + v1)) + v0;\n
    }\n
    v2 = v0;\n
    return v2;\n
}\n
", "4206410:sub_402f4a": null, "4206416:cgc_addxoradd": "long long cgc_addxoradd(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28], Other Possible Types: unsigned long long\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v0 = 13848835755409390;\n
    if ((a1 & 7))\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < a1; v1 += 8)\n
    {\n
        v0 = *((a0 + v1)) + v0;\n
        v0 = *((a0 + v1)) ^ v0;\n
        v0 = *((a0 + v1)) + v0;\n
    }\n
    v2 = v0;\n
    return v2;\n
}\n
", "4206576:cgc_updatecrc": "extern char cgc_calcd;\n
extern unsigned int cgc_crctable;\n
\n
long long cgc_updatecrc(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
\n
    v0 = a2;\n
    if (!cgc_calcd)\n
        cgc_compute_me_crc();\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0 = (&cgc_crctable)[v0 & 255 ^ a0[v1]] ^ (v0 >> 8);\n
    }\n
    return v0;\n
}\n
", "4206706:sub_403072": null, "4206720:cgc_crc32": "long long cgc_crc32(char *a0, unsigned long a1)\n
{\n
    return cgc_updatecrc(a0, a1, 2940141585) ^ -1;\n
}\n
", "4206761:sub_4030a9": null, "4206768:cgc_fpadditive": "long long cgc_fpadditive(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = 4614256655080292474;\n
    v4 = a1 & 3;\n
    if (v4)\n
    {\n
        v2 = v0;\n
        return a1 & 3;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v4 = v1;\n
        if (v4 >= a1)\n
            break;\n
        s_28 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(rdi<8> + Conv(32->64, Load(addr=stack_base-32, size=4, endness=Iend_LE))), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))))<8>\n
        v1 += 8;\n
    }\n
    v2 = v0;\n
    return v1;\n
}\n
", "4206895:sub_40312f": null, "4206896:cgc_calc_me_md5": "extern unsigned int cgc_md5table;\n
\n
long long cgc_calc_me_md5()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    for (v1 = 0; v1 < 64; v1 += 1)\n
    {\n
        cgc_sin();\n
        cgc_fabs(v3, v4, v5, v6, v7, v8);\n
        v0 = v1 + 1;\n
        cgc_pow(v3, v4, v5, v6, v7, v8);\n
        (&cgc_md5table)[v1] = (0 CONCAT v0) * (0 CONCAT 0x4000000000000000);\n
    }\n
    return v1 + 1;\n
}\n
", "4207022:sub_4031ae": null, "4207024:cgc_md5": "extern unsigned int cgc_md5table;\n
extern void g_404050;\n
extern unsigned long long g_405010;\n
extern unsigned long long g_405018;\n
extern unsigned long long g_405020;\n
extern unsigned long long g_405028;\n
\n
long long cgc_md5(unsigned long a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x108]\n
    unsigned int v1;  // [bp-0x104]\n
    unsigned int v2;  // [bp-0x100]\n
    unsigned int v3;  // [bp-0xfc]\n
    char v4;  // [bp-0xf8]\n
    char v5;  // [bp-0xd8]\n
    char v6;  // [bp-0xd0]\n
    unsigned long v7;  // [bp-0xc8]\n
    unsigned long v8;  // [bp-0xc0]\n
    unsigned long v9;  // [bp-0xb8]\n
    unsigned long v10;  // [bp-0xb0]\n
    unsigned long long v11;  // [bp-0xa8]\n
    unsigned long long v12;  // [bp-0xa0]\n
    unsigned long long v13;  // [bp-0x98], Other Possible Types: unsigned int, unsigned long\n
    unsigned int v14;  // [bp-0x94]\n
    unsigned int v15;  // [bp-0x90], Other Possible Types: unsigned long long, unsigned long\n
    unsigned int v16;  // [bp-0x8c]\n
    char v17;  // [bp-0x88]\n
    char v18;  // [bp-0x48]\n
    unsigned short v19;  // [bp-0x3e]\n
    unsigned short v20;  // [bp-0x3c]\n
    unsigned short v21;  // [bp-0x3a]\n
    unsigned int v22;  // [bp-0x38]\n
    unsigned int v23;  // [bp-0x34]\n
    unsigned int v24;  // [bp-0x30]\n
    unsigned int v25;  // [bp-0x2c]\n
    unsigned int v26;  // [bp-0x28]\n
    unsigned long long v28;  // rcx\n
    unsigned int v30;  // eax\n
    unsigned long long v31;  // rcx\n
    unsigned long v33;  // rax\n
\n
    memset(&v17, 0, 64);\n
    v13 = 17279655951921914625;\n
    v15 = 1167088121787636990;\n
    v11 = 17279655951921914625;\n
    v12 = 1167088121787636990;\n
    v7 = g_405010;\n
    v8 = g_405018;\n
    v9 = g_405020;\n
    v10 = g_405028;\n
    memcpy(&v4, &g_404050, 48);\n
    cgc_calc_me_md5();\n
    *(&v26) = ((a1 + 8 >> 6) + 1) * 64;\n
    if (cgc_allocate(a0, &g_404050, 48))\n
    {\n
        if (cgc_sendline(1, \"Clever girl.\", 12) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_memset(*(&v18), 0, *(&v26));\n
    cgc_memcpy(*(&v18), a0, a1);\n
    a1[*(&v18)] = 128;\n
    v25 = a1 * 8;\n
    cgc_memcpy(*(&v18) + *(&v26) - 8, &v25, 4);\n
    for (v22 = 0; v22 < *(&v26) >> 6; v22 += 1)\n
    {\n
        cgc_memcpy(&v17, *(&v18) + v22 * 64, 64);\n
        for (v25 = 0; v25 < 4; v25 += 1)\n
        {\n
            v21 = *(&(&v5)[2 * v25]);\n
            v20 = *(&(&v6)[2 * v25]);\n
            for (v24 = 0; v24 < 16; v24 += 1)\n
            {\n
                v28 = v20;\n
                v19 = v24 * v21 + v28 & 15;\n
                v2 = *((&v13 + 4));\n
                v0 = v13;\n
                v30 = v0 + (&v7)[v25](*((&v13 + 4)), v15, *((&v15 + 4)), v28) + (&cgc_md5table)[16 * v25 + v24] + *(&(&v17)[4 * v19]);\n
                v31 = *(&(&v4)[8 * v25 + 2 * (v24 & 3)]);\n
                v3 = v30 << (v31 & 31);\n
                v1 = v13;\n
                v23 = v2 + (v3 | (v1 + (&v7)[v25](*((&v13 + 4)), v15, *((&v15 + 4)), v31) + (&cgc_md5table)[16 * v25 + v24] + *(&(&v17)[4 * v19]) >> ((32 - *(&(&v4)[8 * v25 + 2 * (v24 & 3)])) & 31)));\n
                v13 = *((&v15 + 4));\n
                v16 = v15;\n
                v15 = *((&v13 + 4));\n
                v14 = v23;\n
            }\n
        }\n
        for (v25 = 0; v25 < 4; v25 += 1)\n
        {\n
            v33 = v25;\n
            *((&v11 + 4 * v33)) = *((&v13 + 4 * v25)) + *((&v11 + 4 * v33));\n
            *((&v13 + 4 * v25)) = *((&v11 + 4 * v25));\n
        }\n
    }\n
    return cgc_memcpy(a2, &v11, 16);\n
}\n
", "4208015:sub_40358f": null, "4208016:cgc_F": "long long cgc_F(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 & a1 | (a0 ^ -1) & a2;\n
}\n
", "4208048:cgc_G": "long long cgc_G(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 & a2 | a1 & (a2 ^ -1);\n
}\n
", "4208082:sub_4035d2": null, "4208096:cgc_H": "long long cgc_H(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a0 ^ a1 ^ a2;\n
}\n
", "4208120:sub_4035f8": null, "4208128:cgc_I": "long long cgc_I(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return a1 ^ (a0 | a2 ^ -1);\n
}\n
", "4208159:sub_40361f": null, "4208160:cgc_compute_me_crc": "extern char cgc_calcd;\n
extern unsigned int cgc_crctable;\n
\n
long long cgc_compute_me_crc()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    for (v2 = 0; v2 < 0x100; v2 += 1)\n
    {\n
        v0 = v2;\n
        for (v1 = 0; v1 < 8; v1 += 1)\n
        {\n
            if ((v0 & 1))\n
                v0 = (v0 >> 1) ^ 3988292384;\n
            else\n
                v0 >>= 1;\n
        }\n
        (&cgc_crctable)[v2] = v0;\n
    }\n
    cgc_calcd = 1;\n
    return v2 + 1;\n
}\n
", "4208310:sub_4036b6": null, "4208320:main": "int main(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    char *v1;  // [bp-0xe0]\n
    char v2;  // [bp-0xd8]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v6 = 0;\n
    v5 = a0;\n
    v4 = a1;\n
    v3 = 0;\n
    memset(&v2, 0, 184);\n
    if (cgc_random(a0, 0, 184))\n
    {\n
        if (cgc_sendline(1, \"The essence of chaos.\", 21) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (cgc_recv(0, &v2, 184) < 0)\n
    {\n
        if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v1 = cgc_process_pkt(&v2);\n
    v0 = v1;\n
    if (cgc_sendline(1, v0, cgc_strlen(v1)) < 0)\n
    {\n
        cgc__terminate(1);\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4208626:sub_4037f2": null, "4208640:cgc_process_pkt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[132];\n
    unsigned long long field_88;\n
    unsigned long long field_90;\n
    unsigned long long field_98;\n
    unsigned int field_a0;\n
} struct_0;\n
\n
long long cgc_process_pkt(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x60]\n
    unsigned long long v1;  // [bp-0x58]\n
    unsigned long long v2;  // [bp-0x50]\n
    char v3;  // [bp-0x48]\n
    unsigned long v4;  // [bp-0x30]\n
    unsigned long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // xmm0lq\n
    unsigned long long v10;  // xmm0lq\n
    unsigned long long v12;  // xmm0lq\n
\n
    v1 = 12080157757679805217;\n
    v2 = 14060097617229678915;\n
    v5 = cgc_additive(&a0->padding_4, 128);\n
    if (v5 == 4774451407313060418)\n
    {\n
        v7 = cgc_admin_add_login(a0);\n
        return v7;\n
    }\n
    else if (a0->field_88 == v5)\n
    {\n
        v5 = cgc_addxoradd(&a0->padding_4, 128);\n
        if (v5 == 3141592653589793238)\n
        {\n
            v7 = cgc_admin_addxoradd_login(a0);\n
            return v7;\n
        }\n
        else if (a0->field_90 == v5)\n
        {\n
            v6 = cgc_crc32(&a0->padding_4, 128);\n
            if (v6 == 0x6f4e3700)\n
            {\n
                v7 = cgc_admin_crc_login(a0);\n
                return v7;\n
            }\n
            else if (a0->field_a0 == v6)\n
            {\n
                cgc_fpadditive(&a0->padding_4, 128);\n
                v4 = v9;\n
                v10 = v4;\n
                if ((((CmpF(v10, 4613303445314865113) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x4005bf0a8b1407d9<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                {\n
                    v7 = cgc_admin_fp_login(a0);\n
                    return v7;\n
                }\n
                if ((((CmpF(a0->field_98, a0->field_98) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x4005bf0a8b1407d9<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                {\n
                    v12 = a0->field_98;\n
                    if ((((CmpF(v12, v4) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF Load(addr=stack_base-48, size=8, endness=Iend_LE)) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                        goto LABEL_4039d7;\n
                    v7 = \"Invalid checksum.\";\n
                    return v7;\n
                }\n
LABEL_4039d7:\n
                cgc_md5(&a0->padding_4, 0x5, &v3);\n
                if (!cgc_memcmp(&v3, &v1, 16))\n
                {\n
                    v7 = cgc_admin_md5_login(a0);\n
                    return v7;\n
                }\n
                cgc_md5(&a0->padding_4, 0x80, &v3);\n
                if (cgc_memcmp(&v3, a0 + 1, 16))\n
                {\n
                    v7 = \"Invalid checksum.\";\n
                    return v7;\n
                }\n
                v0 = a0->field_0;\n
                switch (v0)\n
                {\n
                case 0:\n
                    v7 = cgc_getv(a0);\n
                    return v7;\n
                case 1:\n
                    v7 = cgc_setv(a0);\n
                    return v7;\n
                case 2:\n
                    v7 = cgc_gett(a0);\n
                    return v7;\n
                case 3:\n
                    v7 = cgc_redacted(a0);\n
                    return v7;\n
                default:\n
                    v7 = \"NaNaNaNaNaNaNaNaNaNaNaNaNaN watman!\";\n
                    return v7;\n
                }\n
            }\n
            else\n
            {\n
                v7 = \"Invalid checksum.\";\n
                return v7;\n
            }\n
        }\n
        else\n
        {\n
            v7 = \"Invalid checksum.\";\n
            return v7;\n
        }\n
    }\n
    else\n
    {\n
        v7 = \"Invalid checksum.\";\n
        return v7;\n
    }\n
}\n
", "4209383:sub_403ae7": null, "4209392:cgc_admin_add_login": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
long long cgc_admin_add_login(struct_0 *a0)\n
{\n
    char v0;  // [bp-0xa8]\n
    char v1;  // [bp-0x19]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0->field_4;\n
    memset(&v0, 0, 128);\n
    if (v1 > 127)\n
    {\n
        v2 = \"This is not the function you're looking for.\";\n
        return v2;\n
    }\n
    cgc_memcpy(&v0, &a0->field_4, v1);\n
    v2 = \"This is not the function you're looking for.\";\n
    return v2;\n
}\n
", "4209514:sub_403b6a": null, "4209520:cgc_admin_addxoradd_login": "long long cgc_admin_addxoradd_login(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
\n
    memset(&v0, 0, 5);\n
    if (cgc_startswith(a0 + 4, \"robots only\"))\n
    {\n
        cgc_strcpy(&v0, a0 + 4);\n
        return \"This is not the function you're looking for.\";\n
    }\n
    return \"This is not the function you're looking for.\";\n
}\n
", "4209607:sub_403bc7": null, "4209616:cgc_admin_crc_login": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
long long cgc_admin_crc_login(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x5a]\n
    char v1;  // [bp-0x59]\n
    char v2;  // [bp-0x58]\n
    unsigned long v3;  // [bp-0x10]\n
    char v4;  // [bp-0x8]\n
    unsigned long long v6;  // rbp\n
\n
    v6 = &v4;\n
    memset(&v2, 0, 64);\n
    v1 = a0->field_4;\n
    if (v1 > 64)\n
    {\n
        v3 = \"This is not the function you're looking for.\";\n
        return v3;\n
    }\n
    v1 -= 4;\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        (&v2)[v0] = (&a0->field_4)[v0];\n
    }\n
    v3 = \"This is not the function you're looking for.\";\n
    return v3;\n
}\n
", "4209767:sub_403c67": null, "4209776:cgc_admin_fp_login": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned long long field_c;\n
} struct_0;\n
\n
long long cgc_admin_fp_login(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x80]\n
    void* v1;  // [bp-0x78]\n
    unsigned int v2;  // [bp-0x6c]\n
    char v3;  // [bp-0x68]\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v2 = 0;\n
    v0 = *(&(&a0->padding_0)[1]);\n
    if ((((CmpF(v0, 4607632823798750731) & 69) | ((CmpF(v0, 4607632823798750731) & 69) >> 6)) & 1) != 1)\n
    {\n
        v4 = \"This is not the function you're looking for.\";\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if ((((CmpF(v0, v1) & 69) | ((CmpF(v0, v1) & 69) >> 6)) & 1) == 1)\n
            break;\n
        *(&(&v3)[8 * v2]) = *(&a0->padding_0[4 + 8 * v2]);\n
        s_78 =L Conv(128->64, ((0x0<64> CONCAT 0x3fb999999999999a<64>) + Conv(64->128, Load(addr=stack_base-120, size=8, endness=Iend_LE))))<8>\n
        v2 += 1;\n
    }\n
    v4 = \"This is not the function you're looking for.\";\n
    return v4;\n
}\n
", "4209945:sub_403d19": null, "4209952:cgc_admin_md5_login": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
long long cgc_admin_md5_login(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x98]\n
    char v1;  // [bp-0x11]\n
    char v2;  // [bp-0x8]\n
    unsigned long long v4;  // rbp\n
\n
    v4 = &v2;\n
    for (v1 = 0; v1 < a0->field_9; v1 += 1)\n
    {\n
        *(&(&v0)[4 * v1]) = *(&a0[1].padding_0[4 * v1]);\n
    }\n
    return \"This is not the function you're looking for.\";\n
}\n
", "4210040:sub_403d78": null, "4210048:cgc_getv": "extern unsigned int cgc_resp;\n
extern unsigned int valvepos;\n
\n
long long cgc_getv(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    cgc_uint2str(&cgc_resp, 11, valvepos);\n
    return &cgc_resp;\n
}\n
", "4210096:cgc_setv": "extern unsigned int valvepos;\n
\n
long long cgc_setv(unsigned long a0)\n
{\n
    valvepos = cgc_str2uint(a0 + 4);\n
    return \"Valve successfully modified.\";\n
}\n
", "4210140:sub_403ddc": null, "4210144:cgc_gett": "extern unsigned int cgc_resp;\n
\n
long long cgc_gett(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v1 = a0;\n
    v0 = 0;\n
    if (cgc_random(a0, v3, v4))\n
    {\n
        if (cgc_sendline(1, \"The essence of chaos.\", 21) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    cgc_uint2str(&cgc_resp, 11, v0);\n
    return &cgc_resp;\n
}\n
", "4210274:sub_403e62": null, "4210288:cgc_redacted": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int valvepos;\n
\n
long long cgc_redacted(struct_0 *a0)\n
{\n
    cgc_memcpy(&valvepos, a0 + 1, a0->field_4);\n
    return \"This is not the function you're looking for.\";\n
}\n
", "4210348:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fabs": null, "5242896:cgc_pow": null, "5242904:cgc_fdwait": null, "5242912:cgc__terminate": null, "5242920:memset": null, "5242928:cgc_transmit": null, "5242936:cgc_random": null, "5242944:cgc_allocate": null, "5242952:memcpy": null, "5242960:cgc_sin": null, "5242968:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}