{"4206592:_init": "extern struct_0 *g_40c2a8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40c2a8;\n
    if (g_40c2a8)\n
        v1 = g_40c2a8();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40c2c0;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40c2c0;\n
    goto *(4244168);\n
}\n
", "4206636:sub_40302c": null, "4206640:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206672:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206704:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206720:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206736:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206752:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206768:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4244112);\n
}\n
", "4206784:__cxx_global_var_init": "extern unsigned long long workers;\n
\n
long long __cxx_global_var_init()\n
{\n
    return List::__base_ctor__(&workers);\n
}\n
", "4206802:sub_4030d2": null, "4206816:_GLOBAL__sub_I_service.cc": "long long _GLOBAL__sub_I_service.cc()\n
{\n
    return __cxx_global_var_init();\n
}\n
", "4206827:sub_4030eb": null, "4206832:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206869:sub_403115": null, "4206870:sub_403116": null, "4206880:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40c2a0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206921:sub_403149": null, "4206928:register_tm_clones": "extern unsigned long long g_40c2b0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206985:sub_403189": null, "4206992:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40c290;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40c290)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207045:sub_4031c5": null, "4207049:sub_4031c9": null, "4207056:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207065:sub_4031d9": null, "4207072:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a1 * a0;\n
    if (a1 * a0 > -1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = cgc_malloc_alloc(&g_heap, v1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memset(v0, 0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4207210:sub_40326a": null, "4207216:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 1;\n
}\n
", "4207250:sub_403292": null, "4207264:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 2;\n
}\n
", "4207298:sub_4032c2": null, "4207312:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 16;\n
}\n
", "4207346:sub_4032f2": null, "4207360:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 14;\n
}\n
", "4207394:sub_403322": null, "4207408:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 12;\n
}\n
", "4207442:sub_403352": null, "4207456:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 4;\n
}\n
", "4207490:sub_403382": null, "4207504:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 8;\n
}\n
", "4207538:sub_4033b2": null, "4207552:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 64;\n
}\n
", "4207586:sub_4033e2": null, "4207600:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 32;\n
}\n
", "4207634:sub_403412": null, "4207648:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return (&__ctype)[a0 & 255] & 128;\n
}\n
", "4207684:sub_403444": null, "4207696:cgc_isxdigit": "long long cgc_isxdigit(unsigned long a0)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x8]\n
    unsigned long long v5;  // rbp\n
\n
    v5 = &v3;\n
    v2 = a0;\n
    v2 = cgc_toupper(v2);\n
    v1 = 1;\n
    if (cgc_isdigit(v2))\n
        return v1 & 1;\n
    v0 = 0;\n
    if (v2 >= 65)\n
        v0 = v2 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4207787:sub_4034ab": null, "4207792:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v0 &= 255;\n
    if (!cgc_isupper(v0))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    v0 ^= 32;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4207863:sub_4034f7": null, "4207872:cgc_digittoint": "long long cgc_digittoint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v0 = cgc_toupper(v0);\n
    if (cgc_isdigit(v0))\n
    {\n
        v1 = v0 - 48;\n
        return v1;\n
    }\n
    if (v0 >= 65 && v0 <= 70)\n
    {\n
        v1 = v0 + -55;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4207978:sub_40356a": null, "4207984:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v0 &= 255;\n
    if (!cgc_isupper(v0))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    v0 ^= 32;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4208055:sub_4035b7": null, "4208064:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc__terminate(v1);\n
    return cgc_exit(v1, v2, v3, v4, v5, v6);\n
}\n
", "4208080:cgc_exit": "long long cgc_exit(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    v0 = a0;\n
    cgc__terminate(a0);\n
    return cgc_fflush(a0, v2, v3, v4, v5, v6);\n
}\n
", "4208112:cgc_fflush": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // rcx\n
    struct_0 *v5;  // rcx\n
\n
    v1 = a0;\n
    if (a0->field_8 == -1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0->field_4 != 1)\n
    {\n
        v0 = 0;\n
        v4 = a0;\n
        ::0x4036f0::cgc_xlat(v1->field_10, &v1[1].field_8 + a0->field_8, v1->field_c - v4->field_8, v4);\n
        v5 = a0;\n
        if (::0x403760::cgc_transmit_all(v1->field_0, &v1[1].field_8 + a0->field_8, v1->field_c - v5->field_8, v5))\n
            v0 = -1;\n
        a0->field_c = 0;\n
        a0->field_8 = 0;\n
        v2 = v0;\n
        return v2;\n
    }\n
    else\n
    {\n
        a0->field_c = 0;\n
        a0->field_8 = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4208354:sub_4036e2": null, "4208368:cgc_xlat": "long long cgc_xlat(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
\n
    v1 = a1;\n
    if (!a0)\n
        return a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
            break;\n
        v1[v0] = a0[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4208479:sub_40375f": null, "4208480:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_transmit(a0, a1, a2, v6))\n
        {\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4208611:sub_4037e3": null, "4208624:cgc_fbuffered": "long long cgc_fbuffered(unsigned int a0[4], unsigned long a1)\n
{\n
    if (a0[2] != -1)\n
        cgc_fflush(a0);\n
    if (a1)\n
        a0[2] = 0;\n
    else\n
        a0[2] = -1;\n
    a0[3] = 0;\n
    return a0;\n
}\n
", "4208727:sub_403857": null, "4208736:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_malloc(1056);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0->field_0 = a0;\n
    v0->field_4 = (a1 ? 1 : 2);\n
    v0->field_8 = 0;\n
    v0->field_c = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4208887:sub_4038f7": null, "4208896:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x40], Other Possible Types: unsigned long long\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x10], Other Possible Types: unsigned long long\n
    struct_0 *v5;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v6;  // rax\n
\n
    v2 = a2;\n
    v1 = 0;\n
    v5 = a2;\n
    if (a2->field_8 == a2->field_c)\n
        cgc__refill(a2);\n
    if (a2->field_8 != -1)\n
    {\n
        v5 = a2;\n
        v0 = a2->field_c - a2->field_8;\n
        if (v0 > a1)\n
            v0 = a1;\n
        cgc_memcpy(a0, &v2->padding_0[1 + a2->field_8], v0);\n
        v1 = v0 + v1;\n
        v6 = a2;\n
        v6->field_8 = v6->field_8 + v0;\n
        if (a2->field_8 == v2->field_c)\n
        {\n
            a2->field_c = 0;\n
            a2->field_8 = 0;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (v1 >= a1)\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        if (cgc_receive(a0, a1, a2, v5))\n
            break;\n
        if (!v0)\n
            break;\n
        ::0x403b50::cgc_xlat(a2->field_18, a0 + v1, v0);\n
        v1 = v0 + v1;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4209269:sub_403a75": null, "4209280:cgc__refill": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc__refill(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v7;  // rcx\n
\n
    if (a0->field_8 == a0->field_c)\n
    {\n
        a0->field_c = 0;\n
        a0->field_8 = 0;\n
    }\n
    if (!cgc_receive(a0, v3, v4, v5) && *(&v0))\n
    {\n
        v7 = *(&v0);\n
        a0->field_c = v7;\n
        ::0x403b50::cgc_xlat(a0->field_18, a0 + 1, a0->field_c, v7);\n
        v1 = *(&v0);\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4209474:sub_403b42": null, "4209488:cgc_xlat": "long long cgc_xlat(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
\n
    v1 = a1;\n
    if (!a0)\n
        return a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
            break;\n
        v1[v0] = a0[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4209599:sub_403bbf": null, "4209600:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    char *v2;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v2 = 0; v2 < a1 - 1; v2 += 1)\n
    {\n
        v1 = cgc__getc(a3);\n
        if (v1 == -1)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        if (v1 == a2)\n
            break;\n
        *((a0 + v2)) = v1;\n
    }\n
    if (v2 == a1 - 1)\n
    {\n
        do\n
        {\n
            v0 = cgc__getc(a3);\n
            if (v0 == -1)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
        } while (v0 != a2);\n
    }\n
    *((a0 + v2)) = 0;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4209868:sub_403ccc": null, "4209872:cgc__getc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    char *field_18;\n
} struct_0;\n
\n
long long cgc__getc(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x28]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v8;  // rcx\n
\n
    if (a0->field_8 == -1)\n
    {\n
        if (!cgc_receive(a0, v4, v5, v6) && *(&v0))\n
        {\n
            ::0x403b50::cgc_xlat(a0->field_18, &v1, 1);\n
            v2 = v1;\n
            return v2;\n
        }\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        if (a0->field_8 == a0->field_c && cgc__refill(a0) < 0)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        v8 = a0->field_8;\n
        a0->field_8 = v8 + 1;\n
        v2 = a0[1].padding_0[v8];\n
        return v2;\n
    }\n
}\n
", "4210082:sub_403da2": null, "4210096:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4210130:sub_403dd2": null, "4210144:cgc_fwrite": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long long v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rcx\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rax\n
\n
    v2 = a2;\n
    v1 = 0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            if (a2->field_c + a1 >= 0x400)\n
            {\n
                v5 = a2->field_c;\n
                v0 = 0x400 - v5;\n
                cgc_memcpy(&a2[1].field_8 + v2->field_c, a0, v0, v5);\n
                v6 = a2;\n
                v6->field_c = v6->field_c + v0;\n
                v1 = v0 + v1;\n
                cgc_fflush(a2);\n
            }\n
            if (v1 < a1)\n
            {\n
                v0 = a1 - v1;\n
                cgc_memcpy(&a2[1].field_8 + v2->field_c, a0 + v1, v0);\n
                v7 = a2;\n
                v7->field_c = v7->field_c + v0;\n
                v1 = v0 + v1;\n
            }\n
            v3 = v1;\n
            return v3;\n
        }\n
    }\n
    if (a2->field_10)\n
    {\n
        if (cgc_transmit_xlat(v2->field_0, a2->field_10, a0, a1))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    else\n
    {\n
        if (::0x403fa0::cgc_transmit_all(a2->field_0, a0, a1))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4210580:sub_403f94": null, "4210592:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (cgc_transmit(a0, a1, a2, v6))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v1 = *(&v0) + v1;\n
    }\n
}\n
", "4210723:sub_404023": null, "4210736:cgc_transmit_xlat": "long long cgc_transmit_xlat(unsigned long a0, unsigned long long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x448], Other Possible Types: unsigned long long\n
    void* v1;  // [bp-0x440], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x438]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a3)\n
        {\n
            v0 = a3 - v1;\n
            if (v0 > 0x400)\n
                v0 = 0x400;\n
            cgc_memcpy(&v2, a2 + v1, v0);\n
            ::0x404130::cgc_xlat(a1, &v2, v0);\n
            if (::0x403fa0::cgc_transmit_all(a0, &v2, v0))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4210985:sub_404129": null, "4210992:cgc_xlat": "long long cgc_xlat(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
\n
    v1 = a1;\n
    if (!a0)\n
        return a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
            break;\n
        v1[v0] = a0[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211103:sub_40419f": null, "4211104:cgc_fxlat": "long long cgc_fxlat(unsigned long long a0[4], unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char *v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v7;  // rax\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
    char *v9;  // rax\n
\n
    if (!a1)\n
    {\n
        cgc_free(a0[2]);\n
        a0[2] = 0;\n
        a0[3] = 0;\n
        return a0;\n
    }\n
    v7 = cgc_realloc(a0[2], 0x100);\n
    a0[2] = v7;\n
    v3 = v7;\n
    v9 = cgc_realloc(a0[3], 0x100);\n
    a0[3] = v9;\n
    v2 = v9;\n
    v8 = cgc_hash_seed(a1);\n
    v5 = v8;\n
    for (v4 = 0; v4 < 0x100; v4 = v8)\n
    {\n
        v3[v4] = v4;\n
        v8 = v4 + 1;\n
    }\n
    for (v4 = 255; v4 >= 1; v4 = v8)\n
    {\n
        v1 = (0 CONCAT v5) /m v4 >> 32;\n
        v5 *= 3;\n
        v5 = v5 * 0x2000 ^ (v5 >> 19) ^ (v5 >> 21);\n
        v0 = v3[v4];\n
        v3[v4] = v3[v1];\n
        v3[v1] = v0;\n
        v8 = v4 - 1;\n
    }\n
    for (v4 = 0; v4 < 0x100; v4 = v8)\n
    {\n
        v2[v3[v4]] = v4;\n
        v8 = v4 + 1;\n
    }\n
    return v8;\n
}\n
", "4211480:sub_404318": null, "4211488:cgc_hash_seed": "long long cgc_hash_seed(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v0 = 826981510;\n
    for (v1 = 0; a0[v1]; v1 += 1)\n
    {\n
        v0 *= 37;\n
        v0 = a0[v1] ^ v0;\n
        v0 = v0 * 0x2000 ^ (v0 >> 19);\n
    }\n
    return v0;\n
}\n
", "4211590:sub_404386": null, "4211600:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4211634:sub_4043b2": null, "4211648:cgc_malloc_alloc": "long long cgc_malloc_alloc(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20], Other Possible Types: unsigned long long\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    if (v1 > 2147483647)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v1 - -3 & -4;\n
    if (v1 < 4)\n
    {\n
        v0 = cgc_tiny_alloc(a0, 4);\n
    }\n
    else if (v1 < 16)\n
    {\n
        v0 = cgc_tiny_alloc(a0, v1);\n
    }\n
    else if (v1 < 0x20000)\n
    {\n
        v0 = cgc_small_alloc(a0, v1);\n
    }\n
    else\n
    {\n
        v0 = cgc_large_alloc(a0, v1);\n
    }\n
    v2 = v0;\n
    return v2;\n
}\n
", "4211859:sub_404493": null, "4211872:cgc_tiny_alloc": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_8[5160];\n
    unsigned long long field_1430;\n
    unsigned long long field_1438;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_tiny_alloc(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long *v0;  // [bp-0x40]\n
    unsigned short v1[2];  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long *v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned long long *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned short v7[2];  // rax\n
    struct_0 *v8;  // rax\n
    unsigned short v9[2];  // rax\n
\n
    v4 = a0;\n
    v3 = cgc_size_to_bin(a1);\n
    v2 = &(&a0->field_0)[v3]->field_0;\n
    if (v2)\n
    {\n
        (&a0->field_0)[v3] = *(v2);\n
        v5 = v2;\n
        return v5;\n
    }\n
    *(&v1) = *(&a0->padding_8[5136 + 8 * v3]);\n
    if (!v1)\n
    {\n
        if (!a0->field_1430)\n
        {\n
            a0->field_1430 = cgc_run_alloc(a0, 1);\n
            if (!a0->field_1430)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            a0->field_1438 = 0;\n
        }\n
        v7 = v4->field_1430 + a0->field_1438;\n
        *(&a0->padding_8[5136 + 8 * v3]) = v7;\n
        v1 = v7;\n
        *(v1) = a1;\n
        *((v1 + 2)) = a1;\n
        v8 = a0;\n
        v8->field_1438 = v8->field_1438 + 0x1000;\n
        if (a0->field_1438 == 0x100000)\n
            a0->field_1430 = 0;\n
    }\n
    v0 = v1 + *((v1 + 2));\n
    v9 = v1;\n
    v9[1] = v9[1] + a1;\n
    if (*((v1 + 2)) + *(v1) > 0x1000)\n
        *(&a0->padding_8[5136 + 8 * v3]) = 0;\n
    v5 = v0;\n
    return v5;\n
}\n
", "4212326:sub_404666": null, "4212336:cgc_small_alloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long cgc_small_alloc(struct struct_0 **a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a1 - -31 & -0x10;\n
    for (v2 = cgc_size_to_bin(v1); v2 < 131; v2 += 1)\n
    {\n
        for (v0 = a0[v2]; v0; v0 = v0->field_18)\n
        {\n
            if (v0->field_8 >= v1)\n
                break;\n
        }\n
        if (v0)\n
            break;\n
    }\n
    if (v2 == 131)\n
    {\n
        if (!cgc_small_alloc_run(a0))\n
        {\n
            v2 = 130;\n
            v0 = a0[v2];\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    cgc_small_unlink_free(a0, v2, v0);\n
    if (*((v0 + 8)) - v1 > 32)\n
        cgc_small_split(a0, v0, v1);\n
    v3 = v0 + 16;\n
    return v3;\n
}\n
", "4212652:sub_4047ac": null, "4212656:cgc_large_alloc": "long long cgc_large_alloc(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x38]\n
    char v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rdx\n
\n
    v2 = a1 - -4111 & -0x1000;\n
    if (cgc_allocate(a0, a1, v5))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0[0] = *(&v1);\n
    v0[0] = a0;\n
    v0[1] = v2;\n
    v3 = v0 + 1;\n
    return v3;\n
}\n
", "4212790:sub_404836": null, "4212800:malloc_free": "long long malloc_free(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long long v2;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = *((a0 + (a1 >> 20) + 1048));\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        return *((a0 + (a1 >> 20) + 1048));\n
    }\n
    else if (v0)\n
    {\n
        if (v0 == 2)\n
        {\n
            v2 = cgc_small_free(a0, a1);\n
        }\n
        else if (v0 == 1)\n
        {\n
            v2 = cgc_tiny_free(a0, a1);\n
        }\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_large_free(a0, a1);\n
        return v2;\n
    }\n
}\n
", "4212971:sub_4048eb": null, "4212976:cgc_large_free": "long long cgc_large_free(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x28]\n
\n
    if ((a1 & 4095) != 16)\n
        cgc_heap_error(\"BAD FREE: large address is not aligned ptr=%08X\\n
\", a1);\n
    v0[0] = a1 - 16;\n
    if (v0[0] != a0)\n
        cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1, v0[0], a0);\n
    if (v0[1] >= 0x20000 && v0[1] <= 2147487743 && !(v0[1] & 4095))\n
        return cgc_deallocate(a0, a1);\n
    cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", a1, v0[1]);\n
    return cgc_deallocate(a0, a1);\n
}\n
", "4213202:sub_4049d2": null, "4213216:cgc_small_free": "long long cgc_small_free(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x58]\n
    unsigned long long v1;  // [bp-0x50]\n
    unsigned long long v2;  // [bp-0x48]\n
    unsigned long v3;  // [bp-0x40]\n
    unsigned long long v4[2];  // [bp-0x38]\n
    unsigned long long v5[2];  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long long v6[2];  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v8[2];  // rax\n
    unsigned long long v9[2];  // rax\n
\n
    v6[0] = a1 - 16;\n
    v3 = a1 & -0x100000;\n
    if ((a1 & 7))\n
        cgc_heap_error(\"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\", a1);\n
    if ((v6[1] & 1))\n
        cgc_heap_error(\"BAD SMALL FREE: double free ptr=%08x\\n
\", a1);\n
    if (v6[1] <= 0x20000 && !(v6[1] < 16))\n
        goto LABEL_404a89;\n
    cgc_heap_error(\"BAD SMALL FREE: corrupted size ptr=%08x\\n
\", a1);\n
LABEL_404a89:\n
    if (!v6[0])\n
        v5[0] = 0;\n
    else\n
        v5 = v6 - v6[0];\n
    v4[0] = v6 + v6[1];\n
    if (v5 && (*((v5 + 8)) & -2) != v6[0])\n
        cgc_heap_error(\"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\", v5, a1);\n
    if (v4[0] != v6[1])\n
        cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v4, a1);\n
    if (v5 && (*((v5 + 8)) & 1))\n
    {\n
        v2 = a0;\n
        cgc_small_unlink_free(v2, cgc_size_to_bin(*((v5 + 8)) & -2), v5);\n
        v8 = v5;\n
        v8[1] = v6[1] + v8[1];\n
        v6 = v5;\n
        v4[0] = *((v6 + 8));\n
    }\n
    if ((v4[1] & 1))\n
    {\n
        v1 = a0;\n
        cgc_small_unlink_free(v1, cgc_size_to_bin(v4[1] & -2), v4);\n
        v9 = v6;\n
        v9[1] = v4[1] + v9[1];\n
        v4[0] = v6 + v6[1];\n
        v4[0] = *((v6 + 8));\n
    }\n
    v0 = a0;\n
    return cgc_small_insert_free(v0, cgc_size_to_bin(*((v6 + 8))), v6);\n
}\n
", "4213823:sub_404c3f": null, "4213824:cgc_tiny_free": "long long cgc_tiny_free(unsigned long long *a0, unsigned long long *a1)\n
{\n
    unsigned short *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
\n
    v0 = a1 & -0x1000;\n
    v1 = cgc_size_to_bin(*(v0));\n
    *(a1) = a0[v1];\n
    a0[v1] = a1;\n
    return a0;\n
}\n
", "4213921:sub_404ca1": null, "4213936:cgc_malloc_size": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, unsigned long a1)\n
{\n
    unsigned short *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = *((a0 + (a1 >> 20) + 1048));\n
    if (v2 != 2 && v2)\n
    {\n
        if (v2 == 1)\n
        {\n
            v0 = a1 & -0x1000;\n
            v3 = *(v0);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = a1 - 16;\n
    v3 = v1->field_8 - 16;\n
    return v3;\n
}\n
", "4214092:sub_404d4c": null, "4214096:cgc_malloc_realloc": "long long cgc_malloc_realloc(unsigned long a0, unsigned long a1, unsigned int a2)\n
{\n
    unsigned long long v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a2 > 2147483647)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        v3 = cgc_malloc_alloc(a0, a2);\n
        return v3;\n
    }\n
    else if (cgc_malloc_size(a0, a1) < a2)\n
    {\n
        v2 = cgc_malloc_alloc(a0, a2);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = v2;\n
        v1 = a1;\n
        cgc_memcpy(v0, v1, cgc_malloc_size(a0, a1));\n
        malloc_free(a0, a1);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = a1;\n
        return v3;\n
    }\n
}\n
", "4214366:sub_404e5e": null, "4214368:cgc_size_to_bin": "long long cgc_size_to_bin(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < 16)\n
    {\n
        v0 = a0 / 4 - 1;\n
        return v0;\n
    }\n
    else if (a0 <= 0x200)\n
    {\n
        v0 = a0 / 16 - -2;\n
        return v0;\n
    }\n
    else if (a0 <= 0x1200)\n
    {\n
        v0 = (a0 - 0x200 >> 7) - -34;\n
        return v0;\n
    }\n
    else if (a0 <= 0x20000)\n
    {\n
        v0 = (a0 - 0x1200 >> 11) - -66;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 130;\n
        return v0;\n
    }\n
}\n
", "4214551:sub_404f17": null, "4214560:cgc_run_alloc": "long long cgc_run_alloc(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rdx\n
\n
    if (cgc_allocate(a0, a1, v5))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = *(&v0);\n
    v1 = v2 - -1048575 & -0x100000;\n
    if (v2 < v1)\n
        cgc_deallocate(a0, a1);\n
    if (v1 + 0x100000 < v2 + 0x200000)\n
        cgc_deallocate(a0, a1);\n
    *((a0 + (v1 >> 20) + 1048)) = a1;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4214787:sub_405003": null, "4214800:cgc_small_alloc_run": "long long cgc_small_alloc_run(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1[2];  // [bp-0x28]\n
    unsigned long long v2[2];  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v0 = cgc_run_alloc(a0, 2);\n
    if (!v0)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    v2[0] = v0 - -19 & -0x10;\n
    v2[0] = 0;\n
    v2[1] = 0x100000 - (v2 - v0) - 32;\n
    v1[0] = v2 + v2[1];\n
    v5 = v2[1];\n
    v1[0] = v5;\n
    v1[1] = 0;\n
    cgc_small_insert_free(a0, 130, v2, v5);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4215004:sub_4050dc": null, "4215008:cgc_small_unlink_free": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_small_unlink_free(unsigned long long *a0, unsigned long a1, struct_2 *a2)\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    struct_2 *v2;  // rax\n
\n
    v0 = a2;\n
    if (!(a2->field_8 & 1))\n
        cgc_heap_error(\"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\", a2);\n
    v2 = a2;\n
    v2->field_8 = v2->field_8 & -2;\n
    if (a2->field_10)\n
        a2->field_10->field_18 = v0->field_18;\n
    if (a2->field_18)\n
        a2->field_18->field_10 = v0->field_10;\n
    if (a0[a1] == a2)\n
        a0[a1] = a2->field_18;\n
    a2->field_10 = 0;\n
    a2->field_18 = 0;\n
    return a2;\n
}\n
", "4215227:sub_4051bb": null, "4215232:cgc_small_split": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_small_split(unsigned long long a0, struct_0 *a1, unsigned long a2)\n
{\n
    unsigned long long *v0;  // [bp-0x38]\n
    unsigned long long v1[2];  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x28]\n
\n
    *(&v2) = a1->field_8 - a2;\n
    v1[0] = &a1->padding_0[a2];\n
    v0 = &a1->padding_0[a1->field_8];\n
    a1->field_8 = a2;\n
    v1[0] = a1->field_8;\n
    v1[1] = *(&v2);\n
    *(v0) = *(&v2);\n
    return cgc_small_insert_free(a0, cgc_size_to_bin(*(&v2)), v1);\n
}\n
", "4215388:sub_40525c": null, "4215392:cgc_small_insert_free": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long cgc_small_insert_free(unsigned long a0, unsigned long a1, struct_0 *a2)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if ((a2->field_8 & 1) == 1)\n
        cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\", a2);\n
    v1 = a2;\n
    v1->field_8 = v1->field_8 | 1;\n
    a2->field_10 = 0;\n
    a2->field_18 = *((a0 + a1 * 8));\n
    *((a0 + a1 * 8)) = a2;\n
    v2 = a2;\n
    if (a2->field_18)\n
    {\n
        v2 = a2->field_18;\n
        v2->field_10 = a2;\n
    }\n
    return v2;\n
}\n
", "4215554:sub_405302": null, "4215568:cgc_heap_error": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    char v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    unsigned long v3;  // [bp-0xc0]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    struct_0 *v16;  // [bp-0x20]\n
    unsigned long v17;  // [bp-0x18]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v6 = v20;\n
        v7 = v21;\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
    }\n
    v5 = v28;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 8;\n
    cgc_vfprintf(cgc_stderr, a0, &v14, &v18);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, a2, a3, a4, v28);\n
}\n
", "4215744:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[a0] == a1)\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4215863:sub_405437": null, "4215872:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0[a0] != v0[a1])\n
        {\n
            v1 = *((a0 + v0)) - *((a1 + v0));\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4216026:sub_4054da": null, "4216032:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return a0;\n
}\n
", "4216131:sub_405543": null, "4216144:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    if (a0 > a1)\n
    {\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            a0[1 + a2 + -1 * v0] = *((a1 + a2 - v0 - 1));\n
        }\n
        return a0;\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            a0[v0] = *((a1 + v0));\n
        }\n
        return a0;\n
    }\n
}\n
", "4216344:sub_405618": null, "4216352:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = a1;\n
    }\n
    return a0;\n
}\n
", "4216436:sub_405674": null, "4216448:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned int v18;  // [bp-0x14]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v17 = &v0;\n
    v16 = &v19;\n
    v15 = 48;\n
    v14 = 8;\n
    v18 = cgc_vprintf(a0, &v14);\n
    return v18;\n
}\n
", "4216608:cgc_vprintf": "extern unsigned long long cgc_stdout;\n
\n
long long cgc_vprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    return cgc_vfprintf(cgc_stdout, a0, a1);\n
}\n
", "4216653:sub_40574d": null, "4216656:cgc_fprintf": "long long cgc_fprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xd8]\n
    unsigned long v2;  // [bp-0xd0]\n
    unsigned long v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    int v5;  // [bp-0xb8]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    unsigned int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned long v15;  // [bp-0x30]\n
    unsigned long v16;  // [bp-0x28]\n
    unsigned int v17;  // [bp-0x1c]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v16 = &v0;\n
    v15 = &v18;\n
    v14 = 48;\n
    v13 = 16;\n
    v17 = cgc_vfprintf(a0, a1, &v13);\n
    return v17;\n
}\n
", "4216817:sub_4057f1": null, "4216832:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
\n
    v0 = 1;\n
    if (a0->field_8 == -1)\n
    {\n
        v0 = 0;\n
        a0->field_8 = 0;\n
    }\n
    v1 = cgc__vsfprintf(a1, a2, a0, 0, 2147483647);\n
    if (!v0)\n
    {\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4216960:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xd8]\n
    unsigned long v2;  // [bp-0xd0]\n
    unsigned long v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    int v5;  // [bp-0xb8]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    unsigned int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x34]\n
    unsigned long v15;  // [bp-0x30]\n
    unsigned long v16;  // [bp-0x28]\n
    unsigned int v17;  // [bp-0x1c]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v16 = &v0;\n
    v15 = &v18;\n
    v14 = 48;\n
    v13 = 16;\n
    v17 = cgc_vsprintf(a0, a1, &v13);\n
    return v17;\n
}\n
", "4217121:sub_405921": null, "4217136:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0, 2147483647);\n
}\n
", "4217189:sub_405965": null, "4217200:cgc__vsfprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
long long cgc__vsfprintf(struct_0 *a0, struct_1 *a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    unsigned long long *v0;  // [bp-0x178]\n
    struct_1 *v1;  // [bp-0x170]\n
    unsigned int v2;  // [bp-0x164]\n
    unsigned int *v3;  // [bp-0x160], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x158]\n
    unsigned int v5;  // [bp-0x14c]\n
    unsigned int *v6;  // [bp-0x148], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x140]\n
    unsigned int v8;  // [bp-0x134]\n
    unsigned int *v9;  // [bp-0x130], Other Possible Types: unsigned long\n
    struct_1 *v10;  // [bp-0x128]\n
    unsigned int v11;  // [bp-0x11c]\n
    unsigned int v12;  // [bp-0x118]\n
    unsigned int v13;  // [bp-0x114]\n
    unsigned int v14;  // [bp-0x110]\n
    char v15;  // [bp-0x109]\n
    unsigned long v16;  // [bp-0x108]\n
    unsigned long v17;  // [bp-0x100]\n
    char v18;  // [bp-0xf1]\n
    unsigned long v19;  // [bp-0xf0]\n
    unsigned long v20;  // [bp-0xe8]\n
    char v21;  // [bp-0xd9]\n
    unsigned long v22;  // [bp-0xd8]\n
    unsigned long v23;  // [bp-0xd0]\n
    unsigned long v24;  // [bp-0xc8]\n
    unsigned long v25;  // [bp-0xc0]\n
    char v26;  // [bp-0xb1]\n
    unsigned int v27;  // [bp-0xb0]\n
    unsigned int v28;  // [bp-0xac]\n
    unsigned long v29;  // [bp-0xa8]\n
    struct_0 *v30;  // [bp-0xa0]\n
    char v31;  // [bp-0x91]\n
    unsigned long v32;  // [bp-0x90]\n
    char v33;  // [bp-0x88]\n
    char *v34;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned int v35;  // [bp-0x3c]\n
    unsigned int v36;  // [bp-0x38]\n
    char v37;  // [bp-0x31]\n
    char *v38;  // [bp-0x28]\n
    void* v39;  // [bp-0x20]\n
    struct_1 *v40;  // [bp-0x18]\n
    struct_0 *v41;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v43;  // rax\n
    char *v44;  // rax\n
    struct_0 *v45;  // rax\n
    struct_0 *v46;  // rax\n
    struct_0 *v48;  // rax\n
    struct_0 *v50;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned long long v53;  // rdx\n
    unsigned int *v54;  // rax\n
    struct_1 *v55;  // rcx\n
    unsigned int *v56;  // rdx\n
    struct_1 *v57;  // rcx\n
    unsigned long long v58;  // rdx\n
    unsigned long long *v59;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v60;  // rcx\n
    char *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned long long v63;  // rdx\n
    unsigned int *v64;  // rax\n
    struct_1 *v65;  // rcx\n
    unsigned int *v66;  // rdx\n
    struct_1 *v67;  // rcx\n
    unsigned long long v68;  // rdx\n
    unsigned int *v69;  // rax\n
    struct_1 *v70;  // rcx\n
    unsigned int *v71;  // rdx\n
    unsigned long long v72;  // rsi\n
    unsigned long v73;  // rdx\n
    unsigned long v74;  // rcx\n
    char *v75;  // rax\n
    char *v76;  // rax\n
\n
    v41 = a0;\n
    v40 = a1;\n
    v39 = a2;\n
    v38 = a3;\n
    v34 = 0;\n
    while (true)\n
    {\n
        v43 = v41;\n
        v41 = v43 + 1;\n
        v37 = v43->field_0;\n
        if (!v37)\n
            break;\n
        v31 = 32;\n
        while (v37 != 37)\n
        {\n
            if (v34 >= a4)\n
            {\n
                v44 = v34;\n
                v34 = v44 + 1;\n
                if (v44 == -1)\n
                    cgc__terminate(a0);\n
            }\n
            else\n
            {\n
                v26 = v37;\n
                if (v39)\n
                    cgc_fwrite(&v26, 1, v39);\n
                if (v38)\n
                    v38[v34] = v26;\n
                v34 += 1;\n
            }\n
            v45 = v41;\n
            v41 = v45 + 1;\n
            v37 = v45->field_0;\n
            if (!v37)\n
                goto LABEL_40645c;\n
        }\n
        v30 = v41;\n
        v36 = 4;\n
        v35 = 0;\n
        v46 = v41;\n
        v41 = v46 + 1;\n
        v14 = v46->field_0;\n
        v37 = v14;\n
        if (!v14)\n
            break;\n
        if (v14 == 32)\n
        {\n
            v31 = 32;\n
        }\n
        else if (v14 == 48)\n
        {\n
            v31 = 48;\n
        }\n
        else\n
        {\n
            v41 += 1;\n
        }\n
        if (*(v41) >= 48 && *(v41) <= 57)\n
            v35 = cgc_strtoul(v41, &v41, 10);\n
        v48 = v41;\n
        v41 = v48 + 1;\n
        v13 = v48->field_0;\n
        v37 = v13;\n
        if (!v13)\n
            break;\n
        if (v13 == 104)\n
        {\n
            if (v41->field_0 == 104)\n
            {\n
                v41 += 1;\n
                v36 = 1;\n
            }\n
            else\n
            {\n
                v36 = 2;\n
            }\n
        }\n
        else\n
        {\n
            if (v13 != 108)\n
            {\n
                v41 += 1;\n
            }\n
            else if (v41->field_0 != 108)\n
            {\n
                v36 = 4;\n
            }\n
            else\n
            {\n
                v41 += 1;\n
                v36 = 8;\n
            }\n
        }\n
        v50 = v41;\n
        v41 = v50 + 1;\n
        v12 = v50->field_0;\n
        v37 = v12;\n
        if (!v12)\n
        {\n
            v25 = v41 - v30;\n
            if (v34 >= a4)\n
            {\n
                if (v34 + v25 < v34)\n
                    cgc__terminate(a0);\n
                v34 = v25 + v34;\n
            }\n
            else\n
            {\n
                v24 = a4 - v34;\n
                if (v24 > v25)\n
                    v24 = v25;\n
                if (v39)\n
                    cgc_fwrite(v30, v24, v39);\n
                if (v38)\n
                    cgc_memcpy(&v38[v34], v30, v24);\n
                if (v34 + v25 < v34)\n
                    cgc__terminate(a0);\n
                v34 = v25 + v34;\n
            }\n
            break;\n
        }\n
        if (v12 == 88)\n
        {\n
LABEL_405ebd:\n
            if (v37 == 100)\n
            {\n
                if (!(v36 <= 4))\n
                    break;\n
                v10 = v40;\n
                v11 = v10->field_0;\n
                if (v11 > 40)\n
                {\n
                    v65 = v10;\n
                    v66 = v65->field_8;\n
                    v65->field_8 = &v66[2];\n
                    v9 = v66;\n
                }\n
                else\n
                {\n
                    v62 = v10;\n
                    v63 = v11;\n
                    v64 = v63 + v62->field_10;\n
                    v62->field_0 = v63 + 8;\n
                    v9 = v64;\n
                }\n
                v27 = *(v9);\n
                cgc__convert_signed(&v33, v27, 10, 0);\n
            }\n
            else\n
            {\n
                if (!(v36 <= 4))\n
                    break;\n
                v7 = v40;\n
                v8 = v7->field_0;\n
                if (v8 <= 40)\n
                {\n
                    v67 = v7;\n
                    v68 = v8;\n
                    v69 = v68 + v67->field_10;\n
                    v67->field_0 = v68 + 8;\n
                    v6 = v69;\n
                }\n
                else\n
                {\n
                    v70 = v7;\n
                    v71 = v70->field_8;\n
                    v70->field_8 = &v71[2];\n
                    v6 = v71;\n
                }\n
                v28 = *(v6);\n
                a0 = &v33;\n
                v72 = v28;\n
                v73 = (v37 == 117 ? 16 : 10);\n
                v74 = v37 == 88;\n
                cgc__convert_unsigned();\n
            }\n
            v32 = cgc_strlen(&v33);\n
            if (v32 < v35)\n
            {\n
                v35 -= v32;\n
                do\n
                {\n
                    if (v34 >= a4)\n
                    {\n
                        v75 = v34;\n
                        v34 = v75 + 1;\n
                        if (v75 == -1)\n
                            cgc__terminate(a0);\n
                    }\n
                    else\n
                    {\n
                        v21 = v31;\n
                        if (v39)\n
                            cgc_fwrite(&v21, 1, v39);\n
                        if (v38)\n
                            v38[v34] = v21;\n
                        v34 += 1;\n
                    }\n
                    v35 -= 1;\n
                } while (v35 > 0);\n
            }\n
            v20 = v32;\n
            if (v34 < a4)\n
            {\n
                v19 = a4 - v34;\n
                if (v19 > v20)\n
                    v19 = v20;\n
                if (v39)\n
                    cgc_fwrite(&v33, v19, v39);\n
                if (v38)\n
                    cgc_memcpy(&v38[v34], &v33, v19);\n
                if (v34 + v20 < v34)\n
                    cgc__terminate(a0);\n
                v34 = v20 + v34;\n
            }\n
            else\n
            {\n
                if (v34 + v20 < v34)\n
                    cgc__terminate(a0);\n
                v34 = v20 + v34;\n
            }\n
            goto LABEL_40644d;\n
        }\n
        else\n
        {\n
            if (v12 == 99)\n
            {\n
                v4 = v40;\n
                v5 = v4->field_0;\n
                if (v5 > 40)\n
                {\n
                    v55 = v4;\n
                    v56 = v55->field_8;\n
                    v55->field_8 = &v56[2];\n
                    v3 = v56;\n
                }\n
                else\n
                {\n
                    v52 = v4;\n
                    v53 = v5;\n
                    v54 = v53 + v52->field_10;\n
                    v52->field_0 = v53 + 8;\n
                    v3 = v54;\n
                }\n
                v37 = *(v3);\n
                if (v34 >= a4)\n
                {\n
                    v61 = v34;\n
                    v34 = v61 + 1;\n
                    if (v61 == -1)\n
                        cgc__terminate(a0);\n
                }\n
                else\n
                {\n
                    v18 = v37;\n
                    if (v39)\n
                        cgc_fwrite(&v18, 1, v39);\n
                    if (v38)\n
                        v38[v34] = v18;\n
                    v34 += 1;\n
                }\n
                goto LABEL_40644d;\n
            }\n
            if (v12 == 100)\n
                goto LABEL_405ebd;\n
            if (v12 == 115)\n
            {\n
                v1 = v40;\n
                v2 = v1->field_0;\n
                if (v2 <= 40)\n
                {\n
                    v57 = v1;\n
                    v58 = v2;\n
                    v59 = v58 + v57->field_10;\n
                    v57->field_0 = v58 + 8;\n
                }\n
                else\n
                {\n
                    v60 = v1;\n
                    v59 = v60->field_8;\n
                    v60->field_8 = v59 + 8;\n
                }\n
                v0 = v59;\n
                v29 = *(v0);\n
                v17 = cgc_strlen(v29);\n
                if (v34 >= a4)\n
                {\n
                    if (v34 + v17 < v34)\n
                        cgc__terminate(a0);\n
                    v34 = v17 + v34;\n
                }\n
                else\n
                {\n
                    v16 = a4 - v34;\n
                    if (v16 > v17)\n
                        v16 = v17;\n
                    if (v39)\n
                        cgc_fwrite(v29, v16, v39);\n
                    if (v38)\n
                        cgc_memcpy(&v38[v34], v29, v16);\n
                    if (v34 + v17 < v34)\n
                        cgc__terminate(a0);\n
                    v34 = v17 + v34;\n
                }\n
LABEL_40644d:\n
            }\n
            else if (v12 != 117 && v12 != 120)\n
            {\n
                v23 = v41 - v30;\n
                if (v34 >= a4)\n
                {\n
                    if (v34 + v23 < v34)\n
                        cgc__terminate(a0);\n
                    v34 = v23 + v34;\n
                }\n
                else\n
                {\n
                    v22 = a4 - v34;\n
                    if (v22 > v23)\n
                        v22 = v23;\n
                    if (v39)\n
                        cgc_fwrite(v30, v22, v39);\n
                    if (v38)\n
                        cgc_memcpy(&v38[v34], v30, v22);\n
                    if (v34 + v23 < v34)\n
                        cgc__terminate(a0);\n
                    v34 = v23 + v34;\n
                }\n
                goto LABEL_40644d;\n
            }\n
        }\n
    }\n
LABEL_40645c:\n
    v39 = 0;\n
    if (v34 >= a4)\n
    {\n
        v76 = v34;\n
        v34 = v76 + 1;\n
        if (v76 != -1)\n
            return v34 - 1;\n
        cgc__terminate(a0);\n
    }\n
    else\n
    {\n
        v15 = 0;\n
        if (v39)\n
            cgc_fwrite(&v15, 1, v39);\n
        if (v38)\n
            v38[v34] = v15;\n
        v34 += 1;\n
        return v34 - 1;\n
    }\n
}\n
", "4220153:sub_4064f9": null, "4220160:cgc__convert_signed": "long long cgc__convert_signed(char *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (v0 < 0)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = 45;\n
        v0 = -(v0);\n
    }\n
    return cgc__convert_unsigned(v1, v0, a2, a3);\n
}\n
", "4220241:sub_406551": null, "4220256:cgc__convert_unsigned": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
long long cgc__convert_unsigned(char *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v5;  // rax\n
    struct_0 *v6;  // rax\n
    struct_0 *v7;  // rax\n
\n
    v3 = a1;\n
    v1 = &a0[20];\n
    if (a3)\n
        v2 = \"0123456789ABCDEF\";\n
    else\n
        v2 = \"0123456789abcdef\";\n
    v5 = v1;\n
    v1 = v5 + 1;\n
    v5[1].field_-1 = 0;\n
    if (!v3)\n
    {\n
        v6 = v1;\n
        v1 = v6 + 1;\n
        v6[1].field_-1 = *(v2);\n
        return cgc_memmove(a0, v1, 20 + -0x1 * &a0[-1 * v1]);\n
    }\n
    while (true)\n
    {\n
        v0 = v2;\n
        v7 = v1;\n
        v1 = v7 + 1;\n
        v7[1].field_-1 = v0[(0 CONCAT v3) /m a2 >> 32];\n
        v3 = (0 CONCAT v3) /m a2;\n
    }\n
}\n
", "4220501:sub_406655": null, "4220512:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(unsigned int a0, unsigned long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4220554:sub_40668a": null, "4220560:cgc_strcasecmp": "long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
            {\n
                v0 = cgc_tolower(*(v3));\n
                v1 = v0 == cgc_tolower(*(v2));\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return *(v3) - *(v2);\n
}\n
", "4220725:sub_406735": null, "4220736:cgc_strcasestr": "long long cgc_strcasestr(char *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_strlen(a1);\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!a0[v1])\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strncasecmp(&a0[v1], a1, v0))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4220880:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; a0[v0]; v0 += 1)\n
    {\n
        if (a0[v0] == a1)\n
        {\n
            v1 = &a0[v0];\n
            return v1;\n
        }\n
    }\n
    if (a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = &a0[v0];\n
    return v1;\n
}\n
", "4221019:sub_40685b": null, "4221024:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v1))\n
                v0 = *(v2) == *(v1);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4221163:sub_4068eb": null, "4221168:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    for (v0 = a0; *(v1); v0 += 1)\n
    {\n
        *(v0) = *(v1);\n
        v1 += 1;\n
    }\n
    *(v0) = 0;\n
    return a0;\n
}\n
", "4221258:sub_40694a": null, "4221264:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_strlen(a0);\n
    v0 = cgc_malloc(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memcpy(v0, a0, v1);\n
    v1[v0] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4221377:sub_4069c1": null, "4221392:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221455:sub_406a0f": null, "4221456:cgc_strncasecmp": "long long cgc_strncasecmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x31]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = &v4[a2];\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v4))\n
        {\n
            v1 = 0;\n
            if (*(v3))\n
            {\n
                v0 = cgc_tolower(*(v4));\n
                v1 = 0;\n
                if (v0 == cgc_tolower(*(v3)))\n
                    v1 = v4 < v2;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    if (v4 == v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = *(v4) - *(v3);\n
    return v5;\n
}\n
", "4221688:sub_406af8": null, "4221696:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    v1 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = v1 - a0 < a2;\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(v2);\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    for (; v1 - a0 < a2; v1 += 1)\n
    {\n
        *(v1) = 0;\n
    }\n
    return a0;\n
}\n
", "4221875:sub_406bb3": null, "4221888:cgc_strndup": "long long cgc_strndup(unsigned long a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_strlen(a0);\n
    if (v1 > a1)\n
        v1 = a1;\n
    v0 = cgc_malloc(v1 + 1);\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memcpy(v0, a0, v1);\n
    *((v0 + v1)) = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4222027:sub_406c4b": null, "4222032:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = &*(a0)->field_0;\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v0[v1]; v1 += 1)\n
    {\n
        if (cgc_strchr(a1, v0[v1]))\n
            break;\n
    }\n
    if (!v0[v1])\n
        *(a0) = 0;\n
    else\n
        *(a0) = &v0[1 + v1];\n
    v0[v1] = 0;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4222251:sub_406d2b": null, "4222256:cgc_strstr": "long long cgc_strstr(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!a0[v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_strcmp(&a0[v0], a1))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &a0[v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4222383:sub_406daf": null, "4222384:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x68], Other Possible Types: unsigned long long\n
    unsigned long v1;  // [bp-0x60], Other Possible Types: unsigned long long\n
    char v2[2];  // [bp-0x58], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x4c]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x3c]\n
    unsigned int v6;  // [bp-0x38]\n
    unsigned int v7;  // [bp-0x34]\n
    char v8[2];  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x24], Other Possible Types: unsigned long\n
    char v10[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v11;  // [bp-0x10]\n
\n
    *(&v10) = a0;\n
    v9 = a2;\n
    *(&v8) = v10;\n
    v7 = 1;\n
    v6 = 1;\n
    v5 = 0;\n
    for (v4 = 0; cgc_isspace(*(v10)); v10 += 1)\n
    {\n
        if (!*(v10))\n
            goto LABEL_406f6c;\n
    }\n
    if (*(v10) == 43)\n
    {\n
        v7 = 1;\n
        v10 += 1;\n
    }\n
    else if (*(v10) == 45)\n
    {\n
        v7 = -1;\n
        v10 += 1;\n
    }\n
    if (v9 == 16)\n
    {\n
        if (*(v10) == 48 && cgc_tolower(*((v10 + 1))) == 120)\n
            v10 += 2;\n
        goto LABEL_406f7b;\n
    }\n
    if (v9)\n
    {\n
LABEL_406f7b:\n
        for (; *(v10); v10 += 1)\n
        {\n
            if (cgc_isdigit(*(v10)))\n
            {\n
                v3 = *(v10) - 48;\n
            }\n
            else if (cgc_islower(*(v10)))\n
            {\n
                v3 = *(v10) + -87;\n
            }\n
            else\n
            {\n
                if (!cgc_isupper(*(v10)))\n
                    break;\n
                v3 = *(v10) + -55;\n
            }\n
            if (v3 >= v9)\n
                break;\n
            v6 = 0;\n
            v4 = v9 * v4 + v3;\n
            if (v4 > 2147483647)\n
                v5 = 1;\n
        }\n
    }\n
    if (*(v10) == 48 && *((v10 + 1)) >= 48 && *((v10 + 1)) <= 55)\n
    {\n
        *(&v10) = v10 + 1;\n
        v9 = 8;\n
        goto LABEL_406f6c;\n
    }\n
    if (*(v10) == 48 && cgc_tolower(*((v10 + 1))) == 120)\n
    {\n
        v10 += 2;\n
        v9 = 16;\n
        goto LABEL_406f6c;\n
    }\n
    if (!cgc_isdigit(*(v10)))\n
        goto LABEL_406f6c;\n
    v9 = 10;\n
LABEL_406f6c:\n
    if (a1)\n
    {\n
        if (v6)\n
            *(&v2) = v8;\n
        else\n
            v2 = v10;\n
        *(a1) = v2;\n
    }\n
    if (v7 >= 0)\n
    {\n
        if (v5)\n
            v0 = 2147483647;\n
        else\n
            v0 = v4;\n
        v11 = v0;\n
        return v11;\n
    }\n
    else\n
    {\n
        if (v5)\n
            v1 = -0x80000000;\n
        else\n
            v1 = -(v4);\n
        v11 = v1;\n
        return v11;\n
    }\n
}\n
", "4223256:sub_407118": null, "4223264:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x58], Other Possible Types: unsigned long long\n
    char v1[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x44]\n
    void* v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char v7[2];  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x1c]\n
    char v9[2];  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v9) = a0;\n
    v8 = a2;\n
    *(&v7) = v9;\n
    v6 = 1;\n
    v5 = 1;\n
    v4 = 0;\n
    for (v3 = 0; cgc_isspace(v9[0]); v9 = &v9[1])\n
    {\n
        if (!v9[0])\n
            goto LABEL_4072dc;\n
    }\n
    if (*(v9) == 43)\n
    {\n
        v6 = 1;\n
        v9 = &v9[1];\n
    }\n
    else if (*(v9) == 45)\n
    {\n
        v6 = -1;\n
        v9 = &v9[1];\n
    }\n
    if (v8 == 16)\n
    {\n
        if (*(v9) == 48 && cgc_tolower(*((v9 + 1))) == 120)\n
            v9 += 2;\n
        goto LABEL_4072eb;\n
    }\n
    if (v8)\n
    {\n
LABEL_4072eb:\n
        for (; *(v9); v9 = &v9[1])\n
        {\n
            if (cgc_isdigit(v9[0]))\n
            {\n
                v2 = *(v9) - 48;\n
            }\n
            else if (cgc_islower(v9[0]))\n
            {\n
                v2 = *(v9) + -87;\n
            }\n
            else\n
            {\n
                if (!cgc_isupper(v9[0]))\n
                    break;\n
                v2 = *(v9) + -55;\n
            }\n
            if (v2 >= v8)\n
                break;\n
            v5 = 0;\n
            v3 = v8 * v3 + v2;\n
            if (v3 > 4294967295)\n
                v4 = 1;\n
        }\n
    }\n
    if (*(v9) == 48 && *((v9 + 1)) >= 48 && *((v9 + 1)) <= 55)\n
    {\n
        *(&v9) = &v9[1];\n
        v8 = 8;\n
        goto LABEL_4072dc;\n
    }\n
    if (*(v9) == 48 && cgc_tolower(*((v9 + 1))) == 120)\n
    {\n
        v9 += 2;\n
        v8 = 16;\n
        goto LABEL_4072dc;\n
    }\n
    if (!cgc_isdigit(v9[0]))\n
        goto LABEL_4072dc;\n
    v8 = 10;\n
LABEL_4072dc:\n
    if (a1)\n
    {\n
        if (v5)\n
            *(&v1) = v7;\n
        else\n
            v1 = v9;\n
        *(a1) = v1;\n
    }\n
    if (v6 < 0)\n
    {\n
        if (v3 > 2147483647 && v3 != -0x80000000)\n
            v4 = 1;\n
        v3 = -(v3);\n
    }\n
    if (v4)\n
    {\n
        v0 = 4294967295;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4224125:sub_40747d": null, "4224128:_ZN5DequeC1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::__ctor__(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned long long v3;  // rax\n
    unsigned long v4;  // rdi, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v0 = v1;\n
    v0->field_8 = 0;\n
    v0->field_c = 0;\n
    v0->field_10 = 8;\n
    v3 = v0->field_10;\n
    v4 = v3 * 8;\n
    if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rax<8>, 0x8<64>, cc_ndep<8>))\n
        v4 = -1;\n
    v0->field_0 = operator new[](v4);\n
    return v0;\n
}\n
", "4224218:sub_4074da": null, "4224224:_ZN5DequeD1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::__dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    for (v2 = 0; v2 < a0->field_c; v2 += 1)\n
    {\n
        v1 = (0 CONCAT a0->field_8 + v2) /m a0->field_10 >> 32;\n
        Ticket::DeleteTicket(*((a0->field_0 + v1 * 8)));\n
    }\n
    v4 = a0->field_0;\n
    *(&v0) = v4;\n
    if (v4)\n
        v4 = operator delete(*(&v0));\n
    return v4;\n
}\n
", "4224355:sub_407563": null, "4224368:_ZN5Deque4FindEj": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::Find(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a0->field_10)\n
        {\n
            if (*((a0->field_0 + (v0 << 3))) && Ticket::id(*((a0->field_0 + (v0 << 3)))) == a1)\n
            {\n
                v1 = *((a0->field_0 + v0 * 8));\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4224534:sub_407616": null, "4224544:_ZN5Deque6RemoveEP6Ticket": "long long Deque::Remove(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = a1;\n
    return 0;\n
}\n
", "4224565:sub_407635": null, "4224576:_ZN5Deque6AppendEP6Ticket": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::Append(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v3;  // rax\n
    struct_0 *v4;  // rcx\n
    struct_0 *v5;  // rcx\n
\n
    v0 = a0;\n
    if (!a1)\n
        return a0;\n
    v4 = v0;\n
    if (v4->field_c == v4->field_10)\n
        Deque::Expand(v0);\n
    v5 = v0;\n
    v3 = v0;\n
    v1 = (0 CONCAT v5->field_8 + v5->field_c) /m v5->field_10 >> 32;\n
    *((*(v3) + v1 * 8)) = a1;\n
    *((v3 + 12)) = *((v3 + 12)) + 1;\n
    return v0;\n
}\n
", "4224692:sub_4076b4": null, "4224704:_ZN5Deque6ExpandEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::Expand(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10]\n
    unsigned long long v6;  // rax\n
    unsigned long v7;  // rdi, Other Possible Types: unsigned long long\n
    struct_0 *v8;  // rcx\n
    struct_0 *v9;  // rcx\n
    struct_0 *v10;  // rax\n
    unsigned int v13[5];  // rdx\n
    struct_0 *v14;  // rax\n
\n
    v4 = a0;\n
    v1 = v4;\n
    v3 = v1->field_10 * 2;\n
    v6 = v3;\n
    v7 = v6 * 8;\n
    if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rax<8>, 0x8<64>, cc_ndep<8>))\n
        v7 = -1;\n
    v8 = v1;\n
    *(&v2) = operator new[](v7);\n
    if (v8->field_8 + v8->field_c <= v8->field_10)\n
    {\n
        v10 = v1;\n
        cgc_memcpy(*(&v2), v10->field_0 + v10->field_8 * 8, v10->field_c * 8);\n
    }\n
    else\n
    {\n
        v9 = v1;\n
        cgc_memcpy(*(&v2), v9->field_0 + v9->field_8 * 8, (v9->field_10 - v9->field_8) * 8);\n
        v13 = v1;\n
        cgc_memcpy(*(&v2) + (v13[4] - v13[2]) * 8, *(&v13[0]), (v13[3] - (v13[4] - v13[2])) * 8);\n
    }\n
    *(&v0) = v1->field_0;\n
    if (*(&v0))\n
        operator delete(*(&v0));\n
    v14 = v1;\n
    v14->field_0 = *(&v2);\n
    v14->field_8 = 0;\n
    v14->field_10 = v3;\n
    return v1;\n
}\n
", "4224979:sub_4077d3": null, "4224992:_ZN5Deque10AppendLeftEP6Ticket": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::AppendLeft(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rcx\n
    struct_0 *v4;  // rcx\n
\n
    v0 = a0;\n
    if (!a1)\n
        return a0;\n
    v3 = v0;\n
    if (v3->field_c == v3->field_10)\n
        Deque::Expand(v0);\n
    v4 = v0;\n
    v2 = v0;\n
    *((v2 + 8)) = (0 CONCAT v4->field_8 + v4->field_10 - 1) /m v4->field_10 >> 32;\n
    *((*(v2) + *((v2 + 8)) * 8)) = a1;\n
    *((v2 + 12)) = *((v2 + 12)) + 1;\n
    return v0;\n
}\n
", "4225113:sub_407859": null, "4225120:_ZN5Deque3PopEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::Pop(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v6;  // rdi\n
\n
    v3 = a0;\n
    v0 = v3;\n
    if (!v0->field_c)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v2 = (0 CONCAT v6->field_8 + v6->field_c - 1) /m v6->field_10 >> 32;\n
    v1 = *((v6->field_0 + v2 * 8));\n
    v6->field_c = v6->field_c - 1;\n
    Deque::TryShrink(v6);\n
    v4 = v1;\n
    return v4;\n
}\n
", "4225232:_ZN5Deque9TryShrinkEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::TryShrink(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10]\n
    struct_0 *v6;  // rcx\n
    struct_0 *v7;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v9;  // rax\n
    unsigned long v10;  // rdi, Other Possible Types: unsigned long long\n
    struct_0 *v11;  // rcx\n
    struct_0 *v12;  // rcx\n
    struct_0 *v13;  // rax\n
    unsigned int v16[5];  // rdx\n
\n
    v4 = a0;\n
    v6 = v4;\n
    v1 = v6;\n
    v7 = v6->field_c;\n
    if (v7 >= (v6->field_10 >> 1))\n
        return v7;\n
    v7 = v1;\n
    if (v7->field_10 > 8)\n
    {\n
        v3 = v1->field_10 >> 1;\n
        v9 = v3;\n
        v10 = v9 * 8;\n
        if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rax<8>, 0x8<64>, cc_ndep<8>))\n
            v10 = -1;\n
        v11 = v1;\n
        *(&v2) = operator new[](v10);\n
        if (v11->field_8 + v11->field_c <= v11->field_10)\n
        {\n
            v13 = v1;\n
            cgc_memcpy(*(&v2), v13->field_0 + v13->field_8 * 8, v13->field_c * 8);\n
        }\n
        else\n
        {\n
            v12 = v1;\n
            cgc_memcpy(*(&v2), v12->field_0 + v12->field_8 * 8, (v12->field_10 - v12->field_8) * 8);\n
            v16 = v1;\n
            cgc_memcpy(*(&v2) + (v16[4] - v16[2]) * 8, *(&v16[0]), (v16[3] - (v16[4] - v16[2])) * 8);\n
        }\n
        *(&v0) = v1->field_0;\n
        if (*(&v0))\n
            operator delete(*(&v0));\n
        v7 = v1;\n
        *(v7) = *(&v2);\n
        *((v7 + 8)) = 0;\n
        *((v7 + 16)) = v3;\n
        return v1;\n
    }\n
}\n
", "4225547:sub_407a0b": null, "4225552:_ZN5Deque7PopLeftEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Deque::PopLeft(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v5;  // rdi\n
\n
    v2 = a0;\n
    v0 = v2;\n
    if (!v0->field_c)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5 = v0;\n
    v1 = *((v5->field_0 + v5->field_8 * 8));\n
    v5->field_8 = (0 CONCAT v5->field_8 + 1) /m v5->field_10 >> 32;\n
    v5->field_c = v5->field_c - 1;\n
    Deque::TryShrink(v5);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4225659:sub_407a7b": null, "4225664:_ZN5Deque5CountEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long Deque::Count(struct_0 *a0)\n
{\n
    return a0->field_c;\n
}\n
", "4225681:sub_407a91": null, "4225696:_ZN10DispatcherC1EP4ListPj": "long long Dispatcher::__ctor__(unsigned long long a0[17], unsigned long a1, unsigned long a2)\n
{\n
    unsigned long long v0[17];  // [bp-0x48]\n
    unsigned long long v1[17];  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned long long v3[17];  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v2 = &a0[15];\n
    v3[0] = a0;\n
    do\n
    {\n
        v0[0] = v3;\n
        Deque::__ctor__(v0);\n
        v1[0] = &v0[3];\n
        v3 = v1;\n
    } while (v1 != v2);\n
    a0[15] = a1;\n
    a0[16] = a2;\n
    return a0;\n
}\n
", "4225810:sub_407b12": null, "4225824:_ZN10Dispatcher9AddTicketEP6Ticket": "long long Dispatcher::AddTicket(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (!a1)\n
    {\n
        return a0;\n
    }\n
    else if (Ticket::status(a1) == 1)\n
    {\n
        v2 = Deque::Append(v0 + (Ticket::priority(a1) - 1) * 24, a1);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = Deque::AppendLeft(v0 + (Ticket::priority(a1) - 1) * 24, a1);\n
        return v2;\n
    }\n
}\n
", "4225961:sub_407ba9": null, "4225968:_ZN10Dispatcher12CancelTicketEj": "long long Dispatcher::CancelTicket(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
\n
    for (v6 = 0; v6 < 5; v6 += 1)\n
    {\n
        v5 = a0 + v6 * 24;\n
        v4 = Deque::Count(v5);\n
        for (v3 = 0; v3 < v4; v3 += 1)\n
        {\n
            v2 = Deque::PopLeft(v5);\n
            if (Ticket::id(v2) != a1)\n
                Deque::Append(v5, v2);\n
            else\n
                Ticket::DeleteTicket(v2);\n
        }\n
    }\n
    v8 = Dispatcher::FindSupportByTicketId(a0, a1);\n
    v1 = v8;\n
    if (!v1)\n
        return v8;\n
    v8 = Support::RemoveTicket(v1);\n
    v0 = v8;\n
    if (!v0)\n
        return v8;\n
    v8 = Ticket::DeleteTicket(v0);\n
}\n
", "4226220:sub_407cac": null, "4226224:_ZN10Dispatcher21FindSupportByTicketIdEj": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned long long field_78;\n
} struct_0;\n
\n
long long Dispatcher::FindSupportByTicketId(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned long long v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= List::Length(a0->field_78))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = List::Get(a0->field_78, v3);\n
        v1 = Support::CurrentTicket(v2);\n
        if (v1 && Ticket::id(v1) == a1)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4226398:sub_407d5e": null, "4226400:_ZN10Dispatcher10ViewTicketEj": "long long Dispatcher::ViewTicket(void* a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned long v7;  // rax, Other Possible Types: unsigned long long\n
\n
    for (v5 = 0; v5 < 5; v5 += 1)\n
    {\n
        v4 = a0 + v5 * 24;\n
        v3 = 0;\n
        while (true)\n
        {\n
            v0 = v3;\n
            if (v0 >= Deque::Count(v4))\n
                break;\n
            v2 = Deque::PopLeft(v4);\n
            if (Ticket::id(v2) == a1)\n
                Ticket::Display(v2);\n
            Deque::Append(v4, v2);\n
            v3 += 1;\n
        }\n
    }\n
    v7 = Dispatcher::FindSupportByTicketId(a0, a1);\n
    v1 = v7;\n
    if (v1)\n
    {\n
        v7 = Ticket::Display(Support::CurrentTicket(v1));\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4226630:sub_407e46": null, "4226640:_ZN10Dispatcher11ViewTicketsE6STATUS": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned long long field_78;\n
} struct_0;\n
\n
long long Dispatcher::ViewTickets(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned long long v2;  // [bp-0x48]\n
    unsigned long long v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x24]\n
    void* v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x18]\n
\n
    for (v8 = 0; v8 < 5; v8 += 1)\n
    {\n
        v7 = &a0->padding_0[24 * v8];\n
        v6 = 0;\n
        while (true)\n
        {\n
            v1 = v6;\n
            if (v1 >= Deque::Count(v7))\n
                break;\n
            v5 = Deque::PopLeft(v7);\n
            if (Ticket::status(v5) == a1)\n
                Ticket::Display(v5);\n
            Deque::Append(v7, v5);\n
            v6 += 1;\n
        }\n
    }\n
    v4 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 >= List::Length(a0->field_78))\n
            break;\n
        v3 = List::Get(a0->field_78, v4);\n
        v2 = Support::CurrentTicket(v3);\n
        if (v2 && Ticket::status(v2) == a1)\n
            Ticket::Display(v2);\n
        v4 += 1;\n
    }\n
    return v0;\n
}\n
", "4226955:sub_407f8b": null, "4226960:_ZN10Dispatcher14RecordFinishedEP7Support": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long Dispatcher::RecordFinished(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x230]\n
    char v1;  // [bp-0x228]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v0 = &v1;\n
    cgc_memcpy(v0, Ticket::description(Support::CurrentTicket(a1)), 0x200);\n
    Ticket::DeleteTicket(Support::RemoveTicket(a1));\n
    cgc_printf(\"Ticket Finished\\n
\", a1, 0x200, a3, a4);\n
    cgc_printf(\"%d\\n
\", Support::id(a1), 0x200, a3, a4);\n
    return cgc_printf(\"%s\", &v1, 0x200, a3, a4);\n
}\n
", "4227116:sub_40802c": null, "4227120:_ZN10Dispatcher9GetTicketE8PRIORITY": "long long Dispatcher::GetTicket(unsigned long a0, unsigned long a1)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    while (true)\n
    {\n
        if (v1 >= 1)\n
        {\n
            v0 = a0 + (v1 - 1) * 24;\n
            if (Deque::Count(v0))\n
            {\n
                v2 = Deque::PopLeft(v0);\n
                return v2;\n
            }\n
            v1 -= 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4227256:sub_4080b8": null, "4227264:_ZN10Dispatcher14GetRandomTicksEj": "typedef struct struct_0 {\n
    char padding_0[128];\n
    unsigned long long field_80;\n
} struct_0;\n
\n
extern unsigned int cgc_g_rand_idx;\n
\n
long long Dispatcher::GetRandomTicks(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = (0 CONCAT *((a0->field_80 + cgc_g_rand_idx * 4))) /m a1 >> 32;\n
    cgc_g_rand_idx = cgc_g_rand_idx + 1 & 1023;\n
    return v0;\n
}\n
", "4227331:sub_408103": null, "4227344:_ZN4ListC2Ev": "long long List::__base_ctor__(unsigned int a0[258])\n
{\n
    a0[257] = 128;\n
    a0[0x100] = 0;\n
    return a0;\n
}\n
", "4227378:sub_408132": null, "4227392:_ZN4List6AppendEP7Support": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[1016];\n
    unsigned int field_400;\n
    unsigned int field_404;\n
} struct_0;\n
\n
long long List::Append(struct_0 *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long v2;  // rcx\n
\n
    if (a0->field_400 == a0->field_404)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v2 = a0->field_400;\n
    a0->field_400 = v2 + 1;\n
    (&a0->field_0)[v2] = a1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4227484:sub_40819c": null, "4227488:_ZN4List3GetEj": "typedef struct struct_0 {\n
    char padding_0[1024];\n
    unsigned int field_400;\n
} struct_0;\n
\n
long long List::Get(struct_0 *a0, unsigned long a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a1 >= a0->field_400)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(&a0->padding_0[8 * a1]);\n
    return v0;\n
}\n
", "4227556:sub_4081e4": null, "4227568:_ZN4List6RemoveEj": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[1016];\n
    unsigned int field_400;\n
} struct_0;\n
\n
long long List::Remove(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_0 *v6;  // rcx\n
    struct_0 *v7;  // rax\n
    struct_0 *v11;  // rax\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v0 = v3;\n
    if (v2 >= v0->field_400)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v1 = (&v6->field_0)[v2];\n
    if (v2 < v6->field_400 - 1)\n
    {\n
        v7 = v0;\n
        cgc_memmove(&(&v7->field_0)[v2], &v7->padding_8[8 * v2], (v7->field_400 - 1 - v2) * 4);\n
    }\n
    v11 = v0;\n
    *(&v11->padding_8[8 * v11->field_400]) = 0;\n
    v11->field_400 = v11->field_400 - 1;\n
    v4 = v1;\n
    return v4;\n
}\n
", "4227770:sub_4082ba": null, "4227776:_ZN4List6LengthEv": "typedef struct struct_0 {\n
    char padding_0[1024];\n
    unsigned int field_400;\n
} struct_0;\n
\n
long long List::Length(struct_0 *a0)\n
{\n
    return a0->field_400;\n
}\n
", "4227796:sub_4082d4": null, "4227808:_ZN9SchedulerC1EP4ListP10Dispatcher": "long long Scheduler::__ctor__(unsigned long long a0[2], unsigned long a1, unsigned long a2)\n
{\n
    a0[1] = a2;\n
    a0[0] = a1;\n
    return a0;\n
}\n
", "4227845:sub_408305": null, "4227856:_ZN9Scheduler3RunEv": "typedef struct struct_0 {\n
    void* field_0;\n
    char field_8;\n
} struct_0;\n
\n
long long Scheduler::Run(struct_0 *a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned long v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned long long *v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= List::Length(a0->field_0))\n
            break;\n
        v4 = List::Get(a0->field_0, v5);\n
        if (!Support::CurrentTicket(v4))\n
        {\n
            *(&v0) = *(&a0->field_8);\n
            v3 = Dispatcher::GetTicket(*(&v0), Support::max_priority(v4));\n
            if (v3)\n
            {\n
                a3 = v4;\n
                if (*(v3) != a3)\n
                {\n
                    Support::AssignTicket(v4, v3);\n
                    Ticket::UpdateStatus(v3, 2);\n
                }\n
                else\n
                {\n
                    Dispatcher::AddTicket(*(&a0->field_8), v3);\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v2 = Support::CurrentTicket(v4);\n
            Ticket::WorkOn(v2);\n
            if ((Ticket::CheckDone(v2) & 1))\n
            {\n
                Ticket::UpdateStatus(v2, 4);\n
                Dispatcher::RecordFinished(*(&a0->field_8), v4, a2, a3, a4);\n
            }\n
            else if (Dispatcher::GetRandomTicks(*(&a0->field_8), 10) < 2)\n
            {\n
                if (!(Ticket::priority(v2) <= 3))\n
                    goto LABEL_4084e8;\n
                Ticket::UpdateStatus(v2, 3);\n
                Support::RemoveTicket(v4);\n
            }\n
            else if (Dispatcher::GetRandomTicks(*(&a0->field_8), 10) < 3)\n
            {\n
                Support::RemoveTicket(v4);\n
                Dispatcher::AddTicket(*(&a0->field_8), v2);\n
                Ticket::UpdateStatus(v2, 1);\n
            }\n
        }\n
LABEL_4084e8:\n
        v5 += 1;\n
    }\n
    return v1;\n
}\n
", "4228356:sub_408504": null, "4228368:_Z20handle_command_errorP4FILES0_PPcm": "long long handle_command_error(unsigned long a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    *(&v1) = a2;\n
    *(&v0) = a3;\n
    cgc_fprintf(a1, \"Invalid command\\n
\", a2, a3, a4);\n
    return 0;\n
}\n
", "4228418:sub_408542": null, "4228432:_Z18handle_add_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    char field_18[2];\n
} struct_0;\n
\n
extern void dispatcher;\n
\n
long long handle_add_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0x50]\n
    unsigned long long v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned long v5;  // [bp-0x28]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
\n
    v7 = a0;\n
    v6 = a1;\n
    v5 = a3;\n
    v4 = 1;\n
    if (a2->field_18)\n
        v4 = cgc_strtol(a2->field_18, NULL, 10);\n
    if (v4 >= 1 && v4 <= 5)\n
        goto LABEL_4085b2;\n
    v4 = 1;\n
LABEL_4085b2:\n
    v0 = a2->field_8;\n
    v1 = a2->field_10;\n
    v2 = Time::GetTime();\n
    *(&v3) = Ticket::GetTicket(v0, v1, v2, Dispatcher::GetRandomTicks(*(&dispatcher), 100), v4);\n
    if (*(&v3))\n
    {\n
        Dispatcher::AddTicket(*(&dispatcher), *(&v3));\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4228640:_Z21handle_cancel_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8[2];\n
} struct_0;\n
\n
extern unsigned long long dispatcher;\n
\n
long long handle_cancel_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a3;\n
    v0 = cgc_strtol(a2->field_8, NULL, 10);\n
    Dispatcher::CancelTicket(dispatcher, v0);\n
    return 0;\n
}\n
", "4228712:sub_408668": null, "4228720:_Z19handle_list_commandP4FILES0_PPcm": "extern void workers;\n
\n
long long handle_list_command(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned long v5;  // [bp-0x10]\n
\n
    v5 = a0;\n
    v4 = a1;\n
    v3 = a2;\n
    v2 = a3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= List::Length(&workers))\n
            break;\n
        Support::Display(List::Get(&workers, v1));\n
        v1 += 1;\n
    }\n
    return 0;\n
}\n
", "4228840:sub_4086e8": null, "4228848:_Z24handle_list_free_commandP4FILES0_PPcm": "extern void workers;\n
\n
long long handle_list_free_command(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x38]\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x18]\n
    unsigned long v6;  // [bp-0x10]\n
\n
    v6 = a0;\n
    v5 = a1;\n
    v4 = a2;\n
    v3 = a3;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= List::Length(&workers))\n
            break;\n
        v1 = List::Get(&workers, v2);\n
        if (!Support::CurrentTicket(v1))\n
            Support::Display(v1);\n
        v2 += 1;\n
    }\n
    return 0;\n
}\n
", "4228997:sub_408785": null, "4229008:_Z19handle_hire_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8[2];\n
} struct_0;\n
\n
extern void workers;\n
\n
long long handle_hire_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a0;\n
    v4 = a1;\n
    v3 = a3;\n
    v2 = cgc_strtol(a2->field_8, NULL, 10);\n
    if (v2 >= 1 && v2 <= 5)\n
    {\n
        v0 = operator new(24);\n
        Support::__ctor__(v0, 0, v2);\n
        *(&v1) = v0;\n
        List::Append(&workers, *(&v1));\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4229156:sub_408824": null, "4229168:_Z19handle_fire_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8[2];\n
} struct_0;\n
\n
extern unsigned long long dispatcher;\n
extern void workers;\n
\n
long long handle_fire_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned long v1;  // [bp-0x50]\n
    unsigned long long v2;  // [bp-0x48]\n
    void* v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned long v6;  // [bp-0x20]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = a0;\n
    v6 = a1;\n
    v5 = a3;\n
    v4 = cgc_strtol(a2->field_8, NULL, 10);\n
    if (v4 >= 1 && v4 <= 5)\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            v1 = v3;\n
            if (v1 >= List::Length(&workers))\n
                break;\n
            v2 = List::Get(&workers, v3);\n
            if (Support::max_priority(v2) != v4)\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                if (Support::CurrentTicket(v2))\n
                {\n
                    *(&v0) = dispatcher;\n
                    Dispatcher::AddTicket(*(&v0), Support::CurrentTicket(v2));\n
                }\n
                List::Remove(&workers, v3);\n
                break;\n
            }\n
        }\n
        v8 = 0;\n
        return v8;\n
    }\n
    v8 = 0;\n
    return v8;\n
}\n
", "4229446:sub_408946": null, "4229456:_Z19handle_view_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8[2];\n
} struct_0;\n
\n
extern void* dispatcher;\n
\n
long long handle_view_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    if (a3 == 2)\n
    {\n
        v1 = cgc_strtol(a2->field_8, NULL, 10);\n
        if (v1 > 4)\n
            v1 = 0;\n
    }\n
    if (v1)\n
    {\n
        Dispatcher::ViewTickets(dispatcher, v1);\n
        return 0;\n
    }\n
    for (v0 = 1; v0 < 4; v0 += 1)\n
    {\n
        Dispatcher::ViewTickets(dispatcher, v0);\n
    }\n
    return 0;\n
}\n
", "4229642:sub_408a0a": null, "4229648:_Z21handle_status_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8[2];\n
} struct_0;\n
\n
extern void* dispatcher;\n
\n
long long handle_status_command(unsigned long a0, unsigned long a1, struct_0 *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a3;\n
    v0 = cgc_strtol(a2->field_8, NULL, 10);\n
    Dispatcher::ViewTicket(dispatcher, v0);\n
    return 0;\n
}\n
", "4229720:sub_408a58": null, "4229728:_Z11handle_quitP4FILES0_PPcm": "long long handle_quit(unsigned long a0, unsigned long long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    *(&v1) = a2;\n
    *(&v0) = a3;\n
    cgc_fprintf(a1, \"TERMINATING TERRIBLE TICKET TRACKER\\n
\", a2, a3, a4);\n
    return 4294967295;\n
}\n
", "4229781:sub_408a95": null, "4229792:_Z12read_commandP4FILEPPPcPm": "long long read_command(unsigned long long a0, struct struct_0 **a1, unsigned long long *a2)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned long v2;  // [bp-0x40]\n
    char **v3;  // [bp-0x38]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x24]\n
\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = &*(a1)->field_0;\n
    *(a2) = 0;\n
    for (v2 = 0; v2 < 8; v2 += 1)\n
    {\n
        *(&v4) = operator new[](513);\n
        cgc_memset(*(&v4), 0, 513);\n
        v5 = 0;\n
        v1 = cgc_freaduntil(*(&v4), 0x200, 124, a0);\n
        if (v1 <= 1)\n
        {\n
            *(&v0) = *(&v4);\n
            if (*(&v0))\n
                operator delete(*(&v0));\n
            break;\n
        }\n
        else\n
        {\n
            v3[v2] = *(&v4);\n
            *(a2) = v2 + 1;\n
        }\n
    }\n
    if (!*(v3))\n
        return v5;\n
    if (!cgc_strcmp(*(v3), \"ADD_TICKET\"))\n
    {\n
        if (!(*(a2) >= 3 && *(a2) <= 4))\n
            return v5;\n
        v5 = 1;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"CANCEL_TICKET\"))\n
    {\n
        if (!(*(a2) >= 2 && *(a2) <= 2))\n
            return v5;\n
        v5 = 2;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"LIST_SUPPORT\"))\n
    {\n
        if (!(*(a2) >= 1 && *(a2) <= 1))\n
            return v5;\n
        v5 = 3;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"LIST_FREE_SUPPORT\"))\n
    {\n
        if (!(*(a2) >= 1 && *(a2) <= 1))\n
            return v5;\n
        v5 = 4;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"HIRE\"))\n
    {\n
        if (!(*(a2) >= 2 && *(a2) <= 2))\n
            return v5;\n
        v5 = 5;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"FIRE\"))\n
    {\n
        if (!(*(a2) >= 2 && *(a2) <= 2))\n
            return v5;\n
        v5 = 6;\n
        goto LABEL_408e0d;\n
    }\n
    if (!cgc_strcmp(*(v3), \"VIEW\"))\n
    {\n
        if (!(*(a2) >= 1 && *(a2) <= 2))\n
            return v5;\n
        v5 = 7;\n
        goto LABEL_408e0d;\n
    }\n
    if (cgc_strcmp(*(v3), \"VSTATUS\"))\n
    {\n
        if (!cgc_strcmp(*(v3), \"QUIT\"))\n
            v5 = 9;\n
LABEL_408e0d:\n
        return v5;\n
    }\n
    else\n
    {\n
        if (!(*(a2) >= 2 && *(a2) <= 2))\n
            return v5;\n
        v5 = 8;\n
        goto LABEL_408e0d;\n
    }\n
}\n
", "4230723:sub_408e43": null, "4230736:_Z10run_serverP4FILES0_Ph": "extern void* cgc_scheduler;\n
extern unsigned int dispatcher;\n
extern unsigned long long g_40c040;\n
extern unsigned long long g_40c048;\n
extern unsigned int workers;\n
\n
long long run_server(unsigned long long a0, unsigned long a1, unsigned long long *a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned long long v1[17];  // [bp-0x68]\n
    unsigned long long v2[2];  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned long v4;  // [bp-0x50]\n
    unsigned long v5;  // [bp-0x48]\n
    unsigned long v6;  // [bp-0x40]\n
    void* v7;  // [bp-0x38]\n
    unsigned long long v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned long long *v10;  // [bp-0x20]\n
    unsigned long v11;  // [bp-0x18]\n
    unsigned long v12;  // [bp-0x10]\n
    unsigned long long v14;  // r9\n
    unsigned long long *v15;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
\n
    v12 = a0;\n
    v11 = a1;\n
    v10 = a2;\n
    v7 = operator new[](64);\n
    Time::Reset(64, a1, a2, a3, a4, v14);\n
    v1[0] = operator new(136);\n
    Dispatcher::__ctor__(v1, &workers, v10);\n
    *(&dispatcher) = v1;\n
    v2[0] = operator new(16);\n
    Scheduler::__ctor__(v2, &workers, *(&dispatcher));\n
    cgc_scheduler = v2;\n
    v5 = g_40c040;\n
    v6 = g_40c048;\n
    handle_hire_command(v12, v11, &v5, 2);\n
    v6 = \"5\";\n
    v15 = 2;\n
    handle_hire_command(v12, v11, &v5, 2);\n
    cgc_fprintf(v11, \"Welcome to the terrible ticket tracker\\n
\", *(&dispatcher), 2, a4);\n
    while (true)\n
    {\n
        Time::GetTime(a0, a1, a2, v15, a4, v14);\n
        Scheduler::Run(cgc_scheduler, a1, a2, v15, a4);\n
        for (v4 = 0; v4 < 8; v4 += 1)\n
        {\n
            v15 = v4;\n
            if (*((v7 + 0x8 * v15)))\n
            {\n
                *(&v0) = *((v7 + 8 * v4));\n
                if (*(&v0))\n
                    operator delete(*(&v0));\n
                v15 = v4;\n
                *((v7 + 8 * v15)) = 0;\n
            }\n
        }\n
        cgc_fprintf(v11, \"$ \", a2, v15, a4);\n
        v9 = read_command(v12, &v7, &v8);\n
        a0 = v12;\n
        a1 = v11;\n
        a2 = v7;\n
        v15 = v8;\n
        v3 = (&command_handlers)[v9]();\n
        if (v3)\n
            break;\n
        cgc_fprintf(v11, \"OK\\n
\", a2, v15, a4);\n
    }\n
    return v3;\n
}\n
", "4231208:sub_409028": null, "4231216:main": "extern unsigned long long cgc_stdin[4];\n
extern void cgc_stdout;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    v1 = a1;\n
    v2 = 0x4347c000;\n
    v0 = v2;\n
    cgc_fxlat(cgc_stdin, \"EREH_EULAV_MODNAR\");\n
    cgc_fxlat(*(&cgc_stdout), \"EREH_EULAV_MODNAR\");\n
    run_server(cgc_stdin, *(&cgc_stdout), v0, a3, a4);\n
    return 0;\n
}\n
", "4231334:sub_4090a6": null, "4231344:_ZN7SupportC1Ej8PRIORITY": "extern unsigned int g_support_id;\n
\n
long long Support::__ctor__(unsigned int a0[5], unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = g_support_id;\n
    g_support_id = g_support_id + 1;\n
    a0[2] = v1;\n
    a0[3] = a1;\n
    a0[4] = a2;\n
    return a0;\n
}\n
", "4231396:sub_4090e4": null, "4231408:_ZN7Support12AssignTicketEP6Ticket": "long long Support::AssignTicket(unsigned long long *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a1)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a0) = a1;\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4231473:sub_409131": null, "4231488:_ZN7Support12UpdateTicketE6STATUS": "long long Support::UpdateTicket(unsigned long long *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!*(a0))\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    Ticket::UpdateStatus(*(a0), a1);\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4231563:sub_40918b": null, "4231568:_ZN7Support13CurrentTicketEv": "long long Support::CurrentTicket(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4231585:sub_4091a1": null, "4231600:_ZN7Support7DisplayEv": "long long Support::Display(unsigned long long *a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    cgc_printf(\"%d\\n
\", Support::id(a0), a2, a3, a4);\n
    if (!Support::CurrentTicket(a0))\n
        cgc_printf(\"%s\\n
\", \"None\", a2, a3, a4);\n
    else\n
        cgc_printf(\"%d\\n
\", Ticket::id(Support::CurrentTicket(a0)), a2, a3, a4);\n
    cgc_printf(\"%d\\n
\", Support::contact_info(a0), a2, a3, a4);\n
    return cgc_printf(\"%d\\n
\", Support::max_priority(a0), a2, a3, a4);\n
}\n
", "4231775:sub_40925f": null, "4231776:_ZN7Support2idEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long Support::id(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4231793:sub_409271": null, "4231808:_ZN7Support12contact_infoEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long Support::contact_info(struct_0 *a0)\n
{\n
    return a0->field_c;\n
}\n
", "4231825:sub_409291": null, "4231840:_ZN7Support12max_priorityEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long Support::max_priority(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4231857:sub_4092b1": null, "4231872:_ZN7Support12RemoveTicketEv": "long long Support::RemoveTicket(struct struct_0 **a0)\n
{\n
    unsigned long long *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    if (*(a0))\n
    {\n
        v0 = *(a0);\n
        *(a0)->field_0 = a0;\n
        *(a0) = 0;\n
    }\n
    return v0;\n
}\n
", "4231939:sub_409303": null, "4231952:_ZN6Ticket9GetTicketEPcS0_jj8PRIORITY": "long long Ticket::GetTicket(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long long v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1 && a2 && a4 && a4 <= 5)\n
    {\n
        v0 = operator new(608);\n
        Ticket::__ctor__(v0, a0, a1, a2, a3, a4);\n
        v1 = v0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4232102:sub_4093a6": null, "4232112:_ZN6Ticket12DeleteTicketEPS_": "long long Ticket::DeleteTicket(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!a0)\n
        return v2;\n
    v2 = a0;\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    Ticket::__base_dtor__(v0);\n
    v2 = operator delete(v0);\n
}\n
", "4232182:sub_4093f6": null, "4232192:_ZN6TicketC1EPcS0_jj8PRIORITY": "extern unsigned int _ZL11g_ticket_id;\n
\n
long long Ticket::__ctor__(unsigned int a0[151], unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned long v0;  // [bp-0x50], Other Possible Types: unsigned long long\n
    unsigned long v1;  // [bp-0x48], Other Possible Types: unsigned long long\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v5;  // ecx\n
\n
    v5 = _ZL11g_ticket_id;\n
    _ZL11g_ticket_id = _ZL11g_ticket_id + 1;\n
    a0[2] = v5;\n
    if (cgc_strlen(a1) >= 64)\n
        v1 = 63;\n
    else\n
        v1 = cgc_strlen(a1);\n
    v3 = v1;\n
    if (cgc_strlen(a2) >= 64)\n
        v0 = 63;\n
    else\n
        v0 = cgc_strlen(a2);\n
    v2 = v0;\n
    cgc_memset(&a0[3], 0, 64);\n
    cgc_memset(&a0[19], 0, 0x200);\n
    cgc_memcpy(&a0[3], a1, v3);\n
    cgc_memcpy(&a0[19], a2, v2);\n
    a0[147] = v5;\n
    a0[149] = 1;\n
    a0[150] = a4;\n
    a0[148] = a5;\n
    return a0;\n
}\n
", "4232488:sub_409528": null, "4232496:_ZN6TicketD2Ev": "long long Ticket::__base_dtor__(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    return v2;\n
}\n
", "4232506:sub_40953a": null, "4232512:_ZN6Ticket12UpdateStatusE6STATUS": "typedef struct struct_0 {\n
    char padding_0[596];\n
    unsigned int field_254;\n
} struct_0;\n
\n
long long Ticket::UpdateStatus(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_254 = a1;\n
    return a0;\n
}\n
", "4232538:sub_40955a": null, "4232544:_ZN6Ticket6WorkOnEv": "typedef struct struct_0 {\n
    char padding_0[600];\n
    unsigned int field_258;\n
} struct_0;\n
\n
long long Ticket::WorkOn(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v0 = a0;\n
    if (a0->field_258 > 0)\n
    {\n
        v2 = v0;\n
        *((v2 + 600)) = *((v2 + 600)) - 1;\n
    }\n
    return v2;\n
}\n
", "4232594:sub_409592": null, "4232608:_ZN6Ticket9CheckDoneEv": "typedef struct struct_0 {\n
    char padding_0[600];\n
    unsigned int field_258;\n
} struct_0;\n
\n
long long Ticket::CheckDone(struct_0 *a0)\n
{\n
    return !a0->field_258;\n
}\n
", "4232637:sub_4095bd": null, "4232640:_ZN6Ticket7DisplayEv": "long long Ticket::Display(unsigned long long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    cgc_printf(\"%d\\n
\", Ticket::id(a0), a2, a3, a4);\n
    cgc_printf(\"%s\\n
\", Ticket::email(a0), a2, a3, a4);\n
    cgc_printf(\"%s\\n
\", Ticket::description(a0), a2, a3, a4);\n
    cgc_printf(\"%d\\n
\", Ticket::status(a0), a2, a3, a4);\n
    cgc_printf(\"%d\\n
\", Ticket::priority(a0), a2, a3, a4);\n
    cgc_printf(\"%d\\n
\", Ticket::entry_time(a0), a2, a3, a4);\n
    return cgc_printf(\"%d\\n
\", Ticket::duration(a0), a2, a3, a4);\n
}\n
", "4232839:sub_409687": null, "4232848:_ZN6Ticket2idEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long Ticket::id(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4232865:sub_4096a1": null, "4232880:_ZN6Ticket5emailEv": "long long Ticket::email(unsigned long a0)\n
{\n
    return a0 + 12;\n
}\n
", "4232898:sub_4096c2": null, "4232912:_ZN6Ticket11descriptionEv": "long long Ticket::description(unsigned long a0)\n
{\n
    return a0 + 76;\n
}\n
", "4232930:sub_4096e2": null, "4232944:_ZN6Ticket6statusEv": "typedef struct struct_0 {\n
    char padding_0[596];\n
    unsigned int field_254;\n
} struct_0;\n
\n
long long Ticket::status(struct_0 *a0)\n
{\n
    return a0->field_254;\n
}\n
", "4232964:sub_409704": null, "4232976:_ZN6Ticket8priorityEv": "typedef struct struct_0 {\n
    char padding_0[592];\n
    unsigned int field_250;\n
} struct_0;\n
\n
long long Ticket::priority(struct_0 *a0)\n
{\n
    return a0->field_250;\n
}\n
", "4232996:sub_409724": null, "4233008:_ZN6Ticket10entry_timeEv": "typedef struct struct_0 {\n
    char padding_0[588];\n
    unsigned int field_24c;\n
} struct_0;\n
\n
long long Ticket::entry_time(struct_0 *a0)\n
{\n
    return a0->field_24c;\n
}\n
", "4233028:sub_409744": null, "4233040:_ZN6Ticket8durationEv": "typedef struct struct_0 {\n
    char padding_0[600];\n
    unsigned int field_258;\n
} struct_0;\n
\n
long long Ticket::duration(struct_0 *a0)\n
{\n
    return a0->field_258;\n
}\n
", "4233060:sub_409764": null, "4233072:_ZN4Time5ResetEv": "extern unsigned int cgc_ticks;\n
\n
long long Time::Reset()\n
{\n
    unsigned long v1;  // rax\n
\n
    cgc_ticks = 0;\n
    return v1;\n
}\n
", "4233088:_ZN4Time7GetTimeEv": "extern unsigned int cgc_ticks;\n
\n
long long Time::GetTime()\n
{\n
    cgc_ticks = cgc_ticks + 1;\n
    return cgc_ticks;\n
}\n
", "4233115:sub_40979b": null, "4233120:_ZN4Time4TickEv": "extern unsigned int cgc_ticks;\n
\n
long long Time::Tick()\n
{\n
    cgc_ticks = cgc_ticks + 1;\n
    return cgc_ticks;\n
}\n
", "4233144:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:cgc_deallocate": null, "5242944:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}