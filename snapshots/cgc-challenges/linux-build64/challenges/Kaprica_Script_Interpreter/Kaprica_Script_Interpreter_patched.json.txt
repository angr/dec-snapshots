{"4202496:_init": "extern struct_0 *g_40d3b0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d3b0;\n
    if (g_40d3b0)\n
        v1 = g_40d3b0();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40d3d0;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d3d0;\n
    goto *(4248536);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202560:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202576:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202608:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4248512);\n
}\n
", "4202624:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202661:sub_4020a5": null, "4202662:sub_4020a6": null, "4202672:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40d3a8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202713:sub_4020d9": null, "4202720:register_tm_clones": "extern unsigned long long g_40d3b8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202777:sub_402119": null, "4202784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40d3c0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d3c0)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202837:sub_402155": null, "4202841:sub_402159": null, "4202848:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202857:sub_402169": null, "4202864:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rsi<8>, rdi<8>, cc_ndep<8>))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(a1 * a0);\n
        if (v1)\n
            return cgc_memset(v1, 0, a1 * a0);\n
        return 0;\n
    }\n
}\n
", "4202917:sub_4021a5": null, "4202928:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    return a0 - 48 < 10 | (a0 & -33) - 65 < 26;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    return (a0 & -33) - 65 < 26;\n
}\n
", "4202975:sub_4021df": null, "4202976:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4202988:sub_4021ec": null, "4202992:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4203004:sub_4021fc": null, "4203008:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4203020:sub_40220c": null, "4203024:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return a0 < 128;\n
}\n
", "4203036:sub_40221c": null, "4203040:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    return a0 == 9 | a0 == 32;\n
}\n
", "4203058:sub_402232": null, "4203072:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    return a0 < 32 | a0 == 127;\n
}\n
", "4203090:sub_402252": null, "4203104:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    return 33 <= a0 & a0 != 127;\n
}\n
", "4203122:sub_402272": null, "4203136:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    return a0 != 127 & 32 <= a0;\n
}\n
", "4203154:sub_402292": null, "4203168:cgc_ispunct": "typedef struct struct_0 {\n
    char padding_0[4235280];\n
    char field_40a010;\n
} struct_0;\n
\n
extern char _punct;\n
\n
long long cgc_ispunct(struct_0 *a0)\n
{\n
    return *((a0 + &_punct));\n
}\n
", "4203183:sub_4022af": null, "4203184:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    return a0 == 32 | a0 - 9 < 5;\n
}\n
", "4203205:sub_4022c5": null, "4203216:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4235408];\n
    char field_40a090;\n
} struct_0;\n
\n
extern char _xdigit;\n
\n
long long cgc_isxdigit(struct_0 *a0)\n
{\n
    return *((a0 + &_xdigit));\n
}\n
", "4203231:sub_4022df": null, "4203232:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    if ((a0 - 91) >= -26)\n
        return a0 | 32;\n
    return a0;\n
}\n
", "4203263:sub_4022ff": null, "4203264:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    if ((a0 - 123) >= -26)\n
        return a0 & 95;\n
    return a0;\n
}\n
", "4203279:sub_40230f": null, "4203280:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v1;  // rdi\n
    unsigned long v2;  // rax\n
\n
    if (!a0)\n
        return v2;\n
    v1 = a0 - 24;\n
    if (v1->field_8)\n
    {\n
        return v2;\n
    }\n
    else if (v1->field_0 >= 0x40000)\n
    {\n
        return cgc_deallocate(v1);\n
    }\n
    else\n
    {\n
        cgc_insert_into_flist(v1);\n
        return cgc_coalesce(v1);\n
    }\n
}\n
", "4203338:sub_40234a": null, "4203344:cgc_malloc": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    uint128_t field_10;\n
    uint128_t field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_1 *field_10;\n
    char padding_18[8];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_40d618;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x20]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long v6;  // r15, Other Possible Types: unsigned long long\n
    struct_2 *v7;  // rax\n
    unsigned long long *v9;  // r15\n
    struct struct_1 **v10;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v11;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rsi\n
    unsigned long long v13;  // rdx\n
    struct_2 *v15;  // rdi\n
    unsigned long long v16;  // rax\n
    struct_1 *v17;  // r14\n
    unsigned long v18;  // rcx\n
    unsigned long long v19;  // rdi\n
    struct_0 *v20;  // rax\n
\n
    if (!a0)\n
        return 0;\n
    if (a0 - 262120 <= -262145)\n
    {\n
        if (cgc_allocate(a0, v3, v4))\n
            return 0;\n
        v7 = *(&v0);\n
        v7->field_0 = a0 + 24;\n
        v7->field_8 = 0;\n
        v7->field_10 = 0;\n
        v7->field_20 = 0;\n
        return v7 + 24;\n
    }\n
    v6 = a0 + 7 & -8;\n
    if (!(a0 & 7))\n
        v6 = a0;\n
    if (v6 <= 2147483647)\n
    {\n
        v9 = v6 + 24;\n
        v10 = cgc_get_size_class(v9);\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v11 = *(&(&cgc_free_lists)[8 * v10]);\n
                if (v11)\n
                {\n
                    while (*(v11) < v9)\n
                    {\n
                        v11 = *((v11 + 16));\n
                        if (!v11)\n
                            goto LABEL_4023fe;\n
                    }\n
                }\n
LABEL_4023fe:\n
                v10 += 1;\n
            } while (v10 != 32);\n
            goto LABEL_402462;\n
        }\n
        if (!cgc_allocate(v9, v12, v13))\n
        {\n
            v15 = *(&v0);\n
            if (v15)\n
            {\n
                v15->field_0 = 0x40000;\n
                v15->field_8 = 1;\n
                v15->field_10 = 0;\n
                v15->field_20 = 0;\n
                cgc_insert_into_flist(v15);\n
                v11 = g_40d618;\n
LABEL_402462:\n
                cgc_remove_from_flist(v11);\n
                v16 = *(v11) - v9;\n
                v17 = v11 * 0x100000000;\n
                if (v16 < 49)\n
                    return &v17[2576980377].padding_18 >> 32;\n
                v18 = v17 >> 32;\n
                v19 = v18 + v9;\n
                *((v18 + v9)) = v16;\n
                *((8 + v18 + v9)) = 1;\n
                *((16 + v18 + v9)) = 0;\n
                *(v11) = v9;\n
                *((40 + v18 + v9)) = v11;\n
                *((32 + v18 + v9)) = *((v11 + 32));\n
                v20 = *((v11 + 32));\n
                if (v20)\n
                    v20->field_28 = v19;\n
                *((v11 + 32)) = v19;\n
                cgc_insert_into_flist(v19);\n
            }\n
        }\n
    }\n
}\n
", "4203739:sub_4024db": null, "4203744:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    void* v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (size_class_limits[v1] >= a0)\n
        {\n
            return v1;\n
        }\n
        else if (size_class_limits[1 + v1] >= a0)\n
        {\n
            return v1 + 1;\n
        }\n
        else if (size_class_limits[2 + v1] >= a0)\n
        {\n
            v1 += 2;\n
            return v1;\n
        }\n
        else if (size_class_limits[3 + v1] >= a0)\n
        {\n
            return v1 + 3;\n
        }\n
        else\n
        {\n
            v1 += 4;\n
            if (v1 == 32)\n
                return 32;\n
        }\n
    }\n
}\n
", "4203818:sub_40252a": null, "4203824:cgc_insert_into_flist": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern unsigned long long size_class_limits[4];\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned long long v1;  // rcx\n
    void* v2;  // rax, Other Possible Types: unsigned long, unsigned long long, struct struct_0 **\n
    struct_0 *v3;  // rdx\n
\n
    v1 = a0->field_0;\n
    v2 = 0;\n
    do\n
    {\n
        if (size_class_limits[v2] >= v1)\n
        {\n
LABEL_40257c:\n
            goto LABEL_40257e;\n
        }\n
        if (size_class_limits[1 + v2] >= v1)\n
        {\n
            v2 += 1;\n
            goto LABEL_40257c;\n
        }\n
        if (size_class_limits[2 + v2] >= v1)\n
        {\n
            v2 += 2;\n
            goto LABEL_40257c;\n
        }\n
        if (size_class_limits[3 + v2] >= v1)\n
        {\n
            v2 += 3;\n
            goto LABEL_40257c;\n
        }\n
        v2 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_40257e:\n
    a0->field_8 = 1;\n
    v3 = *(&(&cgc_free_lists)[8 * v2]);\n
    if (v3)\n
    {\n
        a0->field_10 = v3;\n
        *((*(&(&cgc_free_lists)[8 * v2]) + 24)) = a0;\n
        *(&(&cgc_free_lists)[8 * v2]) = a0;\n
        a0->field_18 = 0;\n
        return v2;\n
    }\n
    *(&(&cgc_free_lists)[8 * v2]) = a0;\n
    return v2;\n
}\n
", "4203955:sub_4025b3": null, "4203968:cgc_remove_from_flist": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern char cgc_free_lists;\n
extern unsigned long long size_class_limits[4];\n
\n
long long cgc_remove_from_flist(struct_1 *a0)\n
{\n
    unsigned long long v1;  // rcx\n
    unsigned long long v2[4];  // rax, Other Possible Types: unsigned long, unsigned long long, void*\n
    struct_3 *v3;  // rcx\n
    struct_0 *v4;  // rdx\n
\n
    v1 = a0->field_0;\n
    v2 = 0;\n
    do\n
    {\n
        if (size_class_limits[v2] >= v1)\n
        {\n
LABEL_40260c:\n
            goto LABEL_40260e;\n
        }\n
        if (size_class_limits[1 + v2] >= v1)\n
        {\n
            v2 += 1;\n
            goto LABEL_40260c;\n
        }\n
        if (size_class_limits[2 + v2] >= v1)\n
        {\n
            v2 += 2;\n
            goto LABEL_40260c;\n
        }\n
        if (size_class_limits[3 + v2] >= v1)\n
        {\n
            v2 += 3;\n
            goto LABEL_40260c;\n
        }\n
        v2 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_40260e:\n
    v3 = a0[1].field_0;\n
    if (v3)\n
        v3->field_10 = a0->field_10;\n
    v4 = a0->field_10;\n
    if (v4)\n
        v4->field_18 = v3;\n
    if (*(&(&cgc_free_lists)[8 * v2]) == a0)\n
        *(&(&cgc_free_lists)[8 * v2]) = v4;\n
    *(&a0->field_10) = 0;\n
    a0->field_8 = 0;\n
    return v2;\n
}\n
", "4204108:sub_40264c": null, "4204112:cgc_coalesce": "extern char cgc_free_lists;\n
extern char size_class_limits;\n
\n
long long cgc_coalesce(unsigned long a0)\n
{\n
    unsigned long v1;  // rsi\n
    unsigned long v2;  // r9\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // rcx\n
    unsigned long v5;  // rdx\n
    unsigned long v6;  // r10\n
    unsigned long v7;  // rdx\n
    unsigned long v8;  // rdx\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rcx\n
    unsigned long v11;  // rcx\n
    unsigned long v12;  // r9\n
    unsigned long v13;  // rdx\n
    unsigned long v14;  // rdx\n
    unsigned long v15;  // rdx\n
    unsigned long v16;  // rsi\n
    unsigned long v17;  // rcx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // rsi\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // rsi\n
    unsigned long v22;  // rcx\n
    unsigned long v23;  // rdx\n
    unsigned long v24;  // rsi\n
    unsigned long v25;  // r9\n
    unsigned long v26;  // rdx\n
    unsigned long v27;  // r9\n
    unsigned long v28;  // rdx\n
    unsigned long v29;  // rsi\n
    unsigned long v30;  // rsi\n
    unsigned long v31;  // rsi\n
    unsigned long v32;  // rcx\n
    unsigned long v33;  // rcx\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rsi\n
    unsigned long v36;  // rsi\n
    unsigned long v37;  // rdx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rsi\n
    unsigned long v40;  // rax\n
    unsigned long v41;  // r9\n
    unsigned long v42;  // rsi\n
    unsigned long v43;  // rax\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rdx\n
    unsigned long v46;  // rcx\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rax\n
    unsigned long v49;  // rcx\n
    unsigned long v50;  // rsi\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rdx\n
    unsigned long v54;  // rax\n
    unsigned long v55;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rax\n
    unsigned long v58;  // rcx\n
\n
    v1 = *((a0 + 40));\n
    if (!v1)\n
        return v48;\n
    v2 = *((a0 + 32));\n
    if (!*((v1 + 8)))\n
    {\n
        if (!v2)\n
        {\n
            return v48;\n
        }\n
        else if (!*((v2 + 8)))\n
        {\n
            return v48;\n
        }\n
        else\n
        {\n
            v4 = *(v2);\n
            v5 = 0;\n
            do\n
            {\n
                if ((&size_class_limits)[v5] >= v4)\n
                {\n
LABEL_402998:\n
                    v10 = v5;\n
                    goto LABEL_40299b;\n
                }\n
                if ((&size_class_limits)[1 + v5] >= v4)\n
                {\n
                    v5 += 1;\n
                    goto LABEL_402998;\n
                }\n
                if ((&size_class_limits)[2 + v5] >= v4)\n
                {\n
                    v5 += 2;\n
                    goto LABEL_402998;\n
                }\n
                if ((&size_class_limits)[3 + v5] >= v4)\n
                {\n
                    v5 += 3;\n
                    goto LABEL_402998;\n
                }\n
                v5 += 4;\n
            } while (v5 != 32);\n
            v10 = 32;\n
LABEL_40299b:\n
            v13 = *((v2 + 24));\n
            if (v13)\n
                *((v13 + 16)) = *((v2 + 16));\n
            v16 = *((v2 + 16));\n
            if (v16)\n
                *((v16 + 24)) = v13;\n
            if ((&cgc_free_lists)[v10] == v2)\n
                (&cgc_free_lists)[v10] = v16;\n
            *((v2 + 16)) = 0;\n
            *((v2 + 8)) = 0;\n
            v20 = *(a0);\n
            v21 = 0;\n
            do\n
            {\n
                if ((&size_class_limits)[v21] >= v20)\n
                {\n
LABEL_402a1d:\n
                    v25 = v21;\n
                    goto LABEL_402a20;\n
                }\n
                if ((&size_class_limits)[1 + v21] >= v20)\n
                {\n
                    v21 += 1;\n
                    goto LABEL_402a1d;\n
                }\n
                if ((&size_class_limits)[2 + v21] >= v20)\n
                {\n
                    v21 += 2;\n
                    goto LABEL_402a1d;\n
                }\n
                if ((&size_class_limits)[3 + v21] >= v20)\n
                {\n
                    v21 += 3;\n
                    goto LABEL_402a1d;\n
                }\n
                v21 += 4;\n
            } while (v21 != 32);\n
            v25 = 32;\n
LABEL_402a20:\n
            v28 = *((a0 + 24));\n
            if (v28)\n
                *((v28 + 16)) = *((a0 + 16));\n
            v31 = *((a0 + 16));\n
            if (v31)\n
                *((v31 + 24)) = v28;\n
            if ((&cgc_free_lists)[v25] == a0)\n
                (&cgc_free_lists)[v25] = v31;\n
            *((a0 + 16)) = 0;\n
            v34 = v20 + *(*((a0 + 32)));\n
            *(a0) = v34;\n
            v39 = 0;\n
            do\n
            {\n
                if ((&size_class_limits)[v39] >= v34)\n
                {\n
LABEL_402a9c:\n
                    v40 = v39;\n
                    goto LABEL_402a9f;\n
                }\n
                if ((&size_class_limits)[1 + v39] >= v34)\n
                {\n
                    v39 += 1;\n
                    goto LABEL_402a9c;\n
                }\n
                if ((&size_class_limits)[2 + v39] >= v34)\n
                {\n
                    v39 += 2;\n
                    goto LABEL_402a9c;\n
                }\n
                if ((&size_class_limits)[3 + v39] >= v34)\n
                {\n
                    v39 += 3;\n
                    goto LABEL_402a9c;\n
                }\n
                v39 += 4;\n
            } while (v39 != 32);\n
            v40 = 32;\n
LABEL_402a9f:\n
            *((a0 + 8)) = 1;\n
            v44 = (&cgc_free_lists)[v40];\n
            if (!v44)\n
            {\n
                (&cgc_free_lists)[v40] = a0;\n
            }\n
            else\n
            {\n
                *((a0 + 16)) = v44;\n
                *(((&cgc_free_lists)[v40] + 24)) = a0;\n
                (&cgc_free_lists)[v40] = a0;\n
                *((a0 + 24)) = 0;\n
            }\n
            v47 = *((a0 + 32));\n
            v48 = *((v47 + 40));\n
            if (v48)\n
                *((v48 + 32)) = *((v47 + 32));\n
            v49 = *((v47 + 32));\n
            if (!v49)\n
                return v48;\n
        }\n
        goto LABEL_402c6b;\n
    }\n
    if (v2 && *((v2 + 8)))\n
    {\n
        v3 = *(v1);\n
        v7 = 0;\n
        do\n
        {\n
            if ((&size_class_limits)[v7] >= v3)\n
            {\n
LABEL_402790:\n
                v6 = v7;\n
                goto LABEL_402793;\n
            }\n
            if ((&size_class_limits)[1 + v7] >= v3)\n
            {\n
                v7 += 1;\n
                goto LABEL_402790;\n
            }\n
            if ((&size_class_limits)[2 + v7] >= v3)\n
            {\n
                v7 += 2;\n
                goto LABEL_402790;\n
            }\n
            if ((&size_class_limits)[3 + v7] >= v3)\n
            {\n
                v7 += 3;\n
                goto LABEL_402790;\n
            }\n
            v7 += 4;\n
        } while (v7 != 32);\n
        v6 = 32;\n
LABEL_402793:\n
        v11 = *((v1 + 24));\n
        if (v11)\n
            *((v11 + 16)) = *((v1 + 16));\n
        v14 = *((v1 + 16));\n
        if (v14)\n
            *((v14 + 24)) = v11;\n
        if ((&cgc_free_lists)[v6] == v1)\n
        {\n
            (&cgc_free_lists)[v6] = v14;\n
            v2 = *((a0 + 32));\n
        }\n
        *((v1 + 16)) = 0;\n
        *((v1 + 8)) = 0;\n
        v18 = *(v2);\n
        v19 = 0;\n
        do\n
        {\n
            if ((&size_class_limits)[v19] >= v18)\n
            {\n
LABEL_40281c:\n
                v22 = v19;\n
                goto LABEL_40281f;\n
            }\n
            if ((&size_class_limits)[1 + v19] >= v18)\n
            {\n
                v19 += 1;\n
                goto LABEL_40281c;\n
            }\n
            if ((&size_class_limits)[2 + v19] >= v18)\n
            {\n
                v19 += 2;\n
                goto LABEL_40281c;\n
            }\n
            if ((&size_class_limits)[3 + v19] >= v18)\n
            {\n
                v19 += 3;\n
                goto LABEL_40281c;\n
            }\n
            v19 += 4;\n
        } while (v19 != 32);\n
        v22 = 32;\n
LABEL_40281f:\n
        v26 = *((v2 + 24));\n
        if (v26)\n
            *((v26 + 16)) = *((v2 + 16));\n
        v29 = *((v2 + 16));\n
        if (v29)\n
            *((v29 + 24)) = v26;\n
        if ((&cgc_free_lists)[v22] == v2)\n
            (&cgc_free_lists)[v22] = v29;\n
        *((v2 + 16)) = 0;\n
        *((v2 + 8)) = 0;\n
        v33 = *(a0);\n
        v35 = 0;\n
        do\n
        {\n
            if ((&size_class_limits)[v35] >= v33)\n
            {\n
LABEL_40289d:\n
                v41 = v35;\n
                goto LABEL_4028a0;\n
            }\n
            if ((&size_class_limits)[1 + v35] >= v33)\n
            {\n
                v35 += 1;\n
                goto LABEL_40289d;\n
            }\n
            if ((&size_class_limits)[2 + v35] >= v33)\n
            {\n
                v35 += 2;\n
                goto LABEL_40289d;\n
            }\n
            if ((&size_class_limits)[3 + v35] >= v33)\n
            {\n
                v35 += 3;\n
                goto LABEL_40289d;\n
            }\n
            v35 += 4;\n
        } while (v35 != 32);\n
        v41 = 32;\n
LABEL_4028a0:\n
        v42 = *((a0 + 24));\n
        if (v42)\n
            *((v42 + 16)) = *((a0 + 16));\n
        v45 = *((a0 + 16));\n
        if (v45)\n
            *((v45 + 24)) = v42;\n
        if ((&cgc_free_lists)[v41] == a0)\n
            (&cgc_free_lists)[v41] = v45;\n
        *((a0 + 16)) = 0;\n
        *((a0 + 8)) = 0;\n
        v50 = *((a0 + 40));\n
        v51 = v33 + *(v50);\n
        *(v50) = v51;\n
        v52 = v51 + *(*((a0 + 32)));\n
        *(v50) = v52;\n
        v53 = 0;\n
        do\n
        {\n
            if ((&size_class_limits)[v53] >= v52)\n
            {\n
LABEL_40292c:\n
                v54 = v53;\n
                goto LABEL_40292f;\n
            }\n
            if ((&size_class_limits)[1 + v53] >= v52)\n
            {\n
                v53 += 1;\n
                goto LABEL_40292c;\n
            }\n
            if ((&size_class_limits)[2 + v53] >= v52)\n
            {\n
                v53 += 2;\n
                goto LABEL_40292c;\n
            }\n
            if ((&size_class_limits)[3 + v53] >= v52)\n
            {\n
                v53 += 3;\n
                goto LABEL_40292c;\n
            }\n
            v53 += 4;\n
        } while (v53 != 32);\n
        v54 = 32;\n
LABEL_40292f:\n
        *((v50 + 8)) = 1;\n
        v55 = (&cgc_free_lists)[v54];\n
        if (!v55)\n
        {\n
            (&cgc_free_lists)[v54] = v50;\n
        }\n
        else\n
        {\n
            *((v50 + 16)) = v55;\n
            *(((&cgc_free_lists)[v54] + 24)) = v50;\n
            (&cgc_free_lists)[v54] = v50;\n
            *((v50 + 24)) = 0;\n
        }\n
        v56 = *((a0 + 32));\n
        v57 = *((v56 + 40));\n
        if (v57)\n
            *((v57 + 32)) = *((v56 + 32));\n
        v58 = *((v56 + 32));\n
        if (v58)\n
        {\n
            *((v58 + 40)) = v57;\n
            goto LABEL_402c4d;\n
        }\n
    }\n
    v48 = *((a0 + 32));\n
    if (!v48)\n
        return *((a0 + 32));\n
    if (*((v48 + 8)))\n
        return *((a0 + 32));\n
    v8 = *(v1);\n
    v9 = 0;\n
    do\n
    {\n
        if ((&size_class_limits)[v9] >= v8)\n
        {\n
LABEL_402b04:\n
            v12 = v9;\n
            goto LABEL_402b07;\n
        }\n
        if ((&size_class_limits)[1 + v9] >= v8)\n
        {\n
            v9 += 1;\n
            goto LABEL_402b04;\n
        }\n
        if ((&size_class_limits)[2 + v9] >= v8)\n
        {\n
            v9 += 2;\n
            goto LABEL_402b04;\n
        }\n
        if ((&size_class_limits)[3 + v9] >= v8)\n
        {\n
            v9 += 3;\n
            goto LABEL_402b04;\n
        }\n
        v9 += 4;\n
    } while (v9 != 32);\n
    v12 = 32;\n
LABEL_402b07:\n
    v15 = *((v1 + 24));\n
    if (v15)\n
        *((v15 + 16)) = *((v1 + 16));\n
    v17 = *((v1 + 16));\n
    if (v17)\n
        *((v17 + 24)) = v15;\n
    if ((&cgc_free_lists)[v12] == v1)\n
        (&cgc_free_lists)[v12] = v17;\n
    *((v1 + 16)) = 0;\n
    *((v1 + 8)) = 0;\n
    v23 = *(a0);\n
    v24 = 0;\n
    do\n
    {\n
        if ((&size_class_limits)[v24] >= v23)\n
        {\n
LABEL_402b8d:\n
            v27 = v24;\n
            goto LABEL_402b90;\n
        }\n
        if ((&size_class_limits)[1 + v24] >= v23)\n
        {\n
            v24 += 1;\n
            goto LABEL_402b8d;\n
        }\n
        if ((&size_class_limits)[2 + v24] >= v23)\n
        {\n
            v24 += 2;\n
            goto LABEL_402b8d;\n
        }\n
        if ((&size_class_limits)[3 + v24] >= v23)\n
        {\n
            v24 += 3;\n
            goto LABEL_402b8d;\n
        }\n
        v24 += 4;\n
    } while (v24 != 32);\n
    v27 = 32;\n
LABEL_402b90:\n
    v30 = *((a0 + 24));\n
    if (v30)\n
        *((v30 + 16)) = *((a0 + 16));\n
    v32 = *((a0 + 16));\n
    if (v32)\n
        *((v32 + 24)) = v30;\n
    if ((&cgc_free_lists)[v27] == a0)\n
        (&cgc_free_lists)[v27] = v32;\n
    *((a0 + 16)) = 0;\n
    *((a0 + 8)) = 0;\n
    v36 = *((a0 + 40));\n
    v37 = v23 + *(v36);\n
    *(v36) = v37;\n
    v38 = 0;\n
    do\n
    {\n
        if ((&size_class_limits)[v38] >= v37)\n
        {\n
LABEL_402c1c:\n
            v43 = v38;\n
            goto LABEL_402c1f;\n
        }\n
        if ((&size_class_limits)[1 + v38] >= v37)\n
        {\n
            v38 += 1;\n
            goto LABEL_402c1c;\n
        }\n
        if ((&size_class_limits)[2 + v38] >= v37)\n
        {\n
            v38 += 2;\n
            goto LABEL_402c1c;\n
        }\n
        if ((&size_class_limits)[3 + v38] >= v37)\n
        {\n
            v38 += 3;\n
            goto LABEL_402c1c;\n
        }\n
        v38 += 4;\n
    } while (v38 != 32);\n
    v43 = 32;\n
LABEL_402c1f:\n
    *((v36 + 8)) = 1;\n
    v46 = (&cgc_free_lists)[v43];\n
    if (!v46)\n
    {\n
        (&cgc_free_lists)[v43] = v36;\n
    }\n
    else\n
    {\n
        *((v36 + 16)) = v46;\n
        *(((&cgc_free_lists)[v43] + 24)) = v36;\n
        (&cgc_free_lists)[v43] = v36;\n
        *((v36 + 24)) = 0;\n
    }\n
LABEL_402c4d:\n
    v48 = *((a0 + 40));\n
    if (v48)\n
        *((v48 + 32)) = *((a0 + 32));\n
    v49 = *((a0 + 32));\n
    if (v49)\n
    {\n
LABEL_402c6b:\n
        *((v49 + 40)) = v48;\n
        return v48;\n
    }\n
    return *((a0 + 40));\n
}\n
", "4205680:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // r8, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) == a1)\n
            return a0 + v1;\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4205722:sub_402c9a": null, "4205728:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4205774:sub_402cce": null, "4205776:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_402d64:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_402cf7;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_402cf7:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_402d64;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_402cf7;\n
}\n
", "4206207:sub_402e7f": null, "4206208:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    int tmp_13;  // tmp #13\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    char *v6;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    int v10;  // xmm1\n
    int v11;  // xmm1\n
    int v12;  // xmm1\n
    int v13;  // xmm1\n
    unsigned long v14;  // rdi\n
    unsigned long v15;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v16;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v17;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v18;  // r10\n
    unsigned long v19;  // r11\n
    unsigned long v20;  // rdi\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    int v25;  // xmm1\n
    unsigned long long v26;  // r10\n
    unsigned long v30;  // rdi\n
    unsigned long v31;  // r8\n
    char *v32;  // r8\n
    char *v33;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r8\n
    char *v35;  // rdi, Other Possible Types: unsigned long\n
    char *v36;  // rdx\n
    char *v37;  // rdi, Other Possible Types: unsigned long\n
    char *v38;  // r9, Other Possible Types: unsigned long\n
    char *v39;  // rcx, Other Possible Types: unsigned long\n
    char *v40;  // rdx, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (a0 < a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_402fcf:\n
                if (a2 < 32)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x20;\n
                    v3 = v2 - 32;\n
                    v4 = (v3 >> 5) + 1;\n
                    v5 = v4 & 3;\n
                    if (v3 < 96)\n
                    {\n
                        v14 = 0;\n
                    }\n
                    else\n
                    {\n
                        v15 = v4 & -4;\n
                        v14 = 0;\n
                        do\n
                        {\n
                            v10 = *((a1 + v14 + 16));\n
                            *(&v1[v14]) = *((a1 + v14));\n
                            *(&v1[16 + v14]) = v10;\n
                            v11 = *((a1 + v14 + 48));\n
                            *(&v1[32 + v14]) = *((a1 + v14 + 32));\n
                            *(&v1[48 + v14]) = v11;\n
                            v12 = *((a1 + v14 + 80));\n
                            *(&v1[64 + v14]) = *((a1 + v14 + 64));\n
                            *(&v1[80 + v14]) = v12;\n
                            v13 = *((a1 + v14 + 112));\n
                            *(&v1[96 + v14]) = *((a1 + v14 + 96));\n
                            *(&v1[112 + v14]) = v13;\n
                            v14 -= -128;\n
                            tmp_21 = v15;\n
                            v15 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v5)\n
                    {\n
                        v21 = &v1[v14 + 16];\n
                        v22 = a1 + v14 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v25 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v25;\n
                            v24 += 32;\n
                        } while (v5 * 32 != v24);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_402eb9;\n
                }\n
                v31 = v2;\n
                v2 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v31]) = *((a1 + v31));\n
                    v31 += 8;\n
                } while (v2 != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_402eb9:\n
                v34 = &a2[~(v2)];\n
                v35 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v2] = *((a1 + v2));\n
                        v2 += 1;\n
                        tmp_7 = v35;\n
                        v35 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v1[1 + v2] = *((a1 + v2 + 1));\n
                    v1[2 + v2] = *((a1 + v2 + 2));\n
                    v1[3 + v2] = *((a1 + v2 + 3));\n
                    v2 += 4;\n
                } while (a2 != v2);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_402fcf;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_402eb9;\n
    }\n
    else\n
    {\n
        if ([D] amd64g_calculate_condition(0x6<64>, 0x8<64>, rdi<8>, rsi<8>, cc_ndep<8>))\n
            return a0;\n
        if (!a2)\n
            return a0;\n
        if (a2 < 4)\n
        {\n
LABEL_402f57:\n
            v38 = a2;\n
            goto LABEL_402f5a;\n
        }\n
        else\n
        {\n
            if (&a2[a1] > a0 && !(a0 + a2 <= a1))\n
                goto LABEL_402f57;\n
            if (a2 < 16)\n
            {\n
                v6 = 0;\n
            }\n
            else\n
            {\n
                v6 = a2 & -0x10;\n
                v7 = v6 - 16;\n
                v8 = (v7 >> 4) + 1;\n
                v9 = v8 & 3;\n
                if (v7 < 48)\n
                {\n
                    v16 = 0;\n
                }\n
                else\n
                {\n
                    v17 = v8 & -4;\n
                    v18 = v1 + a2 - 16;\n
                    v19 = &a2[a1 + 16];\n
                    v20 = 0;\n
                    do\n
                    {\n
                        *((v18 + v20)) = *((v19 + v20));\n
                        *((-16 + v18 + v20)) = *((v19 + v20 - 16));\n
                        *((-32 + v18 + v20)) = *((v19 + v20 - 32));\n
                        *((-48 + v18 + v20)) = *((v19 + v20 - 48));\n
                        v20 -= 64;\n
                        tmp_13 = v17;\n
                        v17 -= 4;\n
                    } while (tmp_13 != 4);\n
                    v16 = -(v20);\n
                }\n
                if (v9)\n
                {\n
                    v26 = &a2[-1 * v16];\n
                    v30 = 0;\n
                    do\n
                    {\n
                        *(&v1[16 + v30 + v26]) = *((v26 + a1 - 16 + v30));\n
                        v30 -= 16;\n
                    } while (v9 * 16 + v30);\n
                }\n
                if (v6 == a2)\n
                    return v1;\n
                if (!(a2 & 12))\n
                {\n
                    a2 = a2 & 15;\n
                    goto LABEL_402f57;\n
                }\n
            }\n
            v32 = a2 & -4;\n
            v38 = a2 & 3;\n
            v33 = -(v6);\n
            do\n
            {\n
                *((v1 + a2 - 4 + v33)) = *(&a2[4 + v33 + a1]);\n
                v33 -= 4;\n
            } while (!(v32) != v33);\n
            if (v32 == a2)\n
                return v1;\n
LABEL_402f5a:\n
            v36 = v38 - 1;\n
            v37 = v38 & 3;\n
            if (!(v38 & 3))\n
            {\n
                v39 = v38;\n
                if (v36 < 3)\n
                    return v1;\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v39 = v38 - 1;\n
                    v1[1 + v38] = *((a1 + v38 - 1));\n
                    v38 = v39;\n
                    tmp_5 = v37;\n
                    v37 -= 1;\n
                } while (tmp_5 != 1);\n
                if (v36 < 3)\n
                    return v1;\n
            }\n
            v40 = v39;\n
            do\n
            {\n
                v1[1 + v39] = *((a1 + v39 - 1));\n
                v1[2 + v39] = *((a1 + v39 - 2));\n
                v1[3 + v39] = *((a1 + v39 - 3));\n
                v1[4 + v39] = *((a1 + v39 - 4));\n
                v40 -= 4;\n
                v39 = v40;\n
            } while (v40 != 4);\n
            return v1;\n
        }\n
    }\n
}\n
", "4207143:sub_403227": null, "4207152:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_25;  // tmp #25\n
    int tmp_26;  // tmp #26\n
    char *v1;  // rax\n
    char *v2;  // r10, Other Possible Types: unsigned long\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rcx\n
    unsigned long v10;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // rcx\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rcx\n
    int v15;  // xmm0\n
    unsigned long long v17;  // rdx\n
    unsigned long v18;  // rcx\n
\n
    v1 = a0;\n
    if (!a0)\n
        return a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
        goto LABEL_4033a9;\n
    }\n
    if (a2 < 32)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v2 = a2 & -0x20;\n
        tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
        v3 = tmp_43;\n
        v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
        v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
        v6 = v2 - 32;\n
        v7 = (v6 >> 5) + 1;\n
        v8 = v7 & 7;\n
        if (v6 < 224)\n
        {\n
            v9 = 0;\n
        }\n
        else\n
        {\n
            v10 = v7 & -8;\n
            v9 = 0;\n
            do\n
            {\n
                *(&v1[v9]) = v5;\n
                *(&v1[16 + v9]) = v5;\n
                *(&v1[32 + v9]) = v5;\n
                *(&v1[48 + v9]) = v5;\n
                *(&v1[64 + v9]) = v5;\n
                *(&v1[80 + v9]) = v5;\n
                *(&v1[96 + v9]) = v5;\n
                *(&v1[112 + v9]) = v5;\n
                *(&v1[128 + v9]) = v5;\n
                *(&v1[144 + v9]) = v5;\n
                *(&v1[160 + v9]) = v5;\n
                *(&v1[176 + v9]) = v5;\n
                *(&v1[192 + v9]) = v5;\n
                *(&v1[208 + v9]) = v5;\n
                *(&v1[224 + v9]) = v5;\n
                *(&v1[240 + v9]) = v5;\n
                v9 += 0x100;\n
                tmp_21 = v10;\n
                v10 -= 8;\n
            } while (tmp_21 != 8);\n
        }\n
        if (v8)\n
        {\n
            v11 = &v1[v9 + 16];\n
            v13 = 0;\n
            do\n
            {\n
                *((-16 + v11 + v13)) = v5;\n
                *((v11 + v13)) = v5;\n
                v13 += 32;\n
            } while (v8 * 32 != v13);\n
        }\n
        if (v2 == a2)\n
            return v1;\n
        if (!(a2 & 24))\n
        {\n
            a0 = &v1[v2];\n
LABEL_4033a9:\n
            v17 = &a2[-1 * v2];\n
            v18 = 0;\n
            do\n
            {\n
                *((a0 + v18)) = a1;\n
                v18 += 1;\n
            } while (v17 != v18);\n
            return v1;\n
        }\n
    }\n
    v14 = v2;\n
    v2 = a2 & -8;\n
    a0 = &v1[v2];\n
    tmp_25 = InterleaveLOV(tmp_26, tmp_26);\n
    v15 = tmp_25;\n
    do\n
    {\n
        *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
        v14 += 8;\n
    } while (v2 != v14);\n
    if (v2 == a2)\n
        return v1;\n
    goto LABEL_4033a9;\n
}\n
", "4207550:sub_4033be": null, "4207552:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    int tmp_5;  // tmp #5\n
    char v0;  // [bp-0x3d]\n
    unsigned int v1;  // [bp-0x3c]\n
    char v3;  // bpl\n
    unsigned long long v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // r15, Other Possible Types: unsigned long long\n
    char v7;  // al\n
    char v8;  // cl\n
\n
    v3 = a4;\n
    v6 = a1;\n
    if (a1 < a2)\n
    {\n
        v1 = 0;\n
        if (a3 <= 0)\n
            goto LABEL_40345a;\n
    }\n
    else\n
    {\n
        a3 -= 1;\n
        v6 = (0 CONCAT a1) /m a2 >> 32;\n
        v1 = cgc_output_number_printf(a0, (0 CONCAT a1) /m a2, a2, a3, a4);\n
        if (a3 <= 0)\n
            goto LABEL_40345a;\n
    }\n
    if (!v1)\n
    {\n
        v5 = a3 - 1;\n
        if (a3 + -1)\n
        {\n
            do\n
            {\n
                if ((v3 & 1))\n
                    v0 = 48;\n
                else\n
                    v0 = 32;\n
                cgc_transmit(a0, a1, a2, a3);\n
                tmp_5 = v5;\n
                v5 = v5 - 1;\n
            } while (tmp_5 + -1);\n
        }\n
    }\n
LABEL_40345a:\n
    v7 = (!(v3 & 2) ? v6 + 55 : v6 + 87);\n
    v8 = v6 + 48;\n
    if (10 <= v6)\n
        v8 = v7;\n
    v0 = v8;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4207660:sub_40342c": null, "4207782:sub_4034a6": null, "4207792:cgc_fdprintf": "extern unsigned long long g_40a110;\n
\n
long long cgc_fdprintf(unsigned long a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x119]\n
    unsigned int v1;  // [bp-0x118], Other Possible Types: unsigned long long\n
    struct struct_0 **v2;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x108]\n
    char *v4;  // [bp-0xf8], Other Possible Types: unsigned long\n
    char v5;  // [bp-0xf0]\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    unsigned long long v30;  // r13\n
    char *v31;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v32;  // rbx\n
    void* v33;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    void* v34;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v36;  // rcx, Other Possible Types: unsigned long long, unsigned int\n
    unsigned long long v37;  // rcx\n
    unsigned long long v38;  // rcx\n
    unsigned long long v39;  // rcx\n
    struct struct_0 **v40;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v41;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v42;  // rax, Other Possible Types: unsigned long\n
    unsigned long v43;  // rcx, Other Possible Types: unsigned long long\n
    struct struct_0 **v44;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v45;  // rax, Other Possible Types: unsigned long\n
    char *v46;  // rbp\n
    unsigned long v47;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v48;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v49;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long v50;  // r14, Other Possible Types: unsigned long long\n
    unsigned long v51;  // rbx\n
    unsigned long long v52;  // r12, Other Possible Types: unsigned long\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v4 = a1;\n
    v3 = &v6;\n
    v2 = &v19;\n
    v1 = 206158430224;\n
    if (!*(a1))\n
        return 0;\n
    v30 = a0;\n
    v52 = &v5;\n
    do\n
    {\n
        v31 = a1 + 1;\n
        v4 = v31;\n
        if (*(a1) == 37)\n
        {\n
            v32 = v52;\n
            v33 = 0;\n
            v34 = 0;\n
            a0 = v31;\n
            while (true)\n
            {\n
                v31 = a0 + 1;\n
                v4 = v31;\n
                a3 = *(a0);\n
                a2 = a3;\n
                if ((a2 - 49) >= 9)\n
                    break;\n
                v34 = cgc_strtol();\n
                a0 = v4;\n
            }\n
            a1 = a2 - 88;\n
            switch (a1)\n
            {\n
            case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26: case 28: case 30: case 31:\n
                v0 = a3;\n
                goto LABEL_4036d9;\n
            case 11:\n
                a3 = v1;\n
                if (a3 <= 40)\n
                {\n
                    v40 = a3 + v3;\n
                    a3 = a3 + 8;\n
                    v1 = a3;\n
                }\n
                else\n
                {\n
                    v40 = v2;\n
                    v2 = v40 + 8;\n
                }\n
                v52 = rbx<8>;\n
                v0 = *(v40);\n
                goto LABEL_403564;\n
            case 12:\n
                v36 = v1;\n
                if (v36 > 40)\n
                {\n
                    v41 = v2;\n
                    v2 = v41 + 8;\n
                }\n
                else\n
                {\n
                    v41 = v36 + v3;\n
                    v36 = v36 + 8;\n
                    v1 = v36;\n
                }\n
                v50 = *(v41);\n
                if (v50 < 0)\n
                {\n
                    v0 = 45;\n
                    cgc_transmit(a0, a1, &g_40a110, v36);\n
                    v50 = -(v50);\n
                }\n
                cgc_output_number_printf(v30, v50, 10, v34, v33);\n
                v52 = rbx<8>;\n
                break;\n
            case 27:\n
                v37 = v1;\n
                if (v37 > 40)\n
                {\n
                    v42 = v2;\n
                    v43 = v42 + 8;\n
                    v2 = v43;\n
                }\n
                else\n
                {\n
                    v42 = v37 + v3;\n
                    v43 = v37 + 8;\n
                    v1 = v43;\n
                }\n
                v52 = rbx<8>;\n
                v46 = *(v42);\n
                if (cgc_strlen(v46))\n
                {\n
                    v51 = 0;\n
                    do\n
                    {\n
                        v0 = v46[v51];\n
                        cgc_transmit(a0, a1, &g_40a110, v43);\n
                        v51 += 1;\n
                    } while (cgc_strlen(v46) > v51);\n
                }\n
                break;\n
            case 29:\n
                v38 = v1;\n
                if (v38 <= 40)\n
                {\n
                    v44 = v38 + v3;\n
                    v1 = v38 + 8;\n
                }\n
                else\n
                {\n
                    v44 = v2;\n
                    v2 = v44 + 8;\n
                }\n
                v47 = *(v44);\n
                v48 = v30;\n
                v49 = 10;\n
LABEL_4037da:\n
                cgc_output_number_printf(v48, v47, v49, v34, v33);\n
                v52 = rbx<8>;\n
                break;\n
            case 0:\n
                v33 = v33 | 2;\n
            case 32:\n
                v39 = v1;\n
                if (v39 <= 40)\n
                {\n
                    v45 = v39 + v3;\n
                    v1 = v39 + 8;\n
                }\n
                else\n
                {\n
                    v45 = v2;\n
                    v2 = v45 + 8;\n
                }\n
                v47 = *(v45);\n
                v48 = v30;\n
                v49 = 16;\n
                goto LABEL_4037da;\n
            default:\n
                if (a2 == 37)\n
                    goto LABEL_0x4036d4;\n
                else\n
                    goto LABEL_0x4035e1;\n
            }\n
LABEL_4036d9:\n
            v52 = rbx<8>;\n
            goto LABEL_403564;\n
        }\n
        v0 = *(a1);\n
LABEL_403564:\n
        cgc_transmit(a0, a1, a2, a3);\n
        a1 = v4;\n
    } while (*(a1));\n
    return 0;\n
}\n
", "4207966:sub_40355e": null, "4208078:sub_4035ce": null, "4208110:sub_4035ee": null, "4208640:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long long a3, unsigned long long a4, unsigned long long a5)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    int tmp_36;  // tmp #36\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long v5;  // r15\n
    unsigned long v6;  // r14\n
    unsigned long v7;  // r12\n
    unsigned long v8;  // rbx\n
    char v9;  // r15b\n
    struct struct_0 **v10;  // rbx\n
    unsigned long long v11;  // rax\n
    unsigned long v12;  // rbp, Other Possible Types: unsigned long long\n
    void* v13;  // rax, Other Possible Types: unsigned long\n
    unsigned long v14;  // rcx, Other Possible Types: unsigned long long\n
    char v15;  // dl\n
    char v16[2];  // rsi\n
    char v17;  // dl\n
    unsigned long long v18;  // rax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v0 = v8;\n
    v9 = a5;\n
    v12 = a2;\n
    v10 = a1;\n
    v13 = 0;\n
    if (a2 >= a3)\n
    {\n
        a4 -= 1;\n
        v11 = (0 CONCAT a2) /m a3;\n
        v12 = v11 / 0x100000000;\n
        v13 = cgc_output_number_sprintf(a0, a1, v11, a3, a4, a5);\n
    }\n
    if (a4 > 0 && !v13)\n
    {\n
        v14 = a4 - 1;\n
        if (a4 + -1)\n
        {\n
            if ((v14 & 1))\n
            {\n
                *(a1)->field_0 = ((v9 & 1) * 16) | 32;\n
                *(v10) = &*(v10)->field_1;\n
                *(a0) = *(a0) + 1;\n
                v14 = a4 - 2;\n
            }\n
            if (a4 != 2)\n
            {\n
                v15 = ((v9 & 1) * 16) | 32;\n
                do\n
                {\n
                    *(v10)->field_0 = v15;\n
                    v16 = *(v10);\n
                    *(v10) = &v16[1];\n
                    *(a0) = *(a0) + 1;\n
                    v16[1] = v15;\n
                    *(v10) = &*(v10)->field_1;\n
                    *(a0) = *(a0) + 1;\n
                    tmp_36 = v14;\n
                    v14 = v14 - 2;\n
                } while (tmp_36 + -2);\n
            }\n
        }\n
    }\n
    v17 = (10 <= v12 ? 48 : ((!(v9 & 2)) * 32 + 55));\n
    *(v10)->field_0 = v17 + v12;\n
    *(v10) = &*(v10)->field_1;\n
    *(a0) = *(a0) + 1;\n
    v18 = v13 + 1;\n
    return v18;\n
}\n
", "4208856:sub_4038d8": null, "4208864:cgc_sprintf": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long cgc_sprintf(char *a0, struct_0 *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char *v1;  // [bp-0x110], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x108], Other Possible Types: unsigned long long\n
    struct struct_1 **v3;  // [bp-0x100], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0xf8]\n
    struct_0 *v5;  // [bp-0xf0], Other Possible Types: unsigned long\n
    char v6;  // [bp-0xe8]\n
    unsigned long v7;  // [bp-0xd8]\n
    unsigned long v8;  // [bp-0xd0]\n
    unsigned long v9;  // [bp-0xc8]\n
    unsigned long v10;  // [bp-0xc0]\n
    int v11;  // [bp-0xb8]\n
    int v12;  // [bp-0xa8]\n
    int v13;  // [bp-0x98]\n
    int v14;  // [bp-0x88]\n
    int v15;  // [bp-0x78]\n
    int v16;  // [bp-0x68]\n
    int v17;  // [bp-0x58]\n
    int v18;  // [bp-0x48]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
    struct_2 *v31;  // r14\n
    struct struct_1 **v32;  // r13\n
    struct_0 *v33;  // rdi, Other Possible Types: unsigned long\n
    char *v34;  // rcx\n
    void* v36;  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v37;  // rbp\n
    struct_0 *v38;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v39;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v40;  // rcx\n
    unsigned int v41;  // esi\n
    unsigned long long v43;  // rax\n
    char *v44;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v45;  // rdx\n
    unsigned long long v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    struct struct_1 **v48;  // rcx, Other Possible Types: unsigned long\n
    struct struct_1 **v49;  // rax, Other Possible Types: unsigned long\n
    struct struct_1 **v50;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v51;  // rdx, Other Possible Types: unsigned long long\n
    char *v52;  // rbp\n
    unsigned long v53;  // r14\n
    unsigned int v54;  // r13d\n
    struct_2 *v55;  // rdi, Other Possible Types: unsigned long\n
    struct struct_1 **v56;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v57;  // rcx, Other Possible Types: unsigned long long\n
    char *v58;  // rcx\n
    struct struct_0 **v59;  // rbx\n
    unsigned long v60;  // r15\n
    struct struct_0 **v61;  // r15\n
    struct_2 *v62;  // r14\n
    struct struct_1 **v63;  // r13\n
    void* v64;  // rax, Other Possible Types: unsigned long\n
\n
    if (v20)\n
    {\n
        v11 = v21;\n
        v12 = v22;\n
        v13 = v23;\n
        v14 = v24;\n
        v15 = v25;\n
        v16 = v26;\n
        v17 = v27;\n
        v18 = v28;\n
    }\n
    v7 = a2;\n
    v8 = a3;\n
    v9 = a4;\n
    v10 = v29;\n
    v1 = a0;\n
    v5 = a1;\n
    v0 = 0;\n
    v4 = &v6;\n
    v3 = &v19;\n
    v2 = 206158430224;\n
    if (!a1->field_-1)\n
    {\n
        v64 = 0;\n
    }\n
    else\n
    {\n
        v31 = &v0;\n
        v32 = &v1;\n
        do\n
        {\n
            v33 = a1 + 1;\n
            v5 = v33;\n
            if (*(a1) != 37)\n
            {\n
                v34 = v1;\n
                *(v34) = *(a1);\n
                v1 = v34 + 1;\n
            }\n
            else\n
            {\n
                v36 = 0;\n
                while (true)\n
                {\n
                    v37 = v36 | 1;\n
                    v38 = v33 + 1;\n
                    v39 = v36;\n
                    do\n
                    {\n
                        v36 = v39;\n
                        v5 = v38;\n
                        v40 = *((v38 - 1));\n
                        v41 = v40;\n
                        v38 += 1;\n
                        v39 = v37;\n
                    } while (v41 == 48);\n
                    switch (v41)\n
                    {\n
                    case 37:\n
                        v44 = v1;\n
                        *(v44) = 37;\n
                        goto LABEL_403ab0;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v43 = cgc_strtol(v38 - 2, &v5, 10);\n
                        v33 = v5;\n
                        continue;\n
                    case 100:\n
                        v45 = v2;\n
                        if (v45 <= 40)\n
                        {\n
                            v48 = v45 + v4;\n
                            v2 = v45 + 8;\n
                        }\n
                        else\n
                        {\n
                            v48 = v3;\n
                            v3 = v48 + 8;\n
                        }\n
                        v51 = *(v48);\n
                        if (v51 < 0)\n
                        {\n
                            v58 = v1;\n
                            *(v58) = 45;\n
                            v1 = v58 + 1;\n
                            v0 += 1;\n
                            v51 = -(v51);\n
                        }\n
                        v55 = *(&v0);\n
                        v56 = v1;\n
                        v57 = 10;\n
LABEL_403af5:\n
                        cgc_output_number_sprintf(v55, v56, v51, v57, 0, v36);\n
                        break;\n
                    case 115:\n
                        v46 = v2;\n
                        if (v46 > 40)\n
                        {\n
                            v49 = v3;\n
                            v3 = v49 + 8;\n
                        }\n
                        else\n
                        {\n
                            v49 = v46 + v4;\n
                            v2 = v46 + 8;\n
                        }\n
                        v52 = *(v49);\n
                        v53 = v1;\n
                        v54 = v0;\n
                        if (cgc_strlen(v52))\n
                        {\n
                            v59 = r15<8>;\n
                            v60 = 0;\n
                            do\n
                            {\n
                                *((v53 + v60)) = v52[v60];\n
                                v60 += 1;\n
                            } while (cgc_strlen(v52) > v60);\n
                            v53 += v60;\n
                            v54 += v60;\n
                            v61 = rbx<8>;\n
                        }\n
                        v1 = v53;\n
                        v0 = v54;\n
                        v62 = &v0;\n
                        v63 = &v1;\n
                        break;\n
                    case 88:\n
                        v36 = v36 | 2;\n
                    case 120:\n
                        v47 = v2;\n
                        if (v47 <= 40)\n
                        {\n
                            v50 = v47 + v4;\n
                            v2 = v47 + 8;\n
                        }\n
                        else\n
                        {\n
                            v50 = v3;\n
                            v3 = v50 + 8;\n
                        }\n
                        v51 = *(v50);\n
                        v55 = r14<8>;\n
                        v56 = r13<8>;\n
                        v57 = 16;\n
                        goto LABEL_403af5;\n
                    default:\n
                        v44 = v1;\n
                        *(v44) = v40;\n
LABEL_403ab0:\n
                        v1 = v44 + 1;\n
                        goto LABEL_4039b0;\n
                    }\n
                }\n
            }\n
LABEL_4039b0:\n
            v0 += 1;\n
            a1 = v5;\n
        } while (*(a1));\n
        a0 = v1;\n
        v64 = v0;\n
    }\n
    *(a0) = 0;\n
    return v64;\n
}\n
", "4209052:sub_40399c": null, "4209567:sub_403b9f": null, "4209568:cgc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-18;\n
} struct_0;\n
\n
long long cgc_realloc(struct_0 *a0, unsigned long long a1)\n
{\n
    char *v1;  // rax\n
    char *v3;  // rdx, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return cgc_malloc(a1);\n
    if (!a1)\n
    {\n
        cgc_free(a0);\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(a1);\n
        if (v1)\n
        {\n
            v3 = a0[3].field_-18 - 24;\n
            if (v3 > a1)\n
                v3 = a1;\n
            cgc_memcpy(v1, a0, v3);\n
            cgc_free(a0);\n
            return v1;\n
        }\n
    }\n
    return 0;\n
}\n
", "4209679:sub_403c0f": null, "4209680:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    char v3;  // cl\n
    struct_0 *v4;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rax\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v4 = a0 + 1;\n
        while (true)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v2 != v3)\n
            {\n
                v2 = cgc_tolower(v2);\n
                if (v2 != cgc_tolower(*(v1)))\n
                {\n
                    *(&v2) = *((v4 - 1));\n
                    break;\n
                }\n
            }\n
            v1 += 1;\n
            v2 = *(v4);\n
            v4 += 1;\n
            if (!v2)\n
                goto LABEL_403c67;\n
        }\n
    }\n
LABEL_403c67:\n
    v2 = 0;\n
    v5 = cgc_tolower(v2);\n
    return v5 - cgc_tolower(*(v1));\n
}\n
", "4209702:sub_403c26": null, "4209797:sub_403c85": null, "4209808:cgc_strcat": "long long cgc_strcat(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_strcpy(cgc_strlen() + a0, a1);\n
    return a0;\n
}\n
", "4209846:sub_403cb6": null, "4209856:cgc_strchr": "long long cgc_strchr(char a0[2], unsigned long a1)\n
{\n
    char v1[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // cl, Other Possible Types: char\n
\n
    v1 = a0;\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        do\n
        {\n
            if (v2 == a1)\n
                return v1;\n
            v2 = *((v1 + 1));\n
            v1 += 1;\n
        } while (v2);\n
    }\n
    if (!a1)\n
        return v1;\n
    return 0;\n
}\n
", "4209900:sub_403cec": null, "4209904:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4209957:sub_403d25": null, "4209968:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v1;  // rax\n
    char v2;  // cl\n
    unsigned long v3;  // rdi\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    if (!*(a1))\n
    {\n
        *(a0) = 0;\n
        return a0;\n
    }\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = v2;\n
        v2 = a1[1 + v3];\n
        v3 += 1;\n
    } while (v2);\n
    v1[v3] = 0;\n
    return v1;\n
}\n
", "4210015:sub_403d5f": null, "4210016:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // rbx\n
    char *v2;  // rax\n
\n
    v1 = cgc_strlen() + 1;\n
    v2 = cgc_malloc(v1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4210075:sub_403d9b": null, "4210080:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((a0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4210108:sub_403dbc": null, "4210112:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    char v2[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    char v3;  // cl\n
    unsigned long long v4;  // rax\n
    unsigned long v5;  // rax, Other Possible Types: char\n
    unsigned long v6;  // rbx\n
\n
    if (!a2)\n
        return 0;\n
    v1 = a1;\n
    v2 = a0;\n
    if (a2 != 1)\n
    {\n
        for (v5 = a0[0]; v5; v2 += 1)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v5 != v3)\n
            {\n
                v4 = cgc_tolower(v5);\n
                if (v4 != cgc_tolower(*(v1)))\n
                    break;\n
            }\n
            v1 += 1;\n
            v5 = *((v2 + 1));\n
        }\n
    }\n
    v6 = cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
    return v6;\n
}\n
", "4210169:sub_403df9": null, "4210229:sub_403e35": null, "4210240:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_2;  // tmp #2\n
    int tmp_8;  // tmp #8\n
    unsigned long v1;  // rdx, Other Possible Types: unsigned long long\n
    char *v2;  // r8\n
    char *v3;  // r9\n
    char v4;  // al\n
    char v5;  // cl\n
\n
    if (!a2)\n
        return 0;\n
    tmp_2 = a2;\n
    v1 = a2 - 1;\n
    if (tmp_2 == 1)\n
        return *(a0) - *(a1);\n
    v2 = &a0[v1];\n
    v3 = &a1[v1];\n
    while (true)\n
    {\n
        v4 = *(a0);\n
        if (!v4)\n
            return *(a0) - *(a1);\n
        v5 = *(a1);\n
        if (!v5)\n
        {\n
            return *(a0) - *(a1);\n
        }\n
        else if (v4 != v5)\n
        {\n
            return *(a0) - *(a1);\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            a1 += 1;\n
            tmp_8 = v1;\n
            v1 -= 1;\n
            if (tmp_8 == 1)\n
                return *(v2) - *(v3);\n
        }\n
    }\n
}\n
", "4210322:sub_403e92": null, "4210336:cgc_strncpy": "long long cgc_strncpy(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_13;  // tmp #13\n
    unsigned long v1;  // rax\n
    unsigned long v2;  // rbx\n
    char v3;  // cl\n
    unsigned long long *v4;  // r8\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r10\n
    unsigned long long v7;  // r9\n
    uint128_t *v8;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v9;  // r10, Other Possible Types: unsigned long long\n
    unsigned long v10;  // r11\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rsi\n
    unsigned long long *v14;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long *v15;  // rsi\n
    unsigned long v16;  // r9\n
\n
    v1 = a0;\n
    v2 = 0;\n
    if (a2)\n
    {\n
        while (true)\n
        {\n
            v3 = *((a1 + v2));\n
            a0[v2] = v3;\n
            if (!v3)\n
                break;\n
            v2 += 1;\n
            if (a2 == v2)\n
                return a0;\n
        }\n
    }\n
    if (v2 >= a2)\n
        return a0;\n
    v4 = a2 - v2;\n
    if (v4 < 8)\n
    {\n
        do\n
        {\n
LABEL_403fe0:\n
            *((v1 + v2)) = 0;\n
            v2 += 1;\n
        } while (a2 != v2);\n
        return v1;\n
    }\n
    if (v4 < 32)\n
    {\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        v14 = v4 & -0x20;\n
        v5 = v14 - 32;\n
        v6 = (v5 >> 5) + 1;\n
        v7 = v6 & 3;\n
        if (v5 < 96)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v9 = v6 & -4;\n
            v10 = v2 + v1 + 112;\n
            v8 = 0;\n
            do\n
            {\n
                *((v10 + v8 - 112)) = 0;\n
                *((v10 + v8 - 96)) = 0;\n
                *((v10 + v8 - 80)) = 0;\n
                *((v10 + v8 - 64)) = 0;\n
                *((v10 + v8 - 48)) = 0;\n
                *((v10 + v8 - 32)) = 0;\n
                *((v10 + v8 - 16)) = 0;\n
                *((v10 + v8)) = 0;\n
                v8 -= -128;\n
                tmp_13 = v9;\n
                v9 -= 4;\n
            } while (tmp_13 != 4);\n
        }\n
        if (v7)\n
        {\n
            v11 = v1 + v8 + v2 + 16;\n
            v13 = 0;\n
            do\n
            {\n
                *((-16 + v11 + v13)) = 0;\n
                *((v11 + v13)) = 0;\n
                v13 += 32;\n
            } while (v7 * 32 != v13);\n
        }\n
        if (v4 == v14)\n
            return v1;\n
        if (!(v4 & 24))\n
        {\n
            v2 += v14;\n
            goto LABEL_403fe0;\n
        }\n
    }\n
    v15 = v4 & -8;\n
    v16 = v1 + v2;\n
    v2 += v15;\n
    do\n
    {\n
        *((v16 + v14)) = 0;\n
        v14 += 8;\n
    } while (v15 != v14);\n
    if (v4 == v15)\n
        return v1;\n
    goto LABEL_403fe0;\n
}\n
", "4210671:sub_403fef": null, "4210672:cgc_strsep": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strsep(struct struct_1 **a0, char a1[2])\n
{\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned long v2;  // cl, Other Possible Types: char\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (!v1)\n
        return 0;\n
    v2 = *(v1);\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a1, v2))\n
            {\n
                v1 = *(a0);\n
                if (*((v3 - 1)))\n
                {\n
                    *((v3 - 1)) = 0;\n
                    goto LABEL_404045;\n
                }\n
                goto LABEL_404043;\n
            }\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
        v1 = *(a0);\n
    }\n
LABEL_404043:\n
    v3 = 0;\n
LABEL_404045:\n
    *(a0) = v3;\n
    return v1;\n
}\n
", "4210766:sub_40404e": null, "4210768:cgc_strtol": "long long cgc_strtol(char *a0, unsigned long long *a1, unsigned int a2)\n
{\n
    char *v1;  // r9d, Other Possible Types: unsigned long\n
    void* v2;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    char *v3;  // r8, Other Possible Types: unsigned long, unsigned long long\n
    char *v4;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rbx\n
    unsigned long v6;  // rax\n
    unsigned long long v7;  // r9\n
    unsigned long v8;  // r8\n
    void* v9;  // r10, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v10;  // rcx\n
    unsigned long v11;  // rcx, Other Possible Types: unsigned long long\n
    unsigned int v12;  // r11d\n
    unsigned long v13;  // r10\n
    unsigned long long v14;  // rcx\n
\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = a0;\n
    if (a2 <= 36 && a2 != 1)\n
    {\n
        v4 = a0;\n
        while (true)\n
        {\n
            v5 = *(v4);\n
            if (v5 - 9 >= 4 && v5 != 32)\n
                break;\n
            v4 += 1;\n
        }\n
        v6 = 0;\n
        *(&v6) = v5 == 45;\n
        v7 = (*((v4 + v6)) == 43) + v6;\n
        v8 = v4 + v7;\n
        if (!a2)\n
        {\n
            a2 = 10;\n
            if (*(v8) == 48)\n
            {\n
                if ((*((v4 + v7 + 1)) | 32) != 120)\n
                {\n
                    v8 = v4 + v7 + 1;\n
                    a2 = 8;\n
                }\n
                else\n
                {\n
                    v8 = v4 + v7 + 2;\n
                    a2 = 16;\n
                }\n
            }\n
        }\n
        else if (a2 == 16)\n
        {\n
            a2 = 16;\n
            if (*(v8) == 48 && (*((v4 + v7 + 1)) | 32) == 120)\n
                v8 = v4 + v7 + 2;\n
        }\n
        v1 = 0;\n
        v9 = 0;\n
        while (true)\n
        {\n
            v10 = *((v8 + v1));\n
            if (v10 - 48 < 10)\n
            {\n
                v11 = v10 - 48;\n
                if (v11 >= a2)\n
                    break;\n
            }\n
            else\n
            {\n
                v12 = -65;\n
                if (v10 - 65 >= 26)\n
                {\n
                    v12 = -97;\n
                    if (v10 - 97 >= 26)\n
                        break;\n
                }\n
                v11 = v10 + v12 + 10;\n
                if (v11 >= a2)\n
                    break;\n
            }\n
            v13 = a2 * v9;\n
            v14 = v11 + v13;\n
            v1 += 1;\n
            v9 = v14;\n
        }\n
        v2 = -(v9);\n
        if (v5 != 45)\n
            v2 = v9;\n
        v3 = v8 + v1;\n
    }\n
    if (!a1)\n
        return v2;\n
    if (!v1)\n
        v3 = a0;\n
    *(a1) = v3;\n
    return v2;\n
}\n
", "4210803:sub_404073": null, "4210981:sub_404125": null, "4211078:sub_404186": null, "4211088:cgc_strtoul": "long long cgc_strtoul(char *a0, unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4211093:sub_404195": null, "4211104:cgc_dict_init": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    uint128_t field_8;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_dict_init(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    a0->field_0 = a1;\n
    *(&(&a0->field_0)[1]) = 0;\n
    *((&a0->field_8 + 8)) = 0;\n
    return enlarge_tbl();\n
}\n
", "4211144:sub_4041c8": null, "4211152:enlarge_tbl": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long enlarge_tbl(struct_2 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned int v4;  // r15d\n
    struct_2 *v5;  // r13\n
    char *v7;  // r12\n
    struct struct_3 **v8;  // rax\n
    struct_0 *v9;  // rsi\n
    char *v10;  // rdx\n
    unsigned long v11;  // bl, Other Possible Types: char\n
    unsigned int v12;  // eax\n
    char *v13;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v14;  // rdx\n
    struct_3 *v15;  // rax\n
    struct_0 *v16;  // rax\n
    struct struct_3 **v17;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    struct_0 *v18;  // rcx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0->field_1c >= a1)\n
        return 1;\n
    v4 = a1;\n
    v5 = a0;\n
    v7 = a1 * 8;\n
    v8 = cgc_realloc(a0->field_10, v7);\n
    if (!v8)\n
        return 0;\n
    v17 = v8;\n
    cgc_memset(v8, 0, v7);\n
    v5->field_10 = v8;\n
    v5->field_1c = v4;\n
    v18 = v5->field_8;\n
    v5->field_8 = 0;\n
    if (!v18)\n
        return 1;\n
    while (true)\n
    {\n
        v9 = *(v18);\n
        v10 = *((v18 + 32));\n
        *(v18) = 0;\n
        v11 = *(v10);\n
        v12 = 0;\n
        if (*(v10))\n
        {\n
            v13 = v10 + 1;\n
            v12 = 0;\n
            do\n
            {\n
                v12 = v12 * 1337 + v11;\n
                v11 = *(v13);\n
                v13 += 1;\n
            } while (v11);\n
        }\n
        v14 = (0 CONCAT v12) /m v4 >> 32;\n
        *((v18 + 24)) = 0;\n
        v15 = *((v17 + v14 * 8));\n
        *((v18 + 16)) = v15;\n
        if (v15)\n
            v15->field_18 = v18;\n
        *((v17 + v14 * 8)) = v18;\n
        *((v18 + 8)) = 0;\n
        v16 = v5->field_8;\n
        *(v18) = v16;\n
        if (v16)\n
            *(&v16->padding_8[0]) = v18;\n
        v5->field_8 = v18;\n
        if (!v9)\n
            break;\n
        v17 = v5->field_10;\n
        v18 = v9;\n
    }\n
    return 1;\n
}\n
", "4211420:sub_4042dc": null, "4211424:cgc_dict_free": "long long cgc_dict_free(struct struct_0 *a0[2])\n
{\n
    struct struct_0 **v1;  // rbx, Other Possible Types: unsigned long\n
    struct struct_0 **v2;  // r15\n
    unsigned long long v3;  // rax\n
\n
    v1 = a0[1];\n
    if (!v1)\n
        return v3;\n
    do\n
    {\n
        v2 = *(v1);\n
        a0[0](v1);\n
        v3 = cgc_free(v1);\n
        v1 = v2;\n
    } while (v2);\n
    return v3;\n
}\n
", "4211487:sub_40431f": null, "4211488:cgc_dict_get": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[24];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[24];\n
    char *field_20;\n
} struct_0;\n
\n
long long cgc_dict_get(struct_2 *a0, char *a1)\n
{\n
    unsigned long v1;  // bl, Other Possible Types: char\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v3;  // eax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    if (!*(a1))\n
    {\n
        v3 = 0;\n
    }\n
    else\n
    {\n
        v2 = a1 + 1;\n
        v3 = 0;\n
        do\n
        {\n
            v3 = v3 * 1337 + v1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    v5 = *((a0->field_10 + ((0 CONCAT v3) /m a0->field_1c >> 32) * 8));\n
    if (!v5)\n
        return 0;\n
    while (true)\n
    {\n
        if (cgc_strcmp(*((v5 + 32)), a1))\n
        {\n
            v5 = *(v5);\n
            if (!v5)\n
                return 0;\n
        }\n
        else\n
        {\n
            return v5;\n
        }\n
    }\n
}\n
", "4211606:sub_404396": null, "4211616:cgc_dict_add": "typedef struct struct_9 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    struct struct_10 *field_20;\n
} struct_9;\n
\n
typedef struct struct_7 {\n
    struct struct_6 *field_0;\n
    struct struct_0 *field_8;\n
    struct struct_8 *field_10;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_7;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
    struct struct_4 *field_8;\n
    struct struct_2 *field_10;\n
    struct struct_1 *field_18;\n
    struct struct_5 *field_20;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_10 {\n
    struct struct_3 *field_0;\n
} struct_10;\n
\n
typedef struct struct_6 {\n
    struct struct_6 *field_0;\n
} struct_6;\n
\n
typedef struct struct_8 {\n
    struct struct_2 *field_0;\n
} struct_8;\n
\n
typedef struct struct_4 {\n
    unsigned long long field_0;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char field_0;\n
} struct_5;\n
\n
long long cgc_dict_add(struct_7 *a0, char *a1, struct_9 *a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_9 *v3;  // r14\n
    unsigned int v5;  // eax\n
    unsigned long v6;  // rbx, Other Possible Types: char\n
    struct_3 *v7;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rsi\n
    unsigned long long v9;  // xmm1lq\n
    int v10;  // xmm1\n
    struct struct_2 **v12;  // rsi\n
    char *v13;  // rdx\n
    unsigned long v14;  // cl, Other Possible Types: char\n
    char *v16;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v17;  // eax\n
    struct struct_9 **v19;  // rax\n
    unsigned long v20;  // rdx\n
    struct struct_2 **v21;  // rsi\n
    struct_1 *v23;  // rax\n
    char *v24;  // rax, Other Possible Types: unsigned long\n
    unsigned int v25;  // ecx\n
    struct_2 *v26;  // rcx\n
    unsigned long v27;  // rdx\n
    struct_2 *v28;  // rax\n
    struct_0 *v29;  // rax\n
    unsigned long long *v30;  // rax\n
    struct_3 *v31;  // rcx\n
    struct struct_2 **v32;  // rcx\n
    struct struct_3 **v33;  // rdx\n
    char *v34;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v35;  // eax\n
    unsigned long v36;  // rdx\n
    struct_2 *v37;  // rax\n
    struct_0 *v38;  // rax\n
\n
    v0 = v2;\n
    v3 = a2;\n
    v6 = *(a1);\n
    if (!*(a1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        a2 = a1 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            v5 = v5 * 1337 + v6;\n
            v6 = *(a2);\n
            a2 += 1;\n
        } while (v6);\n
    }\n
    v7 = a0->field_10[(0 CONCAT v5) /m a0->field_1c >> 32].field_0;\n
    if (v7)\n
    {\n
        do\n
        {\n
            if (!cgc_strcmp(*((v7 + 32)), a1))\n
            {\n
                v3->field_20 = *((v7 + 32));\n
                v12 = a0->field_10;\n
                v13 = *((v7 + 32));\n
                v14 = *(v13);\n
                if (!*(v13))\n
                {\n
                    v17 = 0;\n
                }\n
                else\n
                {\n
                    v16 = v13 + 1;\n
                    v17 = 0;\n
                    do\n
                    {\n
                        v17 = v17 * 1337 + v14;\n
                        v14 = *(v16);\n
                        v16 += 1;\n
                    } while (v14);\n
                }\n
                v20 = (0 CONCAT v17) /m a0->field_1c >> 32;\n
                if (v12[v20] == v7)\n
                    v12[v20] = *((v7 + 16));\n
                v23 = *((v7 + 24));\n
                if (v23)\n
                    v23->field_10 = *((v7 + 16));\n
                v26 = *((v7 + 16));\n
                if (v26)\n
                    v26->field_18 = v23;\n
                if (a0->field_8 == v7)\n
                    a0->field_8 = *(v7);\n
                v30 = *((v7 + 8));\n
                if (v30)\n
                    *(v30) = *(v7);\n
                v31 = *(v7);\n
                if (v31)\n
                    v31->field_8 = v30;\n
                a0->field_0(v7);\n
                cgc_free(v7);\n
                v32 = a0->field_10;\n
                v33 = v3->field_20;\n
                *(&v7) = *(v33);\n
                if (!*(v33))\n
                {\n
                    v35 = 0;\n
                }\n
                else\n
                {\n
                    v34 = v33 + 1;\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v35 = v35 * 1337 + v7;\n
                        v7 = *(v34);\n
                        v34 += 1;\n
                    } while (v7);\n
                }\n
                v36 = (0 CONCAT v35) /m a0->field_1c >> 32;\n
                v3->field_18 = 0;\n
                v37 = v32[v36];\n
                v3->field_10 = v37;\n
                if (v37)\n
                    v37->field_18 = v3;\n
                v32[v36] = &v3->field_0;\n
                v3->field_8 = 0;\n
                v38 = a0->field_8;\n
                *(&v3->field_0) = v38;\n
                if (v38)\n
                    v38->field_8 = v3;\n
                a0->field_8 = &v3->field_0;\n
                goto LABEL_4045f9;\n
            }\n
            v7 = *(v7);\n
        } while (v7);\n
        goto LABEL_4045f9;\n
    }\n
    v8 = a0->field_1c;\n
    v9 = v8;\n
    if (!(CmpF(a0->field_18 + 1, v10 * 4604480259023595110) & 1) && !enlarge_tbl(a0, v8 * 2))\n
        goto LABEL_4044c8;\n
    v19 = cgc_strdup(a1);\n
    v3->field_20 = v19;\n
    if (v19)\n
    {\n
        v21 = a0->field_10;\n
        *(&a2) = *(v19);\n
        if (!*(v19))\n
        {\n
            v25 = 0;\n
        }\n
        else\n
        {\n
            v24 = v19 + 1;\n
            v25 = 0;\n
            do\n
            {\n
                v25 = v25 * 1337 + a2;\n
                a2 = *(v24);\n
                v24 += 1;\n
            } while (a2);\n
        }\n
        v27 = (0 CONCAT v25) /m a0->field_1c >> 32;\n
        v3->field_18 = 0;\n
        v28 = v21[v27];\n
        v3->field_10 = v28;\n
        if (v28)\n
            v28->field_18 = v3;\n
        v21[v27] = &v3->field_0;\n
        v3->field_8 = 0;\n
        v29 = a0->field_8;\n
        *(&v3->field_0) = v29;\n
        if (v29)\n
            v29->field_8 = v3;\n
        a0->field_8 = &v3->field_0;\n
        a0->field_18 = a0->field_18 + 1;\n
LABEL_4045f9:\n
        return 1;\n
    }\n
LABEL_4044c8:\n
    return 0;\n
}\n
", "4212234:sub_40460a": null, "4212240:cgc_eprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char g_40abce;\n
\n
long long cgc_eprintf(char *a0, char *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    char v0;  // [bp-0x59]\n
    void* v1;  // [bp-0x58], Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rbp\n
    char *v6;  // r12\n
    struct_0 *v7;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v8;  // rbx\n
    unsigned long long v10;  // rcx\n
    void* v11;  // r15, Other Possible Types: unsigned long\n
    char *v13;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    unsigned long v15;  // rcx, Other Possible Types: unsigned int\n
    unsigned long long v16;  // rsi\n
    unsigned long long v19;  // rax\n
    char v20;  // al\n
    unsigned long long v21;  // rax\n
    unsigned long long v22;  // rcx\n
    unsigned long long v23;  // rdx\n
    char *v24;  // rbp, Other Possible Types: unsigned long\n
    void* v26;  // rbp, Other Possible Types: unsigned long\n
    char *v27;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v28;  // rdx\n
    unsigned long long v29;  // rdx\n
    unsigned long long v31;  // rcx\n
    unsigned long long v32;  // rcx\n
    unsigned long long v33;  // rbp\n
    unsigned long v34;  // rbx\n
    unsigned long long v35;  // rbp\n
    unsigned long long v36;  // rbp\n
\n
    a3 = a3;\n
    if (!*(a1))\n
        return 0;\n
    v5 = a2;\n
    v6 = a0;\n
    v1 = 0;\n
    v7 = &v0;\n
    v2 = a2;\n
    do\n
    {\n
        v13 = a1 + 1;\n
        v3 = v13;\n
        if (*(a1) == 35)\n
        {\n
            v8 = v7;\n
            v11 = 0;\n
            a0 = v13;\n
            while (true)\n
            {\n
                v13 = a0 + 1;\n
                v3 = v13;\n
                v10 = *(a0);\n
                a2 = v10;\n
                if ((a2 - 49) >= 9)\n
                    break;\n
                v11 = cgc_strtol(a0, &v3, 10);\n
                a0 = v3;\n
            }\n
            switch (a2)\n
            {\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
LABEL_40472d:\n
                v0 = v10;\n
                goto LABEL_404871;\n
            case 99:\n
                v14 = v1;\n
                if (v14 < a3)\n
                {\n
                    v19 = v14 * 64;\n
                    v20 = (!*((v5 + v19 + 40)) ? *((v5 + v19 + 48)) : 0);\n
                    v7 = rbx<8>;\n
                    v1 = v14 + 1;\n
                    v0 = v20;\n
                    goto LABEL_4048b0;\n
                }\n
            case 100:\n
                v15 = v1;\n
                if (v15 < a3)\n
                {\n
                    v21 = v15 * 64;\n
                    if (!*((v5 + v21 + 40)))\n
                    {\n
                        v26 = 0;\n
                    }\n
                    else\n
                    {\n
                        v26 = *((v5 + v21 + 48));\n
                        if (v26 < 0)\n
                        {\n
                            v0 = 45;\n
                            cgc_transmit(a0, a1, a2, v15);\n
                            v15 = v1;\n
                            v26 = -(v26);\n
                        }\n
                    }\n
                    v32 = v15 + 1;\n
                    v1 = v32;\n
                    output_number_printf(v6, v26, 10, v11, 0);\n
                    v33 = v2;\n
                    goto LABEL_404905;\n
                }\n
            case 115:\n
                v16 = v1;\n
                if (v16 >= a3)\n
                    return 4294967295;\n
                v22 = v16 * 64;\n
                v23 = *((v5 + v22 + 40));\n
                v24 = &g_40abce;\n
                if (v23)\n
                {\n
                    if (v23 != 1)\n
                        v24 = *((v2 + v22 + 48));\n
                    else\n
                        return 4294967295;\n
                }\n
                v1 = v16 + 1;\n
                v7 = rbx<8>;\n
                if (!cgc_strlen(v24))\n
                {\n
                    v35 = v2;\n
                    break;\n
                }\n
                else\n
                {\n
                    v34 = 0;\n
                    do\n
                    {\n
                        v0 = *((v24 + v34));\n
                        cgc_transmit(a0, v1, v23, v22);\n
                        v34 += 1;\n
                    } while (cgc_strlen(v24) > v34);\n
                    v36 = v2;\n
                    break;\n
                }\n
                break;\n
            case 117:\n
                if (v1 < a3)\n
                {\n
                    v1 = v1 + 1;\n
                    v27 = v6;\n
                    v28 = 10;\n
LABEL_4048fa:\n
                    v31 = v11;\n
                    output_number_printf(v27);\n
LABEL_404905:\n
                    v7 = *(&v0);\n
                    break;\n
                }\n
            case 120:\n
                if (v1 < a3)\n
                {\n
                    v1 = v1 + 1;\n
                    v27 = v6;\n
                    v29 = 16;\n
                    goto LABEL_4048fa;\n
                }\n
            default:\n
                if (a2 == 35)\n
                {\n
                    v0 = 35;\n
LABEL_404871:\n
                    v7 = *(&v0);\n
LABEL_4048b0:\n
                    goto LABEL_40465f;\n
                }\n
                if (a2 == 48)\n
                    goto LABEL_0x4046e6;\n
                else\n
                    goto LABEL_40472d;\n
            }\n
            return 4294967295;\n
        }\n
        v0 = *(a1);\n
LABEL_40465f:\n
        cgc_transmit(a0, a1, a2, a3);\n
        a1 = v3;\n
    } while (*(a1));\n
}\n
", "4212302:sub_40464e": null, "4212430:sub_4046ce": null, "4212462:sub_4046ee": null, "4213049:sub_404939": null, "4213056:output_number_printf": "long long output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long long a4)\n
{\n
    int tmp_5;  // tmp #5\n
    char v0;  // [bp-0x3d]\n
    unsigned int v1;  // [bp-0x3c]\n
    char v3;  // bpl\n
    unsigned long long v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // r15, Other Possible Types: unsigned long long\n
    char v7;  // al\n
    char v8;  // cl\n
\n
    v3 = a4;\n
    v6 = a1;\n
    if (a1 < a2)\n
    {\n
        v1 = 0;\n
        if (a3 <= 0)\n
            goto LABEL_4049da;\n
    }\n
    else\n
    {\n
        a3 -= 1;\n
        v6 = (0 CONCAT a1) /m a2 >> 32;\n
        v1 = output_number_printf(a0, (0 CONCAT a1) /m a2, a2, a3, a4);\n
        if (a3 <= 0)\n
            goto LABEL_4049da;\n
    }\n
    if (!v1)\n
    {\n
        v5 = a3 - 1;\n
        if (a3 + -1)\n
        {\n
            do\n
            {\n
                if (!(v3 & 1))\n
                    v0 = 32;\n
                else\n
                    v0 = 48;\n
                cgc_transmit(a0, a1, a2, a3);\n
                tmp_5 = v5;\n
                v5 = v5 - 1;\n
            } while (tmp_5 + -1);\n
        }\n
    }\n
LABEL_4049da:\n
    v7 = (!(v3 & 2) ? v6 + 55 : v6 + 87);\n
    v8 = v6 + 48;\n
    if (10 <= v6)\n
        v8 = v7;\n
    v0 = v8;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4213164:sub_4049ac": null, "4213286:sub_404a26": null, "4213296:cgc_program_run": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_3;\n
\n
extern unsigned int g_40a484;\n
\n
long long cgc_program_run(struct_2 *a0, unsigned long a1)\n
{\n
    struct_2 *v0;  // [bp-0xc0]\n
    unsigned long long v1;  // [bp-0xb8]\n
    char v2;  // [bp-0xb0]\n
    char *v3;  // [bp-0x90]\n
    unsigned long long v4[2];  // [bp-0x80], Other Possible Types: void*, unsigned int [3]\n
    unsigned int v5;  // [bp-0x78], Other Possible Types: char\n
    char v6;  // [bp-0x48]\n
    char v7;  // [bp-0x40]\n
    struct_4 *v10;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    struct_0 *v13;  // rax\n
    struct_0 *v14;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v15;  // rax\n
    struct_0 *v17;  // rax\n
    struct_0 *v18;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v19;  // rax\n
    struct_0 *v21;  // rax\n
    struct_0 *v22;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v23;  // rax\n
    struct_0 *v25;  // rax\n
    struct_0 *v26;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v27;  // rax\n
    unsigned long long v28;  // rax\n
    unsigned int v30;  // r14\n
    unsigned long v31;  // r12\n
    unsigned long long v32;  // rax\n
    unsigned long v33;  // r13\n
    struct_1 *v34;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v35;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v36;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v37;  // rsi\n
    unsigned int v38;  // eax\n
    unsigned long long v39;  // rax\n
    struct_1 *v40;  // rbp, Other Possible Types: unsigned long\n
    unsigned int *v41;  // rdi, Other Possible Types: unsigned long\n
    unsigned int *v42;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v43;  // rbp\n
    unsigned int v44;  // ebx\n
    struct_3 *v45;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v46;  // rbp\n
\n
    cgc_memset(&v0, 0, 0x90);\n
    v1 = a1;\n
    v0 = a0;\n
    v10 = &v2;\n
    if (!cgc_dict_init(&v2, cgc_free_var))\n
        return 0;\n
    v3 = cgc_malloc(0x1000);\n
    if (!v3)\n
    {\n
        v44 = 0;\n
        goto LABEL_404e5b;\n
    }\n
    else\n
    {\n
        v11 = cgc_strdup(4238285);\n
        v44 = 0;\n
        if (v11)\n
        {\n
            v13 = cgc_calloc(1, 64);\n
            if (v13)\n
            {\n
                v14 = v13;\n
                v13->field_28 = 2;\n
                v13->field_30 = v11;\n
                goto LABEL_404ad4;\n
            }\n
        }\n
        v14 = 0;\n
LABEL_404ad4:\n
        if (!cgc_dict_add(&v2, \"RS\", v14))\n
            goto LABEL_404e5b;\n
        v15 = cgc_strdup(4238285);\n
        v44 = 0;\n
        if (v15)\n
        {\n
            v17 = cgc_calloc(1, 64);\n
            if (v17)\n
            {\n
                v18 = v17;\n
                v17->field_28 = 2;\n
                v17->field_30 = v15;\n
                goto LABEL_404b31;\n
            }\n
        }\n
        v18 = 0;\n
LABEL_404b31:\n
        if (!cgc_dict_add(&v2, \"ORS\", v18))\n
            goto LABEL_404e5b;\n
        v19 = cgc_strdup(4236420);\n
        v44 = 0;\n
        if (v19)\n
        {\n
            v21 = cgc_calloc(1, 64);\n
            if (v21)\n
            {\n
                v22 = v21;\n
                v21->field_28 = 2;\n
                v21->field_30 = v19;\n
                goto LABEL_404b84;\n
            }\n
        }\n
        v22 = 0;\n
LABEL_404b84:\n
        if (!cgc_dict_add(&v2, \"FS\", v22))\n
            goto LABEL_404e5b;\n
        v23 = cgc_strdup(4236420);\n
        v44 = 0;\n
        if (v23)\n
        {\n
            v25 = cgc_calloc(1, 64);\n
            if (v25)\n
            {\n
                v26 = v25;\n
                v25->field_28 = 2;\n
                v25->field_30 = v23;\n
                goto LABEL_404bd7;\n
            }\n
        }\n
        v26 = 0;\n
LABEL_404bd7:\n
        if (!cgc_dict_add(&v2, \"OFS\", v26))\n
            goto LABEL_404e5b;\n
        v27 = get_string(&v0, \"RS\");\n
        if (!v27)\n
            goto LABEL_404e56;\n
        v43 = v27;\n
    }\n
    while (true)\n
    {\n
        v28 = cgc_strlen(v43);\n
        v30 = (!v28 ? v28 : 1);\n
        if (!v28)\n
            v43 = \"\\n
\";\n
        if (v30 > 4095)\n
        {\n
LABEL_404e56:\n
            v44 = 1;\n
LABEL_404e5b:\n
            v45 = v4;\n
            if (v45)\n
            {\n
                if (v5 > 0)\n
                {\n
                    cgc_free(*(&v45->field_0));\n
                    if (v5 >= 2)\n
                    {\n
                        v46 = 1;\n
                        do\n
                        {\n
                            cgc_free(*(&v4[2 * v46]));\n
                            v46 += 1;\n
                        } while (v46 < v5);\n
                    }\n
                    v45 = v4;\n
                }\n
                cgc_free(v45);\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            v31 = 0;\n
            v32 = cgc_io_getc(v1);\n
            if (v32 < 0)\n
            {\n
                v44 = 1;\n
                v10 = &v2;\n
                goto LABEL_404e5b;\n
            }\n
            else\n
            {\n
                v3[v31] = v32;\n
                v31 += 1;\n
                if (v31 >= v30)\n
                {\n
                    v33 = v31 - v30;\n
                    if (!cgc_strncmp(&v3[v33], v43, v30))\n
                        goto LABEL_404c90;\n
                }\n
                v33 = 4095;\n
                if (!(v31 == 4095))\n
                    continue;\n
LABEL_404c90:\n
                v3[v33] = 0;\n
                if (!v28)\n
                {\n
                    v31 = 0;\n
                    if (!(!cgc_strlen(v3)))\n
                        goto LABEL_404cb5;\n
                    continue;\n
                }\n
LABEL_404cb5:\n
                v34 = v0->field_8;\n
                v10 = &v2;\n
                if (v34)\n
                {\n
                    do\n
                    {\n
                        if (*(v34) == -2)\n
                        {\n
                            v35 = cgc_eval_statements(&v0, *((v34 + 8)));\n
                            if (!(v35 == 1))\n
                                goto LABEL_404d05;\n
                        }\n
                        v34 = *((v34 + 16));\n
                    } while (v34);\n
                    v36 = v0->field_8;\n
                    while (v36)\n
                    {\n
                        v37 = *(v36);\n
                        if (v37 + 3 < 2)\n
                        {\n
LABEL_404dfb:\n
                            v36 = *((v36 + 16));\n
                        }\n
                        else\n
                        {\n
                            if (!v37)\n
                                goto LABEL_404dfb;\n
                            if (v37 != -1)\n
                            {\n
                                if (cgc_eval_expression(&v0))\n
                                {\n
                                    v38 = *(&v6);\n
                                    if (v38 == 2)\n
                                    {\n
                                        if (!*(*(&v7)))\n
                                            goto LABEL_404dfb;\n
                                        goto LABEL_404de6;\n
                                    }\n
                                    if (v38 == 1)\n
                                    {\n
                                        if (!*(&v7))\n
                                            goto LABEL_404dfb;\n
                                        goto LABEL_404de6;\n
                                    }\n
                                }\n
                                goto LABEL_404e56;\n
                            }\n
                            else\n
                            {\n
LABEL_404de6:\n
                                v35 = cgc_eval_statements(&v0, *((v36 + 8)));\n
                                if (v35 == 1)\n
                                    goto LABEL_404dfb;\n
LABEL_404d05:\n
                                v44 = v35;\n
                                if (!(v35 == 4))\n
                                    goto LABEL_404e5b;\n
                                break;\n
                            }\n
                        }\n
                    }\n
                    goto LABEL_404e5b;\n
                }\n
                v40 = v0->field_8;\n
                while (v40)\n
                {\n
                    if (*(v40) != -3)\n
                    {\n
LABEL_404d20:\n
                        v40 = *((v40 + 16));\n
                    }\n
                    else\n
                    {\n
                        v39 = cgc_eval_statements(&v0, *((v40 + 8)));\n
                        if (v39 != 4)\n
                        {\n
                            v44 = v39;\n
                            if (!(v39 == 1))\n
                                goto LABEL_404e5b;\n
                            goto LABEL_404d20;\n
                        }\n
                    }\n
                }\n
                v41 = v4;\n
                if (v41)\n
                {\n
                    if (v5 > 0)\n
                    {\n
                        cgc_free(*(&v41));\n
                        if (v5 >= 2)\n
                        {\n
                            v42 = 1;\n
                            do\n
                            {\n
                                cgc_free(v4[v42]);\n
                                v42 += 1;\n
                            } while (v42 < *(&v5));\n
                        }\n
                        v41 = v4;\n
                    }\n
                    cgc_free(v41);\n
                }\n
                *(&v4[0]) = 0;\n
                v5 = 0;\n
                v43 = get_string(&v0, \"RS\");\n
                v44 = 1;\n
                if (!v43)\n
                    goto LABEL_404e5b;\n
            }\n
        }\n
    }\n
    v4 = 0;\n
    v5 = 0;\n
    cgc_free(v3);\n
    cgc_dict_free(v10);\n
    return v44;\n
}\n
", "4213974:sub_404cd6": null, "4214043:sub_404d1b": null, "4214501:sub_404ee5": null, "4214512:cgc_free_var": "long long cgc_free_var(unsigned int a0[15])\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (a0[10] == 1)\n
        v1 = cgc_free(*(&a0[14]));\n
    a0[10] = 0;\n
    return v1;\n
}\n
", "4214540:sub_404f0c": null, "4214544:cgc_eval_statements": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_0 *field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    struct struct_4 *field_80;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
extern unsigned long long g_40a480;\n
extern unsigned long long g_40a486;\n
extern char g_40a48a;\n
extern char g_40a48d;\n
\n
long long cgc_eval_statements(struct_3 *a0, struct_1 *a1, unsigned long long a2, unsigned long a3, unsigned long a4)\n
{\n
    uint128_t *v3;  // [bp-0x38]\n
    struct_2 *v5;  // rbx\n
    unsigned long v6;  // r12\n
\n
    if (a1)\n
    {\n
        v5 = a1;\n
        v3 = &a0->field_80;\n
    }\n
    v6 = 1;\n
}\n
", "4214749:sub_404fdd": null, "4214949:sub_4050a5": null, "4215272:sub_4051e8": null, "4215623:sub_405347": null, "4215945:sub_405489": null, "4215952:cgc_eval_expression": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[119];\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    struct struct_1 *field_80;\n
    unsigned int field_88;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[119];\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    struct struct_0 *field_80;\n
    unsigned long long field_88;\n
} struct_0;\n
\n
extern char g_40a39c;\n
extern struct_0 g_40abce;\n
\n
long long cgc_eval_expression(struct_1 *a0, struct_2 *a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    char v1;  // [bp-0x48]\n
    unsigned int v3;  // rbx, Other Possible Types: unsigned long\n
    struct_3 *v4;  // r15\n
    struct_1 *v5;  // r14\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // eax\n
    unsigned long v13;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned long v17;  // r13\n
    struct_0 *v18;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v19;  // r13\n
    unsigned int v20;  // ebx\n
    unsigned long long v21;  // rax\n
    unsigned int v22;  // r12d\n
    unsigned long v23;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long v24;  // rax\n
    unsigned int v25;  // eax\n
    unsigned long long v26;  // cc_op\n
    unsigned long long v27;  // cc_dep1\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // ecx\n
    char v32;  // al\n
    unsigned long long v33;  // cc_op\n
    unsigned long long v34;  // cc_dep1\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // ebx\n
    void* v39;  // ebx, Other Possible Types: unsigned int, unsigned long\n
    struct_0 *v40;  // rdi, Other Possible Types: unsigned long\n
    struct_0 *v41;  // rsi, Other Possible Types: unsigned long\n
    struct_0 *v42;  // r12d, Other Possible Types: unsigned long, unsigned int\n
    unsigned int v43;  // eax\n
    unsigned int v44;  // r12d\n
    unsigned int v45;  // ebx\n
\n
    v3 = 0;\n
    if (!a1)\n
        return 0;\n
    v4 = a1;\n
    switch (a1->field_0)\n
    {\n
    case 1:\n
        v7 = a1->field_18;\n
        goto LABEL_40577c;\n
    case 2:\n
        v8 = a1->field_18;\n
        if (a0->field_78 == 1)\n
            cgc_free(*(&a0->field_88));\n
        a0->field_78 = 1;\n
        *(&a0->field_80) = v8;\n
        break;\n
    case 3:\n
        v13 = cgc_do_match(a0, 0, a1);\n
        goto LABEL_405b31;\n
    case 4:\n
        goto LABEL_405768;\n
    case 5:\n
        if (get_number(a0, a1->field_18, &v1))\n
            goto LABEL_405768;\n
        else\n
            return 0;\n
    case 6:\n
        v13 = set_result_var(a0, get_var(a0, a1->field_18));\n
        goto LABEL_405b31;\n
    case 7:\n
        if (!cgc_eval_expression(a0, a1->field_20, a2, &g_40a39c, a4))\n
            return 0;\n
        v13 = cgc_assign_result(a0, a1->field_18);\n
        goto LABEL_405b31;\n
        goto LABEL_405b31;\n
    case 8: case 9: case 10: case 11: case 12: case 25: case 26: case 27: case 28: case 29:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v9 = a0->field_78;\n
        if (v9 == 2)\n
        {\n
            a0 = a0->field_80;\n
            a2 = 0;\n
            v39 = cgc_strtol(a0, NULL, 0);\n
        }\n
        else\n
        {\n
            v39 = 0;\n
            if (v9 == 1)\n
                v39 = a0->field_80;\n
        }\n
        if (!cgc_eval_expression(a0, a1->field_20, a2, &g_40a39c, a4))\n
            goto LABEL_405a07;\n
        v25 = v5->field_78;\n
        if (v25 == 2)\n
        {\n
            v30 = cgc_strtol(v5->field_80, NULL, 0);\n
        }\n
        else\n
        {\n
            v30 = 0;\n
            if (v25 == 1)\n
                v30 = v5->field_80;\n
        }\n
        switch (a1->field_0)\n
        {\n
        case 8: case 25:\n
            v39 = v30 + v39;\n
            goto LABEL_4059c2;\n
        case 9: case 26:\n
            v39 = v39 - v30;\n
            goto LABEL_4059c2;\n
        case 10: case 27:\n
            v39 = v39 * v30;\n
            goto LABEL_4059c2;\n
        case 11: case 28:\n
            if (!v30)\n
                break;\n
            v39 = (v39 >> 31 CONCAT v39) /m v30;\n
            goto LABEL_4059c2;\n
        case 12: case 29:\n
            if (!v30)\n
                break;\n
            v39 = (v39 >> 31 CONCAT v39) /m v30 >> 32;\n
            goto LABEL_4059c2;\n
        default:\n
LABEL_4059c2:\n
            if (v5->field_78 == 1)\n
                cgc_free(*(&v5->field_88));\n
            v5->field_78 = 1;\n
            *(&v5->field_80) = v39;\n
            if (!(a1->field_0 - 8 <= 4))\n
                break;\n
            if (!(!cgc_assign_result(v5, a1->field_18)))\n
                break;\n
LABEL_405a07:\n
            return 0;\n
        }\n
    case 13:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v14 = a0->field_78;\n
        if (v14 == 2)\n
        {\n
            if (!(!a0->field_80->field_0))\n
                goto LABEL_405824;\n
        }\n
        else\n
        {\n
            if (v14 == 1)\n
            {\n
                if (!a0->field_80)\n
                    goto LABEL_405b25;\n
LABEL_405824:\n
                v23 = a1->field_20;\n
                goto LABEL_405b29;\n
            }\n
        }\n
LABEL_405b25:\n
        v23 = a1->field_28;\n
LABEL_405b29:\n
        v13 = cgc_eval_expression(a0, v23, a2, &g_40a39c, a4);\n
        goto LABEL_405b31;\n
    case 14:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v15 = a0->field_78;\n
        if (v15 == 2)\n
        {\n
            if (!(!a0->field_80->field_0))\n
                goto LABEL_405b4a;\n
        }\n
        else\n
        {\n
            if (v15 == 1 && a0->field_80)\n
            {\n
                cgc_free(*(&a0->field_88));\n
LABEL_405b4a:\n
                a0->field_78 = 1;\n
                *(&a0->field_80) = 1;\n
                break;\n
            }\n
        }\n
        if (!cgc_eval_expression(a0, a1->field_20, a2, &g_40a39c, a4))\n
            return 0;\n
        v28 = a0->field_78;\n
        if (v28 != 1)\n
        {\n
            if (!(v28 == 2))\n
                goto LABEL_405bcc;\n
            goto LABEL_405b88;\n
        }\n
    case 15:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v16 = a0->field_78;\n
        if (v16 == 2)\n
        {\n
            if (!a0->field_80->field_0)\n
                goto LABEL_405bd3;\n
        }\n
        else\n
        {\n
            if (v16 != 1)\n
            {\n
LABEL_405bd3:\n
                a0->field_78 = 1;\n
                *(&a0->field_80) = 0;\n
                break;\n
            }\n
            else if (!a0->field_80)\n
            {\n
                cgc_free(*(&a0->field_88));\n
                goto LABEL_405bd3;\n
            }\n
        }\n
        if (!cgc_eval_expression(a0, a1->field_20, a2, &g_40a39c, a4))\n
            return 0;\n
        v29 = a0->field_78;\n
        if (v29 != 1)\n
        {\n
            if (v29 != 2)\n
            {\n
LABEL_405bcc:\n
                v3 = 0;\n
                goto LABEL_405d0b;\n
            }\n
LABEL_405b88:\n
            *(&v3) = a0->field_80->field_0;\n
            goto LABEL_405d0b;\n
        }\n
        *(&v3) = a0->field_80;\n
        cgc_free(*(&a0->field_88));\n
LABEL_405d0b:\n
        v3 = v39;\n
        a0->field_78 = 1;\n
LABEL_405d16:\n
        *(&a0->field_80) = v3;\n
LABEL_405d1d:\n
        return 1;\n
    case 16: case 17:\n
        if (!cgc_do_match(a0, a1->field_18, v4->field_20))\n
            return 0;\n
        if (!(v4->field_0 == 17))\n
            break;\n
        v3 = 0;\n
        *(&v3) = a0->field_80 != 1;\n
        goto LABEL_405d16;\n
    case 18: case 19: case 20: case 21: case 22: case 23:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v10 = a0->field_78;\n
        if (v10 == 2)\n
        {\n
            v42 = a0->field_80;\n
            v17 = v42 / 0x100000000;\n
        }\n
        else if (v10 == 1)\n
        {\n
            v42 = a0->field_80;\n
            *(&v0) = *(&a0->field_88);\n
            v17 = v42 / 0x100000000;\n
        }\n
        a0->field_78 = 0;\n
        if (!cgc_eval_expression(a0, a1->field_20, a2, &g_40a39c, a4))\n
            return 0;\n
        if (!v10)\n
        {\n
            v31 = a0->field_78;\n
            v32 = 1;\n
            if (v31 == 2)\n
            {\n
                v41 = a0->field_80;\n
                v40 = &g_40abce.field_0;\n
                goto LABEL_405c61;\n
            }\n
LABEL_405a70:\n
            if (v31 && (v32 & v31 == 1) == 1)\n
            {\n
                v42 = 0;\n
LABEL_405a83:\n
                v44 = v42 - a0->field_80;\n
                goto LABEL_405c69;\n
            }\n
            v43 = a1->field_0;\n
            v44 = 1;\n
            goto LABEL_405c76;\n
        }\n
        else if (v10 == 1)\n
        {\n
            v35 = a0->field_78;\n
            if (!v35)\n
            {\n
                v44 = a0->field_80;\n
LABEL_405c69:\n
                v43 = v4->field_0;\n
                if (v43 == 18 && v44 < 0)\n
                    goto LABEL_405cb0;\n
LABEL_405c76:\n
                if (v43 == 19 && !(v44 <= 0))\n
                    goto LABEL_405cb0;\n
                if (v43 == 20 && v44 <= 0)\n
                    goto LABEL_405cb0;\n
                if (v43 == 21 && !(v44 < 0))\n
                    goto LABEL_405cb0;\n
                if (v43 == 22 && !v44)\n
                    goto LABEL_405cb0;\n
                if (v43 != 23)\n
                {\n
LABEL_405d33:\n
                    v45 = 0;\n
                    if (!(v5->field_78 == 1))\n
                        goto LABEL_405cc8;\n
LABEL_405cbc:\n
                    cgc_free(*(&v5->field_88));\n
                }\n
                else\n
                {\n
                    if (!v44)\n
                        goto LABEL_405d33;\n
LABEL_405cb0:\n
                    v45 = 1;\n
                    if (!(v5->field_78 == 1))\n
                        goto LABEL_405cc8;\n
                    goto LABEL_405cbc;\n
                }\n
            }\n
            else\n
            {\n
                if (v35 == 1)\n
                    goto LABEL_405a83;\n
                if (v35 == 2)\n
                {\n
                    cgc_sprintf(&v1, \"%d\", v42, &g_40a39c, a4);\n
                    v41 = a0->field_80;\n
                    v40 = &v1;\n
                    goto LABEL_405c61;\n
                }\n
            }\n
        }\n
        else if (v10 != 2)\n
        {\n
            v31 = a0->field_78;\n
            v32 = 0;\n
            goto LABEL_405a70;\n
        }\n
        else\n
        {\n
            v36 = a0->field_78;\n
            if (!v36)\n
            {\n
                v40 = a0->field_80;\n
                v41 = &g_40abce.field_0;\n
                goto LABEL_405c61;\n
            }\n
            else if (v36 == 1)\n
            {\n
                cgc_sprintf(&v1, \"%d\", a0->field_80, &g_40a39c, a4);\n
                v40 = v42 | v17 * 0x100000000;\n
                v41 = &v1;\n
LABEL_405c61:\n
                v44 = cgc_strcmp(v40, v41);\n
                goto LABEL_405c69;\n
            }\n
            else if (v36 == 2)\n
            {\n
                v40 = v42 | v17 * 0x100000000;\n
                v41 = v5->field_80;\n
                goto LABEL_405c61;\n
            }\n
        }\n
LABEL_405cc8:\n
        v5->field_78 = 1;\n
        *(&v5->field_80) = v45;\n
        if (v10 == 1)\n
        {\n
            cgc_free(*(&v0));\n
            break;\n
        }\n
        break;\n
    case 24:\n
        v13 = do_concat(a0, a1->field_18, a1->field_20);\n
LABEL_405b31:\n
        if (!v13)\n
            return 0;\n
        break;\n
    case 30: case 31:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v12 = a0->field_78;\n
        if (v12 == 2)\n
        {\n
            a0 = a0->field_80;\n
            v20 = cgc_strtol(a0, NULL, 0);\n
        }\n
        else\n
        {\n
            v20 = 0;\n
            if (v12 == 1)\n
                v20 = a0->field_80;\n
        }\n
        if (a1->field_0 == 30)\n
        {\n
            v38 = -(v20);\n
            v37 = a0->field_78;\n
        }\n
        else\n
        {\n
            v37 = a0->field_78;\n
            if (v37 == 2)\n
            {\n
                v26 = 5;\n
                v27 = a0->field_80->field_0;\n
LABEL_405bf5:\n
                *(&a3) = [D] amd64g_calculate_condition(0x5<64>, cc_op<8>, cc_dep1<8>, 0x0<64>, cc_ndep<8>);\n
            }\n
            else if (v37 != 1)\n
            {\n
                a3 = 0;\n
            }\n
            else\n
            {\n
                v33 = 7;\n
                v34 = a0->field_80;\n
                goto LABEL_405bf5;\n
            }\n
            v38 = a3 ^ 1;\n
        }\n
        if (v37 == 1)\n
            cgc_free(*(&a0->field_88));\n
        a0->field_78 = 1;\n
        *(&a0->field_80) = v38;\n
        break;\n
        break;\n
    case 32: case 33: case 34: case 35:\n
        if (!cgc_eval_expression(a0, a1->field_18, a2, &g_40a39c, a4))\n
            return 0;\n
        v11 = a0->field_78;\n
        if (v11 == 2)\n
        {\n
            v18 = a0->field_80;\n
            v19 = v18 / 0x100000000;\n
            a0->field_78 = 0;\n
            v22 = cgc_strtol(v18, NULL, 0) + ((a1->field_0 & -2) == 32) * 2 - 1;\n
            if (a0->field_78 == 1)\n
                cgc_free(*(&a0->field_88));\n
        }\n
        else\n
        {\n
            if (v11 != 1)\n
            {\n
                v18 = 0;\n
            }\n
            else\n
            {\n
                v18 = a0->field_80;\n
                *(&v0) = *(&a0->field_88);\n
                v19 = v18 / 0x100000000;\n
            }\n
            v22 = (v18 + ((a1->field_0 & -2) == 32) * 2) - 1;\n
        }\n
        a0->field_78 = 1;\n
        *(&a0->field_80) = v22;\n
        if (cgc_assign_result(a0, a1->field_18))\n
        {\n
            if ((a1->field_0 | 2) == 35)\n
            {\n
                if (v11 == 2)\n
                {\n
                    a0->field_80 = v18 | v19 * 0x100000000;\n
                }\n
                else\n
                {\n
                    if (v11 == 1)\n
                    {\n
                        a0->field_80 = v18 | v19 * 0x100000000;\n
                        *(&a0->field_88) = *(&v0);\n
                        a0->field_78 = v11;\n
                        break;\n
                    }\n
                }\n
                a0->field_78 = v11;\n
                break;\n
            }\n
            else if (v11 == 1)\n
            {\n
                cgc_free(*(&v0));\n
                break;\n
            }\n
        }\n
    default:\n
        return 0;\n
    }\n
LABEL_405768:\n
    v21 = cgc_get_field(a0);\n
    if (!v21)\n
        return 0;\n
    v7 = v21;\n
LABEL_40577c:\n
    v24 = cgc_strdup(v7);\n
    if (v5->field_78 == 1)\n
        cgc_free(*(&v5->field_88));\n
    v5->field_78 = 2;\n
    v5->field_80 = v24;\n
    goto LABEL_405d1d;\n
}\n
", "4218174:sub_405d3e": null, "4218176:get_string": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    unsigned int field_30;\n
    char padding_34[4];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
extern char g_40abce;\n
\n
long long get_string(unsigned long a0, char *a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x38]\n
    void* v2;  // rbx\n
    struct_0 *v3;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax\n
    unsigned int v5;  // eax\n
    unsigned long v6;  // r14\n
    unsigned long long v7;  // rax\n
\n
    v2 = a0 + 16;\n
    v3 = cgc_dict_get(v2, a1);\n
    if (!v3)\n
    {\n
        v4 = cgc_malloc(64);\n
        if (!v4)\n
        {\n
LABEL_405dea:\n
            return 0;\n
        }\n
        v3 = v4;\n
        v4->field_28 = 0;\n
        if (!cgc_dict_add(v2, a1, v4))\n
        {\n
            cgc_free(v4);\n
            goto LABEL_405dea;\n
        }\n
    }\n
    v5 = *((v3 + 40));\n
    if (!v5)\n
    {\n
        return &g_40abce;\n
    }\n
    else if (v5 == 2)\n
    {\n
        return *((v3 + 48));\n
    }\n
    else if (v5 == 1)\n
    {\n
        v6 = *((v3 + 56));\n
        if (v6)\n
            return *((v3 + 56));\n
        cgc_sprintf(&v0, \"%d\", *((v3 + 48)), a3, a4);\n
        v7 = cgc_strdup(&v0);\n
        if (v7)\n
        {\n
            *((v3 + 56)) = v7;\n
            return v7;\n
        }\n
        return 0;\n
    }\n
    goto LABEL_405dea;\n
}\n
", "4218377:sub_405e09": null, "4218384:get_var": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
long long get_var(unsigned long a0, char *a1)\n
{\n
    void* v1;  // rbx\n
    struct_0 *v2;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rax\n
\n
    v1 = a0 + 16;\n
    v2 = cgc_dict_get(v1, a1);\n
    if (v2)\n
        return v2;\n
    v3 = cgc_malloc(64);\n
    if (!v3)\n
        return 0;\n
    v3->field_28 = 0;\n
    if (cgc_dict_add(v1, a1, v3))\n
        return v3;\n
    cgc_free(v3);\n
}\n
", "4218478:sub_405e6e": null, "4218480:cgc_get_field": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    struct struct_1 *field_40;\n
    unsigned int field_48;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[48];\n
    char *field_30;\n
    unsigned long long field_38;\n
    struct struct_2 *field_40;\n
    unsigned int field_48;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern char g_40abce;\n
\n
long long cgc_get_field(struct_0 *a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned long v2;  // rax\n
    struct_3 *v3;  // r13\n
    unsigned long v4;  // r14\n
    char *v6;  // r15\n
    unsigned long long *v7;  // rbp, Other Possible Types: unsigned long\n
    void* v8;  // rbx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v9;  // rdi\n
    void* v10;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rbx\n
    unsigned long v12;  // rax\n
    unsigned long long v13;  // rax\n
    unsigned long v14;  // rdi\n
    char *v15;  // r12, Other Possible Types: unsigned long\n
    void* v16;  // rsi, Other Possible Types: unsigned long\n
    unsigned int *v17;  // r14, Other Possible Types: unsigned long\n
    unsigned long v18;  // rdi\n
    char *v19;  // rbp\n
    unsigned long long v20;  // r12\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (!a0->field_40)\n
    {\n
        if (!a1)\n
        {\n
            return a0->field_30;\n
        }\n
        else if (!cgc_read_fields(a0))\n
        {\n
            return 0;\n
        }\n
    }\n
    if (a0->field_48 < a1)\n
    {\n
        return &g_40abce;\n
    }\n
    else if (a1)\n
    {\n
        v4 = (v4 ? &g_40abce : (&a0->field_40->field_8)[a1]);\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0->field_38;\n
        if (v4)\n
            return a0->field_38;\n
        *(&v0) = get_string(a0, \"OFS\", a2, a3, a4);\n
        if (a0->field_48)\n
        {\n
            v6 = cgc_strlen(*(&v0));\n
            v7 = 0;\n
            v8 = 0;\n
            do\n
            {\n
                v9 = (&v3->field_40->field_0)[v7];\n
                if (!v9)\n
                    v10 = 0;\n
                else\n
                    v10 = cgc_strlen(v9);\n
                v11 = v8 + v10;\n
                if (&v6[v11] > 4094)\n
                    return 0;\n
                v12 = (!v7 ? v6 : 0);\n
                v8 = v11 + v12;\n
                v7 += 1;\n
                v13 = v3->field_48;\n
            } while (v7 < v13);\n
            if (v13)\n
            {\n
                v14 = v3->field_40->field_0;\n
                if (!v14)\n
                {\n
                    v16 = 0;\n
                    v15 = 0;\n
                }\n
                else\n
                {\n
                    v15 = cgc_strlen(v14);\n
                    v16 = v3->field_40->field_0;\n
                }\n
                cgc_memcpy(v3->field_30, v16, v15);\n
                if (v3->field_48 >= 2)\n
                {\n
                    v17 = 1;\n
                    do\n
                    {\n
                        v18 = (&v3->field_40->field_0)[v17];\n
                        v19 = (!v18 ? cgc_strlen(v18) : 0);\n
                        cgc_memcpy(&v3->field_30[v15], *(&v0), v6);\n
                        v20 = &v6[v15];\n
                        cgc_memcpy(&v3->field_30[v20], (&v3->field_40->field_0)[v17], v19);\n
                        v15 = &v19[v20];\n
                        v17 += 1;\n
                    } while (v17 < v3->field_48);\n
                }\n
                goto LABEL_405f82;\n
            }\n
        }\n
        v15 = 0;\n
LABEL_405f82:\n
        v3->field_30[v15] = 0;\n
        v4 = v3->field_30;\n
        v3->field_38 = v4;\n
        return v3->field_30;\n
    }\n
}\n
", "4218660:sub_405f24": null, "4218915:sub_406023": null, "4218928:cgc_read_fields": "typedef struct struct_4 {\n
    char padding_0[48];\n
    struct struct_3 *field_30;\n
    unsigned long long field_38;\n
    struct struct_5 *field_40;\n
    unsigned int field_48;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[48];\n
    struct struct_3 *field_30;\n
    unsigned long long field_38;\n
    struct struct_1 *field_40;\n
    unsigned int field_48;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
long long cgc_read_fields(struct_4 *a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x38]\n
    struct_2 *v4;  // r13\n
    unsigned long v5;  // rax\n
    char *v6;  // r14\n
    unsigned long v7;  // r15\n
    struct_0 *v8;  // rdi, Other Possible Types: unsigned long\n
    unsigned int *v9;  // rbx, Other Possible Types: unsigned long\n
    char *v10;  // rdi, Other Possible Types: unsigned long\n
    char *v11;  // ebx, Other Possible Types: unsigned long, unsigned int\n
    void* v12;  // rbp, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v13;  // rax\n
    unsigned long v14;  // rbp\n
    unsigned long long v15;  // rax\n
    char *v16;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v17;  // rax, Other Possible Types: unsigned long long\n
    char *v18;  // r12, Other Possible Types: unsigned long\n
    void* v19;  // rbp, Other Possible Types: unsigned long, char *\n
    unsigned int v20;  // ebx\n
    char *v21;  // r12\n
    unsigned long v22;  // rax\n
    unsigned long long *v23;  // rdx\n
    unsigned long v26;  // rax\n
    char *v27;  // r12\n
    unsigned long v28;  // rax\n
    struct_0 *v29;  // rdi, Other Possible Types: unsigned long\n
    unsigned int *v30;  // rbx, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v5 = get_string(a0, \"FS\", a2, a3, a4);\n
    if (v5)\n
    {\n
        v6 = v5;\n
        v7 = cgc_strlen(v5);\n
        v8 = v4->field_40;\n
        if (v8)\n
        {\n
            if (v4->field_48 > 0)\n
            {\n
                cgc_free(*(&v8->field_0));\n
                if (v4->field_48 >= 2)\n
                {\n
                    v9 = 1;\n
                    do\n
                    {\n
                        cgc_free((&v4->field_40->field_0)[v9]);\n
                        v9 += 1;\n
                    } while (v9 < v4->field_48);\n
                }\n
                v8 = v4->field_40;\n
            }\n
            cgc_free(v8);\n
        }\n
        v4->field_40 = 0;\n
        v4->field_48 = 0;\n
        v10 = v4->field_30;\n
        v4->field_38 = v10;\n
        if (!*(v10))\n
            return 1;\n
        v1 = v7 - 1;\n
        v11 = 0;\n
        v12 = 0;\n
        do\n
        {\n
            if (v7)\n
            {\n
                if (!(!cgc_strncmp(v10, v6, v7)))\n
                    continue;\n
                v11 = v11 + v1;\n
            }\n
            v12 = v12 + 1;\n
            v11 += 1;\n
            v13 = v4->field_30;\n
            v10 = v13 + v11;\n
        } while (*((v13 + v11)));\n
        if (v12 <= 65535)\n
        {\n
            v14 = v12 + 1;\n
            v4->field_48 = v14;\n
            v15 = cgc_calloc(8, v14);\n
            v4->field_40 = v15;\n
            if (v15)\n
            {\n
                v16 = v4->field_30;\n
                if (!*(v16))\n
                {\n
                    v0 = 0;\n
                    v18 = 0;\n
                    v19 = 0;\n
                }\n
                else\n
                {\n
                    v17 = v1;\n
                    if (!v7)\n
                        v17 = v7;\n
                    v1 = v17;\n
                    *(&v2) = v7;\n
                    v19 = 0;\n
                    v18 = 0;\n
                    v0 = 0;\n
                    do\n
                    {\n
                        if (v7 && cgc_strncmp(v16, v6, *(&v2)))\n
                        {\n
                            v18 = v18 + 1;\n
                            continue;\n
                        }\n
                        v20 = v18;\n
                        v21 = v18 - v19;\n
                        v22 = cgc_malloc(v21 + 1);\n
                        if (!v22)\n
                            goto LABEL_40626e;\n
                        cgc_memcpy(v22, &v4->field_30[v19], v21);\n
                        v21[v22] = 0;\n
                        v23 = v0;\n
                        *((&v4->field_40->field_0 + 0x8 * v23)) = v22;\n
                        v0 = v23 + 1;\n
                        if (v0 == v4->field_48)\n
                            goto LABEL_40626e;\n
                        v18 = v20 + v1 + 1;\n
                        v19 = v18;\n
                        v26 = v4->field_30;\n
                        v16 = v26 + v18;\n
                    } while (*((v26 + v18)));\n
                    goto LABEL_40626e;\n
                }\n
                v27 = v18 - v19;\n
                v28 = cgc_malloc(v27 + 1);\n
                if (v28)\n
                {\n
                    cgc_memcpy(v28, &v4->field_30[v19], v27);\n
                    v27[v28] = 0;\n
                    (&v4->field_40->field_0)[v0] = v28;\n
                    return 1;\n
                }\n
            }\n
        }\n
    }\n
LABEL_40626e:\n
    v29 = v4->field_40;\n
    if (v29)\n
    {\n
        if (v4->field_48 > 0)\n
        {\n
            cgc_free(*(&v29->field_0));\n
            if (v4->field_48 >= 2)\n
            {\n
                v30 = 1;\n
                do\n
                {\n
                    cgc_free((&v4->field_40->field_0)[v30]);\n
                    v30 += 1;\n
                } while (v30 < v4->field_48);\n
            }\n
            v29 = v4->field_40;\n
        }\n
        cgc_free(v29);\n
    }\n
    v4->field_40 = 0;\n
    v4->field_48 = 0;\n
    return 0;\n
}\n
", "4219115:sub_4060eb": null, "4219620:sub_4062e4": null, "4219632:get_number": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    char *field_30;\n
} struct_0;\n
\n
long long get_number(unsigned long a0, char *a1, unsigned int *a2)\n
{\n
    void* v1;  // rbx\n
    struct_0 *v2;  // r13, Other Possible Types: unsigned long\n
    unsigned int v3[13];  // rax\n
    unsigned int v4;  // eax\n
    unsigned long v5;  // r15, Other Possible Types: unsigned int\n
\n
    v1 = a0 + 16;\n
    v2 = cgc_dict_get(v1, a1);\n
    if (!v2)\n
    {\n
        v3 = cgc_malloc(64);\n
        if (!v3)\n
            return 0;\n
        v2 = v3;\n
        v3[10] = 0;\n
        if (!cgc_dict_add(v1, a1, v3))\n
        {\n
            cgc_free(v3);\n
            return 0;\n
        }\n
    }\n
    v4 = *((v2 + 40));\n
    v5 = 0;\n
    if (v4 == 3)\n
        return 0;\n
    if (v4 == 2)\n
    {\n
        v5 = cgc_strtol(*((v2 + 48)), NULL, 0);\n
    }\n
    else if (v4 == 1)\n
    {\n
        v5 = *((v2 + 48));\n
    }\n
    *(a2) = v5;\n
    return 1;\n
}\n
", "4219792:set_result_var": "long long set_result_var(unsigned int a0[35], unsigned int a1[13])\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned int v3;  // eax\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    if (a0[30] == 1)\n
        cgc_free(*(&a0[34]));\n
    a0[30] = 0;\n
    v3 = a1[10];\n
    if (v3 == 2)\n
    {\n
        v4 = cgc_strdup(*(&a1[12]));\n
        if (!v4)\n
            return 0;\n
        *(&a0[32]) = v4;\n
    }\n
    else if (v3 == 1)\n
    {\n
        a0[32] = a1[12];\n
    }\n
    a0[30] = a1[10];\n
    return 1;\n
}\n
", "4219898:sub_4063fa": null, "4219904:cgc_assign_result": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    char *field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    struct struct_1 *field_80;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_assign_result(struct_2 *a0, struct_0 *a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c], Other Possible Types: char\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // rax\n
    unsigned long v4;  // rcx\n
    unsigned long long v5;  // rax\n
    unsigned int v6;  // r15d\n
    unsigned int v7;  // eax\n
    struct_1 *v8;  // rdx, Other Possible Types: unsigned long\n
    unsigned int v10[13];  // rax, Other Possible Types: unsigned long\n
    unsigned long v11;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v12;  // rbp\n
\n
    v3 = a1->field_0;\n
    v4 = v3 - 4;\n
    if (v4 < 2)\n
    {\n
        if (v3 == 4)\n
        {\n
            v0 = a1->field_18;\n
        }\n
        else\n
        {\n
            if (!get_number(a0, a1->field_18, &v0))\n
                return 0;\n
        }\n
        v7 = a0->field_78;\n
        if (v7 == 2)\n
        {\n
            v11 = v0;\n
            v8 = a0->field_80;\n
        }\n
        else\n
        {\n
            if (v7 != 1)\n
                return 0;\n
            cgc_sprintf(&v1, \"%d\", a0->field_80, v4, a4);\n
            v11 = v0;\n
            v8 = &v1;\n
        }\n
        v12 = cgc_set_field(a0, v11, v8);\n
        return v12;\n
    }\n
    else if (v3 != 6)\n
    {\n
        return 0;\n
    }\n
    else if (a0->field_78 != 2)\n
    {\n
        v6 = a0->field_80;\n
        v10 = cgc_calloc(1, 64);\n
        if (v10)\n
        {\n
            v10[10] = 1;\n
            v10[12] = v6;\n
            return cgc_dict_add(&a0->padding_0[16], a1->field_18, v10);\n
        }\n
        return 0;\n
    }\n
    else\n
    {\n
        v5 = cgc_strdup(a0->field_80);\n
        if (!v5)\n
            return 0;\n
        v10 = cgc_calloc(1, 64);\n
        if (v10)\n
        {\n
            *((v10 + 40)) = 2;\n
            *((v10 + 48)) = v5;\n
            return cgc_dict_add(&a0->padding_0[16], a1->field_18, v10);\n
        }\n
        return 0;\n
    }\n
}\n
", "4220221:sub_40653d": null, "4220224:cgc_do_match": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_do_match(unsigned int a0[35], void* a1, unsigned int *a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x88]\n
    char v1;  // [bp-0x68]\n
    char v2;  // [bp-0x50]\n
    struct struct_0 **v6;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v7;  // r14, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v9;  // rcx\n
    struct_0 *v10;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
\n
    if (!a1)\n
    {\n
        v7 = cgc_get_field(a0, 0, a2, a3, a4);\n
        if (!v7)\n
            goto LABEL_40667c;\n
    }\n
    else\n
    {\n
        if (!cgc_eval_expression(a0, a1, a2, a3, a4))\n
            return 0;\n
        a3 = a0[30];\n
        if (a3 != 1)\n
        {\n
            if (a3 != 2)\n
                return 0;\n
            v7 = *(&a0[32]);\n
            if (!v7)\n
                goto LABEL_40667c;\n
        }\n
        else\n
        {\n
            v7 = &v1;\n
            cgc_sprintf(&v1, \"%d\", a0[32], a3, a4);\n
            if (*(a2) != 3)\n
            {\n
LABEL_4065d4:\n
                if (!cgc_eval_expression(a0, a2, a2, a3, a4))\n
                    return 0;\n
                v9 = a0[30];\n
                if (v9 == 1)\n
                {\n
                    v10 = &v0;\n
                    cgc_sprintf(&v0, \"%d\", a0[32], v9, a4);\n
LABEL_406621:\n
                    if (cgc_regexp_init(&v2, v10))\n
                    {\n
                        v11 = cgc_regexp_match(&v2, v7);\n
                        cgc_regexp_free(&v2);\n
                        if (a0[30] == 1)\n
                            cgc_free(*(&a0[34]));\n
                        a0[30] = 1;\n
                        a0[32] = v11;\n
                        return 1;\n
                    }\n
LABEL_40667c:\n
                    return 0;\n
                }\n
                else if (v9 == 2)\n
                {\n
                    v6 = &a0[32];\n
                }\n
                else\n
                {\n
                    return 0;\n
                }\n
LABEL_4065a5:\n
                v10 = *(v6);\n
                if (!v10)\n
                    goto LABEL_40667c;\n
                goto LABEL_406621;\n
            }\n
LABEL_4065a1:\n
            v6 = a2 + 6;\n
            goto LABEL_4065a5;\n
        }\n
    }\n
    if (!(*(a2) == 3))\n
        goto LABEL_4065d4;\n
    goto LABEL_4065a1;\n
}\n
", "4220553:sub_406689": null, "4220560:do_concat": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    unsigned long long field_80;\n
    unsigned int field_88;\n
} struct_0;\n
\n
long long do_concat(struct_0 *a0, void* a1, void* a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned long v1;  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned long v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned long long v6;  // rax\n
    unsigned int v7;  // r12d\n
    unsigned long v8;  // r14, Other Possible Types: unsigned long long\n
    unsigned long long v9;  // rax\n
    unsigned long v10;  // ebp, Other Possible Types: unsigned int\n
    void* v11;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v12;  // rbp, Other Possible Types: unsigned long long\n
    char *v13;  // rax\n
    unsigned long long v14;  // r13, Other Possible Types: unsigned long, unsigned int\n
\n
    v6 = cgc_eval_expression(a0, a1, a2, a3, a4);\n
    if (!v6)\n
        return 0;\n
    v7 = a0->field_78;\n
    if (v7 == 2)\n
    {\n
        *(&v1) = a0->field_80;\n
        v8 = *(&v1) >> 32;\n
    }\n
    else if (v7 != 1)\n
    {\n
        v1 = v6;\n
    }\n
    else\n
    {\n
        *(&v4) = *(&a0->field_88);\n
        v1 = a0->field_80;\n
        v8 = v1 >> 32;\n
    }\n
    a0->field_78 = 0;\n
    v9 = cgc_eval_expression(a0, a2, a2, a3, a4);\n
    v11 = 0;\n
    if (!v9)\n
    {\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        v14 = a0->field_78;\n
        if (v14 == 2)\n
        {\n
            a3 = a0->field_80;\n
            *(&v0) = a3;\n
            v2 = a3 / 0x100000000;\n
        }\n
        else if (v14 != 1)\n
        {\n
            v2 = v9;\n
            v0 = v9;\n
        }\n
        else\n
        {\n
            a3 = a0->field_80;\n
            *(&v3) = *(&a0->field_88);\n
            v0 = a3;\n
            v2 = a3 / 0x100000000;\n
        }\n
        a0->field_78 = 0;\n
        if (v7 == 2)\n
        {\n
            v10 = cgc_strlen(v1 | v8 * 0x100000000) + 1;\n
        }\n
        else\n
        {\n
            v10 = 20;\n
            if (v7 > 1)\n
            {\n
                v11 = 0;\n
                goto LABEL_4068ae;\n
            }\n
        }\n
        if (v14 == 2)\n
        {\n
            v12 = v10 + cgc_strlen(v0 | v2 * 0x100000000) + 1;\n
        }\n
        else\n
        {\n
            if (!([D] amd64g_calculate_condition(0x2<64>, 0x7<64>, r13<8>, 0x2<64>, cc_ndep<8>)))\n
                goto LABEL_40689e;\n
            v12 = v10 + 20;\n
        }\n
        v13 = cgc_malloc(v12);\n
        if (v13)\n
        {\n
            if (v7 == 1)\n
            {\n
                cgc_sprintf(v13, \"%d\", v1, a3, a4);\n
                if (v14 == 1)\n
                    goto LABEL_4068de;\n
LABEL_406847:\n
                if (v14 == 2)\n
                    cgc_sprintf(&v13[cgc_strlen(v13)], \"%s\", v0 | v2 * 0x100000000, a3, a4);\n
                if (!(a0->field_78 == 1))\n
                    goto LABEL_40688a;\n
                goto LABEL_40687e;\n
            }\n
            else\n
            {\n
                if (v7 == 2)\n
                {\n
                    cgc_sprintf(v13, \"%s\", v1 | v8 * 0x100000000, a3, a4);\n
                    if (v14 == 1)\n
                        goto LABEL_4068de;\n
                    goto LABEL_406847;\n
                }\n
                *(v13) = 0;\n
                if (!(v14 == 1))\n
                    goto LABEL_406847;\n
LABEL_4068de:\n
                cgc_sprintf(&v13[cgc_strlen(v13)], \"%d\", v0, a3, a4);\n
                if (!(a0->field_78 == 1))\n
                    goto LABEL_40688a;\n
LABEL_40687e:\n
                cgc_free(*(&a0->field_88));\n
            }\n
LABEL_40688a:\n
            a0->field_78 = 2;\n
            a0->field_80 = v13;\n
            v11 = 1;\n
        }\n
    }\n
LABEL_40689e:\n
    if (v7 == 1)\n
        cgc_free(*(&v4));\n
LABEL_4068ae:\n
    if (v14 != 1)\n
        return v11;\n
    cgc_free(*(&v3));\n
}\n
", "4221194:sub_40690a": null, "4221200:cgc_set_field": "typedef struct struct_3 {\n
    char padding_0[48];\n
    char *field_30;\n
    unsigned long long field_38;\n
    struct struct_4 *field_40;\n
    unsigned int field_48;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    struct struct_0 *field_40;\n
    unsigned int field_48;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_set_field(struct_3 *a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_1 *v4;  // rbx\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // rax\n
    unsigned int *v8;  // rbp, Other Possible Types: unsigned long\n
    struct_2 *v9;  // rdi, Other Possible Types: unsigned long\n
    void* v10;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a1 > 0x10000)\n
        return 0;\n
    v4 = a0;\n
    if (a1 && !a0->field_40 && !cgc_read_fields(a0, a1, a2, a3, a4))\n
        return 0;\n
    if (a0->field_48 < a1)\n
    {\n
        v5 = cgc_realloc(a0->field_40, a1 * 8);\n
        if (!v5)\n
            return 0;\n
        a0->field_40 = v5;\n
        v6 = a0->field_48;\n
        cgc_memset(v5 + v6 * 8, 0, (a1 - v6) * 8);\n
        a0->field_48 = a1;\n
    }\n
    else if (!a1)\n
    {\n
        if (cgc_strlen(a2) > 4094)\n
            return 0;\n
        cgc_strcpy(a0->field_30, a2);\n
        v9 = a0->field_40;\n
        if (v9)\n
        {\n
            if (v4->field_48 > 0)\n
            {\n
                cgc_free(*(&v9->field_0));\n
                if (v4->field_48 >= 2)\n
                {\n
                    v8 = 1;\n
                    do\n
                    {\n
                        cgc_free((&v4->field_40->field_0)[v8]);\n
                        v8 += 1;\n
                    } while (v8 < v4->field_48);\n
                }\n
                v9 = v4->field_40;\n
            }\n
            cgc_free(v9);\n
        }\n
        v4->field_40 = 0;\n
        v4->field_48 = 0;\n
        v10 = v4->field_30;\n
LABEL_40699c:\n
        v4->field_38 = v10;\n
        return 1;\n
    }\n
    v7 = cgc_strdup(a2);\n
    if (!v7)\n
        return 0;\n
    (&a0->field_40->field_8)[a1] = v7;\n
    v10 = 0;\n
    goto LABEL_40699c;\n
}\n
", "4221499:sub_406a3b": null, "4221504:cgc_io_init_fd": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_io_init_fd(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_0 = a1;\n
    v1 = cgc_malloc(0x2000);\n
    a0->field_8 = v1;\n
    a0->field_10 = 0;\n
    a0->field_18 = -1;\n
    return v1;\n
}\n
", "4221541:sub_406a65": null, "4221552:cgc_io_init_bytes": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_io_init_bytes(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_0 = -1;\n
    a0->field_8 = a1;\n
    a0->field_14 = a2;\n
    a0->field_10 = 0;\n
    a0->field_18 = -1;\n
    return v1;\n
}\n
", "4221580:sub_406a8c": null, "4221584:cgc_io_init_string": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_io_init_string(struct_0 *a0, unsigned int a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
\n
    v0 = v2;\n
    v3 = cgc_strlen(a1);\n
    a0->field_0 = -1;\n
    *(&a0->field_8) = a1;\n
    a0->field_14 = v3;\n
    a0->field_10 = 0;\n
    a0->field_18 = -1;\n
    return v3;\n
}\n
", "4221637:sub_406ac5": null, "4221648:cgc_io_mark": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_io_mark(struct_0 *a0)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned int v2;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (a0->field_0 >= 0 && v2 > 0)\n
    {\n
        a0 = *((a0 + 8));\n
        cgc_memmove(a0, v2 + a0, v1->field_14 - v2);\n
        v3 = v1->field_10;\n
        v1->field_14 = v1->field_14 - v3;\n
        v1->field_10 = 0;\n
        v2 = 0;\n
    }\n
    *((a0 + 24)) = v2;\n
    return v3;\n
}\n
", "4221706:sub_406b0a": null, "4221712:cgc_io_rewind": "long long cgc_io_rewind(unsigned int a0[7])\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = a0[6];\n
    if (v1 != -1)\n
    {\n
        a0[4] = v1;\n
        return 1;\n
    }\n
    return 0;\n
}\n
", "4221732:sub_406b24": null, "4221744:cgc_io_tell": "long long cgc_io_tell(unsigned int a0[7])\n
{\n
    return a0[4] - a0[6];\n
}\n
", "4221751:sub_406b37": null, "4221760:cgc_io_seek": "long long cgc_io_seek(unsigned int a0[7], unsigned long a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = a1 + a0[6];\n
    v2 = 0;\n
    if (v1 <= a0[5])\n
    {\n
        a0[4] = v1;\n
        v2 = 1;\n
    }\n
    return v2;\n
}\n
", "4221779:sub_406b53": null, "4221792:cgc_io_getc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_io_getc(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    char *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long v4;  // rcx\n
\n
    v0 = v2;\n
    v3 = a0->field_10;\n
    if (v3 == a0->field_14)\n
    {\n
        a0 = a0->field_0;\n
        if (a0 < 0)\n
            return 4294967295;\n
        if (v3 == 0x2000)\n
            return 4294967295;\n
        if (cgc_receive())\n
            return 4294967295;\n
        if (v0 != 1)\n
            return 4294967295;\n
        a0->field_14 = a0->field_14 + 1;\n
        v3 = a0->field_10;\n
    }\n
    v4 = a0->field_8;\n
    a0->field_10 = v3 + 1;\n
    return *((v4 + v3));\n
}\n
", "4221887:sub_406bbf": null, "4221888:cgc_io_ungetc": "long long cgc_io_ungetc(unsigned int a0[6])\n
{\n
    unsigned int v1;  // ecx\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = a0[4] - 1;\n
    v2 = 0;\n
    if (v1 <= a0[5])\n
    {\n
        a0[4] = v1;\n
        v2 = 1;\n
    }\n
    return v2;\n
}\n
", "4221910:sub_406bd6": null, "4221920:cgc_io_peek": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_io_peek(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    char *v3;  // rax, Other Possible Types: unsigned long, unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned long v5;  // rdx\n
    unsigned int v6;  // esi\n
    unsigned long v7;  // rbp\n
\n
    v0 = v2;\n
    v3 = a0->field_10;\n
    v4 = a0->field_14;\n
    if (v3 == v4)\n
    {\n
        a0 = a0->field_0;\n
        if (a0 < 0)\n
            return 4294967295;\n
        if (v3 == 0x2000)\n
            return 4294967295;\n
        if (cgc_receive())\n
            return 4294967295;\n
        if (v0 != 1)\n
            return 4294967295;\n
        v4 = a0->field_14 + 1;\n
        a0->field_14 = v4;\n
        v3 = a0->field_10;\n
    }\n
    v5 = a0->field_8;\n
    v6 = v3 + 1;\n
    a0->field_10 = v6;\n
    v7 = *((v5 + v3));\n
    if (v4 < v3)\n
        v3 = v6;\n
    if (v7 < 0)\n
        v3 = v6;\n
    a0->field_10 = v3;\n
    return v7;\n
}\n
", "4222035:sub_406c53": null, "4222048:cgc_io_read": "long long cgc_io_read()\n
{\n
    return 4294967295;\n
}\n
", "4222054:sub_406c66": null, "4222064:cgc_program_init": "long long cgc_program_init(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    *(a0) = a1;\n
    return cgc_memset(a0, 0, 0x10);\n
}\n
", "4222097:sub_406c91": null, "4222112:cgc_program_parse": "extern unsigned long long g_40abce;\n
\n
long long cgc_program_parse(void* *a0)\n
{\n
    char v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned int *v3[7];  // rbx\n
    unsigned long v5;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long long v7[3];  // rcx\n
    unsigned long long *v9;  // rdx, Other Possible Types: unsigned long\n
    unsigned long long v10[3];  // r15, Other Possible Types: void*, unsigned long\n
\n
    v3 = a0;\n
    v10 = 0;\n
    while (true)\n
    {\n
        cgc_io_mark(*(a0));\n
        v5 = -2;\n
        if (!cgc_pattern_match(v3, \"BEGIN\"))\n
        {\n
            v5 = -3;\n
            if (!cgc_pattern_match(v3, \"END\"))\n
            {\n
                v5 = -1;\n
                if (!cgc_pattern_match(v3, &g_40abce))\n
                {\n
                    a0 = *(v3);\n
                    if (!cgc_parse_expression(v3, &v1, 123))\n
                    {\n
                        cgc_io_seek(a0, cgc_io_tell(*(v3)));\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        cgc_io_ungetc(a0);\n
                        v5 = *(&v1);\n
                        if (!v5)\n
                            break;\n
                    }\n
                }\n
            }\n
        }\n
        if (!cgc_parse_statements(v3, &v0))\n
            break;\n
        v7 = cgc_malloc(24);\n
        if (!v7)\n
            return 1;\n
        v7[0] = v5;\n
        v7[1] = *(&v0);\n
        v7[2] = 0;\n
        v9 = v10 + 16;\n
        if (!v10)\n
            v9 = a0 + 1;\n
        *(v9) = v7;\n
        v10 = v7;\n
        if (v5 == -3)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4222415:sub_406dcf": null, "4222416:cgc_parse_statements": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned long long g_8;\n
\n
long long cgc_parse_statements(unsigned int *a0[6], unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned long long *v1;  // [bp-0x38]\n
    unsigned long v4;  // r15\n
    unsigned long v5;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long long v7;  // rax\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    struct_0 *v10;  // rbp, Other Possible Types: unsigned long long, unsigned long\n
    void* v11;  // r13, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v12;  // rbp\n
    unsigned long long v13;  // rax\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
    unsigned long v15;  // rax\n
    unsigned int v16[5];  // r12\n
    unsigned long long *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v18;  // rax\n
    char *v19;  // rax\n
    unsigned long v20;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v21;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long long *v22;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = cgc_io_tell(*(a0));\n
    while (true)\n
    {\n
        v5 = cgc_io_getc(*(a0));\n
        if (v5 < 0)\n
            break;\n
        if (!cgc_isspace(v5))\n
        {\n
            cgc_io_ungetc(*(a0));\n
            break;\n
        }\n
    }\n
    if (cgc_io_getc(*(a0)) == 123)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
        while (true)\n
        {\n
LABEL_406e30:\n
            v6 = cgc_io_getc(*(a0));\n
            if (v6 >= 0)\n
            {\n
                if (!(!cgc_isspace(v6)))\n
                    continue;\n
                cgc_io_ungetc(*(a0));\n
            }\n
            v7 = cgc_io_peek(*(a0));\n
            if (v7 == 35)\n
            {\n
                do\n
                {\n
                    v8 = cgc_io_getc(*(a0));\n
                    if (v8 < 0)\n
                        goto LABEL_406e30;\n
                } while (v8 != 10);\n
                continue;\n
            }\n
            if (v7 == 125)\n
            {\n
                cgc_io_getc(*(a0));\n
                *(a1) = v11;\n
                goto LABEL_4072c0;\n
            }\n
            if (!cgc_parse_statements(a0, &v0))\n
                break;\n
            v9 = *(&v0);\n
            if (v9)\n
            {\n
                if (!v11)\n
                {\n
                    v11 = v9;\n
                    v10 = v9;\n
                }\n
                else\n
                {\n
                    *((v10 + &g_8)) = v9;\n
                    v10 = v9;\n
                }\n
            }\n
        }\n
        goto LABEL_407185;\n
    }\n
    v12 = cgc_io_tell(*(a0)) - 1;\n
    cgc_io_seek(*(a0), v12);\n
    v13 = cgc_parse_var(a0);\n
    if (!v13)\n
    {\n
LABEL_407185:\n
        v14 = 0;\n
        goto LABEL_407188;\n
    }\n
    else\n
    {\n
        v14 = v13;\n
        while (true)\n
        {\n
            v15 = cgc_io_getc(*(a0));\n
            if (v15 < 0)\n
                break;\n
            if (!cgc_isspace(v15))\n
            {\n
                cgc_io_ungetc(*(a0));\n
                break;\n
            }\n
        }\n
        v16 = cgc_calloc(1, 48);\n
        if (!cgc_strcmp(v14, \"if\"))\n
        {\n
            v16[0] = 1;\n
            if (!(cgc_io_getc(*(a0)) == 40))\n
                goto LABEL_407188;\n
            if (!cgc_parse_expression(a0, &v16[4], 41))\n
                goto LABEL_407188;\n
            v17 = &v16[1 + 1];\n
        }\n
        else if (!cgc_strcmp(v14, \"while\"))\n
        {\n
            v16[0] = 2;\n
            v16[4] = 0;\n
            if (!(cgc_io_getc(*(a0)) == 40))\n
                goto LABEL_407188;\n
            if (!cgc_parse_expression(a0, &v16[1 + 1], 41))\n
                goto LABEL_407188;\n
            v17 = &v16[1 + 3];\n
        }\n
        else if (!cgc_strcmp(v14, \"do\"))\n
        {\n
            v16[0] = 2;\n
            v16[4] = 1;\n
            if (!cgc_parse_statements(a0, &v16[1 + 3]))\n
                goto LABEL_407188;\n
            cgc_free(v14);\n
            while (true)\n
            {\n
                v18 = cgc_io_getc(*(a0));\n
                if (v18 < 0)\n
                    break;\n
                if (!cgc_isspace(v18))\n
                {\n
                    cgc_io_ungetc(*(a0));\n
                    break;\n
                }\n
            }\n
            v19 = cgc_parse_var(a0);\n
            if (v19)\n
            {\n
                v14 = v19;\n
                if (!(!cgc_strcmp(v19, \"while\")))\n
                    goto LABEL_407188;\n
                skip_whitespace(a0);\n
                if (!(cgc_io_getc(*(a0)) == 40))\n
                    goto LABEL_407188;\n
                if (!cgc_parse_expression(a0, &v16[1 + 1], 41))\n
                    goto LABEL_407188;\n
LABEL_4072a4:\n
                skip_whitespace(a0);\n
                if (cgc_io_getc(*(a0)) == 59)\n
                {\n
LABEL_4072bd:\n
                    *(a1) = v16;\n
LABEL_4072c0:\n
                    return 1;\n
                }\n
LABEL_407188:\n
                cgc_free(v14);\n
                cgc_io_seek(*(a0), v4);\n
                return 0;\n
            }\n
            goto LABEL_407185;\n
        }\n
        else if (!cgc_strcmp(v14, \"for\"))\n
        {\n
            v16[0] = 3;\n
            if (!(cgc_io_getc(*(a0)) == 40))\n
                goto LABEL_407188;\n
            if (!cgc_parse_expression(a0, &v16[4], 59))\n
                goto LABEL_407188;\n
            if (!cgc_parse_expression(a0, &v16[1 + 1], 59))\n
                goto LABEL_407188;\n
            if (!cgc_parse_expression(a0, &v16[1 + 3], 41))\n
                goto LABEL_407188;\n
            v17 = v16 + 2;\n
        }\n
        else if (!cgc_strcmp(v14, \"continue\"))\n
        {\n
            v16[0] = 5;\n
            goto LABEL_4072a4;\n
        }\n
        else if (!cgc_strcmp(v14, \"break\"))\n
        {\n
            v16[0] = 6;\n
            goto LABEL_4072a4;\n
        }\n
        else if (!cgc_strcmp(v14, \"next\"))\n
        {\n
            v16[0] = 7;\n
            goto LABEL_4072a4;\n
        }\n
        else if (!cgc_strcmp(v14, \"exit\"))\n
        {\n
            *(&v16[0]) = &g_8;\n
            goto LABEL_4072a4;\n
        }\n
        else\n
        {\n
            if (cgc_strcmp(v14, \"printf\") && cgc_strcmp(v14, \"print\"))\n
            {\n
                cgc_io_seek(*(a0), v12);\n
                *(&v16[0]) = &g_8;\n
                v20 = cgc_parse_expression(a0, &v16[4], 0x100);\n
                goto LABEL_4070c9;\n
            }\n
            *(&v16[0]) = &g_8;\n
            if (cgc_strcmp(v14, \"printf\"))\n
            {\n
LABEL_407248:\n
                v1 = &v16[1 + 1];\n
                v21 = 0;\n
                while (cgc_parse_expression(a0, &v0, 257))\n
                {\n
                    v22 = v21 + &g_8;\n
                    v21 = *(&v0);\n
                    v22 = v1;\n
                    *(v22) = v21;\n
                    cgc_io_ungetc(*(a0));\n
                    if (cgc_io_getc(*(a0)) != 44)\n
                        goto LABEL_4072bd;\n
                }\n
            }\n
            else if (cgc_parse_expression(a0, &v16[4], 257))\n
            {\n
                cgc_io_ungetc(*(a0));\n
                if (!(cgc_io_getc(*(a0)) == 44))\n
                    goto LABEL_407188;\n
                goto LABEL_407248;\n
            }\n
        }\n
        v20 = cgc_parse_statements(a0, v17);\n
LABEL_4070c9:\n
        if (!(!v20))\n
            goto LABEL_4072bd;\n
        goto LABEL_407188;\n
    }\n
}\n
", "4223756:sub_40730c": null, "4223760:cgc_pattern_match": "long long cgc_pattern_match(unsigned int *a0[7], char a1[2])\n
{\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rax\n
    unsigned long v5;  // rax\n
    char v6[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    do\n
    {\n
        v2 = cgc_io_getc(*(a0));\n
        if (v2 < 0)\n
        {\n
LABEL_4073d8:\n
            cgc_io_seek(*(a0), cgc_io_tell(*(a0)));\n
            goto LABEL_4073e6__0;\n
        }\n
    } while (cgc_isspace(v2));\n
    cgc_io_ungetc(*(a0));\n
    if (a1[0])\n
    {\n
        v6 = 1;\n
        v3 = a1;\n
        do\n
        {\n
            v4 = cgc_io_getc(*(a0));\n
            if (v4 < 0)\n
                goto LABEL_4073d8;\n
            if (!(v4 == *(v3)))\n
                goto LABEL_4073d8;\n
            v5 = v6;\n
            v3 = &a1[v6];\n
            v6 = v6 + 1;\n
        } while (a1[v5]);\n
    }\n
    while (true)\n
    {\n
        v7 = cgc_io_getc(*(a0));\n
        if (v7 < 0)\n
        {\n
LABEL_4073c3:\n
            if (cgc_io_peek(*(a0)) == 123)\n
                return 1;\n
            goto LABEL_4073d8;\n
        }\n
        else if (!cgc_isspace(v7))\n
        {\n
            cgc_io_ungetc(*(a0));\n
            goto LABEL_4073c3;\n
        }\n
    }\n
LABEL_4073e6__0:\n
    return 0;\n
}\n
", "4223894:sub_407396": null, "4223983:sub_4073ef": null, "4223984:cgc_parse_expression": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 *g_8;\n
\n
long long cgc_parse_expression(unsigned long long *a0, unsigned long long *a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x58]\n
    void* v1;  // [bp-0x50]\n
    char v2;  // [bp-0x48]\n
    unsigned long long *v3;  // [bp-0x38]\n
    unsigned int v5;  // r13d\n
    unsigned long long *v6;  // rbx\n
    unsigned long v8;  // rax\n
    struct struct_0 **v10;  // rbp\n
    struct_1 *v11;  // r12\n
    unsigned int *v12;  // r14\n
\n
    v5 = a2;\n
    v3 = a1;\n
    v6 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v8 = cgc_io_getc(*(v6));\n
        if (v8 < 0)\n
            goto LABEL_40743f;\n
        if (!cgc_isspace(v8))\n
        {\n
            cgc_io_ungetc(*(v6));\n
LABEL_40743f:\n
            v10 = &v0;\n
            v11 = &v2;\n
            v12 = 0;\n
        }\n
    }\n
}\n
", "4224083:sub_407453": null, "4224238:sub_4074ee": null, "4224268:sub_40750c": null, "4224409:sub_407599": null, "4226439:sub_407d87": null, "4226448:skip_whitespace": "long long skip_whitespace(void* *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    while (true)\n
    {\n
        v1 = cgc_io_getc(*(a0));\n
        if (v1 < 0)\n
        {\n
            return v1;\n
        }\n
        else if (!cgc_isspace(v1))\n
        {\n
            return cgc_io_ungetc(*(a0));\n
        }\n
    }\n
}\n
", "4226498:sub_407dc2": null, "4226512:cgc_parse_number": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_parse_number(void* *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x68]\n
    struct_0 *v2;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v3;  // rax\n
    unsigned int v5[7];  // rax\n
\n
    v2 = 0;\n
    do\n
    {\n
        v3 = cgc_io_getc(*(a0));\n
        if (v3 < 0)\n
        {\n
LABEL_407e6e:\n
            cgc_free(0);\n
            return 0;\n
        }\n
        (&v0)[v2] = v3;\n
        if (v2 == 63)\n
        {\n
            cgc_io_ungetc(*(a0));\n
LABEL_407e30:\n
            (&v0)[v2] = 0;\n
            v5 = cgc_calloc(1, 48);\n
            if (v5)\n
            {\n
                v5[0] = 2;\n
                v5[6] = cgc_strtol(&v0, NULL, 10);\n
                *(a1) = v5;\n
                return 1;\n
            }\n
            goto LABEL_407e6e;\n
        }\n
        v2 += 1;\n
    } while (cgc_isdigit(v3));\n
    cgc_io_ungetc(*(a0));\n
    if (v2 == 1)\n
        goto LABEL_407e6e;\n
    goto LABEL_407e30;\n
}\n
", "4226693:sub_407e85": null, "4226704:cgc_parse_variable": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_parse_variable(unsigned long a0, unsigned long long *a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rbx\n
    struct_0 *v4;  // rax\n
\n
    v0 = v2;\n
    v3 = cgc_parse_var();\n
    if (v3 && cgc_strlen(v3) && cgc_strcmp(v3, \"if\") && cgc_strcmp(v3, \"while\") && cgc_strcmp(v3, \"continue\") && cgc_strcmp(v3, \"do\") && cgc_strcmp(v3, \"for\") && cgc_strcmp(v3, \"break\") && cgc_strcmp(v3, \"next\") && cgc_strcmp(v3, \"exit\") && cgc_strcmp(v3, \"print\") && cgc_strcmp(v3, \"printf\"))\n
    {\n
        v4 = cgc_calloc(1, 48);\n
        if (v4)\n
        {\n
            v4->field_0 = 6;\n
            v4->field_18 = v3;\n
            *(a1) = v4;\n
            return 1;\n
        }\n
    }\n
    cgc_free(v3);\n
    return 0;\n
}\n
", "4227013:sub_407fc5": null, "4227024:cgc_treeify_expression": "long long cgc_treeify_expression(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
    unsigned long v5;  // r14\n
    unsigned long v6;  // r15\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rdx\n
    unsigned long v10;  // rbp\n
    unsigned long v11;  // rax\n
    unsigned int v12;  // ecx\n
    unsigned long v13;  // rcx\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdx\n
    unsigned long v16;  // rsi\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rax\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // rbp\n
    unsigned long v22;  // rax\n
    unsigned long v23;  // rcx\n
    unsigned long v24;  // rax\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rdx\n
    unsigned long v27;  // rax\n
    unsigned long v28;  // rcx\n
    unsigned long v29;  // rdx\n
    unsigned long v30;  // rax\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rdx\n
    unsigned long v33;  // rbp\n
    unsigned long v34;  // r13\n
    unsigned long v35;  // rbp\n
    unsigned long v36;  // rbx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rax\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rdx\n
    unsigned long v41;  // rax\n
    unsigned long v42;  // rcx\n
    unsigned long v43;  // rdx\n
    unsigned long v44;  // rbp\n
    unsigned long v45;  // rcx\n
    unsigned long v46;  // rax\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rdx\n
    unsigned long v49;  // rax\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rdx\n
    unsigned long v52;  // rbp\n
    unsigned int v53;  // eax\n
    unsigned long v54;  // rcx\n
    unsigned long v55;  // rax\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rdx\n
    unsigned long v58;  // rax\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rdx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rax\n
    unsigned long v63;  // rcx\n
    unsigned long v64;  // rdx\n
    unsigned long v65;  // rax\n
    unsigned long v66;  // rcx\n
    unsigned long v67;  // rdx\n
    unsigned long v68;  // r12\n
    unsigned int v69;  // eax\n
    unsigned long v70;  // rcx\n
    unsigned long v71;  // rax\n
    unsigned long v72;  // rcx\n
    unsigned long v73;  // rdx\n
    unsigned long v74;  // rax\n
    unsigned long v75;  // rcx\n
    unsigned long v76;  // rdx\n
    unsigned long v77;  // rcx\n
    unsigned long v78;  // rax\n
    unsigned long v79;  // rcx\n
    unsigned long v80;  // rdx\n
    unsigned long v81;  // rax\n
    unsigned long v82;  // rcx\n
    unsigned long v83;  // rdx\n
    unsigned int v84;  // eax\n
    unsigned long v85;  // rcx\n
    unsigned long v86;  // rax\n
    unsigned long v87;  // rcx\n
    unsigned long v88;  // rdx\n
    unsigned long v89;  // rax\n
    unsigned long v90;  // rcx\n
    unsigned long v91;  // rdx\n
    unsigned long v92;  // rcx\n
    unsigned long v93;  // rax\n
    unsigned long v94;  // rcx\n
    unsigned long v95;  // rdx\n
    unsigned long v96;  // rax\n
    unsigned long v97;  // rcx\n
    unsigned long v98;  // rdx\n
    unsigned int v99;  // eax\n
    unsigned long v100;  // rcx\n
    unsigned long v101;  // rax\n
    unsigned long v102;  // rcx\n
    unsigned long v103;  // rdx\n
    unsigned long v104;  // rax\n
    unsigned long v105;  // rcx\n
    unsigned long v106;  // rdx\n
    unsigned long v107;  // rcx\n
    unsigned long v108;  // rax\n
    unsigned long v109;  // rcx\n
    unsigned long v110;  // rdx\n
    unsigned long v111;  // rax\n
    unsigned long v112;  // rcx\n
    unsigned long v113;  // rdx\n
    unsigned long v114;  // r12\n
    unsigned int v115;  // eax\n
    unsigned long v116;  // rcx\n
    unsigned long v117;  // rax\n
    unsigned long v118;  // rcx\n
    unsigned long v119;  // rdx\n
    unsigned long v120;  // rax\n
    unsigned long v121;  // rcx\n
    unsigned long v122;  // rdx\n
    unsigned long v123;  // rcx\n
    unsigned long v124;  // rax\n
    unsigned long v125;  // rcx\n
    unsigned long v126;  // rdx\n
    unsigned long v127;  // rax\n
    unsigned long v128;  // rcx\n
    unsigned long v129;  // rdx\n
    unsigned long v130;  // r12\n
    unsigned int v131;  // eax\n
    unsigned long v132;  // rcx\n
    unsigned long v133;  // rax\n
    unsigned long v134;  // rcx\n
    unsigned long v135;  // rdx\n
    unsigned long v136;  // rax\n
    unsigned long v137;  // rcx\n
    unsigned long v138;  // rdx\n
    unsigned long v139;  // rcx\n
    unsigned long v140;  // rax\n
    unsigned long v141;  // rcx\n
    unsigned long v142;  // rdx\n
    unsigned long v143;  // rax\n
    unsigned long v144;  // rcx\n
    unsigned long v145;  // rdx\n
    unsigned long v146;  // rcx\n
    unsigned long v147;  // rax\n
    unsigned long v148;  // rcx\n
    unsigned long v149;  // rdx\n
    unsigned long v150;  // rax\n
    unsigned long v151;  // rcx\n
    unsigned long v152;  // rdx\n
    unsigned long v153;  // rdi\n
    unsigned long v154;  // rax\n
    unsigned long v155;  // rcx\n
    unsigned long v156;  // rdx\n
    unsigned long v157;  // rdi\n
    unsigned long v158;  // rax\n
    unsigned long v159;  // rcx\n
    unsigned long v160;  // rdx\n
    unsigned long v161;  // rsi\n
    unsigned long v162;  // rcx\n
    unsigned long v163;  // rdx\n
    unsigned long v164;  // rsi\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return 1;\n
    v5 = a0;\n
    v6 = *((v3 + 16));\n
    *((v3 + 16)) = 0;\n
    v10 = *(a0);\n
    while (true)\n
    {\n
        if (!v10)\n
        {\n
            if (a1 >= 2)\n
            {\n
                v11 = *(a0);\n
                if (v11)\n
                {\n
                    do\n
                    {\n
                        v12 = *(v11);\n
                        if (v12 != 38)\n
                        {\n
                            if (!(v12 == 37))\n
                                continue;\n
                            if (!(!*((v11 + 24))))\n
                                continue;\n
                            v13 = *((v11 + 16));\n
                            if (v13 && *(v13) - 4 <= 2)\n
                            {\n
                                *(v11) = 35;\n
                                goto LABEL_4080eb;\n
                            }\n
                            v14 = *((v11 + 8));\n
                            if (!v14)\n
                                continue;\n
                            if (!(*(v14) - 4 <= 2))\n
                                continue;\n
                            *(v11) = 34;\n
                            goto LABEL_40816a;\n
                        }\n
                        else\n
                        {\n
                            if (!(!*((v11 + 24))))\n
                                continue;\n
                            v13 = *((v11 + 16));\n
                            if (v13 && *(v13) - 4 <= 2)\n
                            {\n
                                *(v11) = 33;\n
LABEL_4080eb:\n
                                *((v11 + 24)) = v13;\n
                                v15 = *((v13 + 8));\n
                                if (v15)\n
                                    *((v15 + 16)) = *((v13 + 16));\n
                                v16 = *((v13 + 16));\n
                                if (v16)\n
                                    *((v16 + 8)) = v15;\n
                                *((v13 + 8)) = 0;\n
                                if (*(a0) == *((v11 + 24)))\n
                                    *(a0) = v11;\n
                                continue;\n
                            }\n
                            v14 = *((v11 + 8));\n
                            if (!v14)\n
                                continue;\n
                            if (!(*(v14) - 4 <= 2))\n
                                continue;\n
                            *(v11) = 32;\n
LABEL_40816a:\n
                            *((v11 + 24)) = v14;\n
                            v17 = *((v14 + 8));\n
                            if (v17)\n
                                *((v17 + 16)) = *((v14 + 16));\n
                            v18 = *((v14 + 16));\n
                            if (v18)\n
                                *((v18 + 8)) = v17;\n
                            *((v14 + 8)) = 0;\n
                        }\n
                        v11 = *((v11 + 8));\n
                    } while (v11);\n
                }\n
                if (a1 >= 4)\n
                {\n
                    v19 = *(a0);\n
                    v20 = v19;\n
                    do\n
                    {\n
                        v21 = v20;\n
                        v20 = *((v20 + 8));\n
                    } while (v20);\n
                    do\n
                    {\n
                        if (*(v21) - 13 >= -6 && !*((v21 + 24)))\n
                        {\n
                            v22 = *((v21 + 16));\n
                            v36 = 0;\n
                            if (!v22)\n
                                goto LABEL_4081a7;\n
                            if (!*((v21 + 8)))\n
                                goto LABEL_4081a7;\n
                            if (!(*(v22) - 4 <= 2))\n
                                goto LABEL_4081a7;\n
                            if (!cgc_treeify_expression(v21 + 8, 99))\n
                                goto LABEL_4081a7;\n
                            v23 = *((v21 + 8));\n
                            v24 = *((v21 + 16));\n
                            *((v21 + 24)) = v24;\n
                            *((v21 + 32)) = v23;\n
                            v25 = *((v24 + 8));\n
                            if (v25)\n
                                *((v25 + 16)) = *((v24 + 16));\n
                            v26 = *((v24 + 16));\n
                            if (v26)\n
                                *((v26 + 8)) = v25;\n
                            *((v24 + 8)) = 0;\n
                            v27 = *((v21 + 32));\n
                            v28 = *((v27 + 8));\n
                            if (v28)\n
                                *((v28 + 16)) = *((v27 + 16));\n
                            v29 = *((v27 + 16));\n
                            if (v29)\n
                                *((v29 + 8)) = v28;\n
                            *((v27 + 8)) = 0;\n
                            v19 = *(a0);\n
                            if (v19 == *((v21 + 24)))\n
                            {\n
                                *(a0) = v21;\n
                                v19 = v21;\n
                            }\n
                        }\n
                        v21 = *((v21 + 16));\n
                    } while (v21);\n
                    do\n
                    {\n
                        v33 = v19;\n
                        v19 = *((v19 + 8));\n
                    } while (v19);\n
                    do\n
                    {\n
                        if (*(v33) == 13 && !*((v33 + 24)))\n
                        {\n
                            v36 = 0;\n
                            if (!*((v33 + 16)))\n
                                goto LABEL_4081a7;\n
                            if (!*((v33 + 8)))\n
                                goto LABEL_4081a7;\n
                            if (!cgc_treeify_expression(v33 + 8, 99))\n
                                goto LABEL_4081a7;\n
                            v30 = *((v33 + 8));\n
                            *((v33 + 40)) = v30;\n
                            v31 = *((v30 + 8));\n
                            if (v31)\n
                                *((v31 + 16)) = *((v30 + 16));\n
                            v32 = *((v30 + 16));\n
                            if (v32)\n
                                *((v32 + 8)) = v31;\n
                            *((v30 + 8)) = 0;\n
                            *((v33 + 24)) = *(a0);\n
                            *((*((v33 + 16)) + 8)) = 0;\n
                            *((v33 + 16)) = 0;\n
                            *(a0) = v33;\n
                            if (!cgc_treeify_expression(v33 + 24, 99))\n
                                goto LABEL_4081a7;\n
                        }\n
                        v33 = *((v33 + 16));\n
                    } while (v33);\n
                    v34 = *(a0);\n
                    if (v34)\n
                    {\n
                        v35 = v34;\n
                        do\n
                        {\n
                            if (*(v35) == 14 && !*((v35 + 24)))\n
                            {\n
                                v36 = 0;\n
                                if (!*((v35 + 16)))\n
                                    goto LABEL_4081a7;\n
                                if (!*((v35 + 8)))\n
                                    goto LABEL_4081a7;\n
                                if (!cgc_treeify_expression(v35 + 8, 99))\n
                                    goto LABEL_4081a7;\n
                                v37 = *((v35 + 8));\n
                                v38 = *((v35 + 16));\n
                                *((v35 + 24)) = v38;\n
                                *((v35 + 32)) = v37;\n
                                v39 = *((v38 + 8));\n
                                if (v39)\n
                                    *((v39 + 16)) = *((v38 + 16));\n
                                v40 = *((v38 + 16));\n
                                if (v40)\n
                                    *((v40 + 8)) = v39;\n
                                *((v38 + 8)) = 0;\n
                                v41 = *((v35 + 32));\n
                                v42 = *((v41 + 8));\n
                                if (v42)\n
                                    *((v42 + 16)) = *((v41 + 16));\n
                                v43 = *((v41 + 16));\n
                                if (v43)\n
                                    *((v43 + 8)) = v42;\n
                                *((v41 + 8)) = 0;\n
                                v34 = *(a0);\n
                                if (v34 == *((v35 + 24)))\n
                                {\n
                                    *(a0) = v35;\n
                                    v34 = v35;\n
                                }\n
                            }\n
                            v35 = *((v35 + 8));\n
                        } while (v35);\n
                        if (v34)\n
                        {\n
                            v44 = v34;\n
                            do\n
                            {\n
                                if (*(v44) == 15 && !*((v44 + 24)))\n
                                {\n
                                    v36 = 0;\n
                                    if (!*((v44 + 16)))\n
                                        goto LABEL_4081a7;\n
                                    if (!*((v44 + 8)))\n
                                        goto LABEL_4081a7;\n
                                    if (!cgc_treeify_expression(v44 + 8, 99))\n
                                        goto LABEL_4081a7;\n
                                    v45 = *((v44 + 8));\n
                                    v46 = *((v44 + 16));\n
                                    *((v44 + 24)) = v46;\n
                                    *((v44 + 32)) = v45;\n
                                    v47 = *((v46 + 8));\n
                                    if (v47)\n
                                        *((v47 + 16)) = *((v46 + 16));\n
                                    v48 = *((v46 + 16));\n
                                    if (v48)\n
                                        *((v48 + 8)) = v47;\n
                                    *((v46 + 8)) = 0;\n
                                    v49 = *((v44 + 32));\n
                                    v50 = *((v49 + 8));\n
                                    if (v50)\n
                                        *((v50 + 16)) = *((v49 + 16));\n
                                    v51 = *((v49 + 16));\n
                                    if (v51)\n
                                        *((v51 + 8)) = v50;\n
                                    *((v49 + 8)) = 0;\n
                                    v34 = *(a0);\n
                                    if (v34 == *((v44 + 24)))\n
                                    {\n
                                        *(a0) = v44;\n
                                        v34 = v44;\n
                                    }\n
                                }\n
                                v44 = *((v44 + 8));\n
                            } while (v44);\n
                            if (v34)\n
                            {\n
                                v52 = v34;\n
                                do\n
                                {\n
                                    v53 = *(v52);\n
                                    if (v53 == 17)\n
                                    {\n
                                        if (!*((v52 + 24)))\n
                                        {\n
                                            v36 = 0;\n
                                            if (!*((v52 + 16)))\n
                                                goto LABEL_4081a7;\n
                                            if (!*((v52 + 8)))\n
                                                goto LABEL_4081a7;\n
                                            if (!cgc_treeify_expression(v52 + 8, 99))\n
                                                goto LABEL_4081a7;\n
                                            v54 = *((v52 + 8));\n
                                            v55 = *((v52 + 16));\n
                                            *((v52 + 24)) = v55;\n
                                            *((v52 + 32)) = v54;\n
                                            v56 = *((v55 + 8));\n
                                            if (v56)\n
                                                *((v56 + 16)) = *((v55 + 16));\n
                                            v57 = *((v55 + 16));\n
                                            if (v57)\n
                                                *((v57 + 8)) = v56;\n
                                            *((v55 + 8)) = 0;\n
                                            v58 = *((v52 + 32));\n
                                            v59 = *((v58 + 8));\n
                                            if (v59)\n
                                                *((v59 + 16)) = *((v58 + 16));\n
                                            v60 = *((v58 + 16));\n
                                            if (v60)\n
                                                *((v60 + 8)) = v59;\n
                                            *((v58 + 8)) = 0;\n
                                            v34 = *(a0);\n
                                            if (v34 == *((v52 + 24)))\n
                                            {\n
                                                *(a0) = v52;\n
                                                v34 = v52;\n
                                            }\n
                                        }\n
                                        v53 = *(v52);\n
                                    }\n
                                    if (v53 == 16 && !*((v52 + 24)))\n
                                    {\n
                                        v36 = 0;\n
                                        if (!*((v52 + 16)))\n
                                            goto LABEL_4081a7;\n
                                        if (!*((v52 + 8)))\n
                                            goto LABEL_4081a7;\n
                                        if (!cgc_treeify_expression(v52 + 8, 99))\n
                                            goto LABEL_4081a7;\n
                                        v61 = *((v52 + 8));\n
                                        v62 = *((v52 + 16));\n
                                        *((v52 + 24)) = v62;\n
                                        *((v52 + 32)) = v61;\n
                                        v63 = *((v62 + 8));\n
                                        if (v63)\n
                                            *((v63 + 16)) = *((v62 + 16));\n
                                        v64 = *((v62 + 16));\n
                                        if (v64)\n
                                            *((v64 + 8)) = v63;\n
                                        *((v62 + 8)) = 0;\n
                                        v65 = *((v52 + 32));\n
                                        v66 = *((v65 + 8));\n
                                        if (v66)\n
                                            *((v66 + 16)) = *((v65 + 16));\n
                                        v67 = *((v65 + 16));\n
                                        if (v67)\n
                                            *((v67 + 8)) = v66;\n
                                        *((v65 + 8)) = 0;\n
                                        v34 = *(a0);\n
                                        if (v34 == *((v52 + 24)))\n
                                        {\n
                                            *(a0) = v52;\n
                                            v34 = v52;\n
                                        }\n
                                    }\n
                                    v52 = *((v52 + 8));\n
                                } while (v52);\n
                                if (v34)\n
                                {\n
                                    v68 = v34;\n
                                    do\n
                                    {\n
                                        v69 = *(v68);\n
                                        if (v69 == 22)\n
                                        {\n
                                            if (!*((v68 + 24)))\n
                                            {\n
                                                v36 = 0;\n
                                                if (!*((v68 + 16)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!*((v68 + 8)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                    goto LABEL_4081a7;\n
                                                v70 = *((v68 + 8));\n
                                                v71 = *((v68 + 16));\n
                                                *((v68 + 24)) = v71;\n
                                                *((v68 + 32)) = v70;\n
                                                v72 = *((v71 + 8));\n
                                                if (v72)\n
                                                    *((v72 + 16)) = *((v71 + 16));\n
                                                v73 = *((v71 + 16));\n
                                                if (v73)\n
                                                    *((v73 + 8)) = v72;\n
                                                *((v71 + 8)) = 0;\n
                                                v74 = *((v68 + 32));\n
                                                v75 = *((v74 + 8));\n
                                                if (v75)\n
                                                    *((v75 + 16)) = *((v74 + 16));\n
                                                v76 = *((v74 + 16));\n
                                                if (v76)\n
                                                    *((v76 + 8)) = v75;\n
                                                *((v74 + 8)) = 0;\n
                                                v34 = *(a0);\n
                                                if (v34 == *((v68 + 24)))\n
                                                {\n
                                                    *(a0) = v68;\n
                                                    v34 = v68;\n
                                                }\n
                                            }\n
                                            v69 = *(v68);\n
                                        }\n
                                        if (v69 == 23 && !*((v68 + 24)))\n
                                        {\n
                                            v36 = 0;\n
                                            if (!*((v68 + 16)))\n
                                                goto LABEL_4081a7;\n
                                            if (!*((v68 + 8)))\n
                                                goto LABEL_4081a7;\n
                                            if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                goto LABEL_4081a7;\n
                                            v77 = *((v68 + 8));\n
                                            v78 = *((v68 + 16));\n
                                            *((v68 + 24)) = v78;\n
                                            *((v68 + 32)) = v77;\n
                                            v79 = *((v78 + 8));\n
                                            if (v79)\n
                                                *((v79 + 16)) = *((v78 + 16));\n
                                            v80 = *((v78 + 16));\n
                                            if (v80)\n
                                                *((v80 + 8)) = v79;\n
                                            *((v78 + 8)) = 0;\n
                                            v81 = *((v68 + 32));\n
                                            v82 = *((v81 + 8));\n
                                            if (v82)\n
                                                *((v82 + 16)) = *((v81 + 16));\n
                                            v83 = *((v81 + 16));\n
                                            if (v83)\n
                                                *((v83 + 8)) = v82;\n
                                            *((v81 + 8)) = 0;\n
                                            v34 = *(a0);\n
                                            if (v34 == *((v68 + 24)))\n
                                            {\n
                                                *(a0) = v68;\n
                                                v34 = v68;\n
                                            }\n
                                        }\n
                                        v84 = *(v68);\n
                                        if (v84 == 18)\n
                                        {\n
                                            if (!*((v68 + 24)))\n
                                            {\n
                                                v36 = 0;\n
                                                if (!*((v68 + 16)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!*((v68 + 8)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                    goto LABEL_4081a7;\n
                                                v85 = *((v68 + 8));\n
                                                v86 = *((v68 + 16));\n
                                                *((v68 + 24)) = v86;\n
                                                *((v68 + 32)) = v85;\n
                                                v87 = *((v86 + 8));\n
                                                if (v87)\n
                                                    *((v87 + 16)) = *((v86 + 16));\n
                                                v88 = *((v86 + 16));\n
                                                if (v88)\n
                                                    *((v88 + 8)) = v87;\n
                                                *((v86 + 8)) = 0;\n
                                                v89 = *((v68 + 32));\n
                                                v90 = *((v89 + 8));\n
                                                if (v90)\n
                                                    *((v90 + 16)) = *((v89 + 16));\n
                                                v91 = *((v89 + 16));\n
                                                if (v91)\n
                                                    *((v91 + 8)) = v90;\n
                                                *((v89 + 8)) = 0;\n
                                                v34 = *(a0);\n
                                                if (v34 == *((v68 + 24)))\n
                                                {\n
                                                    *(a0) = v68;\n
                                                    v34 = v68;\n
                                                }\n
                                            }\n
                                            v84 = *(v68);\n
                                        }\n
                                        if (v84 == 20 && !*((v68 + 24)))\n
                                        {\n
                                            v36 = 0;\n
                                            if (!*((v68 + 16)))\n
                                                goto LABEL_4081a7;\n
                                            if (!*((v68 + 8)))\n
                                                goto LABEL_4081a7;\n
                                            if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                goto LABEL_4081a7;\n
                                            v92 = *((v68 + 8));\n
                                            v93 = *((v68 + 16));\n
                                            *((v68 + 24)) = v93;\n
                                            *((v68 + 32)) = v92;\n
                                            v94 = *((v93 + 8));\n
                                            if (v94)\n
                                                *((v94 + 16)) = *((v93 + 16));\n
                                            v95 = *((v93 + 16));\n
                                            if (v95)\n
                                                *((v95 + 8)) = v94;\n
                                            *((v93 + 8)) = 0;\n
                                            v96 = *((v68 + 32));\n
                                            v97 = *((v96 + 8));\n
                                            if (v97)\n
                                                *((v97 + 16)) = *((v96 + 16));\n
                                            v98 = *((v96 + 16));\n
                                            if (v98)\n
                                                *((v98 + 8)) = v97;\n
                                            *((v96 + 8)) = 0;\n
                                            v34 = *(a0);\n
                                            if (v34 == *((v68 + 24)))\n
                                            {\n
                                                *(a0) = v68;\n
                                                v34 = v68;\n
                                            }\n
                                        }\n
                                        v99 = *(v68);\n
                                        if (v99 == 19)\n
                                        {\n
                                            if (!*((v68 + 24)))\n
                                            {\n
                                                v36 = 0;\n
                                                if (!*((v68 + 16)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!*((v68 + 8)))\n
                                                    goto LABEL_4081a7;\n
                                                if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                    goto LABEL_4081a7;\n
                                                v100 = *((v68 + 8));\n
                                                v101 = *((v68 + 16));\n
                                                *((v68 + 24)) = v101;\n
                                                *((v68 + 32)) = v100;\n
                                                v102 = *((v101 + 8));\n
                                                if (v102)\n
                                                    *((v102 + 16)) = *((v101 + 16));\n
                                                v103 = *((v101 + 16));\n
                                                if (v103)\n
                                                    *((v103 + 8)) = v102;\n
                                                *((v101 + 8)) = 0;\n
                                                v104 = *((v68 + 32));\n
                                                v105 = *((v104 + 8));\n
                                                if (v105)\n
                                                    *((v105 + 16)) = *((v104 + 16));\n
                                                v106 = *((v104 + 16));\n
                                                if (v106)\n
                                                    *((v106 + 8)) = v105;\n
                                                *((v104 + 8)) = 0;\n
                                                v34 = *(a0);\n
                                                if (v34 == *((v68 + 24)))\n
                                                {\n
                                                    *(a0) = v68;\n
                                                    v34 = v68;\n
                                                }\n
                                            }\n
                                            v99 = *(v68);\n
                                        }\n
                                        if (v99 == 21 && !*((v68 + 24)))\n
                                        {\n
                                            v36 = 0;\n
                                            if (!*((v68 + 16)))\n
                                                goto LABEL_4081a7;\n
                                            if (!*((v68 + 8)))\n
                                                goto LABEL_4081a7;\n
                                            if (!cgc_treeify_expression(v68 + 8, 99))\n
                                                goto LABEL_4081a7;\n
                                            v107 = *((v68 + 8));\n
                                            v108 = *((v68 + 16));\n
                                            *((v68 + 24)) = v108;\n
                                            *((v68 + 32)) = v107;\n
                                            v109 = *((v108 + 8));\n
                                            if (v109)\n
                                                *((v109 + 16)) = *((v108 + 16));\n
                                            v110 = *((v108 + 16));\n
                                            if (v110)\n
                                                *((v110 + 8)) = v109;\n
                                            *((v108 + 8)) = 0;\n
                                            v111 = *((v68 + 32));\n
                                            v112 = *((v111 + 8));\n
                                            if (v112)\n
                                                *((v112 + 16)) = *((v111 + 16));\n
                                            v113 = *((v111 + 16));\n
                                            if (v113)\n
                                                *((v113 + 8)) = v112;\n
                                            *((v111 + 8)) = 0;\n
                                            v34 = *(a0);\n
                                            if (v34 == *((v68 + 24)))\n
                                            {\n
                                                *(a0) = v68;\n
                                                v34 = v68;\n
                                            }\n
                                        }\n
                                        v68 = *((v68 + 8));\n
                                    } while (v68);\n
                                    if (v34)\n
                                    {\n
                                        v114 = v34;\n
                                        do\n
                                        {\n
                                            v115 = *(v114);\n
                                            if (v115 == 25)\n
                                            {\n
                                                if (!*((v114 + 24)))\n
                                                {\n
                                                    v36 = 0;\n
                                                    if (!*((v114 + 16)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!*((v114 + 8)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!cgc_treeify_expression(v114 + 8, 99))\n
                                                        goto LABEL_4081a7;\n
                                                    v116 = *((v114 + 8));\n
                                                    v117 = *((v114 + 16));\n
                                                    *((v114 + 24)) = v117;\n
                                                    *((v114 + 32)) = v116;\n
                                                    v118 = *((v117 + 8));\n
                                                    if (v118)\n
                                                        *((v118 + 16)) = *((v117 + 16));\n
                                                    v119 = *((v117 + 16));\n
                                                    if (v119)\n
                                                        *((v119 + 8)) = v118;\n
                                                    *((v117 + 8)) = 0;\n
                                                    v120 = *((v114 + 32));\n
                                                    v121 = *((v120 + 8));\n
                                                    if (v121)\n
                                                        *((v121 + 16)) = *((v120 + 16));\n
                                                    v122 = *((v120 + 16));\n
                                                    if (v122)\n
                                                        *((v122 + 8)) = v121;\n
                                                    *((v120 + 8)) = 0;\n
                                                    v34 = *(a0);\n
                                                    if (v34 == *((v114 + 24)))\n
                                                    {\n
                                                        *(a0) = v114;\n
                                                        v34 = v114;\n
                                                    }\n
                                                }\n
                                                v115 = *(v114);\n
                                            }\n
                                            if (v115 == 39 && *((v114 + 8)) && *((v114 + 16)))\n
                                            {\n
                                                *(v114) = 26;\n
                                                if (!*((v114 + 24)))\n
                                                {\n
                                                    if (!cgc_treeify_expression(v114 + 8, 99))\n
                                                    {\n
                                                        v36 = 0;\n
                                                        goto LABEL_4081a7;\n
                                                    }\n
                                                    else\n
                                                    {\n
                                                        v123 = *((v114 + 8));\n
                                                        v124 = *((v114 + 16));\n
                                                        *((v114 + 24)) = v124;\n
                                                        *((v114 + 32)) = v123;\n
                                                        v125 = *((v124 + 8));\n
                                                        if (v125)\n
                                                            *((v125 + 16)) = *((v124 + 16));\n
                                                        v126 = *((v124 + 16));\n
                                                        if (v126)\n
                                                            *((v126 + 8)) = v125;\n
                                                        *((v124 + 8)) = 0;\n
                                                        v127 = *((v114 + 32));\n
                                                        v128 = *((v127 + 8));\n
                                                        if (v128)\n
                                                            *((v128 + 16)) = *((v127 + 16));\n
                                                        v129 = *((v127 + 16));\n
                                                        if (v129)\n
                                                            *((v129 + 8)) = v128;\n
                                                        *((v127 + 8)) = 0;\n
                                                        v34 = *(a0);\n
                                                        if (v34 == *((v114 + 24)))\n
                                                        {\n
                                                            *(a0) = v114;\n
                                                            v34 = v114;\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                            v114 = *((v114 + 8));\n
                                        } while (v114);\n
                                        if (v34)\n
                                        {\n
                                            v130 = v34;\n
                                            do\n
                                            {\n
                                                v131 = *(v130);\n
                                                if (v131 == 27)\n
                                                {\n
                                                    if (!*((v130 + 24)))\n
                                                    {\n
                                                        v36 = 0;\n
                                                        if (!*((v130 + 16)))\n
                                                            goto LABEL_4081a7;\n
                                                        if (!*((v130 + 8)))\n
                                                            goto LABEL_4081a7;\n
                                                        if (!cgc_treeify_expression(v130 + 8, 99))\n
                                                            goto LABEL_4081a7;\n
                                                        v132 = *((v130 + 8));\n
                                                        v133 = *((v130 + 16));\n
                                                        *((v130 + 24)) = v133;\n
                                                        *((v130 + 32)) = v132;\n
                                                        v134 = *((v133 + 8));\n
                                                        if (v134)\n
                                                            *((v134 + 16)) = *((v133 + 16));\n
                                                        v135 = *((v133 + 16));\n
                                                        if (v135)\n
                                                            *((v135 + 8)) = v134;\n
                                                        *((v133 + 8)) = 0;\n
                                                        v136 = *((v130 + 32));\n
                                                        v137 = *((v136 + 8));\n
                                                        if (v137)\n
                                                            *((v137 + 16)) = *((v136 + 16));\n
                                                        v138 = *((v136 + 16));\n
                                                        if (v138)\n
                                                            *((v138 + 8)) = v137;\n
                                                        *((v136 + 8)) = 0;\n
                                                        v34 = *(a0);\n
                                                        if (v34 == *((v130 + 24)))\n
                                                        {\n
                                                            *(a0) = v130;\n
                                                            v34 = v130;\n
                                                        }\n
                                                    }\n
                                                    v131 = *(v130);\n
                                                }\n
                                                if (v131 == 28 && !*((v130 + 24)))\n
                                                {\n
                                                    v36 = 0;\n
                                                    if (!*((v130 + 16)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!*((v130 + 8)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!cgc_treeify_expression(v130 + 8, 99))\n
                                                        goto LABEL_4081a7;\n
                                                    v139 = *((v130 + 8));\n
                                                    v140 = *((v130 + 16));\n
                                                    *((v130 + 24)) = v140;\n
                                                    *((v130 + 32)) = v139;\n
                                                    v141 = *((v140 + 8));\n
                                                    if (v141)\n
                                                        *((v141 + 16)) = *((v140 + 16));\n
                                                    v142 = *((v140 + 16));\n
                                                    if (v142)\n
                                                        *((v142 + 8)) = v141;\n
                                                    *((v140 + 8)) = 0;\n
                                                    v143 = *((v130 + 32));\n
                                                    v144 = *((v143 + 8));\n
                                                    if (v144)\n
                                                        *((v144 + 16)) = *((v143 + 16));\n
                                                    v145 = *((v143 + 16));\n
                                                    if (v145)\n
                                                        *((v145 + 8)) = v144;\n
                                                    *((v143 + 8)) = 0;\n
                                                    v34 = *(a0);\n
                                                    if (v34 == *((v130 + 24)))\n
                                                    {\n
                                                        *(a0) = v130;\n
                                                        v34 = v130;\n
                                                    }\n
                                                }\n
                                                if (*(v130) == 29 && !*((v130 + 24)))\n
                                                {\n
                                                    v36 = 0;\n
                                                    if (!*((v130 + 16)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!*((v130 + 8)))\n
                                                        goto LABEL_4081a7;\n
                                                    if (!cgc_treeify_expression(v130 + 8, 99))\n
                                                        goto LABEL_4081a7;\n
                                                    v146 = *((v130 + 8));\n
                                                    v147 = *((v130 + 16));\n
                                                    *((v130 + 24)) = v147;\n
                                                    *((v130 + 32)) = v146;\n
                                                    v148 = *((v147 + 8));\n
                                                    if (v148)\n
                                                        *((v148 + 16)) = *((v147 + 16));\n
                                                    v149 = *((v147 + 16));\n
                                                    if (v149)\n
                                                        *((v149 + 8)) = v148;\n
                                                    *((v147 + 8)) = 0;\n
                                                    v150 = *((v130 + 32));\n
                                                    v151 = *((v150 + 8));\n
                                                    if (v151)\n
                                                        *((v151 + 16)) = *((v150 + 16));\n
                                                    v152 = *((v150 + 16));\n
                                                    if (v152)\n
                                                        *((v152 + 8)) = v151;\n
                                                    *((v150 + 8)) = 0;\n
                                                    v34 = *(a0);\n
                                                    if (v34 == *((v130 + 24)))\n
                                                    {\n
                                                        *(a0) = v130;\n
                                                        v34 = v130;\n
                                                    }\n
                                                }\n
                                                v130 = *((v130 + 8));\n
                                            } while (v130);\n
                                            if (v34)\n
                                            {\n
                                                do\n
                                                {\n
                                                    if (*(v34) == 39)\n
                                                    {\n
                                                        v36 = 0;\n
                                                        if (!*((v34 + 8)))\n
                                                            goto LABEL_4081a7;\n
                                                        if (!cgc_treeify_expression(v34 + 8, 99))\n
                                                            goto LABEL_4081a7;\n
                                                        *(v34) = 30;\n
                                                        v154 = *((v34 + 8));\n
                                                        *((v34 + 24)) = v154;\n
                                                        v155 = *((v154 + 8));\n
                                                        if (v155)\n
                                                            *((v155 + 16)) = *((v154 + 16));\n
                                                        v156 = *((v154 + 16));\n
                                                        if (v156)\n
                                                            *((v156 + 8)) = v155;\n
                                                        *((v154 + 8)) = 0;\n
                                                    }\n
                                                    v34 = *((v34 + 8));\n
                                                } while (v34);\n
                                                v153 = *(a0);\n
                                                if (!(!*((v153 + 8))))\n
                                                    goto LABEL_408f24;\n
                                                goto LABEL_4081a2;\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                    v153 = 0;\n
                    if (!*(8))\n
                        goto LABEL_4081a2;\n
LABEL_408f24:\n
                    v157 = v153 + 8;\n
                    v36 = 0;\n
                    while (cgc_treeify_expression(v157, 99))\n
                    {\n
                        v158 = cgc_calloc(1, 48);\n
                        if (v158)\n
                            *(v158) = 24;\n
                        else\n
                            v158 = 0;\n
                        *((v158 + 24)) = *(v5);\n
                        *((v158 + 32)) = *((*(v5) + 8));\n
                        v159 = *((*(v5) + 8));\n
                        v160 = *((v159 + 8));\n
                        if (v160)\n
                            *((v160 + 16)) = *((v159 + 16));\n
                        v161 = *((v159 + 16));\n
                        if (v161)\n
                            *((v161 + 8)) = v160;\n
                        *((v159 + 8)) = 0;\n
                        v162 = *(v5);\n
                        v163 = *((v162 + 8));\n
                        if (v163)\n
                            *((v163 + 16)) = *((v162 + 16));\n
                        v164 = *((v162 + 16));\n
                        if (v164)\n
                            *((v164 + 8)) = v163;\n
                        *((v162 + 8)) = 0;\n
                        *(v5) = v158;\n
                        v157 = v158 + 8;\n
                        if (!*((v158 + 8)))\n
                            goto LABEL_4081a2;\n
                    }\n
                }\n
            }\n
LABEL_4081a2:\n
            v36 = 1;\n
            break;\n
        }\n
        else\n
        {\n
            if (*(v10) == 31 && !*((v10 + 24)))\n
            {\n
                v36 = 0;\n
                if (!*((v10 + 8)))\n
                    break;\n
                if (!cgc_treeify_expression(v10 + 8, 1))\n
                    break;\n
                v7 = *((v10 + 8));\n
                *((v10 + 24)) = v7;\n
                v8 = *((v7 + 8));\n
                if (v8)\n
                    *((v8 + 16)) = *((v7 + 16));\n
                v9 = *((v7 + 16));\n
                if (v9)\n
                    *((v9 + 8)) = v8;\n
                *((v7 + 8)) = 0;\n
            }\n
            v10 = *((v10 + 8));\n
        }\n
    }\n
LABEL_4081a7:\n
    *((*(v5) + 16)) = v6;\n
    return v36;\n
}\n
", "4227212:sub_40808c": null, "4227550:sub_4081de": null, "4227748:sub_4082a4": null, "4227976:sub_408388": null, "4228185:sub_408459": null, "4230956:sub_408f2c": null, "4231266:sub_409062": null, "4231280:cgc_parse_var": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_parse_var(unsigned int *a0[6])\n
{\n
    char v0;  // [bp-0x128]\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
\n
    v3 = 0;\n
    do\n
    {\n
        v4 = cgc_io_getc(*(a0));\n
        if (v4 < 0)\n
            return 0;\n
        if (!cgc_islower(v4) && !cgc_isupper(v4))\n
        {\n
            if (!v3)\n
                goto LABEL_4090dc;\n
            if (!cgc_isdigit(v4))\n
                goto LABEL_4090dc;\n
        }\n
        (&v0)[v3] = v4;\n
        v3 += 1;\n
    } while (v3 != 0x100);\n
    v3 = 0x100;\n
LABEL_4090dc:\n
    cgc_io_ungetc(*(a0));\n
    (&v0)[v3] = 0;\n
    return cgc_strdup(&v0);\n
}\n
", "4231303:sub_409087": null, "4231428:sub_409104": null, "4231440:main": "int main(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x40]\n
    char v1;  // [bp-0x30]\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    cgc_io_init_fd(&v1, 0);\n
    cgc_program_init(&v0, &v1);\n
    if (!cgc_program_parse(&v0))\n
    {\n
        v3 = \"PARSE ERROR\\n
\";\n
    }\n
    else if (!cgc_program_run(&v0, &v1))\n
    {\n
        v3 = \"RUNTIME ERROR\\n
\";\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
    cgc_fdprintf(1, v3, a2, a3, a4);\n
    return 0;\n
}\n
", "4231547:sub_40917b": null, "4231552:cgc_regexp_init": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    char padding_10[12];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
long long cgc_regexp_init(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // r14\n
    unsigned int v5;  // ecx\n
\n
    v0 = v2;\n
    cgc_memset(a0, 0, 0x30);\n
    v3 = cgc_strdup(a1);\n
    *(&a0->field_0) = v3;\n
    if (v3)\n
    {\n
        v4 = &a0->field_8;\n
        if (cgc_regexp_parse(v4, v3, 0))\n
        {\n
            v5 = cgc_simplify(v4, 0);\n
            a0->field_1c = v5;\n
            if (v5)\n
                return 1;\n
        }\n
    }\n
    cgc_free(*(&a0->field_0));\n
    cgc__recursive_free(a0->field_8);\n
    return 0;\n
}\n
", "4231662:sub_4091ee": null, "4231664:cgc_regexp_parse": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[23];\n
    char field_18;\n
    char padding_19[15];\n
    uint128_t field_28;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[23];\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern struct_1 *cgc_regexp_parse.guard;\n
extern char g_1;\n
extern struct_0 *g_8;\n
\n
long long cgc_regexp_parse(unsigned long long *a0, unsigned long a1, unsigned long long a2)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    unsigned long long *v1;  // [bp-0x38]\n
    char *v3;  // eax\n
    char *v4;  // esi, Other Possible Types: unsigned long\n
    void* v34;  // r14\n
    struct_3 *v37;  // r12\n
    unsigned int v38;  // ecx\n
    unsigned long long v39;  // rax\n
    struct_0 *v40;  // rdx\n
\n
    v1 = a0;\n
    v3 = cgc_regexp_parse.guard;\n
    v4 = cgc_regexp_parse.guard + &g_1;\n
    cgc_regexp_parse.guard = v4;\n
    if (v3 <= 9999)\n
    {\n
        a2 = *(v4);\n
        v38 = *(v4);\n
        v34 = 0;\n
        if (v38 != a2)\n
        {\n
            v4 = v4;\n
            v37 = 0;\n
            v0 = 0;\n
        }\n
        else\n
        {\n
            v39 = &g_1;\n
            v40 = 0;\n
        }\n
    }\n
}\n
", "4231957:sub_409315": null, "4232863:sub_40969f": null, "4232864:cgc_simplify": "typedef struct struct_1 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[23];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_simplify(struct struct_1 **a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v3;  // rbx\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    void* v7;  // r15, Other Possible Types: unsigned long, unsigned int\n
    struct struct_1 **v8;  // r12, Other Possible Types: unsigned long\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v10;  // rax\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (v3)\n
    {\n
        if (v3->field_0 == 6)\n
        {\n
            v4 = v3 + 1;\n
            v5 = cgc_simplify(v4, v3);\n
            if (!v5)\n
                return 0;\n
            v2 = cgc_simplify(v4 + 8, v3);\n
            if (!v2)\n
                return 0;\n
            v7 = v2 + v5;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            if (v3->field_0 == 5)\n
            {\n
                v7 = cgc_simplify(v3 + 1, v3);\n
                if (!v7)\n
                    goto LABEL_409778;\n
            }\n
        }\n
        v8 = &v3->field_8;\n
        if (v3->field_8)\n
        {\n
            v2 = cgc_simplify(v8, a1);\n
            if (!v2)\n
                goto LABEL_409778;\n
            v7 = v7 + v2;\n
        }\n
        *(&v2) = v3->field_1;\n
        if (v3->field_1 == 3)\n
        {\n
            v9 = cgc_calloc(1, 48);\n
            v8 = a0;\n
            if (!(!v9))\n
                goto LABEL_4097b9;\n
        }\n
        else if (v2 != 2)\n
        {\n
            if (!(v2 == 1))\n
                goto LABEL_4097cc;\n
            v9 = cgc_calloc(1, 48);\n
            if (!(!v9))\n
                goto LABEL_4097b9;\n
        }\n
        else\n
        {\n
            v10 = cgc_calloc(1, 48);\n
            if (!v10)\n
                return 0;\n
            v10->field_0 = 6;\n
            v10->field_18 = v3;\n
            v10->field_20 = v3->field_8;\n
            *(a0) = &v10->field_0;\n
            v9 = cgc_calloc(1, 48);\n
            if (!v9)\n
                return 0;\n
LABEL_4097b9:\n
            *(v9) = 6;\n
            *((v9 + 24)) = v3;\n
            *((v9 + 32)) = v3->field_8;\n
            *(v8) = v9;\n
LABEL_4097cc:\n
            v3->field_1 = 0;\n
            v3->field_10 = a1;\n
            return v7 + 1;\n
        }\n
    }\n
LABEL_409778:\n
    return 0;\n
}\n
", "4233196:sub_4097ec": null, "4233200:cgc_regexp_free": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_regexp_free(struct_0 *a0)\n
{\n
    cgc_free(*(&a0->field_0));\n
    cgc__recursive_free(a0->field_8);\n
    return 1;\n
}\n
", "4233228:sub_40980c": null, "4233232:cgc__recursive_free": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc__recursive_free(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
    unsigned long long *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (a0->field_1 == 4)\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        a0->field_1 = 4;\n
        if (a0->field_0 == 6)\n
        {\n
            cgc__recursive_free(a0->field_18);\n
            v2 = a0 + 1;\n
        }\n
        else\n
        {\n
            if (!(a0->field_0 == 5))\n
                goto LABEL_40984a;\n
            v2 = &a0->field_18;\n
        }\n
        cgc__recursive_free(*(v2));\n
LABEL_40984a:\n
        cgc__recursive_free(a0->field_8);\n
        return cgc_free(a0);\n
    }\n
}\n
", "4233308:sub_40985c": null, "4233312:cgc_regexp_match": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned long long field_20;\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_1 *field_10;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    unsigned int field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_regexp_match(struct_0 *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    int tmp_26;  // tmp #26\n
    char *v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    struct_2 *v4;  // rbx\n
    unsigned long v6;  // r14\n
    unsigned long long v7;  // rax\n
    unsigned long long v8;  // rax\n
    void* v9;  // rbp, Other Possible Types: unsigned long, unsigned long long\n
    void* v10;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rcx\n
    unsigned long long *v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long *v14;  // rax, Other Possible Types: unsigned long\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v17;  // rcx\n
    void* v18;  // r15, Other Possible Types: unsigned long\n
    char *v19;  // r12\n
    unsigned long long v20;  // rax\n
    unsigned long long v21;  // r13\n
    unsigned long long v22;  // rcx\n
    unsigned long long *v23;  // r12, Other Possible Types: unsigned long\n
    unsigned long long *v24;  // rax, Other Possible Types: unsigned long\n
    unsigned long v25;  // rdx\n
    void* v26;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v27;  // rcx\n
    void* v28;  // rbp, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    a0->field_20 = 0;\n
    v6 = cgc_calloc(a0->field_1c, 8);\n
    if (!v6)\n
    {\n
        v9 = 0;\n
    }\n
    else\n
    {\n
        v7 = cgc_calloc(v4->field_1c, 8);\n
        v9 = 0;\n
        if (v7)\n
        {\n
            v26 = v7;\n
            v8 = cgc_calloc(v4->field_1c, 8);\n
            *(&v4->field_20) = v8;\n
            if (v8)\n
            {\n
                v4->field_10 = v6;\n
                v4->field_18 = 0;\n
                v4->field_28 = 0;\n
                v9 = 1;\n
                if (!cgc__regexp_match(v4, v4->field_8, 0x100))\n
                {\n
                    v0 = v26;\n
                    if (*(a1))\n
                    {\n
                        v10 = 0;\n
                        v1 = a1;\n
                        while (true)\n
                        {\n
                            v2 = v10;\n
                            v12 = v4->field_8;\n
                            v13 = v4->field_10;\n
                            v14 = v4->field_18;\n
                            v15 = 0;\n
                            if (!v14)\n
                            {\n
                                v16 = v0;\n
                            }\n
                            else\n
                            {\n
                                v16 = v0;\n
                                if (v13[v15] == v12)\n
                                    goto LABEL_4099b5;\n
                                v15 += 1;\n
                                if (!(v14 == v15))\n
                                    continue;\n
                                v15 = v14;\n
                            }\n
                            v14 = v14 + 1;\n
                            v13[v15] = v12;\n
                            v13 = v4->field_10;\n
LABEL_4099b5:\n
                            v17 = (v13 == v6 ? v6 : v16);\n
                            v4->field_10 = v17;\n
                            v4->field_18 = 0;\n
                            v4->field_28 = 0;\n
                            if (!v14)\n
                                continue;\n
                            v18 = 0;\n
                            do\n
                            {\n
                                if (cgc__regexp_match(v4, *((v13 + (v18 << 3))), *(a1)))\n
                                {\n
                                    v26 = v0;\n
                                    goto LABEL_409a08;\n
                                }\n
                                v18 += 1;\n
                            } while (v14 != v18);\n
                            v19 = v1;\n
                            v20 = v2;\n
                            v21 = &v19[v20 + 1];\n
                            tmp_26 = v19[1 + v20];\n
                            v10 = v20 + 1;\n
                            if (!tmp_26)\n
                                break;\n
                        }\n
                    }\n
                    v22 = v4->field_8;\n
                    v23 = v4->field_10;\n
                    v24 = v4->field_18;\n
                    v25 = 0;\n
                    if (v24)\n
                    {\n
                        v26 = v0;\n
                    }\n
                    else\n
                    {\n
                        v26 = v0;\n
LABEL_409a48:\n
                        v24 = v24 + 1;\n
                        v23[v25] = v22;\n
                        v23 = v4->field_10;\n
                        goto LABEL_409a53;\n
                    }\n
                    while (v23[v25] != v22)\n
                    {\n
                        v25 += 1;\n
                        if (v24 == v25)\n
                        {\n
                            v25 = v24;\n
                            goto LABEL_409a48;\n
                        }\n
                    }\n
LABEL_409a53:\n
                    v27 = (v23 != v6 ? v26 : v6);\n
                    v4->field_10 = v27;\n
                    v4->field_18 = 0;\n
                    v4->field_28 = 0;\n
                    if (!v24)\n
                    {\n
LABEL_409aa2:\n
                        v9 = 0;\n
                        goto LABEL_40990a;\n
                    }\n
                    else\n
                    {\n
                        v28 = 0;\n
                        while (!cgc__regexp_match(v4, *((v23 + (v28 << 3))), 257))\n
                        {\n
                            v28 += 1;\n
                            if (v24 == v28)\n
                                goto LABEL_409aa2;\n
                        }\n
LABEL_409a08:\n
                        v9 = 1;\n
                        goto LABEL_40990a;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v26 = 0;\n
LABEL_40990a:\n
    cgc_free(v6);\n
    cgc_free(v26);\n
    cgc_free(*(&v4->field_20));\n
    *(&v4->field_20) = 0;\n
    v4->field_10 = 0;\n
    return v9;\n
}\n
", "4233897:sub_409aa9": null, "4233904:cgc__regexp_match": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    struct struct_1 *field_20;\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[23];\n
    struct struct_2 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc__regexp_match(struct_0 *a0, struct_2 *a1, unsigned long long a2)\n
{\n
    struct_2 *v6;  // rbx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rdx\n
\n
    a0->field_28 = v8 + 1;\n
    *((v9 + v8 * 8)) = v6;\n
}\n
", "4233927:sub_409ac7": null, "4234006:sub_409b16": null, "4234573:sub_409d4d": null, "4234576:cgc_strio_init": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long cgc_strio_init(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_c = 32;\n
    v1 = cgc_malloc(32);\n
    a0->field_0 = v1;\n
    a0->field_8 = 0;\n
    return v1;\n
}\n
", "4234619:sub_409d7b": null, "4234624:cgc_strio_free": "long long cgc_strio_free(unsigned int *a0)\n
{\n
    cgc_free(*(&a0));\n
    return cgc_memset(a0, 0, 0x10);\n
}\n
", "4234652:sub_409d9c": null, "4234656:cgc_strio_append_char": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_strio_append_char(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char *v3;  // rcx, Other Possible Types: unsigned long\n
    char *v4;  // rax, Other Possible Types: unsigned long\n
    char *v5;  // rbp\n
    unsigned long v6;  // rax\n
\n
    v0 = v2;\n
    v3 = a0->field_8;\n
    if (v3 != a0->field_c)\n
    {\n
        v6 = a0->field_0;\n
    }\n
    else\n
    {\n
        if (v3 > 268435454)\n
            return 0;\n
        v4 = v3;\n
        do\n
        {\n
            v5 = v4;\n
            v4 *= 2;\n
        } while (v5 <= v3);\n
        v6 = cgc_realloc(a0->field_0, v5);\n
        if (!v6)\n
            return 0;\n
        a0->field_0 = v6;\n
        a0->field_c = v5;\n
        v3 = a0->field_8;\n
    }\n
    a0->field_8 = v3 + 1;\n
    *((v6 + v3)) = a1;\n
    return 1;\n
}\n
", "4234777:sub_409e19": null, "4234784:cgc_strio_dup": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_strio_dup(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    char *v3;  // rcx, Other Possible Types: unsigned long\n
    char *v4;  // rax, Other Possible Types: unsigned long\n
    char *v5;  // rbx\n
    unsigned long v6;  // rax\n
\n
    v0 = v2;\n
    v3 = a0->field_8;\n
    if (v3 != a0->field_c)\n
    {\n
        v6 = a0->field_0;\n
    }\n
    else\n
    {\n
        if (v3 > 268435454)\n
            return 0;\n
        v4 = v3;\n
        do\n
        {\n
            v5 = v4;\n
            v4 *= 2;\n
        } while (v5 <= v3);\n
        v6 = cgc_realloc(a0->field_0, v5);\n
        if (!v6)\n
            return 0;\n
        a0->field_0 = v6;\n
        a0->field_c = v5;\n
        v3 = a0->field_8;\n
    }\n
    *((v6 + v3)) = 0;\n
    return cgc_strdup(a0->field_0);\n
}\n
", "4234892:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_transmit": null, "5242896:cgc_allocate": null, "5242904:cgc_deallocate": null, "5242912:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}