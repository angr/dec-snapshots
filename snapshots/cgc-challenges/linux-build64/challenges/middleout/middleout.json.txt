{"4202496:_init": "extern struct_0 *g_508230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_508230;\n
    if (g_508230)\n
        v1 = g_508230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_508250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_508250;\n
    goto *(5276248);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202592:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(5276224);\n
}\n
", "4202640:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202677:sub_4020b5": null, "4202678:sub_4020b6": null, "4202688:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_508228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202729:sub_4020e9": null, "4202736:register_tm_clones": "extern unsigned long long g_508238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202793:sub_402129": null, "4202800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_508240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_508240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202853:sub_402165": null, "4202857:sub_402169": null, "4202864:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202873:sub_402179": null, "4202880:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203045:sub_402225": null, "4203056:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = cgc_isdigit(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203122:sub_402272": null, "4203136:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = cgc_isupper(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203202:sub_4022c2": null, "4203216:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4203242:sub_4022ea": null, "4203248:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4203274:sub_40230a": null, "4203280:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4203306:sub_40232a": null, "4203312:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return ((a0 & -128) ^ 255) & 1;\n
}\n
", "4203340:sub_40234c": null, "4203344:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 32)\n
        v0 = a0 == 9;\n
    return v0 & 1;\n
}\n
", "4203386:sub_40237a": null, "4203392:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 127)\n
        v0 = a0 < 32;\n
    return v0 & 1;\n
}\n
", "4203434:sub_4023aa": null, "4203440:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 != 32)\n
    {\n
        v0 = cgc_isprint(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203497:sub_4023e9": null, "4203504:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 != 127;\n
    return v0 & 1;\n
}\n
", "4203546:sub_40241a": null, "4203552:cgc_ispunct": "extern char _punct;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&_punct)[a0];\n
}\n
", "4203576:sub_402438": null, "4203584:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    if (a0 > 8)\n
    {\n
        v0 = 1;\n
        if (a0 < 14)\n
            return v0 & 1;\n
    }\n
    v0 = a0 == 32;\n
    return v0 & 1;\n
}\n
", "4203636:sub_402474": null, "4203648:cgc_isxdigit": "extern char _xdigit;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return (&_xdigit)[a0];\n
}\n
", "4203672:sub_402498": null, "4203680:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4203695:sub_4024af": null, "4203696:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4203753:sub_4024e9": null, "4203760:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & 95;\n
    return v0;\n
}\n
", "4203817:sub_402529": null, "4203824:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4203939:sub_4025a3": null, "4203952:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4203986:sub_4025d2": null, "4204000:cgc_malloc": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern struct_1 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        if (v4 >= 0x80000000)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4204454:sub_4027a6": null, "4204464:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4204626:sub_402852": null, "4204640:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204819:sub_402913": null, "4204832:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4205010:sub_4029d2": null, "4205024:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4205119:sub_402a3f": null, "4205120:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4205287:sub_402ae7": null, "4205296:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4205482:sub_402baa": null, "4205488:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long long, struct_1 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_402d82;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_402d82:\n
    return v5;\n
}\n
", "4205970:sub_402d92": null, "4205984:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_1 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_remove_from_blist(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (a0->field_28)\n
        a0->field_28->field_20 = v0->field_20;\n
    v2 = a0;\n
    if (a0->field_20)\n
    {\n
        v2 = a0->field_20;\n
        *((v2 + 40)) = a0->field_28;\n
    }\n
    return v2;\n
}\n
", "4206064:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((a0 + v0)) == a1)\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206172:sub_402e5c": null, "4206176:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a2)\n
        {\n
            if (*(v2) != *(v1))\n
            {\n
                v3 = *(v2) - *(v1);\n
                return v3;\n
            }\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206318:sub_402eee": null, "4206320:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4206419:sub_402f53": null, "4206432:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    if (a0 >= a1)\n
    {\n
        if (a0 <= a1)\n
            return a0;\n
        for (v0 = a2; v0 > 0; v0 -= 1)\n
        {\n
            a0[1 + v0] = *((a1 + v0 - 1));\n
        }\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            a0[v0] = *((a1 + v0));\n
        }\n
        return a0;\n
    }\n
}\n
", "4206640:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4206786:sub_4030c2": null, "4206800:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned long v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x10]\n
\n
    v8 = a1;\n
    v7 = a3;\n
    v6 = 0;\n
    if (v8 >= a2)\n
    {\n
        v6 = cgc_output_number_printf(a0, (0 CONCAT v8) /m a2, a2, v7 - 1, a4);\n
        v8 = (0 CONCAT v8) /m a2 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if (!(a4 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4207201:sub_403261": null, "4207216:cgc_fdprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_fdprintf(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    struct struct_0 **v0;  // [bp-0x200], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1f8]\n
    unsigned int v2;  // [bp-0x1ec]\n
    unsigned int *v3;  // [bp-0x1e8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1e0]\n
    unsigned int v5;  // [bp-0x1d4]\n
    unsigned int *v6;  // [bp-0x1d0], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x1c8]\n
    unsigned int v8;  // [bp-0x1bc]\n
    unsigned int *v9;  // [bp-0x1b8], Other Possible Types: unsigned long\n
    struct_1 *v10;  // [bp-0x1b0]\n
    unsigned int v11;  // [bp-0x1a4]\n
    unsigned long v12;  // [bp-0x1a0]\n
    struct struct_0 **v13;  // [bp-0x198]\n
    struct_1 *v14;  // [bp-0x190]\n
    unsigned int v15;  // [bp-0x184]\n
    unsigned int v16;  // [bp-0x180]\n
    unsigned int v17;  // [bp-0x17c]\n
    char v18;  // [bp-0x178]\n
    unsigned long v19;  // [bp-0x168]\n
    unsigned long v20;  // [bp-0x160]\n
    unsigned long v21;  // [bp-0x158]\n
    unsigned long v22;  // [bp-0x150]\n
    int v23;  // [bp-0x148]\n
    int v24;  // [bp-0x138]\n
    int v25;  // [bp-0x128]\n
    int v26;  // [bp-0x118]\n
    int v27;  // [bp-0x108]\n
    int v28;  // [bp-0xf8]\n
    int v29;  // [bp-0xe8]\n
    int v30;  // [bp-0xd8]\n
    char v31;  // [bp-0xb9]\n
    char v32;  // [bp-0xa9]\n
    char v33;  // [bp-0x99]\n
    char v34;  // [bp-0x89]\n
    char v35;  // [bp-0x79]\n
    char v36;  // [bp-0x69]\n
    char v37;  // [bp-0x59]\n
    unsigned int v38;  // [bp-0x58]\n
    unsigned int v39;  // [bp-0x54]\n
    unsigned long v40;  // [bp-0x50]\n
    unsigned long v41;  // [bp-0x48]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    unsigned int v45;  // [bp-0x30]\n
    unsigned int v46;  // [bp-0x2c]\n
    unsigned int v47;  // [bp-0x28]\n
    char v48;  // [bp-0x21]\n
    char *v49;  // [bp-0x20]\n
    char *v50;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v51;  // [bp-0x8]\n
    unsigned long v52;  // [bp+0x8]\n
    unsigned long long v53;  // rbp\n
    char v54;  // al\n
    int v55;  // xmm0\n
    int v56;  // xmm1\n
    int v57;  // xmm2\n
    int v58;  // xmm3\n
    int v59;  // xmm4\n
    int v60;  // xmm5\n
    int v61;  // xmm6\n
    int v62;  // xmm7\n
    unsigned long v63;  // r9\n
    char *v64;  // rax\n
    char *v65;  // rax\n
    unsigned long long v66;  // rdx\n
    struct struct_0 **v67;  // rax\n
    unsigned long long v68;  // rdx\n
    unsigned int *v69;  // rax\n
    unsigned long long v70;  // rdx\n
    struct struct_0 **v71;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v72;  // rdx\n
    unsigned int *v73;  // rax\n
    unsigned int *v74;  // rax\n
\n
    v53 = &v51;\n
    if (v54)\n
    {\n
        v23 = v55;\n
        v24 = v56;\n
        v25 = v57;\n
        v26 = v58;\n
        v27 = v59;\n
        v28 = v60;\n
        v29 = v61;\n
        v30 = v62;\n
    }\n
    v22 = v63;\n
    v21 = a4;\n
    v20 = a3;\n
    v19 = a2;\n
    v50 = a1;\n
    v45 = 0;\n
    v44 = 0;\n
    v43 = 0;\n
    v41 = &v18;\n
    v40 = &v52;\n
    v39 = 48;\n
    v38 = 16;\n
    while (*(v50))\n
    {\n
        v64 = v50;\n
        v50 = v64 + 1;\n
        v37 = *(v64);\n
        if (v37 != 37)\n
        {\n
            v31 = v37;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_403821:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v65 = v50;\n
                    a3 = v65 + 1;\n
                    v50 = a3;\n
                    v37 = *(v65);\n
                    v17 = v37;\n
                    if (v17 != 48)\n
                        break;\n
                    v44 |= 1;\n
                }\n
                if (v17 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v43 = cgc_strtol(v50 - 1, &v50, 10);\n
            }\n
            v16 = v37;\n
            if (v16 == 37)\n
            {\n
                v36 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_4037e0;\n
            }\n
            if (v16 == 88)\n
            {\n
                v44 |= 2;\n
            }\n
            else if (v16 == 99)\n
            {\n
                v1 = &v38;\n
                v2 = v38;\n
                if (v2 > 40)\n
                {\n
                    a3 = v1;\n
                    a2 = *((a3 + 8));\n
                    *((a3 + 8)) = a2 + 8;\n
                    v0 = a2;\n
                }\n
                else\n
                {\n
                    a3 = v1;\n
                    v66 = v2;\n
                    v67 = v66 + a3->field_10;\n
                    a2 = v66 + 8;\n
                    *(&a3->field_0) = a2;\n
                    v0 = v67;\n
                }\n
                v48 = *(v0);\n
                v33 = v48;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_4037e0;\n
            }\n
            else\n
            {\n
                if (v16 == 100)\n
                {\n
                    v10 = &v38;\n
                    v11 = v38;\n
                    if (v11 <= 40)\n
                    {\n
                        a3 = v10;\n
                        v68 = v11;\n
                        v69 = v68 + a3->field_10;\n
                        a2 = v68 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v9 = v69;\n
                    }\n
                    else\n
                    {\n
                        a3 = v10;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 8;\n
                        v9 = a2;\n
                    }\n
                    v47 = *(v9);\n
                    if (v47 < 0)\n
                    {\n
                        v34 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v47 = -(v47);\n
                    }\n
                    cgc_output_number_printf(a0, v47, 10, v43, v44);\n
                    goto LABEL_4037e0;\n
                }\n
                if (v16 == 115)\n
                {\n
                    v14 = &v38;\n
                    v15 = v38;\n
                    if (v15 <= 40)\n
                    {\n
                        a3 = v14;\n
                        v70 = v15;\n
                        v71 = v70 + a3->field_10;\n
                        a2 = v70 + 8;\n
                        *(&a3->field_0) = a2;\n
                    }\n
                    else\n
                    {\n
                        a3 = v14;\n
                        v72 = *((a3 + 8));\n
                        v71 = v72;\n
                        a2 = v72 + 1;\n
                        *((a3 + 8)) = a2;\n
                    }\n
                    v13 = v71;\n
                    v49 = &*(v13)->field_0;\n
                    v46 = 0;\n
                    while (true)\n
                    {\n
                        v12 = v46;\n
                        if (v12 >= cgc_strlen(v49))\n
                            break;\n
                        v35 = v49[v46];\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v46 += 1;\n
                    }\n
                    goto LABEL_4037e0;\n
                }\n
                if (v16 == 117)\n
                {\n
                    v7 = &v38;\n
                    v8 = v38;\n
                    if (v8 <= 40)\n
                    {\n
                        a3 = v7;\n
                        a2 = v8;\n
                        v73 = a2 + a3->field_10;\n
                        *(&a3->field_0) = a2 + 8;\n
                        v6 = v73;\n
                    }\n
                    else\n
                    {\n
                        a3 = v7;\n
                        a2 = a3->field_8;\n
                        a3->field_8 = &a2[2];\n
                        v6 = a2;\n
                    }\n
                    v42 = *(v6);\n
                    cgc_output_number_printf(a0, v42, 10, v43, v44);\n
                    goto LABEL_4037e0;\n
                }\n
                if (v16 != 120)\n
                {\n
                    v32 = v37;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_4037e0:\n
                    v43 = 0;\n
                    v44 = 0;\n
                    goto LABEL_403821;\n
                }\n
            }\n
            v4 = &v38;\n
            v5 = v38;\n
            if (v5 <= 40)\n
            {\n
                a3 = v4;\n
                a2 = v5;\n
                v74 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v3 = v74;\n
            }\n
            else\n
            {\n
                a3 = v4;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v3 = a2;\n
            }\n
            v42 = *(v3);\n
            cgc_output_number_printf(a0, v42, 16, v43, v44);\n
            goto LABEL_4037e0;\n
        }\n
    }\n
    return v45;\n
}\n
", "4208695:sub_403837": null, "4208704:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    char v2;  // [bp-0x69]\n
    char v3;  // [bp-0x59]\n
    char v4;  // [bp-0x49]\n
    char v5;  // [bp-0x39]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct struct_0 **v10;  // rax\n
    unsigned int *v11;  // rax\n
    struct struct_0 **v12;  // rax\n
    unsigned int *v13;  // rax\n
\n
    v8 = a2;\n
    v7 = a4;\n
    v6 = 0;\n
    if (v8 >= a3)\n
    {\n
        v6 = cgc_output_number_sprintf(a0, a1, (0 CONCAT v8) /m a3, a3, v7 - 1, a5);\n
        v8 = (0 CONCAT v8) /m a3 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if ((a5 & 1))\n
            {\n
                v5 = 48;\n
                *(a1)->field_0 = v5;\n
            }\n
            else\n
            {\n
                v4 = 32;\n
                *(a1)->field_0 = v4;\n
            }\n
            v10 = a1;\n
            *(v10) = *(v10) + 1;\n
            v11 = a0;\n
            *(v11) = *(v11) + 1;\n
        }\n
    }\n
    if ((a5 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
        *(a1)->field_0 = v3;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
        *(a1)->field_0 = v2;\n
    }\n
    v12 = a1;\n
    *(v12) = *(v12) + 1;\n
    v13 = a0;\n
    *(v13) = *(v13) + 1;\n
    return v6 + 1;\n
}\n
", "4209182:sub_403a1e": null, "4209184:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct struct_0 **v0;  // [bp-0x1e8], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1e0]\n
    unsigned int v2;  // [bp-0x1d4]\n
    struct struct_0 **v3;  // [bp-0x1d0], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1c8]\n
    unsigned int v5;  // [bp-0x1bc]\n
    struct struct_0 **v6;  // [bp-0x1b8], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0x1b0]\n
    unsigned int v8;  // [bp-0x1a4]\n
    unsigned long v9;  // [bp-0x1a0]\n
    struct struct_0 **v10;  // [bp-0x198]\n
    struct_1 *v11;  // [bp-0x190]\n
    unsigned int v12;  // [bp-0x184]\n
    unsigned int v13;  // [bp-0x180]\n
    unsigned int v14;  // [bp-0x17c]\n
    char v15;  // [bp-0x178]\n
    unsigned long v16;  // [bp-0x168]\n
    unsigned long v17;  // [bp-0x160]\n
    unsigned long v18;  // [bp-0x158]\n
    unsigned long v19;  // [bp-0x150]\n
    int v20;  // [bp-0x148]\n
    int v21;  // [bp-0x138]\n
    int v22;  // [bp-0x128]\n
    int v23;  // [bp-0x118]\n
    int v24;  // [bp-0x108]\n
    int v25;  // [bp-0xf8]\n
    int v26;  // [bp-0xe8]\n
    int v27;  // [bp-0xd8]\n
    char v28;  // [bp-0xb9]\n
    char v29;  // [bp-0xa9]\n
    char v30;  // [bp-0x99]\n
    char v31;  // [bp-0x89]\n
    char v32;  // [bp-0x79]\n
    char v33;  // [bp-0x69]\n
    char v34;  // [bp-0x59]\n
    unsigned int v35;  // [bp-0x58]\n
    unsigned int v36;  // [bp-0x54]\n
    unsigned long v37;  // [bp-0x50]\n
    unsigned long v38;  // [bp-0x48]\n
    unsigned int v39;  // [bp-0x3c]\n
    unsigned int v40;  // [bp-0x38]\n
    unsigned int v41;  // [bp-0x34]\n
    unsigned int v42;  // [bp-0x30]\n
    unsigned int v43;  // [bp-0x2c]\n
    unsigned int v44;  // [bp-0x28]\n
    char v45;  // [bp-0x21]\n
    char *v46;  // [bp-0x20]\n
    char *v47;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v48;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v49;  // [bp-0x8]\n
    unsigned long v50;  // [bp+0x8]\n
    unsigned long long v51;  // rbp\n
    char v52;  // al\n
    int v53;  // xmm0\n
    int v54;  // xmm1\n
    int v55;  // xmm2\n
    int v56;  // xmm3\n
    int v57;  // xmm4\n
    int v58;  // xmm5\n
    int v59;  // xmm6\n
    int v60;  // xmm7\n
    unsigned long v61;  // r9\n
    char *v62;  // rax\n
    char *v63;  // rax\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    struct struct_0 **v66;  // rax\n
    struct_1 *v67;  // rcx\n
    struct struct_0 **v68;  // rdx\n
    struct_1 *v69;  // rcx\n
    unsigned long long v70;  // rdx\n
    struct struct_0 **v71;  // rax\n
    struct_1 *v72;  // rcx\n
    struct struct_0 **v73;  // rdx\n
    struct_1 *v74;  // rcx\n
    unsigned long long v75;  // rdx\n
    struct struct_0 **v76;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v77;  // rcx\n
    struct_1 *v78;  // rcx\n
    unsigned long long v79;  // rdx\n
    struct struct_0 **v80;  // rax\n
    struct_1 *v81;  // rcx\n
    struct struct_0 **v82;  // rdx\n
    char *v83;  // rax\n
\n
    v51 = &v49;\n
    if (v52)\n
    {\n
        v20 = v53;\n
        v21 = v54;\n
        v22 = v55;\n
        v23 = v56;\n
        v24 = v57;\n
        v25 = v58;\n
        v26 = v59;\n
        v27 = v60;\n
    }\n
    v19 = v61;\n
    v18 = a4;\n
    v17 = a3;\n
    v16 = a2;\n
    v48 = a0;\n
    v47 = a1;\n
    v42 = 0;\n
    v41 = 0;\n
    v40 = 0;\n
    v38 = &v15;\n
    v37 = &v50;\n
    v36 = 48;\n
    v35 = 16;\n
    while (*(v47))\n
    {\n
        v62 = v47;\n
        v47 = v62 + 1;\n
        v34 = *(v62);\n
        if (v34 != 37)\n
        {\n
            v28 = v34;\n
            *(v48) = v28;\n
            v48 += 1;\n
            v42 += 1;\n
LABEL_403f75:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v63 = v47;\n
                    v47 = v63 + 1;\n
                    v34 = *(v63);\n
                    v14 = v34;\n
                    if (v14 != 48)\n
                        break;\n
                    v41 |= 1;\n
                }\n
                if (v14 - 49 >= 9)\n
                    break;\n
                v40 = cgc_strtol(v47 - 1, &v47, 10);\n
            }\n
            v13 = v34;\n
            if (v13 == 37)\n
            {\n
                v33 = 37;\n
                *(v48) = v33;\n
                v48 += 1;\n
                v42 += 1;\n
                goto LABEL_403f2e;\n
            }\n
            if (v13 == 88)\n
            {\n
                v41 |= 2;\n
            }\n
            else if (v13 == 99)\n
            {\n
                v1 = &v35;\n
                v2 = v35;\n
                if (v2 > 40)\n
                {\n
                    v67 = v1;\n
                    v68 = v67->field_8;\n
                    v67->field_8 = &v68[1];\n
                    v0 = v68;\n
                }\n
                else\n
                {\n
                    v64 = v1;\n
                    v65 = v2;\n
                    v66 = v65 + v64->field_10;\n
                    *(&v64->field_0) = v65 + 8;\n
                    v0 = v66;\n
                }\n
                v45 = *(v0);\n
                v30 = v45;\n
                *(v48) = v30;\n
                v48 += 1;\n
                v42 += 1;\n
                goto LABEL_403f2e;\n
            }\n
            else\n
            {\n
                if (v13 == 100)\n
                {\n
                    v7 = &v35;\n
                    v8 = v35;\n
                    if (v8 > 40)\n
                    {\n
                        v72 = v7;\n
                        v73 = v72->field_8;\n
                        v72->field_8 = &v73[1];\n
                        v6 = v73;\n
                    }\n
                    else\n
                    {\n
                        v69 = v7;\n
                        v70 = v8;\n
                        v71 = v70 + v69->field_10;\n
                        *(&v69->field_0) = v70 + 8;\n
                        v6 = v71;\n
                    }\n
                    v44 = *(v6);\n
                    if (v44 < 0)\n
                    {\n
                        v31 = 45;\n
                        *(v48) = v31;\n
                        v48 += 1;\n
                        v42 += 1;\n
                        v44 = -(v44);\n
                    }\n
                    cgc_output_number_sprintf(&v42, &v48, v44, 10, v40, v41);\n
                    goto LABEL_403f2e;\n
                }\n
                if (v13 == 115)\n
                {\n
                    v11 = &v35;\n
                    v12 = v35;\n
                    if (v12 <= 40)\n
                    {\n
                        v74 = v11;\n
                        v75 = v12;\n
                        v76 = v75 + v74->field_10;\n
                        *(&v74->field_0) = v75 + 8;\n
                    }\n
                    else\n
                    {\n
                        v77 = v11;\n
                        v76 = v77->field_8;\n
                        v77->field_8 = v76 + 8;\n
                    }\n
                    v10 = v76;\n
                    v46 = &*(v10)->field_0;\n
                    v43 = 0;\n
                    while (true)\n
                    {\n
                        v9 = v43;\n
                        if (v9 >= cgc_strlen(v46))\n
                            break;\n
                        v32 = v46[v43];\n
                        *(v48) = v32;\n
                        v48 += 1;\n
                        v42 += 1;\n
                        v43 += 1;\n
                    }\n
                    goto LABEL_403f2e;\n
                }\n
                if (v13 != 120)\n
                {\n
                    v29 = v34;\n
                    *(v48) = v29;\n
                    v48 += 1;\n
                    v42 += 1;\n
LABEL_403f2e:\n
                    v40 = 0;\n
                    v41 = 0;\n
                    goto LABEL_403f75;\n
                }\n
            }\n
            v4 = &v35;\n
            v5 = v35;\n
            if (v5 <= 40)\n
            {\n
                v78 = v4;\n
                v79 = v5;\n
                v80 = v79 + v78->field_10;\n
                *(&v78->field_0) = v79 + 8;\n
                v3 = v80;\n
            }\n
            else\n
            {\n
                v81 = v4;\n
                v82 = v81->field_8;\n
                v81->field_8 = &v82[1];\n
                v3 = v82;\n
            }\n
            v39 = *(v3);\n
            cgc_output_number_sprintf(&v42, &v48, v39, 16, v40, v41);\n
            goto LABEL_403f2e;\n
        }\n
    }\n
    v83 = v48;\n
    v48 = v83 + 1;\n
    *(v83) = 0;\n
    return v42;\n
}\n
", "4210584:sub_403f98": null, "4210592:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        *(&v1) = cgc_malloc(a1);\n
        if (!*(&v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(*(&v1), a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(*(&v1), a0, a1);\n
        cgc_free(a0);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210817:sub_404081": null, "4210832:cgc_strcasecmp": "long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x29]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v3 = a1;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v4))\n
            v2 = *(v3);\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v4) != *(v3))\n
        {\n
            v1 = cgc_tolower(*(v4));\n
            if (v1 != cgc_tolower(*(v3)))\n
                break;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    v0 = cgc_tolower(*(v4));\n
    return v0 - cgc_tolower(*(v3));\n
}\n
", "4211053:sub_40416d": null, "4211056:cgc_strcat": "long long cgc_strcat(unsigned long long a0, unsigned long long a1)\n
{\n
    cgc_strcpy(a0 + cgc_strlen(a0), a1);\n
    return a0;\n
}\n
", "4211115:sub_4041ab": null, "4211120:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4211235:sub_404223": null, "4211248:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4211387:sub_4042bb": null, "4211392:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4211487:sub_40431f": null, "4211488:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v1) = cgc_strlen(a0) + 1;\n
    *(&v0) = cgc_malloc(*(&v1));\n
    if (!*(&v0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memcpy(*(&v0), a0, *(&v1));\n
    v2 = *(&v0);\n
    return v2;\n
}\n
", "4211589:sub_404385": null, "4211600:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4211659:sub_4043cb": null, "4211664:cgc_strncasecmp": "long long cgc_strncasecmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    char v2;  // [bp-0x39]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rax\n
\n
    v5 = a2;\n
    v4 = a0;\n
    v3 = a1;\n
    v8 = v5;\n
    v5 = v8 - 1;\n
    if (!v8)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v5)\n
        {\n
            v2 = 0;\n
            if (*(v4))\n
                v2 = *(v3);\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v4) != *(v3))\n
        {\n
            v1 = cgc_tolower(*(v4));\n
            if (v1 != cgc_tolower(*(v3)))\n
                break;\n
        }\n
        v4 += 1;\n
        v3 += 1;\n
    }\n
    v0 = cgc_tolower(*(v4));\n
    v6 = v0 - cgc_tolower(*(v3));\n
    return v6;\n
}\n
", "4211953:sub_4044f1": null, "4211968:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned long v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    v6 = v1;\n
    v1 = v6 - 1;\n
    if (!v6)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v7 = v1;\n
        v1 = v7 - 1;\n
        v0 = 0;\n
        if (v7)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
                v0 = *(v2);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v4 = *(v3) - *(v2);\n
    return v4;\n
}\n
", "4212189:sub_4045dd": null, "4212192:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
        if (!*((a0 + v0)))\n
            break;\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4212354:sub_404682": null, "4212368:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = v1 + 1;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4212589:sub_40476d": null, "4212592:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c], Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_4047ba:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_4047ba;\n
        if (v12 < 0)\n
            goto LABEL_4047ba;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_4048c4:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_4048c4;\n
                v6 += 1;\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_404945;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_404945:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404ab1;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_404a6e;\n
            }\n
            if (!v7)\n
            {\n
LABEL_404a6e:\n
                if (v8 >= v12)\n
                    goto LABEL_404ab1;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = v6 + 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_404a65;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_404a65:\n
                v8 += 10;\n
                goto LABEL_404a6e;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_4049df;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_4049df:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404ab1:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4213507:sub_404b03": null, "4213520:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4213561:sub_404b39": null, "4213568:cgc_mcalloc": "long long cgc_mcalloc(unsigned int a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
\n
    v0 = cgc_calloc(1, a0);\n
    if (!v0)\n
    {\n
        cgc_fdprintf(2, \"DEBUG %s:%d:\\tBad alloc\\n
\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 55, a4);\n
        cgc_exit(1);\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4213660:sub_404b9c": null, "4213664:cgc_exit": "long long cgc_exit(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    v0 = a0;\n
    cgc__terminate(a0);\n
    return cgc_any_list_add(a0, v2, v3, v4, v5, v6);\n
}\n
", "4213696:cgc_any_list_add": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_any_list_add(unsigned long long a0[2], struct_0 *a1, unsigned long long *a2)\n
{\n
    if (a2)\n
        *(a2) = a0;\n
    if (a1)\n
        a1->field_8 = a0;\n
    a0[1] = a2;\n
    a0[0] = a1;\n
    return a0;\n
}\n
", "4213782:sub_404c16": null, "4213792:cgc_any_list_remv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long cgc_any_list_remv(struct_1 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
        return v1;\n
    a0->field_8->field_0 = a0->field_0;\n
    a0->field_0->field_8 = a0->field_8;\n
    if (*(&a0->field_10))\n
        cgc_free(*(&a0->field_10));\n
    v1 = cgc_free(a0);\n
    return v1;\n
}\n
", "4213900:sub_404c8c": null, "4213904:cgc_any_list_empty": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_any_list_empty(struct_0 *a0)\n
{\n
    return a0->field_8 == a0;\n
}\n
", "4213934:sub_404cae": null, "4213936:cgc_any_list_length": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_any_list_length(struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    for (v0 = a0->field_8; v0->field_8 != a0; v1 += 1);\n
    return v1;\n
}\n
", "4214005:sub_404cf5": null, "4214016:cgc_any_list_alloc": "long long cgc_any_list_alloc(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
\n
    v0[0] = cgc_mcalloc(24, a1, a2, a3, a4);\n
    v0[1] = v0;\n
    v0[0] = v0;\n
    v0[2] = a0;\n
    return v0;\n
}\n
", "4214087:sub_404d47": null, "4214096:cgc_any_list_shallow_copy": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_any_list_shallow_copy(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* *v1;  // [bp-0x20]\n
    unsigned long long *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = cgc_any_list_alloc(0, a1, a2, a3, a4);\n
    for (v0 = a0; *((v0 + 8)) != a0; v0 = *((v0 + 8)))\n
    {\n
        cgc_any_list_add(v0, *(v1), v1);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4214226:sub_404dd2": null, "4214240:cgc_send_n_bytes": "long long cgc_send_n_bytes(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    if (a1 && a2)\n
    {\n
        v1 = 0;\n
        for (v0 = 0; v0 < a1; v0 = v1 + v0)\n
        {\n
            if (cgc_transmit(a0, a1, a2, v5))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (!v1)\n
                break;\n
        }\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4214426:sub_404e9a": null, "4214432:cgc_read_n_bytes": "long long cgc_read_n_bytes(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    if (a1 && a2)\n
    {\n
        v1 = 0;\n
        for (v0 = 0; v0 < a1; v0 = v1 + v0)\n
        {\n
            if (cgc_receive(a0, a1, a2, v5))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (!v1)\n
                break;\n
        }\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4214618:sub_404f5a": null, "4214624:cgc_read_until_sequence": "long long cgc_read_until_sequence(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x58], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x50]\n
    void* v2;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x40], Other Possible Types: unsigned long long\n
    void* v4;  // [bp-0x38]\n
    unsigned long v5;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v5) = cgc_mcalloc(128, a1, a2, a3, a4);\n
    v4 = 0;\n
    v3 = 128;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            v3 += 128;\n
            v5 = cgc_realloc(*(&v5), v3);\n
            if (!v5)\n
            {\n
                cgc_fdprintf(2, \"DEBUG %s:%d:\\tBad alloc\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 177, a4);\n
                cgc_exit(1);\n
            }\n
        }\n
        v1 = cgc_read_n_bytes(a0, 1, v5 + v2);\n
        if (v1 <= 0)\n
            break;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            if (!cgc_memcmp(v5 + v2 + -(v0), a1, a2))\n
            {\n
                v6 = v5;\n
                return v6;\n
            }\n
        }\n
        v2 = v1 + v2;\n
    }\n
    cgc_free(v5);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4214971:sub_4050bb": null, "4214976:cgc_readline": "long long cgc_readline(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long long v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x28]\n
    char *v4;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = cgc_mcalloc(128, a1, a2, a3, a4);\n
    v3 = 0;\n
    v2 = 128;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 == v2)\n
        {\n
            v2 += 128;\n
            v4 = cgc_realloc(v4, v2);\n
            if (!v4)\n
            {\n
                cgc_fdprintf(2, \"DEBUG %s:%d:\\tBad alloc\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 211, a4);\n
                cgc_exit(1);\n
            }\n
        }\n
        v0 = cgc_read_n_bytes(a0, 1, v4 + v1);\n
        if (v0 <= 0)\n
        {\n
LABEL_4051ec:\n
            cgc_free(v4);\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (*((v4 + v1)) != 10)\n
        {\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v3 = cgc_memchr(v4 + v1, 10, 128);\n
            if (v3)\n
            {\n
                *(v3) = 0;\n
                v5 = v4;\n
                return v5;\n
            }\n
            goto LABEL_4051ec;\n
        }\n
    }\n
}\n
", "4215303:sub_405207": null, "4215312:cgc_writer_new": "long long cgc_writer_new(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[3];  // [bp-0x20]\n
\n
    v0[0] = cgc_mcalloc(24, a1, a2, a3, a4);\n
    v0[0] = 0;\n
    *(&v0[1]) = a1;\n
    v0[2] = a0;\n
    return v0;\n
}\n
", "4215387:sub_40525b": null, "4215392:cgc_writer_write": "long long cgc_writer_write(unsigned long long a0[3], unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3[3];  // rax\n
\n
    v1[0] = a0;\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[v1[0] + a0[2]] = v0[a1];\n
    }\n
    v3 = a0;\n
    v3[0] = a2 + v3[0];\n
    return 0;\n
}\n
", "4215498:sub_4052ca": null, "4215504:cgc_print_lzelem": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    char field_10;\n
    char padding_11[7];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_print_lzelem(unsigned long a0, struct_0 *a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_10;  // tmp #10\n
    unsigned long long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = a1->field_0;\n
    if (v0 == 1)\n
    {\n
        v3 = cgc_fdprintf(a0, \"(%d,%d)\", a1->field_8, a1->field_18, a4);\n
        return v3;\n
    }\n
    v2 = v0;\n
    tmp_10 = v2;\n
    v3 = v2 - 2;\n
    if (tmp_10 != 2)\n
        return v3;\n
    v3 = cgc_fdprintf(a0, \"%c\", a1->field_10, a3, a4);\n
}\n
", "4215628:sub_40534c": null, "4215632:cgc_swap_u32": "long long cgc_swap_u32(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v0 = v0 * 0x100 & -0xff0100 | (v0 >> 8) & 16711935;\n
    return v0 * 0x10000 | (v0 >> 16);\n
}\n
", "4215683:sub_405383": null, "4215696:cgc_pack_lzelem_bp": "long long cgc_pack_lzelem_bp(unsigned long long a0[4], unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (a0[3] >= 0x8000)\n
    {\n
        cgc_fdprintf(2, \"DEBUG %s:%d:\\tCan't pack\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 295, a4);\n
        cgc_exit(1);\n
    }\n
    v0 |= 0x80000000;\n
    v0 |= (a0[3] & 32767) * 0x10000;\n
    v0 |= a0[1] & 65535;\n
    v0 = cgc_swap_u32(v0);\n
    return v0;\n
}\n
", "4215857:sub_405431": null, "4215872:cgc_unpack_lzelem_bp": "long long cgc_unpack_lzelem_bp(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[4];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = a0;\n
    v1 = cgc_swap_u32(v1);\n
    v0[0] = cgc_mcalloc(32, a1, a2, a3, a4);\n
    v0[3] = (v1 >> 16) & 32767;\n
    v0[1] = v1 & 65535;\n
    return v0;\n
}\n
", "4215961:sub_405499": null, "4215968:cgc_lz_backpointer_new": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_lz_backpointer_new(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
\n
    v0 = cgc_mcalloc(32, a1, a2, a3, a4);\n
    v0->field_0 = 1;\n
    v0->field_8 = a0;\n
    *(&v0->field_18) = a1;\n
    return v0;\n
}\n
", "4216042:sub_4054ea": null, "4216048:cgc_lz_literal_new": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    char field_10;\n
    char padding_11[7];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_lz_literal_new(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
\n
    v0 = cgc_mcalloc(32, a1, a2, a3, a4);\n
    v0->field_0 = 2;\n
    v0->field_10 = a0;\n
    v0->field_18 = 1;\n
    return v0;\n
}\n
", "4216118:sub_405536": null, "4216128:cgc_alnumspc_filter": "long long cgc_alnumspc_filter(char *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x20]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(a0);\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v2 = 0;\n
    v1 = cgc_mcalloc(v3 + 1, a1, a2, a3, a4);\n
    for (v0 = 0; v0 < v3; v0 += 1)\n
    {\n
        if (!cgc_isalnum(a0[v0]) && !(a0[v0] == 32))\n
            goto LABEL_405608;\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v1[v6] = a0[v0];\n
LABEL_405608:\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4216368:cgc_make_suffix": "long long cgc_make_suffix(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[2];  // [bp-0x20]\n
\n
    v0[0] = cgc_mcalloc(16, a1, a2, a3, a4);\n
    v0[0] = a0;\n
    *(&v0[1]) = a1;\n
    return v0;\n
}\n
", "4216431:sub_40566f": null, "4216432:cgc_make_suffix_list": "long long cgc_make_suffix_list(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
\n
    v0[0] = cgc_mcalloc(24, a1, a2, a3, a4);\n
    *(&v0[0]) = a0;\n
    v0[1] = 0;\n
    v0[2] = cgc_mcalloc(a0 * 8, a1, a2, a0, a4);\n
    return v0;\n
}\n
", "4216515:sub_4056c3": null, "4216528:cgc_append_suffix_list": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_append_suffix_list(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long *v2;  // rax\n
    unsigned long v3;  // rcx\n
\n
    if (a0->field_8 == a0->field_0)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v2 = a0->field_10;\n
    v3 = a0->field_8;\n
    a0->field_8 = v3 + 1;\n
    v2[v3] = a1;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4216620:sub_40572c": null, "4216624:cgc_get_suffix": "long long cgc_get_suffix(unsigned long long a0[3], unsigned long long *a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    if (a1 >= a0[1])\n
    {\n
        cgc_fdprintf(2, \"DEBUG %s:%d:\\tBad suffix list access\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 394, a4);\n
        cgc_exit(1);\n
        return *((a0[2] + a1 * 8));\n
    }\n
    return *((a0[2] + a1 * 8));\n
}\n
", "4216721:sub_405791": null, "4216736:cgc_cmp_suffix": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
long long cgc_cmp_suffix(struct_0 *a0, struct_0 *a1)\n
{\n
    return cgc_strcmp(a0->field_8, a1->field_8);\n
}\n
", "4216779:sub_4057cb": null, "4216784:cgc_merge": "long long cgc_merge(unsigned long long a0[3], unsigned long long a1[3], unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x70]\n
    void* v1;  // [bp-0x68]\n
    void* v2;  // [bp-0x60]\n
    void* v3;  // [bp-0x58]\n
    char v4;  // [bp-0x49]\n
    unsigned long v5;  // [bp-0x48]\n
    void* v6;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v8;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v9;  // [bp-0x28]\n
    unsigned long v10;  // [bp-0x20]\n
    unsigned long v12;  // rcx\n
\n
    v10 = a0[1];\n
    v9 = a1[1];\n
    v5 = cgc_make_suffix_list(v10 + v9, a1[0], a2, a3, a4);\n
    v6 = 0;\n
    v7 = 0;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v12 = v8;\n
        v4 = 0;\n
        if (v12 < v10)\n
            v4 = v7 < v9;\n
        if (!(v4 & 1))\n
            break;\n
        if (cgc_cmp_suffix(*((a0[2] + (v8 << 3))), *((a1[2] + (v7 << 3)))) <= 0)\n
        {\n
            v3 = v5;\n
            cgc_append_suffix_list(v3, cgc_get_suffix(a0, v8, a2, v12, a4));\n
            v6 += 1;\n
            v8 += 1;\n
        }\n
        else\n
        {\n
            v2 = v5;\n
            cgc_append_suffix_list(v2, cgc_get_suffix(a1, v7, a2, v12, a4));\n
            v6 += 1;\n
            v7 += 1;\n
        }\n
    }\n
    for (; v8 < v10; v8 += 1)\n
    {\n
        v1 = v5;\n
        cgc_append_suffix_list(v1, cgc_get_suffix(a0, v8, a2, v12, a4));\n
        v6 += 1;\n
    }\n
    for (; v7 < v9; v7 += 1)\n
    {\n
        v0 = v5;\n
        cgc_append_suffix_list(v0, cgc_get_suffix(a1, v7, a2, v12, a4));\n
        v6 += 1;\n
    }\n
    return v5;\n
}\n
", "4217256:sub_4059a8": null, "4217264:cgc_merge_sort": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_merge_sort(struct_0 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    void* v0;  // [bp-0x68]\n
    void* v1;  // [bp-0x60]\n
    unsigned long long v2[3];  // [bp-0x58]\n
    unsigned long long v3[3];  // [bp-0x50]\n
    unsigned long long *v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned long long v6;  // [bp-0x38]\n
    unsigned long v7;  // [bp-0x30]\n
    unsigned long v8;  // [bp-0x28]\n
    unsigned long v9;  // [bp-0x20]\n
    struct_0 *v10;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v9 = a0->field_8;\n
    if (v9 <= 1)\n
    {\n
        v10 = a0;\n
        return v10;\n
    }\n
    v8 = cgc_make_suffix_list(v9, a1, a2, a3, a4);\n
    v7 = cgc_make_suffix_list(v9, a1, a2, a3, a4);\n
    v6 = v9 >> 1;\n
    for (v5 = 0; v5 < v6; v5 += 1)\n
    {\n
        v1 = v8;\n
        cgc_append_suffix_list(v1, cgc_get_suffix(a0, v5, a2, a3, a4));\n
    }\n
    for (v4 = v6; v4 < v9; v4 += 1)\n
    {\n
        v0 = v7;\n
        cgc_append_suffix_list(v0, cgc_get_suffix(a0, v4, a2, a3, a4));\n
    }\n
    v3[0] = cgc_merge_sort(v8, a1, a2, a3, a4);\n
    v2[0] = cgc_merge_sort(v7, a1, a2, a3, a4);\n
    if (v3 != v8)\n
        cgc_free(v8);\n
    if (v2 != v7)\n
        cgc_free(v7);\n
    v10 = cgc_merge(v3, v2, a2, a3, a4);\n
    return v10;\n
}\n
", "4217593:sub_405af9": null, "4217600:cgc_build_suffix_array": "long long cgc_build_suffix_array(char *a0, unsigned long a1, unsigned long a2, unsigned long long *a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned long long *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long long v3[3];  // [bp-0x28], Other Possible Types: void*\n
    unsigned long v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x18]\n
\n
    v5 = cgc_strlen(a0);\n
    v4 = cgc_mcalloc(v5 * 8, a1, a2, a3, a4);\n
    v3 = cgc_make_suffix_list(v5, a1, a2, a3, a4);\n
    for (v2 = 0; v2 < v5; v2 += 1)\n
    {\n
        v0 = v3;\n
        cgc_append_suffix_list(v0, cgc_make_suffix(v2, a0 + v2, a2, a3, a4));\n
    }\n
    v3[0] = cgc_merge_sort(v3, a1, a2, a3, a4);\n
    for (v1 = 0; v1 < v5; v1 += 1)\n
    {\n
        a2 = *(cgc_get_suffix(v3, v1, a2, a3, a4));\n
        a3 = v1;\n
        *((v4 + a3 * 8)) = a2;\n
    }\n
    return v4;\n
}\n
", "4217821:sub_405bdd": null, "4217824:cgc_search": "long long cgc_search(char *a0, unsigned int a1, unsigned long long *a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned long v1;  // [bp-0x58]\n
    unsigned long v2;  // [bp-0x50]\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    if (a0 && a1 && a2 && a3 && a4)\n
    {\n
        v3 = 0;\n
        v2 = a4 - 1;\n
        while (true)\n
        {\n
            if (v3 > v2)\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v1 = v3 + (v2 - v3 >> 1);\n
            v0 = cgc_strncmp(a0, a3 + a2[v1], a1);\n
            if (!v0)\n
                break;\n
            if (v0 < 0)\n
                v2 = v1 - 1;\n
            else\n
                v3 = v1 + 1;\n
        }\n
        if (a5 >= 0 && a2[v1] + a1 >= a5)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v4 = a2[v1];\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4218161:sub_405d31": null, "4218176:cgc_prefix_len": "long long cgc_prefix_len(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x3a]\n
    char v1;  // [bp-0x39]\n
    unsigned long v2;  // [bp-0x38]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v8;  // rax\n
    unsigned int v9;  // ecx\n
    char *v10;  // rax\n
    char *v11;  // rax\n
    unsigned int v12;  // ecx\n
    char *v13;  // rax\n
    char *v14;  // rax\n
    unsigned int v15;  // ecx\n
    char *v16;  // rax\n
    char *v17;  // rax\n
    unsigned int v18;  // ecx\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    unsigned int v21;  // ecx\n
    char *v22;  // rax\n
    char *v23;  // rax\n
    unsigned int v24;  // ecx\n
    char *v25;  // rax\n
    char *v26;  // rax\n
    unsigned int v27;  // ecx\n
    char *v28;  // rax\n
    char *v29;  // rax\n
    unsigned int v30;  // eax\n
    char *v31;  // rcx\n
\n
    v6 = a0;\n
    v5 = a1;\n
    v4 = 0;\n
    v3 = 0;\n
    if (v6 >= v5)\n
    {\n
        v4 = v6 - v5;\n
        if (a2 - v6 < v4)\n
            v4 = a2 - v6;\n
    }\n
    else\n
    {\n
        v4 = v5 - v6;\n
        if (a2 - v5 < v4)\n
            v4 = a2 - v5;\n
    }\n
    v2 = v4 & -8;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v3 < v2)\n
        {\n
            v8 = v6;\n
            v6 = v8 + 1;\n
            v9 = *(v8);\n
            v10 = v5;\n
            v5 = v10 + 1;\n
            v1 = 0;\n
            if (v9 == *(v10))\n
            {\n
                v11 = v6;\n
                v6 = v11 + 1;\n
                v12 = *(v11);\n
                v13 = v5;\n
                v5 = v13 + 1;\n
                v1 = 0;\n
                if (v12 == *(v13))\n
                {\n
                    v14 = v6;\n
                    v6 = v14 + 1;\n
                    v15 = *(v14);\n
                    v16 = v5;\n
                    v5 = v16 + 1;\n
                    v1 = 0;\n
                    if (v15 == *(v16))\n
                    {\n
                        v17 = v6;\n
                        v6 = v17 + 1;\n
                        v18 = *(v17);\n
                        v19 = v5;\n
                        v5 = v19 + 1;\n
                        v1 = 0;\n
                        if (v18 == *(v19))\n
                        {\n
                            v20 = v6;\n
                            v6 = v20 + 1;\n
                            v21 = *(v20);\n
                            v22 = v5;\n
                            v5 = v22 + 1;\n
                            v1 = 0;\n
                            if (v21 == *(v22))\n
                            {\n
                                v23 = v6;\n
                                v6 = v23 + 1;\n
                                v24 = *(v23);\n
                                v25 = v5;\n
                                v5 = v25 + 1;\n
                                v1 = 0;\n
                                if (v24 == *(v25))\n
                                {\n
                                    v26 = v6;\n
                                    v6 = v26 + 1;\n
                                    v27 = *(v26);\n
                                    v28 = v5;\n
                                    v5 = v28 + 1;\n
                                    v1 = 0;\n
                                    if (v27 == *(v28))\n
                                    {\n
                                        v29 = v6;\n
                                        v6 = v29 + 1;\n
                                        v30 = *(v29);\n
                                        v31 = v5;\n
                                        v5 = v31 + 1;\n
                                        v1 = v30 == *(v31);\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v3 += 8;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3 < v4)\n
        {\n
            v0 = 0;\n
            if (*(v6))\n
            {\n
                v0 = 0;\n
                if (*(v5))\n
                    v0 = *(v6) == *(v5);\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v3 += 1;\n
        v6 += 1;\n
        v5 += 1;\n
    }\n
    return v3;\n
}\n
", "4218936:sub_406038": null, "4218944:cgc_compress": "typedef struct struct_2 {\n
    void* field_0;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
extern unsigned int end_marker;\n
\n
long long cgc_compress(unsigned long a0, unsigned long a1, unsigned int a2, char *a3, unsigned long a4)\n
{\n
    struct_1 *v0;  // [bp-0xa0]\n
    unsigned long v1;  // [bp-0x98]\n
    unsigned int v2;  // [bp-0x8c]\n
    struct_1 *v3;  // [bp-0x88], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x80]\n
    unsigned long v5;  // [bp-0x78]\n
    unsigned long v6;  // [bp-0x70], Other Possible Types: unsigned long long\n
    void* v7;  // [bp-0x68], Other Possible Types: unsigned long\n
    unsigned long long v8;  // [bp-0x60], Other Possible Types: unsigned long\n
    char *v9;  // [bp-0x58], Other Possible Types: unsigned long\n
    unsigned long long v10[2];  // [bp-0x50]\n
    unsigned long long v11[2];  // [bp-0x48]\n
    struct_2 *v12;  // [bp-0x40]\n
    struct_0 *v13;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v14;  // [bp-0x28]\n
    unsigned int v16;  // esi\n
\n
    v14 = a3;\n
    v12 = cgc_any_list_alloc(0, a1, a2, a3, a4);\n
    v16 = v14;\n
    v11[0] = cgc_writer_new(a2, v16, a2, a3, a4);\n
    v13 = cgc_lz_literal_new(*(a0), v16, a2, a3, a4);\n
    v10[0] = cgc_any_list_alloc(v13, v16, a2, a3, a4);\n
    cgc_any_list_add(v10, v12->field_0, v12);\n
    v9 = 1;\n
    while (v9 < *(&v16))\n
    {\n
        v8 = 1;\n
        v7 = 0;\n
        for (v6 = -1; v8 <= v9; v8 += 1)\n
        {\n
            v16 = v8;\n
            v5 = cgc_search(&v9[a0], v16, a4, a0, *(&v16), v9);\n
            if (v5 <= 0)\n
                break;\n
            v4 = cgc_prefix_len(a0 + v5, &v9[a0], a0 + *(&v16));\n
            if (v4 > v7)\n
            {\n
                v7 = v4;\n
                v6 = v5;\n
            }\n
        }\n
        if (v6 < 0)\n
        {\n
LABEL_406185:\n
            a3 = v9;\n
            v13 = cgc_lz_literal_new(*((a0 + a3)), v16, a2, a3, a4);\n
            goto LABEL_4061b4;\n
        }\n
        else\n
        {\n
            if (v7 < 8)\n
                goto LABEL_406185;\n
            v16 = v7;\n
            v13 = cgc_lz_backpointer_new(&v9[-1 * v6], v16, a2, a3, a4);\n
LABEL_4061b4:\n
            v10[0] = cgc_any_list_alloc(v13, v16, a2, a3, a4);\n
            cgc_any_list_add(v10, v12->field_0, v12);\n
            v9 = &v9[*((v13 + 24))];\n
        }\n
    }\n
    for (v3 = v12->field_8; v3 != v12; v3 = *((v3 + 8)))\n
    {\n
        v13 = *((v3 + 16));\n
        if (v13->field_0 == 2)\n
        {\n
            if (v11[0] + 1 > v11[1])\n
            {\n
                cgc_fdprintf(2, \"DEBUG %s:%d:\\tDoesn't compress enough\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 608, a4);\n
                cgc_exit(1);\n
            }\n
            cgc_writer_write(v11, &v13->padding_4[12], 1);\n
        }\n
        else\n
        {\n
            v2 = cgc_pack_lzelem_bp(v13, *(&v16), 4, a3, a4);\n
            if (v11[0] + 4 > v11[1])\n
            {\n
                cgc_fdprintf(2, \"DEBUG %s:%d:\\tDoesn't compress enough\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 613, a4);\n
                cgc_exit(1);\n
            }\n
            cgc_writer_write(v11, &v2, 4);\n
        }\n
        cgc_print_lzelem(0, v13, 4, a3, a4);\n
    }\n
    cgc_writer_write(v11, &end_marker, 8);\n
    v1 = v11[0];\n
    cgc_free(v11);\n
    for (v3 = v12->field_8; v3 != v12; v3 = v0)\n
    {\n
        v0 = v3->field_8;\n
        if (v3->field_10)\n
            cgc_free(v3->field_10);\n
        cgc_free(v3);\n
    }\n
    return v1;\n
}\n
", "4219798:sub_406396": null, "4219808:cgc_decompress": "extern char end_marker;\n
\n
long long cgc_decompress(unsigned long a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned int v1[7];  // [bp-0x38], Other Possible Types: unsigned long long [4]\n
    unsigned long long v2[3];  // [bp-0x30]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v3 = 0;\n
    v2[0] = cgc_writer_new(a1, a2, a2, a3, a4);\n
    while (cgc_memcmp(&end_marker, a0 + v3, 8))\n
    {\n
        if (!(*((a0 + v3)) & 128))\n
        {\n
            cgc_writer_write(v2, a0 + v3, 1);\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            *(&v1[0]) = cgc_unpack_lzelem_bp(*((a0 + v3)), a1, 8, v3, v1[1]);\n
            if (*(&v1[2]) > v2[0])\n
            {\n
                cgc_fdprintf(2, \"DEBUG %s:%d:\\tBad back pointer %d\\n
\", \"/home/user/src/cb-multios/challenges/middleout/src/main.c\", 646, v1[1]);\n
                cgc_exit(1);\n
            }\n
            cgc_writer_write(v2, v2[2] + v2[0] + -(*(&v1[2])), *(&v1[6]));\n
            v3 += 4;\n
        }\n
    }\n
    v0 = v2[0];\n
    cgc_free(v2);\n
    return v0;\n
}\n
", "4220139:sub_4064eb": null, "4220144:main": "extern unsigned int end_marker;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18068]\n
    unsigned long long v1;  // [bp-0x18060]\n
    unsigned int v2;  // [bp-0x18058]\n
    unsigned long long v3;  // [bp-0x18050]\n
    unsigned int v4;  // [bp-0x18048]\n
    unsigned long v5;  // [bp-0x18040]\n
    unsigned long v6;  // [bp-0x18038]\n
    unsigned long v7;  // [bp-0x18030]\n
    char v8;  // [bp-0x18028]\n
    char v9;  // [bp-0x8028]\n
    unsigned long v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
\n
    v12 = 0;\n
    v11 = a0;\n
    v10 = a1;\n
    while (true)\n
    {\n
        v7 = cgc_readline(0, a1, a2, 32772, a4);\n
        if (!v7)\n
        {\n
            v12 = -1;\n
            return v12;\n
        }\n
        else if (!cgc_strcmp(v7, \"compress\"))\n
        {\n
            v6 = cgc_readline(0, 4223502, a2, 32772, a4);\n
            v5 = cgc_alnumspc_filter(v6, 4223502, a2, 32772, a4);\n
            cgc_free(v6);\n
            cgc_free(v7);\n
            if (!v5)\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            if (cgc_strlen(v5) > 0x10000)\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            *(&v4) = cgc_build_suffix_array(v5, \"compress\", a2, 0x8004, a4);\n
            if (!*(&v4))\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            *(&v0) = v5;\n
            a2 = &v9;\n
            v3 = cgc_compress(*(&v0), cgc_strlen(v5), &v9, 0x8004, *(&v4));\n
            cgc_send_n_bytes(1, v3, &v9);\n
            cgc_free(v5);\n
            cgc_free(*(&v4));\n
        }\n
        else if (!cgc_strcmp(v7, \"decompress\"))\n
        {\n
            *(&v2) = cgc_read_until_sequence(0, &end_marker, 4, 32772, a4);\n
            if (!*(&v2))\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            cgc_memset(&v8, 0, 0x10000);\n
            v1 = cgc_decompress(*(&v2), &v8, 0x10000, 32772, a4);\n
            cgc_send_n_bytes(1, v1, &v8);\n
            cgc_free(v7);\n
            cgc_free(*(&v2));\n
        }\n
        else if (!cgc_strcmp(v7, \"quit\"))\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
    }\n
}\n
", "4220771:sub_406763": null, "4220772:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "6291456:__libc_start_main": null, "6291464:cgc__terminate": null, "6291472:cgc_transmit": null, "6291480:cgc_allocate": null, "6291488:cgc_deallocate": null, "6291496:cgc_receive": null, "7344208:UnresolvableJumpTarget": null, "7344216:UnresolvableCallTarget": null}