{"4202496:_init": "extern struct_0 *g_40c348;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40c348;\n
    if (g_40c348)\n
        v1 = g_40c348();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40c368;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40c368;\n
    goto *(4244336);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202592:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4244312);\n
}\n
", "4202640:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202677:sub_4020b5": null, "4202678:sub_4020b6": null, "4202688:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40c340;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202729:sub_4020e9": null, "4202736:register_tm_clones": "extern unsigned long long g_40c350;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202793:sub_402129": null, "4202800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40c358;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40c358)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202853:sub_402165": null, "4202857:sub_402169": null, "4202864:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202873:sub_402179": null, "4202880:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4202938:sub_4021ba": null, "4202944:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4202963:sub_4021d3": null, "4202976:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4202995:sub_4021f3": null, "4203008:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4203027:sub_402213": null, "4203040:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4203059:sub_402233": null, "4203072:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4203091:sub_402253": null, "4203104:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4203123:sub_402273": null, "4203136:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4203155:sub_402293": null, "4203168:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4203187:sub_4022b3": null, "4203200:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4203219:sub_4022d3": null, "4203232:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4203251:sub_4022f3": null, "4203264:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4231184];\n
    char field_409010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4203309:sub_40232d": null, "4203312:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4231184];\n
    char field_409010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203336:sub_402348": null, "4203344:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4231184];\n
    char field_409010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4203394:sub_402382": null, "4203408:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4231184];\n
    char field_409010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203432:sub_4023a8": null, "4203440:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4203456:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // r8\n
    void* v4;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    char *v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // r13\n
    unsigned long v10;  // rax\n
    char *v11;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r13, Other Possible Types: unsigned long long\n
    void* v14;  // r14, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    if (a0->field_4 == 1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v5 = a0->field_10;\n
        v6 = a0->padding_c;\n
        v13 = v6 - v3;\n
        if (v5 && v13)\n
        {\n
            v8 = v13 & 3;\n
            if (~(v3) + v6 < 3)\n
            {\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v9 = v13 & -4;\n
                v10 = &a0->padding_0[v3 + 35];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v10 + v11 - 3)) = v5[*((v10 + v11 - 3))];\n
                    *((v10 + v11 - 2)) = v5[*((v10 + v11 - 2))];\n
                    *((v10 + v11 - 1)) = v5[*((v10 + v11 - 1))];\n
                    *((v10 + v11)) = v5[*((v10 + v11))];\n
                    v11 += 4;\n
                } while (v9 != v11);\n
            }\n
            if (v8)\n
            {\n
                v12 = &a0->padding_0[v3 + v11 + 32];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v12 + v11)) = v5[*((v12 + v11))];\n
                    v11 += 1;\n
                } while (v8 != v11);\n
            }\n
            v13 = (a0->padding_c - a0->field_8);\n
        }\n
        v0 = a0;\n
        v4 = 0;\n
        v14 = 0;\n
        do\n
        {\n
            if (v13 <= v14)\n
            {\n
LABEL_4024f5:\n
                a0 = v0;\n
                goto LABEL_4024fa;\n
            }\n
            v14 += *(&v1);\n
        } while (!cgc_transmit(a0, v11));\n
        v4 = 4294967295;\n
        goto LABEL_4024f5;\n
    }\n
LABEL_4024fa:\n
    *((a0 + 8)) = 0;\n
    return v4;\n
}\n
", "4203796:sub_402514": null, "4203808:cgc_fbuffered": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fbuffered(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int *v1;  // [bp-0x40]\n
    char v2;  // [bp-0x38]\n
    struct_0 *v4;  // r15\n
    unsigned long long v5;  // r8\n
    unsigned int *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rbx\n
    char *v12;  // rax\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v5 = a0->field_8;\n
    if (v5 == -1)\n
    {\n
        v4->field_8 = -(a1 < 1);\n
        v4->field_c = 0;\n
        return -(a1 < 1);\n
    }\n
    if (a0->field_4 == 1)\n
    {\n
        v6 = &a0->field_c;\n
    }\n
    else\n
    {\n
        v7 = a0->field_10;\n
        v8 = a0->field_c;\n
        v13 = v8 - v5;\n
        v0 = a1;\n
        if (v7 && v13)\n
        {\n
            v10 = v13 & 3;\n
            if (~(v5) + v8 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v11 = v13 & -4;\n
                a0 = &a0->padding_0[v5 + 35];\n
                a1 = 0;\n
                do\n
                {\n
                    *((a0 + a1 - 3)) = v7[*((a0 + a1 - 3))];\n
                    *((a0 + a1 - 2)) = v7[*((a0 + a1 - 2))];\n
                    *((a0 + a1 - 1)) = v7[*((a0 + a1 - 1))];\n
                    *((a0 + a1)) = v7[*((a0 + a1))];\n
                    a1 += 4;\n
                } while (v11 != a1);\n
            }\n
            if (v10)\n
            {\n
                v12 = &v4->padding_0[v5 + a1 + 32];\n
                a1 = 0;\n
                do\n
                {\n
                    v12[a1] = v7[v12[a1]];\n
                    a1 += 1;\n
                } while (v10 != a1);\n
            }\n
            v13 = v4->field_c - v4->field_8;\n
        }\n
        v1 = &v4->field_c;\n
        v14 = 0;\n
        while (v13 > v14)\n
        {\n
            v14 += *(&v2);\n
            if (cgc_transmit(a0, a1))\n
                break;\n
        }\n
        a1 = v0;\n
        v6 = v1;\n
    }\n
    *(v6) = 0;\n
}\n
", "4204158:sub_40267e": null, "4204160:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(1056);\n
    if (v3)\n
    {\n
        v3->field_0 = a0;\n
        v3->field_4 = 2 - (a1 < 1);\n
        v3->field_8 = 0;\n
        v3->field_10 = 0;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4204229:sub_4026c5": null, "4204240:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x40], Other Possible Types: char\n
    unsigned long v1;  // [bp-0x38]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // r14\n
    unsigned long long v5;  // r15\n
    unsigned long long v6;  // rax\n
    char *v7;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rax, Other Possible Types: unsigned long long\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v13;  // eax\n
    unsigned long long v15;  // r8\n
    char *v16;  // rax\n
    unsigned long v17;  // rbp\n
\n
    v3 = a2;\n
    v4 = a1;\n
    v5 = a0;\n
    v11 = a2->field_8;\n
    if (v11 == *(&a2->padding_c[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        v6 = cgc_receive(a0, a1, a2, v10);\n
        if (!v6)\n
        {\n
            v7 = *(&v0);\n
            if (v7)\n
            {\n
                *(&a2->padding_c[0]) = v7;\n
                v10 = v7 * 0x100000000;\n
                if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(rax<8>, 0x20<8>), Shl(rax<8>, 0x1f<8>), cc_ndep<8>)))\n
                {\n
                    v10 = a2->field_18;\n
                    if (v10)\n
                    {\n
                        a2 = v7;\n
                        v9 = v7 & 3;\n
                        if (v7 + 1 < 3)\n
                        {\n
                            a1 = 0;\n
                        }\n
                        else\n
                        {\n
                            a2 = &a2[-1 * v9];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                v3[1].padding_0[a1] = *((v10 + v3[1].padding_0[a1]));\n
                                v3[1].padding_0[1 + a1] = *((v10 + v3[1].padding_0[1 + a1]));\n
                                v3[1].padding_0[2 + a1] = *((v10 + v3[1].padding_0[2 + a1]));\n
                                v3[1].padding_0[3 + a1] = *((v10 + v3[1].padding_0[3 + a1]));\n
                                a1 += 4;\n
                            } while (a2 != a1);\n
                        }\n
                        if (v9)\n
                        {\n
                            a2 = &v3->padding_0[a1 + 32];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                a2[a1] = *((v10 + a2[a1]));\n
                                a1 += 1;\n
                            } while (v9 != a1);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        v11 = v3->field_8;\n
    }\n
    if (v11 != -1)\n
    {\n
        v12 = *(&v3->padding_c[0]) - v11;\n
        if (v12 > v4)\n
            v12 = v4;\n
        v0 = v12;\n
        a1 = &v3->padding_0[v11 + 32];\n
        a2 = v12;\n
        cgc_memcpy();\n
        v13 = v3->field_8 + v12;\n
        v3->field_8 = v13;\n
        if (v13 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
        if (!(v12 < v4))\n
            goto LABEL_402954;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        if (0 >= v4)\n
        {\n
LABEL_402954:\n
            return v12;\n
        }\n
    }\n
    v1 = v5 + 3;\n
    while (true)\n
    {\n
        v10 = cgc_receive(a0, a1, a2, v10);\n
        if (v10)\n
            return -1;\n
        v15 = v0;\n
        if (!v15)\n
            return -1;\n
        v16 = v3->field_18;\n
        if (v16)\n
        {\n
            a2 = v15 & 3;\n
            if (v15 - 1 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v17 = v1 + v12;\n
                a1 = 0;\n
                do\n
                {\n
                    *((v17 + a1 - 3)) = v16[*((v17 + a1 - 3))];\n
                    *((v17 + a1 - 2)) = v16[*((v17 + a1 - 2))];\n
                    *((v17 + a1 - 1)) = v16[*((v17 + a1 - 1))];\n
                    *((v17 + a1)) = v16[*((v17 + a1))];\n
                    a1 += 4;\n
                } while ((v15 & -4) != a1);\n
            }\n
            if (a2)\n
            {\n
                a1 = a1 + v12 + v5;\n
                a0 = 0;\n
                do\n
                {\n
                    a1[a0] = v16[a1[a0]];\n
                    a0 += 1;\n
                } while (a2 != a0);\n
            }\n
        }\n
        v12 += v15;\n
        if (v12 >= v4)\n
            return v12;\n
    }\n
}\n
", "4204722:sub_4028b2": null, "4204902:sub_402966": null, "4204912:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (a1 != 1)\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_4029c0;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_4029d1;\n
    while (true)\n
    {\n
LABEL_4029c0:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_4029d1;\n
    }\n
LABEL_4029d1:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4205035:sub_4029eb": null, "4205040:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x11]\n
    char v1;  // [bp-0x10]\n
    struct_1 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // rax\n
    unsigned long long v15;  // r8\n
    unsigned long v16;  // rcx\n
    struct struct_0 **v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    char *v20;  // rsi\n
    unsigned long v21;  // rdi\n
    unsigned long long v22;  // rax\n
\n
    v3 = a0;\n
    v4 = a0->field_8;\n
    if (v4 == -1)\n
    {\n
        v13 = cgc_receive(a0, v5, v6, v7);\n
        v14 = 4294967295;\n
        if (v13)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!*(&v1))\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            v16 = a0->field_18;\n
            *(&v14) = v0;\n
            if (!v16)\n
                return v14;\n
            *(&v14) = *(v16 + v14);\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != *(&a0->padding_c[0]))\n
        {\n
            v3->field_8 = v4 + 1;\n
            v22 = v3[1].padding_0[v4];\n
            return v22;\n
        }\n
        *(&a0->field_8) = 0;\n
        if (cgc_receive(a0, v9, v10, v11))\n
            return 4294967295;\n
        v15 = *(&v1);\n
        if (!v15)\n
            return 4294967295;\n
        *(&a0->padding_c[0]) = v15;\n
        if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>)))\n
        {\n
            v17 = a0->field_18;\n
            if (v17)\n
            {\n
                v18 = v15 & 3;\n
                if (v15 - 1 < 3)\n
                {\n
                    v19 = 0;\n
                }\n
                else\n
                {\n
                    v19 = 0;\n
                    do\n
                    {\n
                        v3[1].padding_0[v19] = *(v17 + v3[1].padding_0[v19]);\n
                        v3[1].padding_0[1 + v19] = *(v17 + v3[1].padding_0[1 + v19]);\n
                        v3[1].padding_0[2 + v19] = *(v17 + v3[1].padding_0[2 + v19]);\n
                        v3[1].padding_0[3 + v19] = *(v17 + v3[1].padding_0[3 + v19]);\n
                        v19 += 4;\n
                    } while (v15 - v18 != v19);\n
                }\n
                if (v18)\n
                {\n
                    v20 = &v3->padding_0[v19 + 32];\n
                    v21 = 0;\n
                    do\n
                    {\n
                        v20[v21] = *(v17 + v20[v21]);\n
                        v21 += 1;\n
                    } while (v18 != v21);\n
                }\n
            }\n
        }\n
        if (v15 < 0)\n
            return 4294967295;\n
        v4 = v3->field_8;\n
    }\n
}\n
", "4205386:sub_402b4a": null, "4205392:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4205407:sub_402b5f": null, "4205408:cgc_fwrite": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_1 *a2)\n
{\n
    unsigned long v0;  // [bp-0x450]\n
    unsigned long v1;  // [bp-0x448]\n
    char v2;  // [bp-0x440]\n
    char v3;  // [bp-0x438], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // [bp-0x437]\n
    unsigned long long v5;  // [bp-0x436]\n
    unsigned long long v6;  // [bp-0x435]\n
    struct_1 *v8;  // rbx\n
    unsigned long v9;  // r13, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    char *v12;  // r15\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    struct_0 *v15;  // rdi, Other Possible Types: unsigned long\n
    void* v16;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rcx\n
    unsigned long v18;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // rsi\n
    unsigned long long v20;  // rdx\n
    unsigned long v21;  // rcx\n
    char *v22;  // rcx\n
    unsigned long v23;  // rdx\n
    void* v24;  // r14, Other Possible Types: unsigned long\n
    void* v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v26;  // rcx\n
    struct_0 *v27;  // rdi\n
    unsigned long long v28;  // r15\n
\n
    v8 = a2;\n
    v9 = a1;\n
    v10 = a0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v11 = a2->field_c;\n
            if (v11 + a1 >= 0x400)\n
            {\n
                v13 = 0x400 - v11;\n
                cgc_memcpy(&a2->padding_0[v11 + 32], a0, v13);\n
                v8->field_c = v8->field_c + v13;\n
                cgc_fflush(a2);\n
                if (v13 < a1)\n
                    goto LABEL_402d52;\n
            }\n
            else\n
            {\n
                v13 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_402d52:\n
                    v28 = a1 - v13;\n
                    cgc_memcpy(&v8->padding_0[v8->field_c + 32], a0 + v13, v28);\n
                    v8->field_c = v8->field_c + v28;\n
                    return a1;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v12 = a2->field_10;\n
    if (!v12)\n
    {\n
        v16 = 0;\n
        do\n
        {\n
            if (v16 >= a1)\n
                return a1;\n
            v16 += *(&v3);\n
        } while (!cgc_transmit(a2, a1, a2, v17));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v25 = 0;\n
        v14 = 0x400;\n
        v15 = &v3;\n
        v0 = v10;\n
LABEL_402bc3:\n
        v18 = v9 - v25;\n
        if (0x400 <= v18)\n
            v18 = 0x400;\n
        v1 = v25;\n
        v19 = v10 + v25;\n
        v20 = v18;\n
        cgc_memcpy();\n
        if (v18)\n
        {\n
            v15 = v18 & 3;\n
            if (v18 - 1 < 3)\n
            {\n
                v21 = 0;\n
            }\n
            else\n
            {\n
                v21 = 0;\n
                do\n
                {\n
                    *(&v3 + v21) = v12[*(&v3 + v21)];\n
                    *(&v4 + v21) = v12[*(&v4 + v21)];\n
                    *(&v5 + v21) = v12[*(&v5 + v21)];\n
                    *(&v6 + v21) = v12[*(&v6 + v21)];\n
                    v21 += 4;\n
                } while ((v18 & 2044) != v21);\n
            }\n
            if (v15)\n
            {\n
                v22 = &v3 + v21;\n
                v23 = 0;\n
                do\n
                {\n
                    v22[v23] = v12[v22[v23]];\n
                    v23 += 1;\n
                } while (v15 != v23);\n
            }\n
        }\n
        v24 = 0;\n
        do\n
        {\n
            if (v18 <= v24)\n
            {\n
                v25 = v1 + v18;\n
                v10 = v0;\n
                v26 = 0x400;\n
                v27 = &v3;\n
                if (v25 >= v9)\n
                    return v9;\n
                goto LABEL_402bc3;\n
            }\n
            v24 += *(&v2);\n
        } while (!cgc_transmit(v15, v19));\n
    }\n
    return -1;\n
}\n
", "4205736:sub_402ca8": null, "4205963:sub_402d8b": null, "4205968:cgc_fxlat": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[15];\n
    uint128_t field_10;\n
    char padding_20[80];\n
    uint128_t field_70;\n
    uint128_t field_80;\n
    uint128_t field_90;\n
    uint128_t field_a0;\n
    uint128_t field_b0;\n
    uint128_t field_c0;\n
    uint128_t field_d0;\n
    uint128_t field_e0;\n
    uint128_t field_f0;\n
} struct_1;\n
\n
long long cgc_fxlat(struct_0 *a0, char a1[2])\n
{\n
    struct_0 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    struct_1 *v4;  // rbx\n
    unsigned long v7;  // rdx, Other Possible Types: char\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v10;  // rdi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rdx\n
    char v14;  // al\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        *(&v1->field_10) = 0;\n
        return cgc_free(v2);\n
    }\n
    v3 = a1;\n
    v4 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v4;\n
    *(&v1[1].padding_0[0]) = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    v7 = a1[0];\n
    v9 = 826981510;\n
    if (v3[0])\n
    {\n
        v8 = 1;\n
        do\n
        {\n
            v9 = __ROL__((v9 + v9 * 36) ^ v7, 13);\n
            v7 = v3[v8];\n
            v8 = v8 + 1;\n
        } while (v7);\n
    }\n
    *(&v4->field_0) = 0xf0e0d0c0b0a09080706050403020100;\n
    v4->field_10 = 41362427191743139026751447860679676176;\n
    strncpy(&v4->padding_20, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmno\", 80);\n
    v4->field_70 = 169468730032567031154139535364404179312;\n
    v4->field_80 = 190819780506037679842037549948358263168;\n
    v4->field_90 = 212170830979508328529935564532312347024;\n
    v4->field_a0 = 233521881452978977217833579116266430880;\n
    v4->field_b0 = 254872931926449625905731593700220514736;\n
    v4->field_c0 = 276223982399920274593629608284174598592;\n
    v4->field_d0 = 297575032873390923281527622868128682448;\n
    v4->field_e0 = 318926083346861571969425637452082766304;\n
    v4->field_f0 = 340277133820332220657323652036036850160;\n
    v10 = 255;\n
    while (true)\n
    {\n
        v11 = v9;\n
        v12 = v9 * 3;\n
        v13 = (0 CONCAT v11) /m v10 >> 32;\n
        v9 = v12 / 0x200000 ^ __ROL__(v12, 13);\n
        v14 = (&v4->field_0)[v10];\n
        (&v4->field_0)[v10] = (&v4->field_0)[v13];\n
        (&v4->field_0)[v13] = v14;\n
        v10 -= 1;\n
    }\n
}\n
", "4206417:sub_402f51": null, "4206432:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4206447:sub_402f6f": null, "4206448:cgc_malloc_alloc": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
    char padding_18[1016];\n
    unsigned long long field_410;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_3 *field_18;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern unsigned long long g_409210;\n
extern unsigned long long g_409242;\n
\n
long long cgc_malloc_alloc(struct_1 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long long v2;  // rbx\n
    struct_1 *v4;  // rbx\n
    struct_1 *v5;  // r12\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rbx\n
    void* v11;  // r15, Other Possible Types: unsigned long, struct_0 *\n
\n
    if (a1 > 2147483647)\n
        return 0;\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
        return tiny_alloc(a0, 4);\n
    if (v2 <= 15)\n
        return tiny_alloc(a0, v2);\n
    if (v2 > 131071)\n
    {\n
        if (!cgc_allocate(a0, a1, v7))\n
        {\n
            v11 = *(&v0);\n
            *(v11) = a0;\n
            *((v11 + 8)) = v2 + 4111 & -0x1000;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    v4 = v2 + 31;\n
    v5 = v4 & -0x10;\n
    if (!(v4 & -0x10))\n
    {\n
        v9 = 4294967295;\n
    }\n
    else if (v5 < 513)\n
    {\n
        v10 = v4 / 16;\n
        v9 = v10 + 2;\n
        if (v10 > 128)\n
            v11 = 0;\n
    }\n
    else if (v5 <= 0x1200)\n
    {\n
        v9 = (&v5[524576157].padding_18[816] >> 7) + 34;\n
    }\n
    else\n
    {\n
        v9 = 130;\n
        if (v5 <= 0x20000)\n
            v9 = (&v5[8393218528].padding_18[232] >> 11) + 66;\n
    }\n
    v11 = (&a0->field_0)[v9];\n
    if (!v11)\n
        goto LABEL_0x403210;\n
    else\n
        goto LABEL_0x403230;\n
}\n
", "4207360:tiny_alloc": "long long tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned short v6[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned int v7;  // edx\n
    unsigned short *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v12;  // rbp\n
    unsigned long long v13;  // r13\n
    unsigned short *v14;  // r12\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v9 = *((a0 + v4 * 8));\n
    if (v9)\n
    {\n
        *((a0 + v5 * 8)) = *(&v9);\n
        return v9;\n
    }\n
    v6 = *((a0 + v5 * 8 + 5144));\n
    if (v6)\n
    {\n
        v7 = v6[0];\n
        a1 = v6[1];\n
    }\n
    else\n
    {\n
        v8 = *((a0 + 5168));\n
        if (v8)\n
        {\n
            v9 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v10))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v12 = v0;\n
            v13 = v12 + 1048575;\n
            v14 = v13 & -0x100000;\n
            if (v14 > v12)\n
                cgc_deallocate(a0);\n
            if ((v12 + 0x200000) > (v14 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v13 >> 20) + 1048)) = 1;\n
            v8 = v14;\n
            *((a0 + 5168)) = v14;\n
            v9 = 0;\n
            if (!v14)\n
                return 0;\n
        }\n
        v15 = v8;\n
        v6 = v8 + v9;\n
        *((a0 + v5 * 8 + 5144)) = v6;\n
        *((v15 + v9)) = v3;\n
        *((v15 + v9 + 2)) = v3;\n
        v16 = v9 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v7 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v6 + 2)) = v17;\n
    if (v7 + v17 < 4097)\n
        return a1 + v6;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4207799:sub_4034b7": null, "4207808:malloc_free": "long long malloc_free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // r9\n
    char v5;  // al\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdi\n
    unsigned long v8;  // r11\n
    unsigned long v9;  // r8\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rdi\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r10\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // r10\n
    unsigned long v16;  // rcx\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // r11\n
    unsigned long v19;  // rsi\n
    unsigned long v20;  // rax\n
    unsigned long v21;  // rax\n
    unsigned long v22;  // rcx\n
    unsigned long v23;  // rdx\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rax\n
    unsigned long v26;  // rax\n
    unsigned long v27;  // rdi\n
    unsigned long v28;  // rsi\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v0;\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = *((a0 + (a1 >> 20) + 1048));\n
    if (v5 != 2)\n
    {\n
        if (v5 == 1)\n
        {\n
            v6 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            *(a1) = *((a0 + v6 * 8));\n
            *((a0 + v6 * 8)) = a1;\n
            return v0;\n
        }\n
        if (v5)\n
            return v0;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v11 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4038a9;\n
        }\n
        else\n
        {\n
            if (*((a1 - 16)) != a0)\n
            {\n
                v3 = a0;\n
                v12 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v12 = *((a1 - 8));\n
                if (v12 - 0x20000 <= 2147356671 && !(v12 & 4095))\n
                    return cgc_deallocate(a0, a1);\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v3, v12);\n
        }\n
    }\n
    else if (!(v3 & 7))\n
    {\n
        v19 = a1 - 16;\n
        v7 = *((v19 + 8));\n
        if ((v7 & 1))\n
        {\n
            v11 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_4038a9;\n
        }\n
        else if (v7 - 131073 <= -131058)\n
        {\n
            v11 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4038a9;\n
        }\n
        else\n
        {\n
            v8 = *(v19);\n
            v9 = v7 + v19;\n
            v10 = v19 - v8;\n
            if (!v8)\n
                v10 = v8;\n
            if (!v10)\n
            {\n
                if (*(v9) == v7)\n
                    goto LABEL_4035ff;\n
                goto LABEL_4038b2;\n
            }\n
            else\n
            {\n
                v13 = *((v10 + 8));\n
                if (!((v13 & -2) == v8))\n
                    goto LABEL_4038cc;\n
                if (*(v9) == v7)\n
                {\n
                    if ((v13 & 1))\n
                    {\n
                        if (v8 <= 15)\n
                        {\n
                            v15 = v13 / 4 - 1;\n
                        }\n
                        else if (v8 <= 0x200)\n
                        {\n
                            v15 = (v13 >> 4) + 2;\n
                        }\n
                        else if (v8 <= 0x1200)\n
                        {\n
                            v15 = (0x7ffffffe00 + v8 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v15 = 130;\n
                            if (v8 <= 0x20000)\n
                                v15 = (0x7ffffffee00 + v8 >> 11) + 66;\n
                        }\n
                        *((v10 + 8)) = v8;\n
                        v16 = *((v10 + 16));\n
                        if (v16)\n
                            *((v16 + 24)) = *((v10 + 24));\n
                        v17 = *((v10 + 24));\n
                        if (v17)\n
                            *((v17 + 16)) = v16;\n
                        if (*((v4 + (v15 << 3))) == v10)\n
                            *((v4 + v15 * 8)) = v17;\n
                        *((v10 + 16)) = 0;\n
                        v18 = v8 + *((v19 + 8));\n
                        *((v10 + 8)) = v18;\n
                        *(v9) = v18;\n
                        v19 = v10;\n
                        v14 = *((v9 + 8));\n
                        if (!(!(v14 & 1)))\n
                            goto LABEL_403714;\n
                        goto LABEL_40360c;\n
                    }\n
LABEL_4035ff:\n
                    v14 = *((v9 + 8));\n
                    if ((v14 & 1))\n
                    {\n
LABEL_403714:\n
                        v21 = v14 & -2;\n
                        if (v21 <= 15)\n
                        {\n
                            v22 = v14 / 4 - 1;\n
                        }\n
                        else if (v21 <= 0x200)\n
                        {\n
                            v22 = (v14 >> 4) + 2;\n
                        }\n
                        else if (v21 <= 0x1200)\n
                        {\n
                            v22 = (0x7ffffffe00 + v21 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v22 = 130;\n
                            if (v21 <= 0x20000)\n
                                v22 = (0x7ffffffee00 + v21 >> 11) + 66;\n
                        }\n
                        *((v9 + 8)) = v21;\n
                        v23 = *((v9 + 16));\n
                        if (v23)\n
                            *((v23 + 24)) = *((v9 + 24));\n
                        v24 = *((v9 + 24));\n
                        if (v24)\n
                            *((v24 + 16)) = v23;\n
                        if (*((v4 + (v22 << 3))) == v9)\n
                            *((v4 + v22 * 8)) = v24;\n
                        *((v9 + 16)) = 0;\n
                        v25 = v21 + *((v19 + 8));\n
                        *((v19 + 8)) = v25;\n
                        *((v19 + v25)) = v25;\n
                        v20 = *((v19 + 8));\n
                        if (v20 > 15)\n
                        {\n
LABEL_4037d1:\n
                            if (v20 <= 0x200)\n
                            {\n
                                v3 = (v20 >> 4) + 2;\n
                            }\n
                            else if (v20 <= 0x1200)\n
                            {\n
                                v3 = (0x7ffffffe00 + v20 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v3 = 130;\n
                                if (v20 <= 0x20000)\n
                                    v3 = (0x7ffffffee00 + v20 >> 11) + 66;\n
                            }\n
LABEL_403827:\n
                            if ((v20 & 1))\n
                            {\n
                                v10 = cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
                            }\n
                            else\n
                            {\n
                                *((v19 + 8)) = v20 | 1;\n
                                *((v19 + 16)) = 0;\n
                                *((v19 + 24)) = *((v4 + v3 * 8));\n
                                *((v4 + v3 * 8)) = v19;\n
                                v26 = *((v19 + 24));\n
                                if (!v26)\n
                                    return v0;\n
                                *((v26 + 16)) = v19;\n
                                return v0;\n
                            }\n
LABEL_4038cc:\n
                            v27 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
                            v28 = v10;\n
LABEL_4038d5:\n
                            cgc_heap_error(v27, v28, v3);\n
                            return cgc_malloc_size(v27, v28, v3, v3, v9, v4);\n
                        }\n
LABEL_40361a:\n
                        v3 = v20 / 4 - 1;\n
                        goto LABEL_403827;\n
                    }\n
LABEL_40360c:\n
                    v20 = *((v19 + 8));\n
                    if (!(v20 <= 15))\n
                        goto LABEL_4037d1;\n
                    goto LABEL_40361a;\n
                }\n
            }\n
        }\n
    }\n
    v11 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4038a9:\n
    cgc_heap_error(v11, v3);\n
LABEL_4038b2:\n
    v27 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
    v28 = v9;\n
    goto LABEL_4038d5;\n
}\n
", "4208864:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4208908:sub_40390c": null, "4208912:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r12\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 > 2147483647)\n
    {\n
LABEL_403921:\n
        return 0;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        return 0;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v3 = a1 / 0x100000;\n
    if (!(*((a0 + v3 + 1048)) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_4039a3;\n
    }\n
    else\n
    {\n
        if (*((a0 + v3 + 1048)) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_4039a3;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_4039a3:\n
                v5 = cgc_malloc_alloc(a0, a2);\n
                if (v5)\n
                {\n
                    cgc_memcpy(v5, a1);\n
                    malloc_free(a0, a1);\n
                    return v5;\n
                }\n
                goto LABEL_403921;\n
            }\n
        }\n
    }\n
    return a1;\n
}\n
", "4209172:sub_403a14": null, "4209184:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4209360:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4209396:sub_403af4": null, "4209408:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4209454:sub_403b2e": null, "4209456:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_403bc4:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_403b57;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_403b57:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_403bc4;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_403b57;\n
}\n
", "4209887:sub_403cdf": null, "4209888:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_403e35:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_403d19;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_403d19:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_403e35;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_403d19;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_403e43:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_403dc7;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_403dc7:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_403e43;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_403dc7;\n
    }\n
}\n
", "4210815:sub_40407f": null, "4210816:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_4041f0;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_4041f0:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4211198:sub_4041fe": null, "4211200:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4211412:sub_4042d4": null, "4211424:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return cgc__vsfprintf();\n
    }\n
    return cgc__vsfprintf();\n
}\n
", "4211502:sub_40432e": null, "4211504:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4211713:sub_404401": null, "4211728:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4211811:sub_404463": null, "4211824:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4211977:sub_404509": null, "4211984:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4211997:sub_40451d": null, "4212000:cgc__vsfprintf": "long long cgc__vsfprintf(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_16;  // tmp #16\n
    int tmp_2;  // tmp #2\n
    unsigned long v0;  // [bp-0x1c8]\n
    int tmp_50;  // tmp #50\n
    int tmp_70;  // tmp #70\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0xa1]\n
    unsigned long v2;  // [bp-0xa0]\n
    unsigned long v3;  // [bp-0x98]\n
    unsigned long v4;  // [bp-0x90]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x87]\n
    char v7;  // [bp-0x76]\n
    char v8;  // [bp-0x75]\n
    char v9;  // [bp-0x74]\n
    unsigned long v10;  // [bp-0x40]\n
    unsigned long v11;  // [bp-0x38]\n
    unsigned long v13;  // rbx\n
    unsigned long v14;  // rbp\n
    char v15;  // al, Other Possible Types: unsigned long\n
    unsigned long v16;  // r15\n
    unsigned int v17;  // eax\n
    char v18;  // r13b\n
    unsigned long v19;  // rax\n
    char v20;  // cc_dep1\n
    char v21;  // cc_dep2\n
    unsigned long v22;  // r12\n
    unsigned long v23;  // rcx\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rax\n
    unsigned long v28;  // rsi\n
    unsigned int v29;  // cc_dep1\n
    unsigned long v30;  // rsi\n
    unsigned long v31;  // rdi\n
    unsigned long v32;  // rcx\n
    unsigned long v33;  // rax\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // r13\n
    unsigned long v36;  // rax\n
    unsigned long v37;  // r13\n
    unsigned long v38;  // rbx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // r12\n
    unsigned long v41;  // rbp\n
    unsigned long v42;  // rbp\n
    unsigned long v43;  // rbp\n
    unsigned long v44;  // r14\n
    unsigned long v45;  // rax\n
    unsigned int v46;  // ebp\n
    unsigned long v47;  // r12\n
    unsigned long v48;  // r13\n
    unsigned long v49;  // r8\n
    unsigned long v50;  // r9\n
\n
    v13 = a3;\n
    v4 = a1;\n
    v14 = a0 + 1;\n
    v3 = v14;\n
    v15 = *(a0);\n
    if (!*(a0))\n
    {\n
        v44 = 0;\n
    }\n
    else\n
    {\n
        v16 = a2;\n
        v34 = &v5;\n
        v10 = 20 + -0x1 * &v5;\n
        v44 = 0;\n
        v2 = v13;\n
        while (true)\n
        {\n
            if (v15 != 59)\n
            {\n
                if (v44 < 2147483647)\n
                {\n
                    v1 = v15;\n
                    if (v16)\n
                    {\n
                        a2 = v16;\n
                        cgc_fwrite(&v1, 1, v16);\n
                    }\n
                    if (v13)\n
                        *((v13 + v44)) = v1;\n
                    v14 = v3;\n
                }\n
                else if (v44 == -1)\n
                {\n
                    goto LABEL_404b0f;\n
                }\n
                v44 += 1;\n
                v34 = v14 + 1;\n
                v3 = v34;\n
                tmp_16 = *(v14);\n
                v15 = *(v14);\n
                v14 = v34;\n
                if (!(!tmp_16))\n
                    continue;\n
                goto LABEL_404a9a;\n
            }\n
            a0 = v14 + 1;\n
            v3 = a0;\n
            v17 = *(v14);\n
            v18 = 32;\n
            if (v17 == 32)\n
            {\n
LABEL_4045c3:\n
                if (!(*(a0) - 48 <= 9))\n
                    goto LABEL_40463a;\n
                goto LABEL_4045cb;\n
            }\n
            else if (v17 != 48)\n
            {\n
                if (!v17)\n
                    goto LABEL_404a9a;\n
                v3 = v14;\n
                a0 = v14;\n
                goto LABEL_4045c3;\n
            }\n
            else\n
            {\n
                v18 = 48;\n
                if (*(a0) - 48 <= 9)\n
                {\n
LABEL_4045cb:\n
                    v19 = cgc_strtoul();\n
                    a0 = v3;\n
                    goto LABEL_40463c;\n
                }\n
                else\n
                {\n
LABEL_40463a:\n
                    v19 = 0;\n
LABEL_40463c:\n
                    v34 = a0 + 1;\n
                    v3 = v34;\n
                    a2 = *(a0);\n
                    *(&v13) = 1;\n
                    if (a2 == 104)\n
                    {\n
                        a2 = a0 + 2;\n
                        v20 = *((a0 + 1));\n
                        v21 = 104;\n
                    }\n
                    else if (a2 == 108)\n
                    {\n
                        v20 = *((a0 + 1));\n
                        v21 = 108;\n
                        a2 = a0 + 2;\n
                        *(&v13) = *((a0 + 1)) != 108;\n
                    }\n
                    else\n
                    {\n
                        if (!a2)\n
                            goto LABEL_404a95;\n
                        goto LABEL_404679;\n
                    }\n
                    if (v20 == v21)\n
                        v34 = a2;\n
                    a0 = v34;\n
LABEL_404679:\n
                    v22 = a0 + 1;\n
                    v3 = v22;\n
                    *(&a2) = *(a0);\n
                    v34 = *(a0);\n
                    a1 = v34 - 88;\n
                    if (a1 > 32)\n
                    {\n
                        v13 = v2;\n
                        if (!v34)\n
                        {\n
                            v47 = v22 - v14;\n
                            if (v44 < 2147483647)\n
                            {\n
                                v48 = 2147483647 - v44;\n
                                if (v48 > v47)\n
                                    v48 = v47;\n
                                if (v16)\n
                                    cgc_fwrite(v14, v48, v16);\n
                                if (v13)\n
                                    cgc_memcpy(v13 + v44, v14, v48);\n
                            }\n
                            tmp_2 = v44;\n
                            v44 += v47;\n
                            if (__CFADD__(tmp_2, v47))\n
                                goto LABEL_404b0f;\n
                            goto LABEL_404a9a;\n
                        }\n
                        else\n
                        {\n
                            v40 = v22 - v14;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_404a3f;\n
                            v37 = 2147483647 - v44;\n
                            if (v37 > v40)\n
                                v37 = v40;\n
                            if (v16)\n
                                cgc_fwrite(v14, v37, v16);\n
                            if (!v13)\n
                                goto LABEL_404a3f;\n
                            a0 = v13 + v44;\n
                            a1 = v14;\n
                            a2 = v37;\n
                            goto LABEL_404a3a;\n
                        }\n
                    }\n
                    v0 = 4831842305;\n
                    if (((*(&v0 + ((a1 & 63) >> 3)) >> (a1 & 63 & 7)) & 1))\n
                    {\n
                        v11 = v19;\n
                        if (a2 != 100)\n
                        {\n
                            a1 = v4;\n
                            if (v13)\n
                            {\n
                                v25 = *(a1);\n
                                v13 = v2;\n
                                if (v25 > 40)\n
                                {\n
                                    v31 = *((a1 + 8));\n
                                    *((a1 + 8)) = v31 + 8;\n
                                }\n
                                else\n
                                {\n
                                    v31 = v25 + *((a1 + 16));\n
                                    *(a1) = v25 + 8;\n
                                }\n
                                v32 = *(v31);\n
                                if (a2 != 117)\n
                                    a0 = 16;\n
                                else\n
                                    a0 = 10;\n
                                v42 = (a2 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                if (!v32)\n
                                {\n
                                    v7 = *(v42);\n
                                    a1 = &v7;\n
                                }\n
                                else\n
                                {\n
                                    do\n
                                    {\n
                                        *((a1 - 1)) = *((v42 + ((0 CONCAT v32) /m a0 >> 32)));\n
                                        a1 = &v7;\n
                                        tmp_50 = v32;\n
                                        v32 = (0 CONCAT v32) /m a0;\n
                                    } while (tmp_50 >= a0);\n
                                }\n
                                v41 = &v5;\n
                                cgc_memmove(&v5, a1, v10 + a1);\n
                                goto LABEL_40492c;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            a2 = v4;\n
                            v41 = &v5;\n
                            if (v13)\n
                            {\n
                                v24 = *(a2);\n
                                if (v24 <= 40)\n
                                {\n
                                    v28 = v24 + *((a2 + 16));\n
                                    *(a2) = v24 + 8;\n
                                    v38 = *(v28);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                        goto LABEL_40484f;\n
                                }\n
                                else\n
                                {\n
                                    v30 = *((a2 + 8));\n
                                    *((a2 + 8)) = v30 + 8;\n
                                    v38 = *(v30);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                    {\n
LABEL_40484f:\n
                                        v5 = 45;\n
                                        v38 = -(v38);\n
                                        v9 = 0;\n
                                        a1 = &v9;\n
                                        a0 = &v6;\n
                                        do\n
                                        {\n
                                            v39 = 3435973837 * v38 >> 35;\n
                                            a2 = v39 * 2;\n
                                            *((a1 - 1)) = *((4232188 + v38 + -5 * a2));\n
                                            a1 -= 1;\n
                                            tmp_70 = v38;\n
                                            v38 = v39;\n
                                        } while (tmp_70 > 9);\n
                                        v41 = &v5;\n
LABEL_40489d:\n
                                        cgc_memmove(a0, a1, a1 - a0 + 20);\n
                                        v13 = v2;\n
LABEL_40492c:\n
                                        v45 = cgc_strlen(v41);\n
                                        v40 = v45;\n
                                        v34 = v11;\n
                                        if (v34 > v45)\n
                                        {\n
                                            v46 = v45 - v34;\n
                                            do\n
                                            {\n
                                                if (v44 < 2147483647)\n
                                                {\n
                                                    v1 = v18;\n
                                                    if (v16)\n
                                                    {\n
                                                        a2 = v16;\n
                                                        cgc_fwrite(&v1, 1, v16);\n
                                                    }\n
                                                    if (v13)\n
                                                        *((v13 + v44)) = v1;\n
                                                }\n
                                                else\n
                                                {\n
                                                    if (!(v44 == -1))\n
                                                        continue;\n
                                                }\n
                                                tmp_2 = v44;\n
                                                v44 += 1;\n
                                                tmp_12 = v46 + 1;\n
                                                v46 += 1;\n
                                            } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                                        }\n
                                        if (!(v44 < 2147483647))\n
                                            goto LABEL_404a3f;\n
                                        v43 = 2147483647 - v44;\n
                                        if (v43 > v45)\n
                                            v43 = v45;\n
                                        if (v16)\n
                                        {\n
                                            a1 = v43;\n
                                            a2 = v16;\n
                                            cgc_fwrite(&v5, v43, v16);\n
                                        }\n
                                        if (!v13)\n
                                            goto LABEL_404a3f;\n
                                        a0 = v13 + v44;\n
                                        a1 = &v5;\n
LABEL_404a37:\n
                                        a2 = v43;\n
LABEL_404a3a:\n
                                        cgc_memcpy(a0, a1, a2);\n
LABEL_404a3f:\n
                                        tmp_2 = v44;\n
                                        v44 += v40;\n
                                        if (__CFADD__(tmp_2, v40))\n
                                            goto LABEL_404b0f;\n
                                        goto LABEL_404a48;\n
                                    }\n
                                }\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                a0 = &v5;\n
                                if (!v29)\n
                                {\n
                                    v7 = 48;\n
                                    a0 = &v5;\n
                                    a1 = &v7;\n
                                    goto LABEL_40489d;\n
                                }\n
                            }\n
                        }\n
LABEL_404a95:\n
                        v13 = v2;\n
LABEL_404a9a:\n
                        if (v44 < 2147483647)\n
                            break;\n
                        if (v44 == -1)\n
                        {\n
LABEL_404b0f:\n
                            cgc__terminate(a0);\n
                            return cgc_realloc(a0, a1, a2, v34, v49, v50);\n
                        }\n
                        return v44;\n
                    }\n
                    else if (a1 == 11)\n
                    {\n
                        a2 = v4;\n
                        v23 = *(a2);\n
                        if (v23 <= 40)\n
                        {\n
                            v27 = v23 + *((a2 + 16));\n
                            v34 = v23 + 8;\n
                            *(a2) = v34;\n
                            v13 = v2;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_404a80;\n
                            goto LABEL_404806;\n
                        }\n
                        else\n
                        {\n
                            v27 = *((a2 + 8));\n
                            v34 = v27 + 8;\n
                            *((a2 + 8)) = v34;\n
                            v13 = v2;\n
                            if (v44 < 2147483647)\n
                            {\n
LABEL_404806:\n
                                v1 = *(v27);\n
                                if (v16)\n
                                {\n
                                    a2 = v16;\n
                                    cgc_fwrite(&v1, 1, v16);\n
                                }\n
                                if (v13)\n
                                {\n
                                    *((v13 + v44)) = v1;\n
                                    goto LABEL_404a8a;\n
                                }\n
                            }\n
                            else\n
                            {\n
LABEL_404a80:\n
                                if (v44 == -1)\n
                                    goto LABEL_404b0f;\n
LABEL_404a8a:\n
                                v44 += 1;\n
LABEL_404a48:\n
                                v15 = v3;\n
                                v14 = v15 + 1;\n
                                v3 = v14;\n
                                *(&v15) = *(v15);\n
                                if (!*(&v15))\n
                                    goto LABEL_404a9a;\n
                            }\n
                        }\n
                    }\n
                    else if (a1 == 27)\n
                    {\n
                        a2 = v4;\n
                        v26 = *(a2);\n
                        if (v26 > 40)\n
                        {\n
                            v33 = *((a2 + 8));\n
                            v34 = v33 + 8;\n
                            *((a2 + 8)) = v34;\n
                        }\n
                        else\n
                        {\n
                            v33 = v26 + *((a2 + 16));\n
                            v34 = v26 + 8;\n
                            *(a2) = v34;\n
                        }\n
                        v13 = v2;\n
                        v35 = *(v33);\n
                        v36 = cgc_strlen(v35);\n
                        v40 = v36;\n
                        if (!(v44 < 2147483647))\n
                            goto LABEL_404a3f;\n
                        v43 = 2147483647 - v44;\n
                        if (v43 > v36)\n
                            v43 = v36;\n
                        if (v16)\n
                            cgc_fwrite(v35, v43, v16);\n
                        if (!v13)\n
                            goto LABEL_404a3f;\n
                        a0 = v13 + v44;\n
                        a1 = v35;\n
                        goto LABEL_404a37;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v13)\n
        *((v13 + v44)) = 0;\n
    return v44;\n
}\n
", "4212072:sub_404568": null, "4212193:sub_4045e1": null, "4213066:sub_40494a": null, "4213143:sub_404997": null, "4213536:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4213554:sub_404b32": null, "4213568:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4213665:sub_404ba1": null, "4213680:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4213776:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4213833:sub_404c49": null, "4213840:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4213893:sub_404c85": null, "4213904:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4213957:sub_404cc5": null, "4213968:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4214029:sub_404d0d": null, "4214032:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4214066:sub_404d32": null, "4214080:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    char v6[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v6 = a0;\n
    v4 = &a0[a2];\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v3))\n
        {\n
            v5 = cgc_tolower(v2);\n
            if (v5 != cgc_tolower(*(v3)))\n
                break;\n
            if (v6 >= v4)\n
                break;\n
            v3 += 1;\n
            v2 = *((v6 + 1));\n
            v6 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    v7 = (v6 == v4 ? *(v6) - *(v3) : 0);\n
    return v7;\n
}\n
", "4214191:sub_404daf": null, "4214192:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_404e14:\n
        v17 = v3;\n
        goto LABEL_404f46;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_404e14;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_404f46:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4214634:sub_404f6a": null, "4214640:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4214711:sub_404fb7": null, "4214720:cgc_strsep": "long long cgc_strsep(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    unsigned long v3;  // r15\n
    unsigned long v4;  // rbx\n
    unsigned long v5;  // rax\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rax\n
    unsigned long v8;  // rbx\n
    unsigned long v9;  // rbx\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v5 = cgc_strchr(a1, v2);\n
            if (v5)\n
            {\n
                v7 = v3 + v4;\n
                if (!*((v3 + v4)))\n
                    goto LABEL_405005;\n
                v8 = v4 + 1;\n
                v9 = v8 + v3;\n
                goto LABEL_405007;\n
            }\n
            v4 = v4 + 1;\n
            v2 = *((v3 + v4));\n
        } while (v2);\n
        v6 = v4;\n
    }\n
    v7 = v6 + v3;\n
LABEL_405005:\n
    v9 = 0;\n
LABEL_405007:\n
    *(a0) = v9;\n
    *(v7) = 0;\n
    return *(a0);\n
}\n
", "4214833:sub_405031": null, "4214848:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4214927:sub_40508f": null, "4214928:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    unsigned int v25;  // ebp\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // edx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405268;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_405151;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_405151:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_405190:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_405299;\n
LABEL_4051a6:\n
                *(&v18) = *(v16);\n
LABEL_4051a8:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_4051b5:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 > 2147483647)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405268;\n
                }\n
LABEL_405299:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405268;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405268;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_4051b5;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_405190;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_405186:\n
            v19 = 16;\n
            goto LABEL_4051a6;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_4051a6;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_4051a8;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_405186;\n
LABEL_405268:\n
    v31 = (!v25 ? -0x80000000 : -(v26));\n
    v32 = (!v25 ? 2147483647 : v26);\n
    if (v30 < 0)\n
        v32 = v31;\n
    return v32;\n
}\n
", "4215273:sub_4051e9": null, "4215471:sub_4052af": null, "4215472:cgc_strtoul": "long long cgc_strtoul(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    unsigned long v14;  // rbp\n
    unsigned long v16;  // rbx\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // r13\n
    unsigned long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rbp, Other Possible Types: unsigned int\n
    unsigned long v26;  // r12\n
    unsigned int v27;  // r14d\n
    unsigned long v28;  // r15\n
    unsigned long v29;  // rax\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned long v32;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(*(a0));\n
    v16 = v14;\n
    v2 = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_405488;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_405371;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_405371:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_4053b0:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_4054c4;\n
LABEL_4053c6:\n
                *(&v18) = *(v16);\n
LABEL_4053c8:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_4053d5:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 >> 32)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_405488;\n
                }\n
LABEL_4054c4:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_405488;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_405488;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_4053d5;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_4053b0;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_4053a6:\n
            v19 = 16;\n
            goto LABEL_4053c6;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_4053c6;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_4053c8;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_4053a6;\n
LABEL_405488:\n
    if (v30 < 0)\n
    {\n
        v31 = (v26 == -0x80000000 ? 1 : v25);\n
        if (v26 <= 2147483647)\n
            v31 = v25;\n
        v26 = -(v26);\n
        v25 = v31;\n
    }\n
    v32 = (!v25 ? 4294967295 : v26);\n
    return v32;\n
}\n
", "4215817:sub_405409": null, "4216026:sub_4054da": null, "4216032:cgc_chal_cat_to_string": "extern char g_409468;\n
\n
long long cgc_chal_cat_to_string(unsigned int *a0)\n
{\n
    if (a0 <= 6)\n
        return &(&g_409468)[*((&g_409468 + 0x4 * a0))];\n
    return \"Unknown\";\n
}\n
", "4216063:sub_4054ff": null, "4216064:cgc_chal_status_to_string": "extern char g_409484;\n
\n
long long cgc_chal_status_to_string(unsigned int *a0)\n
{\n
    if (a0 <= 3)\n
        return &(&g_409484)[*((&g_409484 + 0x4 * a0))];\n
    return \"Unknown\";\n
}\n
", "4216095:sub_40551f": null, "4216096:cgc_ctf_init": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    uint128_t field_8;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    unsigned long long field_40;\n
    unsigned long long field_48;\n
    char padding_50[48];\n
    unsigned long long field_80;\n
} struct_0;\n
\n
long long cgc_ctf_init(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    a0->field_0 = 0;\n
    *(&(&a0->padding_4)[1]) = 0;\n
    *((&a0->field_8 + 8)) = 0;\n
    a0->field_30 = cgc_malloc(64);\n
    a0->field_18 = 8;\n
    a0->field_38 = cgc_malloc(128);\n
    a0->field_20 = 16;\n
    a0->field_40 = cgc_malloc(0x100);\n
    a0->field_28 = 32;\n
    *(&a0->padding_50[40]) = 0;\n
    cgc_flg_init(&a0->field_48, a0->field_30, &(&a0->padding_4)[1]);\n
    return 0;\n
}\n
", "4216234:sub_4055aa": null, "4216240:cgc_ctf_submit_flag": "long long cgc_ctf_submit_flag(unsigned long a0)\n
{\n
    return cgc_flg_add_submit(a0 + 80);\n
}\n
", "4216249:sub_4055b9": null, "4216256:cgc_ctf_add_user": "typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_3 *field_18;\n
    char padding_20[16];\n
    unsigned long long field_30;\n
    char padding_38[16];\n
    struct struct_4 *field_48;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
} struct_4;\n
\n
long long cgc_ctf_add_user(struct_2 *a0, unsigned long a1)\n
{\n
    char *v2;  // r14\n
    struct_2 *v3;  // r15\n
    struct struct_2 **v4;  // rbx, Other Possible Types: unsigned long\n
    struct struct_0 **v5;  // rsi, Other Possible Types: unsigned long\n
    struct struct_0 **v6;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return 1;\n
    v2 = a1;\n
    if (!a1)\n
        return 1;\n
    v3 = a0;\n
    if (a0->field_18)\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            a0 = *((*((a0 + 72)) + v4 * 8));\n
            if (!cgc_strcmp(a0, v2))\n
                return 11;\n
            v4 += 1;\n
            v5 = v3->field_18;\n
        } while (v5 > v4);\n
        if (!(v5 == v3->field_30))\n
            goto LABEL_40563a;\n
        goto LABEL_405617;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        if (*((a0 + 48)))\n
        {\n
LABEL_40563a:\n
            v6 = *((a0 + 72));\n
        }\n
        else\n
        {\n
LABEL_405617:\n
            v6 = cgc_realloc(*((a0 + 72)), v5 * 16);\n
            v3->field_48 = v6;\n
            v3->field_30 = v3->field_30 * 2;\n
            v5 = v3->field_18;\n
        }\n
    }\n
    *((a0 + 24)) = v5 + 1;\n
    *((v6 + v5 * 8)) = v2;\n
    return 0;\n
}\n
", "4216413:sub_40565d": null, "4216416:cgc_ctf_auth_user": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char padding_20[40];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_ctf_auth_user(struct_0 *a0, unsigned long long *a1, char *a2, char *a3)\n
{\n
    unsigned long long *v0;  // [bp-0x38]\n
    unsigned long long *v2;  // rax\n
    unsigned long long *v4;  // r14, Other Possible Types: unsigned long\n
    char *v5;  // rbx\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else if (!a3)\n
    {\n
        return 1;\n
    }\n
    else if (!a0->field_18)\n
    {\n
        return 5;\n
    }\n
    else\n
    {\n
        v0 = a1;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v5 = a0->field_48[v4].field_0;\n
            if (!cgc_strcmp(v5, a2))\n
                break;\n
            v4 += 1;\n
            if (a0->field_18 <= v4)\n
                return 5;\n
        }\n
        if (!cgc_strcmp(v5 + 16, a3))\n
        {\n
            *(v0) = v5;\n
            return 0;\n
        }\n
        return 14;\n
    }\n
}\n
", "4216581:sub_405705": null, "4216592:cgc_ctf_add_team": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    char padding_18[16];\n
    unsigned long long field_28;\n
    char padding_30[16];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_ctf_add_team(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_0 *v5;  // r12\n
    unsigned long long *v7;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v8;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long *v9;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v5 = a0;\n
        if (a0->field_10)\n
        {\n
            v7 = 0;\n
            do\n
            {\n
                a0 = *((*((a0 + 64)) + v7 * 8)) + 33;\n
                if (!cgc_strcmp(a0, a1 + 33))\n
                    return 12;\n
                v7 += 1;\n
                v8 = v5->field_10;\n
            } while (v8 > v7);\n
            if (!(v8 == v5->field_28))\n
                goto LABEL_4057a6;\n
            goto LABEL_40577e;\n
        }\n
        else\n
        {\n
            v8 = 0;\n
            if (*((a0 + 40)))\n
            {\n
LABEL_4057a6:\n
                v9 = *((a0 + 64));\n
            }\n
            else\n
            {\n
LABEL_40577e:\n
                v9 = cgc_realloc(*((a0 + 64)), v8 * 16);\n
                v5->field_40 = v9;\n
                v5->field_28 = v5->field_28 * 2;\n
                v8 = v5->field_10;\n
            }\n
        }\n
        *((a0 + 16)) = v8 + 1;\n
        *((v9 + v8 * 8)) = a1;\n
        return 0;\n
    }\n
}\n
", "4216781:sub_4057cd": null, "4216784:cgc_ctf_add_chal": "typedef struct struct_7 {\n
    char padding_0[8];\n
    struct struct_8 *field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
    char padding_28[16];\n
    struct struct_9 *field_38;\n
    char padding_40[48];\n
    unsigned long long field_70;\n
    char padding_78[280];\n
    unsigned long long field_190;\n
} struct_7;\n
\n
typedef struct struct_3 {\n
    char padding_0[400];\n
    unsigned long long field_190;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[400];\n
    char *field_190;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    struct struct_5 *field_8;\n
    char padding_10[16];\n
    unsigned long long field_20;\n
    char padding_28[16];\n
    struct struct_6 *field_38;\n
    char padding_40[48];\n
    unsigned long long field_70;\n
    char padding_78[280];\n
    char *field_190;\n
} struct_4;\n
\n
typedef struct struct_8 {\n
    struct struct_7 *field_0;\n
} struct_8;\n
\n
typedef struct struct_9 {\n
    struct struct_7 *field_0;\n
} struct_9;\n
\n
typedef struct struct_5 {\n
    struct struct_4 *field_0;\n
} struct_5;\n
\n
typedef struct struct_6 {\n
    struct struct_4 *field_0;\n
} struct_6;\n
\n
long long cgc_ctf_add_chal(struct_7 *a0, struct_3 *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_2 *v4;  // r14\n
    struct_4 *v5;  // r15\n
    struct struct_7 **v6;  // rbx, Other Possible Types: unsigned long\n
    struct struct_0 **v7;  // rsi, Other Possible Types: unsigned long\n
    struct struct_0 **v8;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a0)\n
        return 1;\n
    v4 = a1;\n
    if (!a1)\n
        return 1;\n
    v5 = a0;\n
    if (a0->field_8)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            a0 = *((*((a0 + 56)) + v6 * 8));\n
            if (!cgc_strcmp(a0, v4))\n
                return 13;\n
            if (!cgc_strcmp(v5->field_38[v6].field_0->field_190, v4->field_190))\n
                return 13;\n
            v6 += 1;\n
            v7 = v5->field_8;\n
        } while (v7 > v6);\n
        if (!(v7 == v5->field_20))\n
            goto LABEL_40587d;\n
        goto LABEL_405856;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        if (*((a0 + 32)))\n
        {\n
LABEL_40587d:\n
            v8 = *((a0 + 56));\n
        }\n
        else\n
        {\n
LABEL_405856:\n
            v8 = cgc_realloc(*((a0 + 56)), v7 * 16);\n
            v5->field_38 = v8;\n
            v5->field_70 = v8;\n
            v5->field_20 = v5->field_20 * 2;\n
            v7 = v5->field_8;\n
        }\n
    }\n
    *((a0 + 8)) = v7 + 1;\n
    *((v8 + v7 * 8)) = v4;\n
    return 0;\n
}\n
", "4216988:sub_40589c": null, "4216992:cgc_ctf_open_chal": "typedef struct struct_0 {\n
    char padding_0[388];\n
    unsigned int field_184;\n
} struct_0;\n
\n
long long cgc_ctf_open_chal(unsigned long long a0[8], struct struct_0 **a1)\n
{\n
    struct_0 *v2;  // rcx\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (a0[1] <= a1)\n
    {\n
        return 6;\n
    }\n
    else\n
    {\n
        v2 = *((a0[7] + a1 * 8));\n
        if (v2->field_184)\n
            return 8;\n
        v2->field_184 = 3;\n
        return 0;\n
    }\n
}\n
", "4217050:sub_4058da": null, "4217056:cgc_ctf_get_solves": "long long cgc_ctf_get_solves(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        return cgc_flg_get_solves(a0 + 80);\n
    }\n
}\n
", "4217091:sub_405903": null, "4217104:cgc_ctf_select_nth": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned int field_70;\n
} struct_0;\n
\n
long long cgc_ctf_select_nth(struct struct_0 **a0, unsigned long a1, unsigned long a2, unsigned long a3, struct struct_0 **a4)\n
{\n
    struct_0 *v1;  // r11\n
    unsigned long v5;  // r9\n
    unsigned long long v6;  // rax\n
    struct_0 *v7;  // rcx\n
    unsigned long long v8;  // rcx\n
    struct struct_0 **v9;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // r10\n
    void* v12;  // rcx\n
    void* v13;  // r10\n
\n
    while (true)\n
    {\n
        a4 = v9;\n
        v10 = v9 - 1;\n
        if (v9 == 1)\n
        {\n
            v11 = 0;\n
        }\n
        else\n
        {\n
            v12 = 0;\n
            v13 = 0;\n
            do\n
            {\n
                v1 = a0[rcx<8>];\n
                if (v1->field_70 >= *((*((-8 + a0 + 0x8 * a4)) + 112)))\n
                {\n
                    a0[rcx<8>] = a0[r10<8>];\n
                    a0[r10<8>] = v1;\n
                    v11 = r10<8> + 1;\n
                }\n
                a3 += 1;\n
            } while (v5 != a3);\n
        }\n
        v6 = *((a0 + a4 * 8 - 8));\n
        v9 = v11;\n
        v7 = *((a0 + v11 * 8));\n
        *((a0 + a4 * 8 - 8)) = v7;\n
        *((a0 + v11 * 8)) = v6;\n
        v8 -= v11;\n
        if (v8 == v11)\n
        {\n
            return *((a0 + a4 * 8 - 8));\n
        }\n
        else if (v8 >= v11)\n
        {\n
            a0 += v11 * 8;\n
            v9 = a4 - v11;\n
        }\n
    }\n
}\n
", "4217123:sub_405923": null, "4217231:sub_40598f": null, "4217232:cgc_ctf_get_ranks": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_4 *field_10;\n
    char padding_18[32];\n
    struct struct_5 *field_38;\n
    struct struct_4 *field_40;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned int field_70;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_0 *field_0;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    struct struct_2 *field_0;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[384];\n
    unsigned int field_180;\n
    unsigned int field_184;\n
} struct_2;\n
\n
long long cgc_ctf_get_ranks(struct_3 *a0, struct struct_1 **a1, unsigned long long *a2)\n
{\n
    struct struct_1 **v0;  // [bp-0x40]\n
    unsigned long long *v1;  // [bp-0x38]\n
    struct_3 *v4;  // r13\n
    struct struct_0 **v5;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long v8;  // rsi\n
    struct struct_0 **v9;  // rdx\n
    unsigned long v10;  // rsi\n
    unsigned long v11;  // rcx, Other Possible Types: unsigned long long\n
    struct struct_2 **v12;  // r14, Other Possible Types: unsigned long\n
    struct struct_0 **v13;  // rdx, Other Possible Types: void*, unsigned long\n
    unsigned int v14[98];  // rbx\n
    struct struct_0 **v15;  // r15, Other Possible Types: unsigned long\n
    struct_0 *v16;  // rbp\n
    unsigned long long v17;  // r14\n
    unsigned long long *v18;  // rdx\n
    struct struct_1 **v19;  // rcx\n
    void* v20;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    struct struct_0 **v21;  // rax\n
    struct struct_0 **v22;  // r13\n
    unsigned long long v23;  // r8\n
    struct struct_0 **v24;  // rdx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v25;  // rax, Other Possible Types: unsigned long long\n
    struct struct_0 **v26;  // r10\n
    unsigned long long v27;  // rdi\n
    unsigned long v28;  // rbx\n
    struct_0 *v29;  // rcx\n
    unsigned long long v30;  // rbx\n
    unsigned long long v31;  // rdi\n
    struct struct_0 **v32;  // r11\n
    unsigned long long v33;  // rdi\n
    struct_0 *v34;  // rcx\n
    unsigned long v35;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v36;  // rbx\n
    unsigned long long v37;  // rbx\n
    unsigned long long v38;  // rdi\n
    struct struct_0 **v39;  // rsi, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v40;  // r10, Other Possible Types: unsigned long\n
    unsigned long long v41;  // r10, Other Possible Types: unsigned long\n
    struct struct_0 **v42;  // rsi, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v43;  // rax, Other Possible Types: unsigned long long\n
    struct struct_0 **v44;  // r11\n
    unsigned long long v45;  // rdi\n
    unsigned long v46;  // rbx\n
    struct_0 *v47;  // rcx\n
    unsigned long long v48;  // rbx\n
    unsigned long long v49;  // rdi\n
    unsigned long long v50;  // r10, Other Possible Types: unsigned long\n
    struct struct_0 **v51;  // rsi, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v52;  // rax, Other Possible Types: unsigned long long\n
    struct struct_0 **v53;  // r11\n
    unsigned long long v54;  // rdi\n
    unsigned long v55;  // rbx\n
    struct_0 *v56;  // rcx\n
    unsigned long long v57;  // rbx\n
    unsigned long long v58;  // rdi\n
    unsigned long long v59;  // r8, Other Possible Types: unsigned long\n
    unsigned long v60;  // rdx, Other Possible Types: unsigned long long\n
    struct struct_0 **v61;  // r10\n
    unsigned long v62;  // rdi\n
    unsigned long v63;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v64;  // rbp\n
    unsigned long long v65;  // rdi\n
    struct struct_0 **v66;  // r9, Other Possible Types: unsigned long\n
    struct_0 *v67;  // rax\n
    unsigned long long v68;  // rax\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        v1 = a2;\n
        v0 = a1;\n
        v5 = a0->field_10;\n
        if (v5)\n
        {\n
            v6 = *((a0 + 64));\n
            v7 = v5 & 7;\n
            if (v5 + 1 < 7)\n
            {\n
                v8 = 0;\n
            }\n
            else\n
            {\n
                v8 = 0;\n
                do\n
                {\n
                    v6[v8]->field_70 = 0;\n
                    v6[1 + v8]->field_70 = 0;\n
                    v6[2 + v8]->field_70 = 0;\n
                    v6[3 + v8]->field_70 = 0;\n
                    v6[4 + v8]->field_70 = 0;\n
                    v6[5 + v8]->field_70 = 0;\n
                    v6[6 + v8]->field_70 = 0;\n
                    v6[7 + v8]->field_70 = 0;\n
                    v8 += 8;\n
                } while ((v5 & -8) != v8);\n
            }\n
            if (v7)\n
            {\n
                v9 = &v6[v8];\n
                v10 = 0;\n
                do\n
                {\n
                    v9[v10]->field_70 = 0;\n
                    v10 += 1;\n
                } while (v7 != v10);\n
            }\n
        }\n
        v11 = *((a0 + 8));\n
        if (v11)\n
        {\n
            v12 = 0;\n
            v13 = v5;\n
            do\n
            {\n
                v14 = *((*((a0 + 56)) + v12 * 8));\n
                if (v14[97])\n
                {\n
                    if (!v13)\n
                    {\n
                        v13 = 0;\n
                    }\n
                    else\n
                    {\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v16 = *((*((a0 + 64)) + v15 * 8));\n
                            a0 += 80;\n
                            if (cgc_flg_team_did_solve(a0, v16, v14))\n
                                v16->field_70 = v16->field_70 + v14[96];\n
                            v15 += 1;\n
                            v5 = v4->field_10;\n
                        } while (v5 > v15);\n
                        v11 = v4->field_8;\n
                        v13 = v5;\n
                    }\n
                }\n
                v12 += 1;\n
            } while (v11 > v12);\n
        }\n
        v17 = (v5 < 5 ? 5 : v5);\n
        v18 = v1;\n
        v19 = v0;\n
        *(v19) = 0;\n
        *(v18) = 0;\n
        if (!v17)\n
            return 0;\n
        v20 = *(v18) * 5 - 5;\n
        if (*((a0 + 16)) <= v20)\n
            v20 = 0;\n
        *(v18) = v20;\n
        *(v19) = cgc_malloc(v17 * 8);\n
        v21 = cgc_malloc(v4->field_10 * 8);\n
        cgc_memcpy(v21, v4->field_40, v4->field_10 * 8);\n
        v66 = v4->field_10;\n
        v22 = v21;\n
        v23 = v20;\n
        if (v66 > v20)\n
        {\n
            v24 = v21;\n
            v25 = v66;\n
            while (true)\n
            {\n
                v26 = v25;\n
                v27 = v25 - 1;\n
                if (v25 == 1)\n
                {\n
                    v25 = 0;\n
                }\n
                else\n
                {\n
                    v28 = 0;\n
                    v25 = 0;\n
                    do\n
                    {\n
                        v29 = v24[v28];\n
                        if (v29->field_70 >= *((*((-8 + v24 + 0x8 * v26)) + 112)))\n
                        {\n
                            v24[v28] = v24[v25];\n
                            v24[v25] = v29;\n
                            v25 = v25 + 1;\n
                        }\n
                        v28 += 1;\n
                    } while (v27 != v28);\n
                }\n
                v30 = *((v24 + v26 * 8 - 8));\n
                *((v24 + v26 * 8 - 8)) = *((v24 + v25 * 8));\n
                *((v24 + v25 * 8)) = v30;\n
                v31 = v20 - v25;\n
                if (v20 == v25)\n
                    break;\n
                if (v20 < v25)\n
                    continue;\n
                v24 += v25 * 8;\n
                v25 = v26 - v25;\n
                v20 = v31;\n
            }\n
            *(v0)->field_0 = v30;\n
            v40 = v23 + 1;\n
            if (v66 > v40 && v17 >= 2)\n
            {\n
                v39 = v22;\n
                v35 = v66;\n
                while (true)\n
                {\n
                    v32 = v35;\n
                    v33 = v35 - 1;\n
                    if (v35 == 1)\n
                    {\n
                        v35 = 0;\n
                    }\n
                    else\n
                    {\n
                        v36 = 0;\n
                        v35 = 0;\n
                        do\n
                        {\n
                            v34 = v39[v36];\n
                            if (v34->field_70 >= *((*((-8 + v39 + 0x8 * v32)) + 112)))\n
                            {\n
                                v39[v36] = v39[v35];\n
                                v39[v35] = v34;\n
                                v35 = v35 + 1;\n
                            }\n
                            v36 += 1;\n
                        } while (v33 != v36);\n
                    }\n
                    v37 = *((v39 + v32 * 8 - 8));\n
                    *((v39 + v32 * 8 - 8)) = *((v39 + v35 * 8));\n
                    *((v39 + v35 * 8)) = v37;\n
                    v38 = v40 - v35;\n
                    if (v40 == v35)\n
                        break;\n
                    if (v40 < v35)\n
                        continue;\n
                    v39 += v35 * 8;\n
                    v35 = v32 - v35;\n
                    v40 = v38;\n
                }\n
                *(v0)->field_8 = v37;\n
                v41 = v23 + 2;\n
                if (v66 > v41 && v17 >= 3)\n
                {\n
                    v42 = v22;\n
                    v43 = v66;\n
                    while (true)\n
                    {\n
                        v44 = v43;\n
                        v45 = v43 - 1;\n
                        if (v43 == 1)\n
                        {\n
                            v43 = 0;\n
                        }\n
                        else\n
                        {\n
                            v46 = 0;\n
                            v43 = 0;\n
                            do\n
                            {\n
                                v47 = v42[v46];\n
                                if (v47->field_70 >= *((*((-8 + v42 + 0x8 * v44)) + 112)))\n
                                {\n
                                    v42[v46] = v42[v43];\n
                                    v42[v43] = v47;\n
                                    v43 = v43 + 1;\n
                                }\n
                                v46 += 1;\n
                            } while (v45 != v46);\n
                        }\n
                        v48 = *((v42 + v44 * 8 - 8));\n
                        *((v42 + v44 * 8 - 8)) = *((v42 + v43 * 8));\n
                        *((v42 + v43 * 8)) = v48;\n
                        v49 = v41 - v43;\n
                        if (v41 == v43)\n
                            break;\n
                        if (v41 < v43)\n
                            continue;\n
                        v42 += v43 * 8;\n
                        v43 = v44 - v43;\n
                        v41 = v49;\n
                    }\n
                    *(v0)->field_10 = v48;\n
                    v50 = v23 + 3;\n
                    if (v66 > v50 && v17 >= 4)\n
                    {\n
                        v51 = v22;\n
                        v52 = v66;\n
                        while (true)\n
                        {\n
                            v53 = v52;\n
                            v54 = v52 - 1;\n
                            if (v52 == 1)\n
                            {\n
                                v52 = 0;\n
                            }\n
                            else\n
                            {\n
                                v55 = 0;\n
                                v52 = 0;\n
                                do\n
                                {\n
                                    v56 = v51[v55];\n
                                    if (v56->field_70 >= *((*((-8 + v51 + 0x8 * v53)) + 112)))\n
                                    {\n
                                        v51[v55] = v51[v52];\n
                                        v51[v52] = v56;\n
                                        v52 = v52 + 1;\n
                                    }\n
                                    v55 += 1;\n
                                } while (v54 != v55);\n
                            }\n
                            v57 = *((v51 + v53 * 8 - 8));\n
                            *((v51 + v53 * 8 - 8)) = *((v51 + v52 * 8));\n
                            *((v51 + v52 * 8)) = v57;\n
                            v58 = v50 - v52;\n
                            if (v50 == v52)\n
                                break;\n
                            if (v50 < v52)\n
                                continue;\n
                            v51 += v52 * 8;\n
                            v52 = v53 - v52;\n
                            v50 = v58;\n
                        }\n
                        *(v0)->field_18 = v57;\n
                        v59 = v23 + 4;\n
                        if (v66 > v59 && v17 >= 5)\n
                        {\n
                            v60 = v22;\n
                            while (true)\n
                            {\n
                                v61 = v66;\n
                                if (v66 == 1)\n
                                {\n
                                    v63 = 0;\n
                                }\n
                                else\n
                                {\n
                                    v62 = 0;\n
                                    v63 = 0;\n
                                    do\n
                                    {\n
                                        v64 = *((v60 + v62 * 8));\n
                                        if (v64->field_70 >= *((*((v60 + (v66 << 3) - 8)) + 112)))\n
                                        {\n
                                            *((v60 + v62 * 8)) = *((v60 + v63 * 8));\n
                                            *((v60 + v63 * 8)) = v64;\n
                                            v63 = v63 + 1;\n
                                        }\n
                                        v62 += 1;\n
                                    } while (v66 - 1 != v62);\n
                                }\n
                                v65 = *((v60 + v66 * 8 - 8));\n
                                v66 = v63;\n
                                v67 = *((v60 + v63 * 8));\n
                                *((v60 + v61 * 8 - 8)) = v67;\n
                                *((v60 + v66 * 8)) = v65;\n
                                v68 = v59 - v66;\n
                                if (v59 == v66)\n
                                    break;\n
                                if (v59 >= v66)\n
                                {\n
                                    v60 += v66 * 8;\n
                                    v66 = v61 - v66;\n
                                    v59 = v68;\n
                                }\n
                            }\n
                            *(v0)->field_20 = v65;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        cgc_free(v22);\n
        return 0;\n
    }\n
}\n
", "4217517:sub_405aad": null, "4217563:sub_405adb": null, "4217618:sub_405b12": null, "4217810:sub_405bd2": null, "4217869:sub_405c0d": null, "4217986:sub_405c82": null, "4218045:sub_405cbd": null, "4218162:sub_405d32": null, "4218221:sub_405d6d": null, "4218338:sub_405de2": null, "4218397:sub_405e1d": null, "4218514:sub_405e92": null, "4218659:sub_405f23": null, "4218672:cgc_ctf_get_team": "long long cgc_ctf_get_team(unsigned long long a0[9], unsigned long long *a1, unsigned long long *a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = 1;\n
    if (a0 && a1)\n
    {\n
        v1 = 7;\n
        if (a0[2] > a2)\n
        {\n
            *(a1) = *((a0[8] + a2 * 8));\n
            v1 = 0;\n
        }\n
    }\n
    return v1;\n
}\n
", "4218712:sub_405f58": null, "4218720:cgc_ctf_get_chal": "long long cgc_ctf_get_chal(unsigned long long a0[8], unsigned long long *a1, unsigned long long *a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = 1;\n
    if (a0 && a1)\n
    {\n
        v1 = 6;\n
        if (a0[1] > a2)\n
        {\n
            *(a1) = *((a0[7] + a2 * 8));\n
            v1 = 0;\n
        }\n
    }\n
    return v1;\n
}\n
", "4218760:sub_405f88": null, "4218768:cgc_error_to_string": "extern char err_msgs;\n
\n
long long cgc_error_to_string(unsigned long long *a0)\n
{\n
    if (a0 <= 15)\n
        return *((&err_msgs + 0x8 * a0));\n
    return \"Unknown error.\";\n
}\n
", "4218795:sub_405fab": null, "4218800:cgc_flg_init": "typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_flg_init(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0->field_0 = 0;\n
    a0->field_10 = 16;\n
    a0->field_18 = cgc_malloc(128);\n
    a0->field_20 = a1;\n
    a0->field_28 = a2;\n
    return 0;\n
}\n
", "4218858:sub_405fea": null, "4218864:cgc_flg_is_duplicate": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    struct struct_3 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    char *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_flg_is_duplicate(struct_2 *a0, unsigned long a1, char *a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // rbx, Other Possible Types: unsigned long\n
    struct_1 *v5;  // rcx\n
\n
    v0 = v2;\n
    v3 = a0->field_0;\n
    if (v3)\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = a0->field_18[v4].field_0;\n
            if (v5->field_0 == a1)\n
            {\n
                if (cgc_strcmp(v5->field_10, a2))\n
                    v3 = a0->field_0;\n
                else\n
                    return 1;\n
            }\n
            v4 += 1;\n
        } while (v3 > v4);\n
    }\n
    return 0;\n
}\n
", "4218893:sub_40600d": null, "4218962:sub_406052": null, "4218976:cgc_flg_add_submit": "typedef struct struct_5 {\n
    struct struct_6 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
    struct struct_6 *field_18;\n
    struct struct_7 *field_20;\n
    struct struct_8 *field_28;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    char *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[388];\n
    unsigned int field_184;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    struct struct_0 *field_0;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    struct struct_4 *field_0;\n
} struct_7;\n
\n
typedef struct struct_8 {\n
    unsigned long long field_0;\n
} struct_8;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[400];\n
    char *field_190;\n
} struct_4;\n
\n
long long cgc_flg_add_submit(struct_5 *a0, unsigned long a1, char *a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    void* v3;  // r15, Other Possible Types: unsigned long long, unsigned long\n
    struct struct_0 **v4;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v5;  // rcx\n
    struct struct_0 **v6;  // rbp, Other Possible Types: unsigned long\n
    struct_3 *v7;  // r12\n
    unsigned long long *v8;  // rbp, Other Possible Types: unsigned long\n
    struct_2 *v9;  // rax\n
    struct struct_0 **v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rsi\n
    unsigned long v12;  // rax\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v4 = a0->field_0;\n
        if (v4)\n
        {\n
            v6 = 0;\n
            do\n
            {\n
                v5 = a0->field_18[v6].field_0;\n
                if (v5->field_0 == a1)\n
                {\n
                    if (cgc_strcmp(v5->field_10, a2))\n
                        v4 = a0->field_0;\n
                    else\n
                        return 9;\n
                }\n
                v6 += 1;\n
            } while (v4 > v6);\n
        }\n
        v7 = cgc_malloc(40);\n
        v7->field_0 = a1;\n
        v3 = 10;\n
        if (a0->field_28->field_0)\n
        {\n
            v8 = 0;\n
            do\n
            {\n
                if (!cgc_strcmp(a0->field_20[v8].field_0->field_190, a2))\n
                {\n
                    v7->field_8 = &a0->field_20[v8].field_0->padding_0[0];\n
                    v3 = 0;\n
                    break;\n
                }\n
                v8 += 1;\n
            } while (a0->field_28->field_0 > v8);\n
        }\n
        v7->field_18 = v7->field_8;\n
        v7->field_1c = a0->field_0;\n
        v7->field_10 = cgc_strdup(a2);\n
        v9 = v7->field_8;\n
        if (v9 && v9->field_184 == 3)\n
            v9->field_184 = 1;\n
        v10 = a0->field_0;\n
        v11 = a0->field_10;\n
        if (v11 != v10)\n
        {\n
            v12 = a0->field_18;\n
        }\n
        else\n
        {\n
            v12 = cgc_realloc(a0->field_18, v11 * 16);\n
            a0->field_18 = v12;\n
            a0->field_10 = a0->field_10 * 2;\n
            v10 = a0->field_0;\n
        }\n
        a0->field_0 = v10 + 1;\n
        *((v12 + v10 * 8)) = v7;\n
        return v3;\n
    }\n
}\n
", "4219041:sub_4060a1": null, "4219356:sub_4061dc": null, "4219360:cgc_flg_find_chal": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_2 *field_20;\n
    struct struct_3 *field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[400];\n
    struct struct_1 *field_190;\n
} struct_0;\n
\n
long long cgc_flg_find_chal(struct_1 *a0, unsigned long long *a1, char *a2)\n
{\n
    struct_1 *v2;  // rbx\n
    struct struct_4 **v3;  // rbp, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        if (!a0->field_28->field_0)\n
            return 6;\n
        v3 = 0;\n
        while (true)\n
        {\n
            a0 = *((*((*((a0 + 32)) + v3 * 8)) + 400));\n
            if (!cgc_strcmp(a0, a2))\n
            {\n
                *(a1) = v2->field_20[v3].field_0;\n
                return 0;\n
            }\n
            v3 += 1;\n
            if (v2->field_28->field_0 <= v3)\n
                return 6;\n
        }\n
    }\n
}\n
", "4219494:sub_406266": null, "4219504:cgc_flg_get_solves": "typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    struct struct_3 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
long long cgc_flg_get_solves(struct_2 *a0, struct struct_1 **a1, unsigned long a2, unsigned long long *a3)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    int tmp_2;  // tmp #2\n
    unsigned long v2;  // rax\n
    struct struct_1 **v4;  // r14\n
    unsigned long long *v5;  // r15\n
    unsigned long long v6;  // r12\n
    struct_2 *v7;  // rbx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rcx\n
    void* v10;  // rdi, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    struct_0 *v12;  // rsi\n
    struct struct_0 **v13;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v14;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v15;  // r9\n
    unsigned long long *v16;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
    struct struct_0 **v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long *v18;  // rdi, Other Possible Types: unsigned long long, unsigned long\n
    struct_4 *v19;  // rdi\n
    struct_0 *v20;  // rdx\n
\n
    v0 = v2;\n
    if (!a0)\n
        return 1;\n
    v4 = a1;\n
    if (!a1)\n
        return 1;\n
    v5 = a3;\n
    if (!a3)\n
        return 1;\n
    v6 = a2;\n
    v7 = a0;\n
    if (!a2)\n
    {\n
        v11 = a0->field_0;\n
        if (v11 < v11)\n
            v11 = *(a3);\n
        *(a3) = v11;\n
        if (v11)\n
        {\n
            *(a1) = cgc_malloc(v11 * 8);\n
            v14 = v7->field_0;\n
            if (!v14)\n
                goto LABEL_4063ea;\n
            goto LABEL_406392;\n
        }\n
        else\n
        {\n
            *(a1) = 0;\n
            v14 = v7->field_0;\n
            if (!v14)\n
            {\n
LABEL_4063ea:\n
                v16 = 0;\n
            }\n
            else\n
            {\n
LABEL_406392:\n
                v16 = 0;\n
                while (v16 < *(v5))\n
                {\n
                    v19 = v7->field_18[1 + v14].field_0;\n
                    if (v19->field_18)\n
                    {\n
                        (*(a1))[v16].field_0 = v19;\n
                        v16 += 1;\n
                    }\n
                    tmp_2 = v14;\n
                    v14 -= 1;\n
                    if (tmp_2 == 1)\n
                        break;\n
                }\n
            }\n
        }\n
        *(v5) = v16;\n
        return 0;\n
    }\n
    else\n
    {\n
        v8 = a0->field_0;\n
        if (!v8)\n
        {\n
            *(a3) = 0;\n
        }\n
        else\n
        {\n
            v9 = *(a3);\n
            v13 = 0;\n
            v10 = 0;\n
            while (v10 < v9)\n
            {\n
                v12 = v7->field_18[v13].field_0;\n
                if (v12->field_8 == v6)\n
                    v10 = v10 - -1 - (v12->field_18 < 1);\n
                v13 += 1;\n
                if (v8 == v13)\n
                    break;\n
            }\n
            *(v5) = v10;\n
            if (v10)\n
            {\n
                *(v4) = cgc_malloc(v10 * 8);\n
                v15 = v7->field_0;\n
                if (v15)\n
                {\n
                    v17 = 0;\n
                    v18 = 0;\n
                    while (true)\n
                    {\n
                        if (v18 >= *(v5))\n
                            return 0;\n
                        v20 = v7->field_18[v17].field_0;\n
                        if (v20->field_8 == v6 && v20->field_18)\n
                        {\n
                            (*(v4))[v18].field_0 = v20;\n
                            v18 += 1;\n
                        }\n
                        v17 += 1;\n
                        if (v15 == v17)\n
                            return 0;\n
                    }\n
                }\n
                goto LABEL_4063d5;\n
            }\n
        }\n
        *(v4) = 0;\n
LABEL_4063d5:\n
        return 0;\n
    }\n
}\n
", "4219586:sub_4062c2": null, "4219685:sub_406325": null, "4219801:sub_406399": null, "4219899:sub_4063fb": null, "4219904:cgc_flg_team_did_solve": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    struct struct_2 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long cgc_flg_team_did_solve(struct_1 *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long long v1;  // r8\n
    unsigned long v3;  // rcx\n
    struct_0 *v4;  // rdi\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (!a2)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v1 = a0->field_0;\n
        if (!v1)\n
            return 0;\n
        v3 = 0;\n
        while (true)\n
        {\n
            v4 = a0->field_18[v3].field_0;\n
            if (v4->field_18 && v4->field_0 == a1 && v4->field_8 == a2)\n
                return 1;\n
            v3 += 1;\n
            if (v1 == v3)\n
                return 0;\n
        }\n
    }\n
}\n
", "4219940:sub_406424": null, "4219986:sub_406452": null, "4220000:cgc_prng": "extern unsigned int r;\n
\n
long long cgc_prng()\n
{\n
    r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
    return r;\n
}\n
", "4220038:sub_406486": null, "4220048:cgc_random_string": "extern unsigned int r;\n
\n
long long cgc_random_string(unsigned long a0, unsigned long a1)\n
{\n
    char *v1;  // r10, Other Possible Types: unsigned long\n
    unsigned long long v2;  // rdx\n
\n
    if (!a1)\n
        return *((4232672 + v2 + -64 * v2 + v2 + r));\n
    v1 = 0;\n
    do\n
    {\n
        r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
        v2 = (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 33) * 9520900167075897609 >> 64 >> 4;\n
        *((a0 + v1)) = *((4232672 + v2 + -64 * v2 + v2 + r));\n
        v1 += 1;\n
    } while (a1 != v1);\n
    return *((4232672 + v2 + -64 * v2 + v2 + r));\n
}\n
", "4220174:sub_40650e": null, "4220176:cgc_print_main_menu": "long long cgc_print_main_menu()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_printf(\"\\n
=== Menu ===================\\n
\");\n
    cgc_printf(\"1. Register User\\n
\");\n
    cgc_printf(\"2. Login User\\n
\");\n
    cgc_printf(\"3. Quit\\n
\");\n
    return cgc_printf(\"> \");\n
}\n
", "4220248:sub_406558": null, "4220256:cgc_is_alphanum": "long long cgc_is_alphanum(char *a0)\n
{\n
    unsigned long v2;  // rbp\n
\n
    if (cgc_strlen(a0) == 1)\n
        return 1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!cgc_isalnum(a0[v2]))\n
            return 0;\n
        v2 += 1;\n
        if (cgc_strlen(a0) - 1 <= v2)\n
            return 1;\n
    }\n
}\n
", "4220335:sub_4065af": null, "4220336:cgc_handle_register_user": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[40];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
extern char g_409a65;\n
extern unsigned int r;\n
\n
long long cgc_handle_register_user(struct_0 *a0)\n
{\n
    char v0[33];  // [bp-0x1c8], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x1c0]\n
    char v2;  // [bp-0x1b8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long long v5;  // rax\n
    unsigned long v6;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rbx\n
    unsigned long v8;  // rbx\n
    unsigned int v9;  // r14d\n
    unsigned long long v10;  // rax\n
    unsigned int v11;  // ebx\n
    unsigned long long *v13;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v14;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long *v15;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v16;  // rsi\n
    unsigned long long v17;  // rdx\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // rax\n
    unsigned long v20;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v21;  // rdi\n
    char v22[33];  // rdi\n
\n
    v1 = 0;\n
    *(&v0[0]) = 0;\n
    v5 = cgc_user_new(&v1);\n
    if (v5)\n
    {\n
        v6 = v5;\n
        v9 = 0;\n
        goto LABEL_40692f;\n
    }\n
    v9 = 0;\n
    cgc_printf(\"\\n
=== User Creation ===================\\n
\");\n
    cgc_printf(\"Nickname: \");\n
    cgc_fflush(cgc_stdout);\n
    if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) <= 0)\n
    {\n
LABEL_40692a:\n
        v6 = 15;\n
        goto LABEL_40692f;\n
    }\n
    if (cgc_strlen(&v2) != 1)\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            if (!cgc_isalnum((&v2)[v7]))\n
                goto LABEL_4067c7;\n
            v7 += 1;\n
        } while (cgc_strlen(&v2) - 1 > v7);\n
    }\n
    v6 = cgc_user_set_nick(v1, &v2);\n
    if (!(!v6))\n
        goto LABEL_40692f;\n
    v9 = 0;\n
    cgc_printf(\"Password: \");\n
    cgc_fflush(cgc_stdout);\n
    if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) <= 0)\n
        goto LABEL_40692a;\n
    if (cgc_strlen(&v2) != 1)\n
    {\n
        v8 = 0;\n
    }\n
    else\n
    {\n
LABEL_406717:\n
        v6 = cgc_user_set_pass(v1, &v2);\n
        if (!(!v6))\n
            goto LABEL_40692f;\n
        v9 = 0;\n
        cgc_printf(\"Team token: \");\n
        cgc_fflush(cgc_stdout);\n
        if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) < 0)\n
        {\n
            v6 = 0;\n
            goto LABEL_40692f;\n
        }\n
        v10 = cgc_strcmp(&v2, &g_409a65);\n
        v11 = v10;\n
        if (v10)\n
        {\n
            v6 = 7;\n
            if (!a0->field_10)\n
                goto LABEL_40692f;\n
            v13 = 0;\n
            do\n
            {\n
                if (!cgc_memcmp(*(&a0->field_40[2 * v13]), &v2, 32))\n
                {\n
                    v15 = v13;\n
                    v0 = *(&a0->field_40[2 * v13]);\n
                    v14 = a0->field_10;\n
                    goto LABEL_40698d;\n
                }\n
                v13 += 1;\n
                v14 = a0->field_10;\n
            } while (v14 > v13);\n
            v15 = v13;\n
LABEL_40698d:\n
            v9 = 0;\n
            v11 = v10;\n
            if (v14 == v15)\n
                goto LABEL_40692f;\n
            goto LABEL_406998;\n
        }\n
        else\n
        {\n
            v6 = cgc_team_new(v0);\n
            if (!(!v6))\n
                goto LABEL_40692f;\n
            v9 = 0;\n
            cgc_printf(\"\\n
=== Team Creation ===================\\n
\");\n
            cgc_printf(\"Team name: \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) > 0)\n
            {\n
                v6 = cgc_team_change_name(v0, &v2);\n
                if (!(!v6))\n
                    goto LABEL_40692f;\n
                v9 = 0;\n
                cgc_printf(\"Shoutout: \");\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_freaduntil(&v3, 128, 10, cgc_stdin) > 0)\n
                {\n
                    v6 = cgc_team_set_shoutout(v0, &v3);\n
                    if (!(!v6))\n
                        goto LABEL_40692f;\n
                    v16 = 0;\n
                    do\n
                    {\n
                        r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
                        v17 = (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 33) * 9520900167075897609 >> 64 >> 4;\n
                        v0[v16] = *((4232672 + v17 + -64 * v17 + v17 + r));\n
                        v16 += 1;\n
                    } while (v16 != 32);\n
                    v0[32] = 0;\n
                    v9 = 1;\n
LABEL_406998:\n
                    v18 = cgc_ctf_add_user(a0, v1);\n
                    if (!v18)\n
                    {\n
                        if (!v11)\n
                        {\n
                            v19 = cgc_ctf_add_team(a0, v0);\n
                            if (v19)\n
                            {\n
                                v6 = v19;\n
                                v9 = 1;\n
                                goto LABEL_40692f;\n
                            }\n
                        }\n
                        v18 = cgc_team_add_member(v0, v1);\n
                        if (!v18)\n
                        {\n
                            v6 = cgc_user_set_team(v1, v0, 0);\n
                            if (!v6)\n
                            {\n
                                v20 = cgc_printf(\"[INFO] Successfully registered.\\n
\");\n
                                if (!v11)\n
                                {\n
                                    v20 = cgc_printf(\"[INFO] Team code: ;s\\n
\");\n
                                    return v20;\n
                                }\n
                                return v20;\n
                            }\n
LABEL_40692f:\n
                            cgc_error_to_string(v6);\n
                            v20 = cgc_printf(\"[ERROR] ;s\\n
\");\n
                            v21 = v1;\n
                            if (v21)\n
                                v20 = cgc_free(v21);\n
                            if (!v9)\n
                                return v20;\n
                            v22 = v0;\n
                            if (v22)\n
                                v20 = cgc_free(v22);\n
                        }\n
                    }\n
                    v6 = v18;\n
                    goto LABEL_40692f;\n
                }\n
            }\n
        }\n
    }\n
    while (cgc_isalnum((&v2)[v8]))\n
    {\n
        v8 += 1;\n
        if (cgc_strlen(&v2) - 1 <= v8)\n
            goto LABEL_406717;\n
    }\n
LABEL_4067c7:\n
    v9 = 0;\n
    v6 = 15;\n
    goto LABEL_40692f;\n
}\n
", "4221482:sub_406a2a": null, "4221488:cgc_handle_login_user": "extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long cgc_handle_login_user(unsigned long a0)\n
{\n
    char v0;  // [bp-0xb8]\n
    char v1;  // [bp-0x78]\n
    void* v3;  // r14\n
    unsigned long v4;  // r15, Other Possible Types: unsigned long long\n
    unsigned long v5;  // rbp\n
    unsigned long v6;  // rbp\n
\n
    v3 = a0;\n
    cgc_printf(\"\\n
=== Login ===================\\n
\");\n
    cgc_printf(\"Nick: \");\n
    cgc_fflush(cgc_stdout);\n
    v4 = 15;\n
    if (cgc_freaduntil(&v0, 64, 10, cgc_stdin) > 0)\n
    {\n
        if (cgc_strlen(&v0) == 1)\n
        {\n
LABEL_406ae6:\n
            cgc_printf(\"Password: \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(&v1, 64, 10, cgc_stdin) > 0)\n
            {\n
                if (cgc_strlen(&v1) == 1)\n
                {\n
LABEL_406b53:\n
                    v4 = cgc_ctf_auth_user(v3, v3 + 128, &v0, &v1);\n
                    if (!v4)\n
                        return cgc_printf(\"[INFO] Successfully logged in as ;s.\\n
\");\n
                }\n
                else\n
                {\n
                    v6 = 0;\n
                    while (cgc_isalnum((&v1)[v6]))\n
                    {\n
                        v6 += 1;\n
                        if (cgc_strlen(&v1) - 1 <= v6)\n
                            goto LABEL_406b53;\n
                    }\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            while (cgc_isalnum((&v0)[v5]))\n
            {\n
                v5 += 1;\n
                if (cgc_strlen(&v0) - 1 <= v5)\n
                    goto LABEL_406ae6;\n
            }\n
        }\n
    }\n
    cgc_error_to_string(v4);\n
    return cgc_printf(\"[ERROR] ;s\\n
\");\n
}\n
", "4221864:sub_406ba8": null, "4221872:cgc_print_ctf_ticker": "long long cgc_print_ctf_ticker(void* a0)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x20]\n
    void* v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rdi\n
\n
    v0 = 1;\n
    v2 = 0;\n
    cgc_ctf_get_ranks(a0, &v2, &v0);\n
    cgc_free(v2);\n
    cgc_printf(\"\\n
================================\\n
\");\n
    cgc_printf(\"| [;s] - ;d\\n
\");\n
    cgc_printf(\"================================\\n
\");\n
    v1 = 0;\n
    v0 = 5;\n
    cgc_ctf_get_solves(a0, &v1, &v0);\n
    if (!v0)\n
    {\n
        cgc_printf(\"No solves yet.\\n
\");\n
        if (!v0)\n
            goto LABEL_406caf;\n
    }\n
    v5 = 0;\n
    do\n
    {\n
        cgc_printf(\"| ;s solved ;s (;d pts)\\n
\");\n
        v5 += 1;\n
    } while (v0 > v5);\n
LABEL_406caf:\n
    v6 = v1;\n
    if (v6)\n
        cgc_free(v6);\n
    return cgc_printf(\"================================\\n
\");\n
}\n
", "4222166:sub_406cd6": null, "4222176:cgc_print_ctf_menu": "long long cgc_print_ctf_menu(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_print_ctf_ticker(a0);\n
    cgc_printf(\"\\n
=== CTF Menu ===================\\n
\");\n
    cgc_printf(\"1. View challenge list\\n
\");\n
    cgc_printf(\"2. View challenge detail\\n
\");\n
    cgc_printf(\"3. View ranking\\n
\");\n
    cgc_printf(\"4. View team profile\\n
\");\n
    cgc_printf(\"5. Submit flag\\n
\");\n
    cgc_printf(\"6. Logout\\n
\");\n
    return cgc_printf(\"> \");\n
}\n
", "4222295:sub_406d57": null, "4222304:cgc_print_challenge": "typedef struct struct_1 {\n
    char padding_0[128];\n
    struct struct_0 *field_80;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
long long cgc_print_challenge(struct_1 *a0, unsigned int a1[99], unsigned long a2)\n
{\n
    unsigned long long v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30]\n
    void* v3;  // r14\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    void* v6;  // rbp, Other Possible Types: unsigned long\n
\n
    cgc_chal_cat_to_string(a1[98]);\n
    v3 = &a0->padding_0[80];\n
    cgc_chal_status_to_string((!cgc_flg_team_did_solve(v3, *(&a0->field_80->field_30), a1) ? 2 : a1[97]));\n
    v5 = cgc_printf(\"[;s] [;d pts] ;s - ;s\\n
\");\n
    if (!a2)\n
        return v5;\n
    if (!a1[97])\n
        cgc_printf(\"Hidden.\\n
\");\n
    else\n
        cgc_printf(\";s\\n
\");\n
    v1 = 0;\n
    v0 = 3;\n
    v5 = cgc_flg_get_solves(v3, &v1, a1, &v0);\n
    if (!v0)\n
        return v5;\n
    cgc_printf(\"\\n
Top Solvers\\n
\");\n
    cgc_printf(\"===========\\n
\");\n
    if (v0)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v6 += 1;\n
            cgc_printf(\";d. ;s\\n
\");\n
        } while (v0 > v6);\n
    }\n
    v5 = cgc_free(v1);\n
    return v5;\n
}\n
", "4222621:sub_406e9d": null, "4222624:cgc_handle_view_challenge_list": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[40];\n
    struct struct_3 *field_38;\n
    char padding_40[64];\n
    struct struct_1 *field_80;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[388];\n
    unsigned int field_184;\n
    unsigned int field_188;\n
} struct_0;\n
\n
long long cgc_handle_view_challenge_list(struct_2 *a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v4[99];  // rbp\n
    unsigned long v5;  // r12, Other Possible Types: unsigned long long\n
    struct struct_0 **v6;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a0->field_8)\n
        return cgc_printf(\"[INFO] No challenges are available.\\n
\");\n
    v3 = cgc_printf(\"\\n
=== Challenge list ===================\\n
\");\n
    if (!a0->field_8)\n
        return v3;\n
    v6 = 0;\n
    do\n
    {\n
        cgc_printf(\";d. \");\n
        v4 = a0->field_38[v6].field_0;\n
        cgc_chal_cat_to_string(v4[98]);\n
        v5 = v4[97];\n
        if (cgc_flg_team_did_solve(&a0->padding_40[16], *(&a0->field_80->field_30), v4))\n
            v5 = 2;\n
        cgc_chal_status_to_string(v5);\n
        v3 = cgc_printf(\"[;s] [;d pts] ;s - ;s\\n
\");\n
        v6 += 1;\n
    } while (a0->field_8 > v6);\n
    return v3;\n
}\n
", "4222856:sub_406f88": null, "4222864:cgc_handle_view_challenge_detail": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long cgc_handle_view_challenge_detail(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long *v4;  // rax\n
\n
    v3 = cgc_handle_view_challenge_list(a0);\n
    if (!a0->field_8)\n
        return v3;\n
    cgc_printf(\"\\n
Choose idx: \");\n
    cgc_fflush(cgc_stdout);\n
    cgc_freaduntil(&v1, 32, 10, cgc_stdin);\n
    v0 = 0;\n
    v4 = cgc_ctf_get_chal(a0, &v0, cgc_strtoul(&v1, 0, 10));\n
    if (v4)\n
    {\n
        cgc_error_to_string(v4);\n
        v3 = cgc_printf(\"[ERROR] ;s\\n
\");\n
        return v3;\n
    }\n
    cgc_printf(\"\\n
=== Challenge detail ===================\\n
\");\n
    return cgc_print_challenge(a0, v0, 1);\n
}\n
", "4223068:sub_40705c": null, "4223072:cgc_view_ranking_page": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_view_ranking_page(struct_0 *a0, unsigned long a1)\n
{\n
    void* v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v3;  // r15\n
    void* v4;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v3 = (v3 < 5 ? 5 : a0->field_10 + -(a1 * 5) + 5);\n
    v0 = 0;\n
    cgc_ctf_get_ranks(a0, &v0, &v1);\n
    if (!v3)\n
        return cgc_free(v0);\n
    v4 = 0;\n
    do\n
    {\n
        cgc_printf(\";d. ;s (;d pts)\\n
\");\n
        v4 += 1;\n
    } while (v3 != v4);\n
    return cgc_free(v0);\n
}\n
", "4223237:sub_407105": null, "4223248:cgc_handle_view_ranking": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long cgc_handle_view_ranking(struct_0 *a0)\n
{\n
    unsigned long long v0[5];  // [bp-0x80], Other Possible Types: void*\n
    void* v1;  // [bp-0x78]\n
    unsigned long long v2;  // [bp-0x70]\n
    void* v3;  // [bp-0x68]\n
    struct_0 *v4;  // [bp-0x60]\n
    unsigned long long v5;  // [bp-0x58]\n
    unsigned long long v7;  // rcx\n
    unsigned long long v8;  // r12\n
    unsigned long v9;  // rbx\n
    void* v10;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    struct_0 *v12;  // rdi\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
    void* v14;  // rax, Other Possible Types: unsigned long\n
    unsigned long v15;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_printf(\"\\n
=== Ranking ===================\\n
\");\n
    v7 = a0->field_10;\n
    v8 = !(a0->field_10 * 14757395258967641293 <= 3689348814741910323) + (a0->field_10 * 14757395258967641293 >> 64 >> 2);\n
    v5 = 1;\n
    v9 = (v7 < 5 ? 5 : v7);\n
    v0 = 0;\n
    v4 = a0;\n
    cgc_ctf_get_ranks(a0, &v0, &v5);\n
    if (v9)\n
    {\n
        v10 = 0;\n
        do\n
        {\n
            cgc_printf(\";d. ;s (;d pts)\\n
\");\n
            v10 += 1;\n
        } while (v9 != v10);\n
    }\n
    cgc_free(v0);\n
    cgc_printf(\"\\n
=== 1 / ;d ===================\\n
\");\n
    cgc_printf(\"\\n
Page: \");\n
    v3 = cgc_stdout;\n
    cgc_fflush(cgc_stdout);\n
    v2 = cgc_stdin;\n
    if (cgc_freaduntil(&v5, 32, 10, cgc_stdin) >= 0)\n
    {\n
        while (true)\n
        {\n
            v15 = cgc_strcmp(&v5, \"q\");\n
            if (!v15)\n
                return v15;\n
            v11 = cgc_strtoul(&v5, 0, 10);\n
            if (!v11)\n
                break;\n
            if (v11 > v8)\n
                break;\n
            v0[0] = v11;\n
            v12 = v4;\n
            v13 = v12->field_10 + -(v11 * 5) + 5;\n
            if (5 <= v13)\n
                v13 = 5;\n
            v1 = 0;\n
            cgc_ctf_get_ranks(v12, &v1, &v0);\n
            if (v13)\n
            {\n
                v14 = 0;\n
                do\n
                {\n
                    cgc_printf(\";d. ;s (;d pts)\\n
\");\n
                    v14 += 1;\n
                } while (v13 != v14);\n
            }\n
            cgc_free(v1);\n
            cgc_printf(\"\\n
=== ;d / ;d ===================\\n
\");\n
            cgc_printf(\"\\n
Page: \");\n
            cgc_fflush(v3);\n
            if (cgc_freaduntil(&v5, 32, 10, v2) < 0)\n
                break;\n
        }\n
    }\n
    cgc_error_to_string(0xf);\n
    v15 = cgc_printf(\"[ERROR] ;s\\n
\");\n
    return v15;\n
}\n
", "4223578:sub_40725a": null, "4223906:sub_4073a2": null, "4223920:cgc_handle_view_team_profile": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[40];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[88];\n
    unsigned long long field_58;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long cgc_handle_view_team_profile(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x68]\n
    struct struct_2 **v2;  // rbx, Other Possible Types: unsigned long\n
    struct_2 *v3;  // r12\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    void* v5;  // rbx, Other Possible Types: unsigned long\n
\n
    cgc_printf(\"\\n
Team name: \");\n
    cgc_fflush(cgc_stdout);\n
    if (cgc_freaduntil(&v0, 64, 10, cgc_stdin) > 0 && a0->field_10)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            if (!cgc_strcmp(a0->field_40[v2].field_0 + 33, &v0))\n
            {\n
                v3 = a0->field_40[v2].field_0;\n
                if (v3)\n
                {\n
                    cgc_printf(\"\\n
=== Team profile ===================\\n
\");\n
                    cgc_printf(\";s\\n
\");\n
                    cgc_printf(\"Leader: ;s\\n
\");\n
                    cgc_printf(\"Members (;d)\\n
 - \");\n
                    if (!v3->field_58)\n
                        return cgc_printf(\"\\n
Shoutout: ;s\\n
\");\n
                    v5 = 0;\n
                    do\n
                    {\n
                        cgc_printf(\";s\");\n
                        v4 = v3->field_58;\n
                        if (v5 != v4 - 1)\n
                        {\n
                            cgc_printf(\", \");\n
                            v4 = v3->field_58;\n
                        }\n
                        v5 += 1;\n
                    } while (v4 > v5);\n
                }\n
                break;\n
            }\n
            v2 += 1;\n
        } while (a0->field_10 > v2);\n
    }\n
    cgc_error_to_string(0x7);\n
    return cgc_printf(\"[ERROR] ;s\\n
\");\n
}\n
", "4224175:sub_4074af": null, "4224288:cgc_handle_submit_flag": "extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long cgc_handle_submit_flag(unsigned int a0)\n
{\n
    void* v0;  // [bp-0x220]\n
    char v1;  // [bp-0x218]\n
    unsigned long v3;  // rbp, Other Possible Types: unsigned long long\n
\n
    cgc_printf(\"\\n
=== Submit flag ===================\\n
\");\n
    cgc_printf(\"Flag: \");\n
    cgc_fflush(cgc_stdout);\n
    v3 = 10;\n
    if (cgc_freaduntil(&v1, 0x200, 10, cgc_stdin) > 0)\n
    {\n
        v3 = cgc_ctf_submit_flag(a0);\n
        if (!v3)\n
        {\n
            v0 = 0;\n
            cgc_flg_find_chal(a0 + 80, &v0, &v1);\n
            return cgc_printf(\"[INFO] Congrats! You scored ;d points!\\n
\");\n
        }\n
    }\n
    cgc_error_to_string(v3);\n
    return cgc_printf(\"[ERROR] ;s\\n
\");\n
}\n
", "4224513:sub_407601": null, "4224528:cgc_handle_logout_user": "typedef struct struct_0 {\n
    char padding_0[128];\n
    unsigned long long field_80;\n
} struct_0;\n
\n
long long cgc_handle_logout_user(struct_0 *a0)\n
{\n
    a0->field_80 = 0;\n
    return cgc_printf(\"[INFO] Successfully logged out.\\n
\");\n
}\n
", "4224559:sub_40762f": null, "4224560:cgc_handle_quit": "extern void* cgc_stdout;\n
\n
long long cgc_handle_quit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    cgc_printf(\"Bye.\\n
\");\n
    cgc_fflush(cgc_stdout);\n
    return cgc_exit();\n
}\n
", "4224598:sub_407656": null, "4224608:cgc_do_random_action": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    char padding_10[40];\n
    struct struct_2 *field_38;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[31];\n
    char field_20;\n
    char padding_21[159];\n
    char field_c0;\n
    char padding_c1[191];\n
    unsigned int field_180;\n
    unsigned int field_184;\n
    unsigned int field_188;\n
    char padding_18c[4];\n
    struct struct_3 *field_190;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    char field_20;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[388];\n
    unsigned int field_184;\n
} struct_0;\n
\n
extern unsigned int r;\n
\n
long long cgc_do_random_action(struct_1 *a0)\n
{\n
    unsigned long long v1;  // rbx, Other Possible Types: unsigned long, unsigned int\n
    unsigned int v2;  // ecx\n
    unsigned long long v3;  // rcx\n
    struct_4 *v4;  // r13\n
    unsigned long v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rax\n
    unsigned long long v8;  // rax\n
    void* v9;  // rdx, Other Possible Types: unsigned long\n
    void* v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rdx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned long long v15;  // rcx\n
    unsigned int v16;  // edx\n
    char *v17;  // rax\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
\n
    a0->field_0 = 1;\n
    v1 = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
    r = v1;\n
    v2 = v1 - v1 / 10 * 2 * 5;\n
    if (v2 < 4)\n
    {\n
        v4 = cgc_malloc(408);\n
        v5 = 0;\n
        do\n
        {\n
            r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
            v6 = (r >> 1) * 9520900167075897609 >> 64 >> 4;\n
            (&v4->field_0)[v5] = *((4232672 + v6 + -64 * v6 + v6 + r));\n
            v5 += 1;\n
        } while (v5 != 32);\n
        v4->field_20 = 0;\n
        v10 = 0;\n
        do\n
        {\n
            r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
            v11 = (r >> 1) * 9520900167075897609 >> 64 >> 4;\n
            v4->padding_21[95 + v10] = *((4232672 + v11 + -64 * v11 + v11 + r));\n
            v10 += 1;\n
        } while (v10 != 64);\n
        v4->field_c0 = 0;\n
        v12 = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
        v13 = v12 / 600 * 600;\n
        v4->field_180 = (v12 != v13 ? 1 : *(&v12) - v13);\n
        v15 = ((((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 62) ^ (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32) ^ (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 42) ^ (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 63) CONCAT (((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32)) * 0x80000000 >> 32;\n
        v4->field_184 = 0;\n
        r = v15;\n
        v16 = (v15 - (v15 * 613566757 >> 32) >> 1) + (v15 * 613566757 >> 32) >> 2;\n
        v4->field_188 = v16 - v16 * 8 + v15;\n
        v17 = cgc_malloc(64);\n
        v4->field_190 = &v17;\n
        v18 = 0;\n
        do\n
        {\n
            r = ((r >> 30) ^ r ^ (r >> 10) ^ (r >> 31) CONCAT r) * 0x80000000 >> 32;\n
            v19 = (r >> 1) * 9520900167075897609 >> 64 >> 4;\n
            v17[v18] = *((4232672 + v19 + -64 * v19 + v19 + r));\n
            v18 += 1;\n
        } while (v18 != 32);\n
        v4->field_190->field_20 = 0;\n
        return cgc_ctf_add_chal(a0, v4);\n
    }\n
    else if (v2 - 4 >= 4)\n
    {\n
        if (v2 != 8)\n
            return v8;\n
        a0->field_0 = 0;\n
    }\n
    else\n
    {\n
        v3 = a0->field_8;\n
        if (!v3)\n
            return v8;\n
        v9 = 0;\n
        while (true)\n
        {\n
            if (!a0->field_38[v9].field_0->field_184)\n
            {\n
                v7 = (v1 / 0x40000000 ^ v1 ^ v1 / 0x400 ^ v1 / 0x80000000 CONCAT v1) * 0x80000000 >> 32;\n
                r = v7;\n
                v1 = v7;\n
                v8 = v7 - v7 / 100 * 100;\n
                if (v8 <= 49)\n
                    return cgc_ctf_open_chal(a0, v9);\n
            }\n
            v9 += 1;\n
            if (v3 == v9)\n
                return v8;\n
        }\n
    }\n
}\n
", "4224727:sub_4076d7": null, "4225423:sub_40798f": null, "4225424:main": "extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern unsigned int r;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x1c0]\n
    void* v1;  // [bp-0x140], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x138]\n
    unsigned long v4;  // rdi\n
\n
    r = *(1128775700) ^ *(0x4347c000);\n
    cgc_fbuffered(cgc_stdin, 1);\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fxlat(cgc_stdin, \"7943\");\n
    cgc_fxlat(cgc_stdout, \"7943\");\n
    cgc_ctf_init(&v0);\n
    cgc_printf(\"Shout CTF CLI v0.1\\n
\");\n
    cgc_printf(\"=================\\n
\");\n
    cgc_fflush(cgc_stdout);\n
    while (true)\n
    {\n
        cgc_do_random_action(&v0);\n
        if (!v1)\n
        {\n
            cgc_printf(\"\\n
=== Menu ===================\\n
\");\n
            cgc_printf(\"1. Register User\\n
\");\n
            cgc_printf(\"2. Login User\\n
\");\n
            cgc_printf(\"3. Quit\\n
\");\n
            cgc_printf(\"> \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) < 0)\n
                break;\n
            if (*(&v0))\n
            {\n
                if (!cgc_strcmp(&v2, \"1\"))\n
                {\n
                    cgc_handle_register_user(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"2\"))\n
                {\n
                    cgc_handle_login_user(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"3\"))\n
                {\n
                    cgc_printf(\"Bye.\\n
\");\n
                    cgc_fflush(cgc_stdout);\n
                    cgc_exit();\n
                    continue;\n
                }\n
LABEL_407c78:\n
                v4 = \"Try again.\\n
\";\n
                goto LABEL_407c97;\n
            }\n
        }\n
        else\n
        {\n
            cgc_print_ctf_ticker(&v0);\n
            cgc_printf(\"\\n
=== CTF Menu ===================\\n
\");\n
            cgc_printf(\"1. View challenge list\\n
\");\n
            cgc_printf(\"2. View challenge detail\\n
\");\n
            cgc_printf(\"3. View ranking\\n
\");\n
            cgc_printf(\"4. View team profile\\n
\");\n
            cgc_printf(\"5. Submit flag\\n
\");\n
            cgc_printf(\"6. Logout\\n
\");\n
            cgc_printf(\"> \");\n
            cgc_fflush(cgc_stdout);\n
            if (cgc_freaduntil(&v2, 0x100, 10, cgc_stdin) < 0)\n
                break;\n
            if (*(&v0))\n
            {\n
                if (!cgc_strcmp(&v2, \"1\"))\n
                {\n
                    cgc_handle_view_challenge_list(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"2\"))\n
                {\n
                    cgc_handle_view_challenge_detail(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"3\"))\n
                {\n
                    cgc_handle_view_ranking(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"4\"))\n
                {\n
                    cgc_handle_view_team_profile(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"5\"))\n
                {\n
                    cgc_handle_submit_flag(&v0);\n
                    continue;\n
                }\n
                else if (!cgc_strcmp(&v2, \"6\"))\n
                {\n
                    cgc_printf(\"[INFO] Successfully logged out.\\n
\");\n
                    v1 = 0;\n
                    continue;\n
                }\n
                goto LABEL_407c78;\n
            }\n
        }\n
        v4 = \"CTF server is down! Try again later :(\\n
\";\n
LABEL_407c97:\n
        cgc_printf(v4);\n
    }\n
    cgc_fflush(cgc_stdout);\n
    return 0;\n
}\n
", "4225985:sub_407bc1": null, "4226177:sub_407c81": null, "4226351:sub_407d2f": null, "4226352:cgc_user_new": "long long cgc_user_new(unsigned long long *a0)\n
{\n
    char *v1;  // rax\n
\n
    if (a0)\n
    {\n
        v1 = cgc_malloc(56);\n
        *(a0) = v1;\n
        cgc_memset(v1, 0, 0x38);\n
        return 0;\n
    }\n
    return 1;\n
}\n
", "4226404:sub_407d64": null, "4226416:cgc_user_set_nick": "long long cgc_user_set_nick(char *a0, char *a1)\n
{\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (cgc_strlen(a1) > 15)\n
    {\n
        return 2;\n
    }\n
    else\n
    {\n
        cgc_memset(a0, 0, 0x10);\n
        cgc_strcpy(a0, a1);\n
        return 0;\n
    }\n
}\n
", "4226495:sub_407dbf": null, "4226496:cgc_user_set_pass": "long long cgc_user_set_pass(unsigned long a0, char *a1)\n
{\n
    char *v2;  // rbx\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (cgc_strlen(a1) > 31)\n
    {\n
        return 3;\n
    }\n
    else\n
    {\n
        v2 = a0 + 16;\n
        cgc_memset(v2, 0, 0x20);\n
        cgc_strcpy(v2, a1);\n
        return 0;\n
    }\n
}\n
", "4226579:sub_407e13": null, "4226592:cgc_user_set_team": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_user_set_team(struct_0 *a0, unsigned long a1, unsigned long long *a2)\n
{\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        if (a2)\n
            *(a2) = a0->field_30;\n
        a0->field_30 = a1;\n
        return 0;\n
    }\n
}\n
", "4226626:sub_407e42": null, "4226640:cgc_team_new": "typedef struct struct_1 {\n
    char padding_0[72];\n
    char *field_48;\n
    char padding_50[16];\n
    unsigned long long field_60;\n
} struct_1;\n
\n
long long cgc_team_new(struct struct_0 **a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    char *v3;  // rax\n
    struct_1 *v5;  // rax\n
\n
    v0 = v2;\n
    if (!a0)\n
        return 1;\n
    v3 = cgc_malloc(120);\n
    *(a0) = &v3;\n
    cgc_memset(v3, 0, 0x78);\n
    *(a0)->field_48 = cgc_malloc(64);\n
    v5 = *(a0);\n
    v5->field_60 = 8;\n
    cgc_memset(v5->field_48, 0, 0x40);\n
    return 0;\n
}\n
", "4226741:sub_407eb5": null, "4226752:cgc_team_add_member": "typedef struct struct_0 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
    unsigned long long field_50;\n
    struct struct_1 *field_58;\n
    unsigned long long field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_team_add_member(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v4;  // r14\n
    unsigned long long *v5;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long *v6;  // rsi\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    if (!a0)\n
        return 1;\n
    v4 = a1;\n
    if (!a1)\n
        return 1;\n
    v5 = a0->field_58;\n
    if (v5 == a0->field_60)\n
    {\n
        v6 = v5 * 16;\n
        a0->field_48 = cgc_realloc(a0->field_48, v6);\n
        a0->field_60 = a0->field_60 * 2;\n
        v5 = a0->field_58;\n
    }\n
    if (!v5)\n
        a0->field_50 = v4;\n
    v7 = a0->field_48;\n
    a0->field_58 = v5 + 1;\n
    *((v7 + v5 * 8)) = v4;\n
    return 0;\n
}\n
", "4226847:sub_407f1f": null, "4226848:cgc_team_remove_member": "typedef struct struct_0 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
    char padding_50[8];\n
    unsigned long long field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
} struct_1;\n
\n
long long cgc_team_remove_member(struct_0 *a0, char *a1)\n
{\n
    struct_0 *v2;  // r15\n
    void* v3;  // rdx, Other Possible Types: unsigned long\n
    struct struct_0 **v4;  // rbx, Other Possible Types: unsigned long\n
    struct struct_0 **v5;  // rcx, Other Possible Types: unsigned long\n
    char *v6;  // rdx\n
    struct struct_0 **v7;  // rax\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        if (!a0->field_58)\n
        {\n
            v3 = 0;\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            do\n
            {\n
                a0 = *((*((a0 + 72)) + v4 * 8));\n
                if (!cgc_strcmp(a0, a1))\n
                {\n
                    v3 = v2->field_58;\n
                    v5 = v4;\n
                    if (v3 == v4)\n
                        return 5;\n
                    goto LABEL_407f83;\n
                }\n
                v4 += 1;\n
                v3 = v2->field_58;\n
            } while (v3 > v4);\n
            goto LABEL_407f83;\n
        }\n
        v5 = v4;\n
        if (v3 == v4)\n
            return 5;\n
LABEL_407f83:\n
        v6 = (v3 + ~(v5)) * 8;\n
        v7 = *((a0 + 72));\n
        cgc_memmove(&v7[v5], &v7[v5 + 1], v6);\n
        v2->field_58 = v2->field_58 - 1;\n
        return 0;\n
    }\n
}\n
", "4227012:sub_407fc4": null, "4227024:cgc_team_change_name": "long long cgc_team_change_name(unsigned long a0, char *a1)\n
{\n
    char *v2;  // rbx\n
\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else if (cgc_strlen(a1) > 31)\n
    {\n
        return 4;\n
    }\n
    else\n
    {\n
        v2 = a0 + 33;\n
        cgc_memset(v2, 0, 0x20);\n
        cgc_strcpy(v2, a1);\n
        return 0;\n
    }\n
}\n
", "4227107:sub_408023": null, "4227120:cgc_team_set_shoutout": "typedef struct struct_0 {\n
    char padding_0[104];\n
    unsigned long long field_68;\n
} struct_0;\n
\n
long long cgc_team_set_shoutout(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v5;  // rdi\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        return 1;\n
    }\n
    else if (!a1)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v5 = a0->field_68;\n
        if (v5)\n
            cgc_free(v5);\n
        a0->field_68 = cgc_strdup(a1);\n
        return 0;\n
    }\n
}\n
", "4227184:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_allocate": null, "5242912:cgc_deallocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}