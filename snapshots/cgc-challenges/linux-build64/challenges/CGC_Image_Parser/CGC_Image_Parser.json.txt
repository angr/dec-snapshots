{"4202496:_init": "extern struct_0 *g_40b868;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40b868;\n
    if (g_40b868)\n
        v1 = g_40b868();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40b888;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40b888;\n
    goto *(4241552);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4202624:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4241528);\n
}\n
", "4202704:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202741:sub_4020f5": null, "4202742:sub_4020f6": null, "4202752:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40b860;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202793:sub_402129": null, "4202800:register_tm_clones": "extern unsigned long long g_40b870;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202857:sub_402169": null, "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40b878;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40b878)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202917:sub_4021a5": null, "4202921:sub_4021a9": null, "4202928:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202937:sub_4021b9": null, "4202944:cgc_expi": "long long cgc_expi(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = a1;\n
    for (v0 = 1; v1; v1 -= 1)\n
    {\n
        v0 *= a0;\n
    }\n
    return v0;\n
}\n
", "4203000:sub_4021f8": null, "4203008:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203156:sub_402294": null, "4203168:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203292:sub_40231c": null, "4203296:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203424:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203486:sub_4023de": null, "4203488:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203713:sub_4024c1": null, "4203728:cgc_float_to_str": "long long cgc_float_to_str(char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x42]\n
    char v1;  // [bp-0x41]\n
    unsigned long long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_4027cc;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < 5;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_4027cc:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204508:sub_4027dc": null, "4204512:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x100], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0xf8]\n
    unsigned int v2;  // [bp-0xec]\n
    unsigned long long *v3;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0xe0]\n
    unsigned int *v5;  // [bp-0xd8]\n
    unsigned int v6;  // [bp-0xcc]\n
    unsigned int *v7;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0xc0]\n
    unsigned int v9;  // [bp-0xb4]\n
    unsigned int *v10;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v11;  // [bp-0xa8]\n
    unsigned int v12;  // [bp-0xa0]\n
    unsigned int v13;  // [bp-0x9c]\n
    char *v14;  // [bp-0x98], Other Possible Types: unsigned long\n
    struct_3 *v15;  // [bp-0x90], Other Possible Types: unsigned long\n
    unsigned long v16;  // [bp-0x88]\n
    struct_3 *v17;  // [bp-0x80], Other Possible Types: unsigned long\n
    unsigned int v18;  // [bp-0x74]\n
    char v19;  // [bp-0x6d]\n
    unsigned int v20;  // [bp-0x6c]\n
    char v21;  // [bp-0x68]\n
    unsigned int v22;  // [bp-0x24]\n
    char *v23;  // [bp-0x18]\n
    unsigned int v24;  // [bp-0xc]\n
    struct_1 *v26;  // rcx\n
    unsigned long long v27;  // rdx\n
    unsigned int *v28;  // rax\n
    struct_1 *v29;  // rcx\n
    unsigned int *v30;  // rdx\n
    struct_1 *v31;  // rcx\n
    unsigned long long v32;  // rdx\n
    unsigned int *v33;  // rax\n
    struct_1 *v34;  // rcx\n
    unsigned int *v35;  // rdx\n
    unsigned long long v36;  // rdx\n
    unsigned long long *v37;  // rax\n
    struct_1 *v38;  // rcx\n
    unsigned long long *v39;  // rdx\n
    struct_1 *v40;  // rcx\n
    unsigned long long v41;  // rdx\n
    struct struct_0 **v42;  // rax\n
    struct_1 *v43;  // rcx\n
    struct struct_0 **v44;  // rdx\n
\n
    v23 = a0;\n
    v22 = 0;\n
    if (!v23)\n
    {\n
        v24 = -1;\n
        return v24;\n
    }\n
    while (true)\n
    {\n
        if (!*(v23))\n
        {\n
            v24 = v22;\n
            return v24;\n
        }\n
        if (*(v23) != 64)\n
        {\n
            cgc_putc(*(v23));\n
            v23 += 1;\n
            v22 += 1;\n
        }\n
        else\n
        {\n
            v23 += 1;\n
            v13 = *(v23);\n
            if (!v13)\n
            {\n
                v24 = -1;\n
                return v24;\n
            }\n
            if (v13 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v13 == 99)\n
            {\n
                v11 = a1;\n
                v12 = v11->field_0;\n
                if (v12 <= 40)\n
                {\n
                    v26 = v11;\n
                    v27 = v12;\n
                    v28 = v27 + v26->field_10;\n
                    v26->field_0 = v27 + 8;\n
                    v10 = v28;\n
                }\n
                else\n
                {\n
                    v29 = v11;\n
                    v30 = v29->field_8;\n
                    v29->field_8 = &v30[2];\n
                    v10 = v30;\n
                }\n
                v20 = *(v10);\n
                v19 = v20;\n
                cgc_putc(v19);\n
            }\n
            else if (v13 == 100)\n
            {\n
                v8 = a1;\n
                v9 = v8->field_0;\n
                if (v9 > 40)\n
                {\n
                    v34 = v8;\n
                    v35 = v34->field_8;\n
                    v34->field_8 = &v35[2];\n
                    v7 = v35;\n
                }\n
                else\n
                {\n
                    v31 = v8;\n
                    v32 = v9;\n
                    v33 = v32 + v31->field_10;\n
                    v31->field_0 = v32 + 8;\n
                    v7 = v33;\n
                }\n
                v18 = *(v7);\n
                cgc_int_to_str(v18, &v21);\n
                for (v17 = &v21; v17->field_0; v17 += 1)\n
                {\n
                    cgc_putc(v17->field_0);\n
                    v22 += 1;\n
                }\n
            }\n
            else if (v13 == 102)\n
            {\n
                v4 = a1;\n
                v5 = &v4->field_4;\n
                v6 = v4->field_4;\n
                if (v6 > 160)\n
                {\n
                    v38 = v4;\n
                    v39 = v38->field_8;\n
                    v38->field_8 = &v39[1];\n
                    v3 = v39;\n
                }\n
                else\n
                {\n
                    v36 = v6;\n
                    v37 = v36 + v4->field_10;\n
                    *(v5) = v36 + 16;\n
                    v3 = v37;\n
                }\n
                v16 = *(v3);\n
                cgc_float_to_str(&v21);\n
                for (v15 = &v21; *(v15); v15 += 1)\n
                {\n
                    cgc_putc(*(v15));\n
                    v22 += 1;\n
                }\n
            }\n
            else if (v13 == 115)\n
            {\n
                v1 = a1;\n
                v2 = v1->field_0;\n
                if (v2 <= 40)\n
                {\n
                    v40 = v1;\n
                    v41 = v2;\n
                    v42 = v41 + v40->field_10;\n
                    v40->field_0 = v41 + 8;\n
                    v0 = v42;\n
                }\n
                else\n
                {\n
                    v43 = v1;\n
                    v44 = v43->field_8;\n
                    v43->field_8 = &v44[1];\n
                    v0 = v44;\n
                }\n
                for (v14 = *(v0); *(v14); v14 += 1)\n
                {\n
                    cgc_putc(*(v14));\n
                    v22 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v24 = -1;\n
                return v24;\n
            }\n
            v23 += 1;\n
        }\n
    }\n
}\n
", "4205559:sub_402bf7": null, "4205568:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4205728:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return v0;\n
}\n
", "4205811:sub_402cf3": null, "4205824:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205875:sub_402d33": null, "4205888:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205939:sub_402d73": null, "4205952:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4205995:sub_402dab": null, "4206000:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4206043:sub_402ddb": null, "4206048:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206099:sub_402e13": null, "4206112:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206203:sub_402e7b": null, "4206208:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4206236:sub_402e9c": null, "4206240:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4206292:sub_402ed4": null, "4206304:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_4030c9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_4030c9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_4030c9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_403039:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_4030c9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_403039;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_4030c9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4206861:sub_40310d": null, "4206864:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4207256:sub_403298": null, "4207264:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!v0[a1])\n
            break;\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4207385:sub_403319": null, "4207392:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4207495:sub_403387": null, "4207504:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a2)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a2)\n
                break;\n
            v0[v1] = a1;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207630:sub_40340e": null, "4207632:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207750:sub_403486": null, "4207760:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    char *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a2;\n
    v2 = a0;\n
    v1 = a1;\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v2) == *(v1))\n
                v0 = v3;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
        v3 -= 1;\n
    }\n
    v2 -= 1;\n
    v1 -= 1;\n
    v4 = *(v2) - *(v1);\n
    return v4;\n
}\n
", "4207984:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4208102:sub_4035e6": null, "4208112:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4208321:sub_4036c1": null, "4208336:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; v0[a0]; v0 += 1);\n
    return v0;\n
}\n
", "4208419:sub_403723": null, "4208432:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        *((a0 + v2)) = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        *((a0 + v2)) = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4208609:sub_4037e1": null, "4208624:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); v1[a1]; v1 += 1)\n
        {\n
            a0[v0] = v1[a1];\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4208786:sub_403892": null, "4208800:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209032:sub_403988": null, "4209040:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    v0 = a0;\n
    cgc_strlen(a0);\n
    return cgc_transmit(a0, v2, v3, v4);\n
}\n
", "4209096:sub_4039c8": null, "4209104:cgc_fpai_add_pixel": "long long cgc_fpai_add_pixel(unsigned int a0[8], char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = 0;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (a1)\n
    {\n
        v0 = a0[7] - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            v4 = a0[5] * -(a3) + a2;\n
            break;\n
        case 1:\n
            v4 = a0[5] * -(a3) + a0[5] - 1 + a2;\n
            break;\n
        case 2:\n
            v4 = a0[5] * (a0[6] - 1 - a3) + a2;\n
            break;\n
        case 3:\n
            v4 = a0[5] * (a0[6] - 1 - a3) + a0[5] - 1 + a2;\n
            break;\n
        case 6:\n
            v7 = a0[5];\n
            v3 = (v7 >> 31 CONCAT v7) /m 2;\n
            v9 = a0[6];\n
            v2 = (v9 >> 31 CONCAT v9) /m 2;\n
            v1 = a0[5] * v2 + v3;\n
            v4 = v1 + a0[5] * -(a3) + a2;\n
            break;\n
        default:\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (v4 > a0[6] * a0[5])\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        a1[v4] = a4;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4209520:cgc_fpai_display_img": "long long cgc_fpai_display_img(unsigned int a0[8], unsigned int a1, unsigned int a2, char *a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xbc]\n
    unsigned long v1;  // [bp-0xb8]\n
    unsigned int v2;  // [bp-0xb0]\n
    unsigned int v3;  // [bp-0xac]\n
    char v4;  // [bp-0xa8]\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    char v9;  // [bp-0x30]\n
    char v10;  // [bp-0x26]\n
    char v11;  // [bp-0x24]\n
    char v12;  // [bp-0x20]\n
    char v13;  // [bp-0x1c]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v16;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v20;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v24;  // eax\n
\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    memcpy(&v4, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Checksum failed\\n
\", 95);\n
    if (!a0)\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_magic(a0))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_xaxis(a0))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_yaxis(a0))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_axist(a0))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_cksum(a0, &v10))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 1, &v13))\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!cgc_fpai_calc_cksum(a0))\n
    {\n
        cgc_printf(\"[ERROR] Checksum failed\\n
\", 1, 95, a3, a4);\n
        v14 = 0;\n
        return v14;\n
    }\n
    else\n
    {\n
        v1 = a0[7] - 1;\n
        switch (v1)\n
        {\n
        case 0:\n
            v8 = 0;\n
            v7 = -(a0[6]) + 1;\n
            v5 = a0[5] - 1;\n
            v6 = 0;\n
            break;\n
        case 1:\n
            v8 = -(a0[5]) + 1;\n
            v7 = -(a0[6]) + 1;\n
            v5 = 0;\n
            v6 = 0;\n
            break;\n
        case 2:\n
            v8 = 0;\n
            v7 = 0;\n
            v5 = a0[5] - 1;\n
            v6 = a0[6] - 1;\n
            break;\n
        case 3:\n
            v8 = -(a0[5]) + 1;\n
            v7 = 0;\n
            v5 = 0;\n
            v6 = a0[6] - 1;\n
            break;\n
        case 6:\n
            v16 = -(a0[5]);\n
            v8 = (v16 >> 31 CONCAT v16) /m 2;\n
            v18 = a0[6];\n
            v6 = (v18 >> 31 CONCAT v18) /m 2;\n
            v20 = a0[5];\n
            v0 = (v20 >> 31 CONCAT v20) /m 2;\n
            v5 = v0 - ((a0[5] + 1 >> 31 CONCAT a0[5] + 1) /m 2 >> 32);\n
            v22 = a0[6];\n
            v7 = -((v22 >> 31 CONCAT v22) /m 2 - ((a0[6] + 1 >> 31 CONCAT a0[6] + 1) /m 2 >> 32));\n
            break;\n
        default:\n
            v14 = 0;\n
            return v14;\n
        }\n
        v3 = a0[6] * a0[5];\n
        if (cgc_allocate(a0, 1, 95, a3))\n
        {\n
            v14 = 0;\n
            return v14;\n
        }\n
        cgc_memset(*(&v9), 32, v3);\n
        *((*(&v9) + v3)) = 0;\n
        while (true)\n
        {\n
            if (!cgc_fpai_read_pixel(a0, &v13, &v12, &v11))\n
            {\n
                for (v2 = 0; v2 < v3; v2 += 1)\n
                {\n
                    v24 = v2;\n
                    a2 = (v24 >> 31 CONCAT v24) /m a0[5] / 0x100000000;\n
                    if (!a2 && v2)\n
                        cgc_printf(\"\\n
\", a1, a2, a0, a4);\n
                    a3 = v2;\n
                    cgc_printf(\"@c\", *((*(&v9) + a3)), a2, a3, a4);\n
                }\n
                cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
                v14 = 1;\n
                return v14;\n
            }\n
            if (*(&v13) < v8)\n
            {\n
LABEL_403ed6:\n
                cgc_printf(\"X out of bounds\\n
\", a1, a2, a3, a4);\n
                v14 = 0;\n
                return v14;\n
            }\n
            if (!(*(&v13) <= v5))\n
                goto LABEL_403ed6;\n
            if (*(&v12) < v7)\n
            {\n
LABEL_403f08:\n
                cgc_printf(\"Y out of bounds\\n
\", a1, a2, a3, a4);\n
                v14 = 0;\n
                return v14;\n
            }\n
            if (!(*(&v12) <= v6))\n
                goto LABEL_403f08;\n
            if (!cgc_fpai_add_pixel(a0, *(&v9), *(&v13), *(&v12), *(&v11)))\n
            {\n
                cgc_printf(\"pixel placement failed\\n
\", a1, a2, a3, a4);\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
    }\n
}\n
", "4210692:sub_404004": null, "4210704:cgc_fpai_read_magic": "long long cgc_fpai_read_magic(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 32))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 32, &v0))\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if ((v0 >> 24) != 222)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if ((v0 >> 16) != 182)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if ((v0 >> 8) != 217)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 85)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4210971:sub_40411b": null, "4210976:cgc_fpai_read_xaxis": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long cgc_fpai_read_xaxis(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!cgc_fpai_read_check(a0, 6))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_fpai_read_nbits(a0, 6, &v0))\n
    {\n
        a0->field_14 = *(&v0);\n
        v1 = *(&v0);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4211087:sub_40418f": null, "4211088:cgc_fpai_read_yaxis": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_fpai_read_yaxis(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 6))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (cgc_fpai_read_nbits(a0, 6, &v0))\n
    {\n
        a0->field_18 = v0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4211228:sub_40421c": null, "4211232:cgc_fpai_read_axist": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
long long cgc_fpai_read_axist(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_fpai_read_nbits(a0, 3, &v0))\n
    {\n
        if (*(&v0) != 5 && *(&v0) != 6 && *(&v0))\n
        {\n
            a0->field_1c = *(&v0);\n
            v1 = *(&v0);\n
            return v1;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4211408:cgc_fpai_read_cksum": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned short field_20;\n
} struct_0;\n
\n
long long cgc_fpai_read_cksum(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    v0 = 0;\n
    if (!cgc_fpai_read_check(a0, 16))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_fpai_read_nbits(a0, 16, &v0))\n
    {\n
        a0->field_20 = v0;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4211535:sub_40434f": null, "4211536:cgc_fpai_read_nbits": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_fpai_read_nbits(struct_0 *a0, unsigned long a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct_0 *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v1 > 32)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (a0 && a2)\n
    {\n
        for (v0 = 0; v1; v1 = v1 - 1)\n
        {\n
            v0 = v0 * 2 | (*((a0->field_0 + v2->field_c)) >> ((7 - v2->field_10) & 31)) & 1;\n
            a0->field_10 = (v2->field_10 + 1 >> 31 CONCAT v2->field_10 + 1) /m 8 >> 32;\n
            if (!a0->field_10)\n
            {\n
                v5 = a0;\n
                v5->field_c = v5->field_c + 1;\n
            }\n
        }\n
        *(a2) = v0;\n
        v3 = 1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4211762:sub_404432": null, "4211776:cgc_fpai_calc_cksum": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[12];\n
    unsigned short field_20;\n
} struct_0;\n
\n
long long cgc_fpai_calc_cksum(struct_0 *a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x22]\n
    unsigned short *v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
    unsigned int v8;  // eax\n
    unsigned long v10;  // rcx\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!a0->field_10)\n
    {\n
        v1 = a0->field_8 - a0->field_c;\n
        v6 = v1;\n
        if ((v6 >> 31 CONCAT v6) /m 2 >> 32)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = a0->field_0 + a0->field_c;\n
        v8 = v1;\n
        for (v1 = (v8 >> 31 CONCAT v8) /m 2; v0 < v1; v0 += 1)\n
        {\n
            v2 += v3[v0];\n
        }\n
        v10 = a0->field_20;\n
        if (v2 == v10)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        cgc_printf(\"[ERROR] Checksum failed\\n
\", a1, v1 >> 32, v10, a4);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4212060:sub_40455c": null, "4212064:cgc_fpai_read_pixel": "long long cgc_fpai_read_pixel(void* a0, unsigned int *a1, unsigned int *a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 1))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 1, &v4))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 6))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 6, &v3))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 1))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 1, &v2))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 6))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 6, &v1))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_check(a0, 7))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpai_read_nbits(a0, 7, &v0))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v0 <= 94)\n
    {\n
        if (v4)\n
            v3 *= -1;\n
        if (v2)\n
            v1 *= -1;\n
        *(a1) = v3;\n
        *(a2) = v1;\n
        *(a3) = v0 + 32;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4212583:sub_404767": null, "4212592:cgc_fpai_read_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_fpai_read_check(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0->field_0)\n
    {\n
        v2 = a0->field_8 * 8;\n
        v1 = a0->field_c * 8;\n
        v1 = a0->field_10 + v1;\n
        v0 = v2 - v1;\n
        if (a1 <= v0)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4212736:cgc_fpti_add_pixel": "typedef struct struct_0 {\n
    char padding_0[20];\n
    char field_14;\n
} struct_0;\n
\n
long long cgc_fpti_add_pixel(struct_0 *a0, unsigned long a1, unsigned long a2, char *a3, unsigned int a4, unsigned long a5, unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    char v3;  // [bp-0x35]\n
    unsigned int v4;  // [bp-0x34]\n
    char *v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // rcx\n
\n
    v5 = a3;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v5)\n
    {\n
        if (v7 == 1)\n
        {\n
            v4 = a4 * -(a2) + a1;\n
        }\n
        else if (v7 == 2)\n
        {\n
            v4 = a4 * -(a2) + a4 - 1 + a1;\n
        }\n
        else if (v7 == 3)\n
        {\n
            v4 = a4 * (a5 - 1 - a2) + a1;\n
        }\n
        else if (v7 == 4)\n
        {\n
            v4 = a4 * (a5 - 1 - a2) + a4 - 1 + a1;\n
        }\n
        else if (v7 == 7)\n
        {\n
            v8 = a4;\n
            v2 = (v8 >> 31 CONCAT v8) /m 2;\n
            v1 = (a5 >> 31 CONCAT a5) /m 2;\n
            v0 = a4 * v1 + v2;\n
            v4 = v0 + a4 * -(a2) + a1;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (!a0->field_14)\n
        {\n
            v3 = 46;\n
        }\n
        else if (a0->field_14 == 1)\n
        {\n
            v3 = 42;\n
        }\n
        else if (a0->field_14 == 2)\n
        {\n
            v3 = 35;\n
        }\n
        else if (a0->field_14 == 3)\n
        {\n
            v3 = 43;\n
        }\n
        v10 = a5 * a4;\n
        if (v4 <= v10)\n
        {\n
            v5[v4] = v3;\n
            v6 = 1;\n
            return v6;\n
        }\n
        cgc_printf(\"[ERROR] Pixel beyond image: @d > @d\\n
\", v4, a5 * a4, v10, a4);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4213276:sub_404a1c": null, "4213280:cgc_fpti_display_img": "extern char g_409158;\n
\n
long long cgc_fpti_display_img(void* a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned long v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    char *v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned long long v17;  // rax\n
    unsigned int v19;  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v25;  // eax\n
    unsigned long v27;  // rcx\n
    unsigned int v28;  // eax\n
\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v15 = 0;\n
        return v15;\n
    }\n
    else if (cgc_fpti_read_magic(a0))\n
    {\n
        v14 = cgc_fpti_read_xaxis(a0);\n
        if (!v14)\n
        {\n
            v15 = v14;\n
            return v15;\n
        }\n
        v13 = cgc_fpti_read_yaxis(a0);\n
        if (!v13)\n
        {\n
            v15 = v13;\n
            return v15;\n
        }\n
        else if (cgc_fpti_read_ptype(a0, &v12))\n
        {\n
            v11 = cgc_fpti_read_axist(a0);\n
            if (!v11)\n
            {\n
                v15 = v11;\n
                return v15;\n
            }\n
            else if (!cgc_fpti_read_check(a0, 15))\n
            {\n
                v15 = 0;\n
                return v15;\n
            }\n
            else if (cgc_fpti_read_nbits(a0, 15, &v6))\n
            {\n
                v17 = v11 - 1;\n
                v1 = v17;\n
                switch (v17)\n
                {\n
                case 0:\n
                    v10 = 0;\n
                    v9 = -(v13) + 1;\n
                    v7 = v14 - 1;\n
                    v8 = 0;\n
                    break;\n
                case 1:\n
                    v10 = -(v14) + 1;\n
                    v9 = -(v13) + 1;\n
                    v7 = 0;\n
                    v8 = 0;\n
                    break;\n
                case 2:\n
                    v10 = 0;\n
                    v9 = 0;\n
                    v7 = v14 - 1;\n
                    v8 = v13 - 1;\n
                    break;\n
                case 3:\n
                    v10 = -(v14) + 1;\n
                    v9 = 0;\n
                    v7 = 0;\n
                    v8 = v13 - 1;\n
                    break;\n
                case 6:\n
                    v19 = -(v14);\n
                    v10 = (v19 >> 31 CONCAT v19) /m 2;\n
                    v21 = v13;\n
                    v8 = (v21 >> 31 CONCAT v21) /m 2;\n
                    v23 = v14;\n
                    v0 = (v23 >> 31 CONCAT v23) /m 2;\n
                    v7 = v0 - ((v14 + 1 >> 31 CONCAT v14 + 1) /m 2 >> 32);\n
                    v25 = v13;\n
                    v9 = -((v25 >> 31 CONCAT v25) /m 2 - ((v13 + 1 >> 31 CONCAT v13 + 1) /m 2 >> 32));\n
                    break;\n
                default:\n
                    cgc_printf(\"[ERROR] Invalid FPTI Axis Type\\n
\", 15, a2, v17, a4);\n
                    v15 = 0;\n
                    return v15;\n
                }\n
                v3 = v13 * v14;\n
                if (cgc_allocate(a0, 15, a2))\n
                {\n
                    v15 = 0;\n
                    return v15;\n
                }\n
                cgc_memset(v4, 32, v3);\n
                v27 = v3;\n
                v4[v27] = 0;\n
                while (true)\n
                {\n
                    if (!cgc_fpti_read_pixel(a0, &v6, &v5))\n
                    {\n
                        for (v2 = 0; v2 < v3; v2 += 1)\n
                        {\n
                            v28 = v2;\n
                            a2 = (v28 >> 31 CONCAT v28) /m v14 / 0x100000000;\n
                            if (!a2 && v2)\n
                                cgc_printf(\"\\n
\", a1, a2, v27, a4);\n
                            v27 = v2;\n
                            cgc_printf(\"@c\", v4[v27], a2, v27, a4);\n
                        }\n
                        cgc_printf(\"\\n
\", a1, a2, v27, a4);\n
                        v15 = 1;\n
                        return v15;\n
                    }\n
                    if (v6 < v10)\n
                        break;\n
                    if (v6 > v7)\n
                        break;\n
                    if (v5 < v9 && v5 > v8)\n
                    {\n
                        cgc_printf(\"Y out of bounds: @d\\n
\", v5, a2, v27, a4);\n
                        v15 = 0;\n
                        return v15;\n
                    }\n
                    a4 = v14;\n
                    if (!cgc_fpti_add_pixel(a0, v6, v5, v4, a4, v13, v11))\n
                    {\n
                        v15 = 0;\n
                        return v15;\n
                    }\n
                }\n
                cgc_printf(\"X out of bounds: @d\\n
\", v6, a2, v27, a4);\n
                v15 = 0;\n
                return v15;\n
            }\n
            else\n
            {\n
                v15 = 0;\n
                return v15;\n
            }\n
        }\n
        else\n
        {\n
            v12 = 0;\n
            v15 = v12;\n
            return v15;\n
        }\n
    }\n
    else\n
    {\n
        v15 = 0;\n
        return v15;\n
    }\n
}\n
", "4214374:sub_404e66": null, "4214384:cgc_fpti_read_magic": "long long cgc_fpti_read_magic(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_fpti_read_check(a0, 32))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!cgc_fpti_read_nbits(a0, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 617082501)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4214518:sub_404ef6": null, "4214528:cgc_fpti_read_xaxis": "long long cgc_fpti_read_xaxis(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v0;\n
    }\n
    else if (!cgc_fpti_read_check(a0, 6))\n
    {\n
        return v0;\n
    }\n
    else if (cgc_fpti_read_nbits(a0, 6, &v0))\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4214644:sub_404f74": null, "4214656:cgc_fpti_read_yaxis": "long long cgc_fpti_read_yaxis(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v0;\n
    }\n
    else if (!cgc_fpti_read_check(a0, 6))\n
    {\n
        return v0;\n
    }\n
    else if (cgc_fpti_read_nbits(a0, 6, &v0))\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4214772:sub_404ff4": null, "4214784:cgc_fpti_read_ptype": "typedef struct struct_0 {\n
    char padding_0[20];\n
    char field_14;\n
} struct_0;\n
\n
long long cgc_fpti_read_ptype(struct_0 *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = cgc_fpti_read_check(a0, 2);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v0 = cgc_fpti_read_nbits(a0, 2, &v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    *(a1) = v1;\n
    a0->field_14 = v1;\n
    v2 = v0;\n
    return v2;\n
}\n
", "4214953:sub_4050a9": null, "4214960:cgc_fpti_read_axist": "long long cgc_fpti_read_axist(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
        return v0;\n
    v0 = cgc_fpti_read_check(a0, 3);\n
    if (!v0)\n
    {\n
        return v0;\n
    }\n
    else if (cgc_fpti_read_nbits(a0, 3, &v0))\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4215080:sub_405128": null, "4215088:cgc_fpti_read_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_fpti_read_check(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1 <= 32)\n
    {\n
        v1 = a0->field_8 * 8;\n
        v0 = a0->field_c * 8 + a0->field_10 + a1;\n
        if (v1 < v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4215256:sub_4051d8": null, "4215264:cgc_fpti_read_nbits": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_fpti_read_nbits(struct_0 *a0, unsigned long a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // rax\n
    struct_0 *v8;  // rax\n
\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (a1 > 32)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_check(a0, a1))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v1 > a1)\n
    {\n
        v0 = *((a0->field_0 + v4->field_c)) >> ((v1 - a1) & 31);\n
        v2 = v0 & cgc_expi(2, a1) - 1;\n
        v4->field_10 = (a0->field_10 + a1 >> 31 CONCAT a0->field_10 + a1) /m 8 >> 32;\n
        if (!a0->field_10)\n
        {\n
            v8 = a0;\n
            v8->field_c = v8->field_c + 1;\n
        }\n
        *(a2) = v2;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v1 = 8 - a0->field_10; v3 < a1; v3 += 1)\n
        {\n
            v1 = *((v4->field_0 + a0->field_c));\n
            v1 = (v1 >> ((7 - a0->field_10) & 31)) & 1;\n
            v2 = v2 * 2 | v1;\n
            a0->field_10 = (v4->field_10 + 1 >> 31 CONCAT v4->field_10 + 1) /m 8 >> 32;\n
            if (!a0->field_10)\n
            {\n
                v7 = a0;\n
                v7->field_c = v7->field_c + 1;\n
            }\n
        }\n
        *(a2) = v2;\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4215703:sub_405397": null, "4215712:cgc_fpti_read_pixel": "long long cgc_fpti_read_pixel(void* a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v4;\n
    if (!(a1 && a2))\n
        return v4;\n
    if (!cgc_fpti_read_check(a0, 14))\n
    {\n
        return v4;\n
    }\n
    else if (!cgc_fpti_read_nbits(a0, 1, &v1))\n
    {\n
        return v4;\n
    }\n
    else if (!cgc_fpti_read_nbits(a0, 6, &v2))\n
    {\n
        return v4;\n
    }\n
    else if (!cgc_fpti_read_nbits(a0, 1, &v0))\n
    {\n
        return v4;\n
    }\n
    else if (!cgc_fpti_read_nbits(a0, 6, &v3))\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        if (v1 == 1)\n
            v2 *= -1;\n
        if (v0 == 1)\n
            v3 *= -1;\n
        *(a1) = v2;\n
        *(a2) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4216034:sub_4054e2": null, "4216048:cgc_rpti_add_pixel": "long long cgc_rpti_add_pixel(char *a0, unsigned int a1, unsigned long a2, unsigned long a3, unsigned int a4, unsigned long a5)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
\n
    v4 = 0;\n
    v7 = a4;\n
    v3 = (v7 >> 31 CONCAT v7) /m 2;\n
    v2 = (a5 >> 31 CONCAT a5) /m 2;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = a3 - 1;\n
    switch (v0)\n
    {\n
    case 0:\n
        v4 = a4 * a2 * -1 + a1;\n
        break;\n
    case 1:\n
        v4 = a4 * a2 * -1 + a4 - 1 + a1;\n
        break;\n
    case 2:\n
        v4 = a4 * (a5 - 1 - a2) + a1;\n
        break;\n
    case 3:\n
        v4 = a4 * (a5 - 1 - a2) + a4 - 1 + a1;\n
        break;\n
    case 6:\n
        v1 = a4 * v2 + v3;\n
        v4 = v1 + a4 * -(a2) + a1;\n
        break;\n
    default:\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (v4 <= a5 * a4)\n
    {\n
        a0[v4] = 46;\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_printf(\"[ERROR] Pixel beyond image border\\n
\", a1, (a5 >> 31 CONCAT a5) /m 2 >> 32, a5 * a4, a4);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4216407:sub_405657": null, "4216416:cgc_rpti_display_img": "extern char g_409200;\n
\n
long long cgc_rpti_display_img(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    unsigned long v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x5c]\n
    unsigned int v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x54]\n
    unsigned int v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x48]\n
    unsigned int v9;  // [bp-0x44]\n
    unsigned int v10;  // [bp-0x40]\n
    unsigned int v11;  // [bp-0x3c]\n
    unsigned int v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    unsigned int v16;  // [bp-0x28]\n
    unsigned int v17;  // [bp-0x24]\n
    char *v18;  // [bp-0x20]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned long long v21;  // rax\n
    unsigned int v23;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v27;  // eax\n
    unsigned int v29;  // eax\n
    unsigned long v31;  // rcx\n
    unsigned int v32;  // eax\n
\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!cgc_rpti_read_magic(a0))\n
    {\n
        cgc_printf(\"RPTI magic fail\\n
\", a1, a2, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    v15 = cgc_rpti_read_xaxis(a0);\n
    if (!v15)\n
    {\n
        cgc_printf(\"rpti xlen fail\\n
\", a1, a2, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    v14 = cgc_rpti_read_yaxis(a0);\n
    if (!v14)\n
    {\n
        cgc_printf(\"rpti ylen fail\\n
\", a1, a2, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    else if (!cgc_rpti_read_initx(a0, &v13))\n
    {\n
        cgc_printf(\"rpti initx fail\\n
\", a1, a2, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
    else if (cgc_rpti_read_inity(a0, &v12))\n
    {\n
        v16 = cgc_rpti_read_axist(a0);\n
        if (!v16)\n
        {\n
            cgc_printf(\"axis type fail\\n
\", a1, a2, a3, a4);\n
            v19 = 0;\n
            return v19;\n
        }\n
        else if (cgc_rpti_inc_index(a0, 3))\n
        {\n
            v21 = v16 - 1;\n
            v1 = v21;\n
            switch (v21)\n
            {\n
            case 0:\n
                v9 = 0;\n
                v8 = -(v14) + 1;\n
                v11 = v15 - 1;\n
                v10 = 0;\n
                break;\n
            case 1:\n
                v9 = -(v15) + 1;\n
                v8 = -(v14) + 1;\n
                v11 = 0;\n
                v10 = 0;\n
                break;\n
            case 2:\n
                v9 = 0;\n
                v8 = 0;\n
                v11 = v15 - 1;\n
                v10 = v14 - 1;\n
                break;\n
            case 3:\n
                v9 = -(v15) + 1;\n
                v8 = 0;\n
                v11 = 0;\n
                v10 = v14 - 1;\n
                break;\n
            case 6:\n
                v23 = v15;\n
                v0 = (v23 >> 31 CONCAT v23) /m 2;\n
                v11 = v0 - ((v15 + 1 >> 31 CONCAT v15 + 1) /m 2 >> 32);\n
                v25 = -(v15);\n
                v9 = (v25 >> 31 CONCAT v25) /m 2;\n
                v27 = v14;\n
                v8 = -((v27 >> 31 CONCAT v27) /m 2 - ((v14 + 1 >> 31 CONCAT v14 + 1) /m 2 >> 32));\n
                v29 = v14;\n
                v10 = (v29 >> 31 CONCAT v29) /m 2;\n
                break;\n
            default:\n
                cgc_printf(\"type switch fail\\n
\", 3, a2, v21, a4);\n
                v19 = 0;\n
                return v19;\n
            }\n
            v17 = v14 * v15;\n
            if (cgc_allocate(a0, 3, a2))\n
            {\n
                v19 = 0;\n
                return v19;\n
            }\n
            cgc_memset(v18, 32, v17);\n
            v31 = v17;\n
            v18[v31] = 0;\n
            while (true)\n
            {\n
                if (!cgc_rpti_read_pixel(a0, &v7))\n
                {\n
                    for (v2 = 0; v2 < v17; v2 += 1)\n
                    {\n
                        v32 = v2;\n
                        a2 = (v32 >> 31 CONCAT v32) /m v15 / 0x100000000;\n
                        if (!a2 && v2)\n
                            cgc_printf(\"\\n
\", a1, a2, v31, a4);\n
                        v31 = v2;\n
                        cgc_printf(\"@c\", v18[v31], a2, v31, a4);\n
                    }\n
                    cgc_deallocate(a0, a1);\n
                    cgc_printf(\"\\n
\", a1, a2, v31, a4);\n
                    v19 = 1;\n
                    return v19;\n
                }\n
                v6 = v7 >> 7;\n
                v5 = v7 & 127;\n
                if ((v6 & 64))\n
                    v6 = (v6 & 63) * -1;\n
                if ((v5 & 64))\n
                    v5 = (v5 & 63) * -1;\n
                v4 = v13 + v6;\n
                v3 = v12 + v5;\n
                if (v4 < v9)\n
                {\n
LABEL_405a3f:\n
                    cgc_printf(\"X out of bounds\\n
\", a1, a2, v31, a4);\n
                    cgc_deallocate(\"X out of bounds\\n
\", a1);\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (!(v4 <= v11))\n
                    goto LABEL_405a3f;\n
                if (v3 < v8)\n
                {\n
LABEL_405a83:\n
                    cgc_printf(\"Y out of bounds\\n
\", a1, a2, v31, a4);\n
                    cgc_deallocate(\"Y out of bounds\\n
\", a1);\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                if (!(v3 <= v10))\n
                    goto LABEL_405a83;\n
                a1 = v4;\n
                a4 = v15;\n
                if (!cgc_rpti_add_pixel(v18, a1, v3, v16, a4, v14))\n
                {\n
                    cgc_deallocate(a0, *(&a1));\n
                    cgc_printf(\"add pixel fail\\n
\", *(&a1), a2, v31, *(&a4));\n
                    v19 = 0;\n
                    return v19;\n
                }\n
                v13 = v4;\n
                v12 = v3;\n
            }\n
        }\n
        else\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(\"rpti inity fail\\n
\", a1, a2, a3, a4);\n
        v19 = 0;\n
        return v19;\n
    }\n
}\n
", "4217762:sub_405ba2": null, "4217776:cgc_rpti_read_magic": "long long cgc_rpti_read_magic(unsigned int a0[5])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (*(&a0[0]))\n
    {\n
        if (!a0[3] && !a0[4])\n
        {\n
            if (cgc_rpti_read_check(a0, 32))\n
            {\n
                cgc_memcpy(&v0, *(&a0[0]), 4);\n
                if (v0 != 3276868051)\n
                {\n
                    v1 = 0;\n
                    return v1;\n
                }\n
                else if (cgc_rpti_inc_index(a0, 32))\n
                {\n
                    v1 = 1;\n
                    return v1;\n
                }\n
                else\n
                {\n
                    v1 = 0;\n
                    return v1;\n
                }\n
            }\n
            else\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4218016:cgc_rpti_read_xaxis": "long long cgc_rpti_read_xaxis(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!*(a0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_rpti_read_bits(a0, 6, &v0))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4218138:sub_405d1a": null, "4218144:cgc_rpti_read_yaxis": "long long cgc_rpti_read_yaxis(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_rpti_read_bits(a0, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4218217:sub_405d69": null, "4218224:cgc_rpti_read_initx": "long long cgc_rpti_read_initx(unsigned long long *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!*(a0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_rpti_read_bits(a0, 1, &v0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_rpti_read_bits(a0, 6, &v1))\n
    {\n
        if (v0 == 1)\n
            v1 *= -1;\n
        *(a1) = v1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4218446:sub_405e4e": null, "4218448:cgc_rpti_read_inity": "long long cgc_rpti_read_inity(unsigned long long *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!*(a0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_rpti_read_bits(a0, 1, &v0))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_rpti_read_bits(a0, 6, &v1))\n
    {\n
        if (v0 == 1)\n
            v1 *= -1;\n
        *(a1) = v1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4218670:sub_405f2e": null, "4218672:cgc_rpti_read_axist": "long long cgc_rpti_read_axist(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v0;\n
    }\n
    else if (!*(a0))\n
    {\n
        return v0;\n
    }\n
    else if (cgc_rpti_read_bits(a0, 3, &v0))\n
    {\n
        if (!(v0 > 4 && v0 < 7))\n
            return v0;\n
        v0 = 0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4218806:sub_405fb6": null, "4218816:cgc_rpti_inc_index": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_rpti_inc_index(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
    struct_0 *v6;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_rpti_read_check(a0, a1))\n
    {\n
        v4 = a0->field_10 + a1;\n
        v0 = (v4 >> 31 CONCAT v4) /m 8;\n
        if (v0 > 0)\n
        {\n
            v6 = a0;\n
            v6->field_c = v0 + v6->field_c;\n
        }\n
        a0->field_10 = (v1->field_10 + a1 >> 31 CONCAT v1->field_10 + a1) /m 8 >> 32;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4219005:sub_40607d": null, "4219008:cgc_rpti_read_pixel": "long long cgc_rpti_read_pixel(unsigned long long *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!cgc_rpti_read_bits(a0, 7, &v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_rpti_read_bits(a0, 7, &v1))\n
    {\n
        v0 = v2 * 128 | v1;\n
        *(a1) = v0;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4219232:cgc_rpti_read_bits": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_rpti_read_bits(struct_0 *a0, unsigned long a1, unsigned int *a2)\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    if (!a2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v2 > 32)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_rpti_read_check(a0, v2))\n
    {\n
        for (v0 = 0; v2; v2 = v2 - 1)\n
        {\n
            v0 = *((v3->field_0 + a0->field_c));\n
            v0 = (v0 >> ((7 - a0->field_10) & 31)) & 1;\n
            a0->field_10 = (v3->field_10 + 1 >> 31 CONCAT v3->field_10 + 1) /m 8 >> 32;\n
            if (!a0->field_10)\n
            {\n
                v6 = a0;\n
                v6->field_c = v6->field_c + 1;\n
            }\n
            v1 = v1 * 2 | v0;\n
        }\n
        *(a2) = v1;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4219506:sub_406272": null, "4219520:cgc_rpti_read_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_rpti_read_check(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (((a0->field_8 << 3) - ((a0->field_c << 3) + a0->field_10)) < a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4219642:sub_4062fa": null, "4219648:cgc_readData": "long long cgc_readData(unsigned long long *a0)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_receive(a0, v5, v6, v7))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2 > 0x800)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_receive(a0, v5, v6, v7))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v1 == v2)\n
    {\n
        *(a0) = v0;\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4219904:cgc_selectRenderer": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_selectRenderer(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xf0]\n
    unsigned int v1;  // [bp-0xe8]\n
    char v2;  // [bp-0xc8]\n
    unsigned int v3;  // [bp-0xc0]\n
    char v4;  // [bp-0x88]\n
    unsigned int v5;  // [bp-0x80]\n
    unsigned long v6;  // [bp-0x70], Other Possible Types: char\n
    unsigned int v7;  // [bp-0x68]\n
    unsigned long v8;  // [bp-0x58], Other Possible Types: char\n
    unsigned int v9;  // [bp-0x50]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned long v11;  // [bp-0x28]\n
    char v12;  // [bp-0x1c]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned long v15;  // rsi\n
\n
    if (!a0)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (!a0->field_18)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    else if (a0->field_10 >= 4)\n
    {\n
        v11 = a0->field_18;\n
        v10 = a0->field_10;\n
        v15 = v11;\n
        cgc_memcpy(&v12, v15, 4);\n
        if (*(&v12) == 1440331486)\n
        {\n
            cgc_memset(&v8, 0, 40);\n
            v8 = v11;\n
            v9 = v10;\n
            if (!cgc_fpai_display_img(&v8, 0, 40, a3, a4))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 2247018276)\n
        {\n
            cgc_memset(&v6, 0, 24);\n
            v6 = v11;\n
            v7 = v10;\n
            if (!cgc_fpti_display_img(&v6, 0, 24, a3, a4))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 3276868051)\n
        {\n
            cgc_memset(&v4, 0, 24);\n
            *(&v4) = v11;\n
            v5 = v10;\n
            if (!cgc_rpti_display_img(&v4, 0, 24, a3, a4))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) == 1994376368)\n
        {\n
            cgc_memset(&v2, 0, 64);\n
            *(&v2) = v11;\n
            v3 = v10;\n
            if (!cgc_tbir_display_img(&v2))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        else if (*(&v12) != 823089611)\n
        {\n
            cgc_printf(\"[ERROR] Unknown Format\\n
\", v15, 4, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_memset(&v0, 0, 40);\n
            *(&v0) = v11;\n
            v1 = v10;\n
            if (!cgc_tpai_display_image(&v0))\n
            {\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
        v13 = 1;\n
        return v13;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
}\n
", "4220502:sub_406656": null, "4220512:cgc_menu": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[15];\n
    unsigned int field_10;\n
    char padding_14[12];\n
    struct struct_0 *field_20;\n
} struct_0;\n
\n
extern char g_4092c4;\n
\n
long long cgc_menu(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x70]\n
    struct_0 *v1;  // [bp-0x68]\n
    struct_0 *v2;  // [bp-0x60], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x58]\n
    char v4;  // [bp-0x48]\n
    struct_0 *v5;  // [bp-0x28], Other Possible Types: char\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long v10;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v11;  // rax\n
\n
    v7 = 0;\n
    v6 = 0;\n
    v10 = 40;\n
    cgc_bzero(&v4, 40);\n
    while (true)\n
    {\n
        cgc_printf(\"1- Upload Image\\n
\", v10, a2, a3, a4);\n
        cgc_printf(\"2- List Images\\n
\", v10, a2, a3, a4);\n
        cgc_printf(\"3- Remove Image\\n
\", v10, a2, a3, a4);\n
        cgc_printf(\"4- Display Image\\n
\", v10, a2, a3, a4);\n
        cgc_printf(\"5- Leave\\n
\", v10, a2, a3, a4);\n
        cgc_printf(\"} \", v10, a2, a3, a4);\n
        v7 = 0;\n
        v10 = 10;\n
        a2 = 2;\n
        if (!cgc_receive_until(&v7, 10, 2))\n
        {\n
            cgc_printf(\"[ERROR] Failed to read choice\\n
\", 10, 2, a3, a4);\n
            v8 = 0;\n
            return v8;\n
        }\n
        v7 -= 48;\n
        v11 = v7 - 1;\n
        a3 = v11;\n
        v0 = v11;\n
        switch (v11)\n
        {\n
        case 0:\n
            if (cgc_allocate(\"} \", 10, 2))\n
            {\n
                cgc_printf(\"[ERROR] Failed to allocate buffer\\n
\", 10, 2, &g_4092c4, a4);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_memset(v2, 0, 40);\n
            cgc_printf(\"Image Name: \", 0, 40, &g_4092c4, a4);\n
            if (!cgc_receive_until(v2, 10, 15))\n
            {\n
                cgc_printf(\"[ERROR] Receive name failed\\n
\", 10, 15, &g_4092c4, a4);\n
                cgc_deallocate(\"[ERROR] Receive name failed\\n
\", 10);\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (cgc_receive(a0, 10, 15, &g_4092c4))\n
            {\n
                cgc_printf(\"[ERROR] Receive length failed\\n
\", 10, 15, &g_4092c4, a4);\n
                cgc_deallocate(\"[ERROR] Receive length failed\\n
\", 10);\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (v6 <= 0x800)\n
            {\n
                if (cgc_allocate(a0, 10, 15))\n
                {\n
                    cgc_printf(\"[ERROR] Failed to allocate image buffer\\n
\", 10, 15, &g_4092c4, a4);\n
                    cgc_deallocate(\"[ERROR] Failed to allocate image buffer\\n
\", 10);\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                if (cgc_receive(a0, 10, 15, &g_4092c4))\n
                {\n
                    cgc_printf(\"[ERROR] Failed to receive image data\\n
\", 10, 15, &g_4092c4, a4);\n
                    cgc_deallocate(\"[ERROR] Failed to receive image data\\n
\", 10);\n
                    cgc_deallocate(\"[ERROR] Failed to receive image data\\n
\", 10);\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                v2->field_10 = v6;\n
                a3 = *(&v5);\n
                v2->field_20 = a3;\n
                v5 = v2;\n
                v2 = 0;\n
                break;\n
            }\n
            else\n
            {\n
                cgc_printf(\"[ERROR] Image length to large\\n
\", 10, 15, &g_4092c4, a4);\n
                cgc_deallocate(\"[ERROR] Image length to large\\n
\", 10);\n
                continue;\n
            }\n
        case 1:\n
            for (v2 = *(&v5); v2; v2 = *((v2 + 32)))\n
            {\n
                cgc_printf(\"@s\\n
\", v2, 2, &g_4092c4, a4);\n
            }\n
        case 2:\n
            cgc_printf(\"Image Name: \", 10, 2, &g_4092c4, a4);\n
            cgc_bzero(&v3, 16);\n
            v10 = 10;\n
            a2 = 15;\n
            if (cgc_receive_until(&v3, 10, 15))\n
            {\n
                v2 = *(&v5);\n
                v1 = &v4;\n
                while (v2)\n
                {\n
                    if (cgc_strcmp(v2, &v3))\n
                    {\n
                        v1 = v2;\n
                        v2 = *((v2 + 32));\n
                    }\n
                    else\n
                    {\n
                        cgc_deallocate(a0, 10);\n
                        v1->field_20 = v2->field_20;\n
                        cgc_deallocate(a0, 10);\n
                        v2 = 0;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                cgc_printf(\"[ERROR] Failed to receive name\\n
\", 10, 15, &g_4092c4, a4);\n
                continue;\n
            }\n
        case 3:\n
            cgc_printf(\"Image Name: \", 10, 2, &g_4092c4, a4);\n
            cgc_bzero(&v3, 16);\n
            v10 = 10;\n
            a2 = 15;\n
            if (cgc_receive_until(&v3, 10, 15))\n
            {\n
                for (v2 = *(&v5); v2; v2 = *((v2 + 32)))\n
                {\n
                    if (!cgc_strcmp(v2, &v3))\n
                        break;\n
                }\n
                if (!v2)\n
                {\n
                    cgc_printf(\"[ERROR] Failed to locate image\\n
\", 10, 15, &g_4092c4, a4);\n
                }\n
                else if (!cgc_selectRenderer(v2, 10, 15, &g_4092c4, a4))\n
                {\n
                    cgc_printf(\"[ERROR] Failed to render image\\n
\", 10, 15, &g_4092c4, a4);\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                break;\n
            }\n
            else\n
            {\n
                cgc_printf(\"[ERROR] Failed to receive name\\n
\", 10, 15, &g_4092c4, a4);\n
                continue;\n
            }\n
        case 4:\n
            v8 = 0;\n
            return v8;\n
        default:\n
            cgc_printf(\"[ERROR] Invalid option: @d\\n
\", v7, 2, v11, a4);\n
        }\n
    }\n
}\n
", "4221763:sub_406b43": null, "4221776:main": "int main(unsigned long long a0, unsigned int a1, unsigned long long a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v5 = 0;\n
    v4 = a0;\n
    *(&v3) = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    cgc_menu(a0, a1, a2, a3, a4);\n
    return 0;\n
}\n
", "4221833:sub_406b89": null, "4221840:cgc_tbir_read_chksum": "long long cgc_tbir_read_chksum(unsigned int a0[15])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_tbir_read_nbits(a0, 32, &v0))\n
    {\n
        if ((a0[14] & 0x10000) && a0[13] != v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        a0[13] = v0;\n
        a0[14] = a0[14] | 0x100000;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4222017:sub_406c41": null, "4222032:cgc_tbir_read_nbits": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_tbir_read_nbits(struct_0 *a0, unsigned long a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // rax\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // ecx\n
    struct_0 *v11;  // rax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (cgc_tbir_read_check(a0, v3))\n
    {\n
        v1 = 8 - a0->field_10;\n
        if (v1 > v3)\n
        {\n
            v2 = *((v4->field_0 + a0->field_c));\n
            v2 >>= (v1 - v3) & 31;\n
            v0 = v2;\n
            v2 = v0 & cgc_expi(2, v3) - 1;\n
            v7 = a0;\n
            v7->field_10 = v3 + v7->field_10;\n
            *(a2) = v2;\n
            v5 = 1;\n
            return v5;\n
        }\n
        for (v2 = 0; v3; v3 -= 1)\n
        {\n
            v2 *= 2;\n
            v2 |= (*((v4->field_0 + v4->field_c)) >> ((7 - a0->field_10) & 31)) & 1;\n
            v8 = a0->field_10 + 1;\n
            v10 = (v8 >> 31 CONCAT v8) /m 8;\n
            v11 = a0;\n
            v11->field_c = v10 + v11->field_c;\n
            v4->field_10 = (a0->field_10 + 1 >> 31 CONCAT a0->field_10 + 1) /m 8 >> 32;\n
        }\n
        *(a2) = v2;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4222402:sub_406dc2": null, "4222416:cgc_tbir_read_pixels": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    unsigned long long field_28;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
    unsigned int field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    char padding_24[4];\n
    char *field_28;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
    unsigned int field_38;\n
} struct_1;\n
\n
extern char g_4094e0;\n
\n
long long cgc_tbir_read_pixels(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x128]\n
    unsigned int v1;  // [bp-0x120]\n
    unsigned int v2;  // [bp-0x11c]\n
    unsigned int v3;  // [bp-0x118]\n
    unsigned int v4;  // [bp-0x114]\n
    unsigned int v5;  // [bp-0x110]\n
    unsigned int v6;  // [bp-0x10c]\n
    unsigned int v7;  // [bp-0x108]\n
    unsigned int v8;  // [bp-0x104]\n
    unsigned long v9;  // [bp-0x100]\n
    unsigned int v10;  // [bp-0xf8]\n
    unsigned int v11;  // [bp-0xf4]\n
    unsigned int v12;  // [bp-0xf0]\n
    unsigned int v13;  // [bp-0xec]\n
    unsigned int v14;  // [bp-0xe8]\n
    unsigned int v15;  // [bp-0xe4]\n
    unsigned int v16;  // [bp-0xdc]\n
    unsigned int *v17;  // [bp-0xd8]\n
    unsigned int v18;  // [bp-0xcc]\n
    char v19;  // [bp-0xc8]\n
    char v20;  // [bp-0x68]\n
    char v21;  // [bp-0x1e]\n
    char v22;  // [bp-0x1a]\n
    struct_1 *v23;  // [bp-0x18]\n
    unsigned int v24;  // [bp-0xc]\n
    struct_0 *v26;  // rax\n
    unsigned int v27;  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v31;  // eax\n
    unsigned int v33;  // eax\n
    unsigned long v35;  // rdx, Other Possible Types: unsigned long long\n
    unsigned int v36;  // eax\n
    unsigned int v38;  // eax\n
    unsigned int v40;  // eax\n
    unsigned int v42;  // eax\n
    unsigned long v43;  // rax\n
    unsigned int v44;  // eax\n
    unsigned long v45;  // rax\n
    unsigned int v46;  // eax\n
    unsigned long v47;  // rax\n
    unsigned int v48;  // eax\n
    unsigned long v49;  // rax\n
    unsigned long long v50;  // rax\n
\n
    v23 = &a0->field_0;\n
    strncpy(&v22, \" #*@ .\", 6);\n
    memcpy(&v20, \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", 62);\n
    memcpy(&v19, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\", 95);\n
    v16 = 0;\n
    v15 = 0;\n
    if (!a0)\n
    {\n
        v24 = 0;\n
        return v24;\n
    }\n
    if ((a0->field_38 & 1) && (a0->field_38 & 16) && (a0->field_38 & 0x100) && (a0->field_38 & 0x1000))\n
    {\n
        if (!a0->field_10)\n
        {\n
            v26 = a0;\n
            v26->field_38 = v26->field_38 | 0x10000;\n
            v18 = a0->field_1c * v23->field_18 * v23->field_14;\n
            v13 = (v18 + 31 & -32) - v18;\n
            v27 = v18 + v13;\n
            v18 = (v27 >> 31 CONCAT v27) /m 32;\n
            if ((v18 << 2) + a0->field_c > v23->field_8)\n
            {\n
                cgc_printf(\"Dword count too hight: @d @d @d\\n
\", v18 * 4, v23->field_c, a0->field_8, a4);\n
                v24 = 0;\n
                return v24;\n
            }\n
            for (v17 = v23->field_0 + a0->field_c; v15 < v18; v15 += 1)\n
            {\n
                v16 ^= v17[v15];\n
            }\n
            if (!(a0->field_38 & 0x100000))\n
            {\n
                a0->field_34 = v16;\n
            }\n
            else if (v16 != a0->field_34)\n
            {\n
                v24 = 0;\n
                return v24;\n
            }\n
            v23->field_30 = a0->field_14 * v23->field_18;\n
            if (cgc_allocate(a0, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\", 95, a3))\n
            {\n
                v24 = 0;\n
                return v24;\n
            }\n
            cgc_memset(v23->field_28, 32, a0->field_30);\n
            *((a0->field_28 + v23->field_30)) = 0;\n
            v10 = 0;\n
            v14 = 0;\n
            while (v10 < a0->field_30)\n
            {\n
                if (!cgc_tbir_read_nbits(v23, a0->field_1c, &v14))\n
                {\n
                    cgc_deallocate(a0, a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = 0;\n
                    return v24;\n
                }\n
                v9 = a0->field_20;\n
                switch (v9)\n
                {\n
                case 0:\n
                    v29 = v10;\n
                    v11 = (v29 >> 31 CONCAT v29) /m a0->field_14;\n
                    v31 = v10;\n
                    v35 = (v31 >> 31 CONCAT v31) /m a0->field_14 / 0x100000000;\n
                    v12 = v35;\n
                    break;\n
                case 1:\n
                    v33 = v10;\n
                    v11 = (v33 >> 31 CONCAT v33) /m a0->field_14;\n
                    v8 = a0->field_14 - 1;\n
                    v35 = (v10 >> 31 CONCAT v10) /m a0->field_14 >> 32;\n
                    v12 = v8 - v35;\n
                    break;\n
                case 2:\n
                    v7 = a0->field_18 - 1;\n
                    v36 = v10;\n
                    v11 = v7 - (v36 >> 31 CONCAT v36) /m a0->field_14;\n
                    v38 = v10;\n
                    v35 = (v38 >> 31 CONCAT v38) /m a0->field_14 / 0x100000000;\n
                    v12 = v35;\n
                    break;\n
                case 3:\n
                    v5 = a0->field_18 - 1;\n
                    v40 = v10;\n
                    v11 = v5 - (v40 >> 31 CONCAT v40) /m a0->field_14;\n
                    v6 = a0->field_14 - 1;\n
                    v35 = (v10 >> 31 CONCAT v10) /m a0->field_14 >> 32;\n
                    v12 = v6 - v35;\n
                    break;\n
                case 4:\n
                    v11 = (v10 >> 31 CONCAT v10) /m a0->field_18 >> 32;\n
                    v42 = v10;\n
                    v43 = (v42 >> 31 CONCAT v42) /m a0->field_18;\n
                    v35 = v43 / 0x100000000;\n
                    v12 = v43;\n
                    break;\n
                case 5:\n
                    v11 = (v10 >> 31 CONCAT v10) /m a0->field_18 >> 32;\n
                    v4 = a0->field_14 - 1;\n
                    v44 = v10;\n
                    v45 = (v44 >> 31 CONCAT v44) /m a0->field_18;\n
                    v35 = v45 / 0x100000000;\n
                    v12 = v4 - v45;\n
                    break;\n
                case 6:\n
                    v3 = a0->field_18 - 1;\n
                    v11 = v3 - ((v10 >> 31 CONCAT v10) /m a0->field_18 >> 32);\n
                    v46 = v10;\n
                    v47 = (v46 >> 31 CONCAT v46) /m a0->field_18;\n
                    v35 = v47 / 0x100000000;\n
                    v12 = v47;\n
                    break;\n
                case 7:\n
                    v1 = a0->field_18 - 1;\n
                    v11 = v1 - ((v10 >> 31 CONCAT v10) /m a0->field_18 >> 32);\n
                    v2 = a0->field_14 - 1;\n
                    v48 = v10;\n
                    v49 = (v48 >> 31 CONCAT v48) /m a0->field_18;\n
                    v35 = v49 / 0x100000000;\n
                    v12 = v2 - v49;\n
                    break;\n
                default:\n
                    cgc_deallocate(a0, a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = 0;\n
                    return v24;\n
                }\n
                v15 = a0->field_14 * v11 + v12;\n
                v50 = a0->field_1c - 1;\n
                v0 = v50;\n
                switch (v50)\n
                {\n
                case 0:\n
                    if (v14 > 1)\n
                    {\n
                        cgc_deallocate(a0, a1);\n
                        a0->field_28 = 0;\n
                        a0->field_30 = 0;\n
                        v24 = a0->field_30;\n
                        return v24;\n
                    }\n
                    if (v15 <= a0->field_30 + 1 && v15 >= 0)\n
                    {\n
                        *((a0->field_28 + v15)) = (&v22)[v14];\n
                        break;\n
                    }\n
                    cgc_deallocate(a0, a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = a0->field_30;\n
                    return v24;\n
                case 1:\n
                    if (v14 > 3)\n
                    {\n
                        cgc_deallocate(a0, a1);\n
                        a0->field_28 = 0;\n
                        a0->field_30 = 0;\n
                        v24 = a0->field_30;\n
                        return v24;\n
                    }\n
                    if (v15 <= a0->field_30 + 1 && v15 >= 0)\n
                    {\n
                        *((a0->field_28 + v15)) = (&v21)[v14];\n
                        break;\n
                    }\n
                    cgc_deallocate(a0, a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = a0->field_30;\n
                    return v24;\n
                case 5:\n
                    if (v14 > 61)\n
                    {\n
                        cgc_deallocate(a0, a1);\n
                        v24 = a0->field_30;\n
                        return v24;\n
                    }\n
                    if (v15 <= a0->field_30 + 1 && v15 >= 0)\n
                    {\n
                        *((a0->field_28 + v15)) = (&v20)[v14];\n
                        break;\n
                    }\n
                    cgc_deallocate(a0, a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = a0->field_30;\n
                    return v24;\n
                case 6:\n
                    if (v14 > 94)\n
                    {\n
                        cgc_deallocate(a0, a1);\n
                        a0->field_28 = 0;\n
                        a0->field_30 = 0;\n
                        v24 = a0->field_30;\n
                        return v24;\n
                    }\n
                    if (v15 > a0->field_30 + 1)\n
                    {\n
LABEL_4076cd:\n
                        cgc_deallocate(a0, a1);\n
                        a0->field_28 = 0;\n
                        a0->field_30 = 0;\n
                        v24 = a0->field_30;\n
                        return v24;\n
                    }\n
                    if (v15 < 0)\n
                        goto LABEL_4076cd;\n
                    *((a0->field_28 + v15)) = (&v19)[v14];\n
                    v10 += 1;\n
                    continue;\n
                default:\n
                    cgc_printf(\"[ERROR] Invalid pixel type\\n
\", a1, v35, v50, a4);\n
                    cgc_deallocate(\"[ERROR] Invalid pixel type\\n
\", a1);\n
                    a0->field_28 = 0;\n
                    a0->field_30 = 0;\n
                    v24 = a0->field_30;\n
                    return v24;\n
                }\n
            }\n
            if (cgc_tbir_read_nbits(a0, v13, &v15))\n
            {\n
                v24 = 1;\n
                return v24;\n
            }\n
            cgc_deallocate(a0, a1);\n
            a0->field_28 = 0;\n
            a0->field_30 = 0;\n
            v24 = 0;\n
            return v24;\n
        }\n
        else\n
        {\n
            v24 = 0;\n
            return v24;\n
        }\n
    }\n
    v24 = 0;\n
    return v24;\n
}\n
", "4225027:sub_407803": null, "4225040:cgc_tbir_read_flags": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
long long cgc_tbir_read_flags(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_tbir_read_pixeltype(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (cgc_tbir_read_loadd(a0))\n
    {\n
        a0->field_38 = a0->field_38 | 16;\n
        v0 = 1;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4225141:sub_407875": null, "4225152:cgc_tbir_read_pixeltype": "long long cgc_tbir_read_pixeltype(unsigned int a0[15])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (!cgc_tbir_read_nbits(a0, 4, &v0))\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        if (v0 <= 7)\n
        {\n
            if (v0 > 2 && v0 < 6)\n
                goto LABEL_4078f2;\n
            if (v0)\n
            {\n
                a0[7] = v0;\n
                a0[14] = a0[14] | 0x100;\n
                v1 = 1;\n
                return v1;\n
            }\n
        }\n
LABEL_4078f2:\n
        return v1;\n
    }\n
}\n
", "4225313:sub_407921": null, "4225328:cgc_tbir_read_loadd": "long long cgc_tbir_read_loadd(unsigned int a0[15])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_tbir_read_nbits(a0, 4, &v1))\n
    {\n
        return v0;\n
    }\n
    else if (v1 > 8)\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        a0[8] = v1;\n
        a0[14] = a0[14] | 0x1000;\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4225443:sub_4079a3": null, "4225456:cgc_tbir_display_img": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[16];\n
    unsigned long long field_28;\n
    unsigned int field_30;\n
    char padding_34[4];\n
    unsigned int field_38;\n
} struct_0;\n
\n
long long cgc_tbir_display_img(struct_0 *a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
    char *v7;  // rcx\n
\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_tbir_read_magic(a0))\n
    {\n
        v2 = cgc_tbir_read_typef(a0);\n
        while (true)\n
        {\n
            if (!v2)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v2;\n
            if (v0 == 43690)\n
            {\n
                if ((a0->field_38 & 1))\n
                {\n
                    cgc_printf(\"[ERROR] Only one header\\n
\", a1, a2, a3, a4);\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                else if (!cgc_tbir_read_header(a0))\n
                {\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (v0 == 43707)\n
                {\n
                    if ((a0->field_38 & 16))\n
                    {\n
                        cgc_printf(\"[ERROR] Only one flags field\\n
\", a1, a2, a3, a4);\n
                        v3 = 0;\n
                        return v3;\n
                    }\n
                    else if (!cgc_tbir_read_flags(a0))\n
                    {\n
                        v3 = 0;\n
                        return v3;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v0 != 43724)\n
                    {\n
                        if (v0 != 43741)\n
                            break;\n
                        if ((a0->field_38 & 0x100000))\n
                        {\n
                            cgc_printf(\"[ERROR] Only one checksum field\\n
\", a1, a2, a3, a4);\n
                            v3 = 0;\n
                            return v3;\n
                        }\n
                        if (!cgc_tbir_read_chksum(a0))\n
                        {\n
                            v3 = 0;\n
                            return v3;\n
                        }\n
                    }\n
                    else if ((a0->field_38 & 0x10000))\n
                    {\n
                        cgc_printf(\"[ERROR] Only one pixel set\\n
\", a1, a2, a3, a4);\n
                        v3 = 0;\n
                        return v3;\n
                    }\n
                    else if (!cgc_tbir_read_pixels(a0, a1, a2, a3, a4))\n
                    {\n
                        v3 = 0;\n
                        return v3;\n
                    }\n
                }\n
            }\n
            v2 = cgc_tbir_read_typef(a0);\n
        }\n
        if (v0 != 43758)\n
        {\n
            cgc_printf(\"invalide field\\n
\", a1, a2, a3, a4);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if ((a0->field_38 & 1) && (a0->field_38 & 16) && (a0->field_38 & 0x10000) && (a0->field_38 & 0x100000))\n
        {\n
            for (v1 = 0; v1 < a0->field_30; v1 += 1)\n
            {\n
                v5 = v1;\n
                a2 = (v5 >> 31 CONCAT v5) /m a0->field_14 / 0x100000000;\n
                if (!a2 && v1)\n
                    cgc_printf(\"\\n
\", a1, a2, a0, a4);\n
                v7 = v1;\n
                cgc_printf(\"@c\", v7[a0->field_28], a2, v7, a4);\n
            }\n
            cgc_printf(\"\\n
\", a1, a2, a0, a4);\n
            v3 = 1;\n
            return v3;\n
        }\n
        cgc_printf(\"[ERROR] Missing a required tag\\n
\", a1, a2, a3, a4);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4226274:sub_407ce2": null, "4226288:cgc_tbir_read_magic": "long long cgc_tbir_read_magic(void* a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!cgc_tbir_read_nbits(a0, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 2965692278)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4226380:sub_407d4c": null, "4226384:cgc_tbir_read_typef": "long long cgc_tbir_read_typef(void* a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (!cgc_tbir_read_nbits(a0, 16, &v1))\n
    {\n
        cgc_printf(\"da bits failed\\n
\", 16, a2, a3, a4);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v1;\n
    if (v0 != 43690 && v0 != 43707 && v0 != 43724 && v0 != 43741 && v0 != 43758)\n
    {\n
        cgc_printf(\"wrong one\\n
\", 16, a2, a3, a4);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4226588:sub_407e1c": null, "4226592:cgc_tbir_read_header": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
long long cgc_tbir_read_header(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!cgc_tbir_read_width(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (cgc_tbir_read_height(a0))\n
    {\n
        a0->field_38 = a0->field_38 | 1;\n
        v0 = 1;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4226716:sub_407e9c": null, "4226720:cgc_tbir_read_width": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long cgc_tbir_read_width(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!cgc_tbir_read_nbits(a0, 8, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 <= 128)\n
    {\n
        a0->field_14 = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4226852:sub_407f24": null, "4226864:cgc_tbir_read_height": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_tbir_read_height(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v0;\n
    }\n
    else if (!cgc_tbir_read_nbits(a0, 8, &a0->field_18))\n
    {\n
        return v0;\n
    }\n
    else if (a0->field_18 > 128)\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4226973:sub_407f9d": null, "4226976:cgc_tbir_read_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_tbir_read_check(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v3;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        return v3;\n
    }\n
    else if (a1 > 32)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v2 = a0->field_8 * 8;\n
        v1 = a0->field_c * 8 + a0->field_10;\n
        v0 = v2 - v1;\n
        if (a1 > v0)\n
            return v3;\n
        v3 = 1;\n
    }\n
}\n
", "4227136:cgc_tpai_read_pixel": "long long cgc_tpai_read_pixel(unsigned long long a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x8c]\n
    char v1;  // [bp-0x88]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    memcpy(&v1, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Pixel out of bounds\\n
\", 95);\n
    v0 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_tpai_read_nbits(a0, 7, &v0))\n
    {\n
        if (v0 <= 95 && v0)\n
        {\n
            v0 -= 1;\n
            *(a1) = (&v1)[v0];\n
            v2 = 1;\n
            return v2;\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4227341:sub_40810d": null, "4227344:cgc_tpai_read_nbits": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_tpai_read_nbits(struct_0 *a0, unsigned long a1, unsigned int *a2)\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    if (!cgc_tpai_read_check(a0, v2))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v0 = 0; v2 > 0; v2 -= 1)\n
    {\n
        v0 = *((a0->field_0 + v3->field_c));\n
        v0 >>= (7 - a0->field_10) & 31;\n
        v0 &= 1;\n
        v1 = v1 * 2 | v0;\n
        a0->field_10 = (v3->field_10 + 1 >> 31 CONCAT v3->field_10 + 1) /m 8 >> 32;\n
        if (!a0->field_10)\n
        {\n
            v6 = a0;\n
            v6->field_c = v6->field_c + 1;\n
        }\n
    }\n
    *(a2) = v1;\n
    v4 = 1;\n
    return v4;\n
}\n
", "4227580:sub_4081fc": null, "4227584:cgc_tpai_display_image": "long long cgc_tpai_display_image(unsigned int a0[8], unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    unsigned int v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x50]\n
    unsigned int v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned long v8;  // [bp-0x40]\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    unsigned int v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0x24]\n
    char *v15;  // [bp-0x20]\n
    unsigned int v16[8];  // [bp-0x18]\n
    unsigned int v17;  // [bp-0xc]\n
    unsigned long v19;  // rax\n
    unsigned long v20;  // rax\n
    unsigned long v21;  // rax\n
    unsigned long v22;  // rax\n
\n
    *(&v16[0]) = a0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    if (!a0)\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (!cgc_tpai_read_magic(a0))\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (!cgc_tpai_read_width(a0))\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (!cgc_tpai_read_height(a0))\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (!cgc_tpai_read_loadd(a0, &v14))\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (!cgc_tpai_skip_rsrvd(a0))\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
    else if (cgc_tpai_calc_checksum(a0))\n
    {\n
        v14 = v16[6] * a0[5];\n
        if (cgc_allocate(a0, a1, a2, a3))\n
        {\n
            v17 = 0;\n
            return v17;\n
        }\n
        cgc_memset(v15, 32, v14);\n
        v15[v14] = 0;\n
        while (true)\n
        {\n
            if (cgc_tpai_read_pixel(a0, &v13))\n
            {\n
                v8 = a0[7];\n
                switch (v8)\n
                {\n
                case 0:\n
                    v9 = (0 CONCAT v11) /m a0[5];\n
                    a2 = (0 CONCAT v11) /m a0[5] >> 32;\n
                    v10 = a2;\n
                    break;\n
                case 1:\n
                    v9 = (0 CONCAT v11) /m a0[5];\n
                    v7 = a0[5] - 1;\n
                    a2 = (0 CONCAT v11) /m a0[5] >> 32;\n
                    v10 = v7 - a2;\n
                    break;\n
                case 2:\n
                    v6 = a0[6] - 1;\n
                    v9 = v6 - (0 CONCAT v11) /m a0[5];\n
                    a2 = (0 CONCAT v11) /m a0[5] >> 32;\n
                    v10 = a2;\n
                    break;\n
                case 3:\n
                    v4 = a0[6] - 1;\n
                    v9 = v4 - (0 CONCAT v11) /m a0[5];\n
                    v5 = a0[5] - 1;\n
                    a2 = (0 CONCAT v11) /m a0[5] >> 32;\n
                    v10 = v5 - a2;\n
                    break;\n
                case 4:\n
                    v9 = (0 CONCAT v11) /m a0[6] >> 32;\n
                    v19 = (0 CONCAT v11) /m a0[6];\n
                    a2 = v19 / 0x100000000;\n
                    v10 = v19;\n
                    break;\n
                case 5:\n
                    v9 = (0 CONCAT v11) /m a0[6] >> 32;\n
                    v3 = a0[5] - 1;\n
                    v20 = (0 CONCAT v11) /m a0[6];\n
                    a2 = v20 / 0x100000000;\n
                    v10 = v3 - v20;\n
                    break;\n
                case 6:\n
                    v2 = a0[6] - 1;\n
                    v9 = v2 - ((0 CONCAT v11) /m a0[6] >> 32);\n
                    v21 = (0 CONCAT v11) /m a0[6];\n
                    a2 = v21 / 0x100000000;\n
                    v10 = v21;\n
                    break;\n
                case 7:\n
                    v0 = a0[6] - 1;\n
                    v9 = v0 - ((0 CONCAT v11) /m a0[6] >> 32);\n
                    v1 = a0[5] - 1;\n
                    v22 = (0 CONCAT v11) /m a0[6];\n
                    a2 = v22 / 0x100000000;\n
                    v10 = v1 - v22;\n
                    break;\n
                default:\n
                    cgc_deallocate(a0, 32);\n
                    v17 = 0;\n
                    return v17;\n
                }\n
                a3 = a0;\n
                v12 = a0[5] * v9 + v10;\n
                if (v12 > v14)\n
                {\n
                    cgc_printf(\"[ERROR] Pixel out of bounds\\n
\", 32, a2, a0, a4);\n
                    cgc_deallocate(\"[ERROR] Pixel out of bounds\\n
\", 32);\n
                    v17 = 0;\n
                    return v17;\n
                }\n
                v15[v12] = v13;\n
                v11 += 1;\n
            }\n
            else\n
            {\n
                for (v12 = 0; v12 < v14; v12 += 1)\n
                {\n
                    a2 = (0 CONCAT v12) /m a0[5] >> 32;\n
                    if (!a2 && v12)\n
                        cgc_printf(\"\\n
\", a1, a2, a0, a4);\n
                    a3 = v12;\n
                    cgc_printf(\"@c\", v15[a3], a2, a3, a4);\n
                }\n
                cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
                cgc_deallocate(\"\\n
\", a1);\n
                v17 = 1;\n
                return v17;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v17 = 0;\n
        return v17;\n
    }\n
}\n
", "4228724:sub_408674": null, "4228736:cgc_tpai_read_magic": "long long cgc_tpai_read_magic(void* a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!cgc_tpai_read_nbits(a0, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 3411611441)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4228851:sub_4086f3": null, "4228864:cgc_tpai_read_width": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long cgc_tpai_read_width(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(a0, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    a0->field_14 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4228947:sub_408753": null, "4228960:cgc_tpai_read_height": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_tpai_read_height(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(a0, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    a0->field_18 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4229043:sub_4087b3": null, "4229056:cgc_tpai_read_loadd": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
long long cgc_tpai_read_loadd(struct_0 *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_tpai_read_nbits(a0, 3, &v0))\n
    {\n
        *(a1) = v0;\n
        a0->field_1c = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
}\n
", "4229184:cgc_tpai_skip_rsrvd": "long long cgc_tpai_skip_rsrvd(void* a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(a0, 17, &v0))\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!v0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4229286:sub_4088a6": null, "4229296:cgc_tpai_calc_checksum": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_tpai_calc_checksum(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2a]\n
    unsigned short *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!a0->field_10)\n
    {\n
        v4 = a0->field_8 - a0->field_c;\n
        if ((v4 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 2;\n
        v4 -= 1;\n
        if (v4 <= 0)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v3 = a0->field_0 + a0->field_c; v1 < v4; v1 += 1)\n
        {\n
            v2 ^= v3[v1];\n
        }\n
        if (v3[v4] != v2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4229595:sub_4089db": null, "4229600:cgc_tpai_read_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_tpai_read_check(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1 <= 32)\n
    {\n
        v0 = a0->field_10 + a0->field_c * 8;\n
        if (v0 + a1 > (a0->field_8 << 3))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4229760:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:memcpy": null, "5242928:cgc_rint": null, "5242936:cgc_deallocate": null, "5242944:cgc_log10": null, "5242952:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}