{"4272128:_init": "extern struct_0 *g_430230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_430230;\n
    if (g_430230)\n
        v1 = g_430230();\n
    return v1;\n
}\n
", "4272160:sub_413020": "extern unsigned long long g_430250;\n
\n
long long sub_413020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_430250;\n
    goto *(4391512);\n
}\n
", "4272172:sub_41302c": null, "4272176:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4272192:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4272208:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4272224:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4272240:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4272256:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4391488);\n
}\n
", "4272272:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4272309:sub_4130b5": null, "4272310:sub_4130b6": null, "4272320:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_430228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4272361:sub_4130e9": null, "4272368:register_tm_clones": "extern unsigned long long g_430238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4272425:sub_413129": null, "4272432:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_430240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_430240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4272485:sub_413165": null, "4272489:sub_413169": null, "4272496:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4272505:sub_413179": null, "4272512:cgc_get_num_for_char": "extern unsigned long long ALPHABET;\n
\n
long long cgc_get_num_for_char(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 64)\n
        {\n
            v1 = 128;\n
            return v1;\n
        }\n
        if (a0 == *((ALPHABET + v0)))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4272606:sub_4131de": null, "4272608:cgc_encode": "extern unsigned long long ALPHABET;\n
\n
long long cgc_encode(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    char v2;  // [bp-0x39]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    char *v5;  // [bp-0x30]\n
    unsigned long v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned int v9;  // eax\n
\n
    v6 = a1 * 2;\n
    v5 = cgc_calloc(1, v6 + 1);\n
    if (!v5)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
        {\n
            v5[1 + v6] = 0;\n
            v7 = v5;\n
            return v7;\n
        }\n
        v2 = a0[v3];\n
        v9 = v2;\n
        v1 = (v9 >> 31 CONCAT v9) /m 5;\n
        v0 = (v2 >> 31 CONCAT v2) /m 5 >> 32;\n
        if (v1 >= 64)\n
            break;\n
        if (v0 >= 64)\n
            break;\n
        v5[v4] = *((ALPHABET + v1));\n
        v5[1 + v4] = *((ALPHABET + v0));\n
        v4 += 2;\n
        v3 += 1;\n
    }\n
    cgc_free(v5);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4272903:sub_413307": null, "4272912:cgc_decode": "long long cgc_decode(char *a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x33]\n
    char v2;  // [bp-0x32]\n
    char v3;  // [bp-0x31]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v6 = cgc_calloc(1, a1 / 2);\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
            v7 = v6;\n
            return v7;\n
        }\n
        v3 = a0[v4];\n
        v2 = a0[1 + v4];\n
        v1 = cgc_get_num_for_char(v3);\n
        v0 = cgc_get_num_for_char(v2);\n
        if (v1 >= 127)\n
            break;\n
        if (v0 >= 127)\n
            break;\n
        v6[v5] = v1 * 5 + v0;\n
        v5 += 1;\n
        v4 += 2;\n
    }\n
    cgc_free(v6);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4273155:sub_413403": null, "4273168:cgc_pos_ceil": "long long cgc_pos_ceil()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long v4;  // xmm0lq\n
    unsigned long long v5;  // xmm0lq\n
\n
    v1 = v4;\n
    v0 = v1;\n
    v5 = v0;\n
    if ((((CmpF(v5, v1) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF Load(addr=stack_base-24, size=8, endness=Iend_LE)) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v2 = v0 + 1;\n
    return v2;\n
}\n
", "4273236:sub_413454": null, "4273248:cgc_malloc_init": "extern unsigned long long malloc_array;\n
\n
long long cgc_malloc_init()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0 = cgc_allocate(v2, v3, v4);\n
    if (v0)\n
        cgc__terminate(v2);\n
    if (!malloc_array)\n
        cgc__terminate(v2);\n
    return 0;\n
}\n
", "4273338:sub_4134ba": null, "4273344:cgc_buf_is_numeric": "long long cgc_buf_is_numeric(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (a0[v1] >= 48 && a0[v1] <= 57)\n
            goto LABEL_41353f;\n
        if (a0[v1] != 45)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
LABEL_41353f:\n
        v1 += 1;\n
    }\n
}\n
", "4273506:sub_413562": null, "4273520:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4273591:sub_4135b7": null, "4273600:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
\n
    v4 = 1;\n
    v3 = 0;\n
    if (a0[v3] == 45)\n
        v4 = -1;\n
    v2 = 0;\n
    v1 = v3;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
            break;\n
        v2 = v2 * 10 + a0[v1] - 48;\n
        v1 += 1;\n
    }\n
    v2 *= v4;\n
    return v2;\n
}\n
", "4273757:sub_41365d": null, "4273760:cgc_read_ascii_line": "long long cgc_read_ascii_line(unsigned long long a0, char a1[4096], unsigned long long a2)\n
{\n
    char v0;  // [bp-0x45]\n
    unsigned int v1;  // [bp-0x44]\n
    void* v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v8;  // rcx\n
\n
    v5 = a0;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3 < a2)\n
            v0 = v3 < 4095;\n
        if (!(v0 & 1))\n
        {\n
LABEL_41375a:\n
            a1[4095] = 0;\n
            v6 = v4;\n
            break;\n
        }\n
        v2 = 0;\n
        v1 = cgc_receive(a0, a1, a2, v8);\n
        if (v1)\n
        {\n
LABEL_41373a:\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (!(v2 == 1))\n
            goto LABEL_41373a;\n
        v4 += 1;\n
        if (a1[v3] == 10)\n
        {\n
LABEL_413724:\n
            a1[v3] = 0;\n
            goto LABEL_41375a;\n
        }\n
        else\n
        {\n
            if (!a1[v3])\n
                goto LABEL_413724;\n
            v3 += 1;\n
        }\n
    }\n
    return v6;\n
}\n
", "4274039:sub_413777": null, "4274048:cgc_strtok": "extern struct_0 *STRTOK;\n
extern char g_416068;\n
\n
long long cgc_strtok(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    if (v2)\n
        STRTOK = &g_416068;\n
    else\n
        v2 = STRTOK;\n
    v1 = cgc_strlen(v2);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < v1)\n
        {\n
            if (*((v2 + v0)) == a1)\n
            {\n
                *((v2 + v0)) = 0;\n
                STRTOK = v2 + v0 + 1;\n
                v3 = v2;\n
                return v3;\n
            }\n
            if (!*((v2 + v0)) && v0)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
}\n
", "4274319:sub_41388f": null, "4274320:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30]\n
    unsigned long long v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1 * a0;\n
    v1 = cgc_malloc(v2);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v1[v0] = 0;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4274451:sub_413913": null, "4274464:cgc_malloc": "extern unsigned long long malloc_array;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long long v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= 65535)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1[0] = malloc_array + v2 * 16;\n
        if (!v1[0])\n
            break;\n
        v2 += 1;\n
    }\n
    v0 = cgc_allocate(a0, v5, v6);\n
    if (v0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[1] = a0;\n
    v3 = v1[0];\n
    return v3;\n
}\n
", "4274638:sub_4139ce": null, "4274640:cgc_recv_until": "long long cgc_recv_until(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x30]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    v3 = a2;\n
    v2 = 0;\n
    v1 = cgc_receive(a0, a1, a2, a3);\n
    if (v1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v2)\n
        {\n
            v5 = -2;\n
            return v5;\n
        }\n
        else if (a3 != a1[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4274808:sub_413a78": null, "4274816:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a2)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = cgc_transmit(a0, a1, a2, v7);\n
        if (v0)\n
        {\n
            v5 = 3;\n
            return v5;\n
        }\n
        v2 = v1 + v2;\n
    }\n
}\n
", "4274979:sub_413b23": null, "4274992:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x20]\n
\n
    v1 = cgc_strlen(a0);\n
    v0 = &a0[v1];\n
    cgc_memcpy(v0, a1, cgc_strlen(a1));\n
    return a0;\n
}\n
", "4275076:sub_413b84": null, "4275088:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        a0[v0] = a1[v0];\n
    }\n
    return v0;\n
}\n
", "4275179:sub_413beb": null, "4275184:cgc_free": "extern unsigned long long malloc_array;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned long long v4[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
\n
    if (!a0)\n
        return v4;\n
    v2 = 65534;\n
    while (true)\n
    {\n
        if (v2 < 0)\n
            return v2 - 1;\n
        v1[0] = malloc_array + v2 * 16;\n
        if (v1 && a0 == v1[0])\n
        {\n
            v0 = cgc_deallocate(a0, v5);\n
            v1[0] = 0;\n
            v4 = v1;\n
            *((v4 + 8)) = 0;\n
            return v1;\n
        }\n
        v4 = v2 - 1;\n
        v2 = v4;\n
    }\n
}\n
", "4275355:sub_413c9b": null, "4275360:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a0[v0] == a1[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4275488:cgc_itoaB10": "long long cgc_itoaB10(unsigned long a0)\n
{\n
    char v0;  // [bp-0x41]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    char *v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    char *v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x18]\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v11;  // [bp-0x8]\n
    unsigned long long v13;  // rbp\n
    unsigned int v14;  // eax\n
    unsigned int v16;  // eax\n
\n
    v13 = &v11;\n
    v9 = 12;\n
    v8 = cgc_malloc(v9);\n
    if (!v8)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    v7 = a0;\n
    if (!a0)\n
    {\n
        cgc_memcpy(v8, \"0\", 2);\n
        v10 = v8;\n
        return v10;\n
    }\n
    v6 = 0;\n
    if (a0 < 0)\n
    {\n
        v6 = 1;\n
        v7 = -(v7);\n
    }\n
    v5 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v5 < v9)\n
            v0 = v7;\n
        if (!(v0 & 1))\n
            break;\n
        v14 = v7;\n
        v4 = (v14 >> 31 CONCAT v14) /m 10 / 0x100000000;\n
        if (v4 > 9)\n
            v8[v5] = v4 + 87;\n
        else\n
            v8[v5] = v4 + 48;\n
        v16 = v7;\n
        v7 = (v16 >> 31 CONCAT v16) /m 10;\n
        v5 += 1;\n
    }\n
    if (v6 == 1)\n
        v8[1 + v5] = 45;\n
    v3 = cgc_malloc(v9);\n
    v2 = cgc_strlen(v8);\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        v3[v1] = v8[1 + v2 + -1 * v1];\n
    }\n
    cgc_free(v8);\n
    v10 = v3;\n
    return v10;\n
}\n
", "4275915:sub_413ecb": null, "4275920:cgc_malloc_reset": "extern unsigned long long malloc_array;\n
\n
long long cgc_malloc_reset()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long long v1[2];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rdi\n
    unsigned long long v5;  // rsi\n
\n
    for (v2 = 65534; v2 >= 0; v2 -= 1)\n
    {\n
        v1[0] = malloc_array + v2 * 16;\n
        if (v1 && v1[0])\n
        {\n
            v0 = cgc_deallocate(v4, v5);\n
            v1[0] = 0;\n
            v1[1] = 0;\n
        }\n
    }\n
    return v2 - 1;\n
}\n
", "4276063:sub_413f5f": null, "4276064:cgc_alloc_sample_st": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_alloc_sample_st(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_malloc(16);\n
    if (!v0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    v0->field_0 = cgc_malloc(a0 * 4);\n
    if (!v0->field_0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0->field_8 = a0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4276195:sub_413fe3": null, "4276208:cgc_get_compound_by_idx": "extern char chem_formulas;\n
\n
long long cgc_get_compound_by_idx(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 > 2999)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = &(&chem_formulas)[16 * a0];\n
    return v0;\n
}\n
", "4276270:sub_41402e": null, "4276272:cgc_get_sample_name_at_idx": "extern unsigned long long chem_formulas;\n
\n
long long cgc_get_sample_name_at_idx(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *((*(a0) + a1 * 4));\n
    return (&chem_formulas)[2 * v0];\n
}\n
", "4276323:sub_414063": null, "4276336:cgc_get_chem_ref_at_idx": "long long cgc_get_chem_ref_at_idx(unsigned long long *a0, unsigned long a1)\n
{\n
    return *((*(a0) + a1 * 4));\n
}\n
", "4276363:sub_41408b": null, "4276368:cgc_set_sample_at_idx": "long long cgc_set_sample_at_idx(unsigned long long *a0, unsigned long a1, unsigned long a2)\n
{\n
    *((*(a0) + a1 * 4)) = a2;\n
    return 0;\n
}\n
", "4276403:sub_4140b3": null, "4276416:cgc_check_compound_idx_in_sample": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_check_compound_idx_in_sample(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0->field_8)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_get_chem_ref_at_idx(a0, v0) != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4276522:sub_41412a": null, "4276528:cgc_reconstruct_sample_from_zoom": "long long cgc_reconstruct_sample_from_zoom(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned long long *v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v6 = 0;\n
    v5 = 0;\n
    for (v4 = 0; v4 < 2999; v4 += 1)\n
    {\n
        v6 = cgc_check_compound_idx_in_zoom(a0, v4) + v6;\n
        if (v6 == 1)\n
            v5 += 1;\n
    }\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v3 = cgc_alloc_sample_st(v6);\n
    if (!v3)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v2 = 0;\n
    for (v1 = 0; v1 < 2999; v1 += 1)\n
    {\n
        v0 = cgc_check_compound_idx_in_zoom(a0, v1);\n
        if (v0 == 1)\n
        {\n
            cgc_set_sample_at_idx(v3, v2, v1);\n
            v2 += 1;\n
        }\n
    }\n
    v7 = v3;\n
    return v7;\n
}\n
", "4276803:sub_414243": null, "4276816:cgc_check_compound_idx_in_zoom": "extern char chem_formulas;\n
\n
long long cgc_check_compound_idx_in_zoom(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x20]\n
\n
    v3 = *(&(&chem_formulas)[16 * a1]);\n
    v2 = cgc_strlen(v3);\n
    v1 = cgc_hash_pair_buf(v3, v2);\n
    v0 = cgc_zoom_check(v1, a0);\n
    cgc_free(v1);\n
    return v0;\n
}\n
", "4276919:sub_4142b7": null, "4276928:cgc_get_npages": "long long cgc_get_npages()\n
{\n
    return cgc_pos_ceil();\n
}\n
", "4276947:sub_4142d3": null, "4276960:cgc_get_command_from_input": "extern unsigned int commands;\n
\n
long long cgc_get_command_from_input(char *a0)\n
{\n
    char *v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned long v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = cgc_strtok(a0, 32);\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < 4)\n
        {\n
            v0 = *(&(&commands)[2 + 6 * v2]);\n
            v1 = v3;\n
            if (!cgc_memcmp(v0, v1, cgc_strlen(*(&(&commands)[2 + 6 * v2]))) && (&commands)[6 * v2] > 0)\n
            {\n
                (&commands)[6 * v2] = (&commands)[6 * v2] - 1;\n
                v4 = *(&(&commands)[4 + 6 * v2]);\n
                return v4;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4277255:sub_414407": null, "4277264:cgc_copy_new_comp_name": "long long cgc_copy_new_comp_name(char *a0, char *a1)\n
{\n
    return cgc_memcpy(a0, a1, 128);\n
}\n
", "4277304:sub_414438": null, "4277312:cgc_gen_chem_name": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_gen_chem_name(char *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    char **v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = 8;\n
    for (v3 = 0; v3 < a1->field_8; v3 += 1)\n
    {\n
        if (v3 * v4 == 128)\n
            break;\n
        v2 = cgc_get_compound_by_idx(cgc_get_chem_ref_at_idx(a1, v3));\n
        if (!v2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        *(&v1) = cgc_strlen(*(v2));\n
        if (*(&v1) > v4)\n
            v1 = v4;\n
        cgc_memcpy(&a0[v3 * v4], *(v2), v1);\n
    }\n
    v0 = cgc_malloc(128);\n
    cgc_memcpy(v0, a0, 128);\n
    v5 = v0;\n
    return v5;\n
}\n
", "4277563:sub_41453b": null, "4277568:cgc_mix_cmd": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[127];\n
    unsigned int field_80;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_2;\n
\n
extern char last_compound;\n
\n
long long cgc_mix_cmd(char *a0)\n
{\n
    unsigned long long v0;  // [bp-0x88]\n
    unsigned long long v1;  // [bp-0x80]\n
    unsigned long v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x70]\n
    struct_2 *v4;  // [bp-0x68]\n
    unsigned int v5;  // [bp-0x5c]\n
    unsigned long long v6;  // [bp-0x58], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x4c]\n
    struct_1 *v8;  // [bp-0x48]\n
    struct_0 *v9;  // [bp-0x40]\n
    unsigned long long v10;  // [bp-0x38]\n
    unsigned long v11;  // [bp-0x30]\n
    char *v12;  // [bp-0x28]\n
    unsigned long v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0xc]\n
\n
    v13 = cgc_strtok(a0, 32);\n
    if (!v13)\n
    {\n
        v14 = 2;\n
        return v14;\n
    }\n
    v12 = cgc_strtok(NULL, 32);\n
    if (!v12)\n
    {\n
        v14 = 2;\n
        return v14;\n
    }\n
    v11 = cgc_strtok(NULL, 32);\n
    if (!v11)\n
    {\n
        v14 = 2;\n
        return v14;\n
    }\n
    if (v11 && v13)\n
    {\n
        v1 = v11;\n
        v10 = cgc_load_zoom_filter(v1, cgc_get_sample_n_bits(25));\n
        if (!v10)\n
        {\n
            v14 = 1;\n
            return v14;\n
        }\n
        v9 = cgc_reconstruct_sample_from_zoom(v10);\n
        if (!v9)\n
        {\n
            v14 = 1;\n
            return v14;\n
        }\n
        v8 = cgc_calloc(1, 132);\n
        for (v7 = 131; v7 < 0x1000; v7 += 1)\n
        {\n
            (&v8->field_0)[v7] = 12;\n
        }\n
        if (!v8)\n
        {\n
            v14 = 1;\n
            return v14;\n
        }\n
        v6 = 0x3ff0000000000000;\n
        for (v5 = 0; v5 < v9->field_8; v5 += 1)\n
        {\n
            v4 = cgc_get_compound_by_idx(cgc_get_chem_ref_at_idx(v9, v5));\n
            if (!v4)\n
            {\n
                v14 = 1;\n
                return v14;\n
            }\n
            s_58 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base-104, size=8, endness=Iend_LE) + 0x8<64>), size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-88, size=8, endness=Iend_LE))))<8>\n
        }\n
        v8->field_80 = v6;\n
        if (v12 && cgc_strlen(v12) >= 3)\n
        {\n
            cgc_copy_new_comp_name(v8, v12);\n
            v3 = \"New compound: \";\n
            v0 = v3;\n
            cgc_transmit_all(1, v0, cgc_strlen(v3));\n
            v2 = cgc_strlen(v8);\n
            cgc_memcpy(&last_compound, v8, v2);\n
            cgc_transmit_all(1, v12, v2);\n
            cgc_transmit_all(1, \"\\n
\", 1);\n
            v14 = 0;\n
            return v14;\n
        }\n
        v14 = 1;\n
        return v14;\n
    }\n
    v14 = 2;\n
    return v14;\n
}\n
", "4278245:sub_4147e5": null, "4278256:cgc_list_cmd": "long long cgc_list_cmd(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = cgc_strlen(a0);\n
    if (!a0)\n
    {\n
        v2 = 2;\n
        return v2;\n
    }\n
    else if (cgc_buf_is_numeric(a0) == 1)\n
    {\n
        v0 = cgc_atoi(a0);\n
        if (v0 < 0)\n
        {\n
            v2 = 4;\n
            return v2;\n
        }\n
        v2 = cgc_transmit_compound_list_page(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 3;\n
        return v2;\n
    }\n
}\n
", "4278396:sub_41487c": null, "4278400:cgc_transmit_compound_list_page": "long long cgc_transmit_compound_list_page(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = cgc_get_npages();\n
    if (a0 >= v2)\n
    {\n
        v3 = 2;\n
        return v3;\n
    }\n
    v1 = a0 * 25;\n
    v0 = v1 + 25;\n
    if (v0 > 2999)\n
        v0 = 2999;\n
    v3 = cgc_transmit_compound_list(v1, v0);\n
    return v3;\n
}\n
", "4278502:sub_4148e6": null, "4278512:cgc_quit_cmd": "long long cgc_quit_cmd(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp+0x8]\n
    unsigned long long v1;  // [bp+0x10]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc__terminate(a0);\n
    return cgc_prep_cmd(a0, v2, v3, v4, v5, v6, v0, v1);\n
}\n
", "4278544:cgc_prep_cmd": "long long cgc_prep_cmd(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned long long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (cgc_buf_is_numeric(a0) != 1)\n
    {\n
        v2 = 2;\n
        return v2;\n
    }\n
    v1 = cgc_sample_compounds(a0, 1000);\n
    if (!v1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v0 = cgc_transmit_compound_sample_zoom(v1);\n
    cgc_free_sample_st(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4278671:sub_41498f": null, "4278672:cgc_sample_compounds": "long long cgc_sample_compounds(char *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned long long *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a1 > 2999)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_crazy_hash(a0, cgc_strlen(a0), 3405690036);\n
    v1 = cgc_alloc_sample_st(a1);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        cgc_set_sample_at_idx(v1, v0, (0 CONCAT v2) /m 2999 >> 32);\n
        v2 = cgc_crazy_hash(&v2, 4, v2);\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4278886:sub_414a66": null, "4278896:cgc_transmit_compound_sample_zoom": "long long cgc_transmit_compound_sample_zoom(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = cgc_zoom_buf(a0);\n
    if (!v0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    cgc_transmit_line_nl(v0);\n
    cgc_free(v0);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4278978:sub_414ac2": null, "4278992:cgc_free_sample_st": "long long cgc_free_sample_st(unsigned long long *a0)\n
{\n
    cgc_free(*(a0));\n
    return cgc_free(a0);\n
}\n
", "4279031:sub_414af7": null, "4279040:cgc_transmit_compound_list": "extern unsigned long long chem_formulas;\n
\n
long long cgc_transmit_compound_list(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a1 > a0 && a0 <= 2999 && a1 <= 2999)\n
    {\n
        for (v0 = a0; v0 < a1; v0 += 1)\n
        {\n
            cgc_transmit_line_nl((&chem_formulas)[2 * v0]);\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4279178:sub_414b8a": null, "4279184:cgc_transmit_line_nl": "long long cgc_transmit_line_nl(char *a0)\n
{\n
    cgc_transmit_all(1, a0, cgc_strlen(a0));\n
    return cgc_transmit_all(1, \"\\n
\", 1);\n
}\n
", "4279258:sub_414bda": null, "4279264:cgc_make_compound_sample_zoom": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned long long chem_formulas;\n
\n
long long cgc_make_compound_sample_zoom(struct_0 *a0)\n
{\n
    unsigned long long v0;  // [bp-0x60]\n
    unsigned long long v1;  // [bp-0x58]\n
    unsigned long long v2;  // [bp-0x50]\n
    unsigned long long v3;  // [bp-0x48]\n
    char *v4;  // [bp-0x40]\n
    char *v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    char *v8;  // [bp-0x28]\n
    unsigned long long v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v9 = cgc_new_zoom_filter(cgc_n_elements_from_sampsz(a0->field_8));\n
    if (!v9)\n
    {\n
        v8 = \"failed new zdf\";\n
        v2 = v8;\n
        cgc_transmit_all(1, v2, cgc_strlen(v8));\n
        v10 = 0;\n
        return v10;\n
    }\n
    v7 = 0;\n
    while (true)\n
    {\n
        if (v7 >= a0->field_8)\n
        {\n
            v10 = v9;\n
            return v10;\n
        }\n
        v6 = cgc_get_chem_ref_at_idx(a0, v7);\n
        if (v6 > 2999)\n
        {\n
            v5 = \"failed new zdf2\";\n
            v1 = v5;\n
            cgc_transmit_all(1, v1, cgc_strlen(v5));\n
            cgc_zoom_free(v9);\n
            v10 = 0;\n
            return v10;\n
        }\n
        v4 = (&chem_formulas)[2 * v6];\n
        v0 = v4;\n
        v3 = cgc_hash_pair_buf(v0, cgc_strlen(v4));\n
        cgc_zoom_add(v3, v9);\n
        v7 += 1;\n
    }\n
}\n
", "4279591:sub_414d27": null, "4279600:cgc_free_zoombuf": "long long cgc_free_zoombuf(unsigned long long a0)\n
{\n
    return cgc_free(a0);\n
}\n
", "4279627:sub_414d4b": null, "4279632:cgc_zoom_buf": "typedef struct struct_0 {\n
    char *field_0;\n
    char padding_8[16];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long cgc_zoom_buf(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = cgc_make_compound_sample_zoom(a0);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = cgc_encode(v1->field_0, *(&v1->field_18));\n
    cgc_zoom_free(v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4279732:sub_414db4": null, "4279744:cgc_new_zoom_filter": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned int field_20;\n
} struct_0;\n
\n
long long cgc_new_zoom_filter(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // xmm0lq\n
    int v6;  // xmm0\n
    int v8;  // xmm0\n
    int v9;  // xmm0\n
\n
    v2 = a0;\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = cgc_malloc(40);\n
    if (!v0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0->field_20 = 0;\n
    v0->field_8 = v2;\n
    v1 = 4624283480305377741;\n
    v5 = v2;\n
    v0->field_c = (v6 * (0 CONCAT v1));\n
    v8 = 0;\n
    *(&v8) = v1;\n
    v9 = v8 * (0 CONCAT 4604418534313441775);\n
    v0->field_10 = v9;\n
    *(&v0->field_18) = (v0->field_c >> 3) + 1;\n
    v0->field_0 = cgc_calloc(1, *(&v0->field_18));\n
    if (!v0->field_0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v0;\n
    return v3;\n
}\n
", "4280012:sub_414ecc": null, "4280016:cgc_get_sample_n_bits": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long cgc_get_sample_n_bits(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = cgc_new_zoom_filter(cgc_n_elements_from_sampsz(a0));\n
    if (!v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v0->field_c;\n
    cgc_zoom_free(v0);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4280112:cgc_n_elements_from_sampsz": "double cgc_n_elements_from_sampsz(long long a0)\n
{\n
    int tmp_55;  // tmp #55\n
    int tmp_57;  // tmp #57\n
    int tmp_56;  // tmp #56\n
    int tmp_91;  // tmp #91\n
    int tmp_93;  // tmp #93\n
    int tmp_92;  // tmp #92\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v5;  // rax\n
    int v6;  // xmm0\n
\n
    v2 = a0;\n
    v1 = 0x3ff4000000000000;\n
    tmp_55 = InterleaveLOV(tmp_57, tmp_56);\n
    v5 = (((tmp_55 - 0x45300000000000004330000000000000 >> 64) CONCAT (tmp_55 - 0x45300000000000004330000000000000 >> 64)) + tmp_55 - 0x45300000000000004330000000000000) * (0 CONCAT v1);\n
    tmp_91 = SubV(tmp_93, tmp_92);\n
    v6 = tmp_91;\n
    v0 = v5 | v6 & v5 >> 63;\n
    return v6;\n
}\n
", "4280230:sub_414fa6": null, "4280240:cgc_zoom_free": "long long cgc_zoom_free(unsigned long long *a0)\n
{\n
    cgc_free(*(a0));\n
    return cgc_free(a0);\n
}\n
", "4280279:sub_414fd7": null, "4280288:cgc_load_zoom_filter": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_load_zoom_filter(char *a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x40]\n
    unsigned long long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x28]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v4) = cgc_strlen(a0);\n
    v3 = cgc_decode(a0, *(&v4));\n
    if (!v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(a0) >> 1;\n
    v1 = cgc_malloc(40);\n
    v1->field_18 = v2;\n
    v1->field_c = a1;\n
    v0 = 4624283480305377741;\n
    v1->field_10 = (0 CONCAT v0) * (0 CONCAT 4604418534313441775);\n
    v1->field_0 = v3;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4280483:sub_4150a3": null, "4280496:cgc_crazy_hash": "long long cgc_crazy_hash(unsigned int *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2[3];  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
\n
    v6 = a2;\n
    v5 = a1 / 4;\n
    for (v4 = 0; v4 < v5; v4 += 1)\n
    {\n
        v3 = a0[v4];\n
        v3 *= 305781454;\n
        v3 = v3 * 0x8000 | (v3 >> 17);\n
        v3 *= 2562341086;\n
        v6 = v3 ^ v6;\n
        v6 = (v6 * 0x2000 | (v6 >> 19)) * 5 - 21350118;\n
    }\n
    *(&v2) = &a0[v5];\n
    v1 = 0;\n
    v0 = a1 & 3;\n
    if (v0 != 1)\n
    {\n
        if (v0 != 2)\n
        {\n
            if (!(v0 == 3))\n
                goto LABEL_415206;\n
            v1 = v2[2] * 0x10000 ^ v1;\n
        }\n
        v1 = v2[1] * 0x100 ^ v1;\n
    }\n
    v1 = v2[0] ^ v1;\n
    v1 *= 305781454;\n
    v1 = v1 * 0x8000 | (v1 >> 17);\n
    v1 *= 2562341086;\n
    v6 = v1 ^ v6;\n
LABEL_415206:\n
    v6 ^= a1;\n
    v6 = (v6 >> 16) ^ v6;\n
    v6 *= 848869921;\n
    v6 = (v6 >> 13) ^ v6;\n
    v6 *= 1463722387;\n
    v6 = (v6 >> 16) ^ v6;\n
    return v6;\n
}\n
", "4280912:cgc_hash_pair_buf": "long long cgc_hash_pair_buf(unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
\n
    v2 = cgc_crazy_hash(a0, a1, 2538058380);\n
    v1 = cgc_crazy_hash(a0, a1, v2);\n
    *(&v0[0]) = cgc_malloc(8);\n
    v0[0] = v2;\n
    v0[1] = v1;\n
    return v0;\n
}\n
", "4281011:sub_4152b3": null, "4281024:cgc_zoom_add": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[12];\n
    unsigned int field_20;\n
} struct_0;\n
\n
long long cgc_zoom_add(unsigned int a0[2], struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
\n
    for (v0 = 0; v0 < a1->field_10; v0 += 1)\n
    {\n
        v4 = (0 CONCAT a0[0] + a0[1] * v0) /m a1->field_c >> 32;\n
        v3 = v4 >> 3;\n
        v1 = *((a1->field_0 + v3));\n
        v2 = 1 << ((v4 & 7) & 31);\n
        if (!(v1 & v2))\n
        {\n
            *((a1->field_0 + v3)) = v1 | v2;\n
            a1->field_20 = a1->field_20 + 1;\n
        }\n
    }\n
    return v0;\n
}\n
", "4281203:sub_415373": null, "4281216:cgc_zoom_check": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_zoom_check(unsigned int a0[2], struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x31]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = 0;\n
    for (v0 = 0; v0 < a1->field_10; v0 += 1)\n
    {\n
        v4 = (0 CONCAT a0[0] + a0[1] * v0) /m a1->field_c >> 32;\n
        v3 = v4 >> 3;\n
        v1 = *((a1->field_0 + v3));\n
        v2 = 1 << ((v4 & 7) & 31);\n
        if ((v1 & v2))\n
            v5 += 1;\n
    }\n
    if (v5 == a1->field_10)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4281414:sub_415446": null, "4281424:main": "int main(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x4c]\n
    struct struct_0 **v2;  // [bp-0x48]\n
    unsigned long v3;  // [bp-0x40]\n
    char v4[4096];  // [bp-0x38]\n
    char *v5;  // [bp-0x30]\n
    char v6;  // [bp-0x1c]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned long v11;  // rsi\n
\n
    v9 = 0;\n
    v8 = a0;\n
    v7 = v11;\n
    cgc_malloc_init();\n
    if (*(&v6))\n
        cgc__terminate(a0);\n
    v5 = \"Welcome to the new chemical discovery service!\";\n
    cgc_transmit_line_nl(v5);\n
    while (true)\n
    {\n
        *(&v4[0]) = cgc_calloc(1, 0x1000);\n
        if (v4)\n
        {\n
            v3 = cgc_read_ascii_line(0, v4, 0x1000);\n
            if (v3 < 3)\n
            {\n
                cgc_free(v4);\n
            }\n
            else\n
            {\n
                v2 = cgc_get_command_from_input(v4);\n
                if (!v2)\n
                    cgc__terminate(a0);\n
                v1 = cgc_strlen(v4);\n
                if (v1 > 0x1000)\n
                    cgc__terminate(a0);\n
                v0 = v2(&v4[v1 + 1]);\n
                if (v0)\n
                    cgc__terminate(a0);\n
                cgc_free(v4);\n
            }\n
        }\n
    }\n
}\n
", "4281704:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_allocate": null, "5242912:cgc_deallocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}