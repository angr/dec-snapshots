{"4202496:_init": "extern struct_0 *g_40d678;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d678;\n
    if (g_40d678)\n
        v1 = g_40d678();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40d698;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d698;\n
    goto *(4249248);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4249224);\n
}\n
", "4202688:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202725:sub_4020e5": null, "4202726:sub_4020e6": null, "4202736:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_40d670;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4202777:sub_402119": null, "4202784:register_tm_clones": "extern unsigned long long g_40d680;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202841:sub_402159": null, "4202848:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned long long g_40d688;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__TMC_END__)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d688)\n
    {\n
        __TMC_END__ = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202901:sub_402195": null, "4202905:sub_402199": null, "4202912:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202921:sub_4021a9": null, "4202928:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202979:sub_4021e3": null, "4202992:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203043:sub_402223": null, "4203056:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203107:sub_402263": null, "4203120:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203193:sub_4022b9": null, "4203200:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203273:sub_402309": null, "4203280:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203331:sub_402343": null, "4203344:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4203404:sub_40238c": null, "4203408:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4203468:sub_4023cc": null, "4203472:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203563:sub_40242b": null, "4203568:cgc_initFileSystem": "extern unsigned long long fileCursors;\n
extern struct_0 *fileSystem;\n
extern char freeList;\n
extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_initFileSystem(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if ((0 CONCAT a1) /m a0 >> 32)\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
    v1 = (0 CONCAT a2) /m a1;\n
    v2 = (0 CONCAT a2) /m a0;\n
    if (v1 > (a1 << 3))\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
    v0 = cgc_allocate(a0, a1, a2);\n
    if (v0 == 3)\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    else if (!v0)\n
    {\n
        cgc_bzero(fileSystem, a2);\n
        masterBlocks = fileSystem;\n
        masterBlocks->field_0 = 1;\n
        masterBlocks->field_4 = a2;\n
        masterBlocks->field_8 = a1;\n
        masterBlocks->field_c = v1;\n
        masterBlocks->field_10 = 2;\n
        masterBlocks->field_14 = 1;\n
        masterBlocks->field_18 = a1 - 8 >> 6;\n
        masterBlocks->field_1c = a1 - 8 >> 2;\n
        masterBlocks->field_20 = 0;\n
        *(&freeList) = fileSystem + a1;\n
        rootDir = &fileSystem->field_0 + 2 * a1;\n
        cgc_setBlockInUse(0);\n
        cgc_setBlockInUse(1);\n
        cgc_setBlockInUse(2);\n
        rootDir->field_0 = a1 - 8 >> 6;\n
        rootDir->field_2 = 0;\n
        rootDir->field_4 = 0;\n
        cgc_bzero(&fileCursors, 220);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
}\n
", "4204061:sub_40261d": null, "4204064:cgc_setBlockInUse": "extern unsigned long long freeList;\n
\n
long long cgc_setBlockInUse(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v3;  // rcx\n
\n
    v1 = a0 >> 3;\n
    v0 = a0 & 7;\n
    v3 = v1;\n
    v3[freeList] = v3[freeList] | (1 << (v0 & 31));\n
    return freeList;\n
}\n
", "4204121:sub_402659": null, "4204128:cgc_statusFile": "extern unsigned long long fileSystem;\n
extern struct_1 *masterBlocks;\n
extern struct_0 *rootDir;\n
\n
long long cgc_statusFile(unsigned long long a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v2 = -6;\n
        return v2;\n
    }\n
    else if (rootDir)\n
    {\n
        v0 = masterBlocks->field_8;\n
        while (true)\n
        {\n
            for (v1 = 0; v1 < masterBlocks->field_18; v1 += 1)\n
            {\n
                if (!cgc_strcmp(&rootDir[8 * v1].padding_0[1 + 24], a0))\n
                {\n
                    if (a1)\n
                    {\n
                        a1[1] = rootDir[2 + 8 * v1].field_4;\n
                        *(&a1[0]) = rootDir[3 + 8 * v1].padding_0;\n
                    }\n
                    rootDir = fileSystem + v0 * 2;\n
                    v2 = 0;\n
                    return v2;\n
                }\n
            }\n
            if (!rootDir->field_4)\n
            {\n
                rootDir = fileSystem + v0 * 2;\n
                v2 = -1;\n
                return v2;\n
            }\n
            rootDir = fileSystem + rootDir->field_4 * v0;\n
        }\n
    }\n
    else\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
}\n
", "4204512:cgc_openFile": "extern unsigned int fileCursors;\n
extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_openFile(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    char v4;  // [bp-0x9]\n
\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v4 = 250;\n
        return v4;\n
    }\n
    else if (rootDir)\n
    {\n
        v0 = masterBlocks->field_8;\n
        rootDir = fileSystem + v0 * 2;\n
        while (true)\n
        {\n
            for (v3 = 0; v3 < masterBlocks->field_18; v3 += 1)\n
            {\n
                if (cgc_strcmp(&rootDir[8 * v3].padding_0[1 + 24], a0))\n
                {\n
                    v1 += 1;\n
                }\n
                else\n
                {\n
                    if (a1 != 1 && rootDir[1 + 8 * v3].field_4 != a1 && !rootDir[2 + 8 * v3].padding_0[0])\n
                    {\n
                        rootDir = fileSystem + v0 * 2;\n
                        v4 = 242;\n
                        return v4;\n
                    }\n
                    for (v2 = 0; v2 < 5; v2 += 1)\n
                    {\n
                        if ((&fileCursors)[11 * v2] == 1 && (&fileCursors)[1 + 11 * v2] == v1)\n
                        {\n
                            rootDir = fileSystem + v0 * 2;\n
                            v4 = 243;\n
                            return v4;\n
                        }\n
                    }\n
                    for (v2 = 0; v2 < 5; v2 += 1)\n
                    {\n
                        if (!(&fileCursors)[11 * v2])\n
                            break;\n
                    }\n
                    if (v2 == 5)\n
                    {\n
                        rootDir = fileSystem + v0 * 2;\n
                        v4 = 246;\n
                        return v4;\n
                    }\n
                    (&fileCursors)[11 * v2] = 1;\n
                    (&fileCursors)[1 + 11 * v2] = v1;\n
                    (&fileCursors)[2 + 11 * v2] = 0;\n
                    (&fileCursors)[4 + 11 * v2] = 0;\n
                    (&fileCursors)[3 + 11 * v2] = 0;\n
                    (&fileCursors)[5 + 11 * v2] = 0;\n
                    (&fileCursors)[6 + 11 * v2] = rootDir[2 + 8 * v3].field_4;\n
                    (&fileCursors)[8 + 11 * v2] = rootDir[1 + 8 * v3].field_4;\n
                    *(&(&fileCursors)[9 + 11 * v2]) = rootDir[2 + 8 * v3].padding_0[0];\n
                    *(&(&fileCursors)[10 + 11 * v2]) = rootDir[3 + 8 * v3].padding_0;\n
                    (&fileCursors)[7 + 11 * v2] = rootDir[3 + 8 * v3].field_4;\n
                    if (rootDir[2 + 8 * v3].field_4 > 0)\n
                    {\n
                        (&fileCursors)[4 + 11 * v2] = (0 CONCAT rootDir[2 + 8 * v3].field_4) /m masterBlocks->field_8;\n
                        (&fileCursors)[5 + 11 * v2] = rootDir[2 + 8 * v3].field_4;\n
                    }\n
                    rootDir = fileSystem + v0 * 2;\n
                    v4 = v2;\n
                    return v4;\n
                }\n
            }\n
            if (!rootDir->field_4)\n
            {\n
                rootDir = fileSystem + v0 * 2;\n
                v4 = 255;\n
                return v4;\n
            }\n
            rootDir = fileSystem + rootDir->field_4 * v0;\n
        }\n
    }\n
    else\n
    {\n
        v4 = 247;\n
        return v4;\n
    }\n
}\n
", "4205721:sub_402c99": null, "4205728:cgc_setPerms": "extern char fileCursors;\n
\n
long long cgc_setPerms(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (*(&(&fileCursors)[44 * a0]))\n
        {\n
            if (a2 != *(&(&fileCursors)[32 + 44 * a0]) && a2 != 1)\n
            {\n
                v0 = -14;\n
                return v0;\n
            }\n
            if (a1 > 3)\n
            {\n
                v0 = -6;\n
                return v0;\n
            }\n
            (&fileCursors)[36 + 44 * a0] = a1;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4205940:sub_402d74": null, "4205952:cgc_closeFile": "extern char fileCursors;\n
\n
long long cgc_closeFile(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (*(&(&fileCursors)[44 * a0]))\n
        {\n
            cgc_flushFile(a0);\n
            *(&(&fileCursors)[44 * a0]) = 0;\n
            *(&(&fileCursors)[4 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[20 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[12 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[24 + 44 * a0]) = 0;\n
            (&fileCursors)[36 + 44 * a0] = 0;\n
            v0 = 0;\n
            return v0;\n
        }\n
        v0 = -11;\n
        return v0;\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4206221:sub_402e8d": null, "4206224:cgc_flushFile": "extern char fileCursors;\n
extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_flushFile(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v3 = -11;\n
            return v3;\n
        }\n
        else if (rootDir)\n
        {\n
            for (v2 = (0 CONCAT *(&(&fileCursors)[4 + 44 * a0])) /m masterBlocks->field_18; v2 > 0; v2 -= 1)\n
            {\n
                rootDir = fileSystem + rootDir->field_4 * masterBlocks->field_8;\n
            }\n
            v0 = rootDir + 1;\n
            *((v0 + ((0 CONCAT *(&(&fileCursors)[4 + 44 * a0])) /m masterBlocks->field_18 >> 32) * 64 + 12)) = *(&(&fileCursors)[24 + 44 * a0]);\n
            v1 = rootDir + 1;\n
            *((v1 + ((0 CONCAT *(&(&fileCursors)[4 + 44 * a0])) /m masterBlocks->field_18 >> 32) * 64 + 8)) = (&fileCursors)[36 + 44 * a0];\n
            rootDir = fileSystem + masterBlocks->field_8 * 2;\n
            v3 = 0;\n
            return v3;\n
        }\n
        else\n
        {\n
            v3 = -9;\n
            return v3;\n
        }\n
    }\n
    v3 = -11;\n
    return v3;\n
}\n
", "4206657:sub_403041": null, "4206672:cgc_createFile": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned long long fileSystem;\n
extern struct_1 *masterBlocks;\n
extern struct_0 *rootDir;\n
\n
long long cgc_createFile(unsigned long long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: void*\n
    char v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    else if (!rootDir)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    else if (cgc_statusFile(a0, NULL))\n
    {\n
        v1 = 0;\n
        v0 = masterBlocks->field_8;\n
        while (true)\n
        {\n
            for (v4 = 0; v4 < masterBlocks->field_18; v4 += 1)\n
            {\n
                if (!rootDir[4 + 8 * v4].padding_0[0])\n
                {\n
                    cgc_strncpy(&rootDir[8 * v4].padding_0[1 + 24], a0, 40);\n
                    rootDir[2 + 8 * v4].field_4 = 0;\n
                    *(&rootDir[3 + 8 * v4].padding_0) = a1;\n
                    rootDir[1 + 8 * v4].field_4 = a2;\n
                    rootDir[2 + 8 * v4].padding_0[0] = 0;\n
                    if (cgc_findFreeBlock(&v3))\n
                    {\n
                        rootDir = fileSystem + v0 * 2;\n
                        v5 = -5;\n
                        return v5;\n
                    }\n
                    cgc_eraseBlock(*(&v3));\n
                    cgc_setBlockInUse(*(&v3));\n
                    rootDir[3 + 8 * v4].field_4 = *(&v3);\n
                    rootDir = fileSystem + v0 * 2;\n
                    rootDir->field_2 = rootDir->field_2 + 1;\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
            v1 = rootDir;\n
            if (rootDir->field_4)\n
            {\n
                rootDir = fileSystem + rootDir->field_4 * v0;\n
            }\n
            else if (!cgc_findFreeBlock(&v2))\n
            {\n
                rootDir->field_4 = *(&v2);\n
                cgc_eraseBlock(*(&v2));\n
                cgc_setBlockInUse(*(&v2));\n
                rootDir = fileSystem + *(&v2) * v0;\n
            }\n
            else\n
            {\n
                rootDir = fileSystem + v0 * 2;\n
                v5 = -5;\n
                return v5;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = -12;\n
        return v5;\n
    }\n
}\n
", "4207375:sub_40330f": null, "4207376:cgc_findFreeBlock": "extern unsigned long long freeList;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_findFreeBlock(unsigned int *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < masterBlocks->field_8; v2 += 1)\n
    {\n
        if (*((freeList + v2)) != 255)\n
            break;\n
    }\n
    if (v2 >= masterBlocks->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v0 = *((freeList + v2));\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (!(v0 & 1))\n
            break;\n
        v0 >>= 1;\n
    }\n
    *(a0) = v2 * 8 + v1;\n
    if (*(a0) >= masterBlocks->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4207659:sub_40342b": null, "4207664:cgc_eraseBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_eraseBlock(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = masterBlocks->field_8;\n
    return cgc_bzero(fileSystem + a0 * v0, v0);\n
}\n
", "4207723:sub_40346b": null, "4207728:cgc_writeFile": "extern char fileCursors;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_writeFile(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0x9c]\n
    unsigned int v2;  // [bp-0x70]\n
    unsigned int v3;  // [bp-0x68]\n
    char v4;  // [bp-0x60]\n
    unsigned int v5;  // [bp-0x54]\n
    unsigned int v6;  // [bp-0x4c]\n
    char v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x3c]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x20]\n
    unsigned int v13;  // [bp-0x1c]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned long v16;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v17;  // rcx\n
\n
    v13 = a2;\n
    v12 = a3;\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v14 = -11;\n
            return v14;\n
        }\n
        else if (!a1)\n
        {\n
            v14 = -6;\n
            return v14;\n
        }\n
        else if (v13)\n
        {\n
            if (v12 != *(&(&fileCursors)[32 + 44 * a0]) && v12 != 1 && !((&fileCursors)[36 + 44 * a0] & 1))\n
            {\n
                v14 = -14;\n
                return v14;\n
            }\n
            if (*(&(&fileCursors)[40 + 44 * a0]) > 2)\n
            {\n
                v1 = cgc_writeMemoryFile(a0, a1, v13);\n
                v14 = v1;\n
                return v14;\n
            }\n
            v11 = v13;\n
            v3 = 0;\n
            v9 = *(&(&fileCursors)[20 + 44 * a0]);\n
            v8 = masterBlocks->field_8;\n
            while (true)\n
            {\n
                if (v11 <= 0)\n
                {\n
                    *(&(&fileCursors)[20 + 44 * a0]) = v9;\n
                    v14 = 0;\n
                    return v14;\n
                }\n
                v16 = (0 CONCAT v9) /m v8 >> 32;\n
                v10 = v16;\n
                if (!v10)\n
                {\n
                    v16 = a0 * 44;\n
                    if (v9 == *(&(&fileCursors)[24 + v16]) && cgc_addNewBlock(a0) == -1)\n
                    {\n
                        v14 = -5;\n
                        return v14;\n
                    }\n
                }\n
                v5 = *(&(&fileCursors)[4 + 44 * a0]);\n
                v17 = a0 * 44;\n
                if (cgc_readBlock(*(&(&fileCursors)[28 + v17]), &v4))\n
                {\n
                    v14 = -8;\n
                    return v14;\n
                }\n
                v0 = *(&v4);\n
                v6 = *((v0 + (0 CONCAT v9) /m v8 * 4));\n
                cgc_deallocate(a0, a1, v16, v17);\n
                v2 = cgc_minimum(v8 - v10, v11);\n
                if (cgc_readBlock(v6, &v7))\n
                {\n
                    v14 = -8;\n
                    return v14;\n
                }\n
                cgc_memcpy(*(&v7) + v10, a1 + v3, v2);\n
                cgc_writeBlock(*(&v7), v6);\n
                cgc_deallocate(a0, a1);\n
                v3 = v2 + v3;\n
                v11 -= v2;\n
                if (v9 + v2 > *(&(&fileCursors)[24 + 44 * a0]))\n
                    *(&(&fileCursors)[24 + 44 * a0]) = v9 + v2;\n
                v9 = v2 + v9;\n
            }\n
        }\n
        else\n
        {\n
            v14 = -6;\n
            return v14;\n
        }\n
    }\n
    v14 = -11;\n
    return v14;\n
}\n
", "4208553:sub_4037a9": null, "4208560:cgc_writeMemoryFile": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_writeMemoryFile(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // rcx\n
\n
    if (cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v1))\n
    {\n
        v2 = -8;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    v4 = &(&fileCursors)[44 * a0];\n
    if (a2 > v4->field_18)\n
    {\n
        v2 = -0x4;\n
        return v2;\n
    }\n
    cgc_memcpy(*(v0), a1, a2);\n
    *(&(&fileCursors)[24 + 44 * a0]) = a2;\n
    cgc_deallocate(a0, a1, a2, v4);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208768:cgc_addNewBlock": "extern char fileCursors;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_addNewBlock(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // rsi\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (*(&(&fileCursors)[44 * a0]))\n
        {\n
            v2 = *(&(&fileCursors)[4 + 44 * a0]);\n
            v0 = cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v3);\n
            if (v0)\n
            {\n
                v5 = -8;\n
                return v5;\n
            }\n
            for (v1 = 0; v1 < masterBlocks->field_1c; v1 += 1)\n
            {\n
                if (!*((*(&v3) + (v1 << 2))))\n
                    break;\n
            }\n
            if (v1 == masterBlocks->field_1c)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (!cgc_findFreeBlock(&v4))\n
            {\n
                cgc_setBlockInUse(v4);\n
                v7 = v4;\n
                *((*(&v3) + v1 * 4)) = v7;\n
                v8 = a0 * 44;\n
                cgc_writeBlock(*(&v3), *(&(&fileCursors)[28 + v8]), v7, v8);\n
                cgc_deallocate(a0, v9);\n
                v5 = v4;\n
                return v5;\n
            }\n
            else\n
            {\n
                v5 = -5;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4209159:sub_403a07": null, "4209168:cgc_readBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_readBlock(unsigned long long a0, unsigned long long *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
\n
    if (!fileSystem)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    v1 = masterBlocks->field_8;\n
    v0 = cgc_allocate(a0, a1, v5);\n
    if (v0 == 3)\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    else if (!v0)\n
    {\n
        cgc_memcpy(*(&v2), fileSystem + a0 * v1, v1);\n
        *(a1) = *(&v2);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
}\n
", "4209345:sub_403ac1": null, "4209360:cgc_writeBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_writeBlock(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!fileSystem)\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
    v0 = masterBlocks->field_8;\n
    cgc_memcpy(fileSystem + a1 * v0, a0, v0);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4209463:sub_403b37": null, "4209472:cgc_readFile": "extern char fileCursors;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_readFile(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned int *a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x78]\n
    unsigned int v1;  // [bp-0x74]\n
    unsigned int v2;  // [bp-0x70]\n
    unsigned int v3;  // [bp-0x6c]\n
    unsigned int v4;  // [bp-0x68]\n
    unsigned int v5;  // [bp-0x64]\n
    unsigned int v6;  // [bp-0x60]\n
    unsigned int v7;  // [bp-0x5c]\n
    unsigned long long v8;  // [bp-0x58]\n
    unsigned long long v9;  // [bp-0x50]\n
    unsigned int v10;  // [bp-0x48]\n
    unsigned int v11;  // [bp-0x44]\n
    unsigned int v12;  // [bp-0x40]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0xc]\n
    unsigned long long v18;  // rcx\n
\n
    v15 = a3;\n
    if (a4)\n
        *(a4) = 0;\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v16 = -11;\n
            return v16;\n
        }\n
        else if (!a1)\n
        {\n
            v16 = -6;\n
            return v16;\n
        }\n
        else if (a2)\n
        {\n
            if (a5 != *(&(&fileCursors)[32 + 44 * a0]) && a5 != 1 && !((&fileCursors)[36 + 44 * a0] & 2))\n
            {\n
                v16 = -14;\n
                return v16;\n
            }\n
            if (*(&(&fileCursors)[40 + 44 * a0]) > 2)\n
            {\n
                v0 = cgc_readMemoryFile(a0, a1, a2, a4);\n
                v16 = v0;\n
                return v16;\n
            }\n
            v14 = a2;\n
            v13 = 0;\n
            if (v15)\n
            {\n
                v1 = v15;\n
                if (cgc_fileReadPosRelative(a0, v1))\n
                {\n
                    v16 = -6;\n
                    return v16;\n
                }\n
            }\n
            v7 = *(&(&fileCursors)[4 + 44 * a0]);\n
            v12 = *(&(&fileCursors)[12 + 44 * a0]);\n
            for (v4 = masterBlocks->field_8; v14; v12 = v5 + v12)\n
            {\n
                if (v12 == *(&(&fileCursors)[24 + 44 * a0]))\n
                    break;\n
                v11 = (0 CONCAT v12) /m v4;\n
                if (cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v8))\n
                {\n
                    v16 = -8;\n
                    return v16;\n
                }\n
                v10 = *((v8 + v11 * 4));\n
                cgc_deallocate(a0, a1);\n
                if (cgc_readBlock(v10, &v9))\n
                {\n
                    v16 = -8;\n
                    return v16;\n
                }\n
                v6 = (0 CONCAT v12) /m v4 >> 32;\n
                v2 = v4 - v6;\n
                v18 = a0 * 44;\n
                v3 = *(&(&fileCursors)[24 + v18]) - v12;\n
                v5 = cgc_minimum(cgc_minimum(v3, v2, v6, v18), v14);\n
                cgc_memcpy(a1 + v13, v9 + v6, v5);\n
                cgc_deallocate(a0, a1);\n
                v13 = v5 + v13;\n
                v14 -= v5;\n
            }\n
            *(&(&fileCursors)[12 + 44 * a0]) = v12;\n
            if (a4)\n
                *(a4) = v13;\n
            if (v12 == *(&(&fileCursors)[24 + 44 * a0]))\n
            {\n
                v16 = -7;\n
                return v16;\n
            }\n
            v16 = 0;\n
            return v16;\n
        }\n
        else\n
        {\n
            v16 = -6;\n
            return v16;\n
        }\n
    }\n
    v16 = -11;\n
    return v16;\n
}\n
", "4210356:sub_403eb4": null, "4210368:cgc_readMemoryFile": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_readMemoryFile(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned int *a3)\n
{\n
    unsigned int *v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long long v2;  // [bp-0x30]\n
    unsigned int *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
    struct_0 *v7;  // rax\n
\n
    v3 = a3;\n
    if (cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v2))\n
    {\n
        v4 = -8;\n
        return v4;\n
    }\n
    v0 = v2;\n
    if (*(&(&fileCursors)[12 + 44 * a0]) >= *(&(&fileCursors)[24 + 44 * a0]))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v1 = cgc_minimum(a2, *(&(&fileCursors)[24 + 44 * a0]) - *(&(&fileCursors)[12 + 44 * a0]));\n
    v6 = a0 * 44;\n
    cgc_memcpy(a1, *(v0) + *(&(&fileCursors)[12 + v6]), v1, v6);\n
    if (v3)\n
        *(v3) = v1;\n
    v7 = &(&fileCursors)[44 * a0];\n
    v7->field_c = v1 + v7->field_c;\n
    cgc_deallocate(a0, a1, a2, v6);\n
    if (*(&(&fileCursors)[12 + 44 * a0]) >= *(&(&fileCursors)[24 + 44 * a0]))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4210764:sub_40404c": null, "4210768:cgc_fileReadPosRelative": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_fileReadPosRelative(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_0 *v2;  // rax\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (*(&(&fileCursors)[12 + 44 * a0]) + a1 <= *(&(&fileCursors)[24 + 44 * a0]))\n
        {\n
            if (*(&(&fileCursors)[12 + 44 * a0]) + a1 < 0)\n
            {\n
                *(&(&fileCursors)[12 + 44 * a0]) = 0;\n
            }\n
            else\n
            {\n
                v2 = &(&fileCursors)[44 * a0];\n
                v2->field_c = a1 + v2->field_c;\n
            }\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4211029:sub_404155": null, "4211040:cgc_readFileUntil": "long long cgc_readFileUntil(unsigned long a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x32]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned long v4;  // [bp-0x28]\n
    char *v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = a1;\n
    v4 = a4;\n
    v3 = a5;\n
    v2 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 < 0)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v2 = cgc_readFile(a0, &v1, 1, 0, NULL, 1);\n
        if (v1 == a3)\n
            break;\n
        if (v2 == -7)\n
            break;\n
        if (v2 < 0)\n
        {\n
            v6 = v2;\n
            return v6;\n
        }\n
        else if (v0 < a2)\n
        {\n
            *(v5) = v1;\n
            v0 += 1;\n
            v5 += 1;\n
            *(v5) = 0;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4211260:sub_40423c": null, "4211264:cgc_fileReadPosition": "extern char fileCursors;\n
\n
long long cgc_fileReadPosition(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (a1 <= *(&(&fileCursors)[24 + 44 * a0]))\n
        {\n
            *(&(&fileCursors)[12 + 44 * a0]) = a1;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4211435:sub_4042eb": null, "4211440:cgc_fileWritePosition": "extern char fileCursors;\n
\n
long long cgc_fileWritePosition(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (a1 <= *(&(&fileCursors)[24 + 44 * a0]))\n
        {\n
            *(&(&fileCursors)[20 + 44 * a0]) = a1;\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4211611:sub_40439b": null, "4211616:cgc_fileWritePosRelative": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_fileWritePosRelative(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_0 *v2;  // rax\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v0 = -11;\n
            return v0;\n
        }\n
        else if (*(&(&fileCursors)[20 + 44 * a0]) + a1 <= *(&(&fileCursors)[24 + 44 * a0]))\n
        {\n
            if (*(&(&fileCursors)[20 + 44 * a0]) + a1 < 0)\n
            {\n
                *(&(&fileCursors)[20 + 44 * a0]) = 0;\n
            }\n
            else\n
            {\n
                v2 = &(&fileCursors)[44 * a0];\n
                v2->field_14 = a1 + v2->field_14;\n
            }\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
    }\n
    v0 = -11;\n
    return v0;\n
}\n
", "4211877:sub_4044a5": null, "4211888:cgc_deleteFile": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
extern char fileCursors;\n
extern struct_0 *rootDir;\n
\n
long long cgc_deleteFile(unsigned long long a0, unsigned long long a1)\n
{\n
    struct_1 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (*(&(&fileCursors)[44 * a0]))\n
        {\n
            if (a1 != *(&(&fileCursors)[32 + 44 * a0]) && a1 != 1 && !((&fileCursors)[36 + 44 * a0] & 1))\n
            {\n
                v5 = -14;\n
                return v5;\n
            }\n
            v4 = *(&(&fileCursors)[4 + 44 * a0]);\n
            v1 = cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v3);\n
            if (v1)\n
            {\n
                v5 = -8;\n
                return v5;\n
            }\n
            if (*(&(&fileCursors)[40 + 44 * a0]) > 2)\n
            {\n
                v0 = v3;\n
                if (v0->field_0 > 0 && !v0->field_8)\n
                    cgc_free(v0->field_0);\n
            }\n
            else\n
            {\n
                for (v2 = v3; *(v2); v2 += 1)\n
                {\n
                    cgc_eraseBlock(*(v2));\n
                    cgc_setBlockAsFree(*(v2));\n
                }\n
            }\n
            cgc_deallocate(a0, a1);\n
            cgc_eraseBlock(*(&(&fileCursors)[28 + 44 * a0]));\n
            cgc_setBlockAsFree(*(&(&fileCursors)[28 + 44 * a0]));\n
            rootDir[8 + 16 * v4].padding_0[0] = 0;\n
            *(&rootDir[5 + 16 * v4].padding_0) = 0;\n
            *(&rootDir[7 + 16 * v4].padding_0) = 0;\n
            rootDir->field_2 = rootDir->field_2 - 1;\n
            *(&(&fileCursors)[4 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[44 * a0]) = 0;\n
            *(&(&fileCursors)[20 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[12 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[24 + 44 * a0]) = 0;\n
            (&fileCursors)[36 + 44 * a0] = 0;\n
            v5 = 0;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4212645:sub_4047a5": null, "4212656:cgc_setBlockAsFree": "extern unsigned long long freeList;\n
\n
long long cgc_setBlockAsFree(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v3;  // rcx\n
\n
    v1 = a0 >> 3;\n
    v0 = a0 & 7;\n
    v3 = v1;\n
    v3[freeList] = v3[freeList] & ((1 << (v0 & 31)) ^ -1);\n
    return freeList;\n
}\n
", "4212716:sub_4047ec": null, "4212720:cgc_truncateFile": "extern char fileCursors;\n
\n
long long cgc_truncateFile(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 <= 5 && a0 >= 0)\n
    {\n
        if (!*(&(&fileCursors)[44 * a0]))\n
        {\n
            v4 = -11;\n
            return v4;\n
        }\n
        else if (*(&(&fileCursors)[40 + 44 * a0]) <= 2)\n
        {\n
            if (a1 != *(&(&fileCursors)[32 + 44 * a0]) && a1 != 1 && !((&fileCursors)[36 + 44 * a0] & 1))\n
            {\n
                v4 = -14;\n
                return v4;\n
            }\n
            v3 = *(&(&fileCursors)[4 + 44 * a0]);\n
            v0 = cgc_readBlock(*(&(&fileCursors)[28 + 44 * a0]), &v2);\n
            if (v0)\n
            {\n
                v4 = -8;\n
                return v4;\n
            }\n
            for (v1 = v2; *(v1); v1 += 1)\n
            {\n
                cgc_eraseBlock(*(v1));\n
                cgc_setBlockAsFree(*(v1));\n
            }\n
            cgc_deallocate(a0, a1);\n
            cgc_eraseBlock(*(&(&fileCursors)[28 + 44 * a0]));\n
            *(&(&fileCursors)[20 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[12 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[8 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[16 + 44 * a0]) = 0;\n
            *(&(&fileCursors)[24 + 44 * a0]) = 0;\n
            cgc_flushFile(a0);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = -11;\n
    return v4;\n
}\n
", "4213288:sub_404a28": null, "4213296:cgc_findFiles": "typedef struct struct_1 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_1;\n
\n
extern struct_1 *cgc_findFiles.fileHandle;\n
extern unsigned long long fileSystem;\n
extern unsigned int g_40d710;\n
extern unsigned long long g_40d714;\n
extern struct_0 *masterBlocks;\n
extern struct_2 *rootDir;\n
\n
long long cgc_findFiles(char *a0, unsigned long long *a1)\n
{\n
    unsigned int v0;  // [bp-0x90]\n
    unsigned int v1;  // [bp-0x8c]\n
    char v2;  // [bp-0x68]\n
    char v3;  // [bp-0x40]\n
    struct_1 *v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    if (!rootDir)\n
    {\n
        v6 = -9;\n
        return v6;\n
    }\n
    v0 = 0;\n
    v1 = masterBlocks->field_8;\n
    while (true)\n
    {\n
        v4 = &rootDir[1];\n
        v5 = 0;\n
        while (true)\n
        {\n
            if (v5 >= masterBlocks->field_18)\n
            {\n
                if (rootDir->field_4)\n
                {\n
                    rootDir = fileSystem + rootDir->field_4 * v1;\n
                    break;\n
                }\n
                else\n
                {\n
                    rootDir = fileSystem + v1 * 2;\n
                    v6 = -1;\n
                    return v6;\n
                }\n
            }\n
            if (!*((v4 + 24)))\n
            {\n
                v4 += 64;\n
                v0 += 1;\n
LABEL_404b67:\n
                v5 += 1;\n
            }\n
            else\n
            {\n
                cgc_strncpy(&v2, v4 + 24, 40);\n
                v3 = 0;\n
                if (*(a0) && cgc_wildcard_search(a0, &v2) != 1)\n
                {\n
                    v4 += 64;\n
                    goto LABEL_404b67;\n
                }\n
                cgc_findFiles.fileHandle = v4;\n
                g_40d710 = v0;\n
                cgc_strncpy(&g_40d714, a0, 40);\n
                *(a1) = &cgc_findFiles.fileHandle;\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
}\n
", "4213736:sub_404be8": null, "4213744:cgc_findNextFile": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
    char field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_1;\n
\n
extern unsigned long long fileSystem;\n
extern struct_3 *masterBlocks;\n
extern struct_0 *rootDir;\n
\n
long long cgc_findNextFile(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_2 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_2 *v6;  // rax\n
    struct_2 *v7;  // rax\n
\n
    v3 = a0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v0 = masterBlocks->field_8;\n
    v2 = (0 CONCAT a0->field_8) /m masterBlocks->field_18;\n
    for (v1 = (0 CONCAT a0->field_8) /m masterBlocks->field_18 >> 32; v2 > 0; v2 -= 1)\n
    {\n
        rootDir = fileSystem + rootDir->field_4 * masterBlocks->field_8;\n
    }\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            if (a0->field_0 >= &rootDir[8 * masterBlocks->field_18].padding_0[1])\n
            {\n
                if (rootDir->field_4)\n
                {\n
                    rootDir = fileSystem + rootDir->field_4 * v0;\n
                    break;\n
                }\n
                else\n
                {\n
                    rootDir = fileSystem + v0 * 2;\n
                    v4 = -1;\n
                    return v4;\n
                }\n
            }\n
            if (a0->field_0 < rootDir + 1)\n
            {\n
                a0->field_0 = &rootDir[1];\n
            }\n
            else\n
            {\n
                v6 = a0;\n
                v6->field_0 = &v6->field_0[2].padding_0[14];\n
            }\n
            v7 = a0;\n
            v7->field_8 = v7->field_8 + 1;\n
            if (!a0->field_0->field_18)\n
                continue;\n
            if (!a0->field_c)\n
            {\n
LABEL_404d5a:\n
                rootDir = fileSystem + v0 * 2;\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (cgc_wildcard_search(&v3->field_c, &a0->field_0->field_18) == 1)\n
            {\n
                goto LABEL_404d5a;\n
            }\n
        }\n
    }\n
}\n
", "4214254:sub_404dee": null, "4214256:cgc_getFileSystemInfo": "extern struct_0 *masterBlocks;\n
\n
long long cgc_getFileSystemInfo(unsigned int a0[6])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
    else if (masterBlocks)\n
    {\n
        a0[0] = masterBlocks->field_4;\n
        a0[1] = masterBlocks->field_8;\n
        a0[2] = masterBlocks->field_c;\n
        a0[3] = 0;\n
        a0[4] = masterBlocks->field_18;\n
        a0[5] = masterBlocks->field_1c;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -9;\n
        return v0;\n
    }\n
}\n
", "4214420:sub_404e94": null, "4214432:cgc_makeMemoryFile": "extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_makeMemoryFile(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    else if (!rootDir)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    else if (cgc_statusFile(a0, NULL))\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= masterBlocks->field_18)\n
            {\n
                v3 = -10;\n
                return v3;\n
            }\n
            if (!rootDir[8 + 16 * v2].padding_0[0])\n
                break;\n
            v2 += 1;\n
        }\n
        cgc_strncpy(&(&rootDir[16 * v2].field_2)[12], a0, 40);\n
        *(&rootDir[5 + 16 * v2].padding_0) = a2;\n
        *(&rootDir[6 + 16 * v2].padding_0) = a3 + 3;\n
        *(&rootDir[3 + 16 * v2].padding_0) = a4;\n
        rootDir[4 + 16 * v2].padding_0[0] = 0;\n
        if (cgc_findFreeBlock(&v1))\n
        {\n
            v3 = -5;\n
            return v3;\n
        }\n
        cgc_eraseBlock(v1);\n
        cgc_setBlockInUse(v1);\n
        *(&rootDir[7 + 16 * v2].padding_0) = v1;\n
        rootDir->field_2 = rootDir->field_2 + 1;\n
        cgc_readBlock(v1, &v0);\n
        *(v0) = a1;\n
        v0[1] = a2;\n
        *(&v0[2]) = a3;\n
        cgc_writeBlock(v0, v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -12;\n
        return v3;\n
    }\n
}\n
", "4214955:sub_4050ab": null, "4214960:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    if (!a0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = 0;\n
        if (cgc_receive(a0, a1, v4, v5))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        v1 = v0 + v1;\n
    }\n
}\n
", "4215115:sub_40514b": null, "4215120:cgc_receive_until": "extern char cgc_receive_until.circ_buffer;\n
extern unsigned int cgc_receive_until.end;\n
extern unsigned int cgc_receive_until.head;\n
\n
long long cgc_receive_until(char *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0x200;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            if (cgc_receive_until.head >= cgc_receive_until.end && cgc_receive_until.head == 0x200)\n
            {\n
                cgc_receive_until.head = 0;\n
                cgc_receive_until.end = 0;\n
                break;\n
            }\n
            if ((&cgc_receive_until.circ_buffer)[cgc_receive_until.head] == a1)\n
            {\n
                *(v4) = 0;\n
                cgc_receive_until.head = cgc_receive_until.head + 1;\n
                goto LABEL_4052e3;\n
            }\n
            else\n
            {\n
                *(v4) = (&cgc_receive_until.circ_buffer)[cgc_receive_until.head];\n
                v1 += 1;\n
                v4 += 1;\n
                if (v1 == a2)\n
                {\n
                    *(v4) = 0;\n
LABEL_4052e3:\n
                    v5 = v1;\n
                    return v5;\n
                }\n
                cgc_receive_until.head = cgc_receive_until.head + 1;\n
            }\n
        }\n
        if (cgc_receive_until.end < cgc_receive_until.head)\n
            v2 = cgc_receive_until.head - cgc_receive_until.end;\n
        else\n
            v2 = 0x200 - cgc_receive_until.end;\n
        if (cgc_receive(a0, a1, a2, v7))\n
            cgc__terminate(a0);\n
        cgc_receive_until.end = (cgc_receive_until.end + v0);\n
    }\n
}\n
", "4215533:sub_4052ed": null, "4215536:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4215915:sub_40546b": null, "4215920:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
        cgc__terminate(a0);\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4216094:sub_40551e": null, "4216096:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4216154:sub_40555a": null, "4216160:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
        cgc__terminate(v3);\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4216338:sub_405612": null, "4216352:cgc_unlink": "long long cgc_unlink(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (*((a0 + 16)))\n
        *((*((a0 + 16)) + 8)) = *((v0 + 8));\n
    v2 = a0;\n
    if (!*((a0 + 8)))\n
        return v2;\n
    v2 = *((a0 + 8));\n
    *((v2 + 16)) = *((a0 + 16));\n
}\n
", "4216453:sub_405685": null, "4216464:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4216745:sub_4057a9": null, "4216752:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4216857:sub_405819": null, "4216864:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4217166:sub_40594e": null, "4217168:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4217294:sub_4059ce": null, "4217296:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4217446:sub_405a66": null, "4217456:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4217670:sub_405b46": null, "4217680:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&v0, 1);\n
}\n
", "4217711:sub_405b6f": null, "4217712:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4218021:sub_405ca5": null, "4218032:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4218200:sub_405d58": null, "4218208:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4218291:sub_405db3": null, "4218304:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4218345:sub_405de9": null, "4218352:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned short field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
\n
    while (true)\n
    {\n
        if (a0->field_100 < 0x100)\n
        {\n
            a0->field_100 = a0->field_100 + 1;\n
            a0->padding_0[rcx<8>] = a1;\n
            v1 = a2 + 1;\n
            return v1;\n
        }\n
        else if (cgc_transmit(a0, a1, a2, v3))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v0))\n
        {\n
            a0->field_100 = a0->field_100 - *(&v0);\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4218566:sub_405ec6": null, "4218576:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4218646:sub_405f16": null, "4218656:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4218820:sub_405fc4": null, "4218832:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    void* v1;  // [bp-0x140]\n
    unsigned long long v2;  // [bp-0x138]\n
    char v3;  // [bp-0x130]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v5 = cgc_WRAPPER_BUFFER_PUTC;\n
    v4 = 0;\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(v2, v5, v1, a0, a1);\n
    if (v4 > 0)\n
    {\n
        if (!cgc_transmit(a0, a1, v8, v9))\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4219021:sub_40608d": null, "4219024:cgc_wrapper_output": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, struct_2 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_2 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_1 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_2 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long long *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_2 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_2 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    struct struct_1 **v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_2 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_2 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v47;  // [bp-0x18]\n
    struct_2 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_2 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_2 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    struct struct_1 **v56;  // rax\n
    struct_2 *v57;  // rcx\n
    struct struct_1 **v58;  // rdx\n
    struct_2 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_2 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_2 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_2 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_2 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned long long *v74;  // rax\n
    struct_2 *v75;  // rcx\n
    unsigned long long *v76;  // rdx\n
    struct_2 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_1 **v79;  // rax\n
    struct_2 *v80;  // rcx\n
    struct struct_1 **v81;  // rdx\n
    struct_2 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_2 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 <= 40)\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    else\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[1];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[1];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 > 160)\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    else\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 <= 40)\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4220970:sub_40682a": null, "4220976:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4221136:cgc_vprintf": "long long cgc_vprintf(char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* **v2;  // [bp-0x20]\n
\n
    v2 = &cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4221210:sub_40691a": null, "4221216:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4221380:sub_4069c4": null, "4221392:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4221492:sub_406a34": null, "4221504:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4221796:sub_406b64": null, "4221808:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 += 1)\n
    {\n
        v11 = v0 + 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4222445:sub_406ded": null, "4222448:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_407481:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_407481;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_407477;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_407477:\n
            goto LABEL_407481;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4224794:sub_40771a": null, "4224800:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4225447:sub_4079a7": null, "4225456:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4225990:sub_407bc6": null, "4226000:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v7);\n
            if (v0)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v1 = (v1 + v2);\n
        }\n
        else\n
        {\n
            v5 = a2;\n
            return v5;\n
        }\n
    }\n
}\n
", "4226142:sub_407c5e": null, "4226144:cgc_minimum": "long long cgc_minimum(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4226188:sub_407c8c": null, "4226192:cgc_max": "long long cgc_max(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4226236:sub_407cbc": null, "4226240:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4226258:sub_407cd2": null, "4226272:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4226297:sub_407cf9": null, "4226304:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4226530:sub_407de2": null, "4226544:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v7;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    int v8;  // xmm0\n
    int v9;  // xmm0\n
    unsigned long long v10;  // xmm1lq\n
    int v11;  // xmm1\n
\n
    v5 = a0;\n
    v3 = 1;\n
    for (v1 = 0; *(v5) == 32; v5 += 1);\n
    v7 = *(v5);\n
    if (v7 != 45)\n
    {\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        v7 = v5 + 1;\n
        v5 = v7;\n
    }\n
    while (v5)\n
    {\n
        if (*(v5) == 46)\n
        {\n
            v1 = 1;\n
            v7 = v5 + 1;\n
            v5 = v7;\n
            continue;\n
        }\n
        v7 = *(v5);\n
        if (v7 < 48)\n
        {\n
LABEL_407ef2:\n
            break;\n
        }\n
        else\n
        {\n
            v7 = *(v5);\n
            if (!(v7 <= 57))\n
                goto LABEL_407ef2;\n
            v0 = *(v5) - 48;\n
            xmm0<16> = ((0x0<64> CONCAT 0x4024000000000000<64>) * Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE)))\n
            v4 = v8;\n
            *(&v8) = v0;\n
            xmm0<16> = (xmm0<16> + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE)))\n
            v4 = v9;\n
            if (v1)\n
                v3 *= 10;\n
            v7 = v5 + 1;\n
            v5 = v7;\n
        }\n
    }\n
    v10 = v2;\n
    v4 = ((0 CONCAT v4) * v11);\n
    if (v1)\n
    {\n
        tmp_10 = DivV(tmp_12, tmp_11);\n
        *(&v4) = tmp_10;\n
    }\n
    return v7;\n
}\n
", "4226879:sub_407f3f": null, "4226880:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4226946:sub_407f82": null, "4226960:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && v1)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(v1);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v3 = *(v2) - *(v1);\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4227123:sub_408033": null, "4227136:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    if (v3 && v2)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
            {\n
                v0 = 0;\n
                if (*(v3) == *(v2))\n
                    v0 = v1 < a2;\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v3 += 1;\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v4 = *(v3) - *(v2);\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4227342:sub_40810e": null, "4227344:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4227410:sub_408152": null, "4227424:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(&v5) = v0;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = a1;\n
    }\n
    return v1;\n
}\n
", "4227594:sub_40820a": null, "4227600:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4227688:sub_408268": null, "4227696:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4227853:sub_40830d": null, "4227856:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(&v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4228019:sub_4083b3": null, "4228032:cgc_wildcard_search": "long long cgc_wildcard_search(char a0[2], char *a1)\n
{\n
    char v0;  // [bp-0x2a]\n
    char v1;  // [bp-0x29]\n
    char v2[2];  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char v4[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    *(&v4) = a0;\n
    v3 = a1;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(v4);\n
        if (!(v1 & 1))\n
            break;\n
        if (v4[0] == 42)\n
        {\n
            if (!v4[1])\n
            {\n
                v5 = 1;\n
                return v5;\n
            }\n
            *(&v4) = &v4[1];\n
            *(&v2) = v4;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v4[0] != *(v3))\n
                    v0 = *(v3);\n
                if (!(v0 & 1))\n
                    break;\n
                v3 += 1;\n
            }\n
            if (!*(v3))\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            v4 = &v4[1];\n
            v3 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(v3) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else if (v4[0] == 63)\n
        {\n
            v4 = &v4[1];\n
            v3 += 1;\n
        }\n
        else if (v4[0] == *(v3))\n
        {\n
            v4 = &v4[1];\n
            v3 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(v3) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            if (v4 == v2)\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v4 = v2;\n
                continue;\n
            }\n
        }\n
    }\n
    if (*(v3))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (*(v4))\n
    {\n
        if (*(v4) != 42)\n
        {\n
LABEL_40864d:\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (!(!*((v4 + 1))))\n
        {\n
            goto LABEL_40864d;\n
        }\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4228709:sub_408665": null, "4228720:cgc_contains_wildcards": "long long cgc_contains_wildcards(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == 42)\n
            break;\n
        if (*(v0) == 63)\n
            break;\n
        v0 += 1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4228817:sub_4086d1": null, "4228832:cgc_authenticate": "long long cgc_authenticate(char *a0, char *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x1b8]\n
    unsigned int v1;  // [bp-0x1b4]\n
    char v2;  // [bp-0x1ad]\n
    char v3;  // [bp-0x1a8]\n
    char v4;  // [bp-0x138]\n
    char v5;  // [bp-0x68]\n
    char v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v2 = cgc_openFile(\"Users.db\", 1);\n
    if (v2 < 0)\n
    {\n
        cgc_printf(\"error opening Users.db\\n
\", 1, a2, a3, a4);\n
        cgc__terminate(\"error opening Users.db\\n
\");\n
    }\n
    while (true)\n
    {\n
        v1 = cgc_readFileUntil(v2, &v6, 25, 58, &v0, 1);\n
        if (!v1)\n
        {\n
            cgc_closeFile(v2);\n
            v7 = -1;\n
            return v7;\n
        }\n
        if (!cgc_strcmp(&v6, a0))\n
            break;\n
        v1 = cgc_readFileUntil(v2, &v4, 200, 10, &v0, 1);\n
    }\n
    v1 = cgc_readFileUntil(v2, &v5, 25, 58, &v0, 1);\n
    if (cgc_strcmp(&v5, a1))\n
    {\n
        cgc_closeFile(v2);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v1 = cgc_readFileUntil(v2, &v3, 100, 10, &v0, 1);\n
    cgc_closeFile(v2);\n
    v7 = cgc_atoi(&v3);\n
    return v7;\n
}\n
", "4229267:sub_408893": null, "4229280:cgc_create_user": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char cgc_securityIDFileHandle;\n
\n
long long cgc_create_user(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x4b8]\n
    char v1;  // [bp-0x4a9]\n
    char v2;  // [bp-0x4a8]\n
    unsigned int v3;  // [bp-0xa0], Other Possible Types: char\n
    unsigned int v4;  // [bp-0x9c]\n
    char v5;  // [bp-0x96]\n
    char v6;  // [bp-0x95]\n
    char v7;  // [bp-0x94]\n
    char v8;  // [bp-0x90]\n
    unsigned int v9;  // [bp-0x8c]\n
    char v10;  // [bp-0x88]\n
    char v11;  // [bp-0x68]\n
    char v12;  // [bp-0x48]\n
    char *v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned long v16;  // r8\n
\n
    *(&v13) = a2;\n
    v6 = cgc_openFile(\"Users.db\", 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(\"error opening Users.db\\n
\", 1, a2, a3, a4);\n
        cgc__terminate(\"error opening Users.db\\n
\");\n
    }\n
    if (cgc_securityIDFileHandle == -1)\n
    {\n
        cgc_securityIDFileHandle = cgc_openFile(\"UserIDs.mem\", 1);\n
        if (cgc_securityIDFileHandle < 0)\n
        {\n
            cgc_printf(\"error opening security ID file\\n
\", 1, a2, a3, a4);\n
            cgc__terminate(\"error opening security ID file\\n
\");\n
        }\n
    }\n
    v4 = cgc_readFile(cgc_securityIDFileHandle, &v8, 4, 0, NULL, 1);\n
    if (v4 == -7)\n
        cgc_fileReadPosition(cgc_securityIDFileHandle, 1);\n
    v4 = cgc_readFile(cgc_securityIDFileHandle, &v7, 4, 0, NULL, 1);\n
    if (v4 == -7)\n
        cgc_fileReadPosition(cgc_securityIDFileHandle, 1);\n
    v9 = *(&v7) * *(&v8);\n
    v9 &= 2147483647;\n
    while (true)\n
    {\n
        v4 = cgc_readFileUntil(v6, &v12, 25, 58, &v3, 1);\n
        if (!v4)\n
            break;\n
        if (!cgc_strcmp(&v12, a0))\n
        {\n
            cgc_fileReadPosRelative(cgc_securityIDFileHandle, 0xfffffffc);\n
            cgc_closeFile(v6);\n
            v14 = -1;\n
            return v14;\n
        }\n
        v4 = cgc_readFileUntil(v6, &v2, 0x400, 58, &v3, 1);\n
        v4 = cgc_readFileUntil(v6, &v2, 0x400, 10, &v3, 1);\n
        if (cgc_atoi(&v10) == v9)\n
            v9 += 1;\n
    }\n
    v16 = v9;\n
    cgc_sprintf(&v2, \"$s:$s:$d\\n
\", a0, a1, v16);\n
    v1 = v6;\n
    v0 = &v2;\n
    v4 = cgc_writeFile(v1, v0, cgc_strlen(&v2), 1);\n
    if (v4 < 0)\n
    {\n
        cgc_printf(\"error updating Users.db\\n
\", a1, a2, 1, v16);\n
        cgc__terminate(\"error updating Users.db\\n
\");\n
    }\n
    cgc_closeFile(v6);\n
    cgc_sprintf(&v11, \"$x.user\", v9, 1, v16);\n
    v4 = cgc_createFile(&v11, 2, 1);\n
    if (v4 < 0)\n
    {\n
        cgc_printf(\"$d\\n
\", v4, 1, 1, v16);\n
        cgc__terminate(\"$d\\n
\");\n
    }\n
    v5 = cgc_openFile(&v11, 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(\"error opening users file\\n
\", 1, 1, 1, v16);\n
        cgc__terminate(\"error opening users file\\n
\");\n
    }\n
    v3 = 0;\n
    cgc_writeFile(v5, &v3, 4, 1);\n
    cgc_writeFile(v5, &v3, 4, 1);\n
    v3 = cgc_strlen(v13);\n
    cgc_writeFile(v5, &v3, 4, 1);\n
    cgc_writeFile(v5, v13, v3, 1);\n
    cgc_closeFile(v5);\n
    v14 = v9;\n
    return v14;\n
}\n
", "4230402:sub_408d02": null, "4230416:cgc_receiveMessage": "long long cgc_receiveMessage(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    char *v1;  // [bp-0x58]\n
    char *v2;  // [bp-0x50]\n
    char *v3;  // [bp-0x48]\n
    char *v4;  // [bp-0x40]\n
    char *v5;  // [bp-0x38]\n
    char *v6;  // [bp-0x30]\n
    char v7;  // [bp-0x1d]\n
    char v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0xc]\n
\n
    if (cgc_receive_bytes(&v8, 4) == -1)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v0 = *(&v8);\n
    if (v0 == 160)\n
    {\n
        v6 = a0;\n
        if (!v6)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v6, v7);\n
        v6[v7] = 0;\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v6 + 21, v7);\n
        v6[21 + v7] = 0;\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v6 + 42, v7);\n
        v6[42 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 176)\n
    {\n
        v5 = a0;\n
        if (!v5)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v5, v7);\n
        v5[v7] = 0;\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v5 + 21, v7);\n
        v5[21 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 192)\n
    {\n
        v4 = a0;\n
        if (!v4)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(v4, 4);\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 208)\n
    {\n
        v3 = a0;\n
        if (!v3)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(v3, 4);\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v3 + 4, v7);\n
        v3[4 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 224)\n
    {\n
        v1 = a0;\n
        if (!v1)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(v1, 4);\n
        cgc_receive_bytes(v1 + 4, 4);\n
        cgc_receive_bytes(&v7, 1);\n
        cgc_receive_bytes(v1 + 8, v7);\n
        v1[8 + v7] = 0;\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else if (v0 == 240)\n
    {\n
        v2 = a0;\n
        if (!v2)\n
            cgc__terminate(a0);\n
        cgc_receive_bytes(v2, 4);\n
        v9 = *(&v8);\n
        return v9;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4231222:sub_409036": null, "4231232:cgc_sendResponse": "long long cgc_sendResponse(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_write(1, a0, a1))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4231302:sub_409086": null, "4231312:cgc_savePost": "long long cgc_savePost(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc0]\n
    char v2;  // [bp-0xb9]\n
    char v3;  // [bp-0xb8]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    char v8;  // [bp-0xc]\n
    unsigned long v10;  // rsi\n
    unsigned long v11;  // rdx\n
\n
    v7 = a1;\n
    v6 = a2;\n
    cgc_sprintf(&v5, \"$x.post\", a0, a3, a4);\n
    v1 = cgc_createFile(&v5, 2, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"1Error making post file.\\n
\", 2, 1, a3, a4);\n
        cgc__terminate(\"1Error making post file.\\n
\");\n
    }\n
    v2 = cgc_openFile(&v5, 1);\n
    if (v2 < 0)\n
    {\n
        cgc_printf(\"2error opening post file\\n
\", 1, 1, a3, a4);\n
        cgc__terminate(\"2error opening post file\\n
\");\n
    }\n
    v1 = cgc_writeFile(v2, &a1, 4, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"3Error writing post's ID\\n
\", 1, 4, 1, a4);\n
        cgc__terminate(\"3Error writing post's ID\\n
\");\n
    }\n
    v10 = v6;\n
    cgc_strncpy(&v3, v10, 128);\n
    v4 = 0;\n
    v0 = cgc_strlen(&v3);\n
    v1 = cgc_writeFile(v2, &v0, 4, 1);\n
    v11 = v0;\n
    v1 = cgc_writeFile(v2, &v3, v11, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"4Error writing post's text\\n
\", v10, v11, 1, a4);\n
        cgc__terminate(\"4Error writing post's text\\n
\");\n
    }\n
    cgc_closeFile(v2);\n
    v2 = cgc_openFile(\"posts.log\", 1);\n
    if (v2 < 0)\n
    {\n
        cgc_printf(\"5unable to open posts.log\\n
\", 1, v11, 1, a4);\n
        cgc__terminate(\"5unable to open posts.log\\n
\");\n
    }\n
    v1 = cgc_writeFile(v2, &v8, 4, 1);\n
    cgc_closeFile(v2);\n
    return 0;\n
}\n
", "4231834:sub_40929a": null, "4231840:cgc_saveComment": "long long cgc_saveComment(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc0]\n
    char v2;  // [bp-0xb9]\n
    char v3;  // [bp-0xb8]\n
    char v4;  // [bp-0x55]\n
    char v5;  // [bp-0x48]\n
    unsigned long v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // rdx\n
    unsigned long v11;  // rsi\n
    unsigned long v12;  // rdx\n
\n
    v7 = a1;\n
    v6 = a2;\n
    v10 = a0;\n
    cgc_sprintf(&v5, \"$x.post\", v10, a3, a4);\n
    v2 = cgc_openFile(&v5, 1);\n
    if (v2 < 0)\n
    {\n
        cgc_printf(\"error opening post file\\n
\", 1, v10, a3, a4);\n
        cgc_printf(\"fh = $d\\n
\", v2, v10, a3, a4);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v1 = cgc_writeFile(v2, &v7, 4, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"Error writing commenter's ID\\n
\", 1, 4, 1, a4);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v11 = v6;\n
    cgc_strncpy(&v3, v11, 100);\n
    v4 = 0;\n
    v0 = cgc_strlen(&v3);\n
    v1 = cgc_writeFile(v2, &v0, 4, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"Error writing comment's size\\n
\", v11, 4, 1, a4);\n
        cgc__terminate(\"Error writing comment's size\\n
\");\n
    }\n
    v12 = v0;\n
    v1 = cgc_writeFile(v2, &v3, v12, 1);\n
    if (v1)\n
    {\n
        cgc_printf(\"Error writing comment's text\\n
\", v11, v12, 1, a4);\n
        cgc__terminate(\"Error writing comment's text\\n
\");\n
    }\n
    cgc_closeFile(v2);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4232261:sub_409445": null, "4232272:cgc_newFeedPost": "long long cgc_newFeedPost(unsigned long a0, unsigned long long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x58]\n
    char v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    char v4;  // [bp-0x4a]\n
    char v5;  // [bp-0x49]\n
    char v6;  // [bp-0x48]\n
    unsigned long long v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // rdx\n
\n
    v7 = a2;\n
    v10 = a0;\n
    cgc_sprintf(&v6, \"$x.user\", v10, a3, a4);\n
    v5 = cgc_openFile(&v6, 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(\"error opening users file\\n
\", 1, v10, a3, a4);\n
        cgc_printf(\"fh = $d\\n
\", v5, v10, a3, a4);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v3 = cgc_readFile(v5, &v2, 4, 0, &v0, 1);\n
    if (v3)\n
    {\n
        cgc_printf(\"error reading users file\\n
\", 1, 4, 0, a4);\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_closeFile(v5);\n
    v4 = cgc_openFile(\"posts.log\", 1);\n
    v1 = 0;\n
    while (v1 <= *(&v2))\n
    {\n
        v3 = cgc_readFile(v4, &v1, 4, 0, &v0, 1);\n
        if (v3 == -7)\n
            break;\n
    }\n
    cgc_closeFile(v4);\n
    if (v1 <= *(&v2))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v3 = cgc_retrievePost(v1, 0, a1, v7);\n
    if (v3)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5 = cgc_openFile(&v6, 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(\"error opening users file\\n
\", 1, v10, a3, a4);\n
        cgc_printf(\"fh = $d\\n
\", v5, v10, a3, a4);\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_fileWritePosition(v5, 0);\n
    cgc_writeFile(v5, &v1, 4, 1);\n
    cgc_closeFile(v5);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4232781:sub_40964d": null, "4232784:cgc_retrievePost": "long long cgc_retrievePost(unsigned long long a0, unsigned long a1, unsigned long long *a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x590]\n
    char v1;  // [bp-0x58c]\n
    char v2;  // [bp-0x588]\n
    char v3;  // [bp-0x568]\n
    unsigned int v4;  // [bp-0x500]\n
    char v5;  // [bp-0x4fa]\n
    char v6;  // [bp-0x4f9]\n
    char v7;  // [bp-0x4f8]\n
    char v8;  // [bp-0x470]\n
    char v9;  // [bp-0x46c], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x468]\n
    unsigned int v11;  // [bp-0x464], Other Possible Types: char\n
    char v12;  // [bp-0x460]\n
    char v13;  // [bp-0x45c]\n
    char v14;  // [bp-0x458]\n
    char v15;  // [bp-0x48]\n
    unsigned long long *v16;  // [bp-0x20]\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned long v20;  // rdx\n
    unsigned long v21;  // rdx\n
    unsigned long v22;  // rdx\n
    unsigned long v23;  // rdx\n
    unsigned long long v24;  // rsi, Other Possible Types: unsigned long\n
\n
    v17 = a1;\n
    v16 = a2;\n
    cgc_sprintf(&v15, \"$x.post\", a0, a3, a4);\n
    v6 = cgc_openFile(&v15, 1);\n
    if (v6 < 0)\n
    {\n
        v18 = -1;\n
        return v18;\n
    }\n
    v4 = cgc_readFile(v6, &v12, 4, 0, NULL, 1);\n
    if (v4)\n
    {\n
        cgc_printf(\"Error reading post's ID\\n
\", 1, 4, 0, 0);\n
        cgc__terminate(\"Error reading post's ID\\n
\");\n
    }\n
    v4 = cgc_readFile(v6, &v8, 4, 0, &v13, 1);\n
    if (v4)\n
    {\n
        cgc_printf(\"Error reading post's size\\n
\", 1, 4, 0, 0);\n
        cgc__terminate(\"Error reading post's size\\n
\");\n
    }\n
    v20 = *(&v8);\n
    v4 = cgc_readFile(v6, &v7, v20, 0, &v13, 1);\n
    if (v4 && v4 != -7)\n
    {\n
        cgc_printf(\"Error reading post's text\\n
\", 1, v20, 0, 0);\n
        cgc__terminate(\"Error reading post's text\\n
\");\n
    }\n
    v21 = *(&v12);\n
    cgc_sprintf(&v15, \"$x.user\", v21, 0, 0);\n
    v24 = 1;\n
    v5 = cgc_openFile(&v15, 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(\"Error opening users file\\n
\", 1, v21, 0, 0);\n
        cgc__terminate(\"Error opening users file\\n
\");\n
    }\n
    v4 = cgc_readFile(v5, &v14, 30, 12, &v13, 1);\n
    if (v4 < 0 && v4 != -7)\n
    {\n
        cgc_printf(\"Error reading name\\n
\", 1, 30, 12, 0);\n
        cgc__terminate(\"Error reading name\\n
\");\n
    }\n
    cgc_closeFile(v5);\n
    (&v14)[*(&v13)] = 0;\n
    v4 = cgc_allocate(a0, 1, 30);\n
    if (v4)\n
    {\n
        cgc_printf(\"unable to allocate() memory\\n
\", 1, 30, 12, 0);\n
        cgc__terminate(\"unable to allocate() memory\\n
\");\n
    }\n
    v0 = 0;\n
    cgc_memcpy(*(v16) + v0, &v13, 4);\n
    v0 += 4;\n
    cgc_memcpy(*(v16) + v0, &v14, *(&v13));\n
    v0 = *(&v13) + v0;\n
    cgc_memcpy(*(v16) + v0, &v8, 4);\n
    v0 += 4;\n
    cgc_memcpy(*(v16) + v0, &v7, *(&v8));\n
    v0 = *(&v8) + v0;\n
    for (v11 = 0; v17; v0 = v9 + v0)\n
    {\n
        v4 = cgc_readFile(v6, &v1, 4, 0, NULL, 1);\n
        if (v4)\n
            break;\n
        v4 = cgc_readFile(v6, &v9, 4, 0, &v13, 1);\n
        if (v4)\n
        {\n
            cgc_printf(\"Error reading comment's size\\n
\", v24, 4, 0, 0);\n
            cgc__terminate(\"Error reading comment's size\\n
\");\n
        }\n
        v22 = v9;\n
        v4 = cgc_readFile(v6, &v3, v22, 0, &v13, 1);\n
        if (v4 && v4 != -7)\n
        {\n
            cgc_printf(\"Error reading post's text\\n
\", v24, v22, 0, 0);\n
            cgc__terminate(\"Error reading post's text\\n
\");\n
        }\n
        v9 = *(&v13);\n
        cgc_sprintf(&v15, \"$x.user\", *(&v1), 0, 0);\n
        v24 = 1;\n
        v5 = cgc_openFile(&v15, 1);\n
        if (v5 < 0)\n
        {\n
            v24 = \"anonymous\";\n
            cgc_strcpy(&v2, \"anonymous\");\n
            *(&v10) = cgc_strlen(&v2);\n
        }\n
        else\n
        {\n
            v4 = cgc_readFile(v5, &v10, 4, 8, &v13, 1);\n
            if (v4 < 0)\n
            {\n
                cgc_printf(\"Error reading commenter name length\\n
\", 1, 4, 8, 0);\n
                cgc__terminate(\"Error reading commenter name length\\n
\");\n
            }\n
            v23 = *(&v10);\n
            v4 = cgc_readFile(v5, &v2, v23, 0, &v13, 1);\n
            if (v4 < 0 && v4 != -7)\n
            {\n
                cgc_printf(\"Error reading commenter name\\n
\", 1, v23, 0, 0);\n
                cgc__terminate(\"Error reading commenter name\\n
\");\n
            }\n
            cgc_closeFile(v5);\n
        }\n
        *(&v11) = v11 + 1;\n
        cgc_memcpy(*(v16) + v0, &v11, 4);\n
        v0 += 4;\n
        cgc_memcpy(*(v16) + v0, &v10, 4);\n
        v0 += 4;\n
        cgc_memcpy(*(v16) + v0, &v2, *(&v10));\n
        v0 = *(&v10) + v0;\n
        cgc_memcpy(*(v16) + v0, &v9, 4);\n
        v0 += 4;\n
        cgc_memcpy(*(v16) + v0, &v3, v9);\n
    }\n
    *(a3) = v0;\n
    cgc_closeFile(v6);\n
    v18 = 0;\n
    return v18;\n
}\n
", "4234525:sub_409d1d": null, "4234528:main": "extern char cgc_securityIDFileHandle;\n
\n
int main(unsigned long long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x7c]\n
    unsigned int v1;  // [bp-0x78]\n
    char v2;  // [bp-0x74], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x70], Other Possible Types: unsigned long long\n
    unsigned int v4;  // [bp-0x68]\n
    unsigned int v5;  // [bp-0x64]\n
    unsigned int v6;  // [bp-0x60]\n
    unsigned int v7;  // [bp-0x5c]\n
    unsigned int v8[2];  // [bp-0x58]\n
    unsigned int *v9;  // [bp-0x50]\n
    unsigned long long v10;  // [bp-0x48]\n
    unsigned long long v11;  // [bp-0x40]\n
    unsigned int v12;  // [bp-0x34]\n
    char v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x28]\n
    char v15;  // [bp-0x21]\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned long v17;  // [bp-0x18]\n
    unsigned int v18;  // [bp-0x10]\n
    unsigned int v19;  // [bp-0xc]\n
\n
    v19 = 0;\n
    v18 = a0;\n
    v17 = a1;\n
    v5 = 100;\n
    v16 = cgc_initFileSystem(0x200, 0x200, 0xfa000);\n
    cgc_securityIDFileHandle = 255;\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making filesystem.\\n
\", 0x200, 0xfa000, a3, a4);\n
        cgc__terminate(\"Error making filesystem.\\n
\");\n
    }\n
    v16 = cgc_makeMemoryFile(\"sticky.posts\", 0x4347c600, 0xa00, 1, 1);\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making posts.log\\n
\", 0x4347c600, 0xa00, 1, 1);\n
        cgc__terminate(\"Error making posts.log\\n
\");\n
    }\n
    v16 = cgc_makeMemoryFile(\"initialPostID.mem\", 0x4347c000, 4, 1, 1);\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making posts.log\\n
\", 0x4347c000, 4, 1, 1);\n
        cgc__terminate(\"Error making posts.log\\n
\");\n
    }\n
    v16 = cgc_createFile(\"Users.db\", 2, 1);\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making Users.db\\n
\", 2, 1, 1, 1);\n
        cgc__terminate(\"Error making Users.db\\n
\");\n
    }\n
    v16 = cgc_createFile(\"posts.log\", 2, 1);\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making posts.log\\n
\", 2, 1, 1, 1);\n
        cgc__terminate(\"Error making posts.log\\n
\");\n
    }\n
    v15 = cgc_openFile(\"initialPostID.mem\", 1);\n
    if (v15 < 0)\n
    {\n
        cgc_printf(\"Error opening initialPostID.mem\\n
\", 1, 1, 1, 1);\n
        cgc__terminate(\"Error opening initialPostID.mem\\n
\");\n
    }\n
    cgc_readFile(v15, &v5, 4, 0, NULL, 1);\n
    v5 &= 268435455;\n
    cgc_deleteFile(v15, 1);\n
    v16 = cgc_makeMemoryFile(\"UserIDs.mem\", 1128775684, 1532, 1, 1);\n
    if (v16)\n
    {\n
        cgc_printf(\"Error making UserIDs.mem\\n
\", 1128775684, 1532, 1, 1);\n
        cgc__terminate(\"Error making UserIDs.mem\\n
\");\n
    }\n
    v16 = cgc_allocate(a0, 1128775684, 1532);\n
    if (v16)\n
        cgc__terminate(a0);\n
    v1 = 0;\n
    while (((v1 ^ 255) & 1))\n
    {\n
        v12 = cgc_receiveMessage(*(&v13));\n
        v0 = v12;\n
        if (v0 == 100)\n
        {\n
            v1 = 1;\n
        }\n
        else if (v0 == 160)\n
        {\n
            v11 = *(&v13);\n
            a2 = v11 + 42;\n
            if (cgc_create_user(v11, v11 + 21, a2, 1, 1) < 0)\n
                v6 = -1;\n
            else\n
                v6 = 0;\n
            a1 = 4;\n
            cgc_sendResponse(&v6, 4);\n
        }\n
        else if (v0 == 176)\n
        {\n
            v10 = *(&v13);\n
            v14 = cgc_authenticate(v10, v10 + 21, a2, 1, 1);\n
            a1 = 4;\n
            cgc_sendResponse(&v14, 4);\n
        }\n
        else if (v0 == 192)\n
        {\n
            v4 = *(*(&v13));\n
            v16 = cgc_newFeedPost(v4, &v3, &v2, 1, 1);\n
            if (v16)\n
            {\n
                v16 = -1;\n
                a1 = 4;\n
                cgc_sendResponse(&v16, 4);\n
            }\n
            else\n
            {\n
                cgc_sendResponse(*(&v3), *(&v2));\n
                cgc_deallocate(a0, a1);\n
            }\n
        }\n
        else if (v0 == 208)\n
        {\n
            v9 = *(&v13);\n
            v16 = cgc_savePost(v5, *(v9), v9 + 1, 1, 1);\n
            if (v16)\n
            {\n
                v16 = -1;\n
            }\n
            else\n
            {\n
                v16 = v5;\n
                v5 += 1;\n
            }\n
            a1 = 4;\n
            cgc_sendResponse(&v16, 4);\n
        }\n
        else if (v0 == 224)\n
        {\n
            *(&v8[0]) = *(&v13);\n
            v16 = cgc_saveComment(v8[0], v8[1], v8 + 1, 1, 1);\n
            a1 = 4;\n
            cgc_sendResponse(&v16, 4);\n
        }\n
        else if (v0 != 240)\n
        {\n
            v1 = 1;\n
        }\n
        else\n
        {\n
            v7 = *(*(&v13));\n
            if (v7 < 16)\n
            {\n
                v16 = cgc_sendStickPost(v7);\n
            }\n
            else\n
            {\n
                v16 = cgc_retrievePost(v7, 1, &v3, &v2, 1);\n
                if (!v16)\n
                {\n
                    cgc_sendResponse(*(&v3), *(&v2));\n
                    cgc_deallocate(a0, a1);\n
                }\n
            }\n
            if (v16 == -1)\n
            {\n
                a1 = 4;\n
                cgc_sendResponse(&v16, 4);\n
            }\n
        }\n
    }\n
    cgc_printf(\"BYE!\\n
\", a1, a2, 1, 1);\n
    return v19;\n
}\n
", "4235819:sub_40a22b": null, "4235824:cgc_sendStickPost": "long long cgc_sendStickPost(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xd0]\n
    unsigned int v1;  // [bp-0xcc]\n
    char v2;  // [bp-0xc8]\n
    char v3;  // [bp-0x48]\n
    char v4;  // [bp-0x38]\n
    char v5;  // [bp-0x1a]\n
    char v6;  // [bp-0x11]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    if (a0 > 15)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = cgc_openFile(\"sticky.posts\", 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(\"unable to open sticky posts\\n
\", 1, a2, a3, a4);\n
        v7 = -1;\n
        return v7;\n
    }\n
    cgc_fileReadPosition(v6, a0 * 160);\n
    if (cgc_readFile(v6, &v4, 30, 0, &v1, 1))\n
    {\n
        cgc_printf(\"error reading sticky post\\n
\", a1, 30, 0, a4);\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (v1 == 30)\n
    {\n
        v5 = 0;\n
        if (cgc_readFile(v6, &v2, 128, 0, &v1, 1))\n
        {\n
            cgc_printf(\"error reading sticky post\\n
\", a1, 128, 0, a4);\n
            v7 = -1;\n
            return v7;\n
        }\n
        else if (v1 != 128)\n
        {\n
            cgc_printf(\"Error reading data for sticky post\\n
\", a1, 128, 0, a4);\n
            v7 = -1;\n
            return v7;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            for (v0 = 0; v0 < 30; v0 += 1)\n
            {\n
                (&v4)[v0] = (((&v4)[v0] >> 31 CONCAT (&v4)[v0]) /m 26 >> 32) + 65;\n
            }\n
            for (v0 = 0; v0 < 128; v0 += 1)\n
            {\n
                (&v2)[v0] = (((&v2)[v0] >> 31 CONCAT (&v2)[v0]) /m 26 >> 32) + 65;\n
            }\n
            v1 = 30;\n
            cgc_sendResponse(&v1, 4);\n
            cgc_sendResponse(&v4, v1);\n
            v1 = 128;\n
            cgc_sendResponse(&v1, 4);\n
            cgc_sendResponse(&v2, v1);\n
            cgc_closeFile(v6);\n
            v7 = 0;\n
            return v7;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(\"Error reading data for sticky post\\n
\", a1, 30, 0, a4);\n
        v7 = -1;\n
        return v7;\n
    }\n
}\n
", "4236452:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:cgc_deallocate": null, "5242936:cgc_log10": null, "5242944:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}