{"4202496:_init": "extern struct_0 *g_40a5b8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40a5b8;\n
    if (g_40a5b8)\n
        v1 = g_40a5b8();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40a5d8;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40a5d8;\n
    goto *(4236768);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_log2": "// attributes: PLT stub\n
int cgc_log2()\n
{\n
    ::libc.so.0::cgc_log2();\n
    return;\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_cos": "// attributes: PLT stub\n
int cgc_cos()\n
{\n
    ::libc.so.0::cgc_cos();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_tan": "// attributes: PLT stub\n
int cgc_tan()\n
{\n
    ::libc.so.0::cgc_tan();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202736:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4236744);\n
}\n
", "4202752:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202789:sub_402125": null, "4202790:sub_402126": null, "4202800:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40a5b0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202841:sub_402159": null, "4202848:register_tm_clones": "extern unsigned long long g_40a5c0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202905:sub_402199": null, "4202912:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_40a5c8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40a5c8)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202965:sub_4021d5": null, "4202969:sub_4021d9": null, "4202976:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:sub_4021e9": null, "4202992:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_transmit(a0, a1, a2, v6);\n
        if (v0)\n
        {\n
            v4 = 3;\n
            return v4;\n
        }\n
        v2 = v1 + v2;\n
    }\n
}\n
", "4203178:sub_4022aa": null, "4203184:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203332:sub_402344": null, "4203344:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203468:sub_4023cc": null, "4203472:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203600:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203662:sub_40248e": null, "4203664:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203889:sub_402571": null, "4203904:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v7;  // rax\n
    unsigned int v8;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v4 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 = v4 >> 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v8 = v0;\n
        v0 = v8 - 1;\n
        if (v8 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4204111:sub_40264f": null, "4204112:cgc_float_to_str": "long long cgc_float_to_str(char *a0, unsigned long a1)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x4a]\n
    char v1;  // [bp-0x49]\n
    unsigned long long v2;  // [bp-0x48]\n
    char *v3;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_402951;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < a1;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_402951:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204897:sub_402961": null, "4204912:cgc_vprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_vprintf(char *a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x159]\n
    unsigned long v1;  // [bp-0x158]\n
    struct struct_1 **v2;  // [bp-0x150]\n
    struct_2 *v3;  // [bp-0x148]\n
    unsigned int v4;  // [bp-0x13c]\n
    unsigned long v5;  // [bp-0x138]\n
    struct struct_1 **v6;  // [bp-0x130], Other Possible Types: unsigned long\n
    struct_2 *v7;  // [bp-0x128]\n
    unsigned int *v8;  // [bp-0x120]\n
    unsigned int v9;  // [bp-0x114]\n
    unsigned long v10;  // [bp-0x110]\n
    struct struct_1 **v11;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x100]\n
    unsigned int v13;  // [bp-0xf4]\n
    unsigned long v14;  // [bp-0xf0]\n
    unsigned int *v15;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xe0]\n
    unsigned int v17;  // [bp-0xd4]\n
    unsigned int *v18;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_2 *v19;  // [bp-0xc8]\n
    unsigned int v20;  // [bp-0xc0]\n
    unsigned int v21;  // [bp-0xbc]\n
    char *v22;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_0 *v23;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xa8]\n
    struct_0 *v25;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0x94]\n
    struct_0 *v27;  // [bp-0x90], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x88]\n
    char v29;  // [bp-0x81]\n
    unsigned int v30;  // [bp-0x80]\n
    unsigned int v31;  // [bp-0x7c]\n
    unsigned int v32;  // [bp-0x78]\n
    unsigned int v33;  // [bp-0x74]\n
    unsigned int v34;  // [bp-0x70]\n
    unsigned int v35;  // [bp-0x6c]\n
    char v36;  // [bp-0x68]\n
    unsigned int v37;  // [bp-0x24]\n
    char *v38;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v39;  // [bp-0xc]\n
    struct_2 *v41;  // rcx\n
    unsigned long long v42;  // rdx\n
    unsigned int *v43;  // rax\n
    struct_2 *v44;  // rcx\n
    unsigned int *v45;  // rdx\n
    struct_2 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax\n
    struct_2 *v49;  // rcx\n
    unsigned int *v50;  // rdx\n
    struct_2 *v51;  // rcx\n
    unsigned long long v52;  // rdx\n
    struct struct_1 **v53;  // rax\n
    struct_2 *v54;  // rcx\n
    struct struct_1 **v55;  // rdx\n
    unsigned long long v56;  // rdx\n
    struct struct_1 **v57;  // rax\n
    struct_2 *v58;  // rcx\n
    struct struct_1 **v59;  // rdx\n
    struct_2 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    struct struct_1 **v62;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v63;  // rcx\n
\n
    v38 = a0;\n
    v37 = 0;\n
    if (!v38)\n
    {\n
        v39 = -1;\n
        return v39;\n
    }\n
    while (*(v38))\n
    {\n
        if (*(v38) != 64)\n
        {\n
            cgc_putc(*(v38));\n
            v38 += 1;\n
            v37 += 1;\n
LABEL_403376:\n
        }\n
        else\n
        {\n
            v38 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v38) == 64)\n
            {\n
                cgc_putc(64);\n
                v38 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 45)\n
            {\n
                v32 = 1;\n
                v38 += 1;\n
            }\n
            if (cgc_isdigit(*(v38)))\n
            {\n
                if (*(v38) == 48)\n
                {\n
                    v33 = 1;\n
                    v38 += 1;\n
                }\n
                if (cgc_isdigit(*(v38)))\n
                {\n
                    for (v35 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
                }\n
            }\n
            if (*(v38) == 46)\n
            {\n
                v38 += 1;\n
                for (v34 = cgc_atoi(v38); cgc_isdigit(*(v38)); v38 += 1);\n
            }\n
            if (*(v38) == 99)\n
            {\n
                v19 = a1;\n
                v20 = v19->field_0;\n
                if (v20 > 40)\n
                {\n
                    v44 = v19;\n
                    v45 = v44->field_8;\n
                    v44->field_8 = &v45[2];\n
                    v18 = v45;\n
                }\n
                else\n
                {\n
                    v41 = v19;\n
                    v42 = v20;\n
                    v43 = v42 + v41->field_10;\n
                    v41->field_0 = v42 + 8;\n
                    v18 = v43;\n
                }\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                cgc_putc(v29);\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 100)\n
            {\n
                v16 = a1;\n
                v17 = v16->field_0;\n
                if (v17 > 40)\n
                {\n
                    v49 = v16;\n
                    v50 = v49->field_8;\n
                    v49->field_8 = &v50[2];\n
                    v15 = v50;\n
                }\n
                else\n
                {\n
                    v46 = v16;\n
                    v47 = v17;\n
                    v48 = v47 + v46->field_10;\n
                    v46->field_0 = v47 + 8;\n
                    v15 = v48;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; *(v27); v27 += 1)\n
                {\n
                    cgc_putc(*(v27));\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 120)\n
            {\n
                v12 = a1;\n
                v13 = v12->field_0;\n
                if (v13 > 40)\n
                {\n
                    v54 = v12;\n
                    v55 = v54->field_8;\n
                    v54->field_8 = &v55[1];\n
                    v11 = v55;\n
                }\n
                else\n
                {\n
                    v51 = v12;\n
                    v52 = v13;\n
                    v53 = v52 + v51->field_10;\n
                    v51->field_0 = v52 + 8;\n
                    v11 = v53;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; v25->field_0; v25 += 1)\n
                {\n
                    cgc_putc(v25->field_0);\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v37 += 1;\n
                    }\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (*(v38) == 102)\n
            {\n
                v7 = a1;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 > 160)\n
                {\n
                    v58 = v7;\n
                    v59 = v58->field_8;\n
                    v58->field_8 = &v59[1];\n
                    v6 = v59;\n
                }\n
                else\n
                {\n
                    v56 = v9;\n
                    v57 = v56 + v7->field_10;\n
                    *(v8) = v56 + 16;\n
                    v6 = v57;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (!v33)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; v23->field_0; v23 += 1)\n
                {\n
                    cgc_putc(v23->field_0);\n
                    v37 += 1;\n
                }\n
                v38 += 1;\n
                continue;\n
            }\n
            if (!(*(v38) == 115))\n
                goto LABEL_403376;\n
            v3 = a1;\n
            v4 = v3->field_0;\n
            if (v4 > 40)\n
            {\n
                v63 = v3;\n
                v62 = v63->field_8;\n
                v63->field_8 = v62 + 8;\n
            }\n
            else\n
            {\n
                v60 = v3;\n
                v61 = v4;\n
                v62 = v61 + v60->field_10;\n
                v60->field_0 = v61 + 8;\n
            }\n
            v2 = v62;\n
            v22 = &*(v2)->field_0;\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_403213;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_403213:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (!v33)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                cgc_putc(*(v22));\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v37 += 1;\n
                }\n
            }\n
            v38 += 1;\n
        }\n
    }\n
    v39 = v37;\n
    return v39;\n
}\n
", "4207501:sub_40338d": null, "4207504:cgc_vsprintf": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_vsprintf(char *a0, char *a1, struct_2 *a2)\n
{\n
    char v0;  // [bp-0x169]\n
    unsigned long v1;  // [bp-0x168]\n
    struct struct_1 **v2;  // [bp-0x160]\n
    struct_2 *v3;  // [bp-0x158]\n
    unsigned int v4;  // [bp-0x14c]\n
    unsigned long v5;  // [bp-0x148]\n
    unsigned long long *v6;  // [bp-0x140], Other Possible Types: unsigned long\n
    struct_2 *v7;  // [bp-0x138]\n
    unsigned int *v8;  // [bp-0x130]\n
    unsigned int v9;  // [bp-0x124]\n
    unsigned long v10;  // [bp-0x120]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_2 *v12;  // [bp-0x110]\n
    unsigned int v13;  // [bp-0x104]\n
    unsigned long v14;  // [bp-0x100]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_2 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0]\n
    struct_2 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xd0]\n
    unsigned int v21;  // [bp-0xcc]\n
    char *v22;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_0 *v23;  // [bp-0xc0], Other Possible Types: unsigned long\n
    unsigned long v24;  // [bp-0xb8]\n
    struct_0 *v25;  // [bp-0xb0], Other Possible Types: unsigned long\n
    unsigned int v26;  // [bp-0xa4]\n
    struct_0 *v27;  // [bp-0xa0], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0x98]\n
    char v29;  // [bp-0x91]\n
    unsigned int v30;  // [bp-0x90]\n
    unsigned int v31;  // [bp-0x8c]\n
    unsigned int v32;  // [bp-0x88]\n
    unsigned int v33;  // [bp-0x84]\n
    unsigned int v34;  // [bp-0x80]\n
    unsigned int v35;  // [bp-0x7c]\n
    char v36;  // [bp-0x78]\n
    unsigned int v37;  // [bp-0x2c]\n
    struct_2 *v38;  // [bp-0x28]\n
    char *v39;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v40;  // [bp-0xc]\n
    struct_2 *v42;  // rcx\n
    unsigned long long v43;  // rdx\n
    unsigned int *v44;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v45;  // rcx\n
    struct_2 *v46;  // rcx\n
    unsigned long long v47;  // rdx\n
    unsigned int *v48;  // rax\n
    struct_2 *v49;  // rcx\n
    unsigned int *v50;  // rdx\n
    struct_2 *v51;  // rcx\n
    unsigned long long v52;  // rdx\n
    unsigned int *v53;  // rax\n
    struct_2 *v54;  // rcx\n
    unsigned int *v55;  // rdx\n
    unsigned long long v56;  // rdx\n
    unsigned long long *v57;  // rax\n
    struct_2 *v58;  // rcx\n
    unsigned long long *v59;  // rdx\n
    struct_2 *v60;  // rcx\n
    unsigned long long v61;  // rdx\n
    struct struct_1 **v62;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v63;  // rcx\n
\n
    v39 = a1;\n
    v38 = a2;\n
    v37 = 0;\n
    if (!v39)\n
    {\n
        v40 = -1;\n
        return v40;\n
    }\n
    while (*(v39))\n
    {\n
        if (*(v39) != 64)\n
        {\n
            a0[v37] = *(v39);\n
            v39 += 1;\n
            v37 += 1;\n
LABEL_403e7b:\n
        }\n
        else\n
        {\n
            v39 += 1;\n
            v35 = 0;\n
            v34 = 0;\n
            v33 = 0;\n
            v32 = 0;\n
            v30 = 0;\n
            if (*(v39) == 64)\n
            {\n
                a0[v37] = 64;\n
                v39 += 1;\n
                v37 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 45)\n
            {\n
                v32 = 1;\n
                v39 += 1;\n
            }\n
            if (cgc_isdigit(*(v39)))\n
            {\n
                if (*(v39) == 48)\n
                {\n
                    v33 = 1;\n
                    v39 += 1;\n
                }\n
                if (cgc_isdigit(*(v39)))\n
                {\n
                    for (v35 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
                }\n
            }\n
            if (*(v39) == 46)\n
            {\n
                v39 += 1;\n
                for (v34 = cgc_atoi(v39); cgc_isdigit(*(v39)); v39 += 1);\n
            }\n
            if (*(v39) == 99)\n
            {\n
                v19 = v38;\n
                v20 = v19->field_0;\n
                if (v20 > 40)\n
                {\n
                    v45 = v19;\n
                    v44 = v45->field_8;\n
                    v45->field_8 = v44 + 8;\n
                }\n
                else\n
                {\n
                    v42 = v19;\n
                    v43 = v20;\n
                    v44 = v43 + v42->field_10;\n
                    v42->field_0 = v43 + 8;\n
                }\n
                v18 = v44;\n
                v29 = *(v18);\n
                v30 = v35 - 1;\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                a0[v37] = v29;\n
                v37 += 1;\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 100)\n
            {\n
                v16 = v38;\n
                v17 = v16->field_0;\n
                if (v17 <= 40)\n
                {\n
                    v46 = v16;\n
                    v47 = v17;\n
                    v48 = v47 + v46->field_10;\n
                    v46->field_0 = v47 + 8;\n
                    v15 = v48;\n
                }\n
                else\n
                {\n
                    v49 = v16;\n
                    v50 = v49->field_8;\n
                    v49->field_8 = &v50[2];\n
                    v15 = v50;\n
                }\n
                v28 = *(v15);\n
                cgc_int_to_str(v28, &v36);\n
                v14 = v35;\n
                v30 = v14 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v27 = &v36; v27->field_0; v27 += 1)\n
                {\n
                    a0[v37] = v27->field_0;\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 120)\n
            {\n
                v12 = v38;\n
                v13 = v12->field_0;\n
                if (v13 > 40)\n
                {\n
                    v54 = v12;\n
                    v55 = v54->field_8;\n
                    v54->field_8 = &v55[2];\n
                    v11 = v55;\n
                }\n
                else\n
                {\n
                    v51 = v12;\n
                    v52 = v13;\n
                    v53 = v52 + v51->field_10;\n
                    v51->field_0 = v52 + 8;\n
                    v11 = v53;\n
                }\n
                v26 = *(v11);\n
                cgc_int_to_hex(v26, &v36);\n
                v10 = v35;\n
                v30 = v10 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v25 = &v36; v25->field_0; v25 += 1)\n
                {\n
                    a0[v37] = v25->field_0;\n
                    v37 += 1;\n
                }\n
                if (v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (*(v39) == 102)\n
            {\n
                v7 = v38;\n
                v8 = &v7->field_4;\n
                v9 = v7->field_4;\n
                if (v9 <= 160)\n
                {\n
                    v56 = v9;\n
                    v57 = v56 + v7->field_10;\n
                    *(v8) = v56 + 16;\n
                    v6 = v57;\n
                }\n
                else\n
                {\n
                    v58 = v7;\n
                    v59 = v58->field_8;\n
                    v58->field_8 = &v59[1];\n
                    v6 = v59;\n
                }\n
                v24 = *(v6);\n
                cgc_float_to_str(&v36, v34);\n
                v5 = v35;\n
                v30 = v5 - cgc_strlen(&v36);\n
                if (!v32)\n
                {\n
                    for (v31 = 0; v31 < v30; v31 += 1)\n
                    {\n
                        if (v33)\n
                            a0[v37] = 48;\n
                        else\n
                            a0[v37] = 32;\n
                        v37 += 1;\n
                    }\n
                }\n
                for (v23 = &v36; *(v23); v23 += 1)\n
                {\n
                    a0[v37] = *(v23);\n
                    v37 += 1;\n
                }\n
                v39 += 1;\n
                continue;\n
            }\n
            if (!(*(v39) == 115))\n
                goto LABEL_403e7b;\n
            v3 = v38;\n
            v4 = v3->field_0;\n
            if (v4 > 40)\n
            {\n
                v63 = v3;\n
                v62 = v63->field_8;\n
                v63->field_8 = v62 + 8;\n
            }\n
            else\n
            {\n
                v60 = v3;\n
                v61 = v4;\n
                v62 = v61 + v60->field_10;\n
                v60->field_0 = v61 + 8;\n
            }\n
            v2 = v62;\n
            v22 = &*(v2)->field_0;\n
            if (v34 > 0)\n
            {\n
                v1 = v34;\n
                if (v1 < cgc_strlen(v22))\n
                {\n
                    v21 = v34;\n
                    goto LABEL_403ce7;\n
                }\n
            }\n
            v21 = cgc_strlen(v22);\n
LABEL_403ce7:\n
            v30 = v35 - v21;\n
            if (!v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    if (v33)\n
                        a0[v37] = 48;\n
                    else\n
                        a0[v37] = 32;\n
                    v37 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*(v22))\n
                    v0 = 0 < v21;\n
                if (!(v0 & 1))\n
                    break;\n
                a0[v37] = *(v22);\n
                v37 += 1;\n
                v22 += 1;\n
                v21 -= 1;\n
            }\n
            if (v32)\n
            {\n
                for (v31 = 0; v31 < v30; v31 += 1)\n
                {\n
                    a0[v37] = 32;\n
                    v37 += 1;\n
                }\n
            }\n
            v39 += 1;\n
        }\n
    }\n
    v40 = v37;\n
    return v40;\n
}\n
", "4210322:sub_403e92": null, "4210336:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x10f8]\n
    unsigned long v1;  // [bp-0x10f0]\n
    unsigned long v2;  // [bp-0x10e8]\n
    unsigned long v3;  // [bp-0x10e0]\n
    unsigned long v4;  // [bp-0x10d8]\n
    unsigned long v5;  // [bp-0x10d0]\n
    int v6;  // [bp-0x10c8]\n
    int v7;  // [bp-0x10b8]\n
    int v8;  // [bp-0x10a8]\n
    int v9;  // [bp-0x1098]\n
    int v10;  // [bp-0x1088]\n
    int v11;  // [bp-0x1078]\n
    int v12;  // [bp-0x1068]\n
    int v13;  // [bp-0x1058]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4210511:sub_403f4f": null, "4210512:cgc_sprintf": "long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4210676:sub_403ff4": null, "4210688:cgc_sprng": "extern unsigned int position;\n
extern unsigned long long state;\n
\n
long long cgc_sprng(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v3 = a0;\n
    v1 = a0;\n
    for (v0 = 0; v0 < 16; v0 = v3)\n
    {\n
        v1 = v1 >> 12 ^ v1;\n
        v1 = v1 * 0x2000000 ^ v1;\n
        v1 = v1 >> 27 ^ v1;\n
        (&state)[v0] = v1 * 1803442709493370165;\n
        v3 = v0 + 1;\n
    }\n
    position = 0;\n
    return v3;\n
}\n
", "4210825:sub_404089": null, "4210832:cgc_prng": "extern unsigned int position;\n
extern unsigned long long state;\n
\n
long long cgc_prng()\n
{\n
    unsigned long v0;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v1;  // [bp-0x10], Other Possible Types: unsigned long long\n
\n
    v1 = (&state)[position];\n
    position = (position + 1 >> 31 CONCAT position + 1) /m 16 >> 32;\n
    v0 = (&state)[position];\n
    v0 = v0 * 0x8000000 ^ v0;\n
    v0 = v0 >> 13 ^ v0;\n
    v1 = v1 >> 46 ^ v1;\n
    (&state)[position] = v1 ^ v0;\n
    return (&state)[position] * 1865811235122147685;\n
}\n
", "4211008:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (a1 <= a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = a1 - a0 + 1;\n
    v1 = (0 CONCAT -1) /m v2;\n
    do\n
    {\n
        v0 = cgc_prng();\n
    } while (v0 >= v2 * v1);\n
    v3 = (0 CONCAT v0) /m v1 + a0;\n
    return v3;\n
}\n
", "4211120:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return v0;\n
}\n
", "4211203:sub_404203": null, "4211216:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211267:sub_404243": null, "4211280:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211331:sub_404283": null, "4211344:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4211387:sub_4042bb": null, "4211392:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4211435:sub_4042eb": null, "4211440:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211491:sub_404323": null, "4211504:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211595:sub_40438b": null, "4211600:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4211628:sub_4043ac": null, "4211632:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4211684:sub_4043e4": null, "4211696:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_4045d9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_4045d9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_4045d9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_404549:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_4045d9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_404549;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_4045d9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4212253:sub_40461d": null, "4212256:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 10)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4212648:sub_4047a8": null, "4212656:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0[a1]; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    v0[a0] = 0;\n
    return a0;\n
}\n
", "4212759:sub_404817": null, "4212768:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = *((a1 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((a0 + v1)) = *((a1 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        *((a0 + v1)) = 0;\n
    }\n
    return a0;\n
}\n
", "4212941:sub_4048cd": null, "4212944:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4213062:sub_404946": null, "4213072:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    while (true)\n
    {\n
        v0 += 1;\n
        if (!v0)\n
            break;\n
        *((a0 + v0)) = a1;\n
    }\n
    *((a0 + v0)) = a1;\n
    return a0;\n
}\n
", "4213160:sub_4049a8": null, "4213168:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4213286:sub_404a26": null, "4213296:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4213505:sub_404b01": null, "4213520:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4213603:sub_404b63": null, "4213616:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        *((a0 + v2)) = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        *((a0 + v2)) = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4213793:sub_404c21": null, "4213808:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); *((a1 + v1)); v1 += 1)\n
        {\n
            a0[v0] = *((a1 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4213970:sub_404cd2": null, "4213984:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4214216:sub_404dc8": null, "4214224:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    v0 = a0;\n
    cgc_strlen(a0);\n
    cgc_transmit(a0, v2, v3, v4);\n
    return cgc_transmit(a0, v2, v3, v4);\n
}\n
", "4214306:sub_404e22": null, "4214320:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (*(v0) != a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4214436:sub_404ea4": null, "4214448:cgc_strtok": "extern struct_0 *cgc_prev_str;\n
extern unsigned int cgc_prev_str_len;\n
extern struct_0 *cgc_prev_str_ptr;\n
extern struct_0 *cgc_token;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char *v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
\n
    v7 = a0;\n
    if (!a1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v7)\n
    {\n
        if (cgc_prev_str)\n
        {\n
            cgc_deallocate(a0, a1);\n
            cgc_prev_str = 0;\n
            cgc_prev_str_len = 0;\n
            cgc_prev_str_ptr = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_prev_str)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (cgc_prev_str_ptr >= &cgc_prev_str[cgc_prev_str_len])\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!cgc_prev_str)\n
    {\n
        if (cgc_strlen(v7) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_prev_str_len = cgc_strlen(v7);\n
        if (cgc_allocate(a0, a1, v10))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_strcpy(cgc_prev_str, v7);\n
        cgc_prev_str_ptr = cgc_prev_str;\n
    }\n
    v7 = &cgc_prev_str_ptr->field_0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_strchr(a1, *(v7)))\n
            v2 = v7 < &cgc_prev_str[cgc_prev_str_len];\n
        if (!(v2 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (v7 >= &cgc_prev_str[cgc_prev_str_len])\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v6 = v7;\n
    v1 = v7;\n
    v5 = &v1[cgc_strlen(v7)];\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v4 = cgc_strchr(v6, a1[v3]);\n
        if (v4 && v4 && v4 < v5)\n
            v5 = v4;\n
        v3 += 1;\n
    }\n
    cgc_token = v6;\n
    *(v5) = 0;\n
    cgc_prev_str_ptr = v5 + 1;\n
    v8 = cgc_token;\n
    return v8;\n
}\n
", "4215158:sub_405176": null, "4215168:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v1 = a0;\n
    cgc_transmit(a0, a1, v4, v5);\n
    if (a1 != *(&v0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v0);\n
    return v2;\n
}\n
", "4215251:sub_4051d3": null, "4215264:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_strlen(a0);\n
    if (cgc_allocate(a0, v4, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    cgc_bzero(v0, cgc_strlen(a0) + 1);\n
    cgc_strcpy(*(&v1), a0);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4215413:sub_405275": null, "4215424:cgc_calloc": "long long cgc_calloc(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    *(&v0) = cgc_malloc(a0 * a1);\n
    cgc_memset(*(&v0), 0, a0 * a1);\n
    return *(&v0);\n
}\n
", "4215488:cgc_malloc": "extern char cgc_heap_manager;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    unsigned long v1;  // [bp-0x30]\n
    char v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x10]\n
    unsigned long v6;  // rsi\n
    unsigned long v7;  // rdx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rax\n
\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(a0, v6, v7);\n
        cgc_heap_manager = *(&v2);\n
        *(cgc_heap_manager) = 0x1000;\n
        *((cgc_heap_manager + 16)) = 8;\n
        *((cgc_heap_manager + 8)) = 0x1000 - *((cgc_heap_manager + 16));\n
        cgc_allocate(a0, v6, v7, v8);\n
        cgc_memset(*((cgc_heap_manager + 24)), 0, 0x1000);\n
        v3 = *((cgc_heap_manager + 24));\n
        *(v3) = 4072;\n
        *((v3 + 8)) = 0;\n
    }\n
    v3 = *((cgc_heap_manager + 24));\n
    if (a0 > *(v3))\n
    {\n
        cgc_allocate(a0, 0, 0x1000);\n
        if (!*((v3 + 8)))\n
        {\n
            cgc_puts(\"Not enough space available to allocate more heap.  Failure.\");\n
            cgc__terminate(\"Not enough space available to allocate more heap.  Failure.\");\n
        }\n
        v3 = *((v3 + 8));\n
        *(v3) = 4072;\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v9 = v3;\n
        *(v9) = *(v9) - a0;\n
        v1 = v3 + 16;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((*((v1 + 8)) & 1))\n
                v0 = *(v1) < a0 + 16;\n
            if (!(v0 & 1))\n
                break;\n
            v1 = v1 + 16 + *(v1);\n
        }\n
        *(v1) = a0;\n
        *((v1 + 8)) = 1;\n
        v4 = v1 + 16;\n
        return v4;\n
    }\n
}\n
", "4215970:sub_4054a2": null, "4215984:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x10]\n
    unsigned long long *v4;  // rax\n
\n
    v1 = a0 - 16;\n
    v1->field_8 = 2;\n
    v0 = &v2 & -0x1000;\n
    v4 = v0;\n
    *(v4) = v1->field_0 + *(v4);\n
    return v0;\n
}\n
", "4216046:sub_4054ee": null, "4216048:_Block_object_assign": "long long _Block_object_assign(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long v4;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    return v4;\n
}\n
", "4216065:sub_405501": null, "4216080:_Block_object_dispose": "long long _Block_object_dispose(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // rax\n
\n
    v1 = a0;\n
    v0 = a1;\n
    return v3;\n
}\n
", "4216093:sub_40551d": null, "4216096:main": "int main(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = 0;\n
    v1 = a0;\n
    v0 = v4;\n
    cgc_send_empty_frame(0);\n
    cgc_expect_empty_frame(0);\n
    cgc_scramble(0, v4, v5, v6, v7, v8);\n
    if (cgc_scramble_okay(0, v4, v5, v6, v7, v8))\n
    {\n
        while (true)\n
        {\n
            cgc_cool_set_stuff(0, v4, v5, v6, v7, v8);\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            cgc_safe_set_stuff(0, v4, v5, v6, v7, v8);\n
        }\n
    }\n
}\n
", "4216182:sub_405576": null, "4216192:cgc_scramble": "long long cgc_scramble()\n
{\n
    unsigned long long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = cgc_scramble_done();\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = cgc_expect_frame(1);\n
        cgc_handle_scramble(0, v0);\n
        cgc_free_frame(v0);\n
    }\n
    return v2;\n
}\n
", "4216274:sub_4055d2": null, "4216288:cgc_cool_set_stuff": "extern unsigned long long __block_literal_global;\n
\n
long long cgc_cool_set_stuff()\n
{\n
    return cgc_with_set(&__block_literal_global);\n
}\n
", "4216306:sub_4055f2": null, "4216320:__cgc_cool_set_stuff_block_invoke": "long long __cgc_cool_set_stuff_block_invoke(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v1 = cgc_receive_frame();\n
        v0 = *(v1);\n
        if (v0 == 16)\n
        {\n
            cgc_handle_check(a1, v1);\n
        }\n
        else if (v0 == 32)\n
        {\n
            cgc_handle_add(a1, v1);\n
        }\n
        else if (v0 == 48)\n
        {\n
            cgc_handle_subtract(a1, v1);\n
        }\n
        else\n
        {\n
            if (v0 == 64)\n
                break;\n
            cgc__terminate(a0);\n
        }\n
        cgc_free_frame(v1);\n
    }\n
    cgc_free_frame(v1);\n
    return cgc_send_empty_frame(65);\n
}\n
", "4216529:sub_4056d1": null, "4216544:cgc_safe_set_stuff": "extern unsigned long long __block_literal_global.2;\n
\n
long long cgc_safe_set_stuff()\n
{\n
    return cgc_with_set(&__block_literal_global.2);\n
}\n
", "4216562:sub_4056f2": null, "4216576:__cgc_safe_set_stuff_block_invoke": "long long __cgc_safe_set_stuff_block_invoke(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v1 = cgc_receive_frame();\n
        v0 = *(v1);\n
        if (v0 == 16)\n
        {\n
            cgc_handle_check_safe(a1, v1);\n
        }\n
        else if (v0 == 32)\n
        {\n
            cgc_handle_add_safe(a1, v1);\n
        }\n
        else if (v0 == 48)\n
        {\n
            cgc_handle_subtract_safe(a1, v1);\n
        }\n
        else\n
        {\n
            if (v0 == 64)\n
                break;\n
            cgc__terminate(a0);\n
        }\n
        cgc_free_frame(v1);\n
    }\n
    cgc_free_frame(v1);\n
    return cgc_send_empty_frame(65);\n
}\n
", "4216785:sub_4057d1": null, "4216800:cgc_handle_scramble": "long long cgc_handle_scramble(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = *(cgc_extract_scramble_req(a1));\n
    cgc_scramble_add(v0);\n
    return cgc_send_empty_frame(2);\n
}\n
", "4216857:sub_405819": null, "4216864:cgc_handle_check": "long long cgc_handle_check(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1b]\n
    unsigned short v2;  // [bp-0x1a]\n
    unsigned long long v3;  // [bp-0x10]\n
    unsigned long long v6;  // rcx\n
    unsigned int v7;  // eax\n
    unsigned long long v8;  // rdi\n
\n
    v3 = a0;\n
    v2 = *(cgc_extract_check_req(a1));\n
    v1 = cgc_check_set(v3, v2);\n
    v6 = 17;\n
    if (!v1)\n
        v7 = 18;\n
    else\n
        v7 = 17;\n
    v0 = v7;\n
    v8 = v0;\n
    return cgc_send_empty_frame();\n
}\n
", "4216952:sub_405878": null, "4216960:cgc_handle_add": "long long cgc_handle_add(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
\n
    v0 = *(cgc_extract_add_req(a1));\n
    cgc_add_set(a0, v0);\n
    return cgc_send_empty_frame(33);\n
}\n
", "4217021:sub_4058bd": null, "4217024:cgc_handle_subtract": "long long cgc_handle_subtract(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
\n
    v0 = *(cgc_extract_subtract_req(a1));\n
    cgc_subtract_set(a0, v0);\n
    return cgc_send_empty_frame(49);\n
}\n
", "4217085:sub_4058fd": null, "4217088:cgc_handle_check_safe": "long long cgc_handle_check_safe(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1b]\n
    unsigned short v2;  // [bp-0x1a]\n
    unsigned long long v3;  // [bp-0x10]\n
    unsigned long long v6;  // rcx\n
    unsigned int v7;  // eax\n
    unsigned long long v8;  // rdi\n
\n
    v3 = a0;\n
    v2 = *(cgc_extract_check_req(a1));\n
    v1 = cgc_check_set(v3, v2 & 32767);\n
    v6 = 17;\n
    if (!v1)\n
        v7 = 18;\n
    else\n
        v7 = 17;\n
    v0 = v7;\n
    v8 = v0;\n
    return cgc_send_empty_frame();\n
}\n
", "4217184:cgc_handle_add_safe": "long long cgc_handle_add_safe(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
\n
    v0 = *(cgc_extract_add_req(a1));\n
    cgc_add_set(a0, v0 & 32767);\n
    return cgc_send_empty_frame(33);\n
}\n
", "4217253:sub_4059a5": null, "4217264:cgc_handle_subtract_safe": "long long cgc_handle_subtract_safe(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
\n
    v0 = *(cgc_extract_subtract_req(a1));\n
    cgc_subtract_set(a0, v0 & 32767);\n
    return cgc_send_empty_frame(49);\n
}\n
", "4217333:sub_4059f5": null, "4217344:cgc_extract_scramble_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_extract_scramble_req(struct_0 *a0)\n
{\n
    if (a0->field_0 != 1)\n
        cgc__terminate(a0);\n
    if (a0->field_1 != 2)\n
        cgc__terminate(a0);\n
    return a0->field_8;\n
}\n
", "4217423:sub_405a4f": null, "4217424:cgc_extract_check_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_extract_check_req(struct_0 *a0)\n
{\n
    if (a0->field_0 != 16)\n
        cgc__terminate(a0);\n
    if (a0->field_1 != 2)\n
        cgc__terminate(a0);\n
    return a0->field_8;\n
}\n
", "4217503:sub_405a9f": null, "4217504:cgc_extract_add_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_extract_add_req(struct_0 *a0)\n
{\n
    if (a0->field_0 != 32)\n
        cgc__terminate(a0);\n
    if (a0->field_1 != 2)\n
        cgc__terminate(a0);\n
    return a0->field_8;\n
}\n
", "4217583:sub_405aef": null, "4217584:cgc_extract_subtract_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_extract_subtract_req(struct_0 *a0)\n
{\n
    if (a0->field_0 != 48)\n
        cgc__terminate(a0);\n
    if (a0->field_1 != 2)\n
        cgc__terminate(a0);\n
    return a0->field_8;\n
}\n
", "4217663:sub_405b3f": null, "4217664:cgc_allocate_frame": "long long cgc_allocate_frame(unsigned long long a0, unsigned long long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rdx\n
\n
    v1 = a0;\n
    v2 = a1;\n
    if (cgc_allocate(a0, a1, v5))\n
        cgc__terminate(a0);\n
    *(v0) = v1;\n
    v0[1] = *(&v1 + 1);\n
    if (!v0[1])\n
    {\n
        v3 = v0;\n
        return v3;\n
    }\n
    if (cgc_allocate(a0, a1, v5))\n
        cgc__terminate(a0);\n
    v3 = v0;\n
    return v3;\n
}\n
", "4217822:sub_405bde": null, "4217824:cgc_expect_frame": "long long cgc_expect_frame(unsigned long long a0)\n
{\n
    char *v0;  // [bp-0x18]\n
\n
    v0 = cgc_receive_frame();\n
    if (*(v0) != a0)\n
    {\n
        cgc__terminate(a0);\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4217886:sub_405c1e": null, "4217888:cgc_receive_frame": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_receive_frame()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x30]\n
    unsigned long long v2;  // [bp-0x28]\n
    char v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1f]\n
    char v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 2;\n
    v1 = 0;\n
    cgc_receive_eventually(0, &v3, 2);\n
    v0 = cgc_allocate_frame(*(&v3), *(&v5));\n
    if (!v0->field_1)\n
    {\n
        v6 = v0;\n
        return v6;\n
    }\n
    cgc_receive_eventually(0, v0->field_8, v0->field_1);\n
    v6 = v0;\n
    return v6;\n
}\n
", "4218026:sub_405caa": null, "4218032:cgc_receive_eventually": "long long cgc_receive_eventually(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0;\n
    for (v2 = a1; v3 < a2; v2 = v0 + v2)\n
    {\n
        v1 = 0;\n
        v0 = 0;\n
        v1 = cgc_receive(a0, a1, a2, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        if (!v0)\n
            cgc__terminate(a0);\n
        v3 = v0 + v3;\n
    }\n
    return v3;\n
}\n
", "4218199:sub_405d57": null, "4218208:cgc_send_frame": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_send_frame(struct_0 *a0)\n
{\n
    cgc_send_eventually(1, a0, 2);\n
    return cgc_send_eventually(1, a0->field_8, a0->field_1);\n
}\n
", "4218273:sub_405da1": null, "4218288:cgc_send_eventually": "long long cgc_send_eventually(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0;\n
    for (v2 = a1; v3 < a2; v2 = v0 + v2)\n
    {\n
        v1 = 0;\n
        v0 = 0;\n
        v1 = cgc_transmit(a0, a1, a2, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        v3 = v0 + v3;\n
    }\n
    return v3;\n
}\n
", "4218434:sub_405e42": null, "4218448:cgc_send_empty_frame": "char cgc_send_empty_frame(unsigned long a0)\n
{\n
    char v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1f]\n
    void* v2;  // [bp-0x18]\n
\n
    v0 = a0;\n
    v1 = 0;\n
    v2 = 0;\n
    return cgc_send_frame(&v0);\n
}\n
", "4218495:sub_405e7f": null, "4218496:cgc_expect_empty_frame": "long long cgc_expect_empty_frame(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
\n
    v0 = cgc_expect_frame(a0);\n
    return cgc_free_frame(v0);\n
}\n
", "4218538:sub_405eaa": null, "4218544:cgc_free_frame": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_free_frame(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    if (a0->field_8 && cgc_deallocate(a0, v1))\n
        cgc__terminate(a0);\n
    v3 = cgc_deallocate(a0, v1);\n
    if (v3)\n
    {\n
        v3 = cgc__terminate(a0);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218657:sub_405f21": null, "4218672:cgc_scramble_done": "extern char cgc_scramble_steps;\n
\n
long long cgc_scramble_done()\n
{\n
    return 8 <= cgc_scramble_steps;\n
}\n
", "4218699:sub_405f4b": null, "4218704:cgc_scramble_add": "extern char cgc_scramble_steps;\n
extern unsigned int state;\n
\n
long long cgc_scramble_add(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
\n
    if (!cgc_scramble_steps)\n
        state = 0;\n
    v0 = cgc_scramble_steps;\n
    switch (cgc_scramble_steps)\n
    {\n
    case 0:\n
        v8 = cgc_phase_0(a0, state);\n
        state = v8;\n
        break;\n
    case 1:\n
        v7 = cgc_phase_1(state, a0);\n
        state = v7;\n
        break;\n
    case 2:\n
        v6 = cgc_phase_2(a0, state);\n
        state = v6;\n
        break;\n
    case 3:\n
        v5 = cgc_phase_3(state, a0);\n
        state = v5;\n
        break;\n
    case 4:\n
        v4 = cgc_phase_4(a0, state);\n
        state = v4;\n
        break;\n
    case 5:\n
        v3 = cgc_phase_5(state, a0);\n
        state = v3;\n
        break;\n
    case 6:\n
        v2 = cgc_phase_6(a0, state);\n
        state = v2;\n
        break;\n
    case 7:\n
        v1 = cgc_phase_7(state, a0);\n
        state = v1;\n
        break;\n
    default:\n
        cgc__terminate(a0);\n
    }\n
    v10 = state & 255;\n
    state = v10;\n
    *(&v10) = cgc_scramble_steps + 1;\n
    cgc_scramble_steps = cgc_scramble_steps + 1;\n
    return v10;\n
}\n
", "4219088:cgc_scramble_okay": "extern unsigned int state;\n
\n
long long cgc_scramble_okay()\n
{\n
    return (state & 255) == 21;\n
}\n
", "4219119:sub_4060ef": null, "4219120:cgc_phase_0": "long long cgc_phase_0(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_log2();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffdf60f1d72e474<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400748c6943996b8<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe13039139a9fe9<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40010cff30c304f6<64>)))<4>\n
    v2 = v2 ^ v1 * 2 ^ 662804442;\n
    v2 = v2 ^ (v1 >> 8) ^ 436306409;\n
    v2 ^= v1 * 0x1000;\n
    v2 ^= (v1 >> 6);\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400087d9016c96be<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fff833989f0a852<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fc817c8d897fef6<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4006bb84ec12a7c8<64>)))<4>\n
    v2 ^= v1 * 4;\n
    v2 ^= v1 * 0x2000;\n
    v2 = v2 ^ (v1 >> 5) ^ 944261325;\n
    v2 ^= (v1 >> 7);\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008d036419c7d0d<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40039db8f4fb5a14<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40021fdddb656852<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40088223f7bb1d0e<64>)))<4>\n
    v2 = v2 ^ (v1 >> 8) ^ 905813608;\n
    v2 = v2 ^ v1 * 128 ^ 661603067;\n
    v2 = v2 ^ (v1 >> 7) ^ 854646238;\n
    v2 ^= (v1 >> 6);\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400231b2881e5028<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe0c728d50b2bc6<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fc2998695bb76ee<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe4e15b4d892a09<64>)))<4>\n
    v2 ^= v1 * 32;\n
    v2 ^= v1 * 16;\n
    v2 = v2 ^ (v1 >> 12) ^ 258335351;\n
    v2 = v2 ^ (v1 >> 9) ^ 779934883;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220053:sub_406495": null, "4220064:cgc_phase_1": "long long cgc_phase_1(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_tan();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3feca56b78c6743c<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff6820560e00ede<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4002241d380052e7<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe5e0c6a1dedbfb<64>)))<4>\n
    v2 = v2 ^ (v1 >> 6) ^ 439179355;\n
    v2 = v2 ^ (v1 >> 2) ^ 237303735;\n
    v2 ^= v1 * 0x8000;\n
    v2 ^= (v1 >> 11);\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4007f004d768e55b<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd7323fdd7158dc<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffd17509a59a2a8<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fea99c270cfb4d4<64>)))<4>\n
    v2 ^= (v1 >> 6);\n
    v2 ^= v1 * 0x1000;\n
    v2 ^= (v1 >> 9);\n
    v2 ^= (v1 >> 2);\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40089e3bce3808f3<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4001b2eec30bab74<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fc266c5281401ea<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe698ac55e4dbfd<64>)))<4>\n
    v2 = v2 ^ v1 * 0x4000 ^ 327753315;\n
    v2 ^= v1 * 0x800;\n
    v2 ^= (v1 >> 1);\n
    v2 = v2 ^ (v1 >> 10) ^ 196326147;\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffce3657ff49f27<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff18cbb54646061<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40011fae4dcd9f04<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4006cd5399eda8c0<64>)))<4>\n
    v2 ^= (v1 >> 14);\n
    v2 ^= v1 * 8;\n
    v2 ^= v1 * 0x200;\n
    v2 ^= (v1 >> 1);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220977:sub_406831": null, "4220992:cgc_phase_2": "long long cgc_phase_2(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_sin();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4005311a4b03d197<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4000cecffc3bc147<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40054fc4c1bb73d9<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffde9ce9a19f10b<64>)))<4>\n
    v2 ^= v1 * 0x100;\n
    v2 ^= v1 * 128;\n
    v2 ^= v1 * 0x400;\n
    v2 ^= (v1 >> 14);\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff8d3ecbca4d97f<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400130e0a1ee9cec<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe6c4adb1f5462c<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fff47d401cc75fd<64>)))<4>\n
    v2 ^= (v1 >> 8);\n
    v2 ^= v1 * 32;\n
    v2 ^= v1 * 0x200;\n
    v2 ^= (v1 >> 6);\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4005e857a4dfca00<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fecf14bbe6c8d87<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd2ab01c4dc9ea0<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400949a5710d8fca<64>)))<4>\n
    v2 ^= (v1 >> 13);\n
    v2 = v2 ^ (v1 >> 10) ^ 786056884;\n
    v2 = v2 ^ v1 * 0x800 ^ 110291162;\n
    v2 = v2 ^ (v1 >> 5) ^ 576003576;\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff856d3adb94c93<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffa0c09ab61f36d<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe89dfa1c678ac5<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffbbfa12978a04f<64>)))<4>\n
    v2 ^= v1 * 0x800;\n
    v2 ^= (v1 >> 1);\n
    v2 = v2 ^ v1 * 32 ^ 937094273;\n
    v2 = v2 ^ v1 * 0x100 ^ 554664891;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4221910:sub_406bd6": null, "4221920:cgc_phase_3": "long long cgc_phase_3(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_sin();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008414598d8876f<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008bed580d38ed6<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4002ffc78dc0b34d<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40039dcef9bc4dbc<64>)))<4>\n
    v2 = v2 ^ (v1 >> 5) ^ 708674924;\n
    v2 = v2 ^ v1 * 0x8000 ^ 504406548;\n
    v2 ^= v1 * 0x800;\n
    v2 = v2 ^ v1 * 0x8000 ^ 647270034;\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fddd8a16333eeac<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4006bd93fa8861d7<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4002a565c326dce6<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff90f83d0ba2cfd<64>)))<4>\n
    v2 ^= v1 * 0x4000;\n
    v2 ^= (v1 >> 4);\n
    v2 = v2 ^ (v1 >> 7) ^ 991209155;\n
    v2 ^= v1 * 0x400;\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4000289b6423fbc4<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd016f6731c43e8<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400469827c5f0e30<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400263a810be50a8<64>)))<4>\n
    v2 ^= v1 * 0x2000;\n
    v2 = v2 ^ (v1 >> 5) ^ 384808372;\n
    v2 = v2 ^ v1 * 128 ^ 801775006;\n
    v2 = v2 ^ v1 * 0x400 ^ 364518082;\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffae94d0074a5fe<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4000048c3809efd0<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd2f8f5cf08e328<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff5fc8b3da1b54a<64>)))<4>\n
    v2 = v2 ^ (v1 >> 3) ^ 798845264;\n
    v2 ^= (v1 >> 11);\n
    v2 = v2 ^ v1 * 0x2000 ^ 77966248;\n
    v2 ^= v1 * 8;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4222858:sub_406f8a": null, "4222864:cgc_phase_4": "long long cgc_phase_4(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_tan();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40090dd81dec71f1<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe719077c77c748<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff612af81a0f2f3<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4000e9792d382f82<64>)))<4>\n
    v2 ^= (v1 >> 9);\n
    v2 = v2 ^ v1 * 128 ^ 474620929;\n
    v2 = v2 ^ (v1 >> 7) ^ 655549109;\n
    v2 ^= (v1 >> 12);\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff21de5d1cfd2be<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff00468481deb10<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff30ed9e8525c2c<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff6b3dea88635a8<64>)))<4>\n
    v2 ^= v1 * 4;\n
    v2 = v2 ^ v1 * 4 ^ 732118769;\n
    v2 = v2 ^ v1 * 0x400 ^ 1022315769;\n
    v2 ^= v1 * 128;\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff611fda368ae80<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4007cb335a216930<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fbf5ff9e5a8fe0e<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40003503804ec5a5<64>)))<4>\n
    v2 ^= (v1 >> 14);\n
    v2 ^= v1 * 4;\n
    v2 ^= v1 * 8;\n
    v2 ^= v1 * 0x200;\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd75e2626026cca<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd5fe102a954a0c<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fea9dd5aea7fa2a<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fdd4e549a3986a4<64>)))<4>\n
    v2 ^= v1 * 128;\n
    v2 = v2 ^ (v1 >> 12) ^ 213686654;\n
    v2 = v2 ^ v1 * 4 ^ 135412687;\n
    v2 = v2 ^ v1 * 32 ^ 758040657;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4223792:cgc_phase_5": "long long cgc_phase_5(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_sin();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4002183ed27721e9<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd58354327e913c<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fdd725d71317f58<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff6d17a23ecee8b<64>)))<4>\n
    v2 = v2 ^ (v1 >> 4) ^ 139902303;\n
    v2 ^= (v1 >> 12);\n
    v2 = v2 ^ v1 * 0x400 ^ 750961630;\n
    v2 ^= v1 * 0x200;\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff0e78dbf5341de<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4005e80661820291<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffb407c0a78660c<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4007192ab5d3c06f<64>)))<4>\n
    v2 ^= v1 * 4;\n
    v2 = v2 ^ (v1 >> 8) ^ 85809179;\n
    v2 ^= (v1 >> 14);\n
    v2 ^= (v1 >> 2);\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4009cfb055fa371d<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3feea231e2eab753<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff70321a92bebb9<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40020cfd68ddc6ca<64>)))<4>\n
    v2 ^= v1 * 0x8000;\n
    v2 ^= (v1 >> 3);\n
    v2 = v2 ^ (v1 >> 12) ^ 92203185;\n
    v2 = v2 ^ (v1 >> 12) ^ 643455101;\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40063bd474c0909e<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff895fcba095879<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4005c6a0f624138f<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fdd40fe04183fba<64>)))<4>\n
    v2 ^= v1 * 0x4000;\n
    v2 ^= (v1 >> 10);\n
    v2 ^= v1 * 4;\n
    v2 = v2 ^ v1 * 0x200 ^ 1044416787;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4224715:sub_4076cb": null, "4224720:cgc_phase_6": "long long cgc_phase_6(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_sin();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff81d4216bfbc7f<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3febe69b4e5c1953<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff07e1f4d152979<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd305b68cc5f07e<64>)))<4>\n
    v2 ^= (v1 >> 13);\n
    v2 = v2 ^ v1 * 8 ^ 562747429;\n
    v2 ^= v1 * 0x200;\n
    v2 = v2 ^ v1 * 0x4000 ^ 264560968;\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fef93bb3d472f50<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff1bfe0e58e7cd2<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4005377b088e860d<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd03a92fd437fdc<64>)))<4>\n
    v2 ^= v1 * 128;\n
    v2 = v2 ^ v1 * 64 ^ 431783188;\n
    v2 = v2 ^ v1 * 16 ^ 532294563;\n
    v2 ^= v1 * 0x400;\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40044ca644e0864e<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd5d8443b6b4358<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fbd456a53550b28<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ffe741f9f4cbf4f<64>)))<4>\n
    v2 ^= (v1 >> 8);\n
    v2 = v2 ^ (v1 >> 8) ^ 796867605;\n
    v2 = v2 ^ (v1 >> 5) ^ 312637212;\n
    v2 ^= v1 * 0x800;\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fe904020e90beb7<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff1c8a20e649ff8<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff1ae34b46959a1<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff3b8eb6b07bb7a<64>)))<4>\n
    v2 = v2 ^ v1 * 16 ^ 576267867;\n
    v2 = v2 ^ v1 * 0x400 ^ 556306256;\n
    v2 ^= v1 * 0x400;\n
    v2 ^= (v1 >> 8);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4225653:sub_407a75": null, "4225664:cgc_phase_7": "long long cgc_phase_7(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v2 = a0;\n
    v1 = a1;\n
    cgc_tan();\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd6229597420949<64>)))<4>\n
    cgc_tan(a0, a1, v5, v6, v7, v8, *(&v0), *(&v1));\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fc65528dc4b072a<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fec1a0d5d2832fa<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fc0467c621acfc1<64>)))<4>\n
    v2 = v2 ^ v1 * 0x100 ^ 801699904;\n
    v2 = v2 ^ v1 * 0x800 ^ 704955289;\n
    v2 ^= v1 * 0x1000;\n
    v2 = v2 ^ v1 * 0x1000 ^ 1051248570;\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fd242038987b000<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40006668681c6cd1<64>)))<4>\n
    cgc_sin(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x4003a830d265211d<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff8017fc736576a<64>)))<4>\n
    v2 = v2 ^ v1 * 0x200 ^ 716820001;\n
    v2 ^= (v1 >> 5);\n
    v2 ^= (v1 >> 5);\n
    v2 = v2 ^ v1 * 16 ^ 1024254112;\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff8c472f200ef12<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fef8ac1155600a6<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff45a3c68828e84<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40049c9656a01dd3<64>)))<4>\n
    v2 = v2 ^ (v1 >> 4) ^ 445308036;\n
    v2 ^= v1 * 0x400;\n
    v2 ^= (v1 >> 7);\n
    v2 ^= v1 * 32;\n
    cgc_tan(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x400941dc3be5fc2d<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3ff80a71544ac603<64>)))<4>\n
    cgc_cos(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x3fcc8897be3ab9ca<64>)))<4>\n
    cgc_log2(a0, a1, v5, v6, v7, v8);\n
    s_20 =L Conv(128->32, (((0x0<96> CONCAT Load(addr=stack_base-24, size=4, endness=Iend_LE)) * Conv(32->128, Load(addr=stack_base-32, size=4, endness=Iend_LE))) * (0x0<64> CONCAT 0x40000ae3c312486b<64>)))<4>\n
    v2 ^= v1 * 2;\n
    v2 ^= v1 * 0x1000;\n
    v2 ^= v1 * 0x100;\n
    v2 ^= v1 * 32;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4226587:sub_407e1b": null, "4226592:cgc_with_set": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_with_set(struct_1 *a0)\n
{\n
    char *v0;  // [bp-0x1028]\n
    char *v1;  // [bp-0x1020], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x1018]\n
\n
    for (v1 = 0; v1 < 0x1000; v1 += 1)\n
    {\n
        *((&v2 + v1)) = 0;\n
    }\n
    v0 = &v2;\n
    return a0->field_10(a0, v0);\n
}\n
", "4226713:sub_407e99": null, "4226720:cgc_add_set": "long long cgc_add_set(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x13]\n
    char *v3;  // rcx\n
\n
    v1 = 1 << ((a1 & 7) & 31);\n
    v0 = a1 >> 3;\n
    v3 = v0;\n
    v3[a0] = v3[a0] | v1;\n
    return a0;\n
}\n
", "4226788:sub_407ee4": null, "4226800:cgc_subtract_set": "long long cgc_subtract_set(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x13]\n
    char *v3;  // rcx\n
\n
    v1 = (1 << ((a1 & 7) & 31)) ^ -1;\n
    v0 = a1 >> 3;\n
    v3 = v0;\n
    v3[a0] = v3[a0] & v1;\n
    return a0;\n
}\n
", "4226871:sub_407f37": null, "4226880:cgc_check_set": "long long cgc_check_set(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x13]\n
\n
    v1 = 1 << ((a1 & 7) & 31);\n
    v0 = a1 >> 3;\n
    return v0[a0] & v1;\n
}\n
", "4226948:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_log2": null, "5242896:cgc_pow": null, "5242904:cgc__terminate": null, "5242912:cgc_transmit": null, "5242920:cgc_cos": null, "5242928:cgc_allocate": null, "5242936:cgc_rint": null, "5242944:cgc_tan": null, "5242952:cgc_deallocate": null, "5242960:cgc_log10": null, "5242968:cgc_sin": null, "5242976:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}