{"4202496:_init": "extern struct_0 *g_406f20;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406f20;\n
    if (g_406f20)\n
        v1 = g_406f20();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406f40;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406f40;\n
    goto *(4222792);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4222768);\n
}\n
", "4202640:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202677:sub_4020b5": null, "4202678:sub_4020b6": null, "4202688:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406f18;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202729:sub_4020e9": null, "4202736:register_tm_clones": "extern unsigned long long g_406f28;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202793:sub_402129": null, "4202800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406f30;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406f30)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202853:sub_402165": null, "4202857:sub_402169": null, "4202864:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202873:sub_402179": null, "4202880:cgc_DATA8": "extern unsigned long long cgc_state;\n
\n
long long cgc_DATA8(unsigned long a0)\n
{\n
    return *((cgc_state + a0 + 128));\n
}\n
", "4202915:sub_4021a3": null, "4202928:cgc_DATA16": "extern unsigned long long cgc_state;\n
\n
long long cgc_DATA16(unsigned long a0)\n
{\n
    return *((cgc_state + a0 + 128));\n
}\n
", "4202963:sub_4021d3": null, "4202976:cgc_DATA32": "extern unsigned long long cgc_state;\n
\n
long long cgc_DATA32(unsigned long a0)\n
{\n
    return *((cgc_state + a0 + 128));\n
}\n
", "4203010:sub_402202": null, "4203024:cgc_REG8": "extern unsigned long long cgc_state;\n
\n
long long cgc_REG8(unsigned long a0)\n
{\n
    return *((cgc_state + a0));\n
}\n
", "4203055:sub_40222f": null, "4203056:cgc_REG16": "extern unsigned long long cgc_state;\n
\n
long long cgc_REG16(unsigned long a0)\n
{\n
    return *((cgc_state + a0));\n
}\n
", "4203087:sub_40224f": null, "4203088:cgc_REG32": "extern unsigned long long cgc_state;\n
\n
long long cgc_REG32(unsigned long a0)\n
{\n
    return *((cgc_state + a0));\n
}\n
", "4203118:sub_40226e": null, "4203120:cgc_MOVIM8": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOVIM8(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = a1;\n
    return cgc_state;\n
}\n
", "4203159:sub_402297": null, "4203168:cgc_MOVIM16": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOVIM16(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = a1;\n
    return cgc_state;\n
}\n
", "4203210:sub_4022ca": null, "4203216:cgc_MOVIM32": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOVIM32(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = a1;\n
    return cgc_state;\n
}\n
", "4203252:sub_4022f4": null, "4203264:cgc_MOV8": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOV8(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203318:sub_402336": null, "4203328:cgc_MOV16": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOV16(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203384:sub_402378": null, "4203392:cgc_MOV32": "extern unsigned long long cgc_state;\n
\n
long long cgc_MOV32(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_AND8": "extern unsigned long long cgc_state;\n
\n
long long cgc_AND8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) & *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203540:sub_402414": null, "4203552:cgc_AND16": "extern unsigned long long cgc_state;\n
\n
long long cgc_AND16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) & *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203638:sub_402476": null, "4203648:cgc_AND32": "extern unsigned long long cgc_state;\n
\n
long long cgc_AND32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) & *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203726:sub_4024ce": null, "4203728:cgc_OR8": "extern unsigned long long cgc_state;\n
\n
long long cgc_OR8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) | *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203812:sub_402524": null, "4203824:cgc_OR16": "extern unsigned long long cgc_state;\n
\n
long long cgc_OR16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) | *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203910:sub_402586": null, "4203920:cgc_OR32": "extern unsigned long long cgc_state;\n
\n
long long cgc_OR32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) | *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4203998:sub_4025de": null, "4204000:cgc_NOT8": "extern unsigned long long cgc_state;\n
\n
long long cgc_NOT8(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204060:sub_40261c": null, "4204064:cgc_NOT16": "extern unsigned long long cgc_state;\n
\n
long long cgc_NOT16(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204126:sub_40265e": null, "4204128:cgc_NOT32": "extern unsigned long long cgc_state;\n
\n
long long cgc_NOT32(unsigned long a0, unsigned long a1)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204185:sub_402699": null, "4204192:cgc_ADD8": "extern unsigned long long cgc_state;\n
\n
long long cgc_ADD8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) + *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204276:sub_4026f4": null, "4204288:cgc_ADD16": "extern unsigned long long cgc_state;\n
\n
long long cgc_ADD16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) + *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204374:sub_402756": null, "4204384:cgc_ADD32": "extern unsigned long long cgc_state;\n
\n
long long cgc_ADD32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) + *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204462:sub_4027ae": null, "4204464:cgc_SUB8": "extern unsigned long long cgc_state;\n
\n
long long cgc_SUB8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) - *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204548:sub_402804": null, "4204560:cgc_SUB16": "extern unsigned long long cgc_state;\n
\n
long long cgc_SUB16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) - *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204646:sub_402866": null, "4204656:cgc_SUB32": "extern unsigned long long cgc_state;\n
\n
long long cgc_SUB32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((cgc_state + a0)) = *((cgc_state + a1)) - *((cgc_state + a2));\n
    return cgc_state;\n
}\n
", "4204734:sub_4028be": null, "4204736:cgc_LAND8": "short cgc_LAND8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_AND8(a0, a1, a2);\n
}\n
", "4204794:sub_4028fa": null, "4204800:cgc_LAND16": "short cgc_LAND16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_AND16(a0, a1, a2);\n
}\n
", "4204858:sub_40293a": null, "4204864:cgc_LAND32": "short cgc_LAND32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_AND32(a0, a1, a2);\n
}\n
", "4204922:sub_40297a": null, "4204928:cgc_LOR8": "short cgc_LOR8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_OR8(a0, a1, a2);\n
}\n
", "4204986:sub_4029ba": null, "4204992:cgc_LOR16": "short cgc_LOR16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_OR16(a0, a1, a2);\n
}\n
", "4205050:sub_4029fa": null, "4205056:cgc_LOR32": "short cgc_LOR32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_OR32(a0, a1, a2);\n
}\n
", "4205114:sub_402a3a": null, "4205120:cgc_EQ8": "extern unsigned long long cgc_state;\n
\n
long long cgc_EQ8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) != *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV8(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV8(a0, 264);\n
    return v1;\n
}\n
", "4205232:cgc_EQ16": "extern unsigned long long cgc_state;\n
\n
long long cgc_EQ16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) != *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV16(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV16(a0, 268);\n
    return v1;\n
}\n
", "4205344:cgc_EQ32": "extern unsigned long long cgc_state;\n
\n
long long cgc_EQ32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) != *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV32(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV32(a0, 272);\n
    return v1;\n
}\n
", "4205452:sub_402b8c": null, "4205456:cgc_GT8": "extern unsigned long long cgc_state;\n
\n
long long cgc_GT8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) <= *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV8(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV8(a0, 264);\n
    return v1;\n
}\n
", "4205568:cgc_GT16": "extern unsigned long long cgc_state;\n
\n
long long cgc_GT16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) <= *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV16(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV16(a0, 268);\n
    return v1;\n
}\n
", "4205680:cgc_GT32": "extern unsigned long long cgc_state;\n
\n
long long cgc_GT32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (*((cgc_state + a1)) <= *((cgc_state + a2)))\n
    {\n
        v1 = cgc_MOV32(a0, 276);\n
        return v1;\n
    }\n
    v1 = cgc_MOV32(a0, 272);\n
    return v1;\n
}\n
", "4205788:sub_402cdc": null, "4205792:cgc_GTE8": "short cgc_GTE8(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_EQ8(a0, a1, a2);\n
    cgc_GT8(a3, a1, a2);\n
    return cgc_LOR8(a0, a0, a3);\n
}\n
", "4205903:sub_402d4f": null, "4205904:cgc_GTE16": "short cgc_GTE16(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_EQ16(a0, a1, a2);\n
    cgc_GT16(a3, a1, a2);\n
    return cgc_LOR16(a0, a0, a3);\n
}\n
", "4206015:sub_402dbf": null, "4206016:cgc_GTE32": "short cgc_GTE32(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_EQ32(a0, a1, a2);\n
    cgc_GT32(a3, a1, a2);\n
    return cgc_LOR32(a0, a0, a3);\n
}\n
", "4206127:sub_402e2f": null, "4206128:cgc_LT8": "short cgc_LT8(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_GT8(a0, a2, a1);\n
}\n
", "4206186:sub_402e6a": null, "4206192:cgc_LT16": "short cgc_LT16(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_GT16(a0, a2, a1);\n
}\n
", "4206250:sub_402eaa": null, "4206256:cgc_LT32": "short cgc_LT32(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    return cgc_GT32(a0, a2, a1);\n
}\n
", "4206314:sub_402eea": null, "4206320:cgc_LTE8": "short cgc_LTE8(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    return cgc_GTE8(a0, a2, a1, a3);\n
}\n
", "4206392:sub_402f38": null, "4206400:cgc_LTE16": "short cgc_LTE16(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    return cgc_GTE16(a0, a2, a1, a3);\n
}\n
", "4206472:sub_402f88": null, "4206480:cgc_LTE32": "short cgc_LTE32(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    return cgc_GTE32(a0, a2, a1, a3);\n
}\n
", "4206552:sub_402fd8": null, "4206560:cgc_INC8": "short cgc_INC8(unsigned long a0)\n
{\n
    return cgc_ADD8(a0, a0, 260);\n
}\n
", "4206602:sub_40300a": null, "4206608:cgc_INC16": "short cgc_INC16(unsigned long a0)\n
{\n
    return cgc_ADD16(a0, a0, 260);\n
}\n
", "4206650:sub_40303a": null, "4206656:cgc_INC32": "short cgc_INC32(unsigned long a0)\n
{\n
    return cgc_ADD32(a0, a0, 260);\n
}\n
", "4206698:sub_40306a": null, "4206704:cgc_DEC8": "short cgc_DEC8(unsigned long a0)\n
{\n
    return cgc_SUB8(a0, a0, 260);\n
}\n
", "4206746:sub_40309a": null, "4206752:cgc_DEC16": "short cgc_DEC16(unsigned long a0)\n
{\n
    return cgc_SUB16(a0, a0, 260);\n
}\n
", "4206794:sub_4030ca": null, "4206800:cgc_DEC32": "short cgc_DEC32(unsigned long a0)\n
{\n
    return cgc_SUB32(a0, a0, 260);\n
}\n
", "4206842:sub_4030fa": null, "4206848:cgc_MUL32": "long long cgc_MUL32(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long long v1;  // rax\n
\n
    cgc_MOV32(a3, a1);\n
    cgc_MOV32(a3 + 4, a2);\n
    cgc_MOVIM32(a0, 0);\n
    cgc_GT32(a3 + 8, a1, a2);\n
    if (cgc_REG32(a3 + 8))\n
    {\n
        cgc_MOV32(a3, a2);\n
        cgc_MOV32(a3 + 4, a1);\n
    }\n
    cgc_GT32(a3 + 8, a3, 0x100);\n
    while (true)\n
    {\n
        v1 = cgc_REG32(a3 + 8);\n
        if (!v1)\n
            break;\n
        cgc_ADD32(a0, a0, a3 + 4);\n
        cgc_DEC32(a3);\n
        cgc_GT32(a3 + 8, a3, 0x100);\n
    }\n
    return v1;\n
}\n
", "4207139:sub_403223": null, "4207152:cgc_MUL16": "long long cgc_MUL16(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV16(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV16(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV16(a3 + 8, a2);\n
    cgc_MUL32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV16(a0, a3);\n
}\n
", "4207357:sub_4032fd": null, "4207360:cgc_MUL8": "long long cgc_MUL8(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV8(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV8(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV8(a3 + 8, a2);\n
    cgc_MUL32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV8(a0, a3);\n
}\n
", "4207565:sub_4033cd": null, "4207568:cgc_DIV32": "long long cgc_DIV32(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_MOV32(a3, a1);\n
    cgc_MOVIM32(a0, 0);\n
    cgc_EQ32(a3 + 4, a2, 0x100);\n
    v1 = cgc_REG32(a3 + 4);\n
    if (v1)\n
        return v1;\n
    cgc_GTE32(a3 + 4, a3, a2, a3 + 8);\n
    cgc_GT32(a3 + 8, a3, 0x100);\n
    cgc_LAND32(a3 + 12, a3 + 4, a3 + 8);\n
    while (true)\n
    {\n
        v1 = cgc_REG32(a3 + 12);\n
        if (!v1)\n
            break;\n
        cgc_INC32(a0);\n
        cgc_SUB32(a3, a3, a2);\n
        cgc_GTE32(a3 + 4, a3, a2, a3 + 8);\n
        cgc_GT32(a3 + 8, a3, 0x100);\n
        cgc_LAND32(a3 + 12, a3 + 4, a3 + 8);\n
    }\n
    return v1;\n
}\n
", "4207970:sub_403562": null, "4207984:cgc_DIV16": "long long cgc_DIV16(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV16(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV16(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV16(a3 + 8, a2);\n
    cgc_DIV32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV16(a0, a3);\n
}\n
", "4208189:sub_40363d": null, "4208192:cgc_DIV8": "long long cgc_DIV8(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV8(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV8(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV8(a3 + 8, a2);\n
    cgc_DIV32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV8(a0, a3);\n
}\n
", "4208397:sub_40370d": null, "4208400:cgc_REM32": "long long cgc_REM32(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_MOV32(a3, a1);\n
    cgc_MOVIM32(a0, 0);\n
    cgc_EQ32(a3 + 4, a2, 0x100);\n
    v1 = cgc_REG32(a3 + 4);\n
    if (v1)\n
        return v1;\n
    cgc_GTE32(a3 + 4, a3, a2, a3 + 16);\n
    cgc_GT32(a3 + 8, a3, 0x100);\n
    cgc_LAND32(a3 + 12, a3 + 4, a3 + 8);\n
    while (cgc_REG32(a3 + 12))\n
    {\n
        cgc_SUB32(a3, a3, a2);\n
        cgc_GTE32(a3 + 4, a3, a2, a3 + 16);\n
        cgc_GT32(a3 + 8, a3, 0x100);\n
        cgc_LAND32(a3 + 12, a3 + 4, a3 + 8);\n
    }\n
    v1 = cgc_MOV32(a0, a3);\n
    return v1;\n
}\n
", "4208804:sub_4038a4": null, "4208816:cgc_REM16": "long long cgc_REM16(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV16(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV16(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV16(a3 + 8, a2);\n
    cgc_REM32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV16(a0, a3);\n
}\n
", "4209021:sub_40397d": null, "4209024:cgc_REM8": "long long cgc_REM8(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    cgc_MOVIM32(a3, 0);\n
    cgc_MOV8(a3, a0);\n
    cgc_MOVIM32(a3 + 4, 0);\n
    cgc_MOV8(a3 + 4, a1);\n
    cgc_MOVIM32(a3 + 8, 0);\n
    cgc_MOV8(a3 + 8, a2);\n
    cgc_REM32(a3, a3 + 4, a3 + 8, a3 + 12);\n
    return cgc_MOV8(a0, a3);\n
}\n
", "4209229:sub_403a4d": null, "4209232:cgc_INIT_MACHINE": "extern unsigned long long cgc__consts;\n
extern unsigned long long cgc_state;\n
\n
long long cgc_INIT_MACHINE()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1 = 0;\n
    v0 = 0;\n
    v0 = cgc_allocate(v3, v4, v5);\n
    if (v0)\n
        cgc__terminate(v3);\n
    cgc_state = cgc_state - -3816;\n
    cgc__consts = cgc_state + 0x100;\n
    for (v1 = 0; v1 < 0x100; v1 += 4)\n
    {\n
        cgc_MOVIM32(v1, 0);\n
    }\n
    cgc_MOVIM32(0x100, 0);\n
    cgc_MOVIM32(260, 1);\n
    cgc_MOVIM32(264, 255);\n
    cgc_MOVIM32(268, 65535);\n
    cgc_MOVIM32(272, 4294967295);\n
    return cgc_MOVIM32(276, 0);\n
}\n
", "4209483:sub_403b4b": null, "4209488:cgc_printChar": "long long cgc_printChar(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0xb]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = cgc_REG8(a0);\n
    v6 = cgc_transmit(a0, v3, v4, v5);\n
    if (!v6 && *(&v0) == 1)\n
        return v6;\n
    v6 = cgc__terminate(a0);\n
    return v6;\n
}\n
", "4209574:sub_403ba6": null, "4209584:cgc_getChar": "long long cgc_getChar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xb0]\n
    unsigned int v1;  // [bp-0xac]\n
    unsigned int v2;  // [bp-0xa8]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned long long v4;  // [bp-0xa0], Other Possible Types: char\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    char v7;  // [bp-0xf]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long long v10;  // rsi\n
    unsigned long long v11;  // rdx\n
    unsigned long long v12;  // rcx\n
    unsigned long long v13;  // r8\n
\n
    v5 = 0;\n
    v2 = 1;\n
    v3 = 0;\n
    v1 = 0;\n
    for (v0 = 0; v0 < 16; v0 += 1)\n
    {\n
        *(&(&v4)[8 * v0]) = 0;\n
    }\n
    v4 = *(&v4) | 1;\n
    v5 = cgc_fdwait(a0, v10, v11, v12, v13);\n
    if (!v5 && v1 == 1)\n
    {\n
        v5 = cgc_receive(a0, v10, v11, v12);\n
        if (!v5 && *(&v6))\n
        {\n
            cgc_MOVIM8(a0, v7);\n
            v8 = 0;\n
            return v8;\n
        }\n
        v8 = -1;\n
        return v8;\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4209892:sub_403ce4": null, "4209904:cgc_printString": "long long cgc_printString(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
    unsigned short v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xe]\n
\n
    v2 = a2;\n
    v1 = v2;\n
    cgc_MOV16(v1, a0);\n
    v2 += 2;\n
    cgc_MOVIM8(v2, 0);\n
    while (true)\n
    {\n
        v0 = v2 + 1;\n
        cgc_MOV8(v0, cgc_REG16(v1));\n
        cgc_EQ8(v2 + 2, 0x100, v2 + 1);\n
        if (cgc_REG8(v2 + 2))\n
            break;\n
        cgc_printChar(v2 + 1);\n
        cgc_INC8(v2);\n
        cgc_INC16(v1);\n
    }\n
    return cgc_MOV8(a1, v2);\n
}\n
", "4210135:sub_403dd7": null, "4210144:cgc_printReg32": "long long cgc_printReg32(unsigned long a0, unsigned long a1)\n
{\n
    unsigned short v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1e]\n
    unsigned short v2;  // [bp-0x1c]\n
    unsigned short v3;  // [bp-0x1a]\n
    unsigned short v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x16]\n
    unsigned short v6;  // [bp-0x14]\n
    unsigned short v7;  // [bp-0x12]\n
    unsigned short v8;  // [bp-0x10]\n
    unsigned short v9;  // [bp-0xe]\n
    unsigned long long v11;  // rax\n
\n
    cgc_MOV32(a1, a0);\n
    v9 = a1 + 4;\n
    cgc_MOVIM32(v9, 0x3b9aca00);\n
    cgc_MOVIM32(v9 + 4, 0x5f5e100);\n
    cgc_MOVIM32(v9 + 8, 10000000);\n
    cgc_MOVIM32(v9 + 12, 1000000);\n
    cgc_MOVIM32(v9 + 16, 100000);\n
    cgc_MOVIM32(v9 + 20, 10000);\n
    cgc_MOVIM32(v9 + 24, 1000);\n
    cgc_MOVIM32(v9 + 28, 100);\n
    cgc_MOVIM32(v9 + 32, 10);\n
    cgc_MOVIM32(v9 + 36, 1);\n
    v8 = v9 + 40;\n
    cgc_MOVIM16(v8, 4);\n
    v7 = v8 + 2;\n
    cgc_MOVIM16(v7, v9 + 40);\n
    v6 = v7 + 2;\n
    v5 = v6 + 2;\n
    v4 = v5 + 2;\n
    cgc_MOVIM16(v6, v9);\n
    while (true)\n
    {\n
        cgc_GT16(v5, v7, v6);\n
        v11 = cgc_REG16(v5);\n
        if (!v11)\n
            break;\n
        v0 = v4;\n
        v1 = a1;\n
        cgc_DIV32(v0, v1, cgc_REG16(v6), v4 + 5);\n
        cgc_MOVIM8(v4 + 4, 48);\n
        cgc_ADD8(v4 + 4, v4 + 4, v4);\n
        cgc_printChar(v4 + 4);\n
        v2 = a1;\n
        v3 = a1;\n
        cgc_REM32(v2, v3, cgc_REG16(v6), v4 + 5);\n
        cgc_ADD16(v6, v6, v8);\n
    }\n
    return v11;\n
}\n
", "4210780:sub_40405c": null, "4210784:cgc_printReg16": "long long cgc_printReg16(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM32(a1, 0);\n
    cgc_MOV16(a1, a0);\n
    return cgc_printReg32(a1, a1 + 4);\n
}\n
", "4210861:sub_4040ad": null, "4210864:cgc_printReg8": "long long cgc_printReg8(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM32(a1, 0);\n
    cgc_MOV8(a1, a0);\n
    return cgc_printReg32(a1, a1 + 4);\n
}\n
", "4210941:sub_4040fd": null, "4210944:cgc_isSpace": "long long cgc_isSpace(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM8(a1, 32);\n
    cgc_MOVIM8(a1 + 1, 9);\n
    cgc_EQ8(a1 + 2, a0, a1);\n
    cgc_EQ8(a1 + 3, a0, a1 + 1);\n
    cgc_LOR8(a1 + 2, a1 + 2, a1 + 3);\n
    return cgc_REG8(a1 + 2);\n
}\n
", "4211129:sub_4041b9": null, "4211136:cgc_isNumber": "long long cgc_isNumber(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM8(a1, 48);\n
    cgc_SUB8(a1 + 1, a0, a1);\n
    cgc_MOVIM8(a1 + 2, 10);\n
    cgc_LT8(a1 + 3, a1 + 1, a1 + 2);\n
    return cgc_REG8(a1 + 3);\n
}\n
", "4211286:sub_404256": null, "4211296:cgc_isUpLetter": "long long cgc_isUpLetter(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM8(a1, 65);\n
    cgc_MOVIM8(a1 + 1, 90);\n
    cgc_GTE8(a1 + 2, a0, a1, a1 + 3);\n
    cgc_LTE8(a1 + 3, a0, a1 + 1, a1 + 4);\n
    cgc_LAND8(a1 + 2, a1 + 2, a1 + 3);\n
    return cgc_REG8(a1 + 2);\n
}\n
", "4211507:sub_404333": null, "4211520:cgc_isLowLetter": "long long cgc_isLowLetter(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM8(a1, 97);\n
    cgc_MOVIM8(a1 + 1, 122);\n
    cgc_GTE8(a1 + 2, a0, a1, a1 + 3);\n
    cgc_LTE8(a1 + 3, a0, a1 + 1, a1 + 4);\n
    cgc_LAND8(a1 + 2, a1 + 2, a1 + 3);\n
    return cgc_REG8(a1 + 2);\n
}\n
", "4211731:sub_404413": null, "4211744:cgc_isSpecial": "long long cgc_isSpecial(unsigned long a0, unsigned long a1)\n
{\n
    cgc_MOVIM8(a1, 33);\n
    cgc_MOVIM8(a1 + 1, 47);\n
    cgc_MOVIM8(a1 + 2, 58);\n
    cgc_MOVIM8(a1 + 3, 64);\n
    cgc_MOVIM8(a1 + 4, 91);\n
    cgc_MOVIM8(a1 + 5, 96);\n
    cgc_MOVIM8(a1 + 6, 80);\n
    cgc_MOVIM8(a1 + 7, 126);\n
    cgc_GTE8(a1 + 10, a0, a1, a1 + 12);\n
    cgc_LTE8(a1 + 11, a0, a1 + 1, a1 + 13);\n
    cgc_LAND8(a1 + 9, a1 + 10, a1 + 11);\n
    cgc_MOV8(a1 + 8, a1 + 9);\n
    cgc_GTE8(a1 + 10, a0, a1 + 2, a1 + 12);\n
    cgc_LTE8(a1 + 11, a0, a1 + 3, a1 + 13);\n
    cgc_LAND8(a1 + 9, a1 + 10, a1 + 11);\n
    cgc_LOR8(a1 + 8, a1 + 8, a1 + 9);\n
    cgc_GTE8(a1 + 10, a0, a1 + 4, a1 + 12);\n
    cgc_LTE8(a1 + 11, a0, a1 + 5, a1 + 13);\n
    cgc_LAND8(a1 + 9, a1 + 10, a1 + 11);\n
    cgc_LOR8(a1 + 8, a1 + 8, a1 + 9);\n
    cgc_GTE8(a1 + 10, a0, a1 + 6, a1 + 12);\n
    cgc_LTE8(a1 + 11, a0, a1 + 7, a1 + 13);\n
    cgc_LAND8(a1 + 9, a1 + 10, a1 + 11);\n
    cgc_LOR8(a1 + 8, a1 + 8, a1 + 9);\n
    return cgc_REG8(a1 + 8);\n
}\n
", "4212637:sub_40479d": null, "4212640:cgc_insertString": "long long cgc_insertString(unsigned long a0, char *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1a]\n
    unsigned long long v3;  // ax, Other Possible Types: unsigned long, unsigned short\n
\n
    v3 = a2;\n
    v1 = a2;\n
    v0 = 0;\n
    if (!a1)\n
        return v3;\n
    cgc_MOV16(v1, a0);\n
    while (true)\n
    {\n
        v3 = a1[v0];\n
        if (!v3)\n
            break;\n
        cgc_MOVIM8(cgc_REG16(v1), a1[v0]);\n
        cgc_INC16(v1);\n
        v0 += 1;\n
    }\n
    return a1[v0];\n
}\n
", "4212787:sub_404833": null, "4212800:main": "int main(unsigned long a0, unsigned long a1)\n
{\n
    unsigned short v0;  // [bp-0x38]\n
    unsigned short v1;  // [bp-0x36]\n
    unsigned short v2;  // [bp-0x34]\n
    unsigned short v3;  // [bp-0x32]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned short v5;  // [bp-0x2e]\n
    unsigned short v6;  // [bp-0x2c]\n
    unsigned short v7;  // [bp-0x2a]\n
    unsigned short v8;  // [bp-0x28]\n
    unsigned short v9;  // [bp-0x26]\n
    unsigned short v10;  // [bp-0x24]\n
    unsigned short v11;  // [bp-0x22]\n
    unsigned short v12;  // [bp-0x20]\n
    unsigned short v13;  // [bp-0x1e]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned long v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x10]\n
    unsigned int v17;  // [bp-0xc]\n
\n
    v17 = 0;\n
    v16 = a0;\n
    v15 = a1;\n
    v14 = 0;\n
    cgc_INIT_MACHINE();\n
    v13 = 1;\n
    v12 = 2;\n
    v11 = 3;\n
    v10 = 4;\n
    v9 = 5;\n
    v8 = 6;\n
    cgc_MOVIM8(v13, 0);\n
    cgc_MOVIM8(v8, 0);\n
    cgc_MOVIM8(v12, 0);\n
    cgc_MOVIM8(v11, 0);\n
    cgc_MOVIM8(v10, 0);\n
    cgc_MOVIM8(v9, 0);\n
    v7 = 7;\n
    v6 = 9;\n
    v5 = 11;\n
    v4 = 13;\n
    v3 = 15;\n
    v2 = 17;\n
    v1 = 19;\n
    cgc_MOVIM16(v7, 128);\n
    cgc_MOVIM16(v4, 144);\n
    cgc_MOVIM16(v6, 160);\n
    cgc_MOVIM16(v5, 176);\n
    cgc_MOVIM16(v3, 192);\n
    cgc_MOVIM16(v2, 208);\n
    cgc_MOVIM16(v1, 224);\n
    v0 = 21;\n
    cgc_insertString(v7, \"numbers  = \", v0);\n
    cgc_insertString(v4, \"spaces   = \", v0);\n
    cgc_insertString(v6, \"uppers   = \", v0);\n
    cgc_insertString(v5, \"lowers   = \", v0);\n
    cgc_insertString(v3, \"special  = \", v0);\n
    cgc_insertString(v2, \"other    = \", v0);\n
    cgc_MOVIM8(cgc_REG16(v1), 10);\n
    cgc_MOVIM32(cgc_REG16(v1) + 1, 0);\n
    while (true)\n
    {\n
        v14 = cgc_getChar(v0);\n
        if (v14 == -1)\n
            break;\n
        if (cgc_isUpLetter(v0, v0 + 1))\n
        {\n
            cgc_INC8(v12);\n
        }\n
        else if (cgc_isLowLetter(v0, v0 + 1))\n
        {\n
            cgc_INC8(v11);\n
        }\n
        else if (cgc_isNumber(v0, v0 + 1))\n
        {\n
            cgc_INC8(v13);\n
        }\n
        else if (cgc_isSpace(v0, v0 + 1))\n
        {\n
            cgc_INC8(v8);\n
        }\n
        else if (!cgc_isSpecial(v0, v0 + 1))\n
        {\n
            cgc_INC8(v9);\n
        }\n
        else\n
        {\n
            cgc_INC8(v10);\n
        }\n
        cgc_printChar(v0);\n
    }\n
    cgc_printString(v7, v0, v0 + 4);\n
    cgc_printReg8(v13, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    cgc_printString(v6, v0, v0 + 4);\n
    cgc_printReg8(v12, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    cgc_printString(v5, v0, v0 + 4);\n
    cgc_printReg8(v11, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    cgc_printString(v4, v0, v0 + 4);\n
    cgc_printReg8(v8, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    cgc_printString(v3, v0, v0 + 4);\n
    cgc_printReg8(v10, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    cgc_printString(v2, v0, v0 + 4);\n
    cgc_printReg8(v9, v0);\n
    cgc_printString(v1, v0, v0 + 4);\n
    return 0;\n
}\n
", "4214024:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}